16:02:58 SQL> @/dbbackups/ECST/migrations/core_owner/58.2-release-1.16.0-1-CORE-common.sql/upgrade.sql
16:02:58 SQL> --------------------------------------------------------------------------------
16:02:58 SQL> -- DDL for package APP_EXCEPTION_CODES
16:02:58 SQL> --------------------------------------------------------------------------------
16:02:58 SQL> 
16:02:58 SQL> CREATE OR REPLACE PACKAGE "APP_EXCEPTION_CODES_V22"
16:02:58   2  AS
16:02:58   3  -- norlov 09.09 : current_timestamp replaced by sysdate
16:02:58   4  -- in comparisons (according to #38816)
16:02:58   5  -- 2010-09-13: according to #38860, current_timestamp calls replaced by SYSDATE variable
16:02:58   6  -- to use the same date in whole procedure, also single current_timestamp calls
16:02:58   7  -- replaced by SYSDATE calls
16:02:58   8  
16:02:58   9  
16:02:58  10  	-- EXCEPTION CODES
16:02:58  11  	UNKNOWN_ERROR	  CONSTANT NUMBER := -20001;
16:02:58  12  	NOT_FOUND	  CONSTANT NUMBER := -20002;
16:02:58  13  	STATE_ERROR	  CONSTANT NUMBER := -20003;
16:02:58  14  	DUPLICATE_ERROR   CONSTANT NUMBER := -20004;
16:02:58  15  	HISTORY_ERROR	  CONSTANT NUMBER := -20005;
16:02:58  16  	INVALID_PARAMETER CONSTANT NUMBER := -20006;
16:02:58  17  	INTERNAL_ERROR	  CONSTANT NUMBER := -20007;
16:02:58  18  	CONFLICT_ERROR	  CONSTANT NUMBER := -20008;
16:02:58  19  END APP_EXCEPTION_CODES_V22;
16:02:58  20  .
16:02:58 SQL> /

Package created.

Elapsed: 00:00:00.20
16:02:58 SQL> 
16:02:58 SQL> 
16:02:58 SQL> 
16:02:58 SQL> --------------------------------------------------------------------------------
16:02:58 SQL> -- DDL for package GLOBAL_CONSTANTS
16:02:58 SQL> --------------------------------------------------------------------------------
16:02:58 SQL> 
16:02:58 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_CONSTANTS_V22" AS
16:02:58   2  
16:02:58   3  TRUE  CONSTANT NUMBER := 1;
16:02:58   4  FALSE CONSTANT NUMBER := 0;
16:02:58   5  
16:02:58   6  INFINITY CONSTANT NUMBER := -1;
16:02:58   7  
16:02:58   8  ONE_DAY_INTERVAL	 CONSTANT INTERVAL DAY TO SECOND := INTERVAL '1' DAY;
16:02:58   9  ONE_MONTH_INTERVAL CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' MONTH;
16:02:58  10  ONE_YEAR_INTERVAL   CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' YEAR;
16:02:58  11  
16:02:58  12  -- Exception delimeter
16:02:58  13  EXCEPTION_DELIMETER CONSTANT VARCHAR2(1) := chr(10);
16:02:58  14  
16:02:58  15  -- Number of days when core should return all money
16:02:58  16  OFFER_START_GRACE_PERIOD CONSTANT NUMBER := 7;
16:02:58  17  
16:02:58  18  -- NUmber of days when core should not return any money
16:02:58  19  OFFER_END_GRACE_PERIOD   CONSTANT NUMBER := 7;
16:02:58  20  
16:02:58  21  -- OFFER CHAIN: is refundable META DATTA RULE
16:02:58  22  OFFER_CHAIN_IS_REFUNDABLE   CONSTANT NUMBER := 1;
16:02:58  23  OFFER_CHAIN_REFUNDABLE_RULE CONSTANT VARCHAR2(10) := 'REFUNDABLE';
16:02:58  24  
16:02:58  25  -- OFFER CHAIN REFUNDABLE RULES
16:02:58  26  OFFER_CHAIN_FULL_REFUND	  CONSTANT VARCHAR2(22) := 'FULL_REFUND_DAYS_LIMIT';
16:02:58  27  OFFER_CHAIN_PRORATED_REFUND CONSTANT VARCHAR2(26) := 'PRORATED_REFUND_DAYS_LIMIT';
16:02:58  28  
16:02:58  29  -- norlov: name of the OC eligibility
16:02:58  30  GIFT_CERTIFICATE_REQUIRED CONSTANT VARCHAR2(25) := 'gift certificate required';
16:02:58  31  
16:02:58  32  -- norlov: flag for set elibility
16:02:58  33  ELIGIBILITY_FLAG_SET CONSTANT VARCHAR2(1) := '1';
16:02:58  34  
16:02:58  35  -- norlov: name of OC metadata
16:02:58  36  REDEMPTION_OC_ID CONSTANT VARCHAR2(25) := 'redemption offer chain id';
16:02:58  37  
16:02:58  38  -- norlov: name of the OC eligibility
16:02:58  39  MAX_CONCURRENT_SUBS CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
16:02:58  40  
16:02:58  41  -- norlov: 'unlimited' value for max concurrent subscription number
16:02:58  42  MAX_CONCURRENT_SUBS_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
16:02:58  43  
16:02:58  44  -- 'unlimited' value for max concurrent products number
16:02:58  45  MAX_CONSURRENT_PRD_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
16:02:58  46  
16:02:58  47  -- UPGRADABLE_OFFER_CHAIN_ID
16:02:58  48  OCMD_UPGRADABLE_OFFER_CHAIN_ID CONSTANT VARCHAR(25) := 'UPGRADABLE_OFFER_CHAIN_ID';
16:02:58  49  
16:02:58  50  -- Max number of records that should be return
16:02:58  51  MAX_RETURN_COUNT NUMBER := 1000;
16:02:58  52  
16:02:58  53  -- Share end date for non-group-pass group accounts
16:02:58  54  MAX_DATE CONSTANT DATE := TO_DATE('12/31/9999', 'MM/DD/YYYY');
16:02:58  55  
16:02:58  56  END GLOBAL_CONSTANTS_V22;
16:02:58  57  .
16:02:58 SQL> /

Package created.

Elapsed: 00:00:00.10
16:02:59 SQL> 
16:02:59 SQL> 
16:02:59 SQL> 
16:02:59 SQL> --------------------------------------------------------------------------------
16:02:59 SQL> -- DDL for package GLOBAL_ENUMS
16:02:59 SQL> --------------------------------------------------------------------------------
16:02:59 SQL> 
16:02:59 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_ENUMS_V22" AS
16:02:59   2  
16:02:59   3  ----
16:02:59   4  -- CREDIT CARD TYPES
16:02:59   5  
16:02:59   6  CREDIT_CARD_AMEX	      CONSTANT NUMBER := 1;
16:02:59   7  CREDIT_CARD_VISA	      CONSTANT NUMBER := 2;
16:02:59   8  CREDIT_CARD_MASTER_CARD CONSTANT NUMBER := 3;
16:02:59   9  CREDIT_CARD_DISCOVER    CONSTANT NUMBER := 4;
16:02:59  10  
16:02:59  11  ----
16:02:59  12  -- INSTRUMENT TYPE
16:02:59  13  
16:02:59  14  INSTRUMENT_CREDIT_CARD	   CONSTANT NUMBER := 1;
16:02:59  15  INSTRUMENT_PAYPAL 	   CONSTANT NUMBER := 2;
16:02:59  16  INSTRUMENT_GIFT_CERTIFICATE  CONSTANT NUMBER := 3;
16:02:59  17  INSTRUMENT_ZCI_INSTRUMENT    CONSTANT NUMBER := 4;
16:02:59  18  
16:02:59  19  ----
16:02:59  20  -- SYSTEM ACTIVITY REASONS
16:02:59  21  
16:02:59  22  SAC_SYSTEM_APPLIED_RULE CONSTANT NUMBER := 1;
16:02:59  23  
16:02:59  24  ----
16:02:59  25  -- GIFT CERTIFICATES TYPE
16:02:59  26  
16:02:59  27  GSTYPE_GSTYPE1 CONSTANT NUMBER := 1;
16:02:59  28  GSTYPE_GSTYPE2 CONSTANT NUMBER := 2;
16:02:59  29  
16:02:59  30  ----
16:02:59  31  -- SYSTEM CATEGORY
16:02:59  32  
16:02:59  33  SYSTEM_CATEGORY_LIVE CONSTANT NUMBER := 1;
16:02:59  34  SYSTEM_CATEGORY_TEST CONSTANT NUMBER := 2;
16:02:59  35  
16:02:59  36  ----
16:02:59  37  -- OFFER_RECURRENCES
16:02:59  38  
16:02:59  39  OFFER_REC_INFINITY CONSTANT NUMBER := -1;
16:02:59  40  
16:02:59  41  ----
16:02:59  42  -- TAX JURISDICTION LEVELS
16:02:59  43  -- We need only international right now
16:02:59  44  
16:02:59  45  JURIS_INTERNATIONAL CONSTANT NUMBER := 5;
16:02:59  46  
16:02:59  47  ----
16:02:59  48  -- TAX TYPES
16:02:59  49  
16:02:59  50  TAX_TYPE_SALES CONSTANT NUMBER := 1;
16:02:59  51  TAX_TYPE_VAT   CONSTANT NUMBER := 2;
16:02:59  52  
16:02:59  53  END GLOBAL_ENUMS_V22;
16:02:59  54  .
16:02:59 SQL> /

Package created.

Elapsed: 00:00:00.05
16:02:59 SQL> 
16:02:59 SQL> 
16:02:59 SQL> 
16:02:59 SQL> --------------------------------------------------------------------------------
16:02:59 SQL> -- DDL for package GLOBAL_STATUSES
16:02:59 SQL> --------------------------------------------------------------------------------
16:02:59 SQL> 
16:02:59 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_STATUSES_V22" AS
16:02:59   2  
16:02:59   3  REAL_TIME_CANCEL_REASON CONSTANT NUMBER := 41;
16:02:59   4  
16:02:59   5  ----
16:02:59   6  -- ACCOUNT STATUSES
16:02:59   7  
16:02:59   8  ACCOUNT_ACTIVE   CONSTANT NUMBER := 1;
16:02:59   9  ACCOUNT_FROZEN   CONSTANT NUMBER := 2;
16:02:59  10  ACCOUNT_DISABLED CONSTANT NUMBER := 3;
16:02:59  11  
16:02:59  12  ----
16:02:59  13  -- SUBSCRIPTION STATUSES
16:02:59  14  
16:02:59  15  SUBSCRIPTION_ACTIVE	   CONSTANT NUMBER := 1;
16:02:59  16  SUBSCRIPTION_SUSPENDED	   CONSTANT NUMBER := 2;
16:02:59  17  SUBSCRIPTION_CANCELED	   CONSTANT NUMBER := 3;
16:02:59  18  SUBSCRIPTION_CLOSED	   CONSTANT NUMBER := 4;
16:02:59  19  SUBSCRIPTION_FALSE_START	   CONSTANT NUMBER := 5;
16:02:59  20  SUBSCRIPTION_IN_GRACE_PERIOD CONSTANT NUMBER := 6;
16:02:59  21  
16:02:59  22  ----
16:02:59  23  -- CREDIT_CARD STATUSES
16:02:59  24  
16:02:59  25  CREDIT_CARD_ACTIVE   CONSTANT NUMBER := 1;
16:02:59  26  CREDIT_CARD_INVALID  CONSTANT NUMBER := 2; -- WAS INACTIVE
16:02:59  27  CREDIT_CARD_DISABLED CONSTANT NUMBER := 3; -- WAS FROZEN
16:02:59  28  CREDIT_CARD_EXPIRED  CONSTANT NUMBER := 4;
16:02:59  29  
16:02:59  30  ----
16:02:59  31  -- PAYPAL STATUSES
16:02:59  32  
16:02:59  33  PAYPAL_ACTIVE   CONSTANT NUMBER := 1;
16:02:59  34  PAYPAL_INACTIVE CONSTANT NUMBER := 2;
16:02:59  35  PAYPAL_FROZEN   CONSTANT NUMBER := 3;
16:02:59  36  
16:02:59  37  ----
16:02:59  38  -- GIFT_CERTIFICATE STATUSES
16:02:59  39  
16:02:59  40  GIFT_CERTIFICATE_ACTIVE	 CONSTANT NUMBER := 1;
16:02:59  41  GIFT_CERTIFICATE_FINALIZED CONSTANT NUMBER := 2;
16:02:59  42  GIFT_CERTIFICATE_REFUNDED  CONSTANT NUMBER := 3;
16:02:59  43  
16:02:59  44  ----
16:02:59  45  -- TRANSACTION STATUSES
16:02:59  46  
16:02:59  47  TRANSACTION_PENDING	     CONSTANT NUMBER := 1;
16:02:59  48  TRANSACTION_CLOSED	     CONSTANT NUMBER := 2;
16:02:59  49  TRANSACTION_CHARGEBACK	     CONSTANT NUMBER := 3;
16:02:59  50  TRANSACTION_PREPARE	     CONSTANT NUMBER := 1;
16:02:59  51  TRANSACTION_DECLINED	     CONSTANT NUMBER := 7;
16:02:59  52  
16:02:59  53  ----
16:02:59  54  -- TRANSACTION_ATTEMPT_STATUS
16:02:59  55  TRANS_ATTEMPT_IN_PROGRESS CONSTANT NUMBER := 1;
16:02:59  56  TRANS_ATTEMPT_SUCCESS	CONSTANT NUMBER := 2;
16:02:59  57  TRANS_ATTEMPT_FAILED	CONSTANT NUMBER := 3;
16:02:59  58  
16:02:59  59  ----
16:02:59  60  -- PRODUCT STATUSES
16:02:59  61  
16:02:59  62  PRODUCT_ACTIVE	CONSTANT NUMBER := 1;
16:02:59  63  PRODUCT_INACTIVE	CONSTANT NUMBER := 2;
16:02:59  64  PRODUCT_DISABLED	CONSTANT NUMBER := 3;
16:02:59  65  
16:02:59  66  ----
16:02:59  67  -- LICENSE STATUSES
16:02:59  68  
16:02:59  69  LICENSE_CLOSED CONSTANT NUMBER := 1;
16:02:59  70  LICENSE_ACTIVE CONSTANT NUMBER := 2;
16:02:59  71  LICENSE_IN_GRACE_PERIOD CONSTANT NUMBER := 4;
16:02:59  72  
16:02:59  73  ----
16:02:59  74  -- INVOICE STATUSES
16:02:59  75  
16:02:59  76  INVOICE_OPEN		  CONSTANT NUMBER := 1; -- IN SPECS INVOICE_PENDING
16:02:59  77  INVOICE_CLOSED		  CONSTANT NUMBER := 3; -- IN SPECS INVOICE_PAID
16:02:59  78  
16:02:59  79  
16:02:59  80  ----
16:02:59  81  -- CHARGE STATUSES
16:02:59  82  
16:02:59  83  CHARGE_OPENED    CONSTANT NUMBER := 1;
16:02:59  84  CHARGE_PROCESSED CONSTANT NUMBER := 2;
16:02:59  85  CHARGE_CANCELED  CONSTANT NUMBER := 3;
16:02:59  86  
16:02:59  87  ----
16:02:59  88  -- OFFER STATUSES
16:02:59  89  
16:02:59  90  OFFER_ACTIVE   CONSTANT NUMBER := 1;
16:02:59  91  OFFER_INACTIVE CONSTANT NUMBER := 2;
16:02:59  92  OFFER_DISABLED CONSTANT NUMBER := 3;
16:02:59  93  
16:02:59  94  ----
16:02:59  95  -- OFFER_CHAIN STATUSES
16:02:59  96  
16:02:59  97  OFFER_CHAIN_ACTIVE   CONSTANT NUMBER := 1;
16:02:59  98  OFFER_CHAIN_INACTIVE CONSTANT NUMBER := 2;
16:02:59  99  OFFER_CHAIN_DISABLED CONSTANT NUMBER := 3;
16:02:59 100  
16:02:59 101  ----
16:02:59 102  -- ZERO_CHARGE_INSTRUMENT STATUSES
16:02:59 103  
16:02:59 104  ZERO_CHARGE_INSTR_ACTIVE CONSTANT NUMBER := 1;
16:02:59 105  ZERO_CHARGE_INSTR_DISABLED CONSTANT NUMBER := 2;
16:02:59 106  
16:02:59 107  ----
16:02:59 108  -- SUBSCRIPTION_CANCELATION_REASONS
16:02:59 109  
16:02:59 110  SUBSCR_CANC_REASON_ACTIVE CONSTANT NUMBER := 1;
16:02:59 111  SUBSCR_CANC_REASON_INACTIVE CONSTANT NUMBER := 2;
16:02:59 112  SUBSCR_CANC_REASON_INT_ONLY CONSTANT NUMBER := 3;
16:02:59 113  
16:02:59 114  GROUP_ACC_IP_RNG_ACTIVE CONSTANT NUMBER := 1;
16:02:59 115  GROUP_ACC_IP_RNG_INACTIVE CONSTANT NUMBER := 2;
16:02:59 116  
16:02:59 117  GROUP_ACC_EMAIL_DOMAIN_ACT CONSTANT NUMBER := 1;
16:02:59 118  GROUP_ACC_EMAIL_DOMAIN_INACT CONSTANT NUMBER := 0;
16:02:59 119  
16:02:59 120  END GLOBAL_STATUSES_V22;
16:02:59 121  .
16:02:59 SQL> /

Package created.

Elapsed: 00:00:00.06
16:02:59 SQL> 
16:02:59 SQL> 
16:02:59 SQL> 
16:02:59 SQL> --------------------------------------------------------------------------------
16:02:59 SQL> -- DDL for package NOTIFICATION_STATUSES
16:02:59 SQL> --------------------------------------------------------------------------------
16:02:59 SQL> 
16:02:59 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V22" AS
16:02:59   2  
16:02:59   3  ----
16:02:59   4  -- NOTIFICATION STATUSES
16:02:59   5  
16:02:59   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
16:02:59   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
16:02:59   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
16:02:59   9  
16:02:59  10  END NOTIFICATION_STATUSES_V22;
16:02:59  11  .
16:02:59 SQL> /

Package created.

Elapsed: 00:00:00.07
16:02:59 SQL> 
16:02:59 SQL> 
16:02:59 SQL> 
16:02:59 SQL> --------------------------------------------------------------------------------
16:02:59 SQL> -- DDL for package PROCS_COMMON
16:02:59 SQL> --------------------------------------------------------------------------------
16:02:59 SQL> 
16:02:59 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V22" AS
16:02:59   2  
16:02:59   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
16:02:59   4  	in_duration IN VARCHAR2,
16:02:59   5  	in_start_date IN DATE
16:02:59   6  ) RETURN DATE;
16:02:59   7  
16:02:59   8  PROCEDURE ISO8601DURATION_TO_INTERVALS(
16:02:59   9  /*
16:02:59  10  Throws exceptions:
16:02:59  11  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
16:02:59  12  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
16:02:59  13  */
16:02:59  14  	in_duration IN	VARCHAR2,
16:02:59  15  	out_years   OUT NUMBER,
16:02:59  16  	out_months  OUT NUMBER,
16:02:59  17  	out_days    OUT NUMBER
16:02:59  18  );
16:02:59  19  
16:02:59  20  FUNCTION NORMALIZE_DATE(
16:02:59  21   in_date IN DATE
16:02:59  22  ) RETURN DATE;
16:02:59  23  
16:02:59  24  FUNCTION GENERATE_EXCEPTION_MESSAGE(
16:02:59  25  	in_sproc_name	    IN VARCHAR2,
16:02:59  26  	in_error_message    IN VARCHAR2,
16:02:59  27  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:02:59  28  ) RETURN VARCHAR2;
16:02:59  29  
16:02:59  30  PROCEDURE THROW_EXCEPTION(
16:02:59  31  	in_exception_code   IN NUMBER,
16:02:59  32  	in_sproc_name	    IN VARCHAR2,
16:02:59  33  	in_error_message    IN VARCHAR2,
16:02:59  34  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:02:59  35  );
16:02:59  36  
16:02:59  37  FUNCTION ROUND_10_6_TO_10_2 (
16:02:59  38  	in_number NUMBER
16:02:59  39  ) RETURN NUMBER;
16:02:59  40  
16:02:59  41  END PROCS_COMMON_V22;
16:02:59  42  .
16:02:59 SQL> /

Package created.

Elapsed: 00:00:00.13
16:02:59 SQL> 
16:02:59 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V22" AS
16:02:59   2  
16:02:59   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
16:02:59   4  	in_duration IN VARCHAR2,
16:02:59   5  	in_start_date IN DATE
16:02:59   6  ) RETURN DATE AS
16:02:59   7  	var_end_date DATE;
16:02:59   8  	var_years NUMBER;
16:02:59   9  	var_months NUMBER;
16:02:59  10  	var_days NUMBER;
16:02:59  11  	var_ym_interval INTERVAL YEAR TO MONTH;
16:02:59  12  	var_ds_interval INTERVAL DAY(3) TO SECOND;
16:02:59  13  BEGIN
16:02:59  14  	PROCS_COMMON_V22.ISO8601DURATION_TO_INTERVALS(in_duration, var_years, var_months, var_days);
16:02:59  15  	var_ym_interval := var_years || '-' || var_months;
16:02:59  16  	var_ds_interval := var_days || ' 0:0:0';
16:02:59  17  
16:02:59  18  	var_end_date := in_start_date + var_ym_interval + var_ds_interval;
16:02:59  19  	RETURN var_end_date;
16:02:59  20  END ADD_ISO8601DURATION_TO_DATE;
16:02:59  21  
16:02:59  22  PROCEDURE ISO8601DURATION_TO_INTERVALS(
16:02:59  23  /*
16:02:59  24  Throws exceptions:
16:02:59  25  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
16:02:59  26  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
16:02:59  27  */
16:02:59  28  	in_duration IN	VARCHAR2,
16:02:59  29  	out_years   OUT NUMBER,
16:02:59  30  	out_months  OUT NUMBER,
16:02:59  31  	out_days    OUT NUMBER
16:02:59  32  ) AS
16:02:59  33  SPROC_NAME	  CONSTANT VARCHAR2(28) := 'ISO8601DURATION_TO_INTERVALS';
16:02:59  34  -- VARIABLES
16:02:59  35  var_checking_status NUMBER;
16:02:59  36  temp_duration	  VARCHAR2(29);
16:02:59  37  var_is_t_founded	  NUMBER;
16:02:59  38  
16:02:59  39  var_date_duration VARCHAR2(29);
16:02:59  40  var_time_duration VARCHAR2(29);
16:02:59  41  
16:02:59  42  var_years   VARCHAR2(4);
16:02:59  43  var_monthes VARCHAR2(4);
16:02:59  44  var_days	  VARCHAR2(4);
16:02:59  45  var_hours   VARCHAR2(4);
16:02:59  46  var_minutes VARCHAR2(4);
16:02:59  47  var_seconds VARCHAR2(4);
16:02:59  48  
16:02:59  49  -- EXCEPTIONS
16:02:59  50  BAD_ISO_FORMAT EXCEPTION;
16:02:59  51  BEGIN
16:02:59  52  
16:02:59  53  	var_years   := '0';
16:02:59  54  	var_monthes := '0';
16:02:59  55  	var_days    := '0';
16:02:59  56  	var_hours   := '0';
16:02:59  57  	var_minutes := '0';
16:02:59  58  	var_seconds := '0';
16:02:59  59  
16:02:59  60  	SELECT
16:02:59  61  	  COUNT(*) into var_checking_status
16:02:59  62  	FROM
16:02:59  63  	  DUAL
16:02:59  64  	WHERE
16:02:59  65  	  REGEXP_LIKE(in_duration, '^P')
16:02:59  66  	  AND ROWNUM <= 1;
16:02:59  67  
16:02:59  68  	IF var_checking_status = 0 THEN
16:02:59  69  	  RAISE BAD_ISO_FORMAT;
16:02:59  70  	END IF;
16:02:59  71  
16:02:59  72  	SELECT
16:02:59  73  	  SUBSTR(in_duration, 2) into temp_duration
16:02:59  74  	FROM DUAL
16:02:59  75  	WHERE ROWNUM <= 1;
16:02:59  76  
16:02:59  77  	var_is_t_founded := INSTR(temp_duration, 'T');
16:02:59  78  
16:02:59  79  	IF var_is_t_founded > 1 OR var_is_t_founded = 0 THEN
16:02:59  80  	  -- RESOLVING DATE FROM ISO STRING
16:02:59  81  	  IF var_is_t_founded != 0 THEN
16:02:59  82  	    var_date_duration := SUBSTR(temp_duration, 1, var_is_t_founded - 1);
16:02:59  83  	  ELSE
16:02:59  84  	    var_date_duration := temp_duration;
16:02:59  85  	  END IF;
16:02:59  86  
16:02:59  87  	  SELECT
16:02:59  88  	    COUNT(*) into var_checking_status
16:02:59  89  	  FROM
16:02:59  90  	    DUAL
16:02:59  91  	  WHERE
16:02:59  92  	    REGEXP_LIKE(var_date_duration, '^(\d{1,3}Y){0,1}(\d{1,3}M){0,1}(\d{1,3}D){0,1}$')
16:02:59  93  	    AND ROWNUM <= 1;
16:02:59  94  
16:02:59  95  	  IF var_checking_status = 0 THEN
16:02:59  96  	    RAISE BAD_ISO_FORMAT;
16:02:59  97  	  END IF;
16:02:59  98  
16:02:59  99  	  IF INSTR(var_date_duration, 'Y') != 0 THEN
16:02:59 100  	    SELECT
16:02:59 101  	      REGEXP_SUBSTR(var_date_duration, '\d+Y') into var_years
16:02:59 102  	    FROM
16:02:59 103  	      DUAL;
16:02:59 104  	    var_years := SUBSTR(var_years, 1, LENGTH(var_years) - 1);
16:02:59 105  	  END IF;
16:02:59 106  
16:02:59 107  	  IF INSTR(var_date_duration, 'M') != 0 THEN
16:02:59 108  	    SELECT
16:02:59 109  	      REGEXP_SUBSTR(var_date_duration, '\d+M') into var_monthes
16:02:59 110  	    FROM
16:02:59 111  	      DUAL;
16:02:59 112  	    var_monthes := SUBSTR(var_monthes, 1, LENGTH(var_monthes) - 1);
16:02:59 113  	  END IF;
16:02:59 114  
16:02:59 115  	  IF INSTR(var_date_duration, 'D') != 0 THEN
16:02:59 116  	    SELECT
16:02:59 117  	      REGEXP_SUBSTR(var_date_duration, '\d+D') into var_days
16:02:59 118  	    FROM
16:02:59 119  	      DUAL;
16:02:59 120  	    var_days := SUBSTR(var_days, 1, LENGTH(var_days) - 1);
16:02:59 121  	  END IF;
16:02:59 122  	END IF;
16:02:59 123  
16:02:59 124  	IF (var_is_t_founded > 0) THEN
16:02:59 125  	  -- RESOLVING TIME FROM ISO STRING
16:02:59 126  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded + 1);
16:02:59 127  
16:02:59 128  	  SELECT
16:02:59 129  	    COUNT(*) into var_checking_status
16:02:59 130  	  FROM
16:02:59 131  	    DUAL
16:02:59 132  	  WHERE
16:02:59 133  	    REGEXP_LIKE(var_time_duration, '^(\d{1,3}H){0,1}(\d{1,3}M){0,1}(\d{1,3}S){0,1}$')
16:02:59 134  	    AND ROWNUM <= 1;
16:02:59 135  
16:02:59 136  	  IF var_checking_status = 0 THEN
16:02:59 137  	    RAISE BAD_ISO_FORMAT;
16:02:59 138  	  END IF;
16:02:59 139  
16:02:59 140  	  IF INSTR(var_time_duration, 'H') != 0 THEN
16:02:59 141  	    SELECT
16:02:59 142  	      REGEXP_SUBSTR(var_time_duration, '\d+H') into var_hours
16:02:59 143  	    FROM
16:02:59 144  	      DUAL;
16:02:59 145  	    var_hours := SUBSTR(var_hours, 1, LENGTH(var_hours) - 1);
16:02:59 146  	  END IF;
16:02:59 147  
16:02:59 148  	  IF INSTR(var_time_duration, 'M') != 0 THEN
16:02:59 149  	    SELECT
16:02:59 150  	      REGEXP_SUBSTR(var_time_duration, '\d+M') into var_minutes
16:02:59 151  	    FROM
16:02:59 152  	      DUAL;
16:02:59 153  	    var_minutes := SUBSTR(var_minutes, 1, LENGTH(var_minutes) - 1);
16:02:59 154  	  END IF;
16:02:59 155  
16:02:59 156  	  IF INSTR(var_time_duration, 'S') != 0 THEN
16:02:59 157  	    SELECT
16:02:59 158  	      REGEXP_SUBSTR(var_time_duration, '\d+S') into var_seconds
16:02:59 159  	    FROM
16:02:59 160  	      DUAL;
16:02:59 161  	    var_seconds := SUBSTR(var_seconds, 1, LENGTH(var_seconds) - 1);
16:02:59 162  	  END IF;
16:02:59 163  
16:02:59 164  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded);
16:02:59 165  	END IF;
16:02:59 166  
16:02:59 167  	out_years  := var_years;
16:02:59 168  	out_months := var_monthes;
16:02:59 169  	out_days   := var_days;
16:02:59 170  
16:02:59 171  EXCEPTION
16:02:59 172  WHEN BAD_ISO_FORMAT THEN
16:02:59 173  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
16:02:59 174  	  SPROC_NAME, 'Bad date format');
16:02:59 175  WHEN OTHERS THEN
16:02:59 176  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
16:02:59 177  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:02:59 178  END ISO8601DURATION_TO_INTERVALS;
16:02:59 179  
16:02:59 180  /******************************************************************************/
16:02:59 181  
16:02:59 182  FUNCTION NORMALIZE_DATE(
16:02:59 183   in_date IN DATE
16:02:59 184  ) RETURN DATE AS
16:02:59 185  -- VARIABLES
16:02:59 186  var_normalized_date DATE;
16:02:59 187  BEGIN
16:02:59 188  	var_normalized_date := TRUNC(in_date);
16:02:59 189  	RETURN var_normalized_date;
16:02:59 190  END NORMALIZE_DATE;
16:02:59 191  
16:02:59 192  /******************************************************************************/
16:02:59 193  
16:02:59 194  FUNCTION GENERATE_EXCEPTION_MESSAGE(
16:02:59 195  	in_sproc_name	    IN VARCHAR2,
16:02:59 196  	in_error_message    IN VARCHAR2,
16:02:59 197  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:02:59 198  ) RETURN VARCHAR2 AS
16:02:59 199  BEGIN
16:02:59 200  	IF in_error_stacktrace IS NOT NULL THEN
16:02:59 201  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || GLOBAL_CONSTANTS_V22.EXCEPTION_DELIMETER || in_error_stacktrace;
16:02:59 202  	END IF;
16:02:59 203  	RETURN
16:02:59 204  	  in_sproc_name || ': ' || in_error_message;
16:02:59 205  END GENERATE_EXCEPTION_MESSAGE;
16:02:59 206  
16:02:59 207  /******************************************************************************/
16:02:59 208  
16:02:59 209  PROCEDURE THROW_EXCEPTION(
16:02:59 210  	in_exception_code   IN NUMBER,
16:02:59 211  	in_sproc_name	    IN VARCHAR2,
16:02:59 212  	in_error_message    IN VARCHAR2,
16:02:59 213  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:02:59 214  ) AS
16:02:59 215  BEGIN
16:02:59 216  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
16:02:59 217  END;
16:02:59 218  
16:02:59 219  FUNCTION ROUND_10_6_TO_10_2 (
16:02:59 220  	in_number NUMBER
16:02:59 221  ) RETURN NUMBER AS
16:02:59 222  v_result NUMBER(10,2);
16:02:59 223  BEGIN
16:02:59 224  	v_result := in_number;
16:02:59 225  	return v_result;
16:02:59 226  END;
16:02:59 227  
16:02:59 228  END PROCS_COMMON_V22;
16:02:59 229  .
16:02:59 SQL> /

Package body created.

Elapsed: 00:00:00.31
16:02:59 SQL> 
16:02:59 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V22 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
16:02:59 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V22 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
16:02:59 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V22 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
16:02:59 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
16:02:59 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECST@rac01.stg.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com
Cc: nytd_oracledba@nytimes.com

Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.stg.ewr1.nytimes.com
        DB Role: PRIMARY
        SID: ECST
        Schema: core_owner
        Migration: 58.2-release-1.16.0-1-CORE-common.sql
        SVN Revision: 12902
        Duration: 1 sec.
        DBA: sbao
        Service Request: https://jira.em.nytimes.com/browse/ORA-898