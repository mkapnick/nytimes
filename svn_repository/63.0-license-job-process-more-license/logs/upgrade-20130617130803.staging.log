13:08:15 SQL> @/dbbackups/ECST/migrations/core_owner/63.0-license-job-process-more-license/upgrade.sql
13:08:15 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LICENSE_V22" AS
13:08:15   2  
13:08:15   3  PROCEDURE CREATE_LICENSE(
13:08:15   4  /*
13:08:15   5  Throws exceptions:
13:08:15   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
13:08:15   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
13:08:15   8  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
13:08:15   9  */
13:08:15  10  	in_status_id		    IN NUMBER,
13:08:15  11  	in_needs_entitlements	    IN NUMBER,
13:08:15  12  	in_start_date		    IN DATE,
13:08:15  13  	in_end_date		    IN DATE,
13:08:15  14  	in_offer_id		    IN NUMBER,
13:08:15  15  	in_subscription_id	    IN NUMBER,
13:08:15  16  	in_invoice_id		    IN NUMBER,
13:08:15  17  	in_created_by		    IN VARCHAR2,
13:08:15  18  	in_is_extension 	    IN NUMBER,
13:08:15  19  	in_current_offer_index	    IN NUMBER,
13:08:15  20  	in_current_offer_recurr_num IN NUMBER,
13:08:15  21  	out_license_id		    OUT NUMBER
13:08:15  22  ) AS
13:08:15  23  -- VARIABLES
13:08:15  24  SPROC_NAME	   CONSTANT VARCHAR2(14) := 'CREATE_LICENSE';
13:08:15  25  temp_offer_id	   NUMBER;
13:08:15  26  temp_subscription_id NUMBER;
13:08:15  27  temp_invoice_id	   NUMBER;
13:08:15  28  
13:08:15  29  var_new_license_id NUMBER;
13:08:15  30  var_offer_duration VARCHAR2(30);
13:08:15  31  
13:08:15  32  var_offer_ym_interval INTERVAL YEAR TO MONTH;
13:08:15  33  var_offer_ds_interval INTERVAL DAY(3) TO SECOND;
13:08:15  34  var_offer_years	    NUMBER;
13:08:15  35  var_offer_months	    NUMBER;
13:08:15  36  var_offer_days	    NUMBER;
13:08:15  37  
13:08:15  38  -- EXCEPTIONS
13:08:15  39  BAD_OFFER_ID	     EXCEPTION;
13:08:15  40  BAD_SUBSCRIPTION_ID    EXCEPTION;
13:08:15  41  BAD_INVOICE_ID	     EXCEPTION;
13:08:15  42  BAD_OFFER_DURATION     EXCEPTION;
13:08:15  43  EXCEPTION_MESSAGE      VARCHAR2(1024);
13:08:15  44  BEGIN
13:08:15  45  
13:08:15  46  	-- TODO:
13:08:15  47  	---- check incoming data: in_current_offer_index, in_current_offer_recurr_num, in_is_extension
13:08:15  48  
13:08:15  49  	out_license_id := NULL;
13:08:15  50  
13:08:15  51  	-- get offer id and offer entitlement duration
13:08:15  52  	BEGIN
13:08:15  53  	  SELECT
13:08:15  54  	    OFFER.ID,
13:08:15  55  	    OFFER.ENTITLEMENT_DURATION
13:08:15  56  	    into
13:08:15  57  	    temp_offer_id,
13:08:15  58  	    var_offer_duration
13:08:15  59  	  FROM
13:08:15  60  	    OFFER
13:08:15  61  	  WHERE
13:08:15  62  	    OFFER.ID = in_offer_id;
13:08:15  63  	  EXCEPTION
13:08:15  64  	  WHEN NO_DATA_FOUND THEN
13:08:15  65  	    RAISE BAD_OFFER_ID;
13:08:15  66  	END;
13:08:15  67  
13:08:15  68  	-- Check that subscription exists
13:08:15  69  	BEGIN
13:08:15  70  	  SELECT
13:08:15  71  	    SUBSCRIPTION.ID into temp_subscription_id
13:08:15  72  	  FROM
13:08:15  73  	    SUBSCRIPTION
13:08:15  74  	  WHERE
13:08:15  75  	    SUBSCRIPTION.ID = in_subscription_id;
13:08:15  76  	  EXCEPTION
13:08:15  77  	  WHEN NO_DATA_FOUND THEN
13:08:15  78  	    RAISE BAD_SUBSCRIPTION_ID;
13:08:15  79  	END;
13:08:15  80  
13:08:15  81  	-- Check that invoice exists
13:08:15  82  	BEGIN
13:08:15  83  	  SELECT
13:08:15  84  	    INVOICE.ID into temp_invoice_id
13:08:15  85  	  FROM
13:08:15  86  	    INVOICE
13:08:15  87  	  WHERE
13:08:15  88  	    INVOICE.ID = in_invoice_id;
13:08:15  89  	  EXCEPTION
13:08:15  90  	  WHEN NO_DATA_FOUND THEN
13:08:15  91  	    RAISE BAD_INVOICE_ID;
13:08:15  92  	END;
13:08:15  93  
13:08:15  94  	-- convert offer duration into intervals
13:08:15  95  	BEGIN
13:08:15  96  	  PROCS_COMMON_V22.ISO8601DURATION_TO_INTERVALS(
13:08:15  97  	    var_offer_duration,
13:08:15  98  	    var_offer_years,
13:08:15  99  	    var_offer_months,
13:08:15 100  	    var_offer_days);
13:08:15 101  	  var_offer_ym_interval := var_offer_years||'-'||var_offer_months;
13:08:15 102  	  var_offer_ds_interval := var_offer_days||' 0:0:0';
13:08:15 103  	  EXCEPTION
13:08:15 104  	    WHEN OTHERS THEN
13:08:15 105  	      EXCEPTION_MESSAGE := SQLERRM;
13:08:15 106  	      RAISE BAD_OFFER_DURATION;
13:08:15 107  	END;
13:08:15 108  
13:08:15 109  	-- insert new row into license table
13:08:15 110  	PROCS_LICENSE_CRU_V22.CREATE_LICENSE(
13:08:15 111  	  out_license_id	      => var_new_license_id,
13:08:15 112  	  in_license_status_id	      => in_status_id,
13:08:15 113  	  in_needs_entitlements       => in_needs_entitlements,
13:08:15 114  	  in_start_date 	      => in_start_date,
13:08:15 115  	  in_offer_id		      => in_offer_id,
13:08:15 116  	  in_subscription_id	      => in_subscription_id,
13:08:15 117  	  in_invoice_id 	      => in_invoice_id,
13:08:15 118  	  in_end_date		      => NVL(in_end_date, in_start_date + var_offer_ym_interval + var_offer_ds_interval),
13:08:15 119  	  in_created_by 	      => in_created_by,
13:08:15 120  	  in_is_extension	      => in_is_extension,
13:08:15 121  	  in_current_offer_index      => in_current_offer_index,
13:08:15 122  	  in_current_offer_recurr_num => in_current_offer_recurr_num
13:08:15 123  	);
13:08:15 124  
13:08:15 125  	out_license_id := var_new_license_id;
13:08:15 126  
13:08:15 127  EXCEPTION
13:08:15 128  WHEN BAD_OFFER_DURATION THEN
13:08:15 129  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
13:08:15 130  	  SPROC_NAME, 'Bad offer duration format', EXCEPTION_MESSAGE);
13:08:15 131  WHEN BAD_OFFER_ID THEN
13:08:15 132  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 133  	  SPROC_NAME, 'No such offer');
13:08:15 134  WHEN BAD_SUBSCRIPTION_ID THEN
13:08:15 135  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 136  	  SPROC_NAME, 'No such subscription');
13:08:15 137  WHEN BAD_INVOICE_ID THEN
13:08:15 138  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 139  	  SPROC_NAME, 'No such invoice');
13:08:15 140  WHEN OTHERS THEN
13:08:15 141  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 142  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 143  END;
13:08:15 144  
13:08:15 145  /******************************************************************************/
13:08:15 146  
13:08:15 147  PROCEDURE UPDATE_LICENSE_STATUS(
13:08:15 148  	  in_license_id     IN NUMBER,
13:08:15 149  	  in_license_status IN NUMBER,
13:08:15 150  	  in_updated_by     IN VARCHAR2,
13:08:15 151  	  in_ent_end	    IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE
13:08:15 152  ) AS
13:08:15 153  SPROC_NAME CONSTANT VARCHAR2(21) := 'UPDATE_LICENSE_STATUS';
13:08:15 154  -- VARIABLES
13:08:15 155  temp_license_id NUMBER;
13:08:15 156  -- EXCEPTIONS
13:08:15 157  BAD_LICENSE_ID	     EXCEPTION;
13:08:15 158  BAD_LICENSE_STATUS     EXCEPTION;
13:08:15 159  EXCEPTION_MESSAGE      VARCHAR2(1024);
13:08:15 160  BEGIN
13:08:15 161  
13:08:15 162  	BEGIN
13:08:15 163  	  SELECT
13:08:15 164  	    ID into temp_license_id
13:08:15 165  	  FROM
13:08:15 166  	    LICENSE
13:08:15 167  	  WHERE
13:08:15 168  	    LICENSE.ID = in_license_id;
13:08:15 169  	  EXCEPTION
13:08:15 170  	    WHEN NO_DATA_FOUND THEN
13:08:15 171  	      RAISE BAD_LICENSE_ID;
13:08:15 172  	END;
13:08:15 173  
13:08:15 174  	IF in_license_status != GLOBAL_STATUSES_V22.LICENSE_CLOSED
13:08:15 175  	   AND in_license_status != GLOBAL_STATUSES_V22.LICENSE_ACTIVE
13:08:15 176  	   AND in_license_status != GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD THEN
13:08:15 177  	  RAISE BAD_LICENSE_STATUS;
13:08:15 178  	END IF;
13:08:15 179  
13:08:15 180  	IF (in_ent_end is not null and in_ent_end = GLOBAL_CONSTANTS_V22.TRUE) then
13:08:15 181  	  PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
13:08:15 182  	    in_license_id	 => in_license_id,
13:08:15 183  	    in_updated_by	 => in_updated_by,
13:08:15 184  	    in_license_status_id => in_license_status,
13:08:15 185  	    in_entitlement_end_date	 => sysdate
13:08:15 186  	  );
13:08:15 187  	ELSE
13:08:15 188  	  PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
13:08:15 189  	    in_license_id	 => in_license_id,
13:08:15 190  	    in_updated_by	 => in_updated_by,
13:08:15 191  	    in_license_status_id => in_license_status
13:08:15 192  	  );
13:08:15 193  	END IF;
13:08:15 194  
13:08:15 195  EXCEPTION
13:08:15 196  WHEN BAD_LICENSE_STATUS THEN
13:08:15 197  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
13:08:15 198  	  SPROC_NAME, 'Bad status id');
13:08:15 199  WHEN BAD_LICENSE_ID THEN
13:08:15 200  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 201  	  SPROC_NAME, 'No such license');
13:08:15 202  WHEN OTHERS THEN
13:08:15 203  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 204  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 205  END UPDATE_LICENSE_STATUS;
13:08:15 206  
13:08:15 207  /******************************************************************************/
13:08:15 208  
13:08:15 209  PROCEDURE GET_ENDING_LICENSES (
13:08:15 210  	in_hours_number IN NUMBER,
13:08:15 211  	out_result_set	OUT SYS_REFCURSOR
13:08:15 212  ) AS
13:08:15 213  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDING_LICENSES';
13:08:15 214  -- VARIABLES
13:08:15 215  var_days		NUMBER;
13:08:15 216  var_hours 	NUMBER;
13:08:15 217  var_time_interval INTERVAL DAY (3) TO SECOND;
13:08:15 218  BEGIN
13:08:15 219  
13:08:15 220  	var_hours := mod(in_hours_number,24);
13:08:15 221  	var_days := (in_hours_number - var_hours) / 24;
13:08:15 222  	var_time_interval := var_days||' '||var_hours||':0:0';
13:08:15 223  
13:08:15 224  	OPEN out_result_set FOR
13:08:15 225  SELECT * FROM
13:08:15 226  (
13:08:15 227  	SELECT
13:08:15 228  	  LICENSE.ID,
13:08:15 229  	  LICENSE.CREATE_DATE,
13:08:15 230  	  LICENSE.CREATED_BY,
13:08:15 231  	  LICENSE.CURRENT_OFFER_INDEX,
13:08:15 232  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
13:08:15 233  	  LICENSE.END_DATE,
13:08:15 234  	  LICENSE.ENTITLEMENT_END_DATE,
13:08:15 235  	  LICENSE.INVOICE_ID,
13:08:15 236  	  LICENSE.IS_EXTENSION,
13:08:15 237  	  LICENSE.LICENSE_STATUS_ID,
13:08:15 238  	  LICENSE.OFFER_ID,
13:08:15 239  	  LICENSE.START_DATE,
13:08:15 240  	  LICENSE.SUBSCRIPTION_ID,
13:08:15 241  	  LICENSE.UPDATE_DATE,
13:08:15 242  	  LICENSE.UPDATED_BY
13:08:15 243  	FROM
13:08:15 244  	  LICENSE
13:08:15 245  	WHERE
13:08:15 246  	  TO_DATE(LICENSE.END_DATE) <= (current_timestamp + var_time_interval)
13:08:15 247  	  AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
13:08:15 248  	  AND NOT EXISTS
13:08:15 249  	  (
13:08:15 250  	    SELECT NULL
13:08:15 251  	    FROM PROCESS_RETRY_THROTTLE
13:08:15 252  	    WHERE PROCESS_NAME = SPROC_NAME
13:08:15 253  	      AND GENERIC_ID = LICENSE.ID
13:08:15 254  	  )
13:08:15 255  	  AND ROWNUM <= 40000
13:08:15 256  	  ORDER BY dbms_random.value
13:08:15 257  ) WHERE
13:08:15 258  	  ROWNUM <= 4000;
13:08:15 259  EXCEPTION
13:08:15 260  WHEN OTHERS THEN
13:08:15 261  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 262  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 263  END GET_ENDING_LICENSES;
13:08:15 264  
13:08:15 265  
13:08:15 266  /******************************************************************************/
13:08:15 267  
13:08:15 268  PROCEDURE GET_ENDING_LICENSES_CC (
13:08:15 269  	in_hours_number IN NUMBER,
13:08:15 270  	out_result_set	OUT SYS_REFCURSOR,
13:08:15 271  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
13:08:15 272  ) AS
13:08:15 273  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDING_LICENSES_CC';
13:08:15 274  -- VARIABLES
13:08:15 275  var_days		NUMBER;
13:08:15 276  var_hours 	NUMBER;
13:08:15 277  var_time_interval INTERVAL DAY (3) TO SECOND;
13:08:15 278  BEGIN
13:08:15 279  
13:08:15 280  	var_hours := mod(in_hours_number,24);
13:08:15 281  	var_days := (in_hours_number - var_hours) / 24;
13:08:15 282  	var_time_interval := var_days||' '||var_hours||':0:0';
13:08:15 283  
13:08:15 284  	OPEN out_result_set FOR
13:08:15 285  SELECT * FROM
13:08:15 286  (
13:08:15 287  	SELECT
13:08:15 288  	  LICENSE.ID,
13:08:15 289  	  LICENSE.CREATE_DATE,
13:08:15 290  	  LICENSE.CREATED_BY,
13:08:15 291  	  LICENSE.CURRENT_OFFER_INDEX,
13:08:15 292  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
13:08:15 293  	  LICENSE.END_DATE,
13:08:15 294  	  LICENSE.ENTITLEMENT_END_DATE,
13:08:15 295  	  LICENSE.INVOICE_ID,
13:08:15 296  	  LICENSE.IS_EXTENSION,
13:08:15 297  	  LICENSE.LICENSE_STATUS_ID,
13:08:15 298  	  LICENSE.OFFER_ID,
13:08:15 299  	  LICENSE.START_DATE,
13:08:15 300  	  LICENSE.SUBSCRIPTION_ID,
13:08:15 301  	  LICENSE.UPDATE_DATE,
13:08:15 302  	  LICENSE.UPDATED_BY
13:08:15 303  	FROM
13:08:15 304  	  LICENSE
13:08:15 305  	WHERE
13:08:15 306  	  TO_DATE(LICENSE.END_DATE) <= (current_timestamp + var_time_interval)
13:08:15 307  	  AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
13:08:15 308  	  AND NOT EXISTS
13:08:15 309  	  (
13:08:15 310  	    SELECT NULL
13:08:15 311  	    FROM PROCESS_RETRY_THROTTLE
13:08:15 312  	    WHERE PROCESS_NAME = in_process_name
13:08:15 313  	      AND GENERIC_ID = LICENSE.INVOICE_ID
13:08:15 314  	  )
13:08:15 315  	  AND ROWNUM <= 10000
13:08:15 316  	  ORDER BY dbms_random.value
13:08:15 317  ) WHERE
13:08:15 318  	  ROWNUM <= 1000
13:08:15 319  	  ;
13:08:15 320  EXCEPTION
13:08:15 321  WHEN OTHERS THEN
13:08:15 322  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 323  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 324  END GET_ENDING_LICENSES_CC;
13:08:15 325  
13:08:15 326  /******************************************************************************/
13:08:15 327  
13:08:15 328  PROCEDURE GET_RECURRING_OFFER (
13:08:15 329  	in_license_id  IN NUMBER,
13:08:15 330  	out_result_set OUT SYS_REFCURSOR
13:08:15 331  ) AS
13:08:15 332  -- VARIABLES
13:08:15 333  SPROC_NAME		    CONSTANT VARCHAR2(19) := 'GET_RECURRING_OFFER';
13:08:15 334  var_offer_chain_id	    NUMBER;
13:08:15 335  var_offer_id		    NUMBER;
13:08:15 336  var_offer_num_recurrences     NUMBER;
13:08:15 337  var_license_cur_offer_rec_num NUMBER;
13:08:15 338  var_offer_index		    NUMBER;
13:08:15 339  -- EXCEPTIONS
13:08:15 340  BAD_LICENSE_ID	     EXCEPTION;
13:08:15 341  CAN_NOT_GET_OFFER_INFO EXCEPTION;
13:08:15 342  BEGIN
13:08:15 343  
13:08:15 344  	BEGIN
13:08:15 345  	  SELECT
13:08:15 346  	    SUBSCRIPTION.OFFER_CHAIN_ID,
13:08:15 347  	    LICENSE.OFFER_ID,
13:08:15 348  	    LICENSE.CURRENT_OFFER_RECURR_NUM
13:08:15 349  	    into
13:08:15 350  	    var_offer_chain_id,
13:08:15 351  	    var_offer_id,
13:08:15 352  	    var_license_cur_offer_rec_num
13:08:15 353  	  FROM
13:08:15 354  	    LICENSE
13:08:15 355  	    INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
13:08:15 356  	  WHERE
13:08:15 357  	    LICENSE.ID = in_license_id;
13:08:15 358  	  EXCEPTION
13:08:15 359  	    WHEN NO_DATA_FOUND THEN
13:08:15 360  	      RAISE BAD_LICENSE_ID;
13:08:15 361  	END;
13:08:15 362  
13:08:15 363  	BEGIN
13:08:15 364  	  SELECT
13:08:15 365  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES,
13:08:15 366  	    OFFER_OFFER_CHAIN.INDEX_VALUE
13:08:15 367  	    into
13:08:15 368  	    var_offer_num_recurrences,
13:08:15 369  	    var_offer_index
13:08:15 370  	  FROM
13:08:15 371  	    OFFER_OFFER_CHAIN
13:08:15 372  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
13:08:15 373  	  WHERE
13:08:15 374  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
13:08:15 375  	    AND OFFER_OFFER_CHAIN.OFFER_ID = var_offer_id;
13:08:15 376  	  EXCEPTION
13:08:15 377  	    WHEN NO_DATA_FOUND THEN
13:08:15 378  	      RAISE CAN_NOT_GET_OFFER_INFO;
13:08:15 379  	END;
13:08:15 380  
13:08:15 381  	IF var_offer_num_recurrences = 0 THEN
13:08:15 382  	  --out_result_set := NULL;
13:08:15 383  	  -- TODO: Remove this hardcode
13:08:15 384  	  OPEN out_result_set FOR
13:08:15 385  	  SELECT
13:08:15 386  	    OFFER.ID,
13:08:15 387  	    OFFER.OFFER_STATUS_ID,
13:08:15 388  	    OFFER.ENTITLEMENT_DURATION,
13:08:15 389  	    OFFER.CREATED_BY,
13:08:15 390  	    OFFER.CREATE_DATE,
13:08:15 391  	    OFFER.UPDATED_BY,
13:08:15 392  	    OFFER.UPDATE_DATE,
13:08:15 393  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
13:08:15 394  	    var_offer_index as "OFFER_INDEX"
13:08:15 395  	  FROM
13:08:15 396  	    OFFER_OFFER_CHAIN
13:08:15 397  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
13:08:15 398  	  WHERE ROWNUM = 0;
13:08:15 399  	ELSIF var_license_cur_offer_rec_num = var_offer_num_recurrences THEN
13:08:15 400  	  --out_result_set := NULL;
13:08:15 401  	  -- TODO: Remove this hardcode
13:08:15 402  	  OPEN out_result_set FOR
13:08:15 403  	  SELECT
13:08:15 404  	    OFFER.ID,
13:08:15 405  	    OFFER.OFFER_STATUS_ID,
13:08:15 406  	    OFFER.ENTITLEMENT_DURATION,
13:08:15 407  	    OFFER.CREATED_BY,
13:08:15 408  	    OFFER.CREATE_DATE,
13:08:15 409  	    OFFER.UPDATED_BY,
13:08:15 410  	    OFFER.UPDATE_DATE,
13:08:15 411  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
13:08:15 412  	    var_offer_index as "OFFER_INDEX"
13:08:15 413  	  FROM
13:08:15 414  	    OFFER_OFFER_CHAIN
13:08:15 415  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
13:08:15 416  	  WHERE ROWNUM = 0;
13:08:15 417  	ELSE
13:08:15 418  	  OPEN out_result_set FOR
13:08:15 419  	  SELECT
13:08:15 420  	    OFFER.ID,
13:08:15 421  	    OFFER.OFFER_STATUS_ID,
13:08:15 422  	    OFFER.ENTITLEMENT_DURATION,
13:08:15 423  	    OFFER.CREATED_BY,
13:08:15 424  	    OFFER.CREATE_DATE,
13:08:15 425  	    OFFER.UPDATED_BY,
13:08:15 426  	    OFFER.UPDATE_DATE,
13:08:15 427  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
13:08:15 428  	    var_offer_index as "OFFER_INDEX"
13:08:15 429  	  FROM
13:08:15 430  	    OFFER
13:08:15 431  	  WHERE
13:08:15 432  	    OFFER.ID = var_offer_id;
13:08:15 433  	END IF;
13:08:15 434  
13:08:15 435  EXCEPTION
13:08:15 436  WHEN BAD_LICENSE_ID THEN
13:08:15 437  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 438  	  SPROC_NAME, 'No such license');
13:08:15 439  WHEN CAN_NOT_GET_OFFER_INFO THEN
13:08:15 440  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 441  	  SPROC_NAME, 'Could not get offer information. Offer id = '||var_offer_id||', Offer chain id = '||var_offer_chain_id);
13:08:15 442  WHEN OTHERS THEN
13:08:15 443  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 444  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 445  END GET_RECURRING_OFFER;
13:08:15 446  
13:08:15 447  /******************************************************************************/
13:08:15 448  
13:08:15 449  PROCEDURE GET_NEXT_OFFER (
13:08:15 450  /*
13:08:15 451  Throws exceptions:
13:08:15 452  APP_EXCEPTION_CODES_V22.NOT_FOUND
13:08:15 453  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
13:08:15 454  */
13:08:15 455  	in_license_id  IN NUMBER,
13:08:15 456  	out_result_set OUT SYS_REFCURSOR
13:08:15 457  ) AS
13:08:15 458  -- VARIABLES
13:08:15 459  SPROC_NAME		CONSTANT VARCHAR2(14) := 'GET_NEXT_OFFER';
13:08:15 460  var_offer_chain_id	NUMBER;
13:08:15 461  var_offer_id		NUMBER;
13:08:15 462  var_license_current_index NUMBER;
13:08:15 463  var_next_offer_index	NUMBER;
13:08:15 464  -- EXCEPTIONS
13:08:15 465  BAD_LICENSE_ID	      EXCEPTION;
13:08:15 466  CAN_NOT_FIND_NEXT_OFFER EXCEPTION;
13:08:15 467  EXCEPTION_MESSAGE       VARCHAR2(1024);
13:08:15 468  BEGIN
13:08:15 469  
13:08:15 470  	BEGIN
13:08:15 471  	  SELECT
13:08:15 472  	    SUBSCRIPTION.OFFER_CHAIN_ID,
13:08:15 473  	    LICENSE.OFFER_ID,
13:08:15 474  	    LICENSE.CURRENT_OFFER_INDEX
13:08:15 475  	    into
13:08:15 476  	    var_offer_chain_id,
13:08:15 477  	    var_offer_id,
13:08:15 478  	    var_license_current_index
13:08:15 479  	  FROM
13:08:15 480  	    LICENSE
13:08:15 481  	    INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
13:08:15 482  	  WHERE
13:08:15 483  	    LICENSE.ID = in_license_id;
13:08:15 484  	  EXCEPTION
13:08:15 485  	    WHEN NO_DATA_FOUND THEN
13:08:15 486  	      RAISE BAD_LICENSE_ID;
13:08:15 487  	END;
13:08:15 488  
13:08:15 489  	BEGIN
13:08:15 490  	  var_next_offer_index := PROCS_OFFER_CHAIN_V22.GET_NEXT_OFFER_INDEX(
13:08:15 491  	    var_offer_chain_id,
13:08:15 492  	    var_license_current_index
13:08:15 493  	  );
13:08:15 494  	  EXCEPTION
13:08:15 495  	    WHEN OTHERS THEN
13:08:15 496  	      EXCEPTION_MESSAGE := SQLERRM;
13:08:15 497  	      RAISE CAN_NOT_FIND_NEXT_OFFER;
13:08:15 498  	END;
13:08:15 499  
13:08:15 500  	IF var_next_offer_index IS NULL THEN
13:08:15 501  	  -- RETURN NULL;
13:08:15 502  	  -- TODO: Remove this hardcode
13:08:15 503  	  OPEN out_result_set FOR
13:08:15 504  	  SELECT
13:08:15 505  	    OFFER.ID,
13:08:15 506  	    OFFER.OFFER_STATUS_ID,
13:08:15 507  	    OFFER.ENTITLEMENT_DURATION,
13:08:15 508  	    OFFER.CREATED_BY,
13:08:15 509  	    OFFER.CREATE_DATE,
13:08:15 510  	    OFFER.UPDATED_BY,
13:08:15 511  	    OFFER.UPDATE_DATE,
13:08:15 512  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES as "RECURRENCE_NUMBER"
13:08:15 513  	  FROM
13:08:15 514  	    OFFER_OFFER_CHAIN
13:08:15 515  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
13:08:15 516  	  WHERE
13:08:15 517  	    1=2;
13:08:15 518  	ELSE
13:08:15 519  	  OPEN out_result_set FOR
13:08:15 520  	  SELECT
13:08:15 521  	    OFFER.ID,
13:08:15 522  	    OFFER.OFFER_STATUS_ID,
13:08:15 523  	    OFFER.ENTITLEMENT_DURATION,
13:08:15 524  	    OFFER.CREATED_BY,
13:08:15 525  	    OFFER.CREATE_DATE,
13:08:15 526  	    OFFER.UPDATED_BY,
13:08:15 527  	    OFFER.UPDATE_DATE,
13:08:15 528  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES as "RECURRENCE_NUMBER"
13:08:15 529  	  FROM
13:08:15 530  	    OFFER_OFFER_CHAIN
13:08:15 531  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
13:08:15 532  	  WHERE
13:08:15 533  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
13:08:15 534  	    AND OFFER_OFFER_CHAIN.INDEX_VALUE = var_next_offer_index;
13:08:15 535  	END IF;
13:08:15 536  
13:08:15 537  EXCEPTION
13:08:15 538  WHEN BAD_LICENSE_ID THEN
13:08:15 539  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 540  	  SPROC_NAME, 'No such license');
13:08:15 541  WHEN CAN_NOT_FIND_NEXT_OFFER THEN
13:08:15 542  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
13:08:15 543  	  SPROC_NAME, 'Could not find next offer', EXCEPTION_MESSAGE);
13:08:15 544  WHEN OTHERS THEN
13:08:15 545  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 546  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 547  END GET_NEXT_OFFER;
13:08:15 548  
13:08:15 549  /******************************************************************************/
13:08:15 550  
13:08:15 551  PROCEDURE GET_GROUP_ID_BY_LICENSE_ID (
13:08:15 552  	in_license_id IN NUMBER,
13:08:15 553  	out_group_id  OUT NUMBER
13:08:15 554  ) AS
13:08:15 555  -- VARIABLES
13:08:15 556  SPROC_NAME	  CONSTANT VARCHAR2(26) := 'GET_GROUP_ID_BY_LICENSE_ID';
13:08:15 557  var_subscription_id NUMBER;
13:08:15 558  var_group_id	  NUMBER;
13:08:15 559  -- EXCEPTIONS
13:08:15 560  BAD_LICENSE_ID	   EXCEPTION;
13:08:15 561  CAN_NOT_GET_GROUP_ID EXCEPTION;
13:08:15 562  BEGIN
13:08:15 563  
13:08:15 564  	-- Get subscription id
13:08:15 565  	BEGIN
13:08:15 566  	  SELECT
13:08:15 567  	    LICENSE.SUBSCRIPTION_ID into var_subscription_id
13:08:15 568  	  FROM
13:08:15 569  	    LICENSE
13:08:15 570  	  WHERE
13:08:15 571  	    LICENSE.ID = in_license_id;
13:08:15 572  	  EXCEPTION
13:08:15 573  	    WHEN NO_DATA_FOUND THEN
13:08:15 574  	      RAISE BAD_LICENSE_ID;
13:08:15 575  	END;
13:08:15 576  
13:08:15 577  	-- Get group id
13:08:15 578  	BEGIN
13:08:15 579  	  SELECT
13:08:15 580  	    ACCOUNT.GROUP_ID into var_group_id
13:08:15 581  	  FROM
13:08:15 582  	    SUBSCRIPTION
13:08:15 583  	    INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
13:08:15 584  	  WHERE
13:08:15 585  	    SUBSCRIPTION.ID = var_subscription_id;
13:08:15 586  	  EXCEPTION
13:08:15 587  	    WHEN NO_DATA_FOUND THEN
13:08:15 588  	      RAISE CAN_NOT_GET_GROUP_ID;
13:08:15 589  	END;
13:08:15 590  
13:08:15 591  	out_group_id := var_group_id;
13:08:15 592  
13:08:15 593  EXCEPTION
13:08:15 594  WHEN BAD_LICENSE_ID THEN
13:08:15 595  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 596  	  SPROC_NAME, 'No such license');
13:08:15 597  WHEN CAN_NOT_GET_GROUP_ID THEN
13:08:15 598  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 599  	  SPROC_NAME, 'Could not get group id');
13:08:15 600  WHEN OTHERS THEN
13:08:15 601  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 602  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 603  END GET_GROUP_ID_BY_LICENSE_ID;
13:08:15 604  
13:08:15 605  /******************************************************************************/
13:08:15 606  
13:08:15 607  PROCEDURE GET_NEED_ENTITLEMENTS_LICENSES (
13:08:15 608  	out_result_set OUT SYS_REFCURSOR
13:08:15 609  ) AS
13:08:15 610  BEGIN
13:08:15 611  	OPEN out_result_set FOR
13:08:15 612  SELECT * FROM
13:08:15 613  (
13:08:15 614  	SELECT
13:08:15 615  	  LICENSE.ID,
13:08:15 616  	  LICENSE.INVOICE_ID,
13:08:15 617  	  LICENSE.IS_EXTENSION,
13:08:15 618  	  LICENSE.START_DATE,
13:08:15 619  	  LICENSE.END_DATE,
13:08:15 620  	  LICENSE.ENTITLEMENT_END_DATE,
13:08:15 621  	  LICENSE.CURRENT_OFFER_INDEX,
13:08:15 622  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
13:08:15 623  	  LICENSE.CREATE_DATE,
13:08:15 624  	  LICENSE.CREATED_BY,
13:08:15 625  	  LICENSE.LICENSE_STATUS_ID,
13:08:15 626  	  LICENSE.OFFER_ID,
13:08:15 627  	  LICENSE.SUBSCRIPTION_ID,
13:08:15 628  	  LICENSE.UPDATE_DATE,
13:08:15 629  	  LICENSE.UPDATED_BY,
13:08:15 630  	  LICENSE.NEEDS_ENTITLEMENTS
13:08:15 631  	FROM
13:08:15 632  	  LICENSE
13:08:15 633  	WHERE
13:08:15 634  	  LICENSE.NEEDS_ENTITLEMENTS = GLOBAL_CONSTANTS_V22.TRUE
13:08:15 635  	AND ROWNUM <= 5000
13:08:15 636  	ORDER BY dbms_random.value
13:08:15 637  ) WHERE
13:08:15 638  	ROWNUM <= 500;
13:08:15 639  
13:08:15 640  END GET_NEED_ENTITLEMENTS_LICENSES;
13:08:15 641  
13:08:15 642  /******************************************************************************/
13:08:15 643  
13:08:15 644  PROCEDURE UPDATE_NEED_ENTITLEMENTS_FLAG (
13:08:15 645  	in_license_id	      IN NUMBER,
13:08:15 646  	in_needs_entitlements IN NUMBER,
13:08:15 647  	in_updated_by	      IN VARCHAR2
13:08:15 648  ) AS
13:08:15 649  SPROC_NAME CONSTANT VARCHAR2(29) := 'UPDATE_NEED_ENTITLEMENTS_FLAG';
13:08:15 650  -- VARIABLES
13:08:15 651  temp_license_id NUMBER;
13:08:15 652  -- EXCEPTIONS
13:08:15 653  BAD_LICENSE_ID	     EXCEPTION;
13:08:15 654  BAD_ENTITLEMENTS_FLAG  EXCEPTION;
13:08:15 655  EXCEPTION_MESSAGE      VARCHAR2(1024);
13:08:15 656  BEGIN
13:08:15 657  
13:08:15 658  	IF in_needs_entitlements != GLOBAL_CONSTANTS_V22.TRUE
13:08:15 659  	  AND in_needs_entitlements != GLOBAL_CONSTANTS_V22.FALSE THEN
13:08:15 660  	  RAISE BAD_ENTITLEMENTS_FLAG;
13:08:15 661  	END IF;
13:08:15 662  
13:08:15 663  	BEGIN
13:08:15 664  	  SELECT
13:08:15 665  	    LICENSE.ID into temp_license_id
13:08:15 666  	  FROM
13:08:15 667  	    LICENSE
13:08:15 668  	  WHERE
13:08:15 669  	    LICENSE.ID = in_license_id;
13:08:15 670  	  EXCEPTION
13:08:15 671  	    WHEN NO_DATA_FOUND THEN
13:08:15 672  	      RAISE BAD_LICENSE_ID;
13:08:15 673  	END;
13:08:15 674  
13:08:15 675  	PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
13:08:15 676  	  in_license_id 	=> in_license_id,
13:08:15 677  	  in_needs_entitlements => in_needs_entitlements,
13:08:15 678  	  in_updated_by 	=> in_updated_by
13:08:15 679  	);
13:08:15 680  
13:08:15 681  EXCEPTION
13:08:15 682  WHEN BAD_ENTITLEMENTS_FLAG THEN
13:08:15 683  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
13:08:15 684  	  SPROC_NAME, 'Bad entitlements flag value');
13:08:15 685  WHEN BAD_LICENSE_ID THEN
13:08:15 686  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 687  	  SPROC_NAME, 'No such license');
13:08:15 688  WHEN OTHERS THEN
13:08:15 689  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 690  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 691  END UPDATE_NEED_ENTITLEMENTS_FLAG;
13:08:15 692  
13:08:15 693  
13:08:15 694  /******************************************************************************/
13:08:15 695  
13:08:15 696  PROCEDURE GET_ENDED_GC_LICENSES (
13:08:15 697  	out_result_set		OUT SYS_REFCURSOR,
13:08:15 698  	in_hours_number 	IN NUMBER DEFAULT 14*24,
13:08:15 699  	in_num_rows		IN NUMBER DEFAULT 10000,
13:08:15 700  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
13:08:15 701  ) AS
13:08:15 702  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDED_GC_INVOICES';
13:08:15 703  var_days		NUMBER;
13:08:15 704  var_hours 	NUMBER;
13:08:15 705  var_time_interval INTERVAL DAY (3) TO SECOND;
13:08:15 706  BEGIN
13:08:15 707  	var_hours := mod(in_hours_number,24);
13:08:15 708  	var_days := (in_hours_number - var_hours) / 24;
13:08:15 709  	var_time_interval := var_days||' '||var_hours||':0:0';
13:08:15 710  	OPEN out_result_set FOR
13:08:15 711  SELECT * FROM
13:08:15 712  (
13:08:15 713  	SELECT
13:08:15 714  	  l.ID,
13:08:15 715  	  l.CREATE_DATE,
13:08:15 716  	  l.CREATED_BY,
13:08:15 717  	  l.CURRENT_OFFER_INDEX,
13:08:15 718  	  l.CURRENT_OFFER_RECURR_NUM,
13:08:15 719  	  l.END_DATE,
13:08:15 720  	  l.ENTITLEMENT_END_DATE,
13:08:15 721  	  l.INVOICE_ID,
13:08:15 722  	  l.IS_EXTENSION,
13:08:15 723  	  l.LICENSE_STATUS_ID,
13:08:15 724  	  l.OFFER_ID,
13:08:15 725  	  l.START_DATE,
13:08:15 726  	  l.SUBSCRIPTION_ID,
13:08:15 727  	  l.UPDATE_DATE,
13:08:15 728  	  l.UPDATED_BY
13:08:15 729  	FROM
13:08:15 730  	  GIFT_CERTIFICATE gc
13:08:15 731  	  INNER JOIN INVOICE i ON i.id = gc.PURCHASE_INVOICE_ID
13:08:15 732  	  INNER JOIN LICENSE l ON l.invoice_id = i.id
13:08:15 733  	  LEFT JOIN SUBSCRIPTION s ON s.id = l.subscription_id
13:08:15 734  	WHERE
13:08:15 735  	  l.LICENSE_STATUS_ID != GLOBAL_STATUSES_V22.LICENSE_ACTIVE
13:08:15 736  	  AND l.ENTITLEMENT_END_DATE <= (current_timestamp)
13:08:15 737  	  AND l.ENTITLEMENT_END_DATE > (current_timestamp - var_time_interval)
13:08:15 738  	  AND s.subscription_status_id = GLOBAL_STATUSES_V22.SUBSCRIPTION_CLOSED
13:08:15 739  	  AND NOT EXISTS (
13:08:15 740  	    SELECT NULL
13:08:15 741  	    FROM PROCESS_RETRY_THROTTLE
13:08:15 742  	    WHERE PROCESS_NAME = in_process_name
13:08:15 743  	      AND GENERIC_ID = l.ID
13:08:15 744  	  )
13:08:15 745  	  AND ROWNUM <= in_num_rows*10
13:08:15 746  	  ORDER BY dbms_random.value
13:08:15 747  ) WHERE
13:08:15 748  	  ROWNUM <= in_num_rows
13:08:15 749  	  GROUP BY SUBSCRIPTION_ID;
13:08:15 750  EXCEPTION
13:08:15 751  WHEN OTHERS THEN
13:08:15 752  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 753  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 754  END GET_ENDED_GC_LICENSES;
13:08:15 755  
13:08:15 756  PROCEDURE GET_LICENSE_BY_ID (
13:08:15 757  	in_license_id  IN NUMBER,
13:08:15 758  	out_result_set OUT SYS_REFCURSOR
13:08:15 759  ) AS
13:08:15 760  SPROC_NAME CONSTANT VARCHAR2(17) := 'GET_LICENSE_BY_ID';
13:08:15 761  -- VARIABLES
13:08:15 762  temp_license_id NUMBER;
13:08:15 763  -- EXCEPTIONS
13:08:15 764  BAD_LICENSE_ID EXCEPTION;
13:08:15 765  BEGIN
13:08:15 766  
13:08:15 767  	BEGIN
13:08:15 768  	  SELECT
13:08:15 769  	    l.id into temp_license_id
13:08:15 770  	  FROM
13:08:15 771  	    license l
13:08:15 772  	  WHERE
13:08:15 773  	    l.id = in_license_id;
13:08:15 774  	  EXCEPTION
13:08:15 775  	    WHEN NO_DATA_FOUND THEN
13:08:15 776  	      RAISE BAD_LICENSE_ID;
13:08:15 777  	END;
13:08:15 778  
13:08:15 779  	OPEN out_result_set FOR
13:08:15 780  	SELECT
13:08:15 781  	  l.id,
13:08:15 782  	  l.license_status_id,
13:08:15 783  	  l.subscription_id,
13:08:15 784  	  l.invoice_id,
13:08:15 785  	  l.offer_id,
13:08:15 786  	  l.start_date,
13:08:15 787  	  l.end_date,
13:08:15 788  	  l.entitlement_end_date,
13:08:15 789  	  l.is_extension,
13:08:15 790  	  l.create_date,
13:08:15 791  	  l.created_by,
13:08:15 792  	  l.update_date,
13:08:15 793  	  l.updated_by,
13:08:15 794  	  l.current_offer_index,
13:08:15 795  	  l.current_offer_recurr_num,
13:08:15 796  	  l.needs_entitlements
13:08:15 797  	FROM
13:08:15 798  	  LICENSE l
13:08:15 799  	WHERE
13:08:15 800  	  l.id = in_license_id;
13:08:15 801  
13:08:15 802  EXCEPTION
13:08:15 803  WHEN BAD_LICENSE_ID THEN
13:08:15 804  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:08:15 805  	  SPROC_NAME, 'No such license');
13:08:15 806  WHEN OTHERS THEN
13:08:15 807  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 808  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 809  END GET_LICENSE_BY_ID;
13:08:15 810  
13:08:15 811  PROCEDURE UP_LATEST_LICE_END_BY_SUBID (
13:08:15 812  	in_subscription_id IN NUMBER,
13:08:15 813  	in_end_date IN DATE,
13:08:15 814  	in_updated_by IN VARCHAR2
13:08:15 815  ) AS
13:08:15 816  SPROC_NAME CONSTANT VARCHAR2(32) := 'UP_LATEST_LICE_END_BY_SUBID';
13:08:15 817  EXCEPTION_MESSAGE      VARCHAR2(1024);
13:08:15 818  var_latest_lice NUMBER;
13:08:15 819  BEGIN
13:08:15 820  	SELECT max(id)
13:08:15 821  	INTO  var_latest_lice
13:08:15 822  	FROM LICENSE
13:08:15 823  	WHERE
13:08:15 824  	  subscription_id = in_subscription_id
13:08:15 825  	;
13:08:15 826  
13:08:15 827  	PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
13:08:15 828  	  in_license_id        => var_latest_lice,
13:08:15 829  	  in_updated_by        => in_updated_by,
13:08:15 830  	  in_needs_entitlements => GLOBAL_CONSTANTS_V22.TRUE,
13:08:15 831  	  in_end_date	       => in_end_date,
13:08:15 832  	  in_entitlement_end_date => in_end_date
13:08:15 833  	);
13:08:15 834  
13:08:15 835  EXCEPTION
13:08:15 836  WHEN NO_DATA_FOUND THEN
13:08:15 837  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 838  	  SPROC_NAME, 'No licenses from subscription', SQLERRM);
13:08:15 839  WHEN OTHERS THEN
13:08:15 840  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:08:15 841  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:08:15 842  END UP_LATEST_LICE_END_BY_SUBID;
13:08:15 843  
13:08:15 844  PROCEDURE GET_GRACE_LICE_FOR_FINAL_TRANS (
13:08:15 845  	in_days_before_close	 IN NUMBER,
13:08:15 846  	in_num_licenses_to_fetch IN NUMBER,
13:08:15 847  	out_result_set		 OUT SYS_REFCURSOR
13:08:15 848  ) AS
13:08:15 849  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRACE_LICE_FOR_FINAL_TRANS';
13:08:15 850  BEGIN
13:08:15 851  	OPEN out_result_set FOR
13:08:15 852  	SELECT
13:08:15 853  	    *
13:08:15 854  	FROM
13:08:15 855  	    (
13:08:15 856  		SELECT
13:08:15 857  		    l.id
13:08:15 858  		FROM
13:08:15 859  		    license l
13:08:15 860  		JOIN
13:08:15 861  		    invoice i
13:08:15 862  		ON
13:08:15 863  		    l.invoice_id = i.id
13:08:15 864  		WHERE
13:08:15 865  		    i.invoice_status_id = GLOBAL_STATUSES_V22.INVOICE_OPEN
13:08:15 866  		AND l.license_status_id = GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD
13:08:15 867  		AND SYSDATE + in_days_before_close >= l.grace_end_date
13:08:15 868  		AND NOT EXISTS
13:08:15 869  		    (
13:08:15 870  			SELECT
13:08:15 871  			    1
13:08:15 872  			FROM
13:08:15 873  			    charge c
13:08:15 874  			WHERE
13:08:15 875  			    c.invoice_id = i.id
13:08:15 876  			AND c.charge_status_id = GLOBAL_STATUSES_V22.CHARGE_OPENED)
13:08:15 877  		AND rownum <= in_num_licenses_to_fetch * 10
13:08:15 878  		ORDER BY
13:08:15 879  		    dbms_random.value)
13:08:15 880  	WHERE
13:08:15 881  	    rownum <= in_num_licenses_to_fetch;
13:08:15 882  END GET_GRACE_LICE_FOR_FINAL_TRANS;
13:08:15 883  
13:08:15 884  End Procs_License_V22;
13:08:15 885  .
13:08:15 SQL> /

Package body created.

Elapsed: 00:00:01.14
13:08:16 SQL> 
13:08:16 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
13:08:16 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECST@rac01.stg.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com
Cc: nytd_oracledba@nytimes.com

Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.stg.ewr1.nytimes.com
        DB Role: PRIMARY
        SID: ECST
        Schema: core_owner
        Migration: 63.0-license-job-process-more-license
        SVN Revision: 13113
        Duration: 1 sec.
        DBA: sbao
        Service Request: https://jira.em.nytimes.com/browse/ORA-952