13:37:36 SQL> @/dbbackups/ECPR/migrations/core_owner/11.1-release-1.9.0-procs_cupy/upgrade.sql
13:37:36 SQL> CREATE OR REPLACE PACKAGE "PROCS_CUPY" AS
13:37:36   2  
13:37:36   3  	PROCEDURE POPULATE_REQUEST_INFO(
13:37:36   4  	  in_hours_prior    IN	NUMBER,
13:37:36   5  	  in_filename	    IN	CC_REQUEST_FILE.FILE_NAME%TYPE,
13:37:36   6  	  in_creator	    IN	CC_REQUEST_FILE.UPDATED_BY%TYPE
13:37:36   7  	);
13:37:36   8  
13:37:36   9  	PROCEDURE CHASE_PROFILE_BY_REQ_FILE_ID(
13:37:36  10  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
13:37:36  11  	  in_start	     IN NUMBER,
13:37:36  12  	  in_end	     IN NUMBER,
13:37:36  13  	  out_result_set     OUT SYS_REFCURSOR
13:37:36  14  	);
13:37:36  15  
13:37:36  16  	PROCEDURE UPDATE_REQUEST_FILE_STATUS(
13:37:36  17  	  in_request_file_id IN CC_REQUEST_FILE.ID%TYPE,
13:37:36  18  	  in_status	     IN CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
13:37:36  19  	  in_updated_by      IN CC_REQUEST_FILE.UPDATED_BY%TYPE
13:37:36  20  	);
13:37:36  21  
13:37:36  22  	PROCEDURE UPDATE_CC_REQUEST_STATUS(
13:37:36  23  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
13:37:36  24  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
13:37:36  25  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
13:37:36  26  	);
13:37:36  27  
13:37:36  28  	PROCEDURE REQUEST_FILES_BY_STATUS (
13:37:36  29  	  in_status	      IN  CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
13:37:36  30  	  in_older_than_hours IN  NUMBER DEFAULT -288,
13:37:36  31  	  out_request_files   OUT SYS_REFCURSOR
13:37:36  32  	);
13:37:36  33  
13:37:36  34  	PROCEDURE COUNT_BY_REQUEST_FILE_ID (
13:37:36  35  	  in_id     IN	CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
13:37:36  36  	  out_count OUT NUMBER
13:37:36  37  	);
13:37:36  38  
13:37:36  39  	PROCEDURE GET_CREDIT_CARD_LICENSE (
13:37:36  40  	  in_chase_profile_id  IN  CREDIT_CARD.CHASE_PROFILE_ID%TYPE,
13:37:36  41  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE DEFAULT NULL,
13:37:36  42  	  out_card_license     OUT SYS_REFCURSOR
13:37:36  43  	);
13:37:36  44  
13:37:36  45  	PROCEDURE UPDATE_CC_UPDATE(
13:37:36  46  	  in_id 	     IN CC_UPDATE.ID%TYPE,
13:37:36  47  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
13:37:36  48  	  in_action	     IN CC_UPDATE.CC_UPDATE_ACTION%TYPE DEFAULT NULL,
13:37:36  49  	  in_reason	     IN CC_UPDATE.CC_UPDATE_REASON%TYPE DEFAULT NULL,
13:37:36  50  	  in_response_proc_status_code IN CC_UPDATE.RESPONSE_PROC_STATUS_CODE%TYPE DEFAULT NULL,
13:37:36  51  	  in_response_proc_status_msg  IN CC_UPDATE.RESPONSE_PROC_STATUS_MESSAGE%TYPE DEFAULT NULL,
13:37:36  52  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
13:37:36  53  	);
13:37:36  54  
13:37:36  55  	PROCEDURE UPDATE_CC_UPDATE_STATUS(
13:37:36  56  	  in_id 	IN CC_UPDATE.ID%TYPE,
13:37:36  57  	  in_status	IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
13:37:36  58  	  in_updated_by IN CC_UPDATE.UPDATED_BY%TYPE
13:37:36  59  	);
13:37:36  60  
13:37:36  61  	PROCEDURE GET_REQUEST_FILE_BY_FILENAME (
13:37:36  62  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE,
13:37:36  63  	  out_request_file     OUT SYS_REFCURSOR
13:37:36  64  	);
13:37:36  65  
13:37:36  66  	PROCEDURE SUSPEND_CREDIT_CARD (
13:37:36  67  	  in_credit_card_id  IN CREDIT_CARD.ID%TYPE,
13:37:36  68  	  in_updated_by      IN CREDIT_CARD.UPDATED_BY%TYPE
13:37:36  69  	);
13:37:36  70  
13:37:36  71  	PROCEDURE UPDATE_CREDIT_CARD (
13:37:36  72  	  in_credit_card_id   IN CREDIT_CARD.ID%TYPE,
13:37:36  73  	  in_last_four_cc     IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
13:37:36  74  	  in_expiration_date  IN CREDIT_CARD.EXPIRATION_DATE%TYPE,
13:37:36  75  	  in_updated_by       IN CREDIT_CARD.UPDATED_BY%TYPE
13:37:36  76  	);
13:37:36  77  
13:37:36  78  	PROCEDURE COMPLETABLE_REQUESTS (
13:37:36  79  	  out_request_files OUT SYS_REFCURSOR
13:37:36  80  	);
13:37:36  81  
13:37:36  82  	PROCEDURE COMPLETABLE_REQUESTS_W_FAILS (
13:37:36  83  	  in_max_hours_before_report IN  NUMBER,
13:37:36  84  	  out_request_files	     OUT SYS_REFCURSOR
13:37:36  85  	);
13:37:36  86  
13:37:36  87  END PROCS_CUPY;
13:37:36  88  .
13:37:36 SQL> /

Package created.

Elapsed: 00:00:00.82
13:37:37 SQL> 
13:37:37 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_CUPY" AS
13:37:37   2  
13:37:37   3  	/****************************************************************************/
13:37:37   4  
13:37:37   5  	PROCEDURE POPULATE_REQUEST_INFO(
13:37:37   6  	  in_hours_prior    IN	NUMBER,
13:37:37   7  	  in_filename	    IN	CC_REQUEST_FILE.FILE_NAME%TYPE,
13:37:37   8  	  in_creator	    IN	CC_REQUEST_FILE.UPDATED_BY%TYPE
13:37:37   9  	) AS
13:37:37  10  	SPROC_NAME CONSTANT VARCHAR2(32) := 'POPULATE_REQUEST_INFO';
13:37:37  11  	var_start_date	    DATE := SYSDATE;
13:37:37  12  	var_end_date	    DATE := var_start_date + (in_hours_prior/24);
13:37:37  13  	var_request_file_id NUMBER := 0;
13:37:37  14  	var_license_count   NUMBER := 0;
13:37:37  15  	var_cc_update_count NUMBER := 0;
13:37:37  16  	BEGIN
13:37:37  17  	    SELECT CC_REQUEST_FILE_ID_SEQ.NEXTVAL INTO var_request_file_id  FROM DUAL;
13:37:37  18  	    INSERT INTO CC_REQUEST_FILE (ID,
13:37:37  19  					 FILE_NAME,
13:37:37  20  					 CC_REQUEST_FILE_STATUS,
13:37:37  21  					 CREATE_DATE,
13:37:37  22  					 CREATED_BY,
13:37:37  23  					 UPDATE_DATE,
13:37:37  24  					 UPDATED_BY)
13:37:37  25  					 VALUES (
13:37:37  26  					 var_request_file_id,
13:37:37  27  					 in_filename,
13:37:37  28  					 'NOT_CREATED',
13:37:37  29  					 var_start_date,
13:37:37  30  					 in_creator,
13:37:37  31  					 var_start_date,
13:37:37  32  					 in_creator);
13:37:37  33  
13:37:37  34  	   FOR record IN (SELECT
13:37:37  35  			    l.ID LICENSE_ID, cc.ID CREDIT_CARD_ID
13:37:37  36  			  FROM
13:37:37  37  			    LICENSE l INNER JOIN SUBSCRIPTION s ON L.SUBSCRIPTION_ID = s.ID
13:37:37  38  				      INNER JOIN CREDIT_CARD cc ON S.INSTRUMENT_ID   = cc.ID
13:37:37  39  			  WHERE
13:37:37  40  			    s.INSTRUMENT_TYPE_ID	 = 1
13:37:37  41  			    AND cc.CREDIT_CARD_STATUS_ID = 1
13:37:37  42  			    AND s.SUBSCRIPTION_STATUS_ID = 1
13:37:37  43  			    AND l.LICENSE_STATUS_ID	 = 2
13:37:37  44  			    AND cc.CREDIT_CARD_TYPE_ID IN (2,3)
13:37:37  45  			    AND l.END_DATE BETWEEN var_start_date AND var_end_date
13:37:37  46  			    AND l.ID NOT IN (SELECT LICENSE_ID FROM CC_UPDATE))
13:37:37  47  	   LOOP
13:37:37  48  	     var_license_count := 0;
13:37:37  49  	     SELECT COUNT(1) INTO  var_license_count FROM CC_UPDATE WHERE LICENSE_ID = record.LICENSE_ID;
13:37:37  50  
13:37:37  51  	     IF var_license_count = 0 THEN
13:37:37  52  		INSERT INTO CC_UPDATE (ID,
13:37:37  53  				       CREDIT_CARD_ID,
13:37:37  54  				       LICENSE_ID,
13:37:37  55  				       CC_UPDATE_STATUS,
13:37:37  56  				       CC_REQUEST_FILE_ID,
13:37:37  57  				       CREATE_DATE,
13:37:37  58  				       UPDATE_DATE,
13:37:37  59  				       CREATED_BY,
13:37:37  60  				       UPDATED_BY
13:37:37  61  				       ) VALUES (
13:37:37  62  				       CC_UPDATE_SEQ.NEXTVAL,
13:37:37  63  				       record.CREDIT_CARD_ID,
13:37:37  64  				       record.LICENSE_ID,
13:37:37  65  				       'NOT_ADDED_TO_FILE',
13:37:37  66  				       var_request_file_id,
13:37:37  67  				       var_start_date,
13:37:37  68  				       var_start_date,
13:37:37  69  				       in_creator,
13:37:37  70  				       in_creator
13:37:37  71  				       );
13:37:37  72  	     END IF;
13:37:37  73  	   END LOOP;
13:37:37  74  
13:37:37  75  	   SELECT COUNT(1) INTO var_cc_update_count
13:37:37  76  	   FROM CC_UPDATE
13:37:37  77  	   WHERE CC_REQUEST_FILE_ID = var_request_file_id;
13:37:37  78  	   IF var_cc_update_count <= 0 THEN
13:37:37  79  	     UPDATE CC_REQUEST_FILE
13:37:37  80  	     SET CC_REQUEST_FILE_STATUS = 'EMPTY'
13:37:37  81  	     WHERE ID = var_request_file_id;
13:37:37  82  	   END IF;
13:37:37  83  
13:37:37  84  	END POPULATE_REQUEST_INFO;
13:37:37  85  
13:37:37  86  	/****************************************************************************/
13:37:37  87  
13:37:37  88  	PROCEDURE CHASE_PROFILE_BY_REQ_FILE_ID(
13:37:37  89  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
13:37:37  90  	  in_start	     IN NUMBER,
13:37:37  91  	  in_end	     IN NUMBER,
13:37:37  92  	  out_result_set     OUT SYS_REFCURSOR
13:37:37  93  	) AS
13:37:37  94  	SPROC_NAME CONSTANT VARCHAR2(32) := 'CHASE_PROFILE_BY_REQ_FILE_ID';
13:37:37  95  	var_range_diff	    NUMBER := 0;
13:37:37  96  	var_upper_bond_diff NUMBER := 0;
13:37:37  97  	var_l_start	    NUMBER := 0;
13:37:37  98  	var_l_end	    NUMBER := 0;
13:37:37  99  	BEGIN
13:37:37 100  	  --Normalize the end points [START]
13:37:37 101  	  IF (in_start IS NULL OR in_start < 0) Then
13:37:37 102  	    var_l_start := 0;
13:37:37 103  	  ELSE
13:37:37 104  	    var_l_start := in_start;
13:37:37 105  	  END IF;
13:37:37 106  
13:37:37 107  	  IF (in_end IS NULL) Then
13:37:37 108  	    var_l_end := 500;
13:37:37 109  	  ELSE
13:37:37 110  	    var_l_end := in_end;
13:37:37 111  	  END IF;
13:37:37 112  
13:37:37 113  	  var_l_start := var_l_start + 1;
13:37:37 114  	  var_l_end   := var_l_end   + 1;
13:37:37 115  
13:37:37 116  	  var_range_diff  := var_l_end - var_l_start;
13:37:37 117  	  var_upper_bond_diff :=  var_range_diff - 1000;
13:37:37 118  
13:37:37 119  	  IF (var_upper_bond_diff > 0) Then
13:37:37 120  	    var_l_end := var_l_end - var_upper_bond_diff;
13:37:37 121  	  END IF;
13:37:37 122  	  --Normalize the end points [END]
13:37:37 123  
13:37:37 124  	  OPEN out_result_set FOR
13:37:37 125  	    SELECT CHASE_PROFILE_ID FROM
13:37:37 126  	      (SELECT rownum rnum, q.* FROM
13:37:37 127  		 (SELECT
13:37:37 128  		    cc.CHASE_PROFILE_ID
13:37:37 129  		  FROM
13:37:37 130  		    CREDIT_CARD cc,
13:37:37 131  		    CC_UPDATE ccu
13:37:37 132  		  WHERE
13:37:37 133  		    ccu.CC_REQUEST_FILE_ID = in_request_file_id
13:37:37 134  		    AND ccu.CREDIT_CARD_ID = cc.id
13:37:37 135  		) Q
13:37:37 136  	      WHERE rownum <= var_l_end)
13:37:37 137  	    WHERE rnum >= var_l_Start;
13:37:37 138  	END CHASE_PROFILE_BY_REQ_FILE_ID;
13:37:37 139  
13:37:37 140  	/****************************************************************************/
13:37:37 141  
13:37:37 142  	PROCEDURE UPDATE_REQUEST_FILE_STATUS(
13:37:37 143  	  in_request_file_id IN CC_REQUEST_FILE.ID%TYPE,
13:37:37 144  	  in_status	     IN CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
13:37:37 145  	  in_updated_by      IN CC_REQUEST_FILE.UPDATED_BY%TYPE
13:37:37 146  	)AS
13:37:37 147  	SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_REQUEST_FILE_STATUS';
13:37:37 148  	BEGIN
13:37:37 149  	  UPDATE CC_REQUEST_FILE
13:37:37 150  	  SET CC_REQUEST_FILE_STATUS = in_status,
13:37:37 151  	      UPDATE_DATE = SYSDATE,
13:37:37 152  	      UPDATED_BY  = in_updated_by
13:37:37 153  	  WHERE ID = in_request_file_id;
13:37:37 154  	END UPDATE_REQUEST_FILE_STATUS;
13:37:37 155  
13:37:37 156  	/****************************************************************************/
13:37:37 157  
13:37:37 158  	PROCEDURE UPDATE_CC_REQUEST_STATUS(
13:37:37 159  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
13:37:37 160  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
13:37:37 161  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
13:37:37 162  	) AS
13:37:37 163  	SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_CC_REQUEST_STATUS';
13:37:37 164  	BEGIN
13:37:37 165  	  UPDATE CC_UPDATE
13:37:37 166  	  SET CC_UPDATE_STATUS = in_status,
13:37:37 167  	      UPDATE_DATE      = SYSDATE,
13:37:37 168  	      UPDATED_BY       = in_updated_by
13:37:37 169  	  WHERE
13:37:37 170  	    CC_REQUEST_FILE_ID = in_request_file_id;
13:37:37 171  	END UPDATE_CC_REQUEST_STATUS;
13:37:37 172  
13:37:37 173  	/****************************************************************************/
13:37:37 174  
13:37:37 175  	PROCEDURE REQUEST_FILES_BY_STATUS (
13:37:37 176  	  in_status	      IN  CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
13:37:37 177  	  in_older_than_hours IN  NUMBER DEFAULT -288,
13:37:37 178  	  out_request_files   OUT SYS_REFCURSOR
13:37:37 179  	) AS
13:37:37 180  	var_older_than_hours NUMBER := in_older_than_hours;
13:37:37 181  	BEGIN
13:37:37 182  	 IF (var_older_than_hours IS NULL) THEN
13:37:37 183  	   var_older_than_hours := -288;
13:37:37 184  	 END IF;
13:37:37 185  
13:37:37 186  	 OPEN out_request_files FOR
13:37:37 187  	 SELECT
13:37:37 188  	   ID,
13:37:37 189  	   FILE_NAME
13:37:37 190  	 FROM
13:37:37 191  	   CC_REQUEST_FILE
13:37:37 192  	 WHERE
13:37:37 193  	   CC_REQUEST_FILE_STATUS = in_status
13:37:37 194  	 AND
13:37:37 195  	   UPDATE_DATE < SYSDATE - (var_older_than_hours / 24);
13:37:37 196  	END REQUEST_FILES_BY_STATUS;
13:37:37 197  
13:37:37 198  	/****************************************************************************/
13:37:37 199  
13:37:37 200  	PROCEDURE COUNT_BY_REQUEST_FILE_ID (
13:37:37 201  	  in_id     IN	CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
13:37:37 202  	  out_count OUT NUMBER
13:37:37 203  	) AS
13:37:37 204  	SPROC_NAME CONSTANT VARCHAR2(32) := 'COUNT_BY_REQUEST_FILE_ID';
13:37:37 205  	BEGIN
13:37:37 206  	  SELECT COUNT(1) INTO out_count
13:37:37 207  	  FROM CC_UPDATE
13:37:37 208  	  WHERE CC_REQUEST_FILE_ID = in_id;
13:37:37 209  	END COUNT_BY_REQUEST_FILE_ID;
13:37:37 210  
13:37:37 211  	/****************************************************************************/
13:37:37 212  
13:37:37 213  	PROCEDURE GET_CREDIT_CARD_LICENSE (
13:37:37 214  	  in_chase_profile_id  IN  CREDIT_CARD.CHASE_PROFILE_ID%TYPE,
13:37:37 215  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE DEFAULT NULL,
13:37:37 216  	  out_card_license     OUT SYS_REFCURSOR
13:37:37 217  	) AS
13:37:37 218  	BEGIN
13:37:37 219  	  OPEN out_card_license FOR
13:37:37 220  	  SELECT
13:37:37 221  	    cc.ID CREDIT_CARD_ID,
13:37:37 222  	    cc.CHASE_PROFILE_ID,
13:37:37 223  	    cc.LAST_FOUR_CC CREDIT_CARD_LAST_DIGITS,
13:37:37 224  	    cc.UPDATE_DATE CREDIT_CARD_UPDATE_DATE,
13:37:37 225  	    cc.EXPIRATION_DATE CREDIT_CARD_EXPIRATION_DATE,
13:37:37 226  	    cc.UPDATED_BY CREDIT_CARD_UPDATED_BY,
13:37:37 227  	    a.GROUP_ID,
13:37:37 228  	    u.LICENSE_ID,
13:37:37 229  	    u.ID CC_UPDATE_ID,
13:37:37 230  	    l.END_DATE LICENSE_END_DATE,
13:37:37 231  	    DECODE(cc.CREDIT_CARD_STATUS_ID, 1, 1, 0) ACTIVE
13:37:37 232  	  FROM CREDIT_CARD cc, CC_UPDATE u, CC_REQUEST_FILE rf, ACCOUNT a, LICENSE l
13:37:37 233  	  WHERE cc.ID = u.CREDIT_CARD_ID
13:37:37 234  	  AND u.CC_REQUEST_FILE_ID = rf.ID
13:37:37 235  	  AND rf.CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE', 'NO_RESPONSE')
13:37:37 236  	  AND rf.FILE_NAME = NVL(in_request_filename, rf.FILE_NAME)
13:37:37 237  	  AND upper(cc.CHASE_PROFILE_ID) = in_chase_profile_id
13:37:37 238  	  AND cc.ACCOUNT_ID = a.ID
13:37:37 239  	  AND u.LICENSE_ID = l.ID
13:37:37 240  	  AND u.CC_UPDATE_STATUS NOT IN ('NO_UPDATE', 'UPDATED')
13:37:37 241  	  AND SYSDATE BETWEEN l.START_DATE and l.END_DATE
13:37:37 242  	  ORDER BY cc.UPDATE_DATE DESC;
13:37:37 243  	END GET_CREDIT_CARD_LICENSE;
13:37:37 244  
13:37:37 245  	/****************************************************************************/
13:37:37 246  
13:37:37 247  	PROCEDURE UPDATE_CC_UPDATE(
13:37:37 248  	  in_id 	     IN CC_UPDATE.ID%TYPE,
13:37:37 249  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
13:37:37 250  	  in_action	     IN CC_UPDATE.CC_UPDATE_ACTION%TYPE DEFAULT NULL,
13:37:37 251  	  in_reason	     IN CC_UPDATE.CC_UPDATE_REASON%TYPE DEFAULT NULL,
13:37:37 252  	  in_response_proc_status_code IN CC_UPDATE.RESPONSE_PROC_STATUS_CODE%TYPE DEFAULT NULL,
13:37:37 253  	  in_response_proc_status_msg  IN CC_UPDATE.RESPONSE_PROC_STATUS_MESSAGE%TYPE DEFAULT NULL,
13:37:37 254  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
13:37:37 255  	) AS
13:37:37 256  	BEGIN
13:37:37 257  	  UPDATE CC_UPDATE
13:37:37 258  	  SET CC_UPDATE_STATUS = in_status,
13:37:37 259  	  CC_UPDATE_ACTION = NVL(in_action, CC_UPDATE_ACTION),
13:37:37 260  	  CC_UPDATE_REASON = NVL(in_reason, CC_UPDATE_REASON),
13:37:37 261  	  RESPONSE_PROC_STATUS_CODE = NVL(RESPONSE_PROC_STATUS_CODE, in_response_proc_status_code),
13:37:37 262  	  RESPONSE_PROC_STATUS_MESSAGE = NVL(RESPONSE_PROC_STATUS_MESSAGE, in_response_proc_status_msg),
13:37:37 263  	  UPDATE_DATE = SYSDATE,
13:37:37 264  	  UPDATED_BY = in_updated_by
13:37:37 265  	  WHERE ID = in_id;
13:37:37 266  	END UPDATE_CC_UPDATE;
13:37:37 267  
13:37:37 268  	/****************************************************************************/
13:37:37 269  
13:37:37 270  	PROCEDURE UPDATE_CC_UPDATE_STATUS(
13:37:37 271  	  in_id 	IN CC_UPDATE.ID%TYPE,
13:37:37 272  	  in_status	IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
13:37:37 273  	  in_updated_by IN CC_UPDATE.UPDATED_BY%TYPE
13:37:37 274  	) AS
13:37:37 275  	BEGIN
13:37:37 276  	  UPDATE CC_UPDATE
13:37:37 277  	  SET CC_UPDATE_STATUS = in_status,
13:37:37 278  	  UPDATE_DATE = SYSDATE,
13:37:37 279  	  UPDATED_BY = in_updated_by
13:37:37 280  	  WHERE ID = in_id;
13:37:37 281  	END UPDATE_CC_UPDATE_STATUS;
13:37:37 282  
13:37:37 283  	/****************************************************************************/
13:37:37 284  
13:37:37 285  	PROCEDURE GET_REQUEST_FILE_BY_FILENAME (
13:37:37 286  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE,
13:37:37 287  	  out_request_file     OUT SYS_REFCURSOR
13:37:37 288  	) AS
13:37:37 289  	BEGIN
13:37:37 290  	  OPEN out_request_file FOR
13:37:37 291  	  SELECT ID, FILE_NAME
13:37:37 292  	  FROM CC_REQUEST_FILE
13:37:37 293  	  WHERE FILE_NAME = in_request_filename;
13:37:37 294  	END GET_REQUEST_FILE_BY_FILENAME;
13:37:37 295  
13:37:37 296  	/****************************************************************************/
13:37:37 297  
13:37:37 298  	PROCEDURE SUSPEND_CREDIT_CARD (
13:37:37 299  	  in_credit_card_id  IN CREDIT_CARD.ID%TYPE,
13:37:37 300  	  in_updated_by      IN CREDIT_CARD.UPDATED_BY%TYPE
13:37:37 301  	) AS
13:37:37 302  	BEGIN
13:37:37 303  	  -- Create history
13:37:37 304  	  PROCS_HISTORY_V14.CREATE_CREDIT_CARD_HISTORY(
13:37:37 305  	      in_credit_card_id 	   => in_credit_card_id,
13:37:37 306  	      in_system_activity_reason_id => GLOBAL_ENUMS_V14.SAC_SYSTEM_APPLIED_RULE
13:37:37 307  	  );
13:37:37 308  
13:37:37 309  	  UPDATE CREDIT_CARD
13:37:37 310  	  SET UPDATE_DATE = SYSDATE,
13:37:37 311  	  UPDATED_BY = in_updated_by,
13:37:37 312  	  CREDIT_CARD_STATUS_ID = GLOBAL_STATUSES_V14.CREDIT_CARD_DISABLED
13:37:37 313  	  WHERE ID = in_credit_card_id;
13:37:37 314  	END SUSPEND_CREDIT_CARD;
13:37:37 315  
13:37:37 316  	/****************************************************************************/
13:37:37 317  
13:37:37 318  	PROCEDURE UPDATE_CREDIT_CARD (
13:37:37 319  	  in_credit_card_id   IN CREDIT_CARD.ID%TYPE,
13:37:37 320  	  in_last_four_cc     IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
13:37:37 321  	  in_expiration_date  IN CREDIT_CARD.EXPIRATION_DATE%TYPE,
13:37:37 322  	  in_updated_by       IN CREDIT_CARD.UPDATED_BY%TYPE
13:37:37 323  	) AS
13:37:37 324  	BEGIN
13:37:37 325  	  -- Create history
13:37:37 326  	  PROCS_HISTORY_V14.CREATE_CREDIT_CARD_HISTORY(
13:37:37 327  	      in_credit_card_id 	   => in_credit_card_id,
13:37:37 328  	      in_system_activity_reason_id => GLOBAL_ENUMS_V14.SAC_SYSTEM_APPLIED_RULE
13:37:37 329  	  );
13:37:37 330  
13:37:37 331  	  UPDATE CREDIT_CARD
13:37:37 332  	  SET UPDATE_DATE = SYSDATE,
13:37:37 333  	  UPDATED_BY = in_updated_by,
13:37:37 334  	  LAST_FOUR_CC = NVL(in_last_four_cc, LAST_FOUR_CC),
13:37:37 335  	  EXPIRATION_DATE = NVL(in_expiration_date, EXPIRATION_DATE)
13:37:37 336  	  WHERE ID = in_credit_card_id;
13:37:37 337  	END UPDATE_CREDIT_CARD;
13:37:37 338  
13:37:37 339  	/****************************************************************************/
13:37:37 340  
13:37:37 341  	PROCEDURE COMPLETABLE_REQUESTS (
13:37:37 342  	  out_request_files OUT SYS_REFCURSOR
13:37:37 343  	) AS
13:37:37 344  	BEGIN
13:37:37 345  	  OPEN out_request_files FOR
13:37:37 346  	  SELECT DISTINCT rf.ID, rf.FILE_NAME
13:37:37 347  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
13:37:37 348  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
13:37:37 349  	  AND rf.ID = u.CC_REQUEST_FILE_ID
13:37:37 350  	  AND u.CC_UPDATE_STATUS IN ('UPDATED', 'NO_UPDATE')
13:37:37 351  	  MINUS
13:37:37 352  	  SELECT rf.ID, rf.FILE_NAME
13:37:37 353  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
13:37:37 354  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
13:37:37 355  	  AND rf.ID = u.CC_REQUEST_FILE_ID
13:37:37 356  	  AND u.CC_UPDATE_STATUS NOT IN ('UPDATED', 'NO_UPDATE');
13:37:37 357  	END COMPLETABLE_REQUESTS;
13:37:37 358  
13:37:37 359  	/****************************************************************************/
13:37:37 360  
13:37:37 361  	PROCEDURE COMPLETABLE_REQUESTS_W_FAILS (
13:37:37 362  	  in_max_hours_before_report IN  NUMBER,
13:37:37 363  	  out_request_files	     OUT SYS_REFCURSOR
13:37:37 364  	) AS
13:37:37 365  	BEGIN
13:37:37 366  	  OPEN out_request_files FOR
13:37:37 367  	  SELECT DISTINCT rf.ID, rf.FILE_NAME
13:37:37 368  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
13:37:37 369  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
13:37:37 370  	  AND rf.ID = u.CC_REQUEST_FILE_ID
13:37:37 371  	  AND u.CC_UPDATE_STATUS  = 'REQUEST_FAILED'
13:37:37 372  	  AND u.UPDATE_DATE < SYSDATE - (in_max_hours_before_report / 24)
13:37:37 373  	  MINUS
13:37:37 374  	  SELECT rf.ID, rf.FILE_NAME
13:37:37 375  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
13:37:37 376  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
13:37:37 377  	  AND rf.ID = u.CC_REQUEST_FILE_ID
13:37:37 378  	  AND u.UPDATE_DATE < SYSDATE - (in_max_hours_before_report / 24)
13:37:37 379  	  AND u.CC_UPDATE_STATUS NOT IN ('UPDATED', 'NO_UPDATE', 'REQUEST_FAILED');
13:37:37 380  	END COMPLETABLE_REQUESTS_W_FAILS;
13:37:37 381  
13:37:37 382  END PROCS_CUPY;
13:37:37 383  
13:37:37 384  .
13:37:37 SQL> /

Package body created.

Elapsed: 00:00:00.24
13:37:37 SQL> 
13:37:37 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
13:37:37 SQL> spool off;


Subject: Nomad upgrade success: ECPR@rac01.prd.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: steven.nedlin@nytimes.com
Nomad upgrade operation success. 
        
        Details
        -------
        DB Hostname: rac01.prd.ewr1.nytimes.com
        SID: ECPR
        Schema: core_owner
        Migration: 11.1-release-1.9.0-procs_cupy
        SVN Revision: 9634
        Duration: 1