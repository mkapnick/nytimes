11:19:08 SQL> @/dbbackups/ECPR/migrations/core_owner/13.0-release-1.10.0-common/upgrade.sql
11:19:08 SQL> --------------------------------------------------------------------------------
11:19:08 SQL> -- DDL for package APP_EXCEPTION_CODES
11:19:08 SQL> --------------------------------------------------------------------------------
11:19:08 SQL> 
11:19:08 SQL> CREATE OR REPLACE PACKAGE "APP_EXCEPTION_CODES_V15"
11:19:08   2  AS
11:19:08   3  -- norlov 09.09 : current_timestamp replaced by sysdate
11:19:08   4  -- in comparisons (according to #38816)
11:19:08   5  -- 2010-09-13: according to #38860, current_timestamp calls replaced by SYSDATE variable
11:19:08   6  -- to use the same date in whole procedure, also single current_timestamp calls
11:19:08   7  -- replaced by SYSDATE calls
11:19:08   8  
11:19:08   9  
11:19:08  10  	-- EXCEPTION CODES
11:19:08  11  	UNKNOWN_ERROR	  CONSTANT NUMBER := -20001;
11:19:08  12  	NOT_FOUND	  CONSTANT NUMBER := -20002;
11:19:08  13  	STATE_ERROR	  CONSTANT NUMBER := -20003;
11:19:08  14  	DUPLICATE_ERROR   CONSTANT NUMBER := -20004;
11:19:08  15  	HISTORY_ERROR	  CONSTANT NUMBER := -20005;
11:19:08  16  	INVALID_PARAMETER CONSTANT NUMBER := -20006;
11:19:08  17  	INTERNAL_ERROR	  CONSTANT NUMBER := -20007;
11:19:08  18  	CONFLICT_ERROR	  CONSTANT NUMBER := -20008;
11:19:08  19  END APP_EXCEPTION_CODES_V15;
11:19:08  20  .
11:19:08 SQL> /

Package created.

Elapsed: 00:00:00.92
11:19:09 SQL> 
11:19:09 SQL> 
11:19:09 SQL> 
11:19:09 SQL> --------------------------------------------------------------------------------
11:19:09 SQL> -- DDL for package GLOBAL_CONSTANTS
11:19:09 SQL> --------------------------------------------------------------------------------
11:19:09 SQL> 
11:19:09 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_CONSTANTS_V15" AS
11:19:09   2  
11:19:09   3  TRUE  CONSTANT NUMBER := 1;
11:19:09   4  FALSE CONSTANT NUMBER := 0;
11:19:09   5  
11:19:09   6  INFINITY CONSTANT NUMBER := -1;
11:19:09   7  
11:19:09   8  ONE_DAY_INTERVAL	 CONSTANT INTERVAL DAY TO SECOND := INTERVAL '1' DAY;
11:19:09   9  ONE_MONTH_INTERVAL CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' MONTH;
11:19:09  10  ONE_YEAR_INTERVAL   CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' YEAR;
11:19:09  11  
11:19:09  12  -- Exception delimeter
11:19:09  13  EXCEPTION_DELIMETER CONSTANT VARCHAR2(1) := chr(10);
11:19:09  14  
11:19:09  15  -- Number of days when core should return all money
11:19:09  16  OFFER_START_GRACE_PERIOD CONSTANT NUMBER := 7;
11:19:09  17  
11:19:09  18  -- NUmber of days when core should not return any money
11:19:09  19  OFFER_END_GRACE_PERIOD   CONSTANT NUMBER := 7;
11:19:09  20  
11:19:09  21  -- OFFER CHAIN: is refundable META DATTA RULE
11:19:09  22  OFFER_CHAIN_IS_REFUNDABLE   CONSTANT NUMBER := 1;
11:19:09  23  OFFER_CHAIN_REFUNDABLE_RULE CONSTANT VARCHAR2(10) := 'REFUNDABLE';
11:19:09  24  
11:19:09  25  -- OFFER CHAIN REFUNDABLE RULES
11:19:09  26  OFFER_CHAIN_FULL_REFUND	  CONSTANT VARCHAR2(22) := 'FULL_REFUND_DAYS_LIMIT';
11:19:09  27  OFFER_CHAIN_PRORATED_REFUND CONSTANT VARCHAR2(26) := 'PRORATED_REFUND_DAYS_LIMIT';
11:19:09  28  
11:19:09  29  -- norlov: name of the OC eligibility
11:19:09  30  GIFT_CERTIFICATE_REQUIRED CONSTANT VARCHAR2(25) := 'gift certificate required';
11:19:09  31  
11:19:09  32  -- norlov: flag for set elibility
11:19:09  33  ELIGIBILITY_FLAG_SET CONSTANT VARCHAR2(1) := '1';
11:19:09  34  
11:19:09  35  -- norlov: name of OC metadata
11:19:09  36  REDEMPTION_OC_ID CONSTANT VARCHAR2(25) := 'redemption offer chain id';
11:19:09  37  
11:19:09  38  -- norlov: name of the OC eligibility
11:19:09  39  MAX_CONCURRENT_SUBS CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
11:19:09  40  
11:19:09  41  -- norlov: 'unlimited' value for max concurrent subscription number
11:19:09  42  MAX_CONCURRENT_SUBS_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
11:19:09  43  
11:19:09  44  -- 'unlimited' value for max concurrent products number
11:19:09  45  MAX_CONSURRENT_PRD_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
11:19:09  46  
11:19:09  47  -- UPGRADABLE_OFFER_CHAIN_ID
11:19:09  48  OCMD_UPGRADABLE_OFFER_CHAIN_ID CONSTANT VARCHAR(25) := 'UPGRADABLE_OFFER_CHAIN_ID';
11:19:09  49  
11:19:09  50  -- Max number of records that should be return
11:19:09  51  MAX_RETURN_COUNT NUMBER := 1000;
11:19:09  52  
11:19:09  53  -- Share end date for non-group-pass group accounts
11:19:09  54  MAX_DATE CONSTANT DATE := TO_DATE('12/31/9999', 'MM/DD/YYYY');
11:19:09  55  
11:19:09  56  END GLOBAL_CONSTANTS_V15;
11:19:09  57  .
11:19:09 SQL> /

Package created.

Elapsed: 00:00:00.06
11:19:09 SQL> 
11:19:09 SQL> 
11:19:09 SQL> 
11:19:09 SQL> --------------------------------------------------------------------------------
11:19:09 SQL> -- DDL for package GLOBAL_ENUMS
11:19:09 SQL> --------------------------------------------------------------------------------
11:19:09 SQL> 
11:19:09 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_ENUMS_V15" AS
11:19:09   2  
11:19:09   3  ----
11:19:09   4  -- CREDIT CARD TYPES
11:19:09   5  
11:19:09   6  CREDIT_CARD_AMEX	      CONSTANT NUMBER := 1;
11:19:09   7  CREDIT_CARD_VISA	      CONSTANT NUMBER := 2;
11:19:09   8  CREDIT_CARD_MASTER_CARD CONSTANT NUMBER := 3;
11:19:09   9  CREDIT_CARD_DISCOVER    CONSTANT NUMBER := 4;
11:19:09  10  
11:19:09  11  ----
11:19:09  12  -- INSTRUMENT TYPE
11:19:09  13  
11:19:09  14  INSTRUMENT_CREDIT_CARD	   CONSTANT NUMBER := 1;
11:19:09  15  INSTRUMENT_PAYPAL 	   CONSTANT NUMBER := 2;
11:19:09  16  INSTRUMENT_GIFT_CERTIFICATE  CONSTANT NUMBER := 3;
11:19:09  17  INSTRUMENT_ZCI_INSTRUMENT    CONSTANT NUMBER := 4;
11:19:09  18  
11:19:09  19  ----
11:19:09  20  -- SYSTEM ACTIVITY REASONS
11:19:09  21  
11:19:09  22  SAC_SYSTEM_APPLIED_RULE CONSTANT NUMBER := 1;
11:19:09  23  
11:19:09  24  ----
11:19:09  25  -- GIFT CERTIFICATES TYPE
11:19:09  26  
11:19:09  27  GSTYPE_GSTYPE1 CONSTANT NUMBER := 1;
11:19:09  28  GSTYPE_GSTYPE2 CONSTANT NUMBER := 2;
11:19:09  29  
11:19:09  30  ----
11:19:09  31  -- SYSTEM CATEGORY
11:19:09  32  
11:19:09  33  SYSTEM_CATEGORY_LIVE CONSTANT NUMBER := 1;
11:19:09  34  SYSTEM_CATEGORY_TEST CONSTANT NUMBER := 2;
11:19:09  35  
11:19:09  36  ----
11:19:09  37  -- OFFER_RECURRENCES
11:19:09  38  
11:19:09  39  OFFER_REC_INFINITY CONSTANT NUMBER := -1;
11:19:09  40  
11:19:09  41  ----
11:19:09  42  -- TAX JURISDICTION LEVELS
11:19:09  43  -- We need only international right now
11:19:09  44  
11:19:09  45  JURIS_INTERNATIONAL CONSTANT NUMBER := 5;
11:19:09  46  
11:19:09  47  ----
11:19:09  48  -- TAX TYPES
11:19:09  49  
11:19:09  50  TAX_TYPE_SALES CONSTANT NUMBER := 1;
11:19:09  51  TAX_TYPE_VAT   CONSTANT NUMBER := 2;
11:19:09  52  
11:19:09  53  END GLOBAL_ENUMS_V15;
11:19:09  54  .
11:19:09 SQL> /

Package created.

Elapsed: 00:00:00.02
11:19:10 SQL> 
11:19:10 SQL> 
11:19:10 SQL> 
11:19:10 SQL> --------------------------------------------------------------------------------
11:19:10 SQL> -- DDL for package GLOBAL_STATUSES
11:19:10 SQL> --------------------------------------------------------------------------------
11:19:10 SQL> 
11:19:10 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_STATUSES_V15" AS
11:19:10   2  
11:19:10   3  
11:19:10   4  ----
11:19:10   5  -- ACCOUNT STATUSES
11:19:10   6  
11:19:10   7  ACCOUNT_ACTIVE   CONSTANT NUMBER := 1;
11:19:10   8  ACCOUNT_FROZEN   CONSTANT NUMBER := 2;
11:19:10   9  ACCOUNT_DISABLED CONSTANT NUMBER := 3;
11:19:10  10  
11:19:10  11  ----
11:19:10  12  -- SUBSCRIPTION STATUSES
11:19:10  13  
11:19:10  14  SUBSCRIPTION_ACTIVE	  CONSTANT NUMBER := 1;
11:19:10  15  SUBSCRIPTION_SUSPENDED	  CONSTANT NUMBER := 2;
11:19:10  16  SUBSCRIPTION_CANCELED	  CONSTANT NUMBER := 3;
11:19:10  17  SUBSCRIPTION_CLOSED	  CONSTANT NUMBER := 4;
11:19:10  18  SUBSCRIPTION_FALSE_START	  CONSTANT NUMBER := 5;
11:19:10  19  
11:19:10  20  ----
11:19:10  21  -- CREDIT_CARD STATUSES
11:19:10  22  
11:19:10  23  CREDIT_CARD_ACTIVE   CONSTANT NUMBER := 1;
11:19:10  24  CREDIT_CARD_INVALID  CONSTANT NUMBER := 2; -- WAS INACTIVE
11:19:10  25  CREDIT_CARD_DISABLED CONSTANT NUMBER := 3; -- WAS FROZEN
11:19:10  26  CREDIT_CARD_EXPIRED  CONSTANT NUMBER := 4;
11:19:10  27  
11:19:10  28  ----
11:19:10  29  -- PAYPAL STATUSES
11:19:10  30  
11:19:10  31  PAYPAL_ACTIVE   CONSTANT NUMBER := 1;
11:19:10  32  PAYPAL_INACTIVE CONSTANT NUMBER := 2;
11:19:10  33  PAYPAL_FROZEN   CONSTANT NUMBER := 3;
11:19:10  34  
11:19:10  35  ----
11:19:10  36  -- GIFT_CERTIFICATE STATUSES
11:19:10  37  
11:19:10  38  GIFT_CERTIFICATE_ACTIVE	 CONSTANT NUMBER := 1;
11:19:10  39  GIFT_CERTIFICATE_FINALIZED CONSTANT NUMBER := 2;
11:19:10  40  GIFT_CERTIFICATE_REFUNDED  CONSTANT NUMBER := 3;
11:19:10  41  
11:19:10  42  ----
11:19:10  43  -- TRANSACTION STATUSES
11:19:10  44  
11:19:10  45  TRANSACTION_PENDING	     CONSTANT NUMBER := 1;
11:19:10  46  TRANSACTION_CLOSED	     CONSTANT NUMBER := 2;
11:19:10  47  TRANSACTION_CHARGEBACK	     CONSTANT NUMBER := 3;
11:19:10  48  TRANSACTION_PREPARE	     CONSTANT NUMBER := 1;
11:19:10  49  TRANSACTION_DECLINED	     CONSTANT NUMBER := 7;
11:19:10  50  
11:19:10  51  ----
11:19:10  52  -- TRANSACTION_ATTEMPT_STATUS
11:19:10  53  TRANS_ATTEMPT_IN_PROGRESS CONSTANT NUMBER := 1;
11:19:10  54  TRANS_ATTEMPT_SUCCESS	CONSTANT NUMBER := 2;
11:19:10  55  TRANS_ATTEMPT_FAILED	CONSTANT NUMBER := 3;
11:19:10  56  
11:19:10  57  ----
11:19:10  58  -- PRODUCT STATUSES
11:19:10  59  
11:19:10  60  PRODUCT_ACTIVE	CONSTANT NUMBER := 1;
11:19:10  61  PRODUCT_INACTIVE	CONSTANT NUMBER := 2;
11:19:10  62  PRODUCT_DISABLED	CONSTANT NUMBER := 3;
11:19:10  63  
11:19:10  64  ----
11:19:10  65  -- LICENSE STATUSES
11:19:10  66  
11:19:10  67  LICENSE_CLOSED CONSTANT NUMBER := 1;
11:19:10  68  LICENSE_ACTIVE CONSTANT NUMBER := 2;
11:19:10  69  
11:19:10  70  ----
11:19:10  71  -- INVOICE STATUSES
11:19:10  72  
11:19:10  73  INVOICE_OPEN		  CONSTANT NUMBER := 1; -- IN SPECS INVOICE_PENDING
11:19:10  74  INVOICE_CLOSED		  CONSTANT NUMBER := 3; -- IN SPECS INVOICE_PAID
11:19:10  75  /*
11:19:10  76  Next statuses were deleted by Sergey.
11:19:10  77  INVOICE_PENDING_TRANSACTION CONSTANT NUMBER := 2; -- IN SPECS INVOICE_PENDING_TRANSACTION
11:19:10  78  INVOICE_LEGACY		  CONSTANT NUMBER := 4;
11:19:10  79  INVOICE_FAILED		  CONSTANT NUMBER := 5; -- FAILED INVOICE
11:19:10  80  INVOICE_CANCELED		  CONSTANT NUMBER := 6; -- CANCELED INVOICE
11:19:10  81  */
11:19:10  82  
11:19:10  83  ----
11:19:10  84  -- CHARGE STATUSES
11:19:10  85  
11:19:10  86  CHARGE_OPENED    CONSTANT NUMBER := 1;
11:19:10  87  CHARGE_PROCESSED CONSTANT NUMBER := 2;
11:19:10  88  CHARGE_CANCELED  CONSTANT NUMBER := 3;
11:19:10  89  
11:19:10  90  ----
11:19:10  91  -- OFFER STATUSES
11:19:10  92  
11:19:10  93  OFFER_ACTIVE   CONSTANT NUMBER := 1;
11:19:10  94  OFFER_INACTIVE CONSTANT NUMBER := 2;
11:19:10  95  OFFER_DISABLED CONSTANT NUMBER := 3;
11:19:10  96  
11:19:10  97  ----
11:19:10  98  -- OFFER_CHAIN STATUSES
11:19:10  99  
11:19:10 100  OFFER_CHAIN_ACTIVE   CONSTANT NUMBER := 1;
11:19:10 101  OFFER_CHAIN_INACTIVE CONSTANT NUMBER := 2;
11:19:10 102  OFFER_CHAIN_DISABLED CONSTANT NUMBER := 3;
11:19:10 103  
11:19:10 104  ----
11:19:10 105  -- ZERO_CHARGE_INSTRUMENT STATUSES
11:19:10 106  
11:19:10 107  ZERO_CHARGE_INSTR_ACTIVE CONSTANT NUMBER := 1;
11:19:10 108  ZERO_CHARGE_INSTR_DISABLED CONSTANT NUMBER := 2;
11:19:10 109  
11:19:10 110  ----
11:19:10 111  -- SUBSCRIPTION_CANCELATION_REASONS
11:19:10 112  
11:19:10 113  SUBSCR_CANC_REASON_ACTIVE CONSTANT NUMBER := 1;
11:19:10 114  SUBSCR_CANC_REASON_INACTIVE CONSTANT NUMBER := 1;
11:19:10 115  
11:19:10 116  GROUP_ACC_IP_RNG_ACTIVE CONSTANT NUMBER := 1;
11:19:10 117  GROUP_ACC_IP_RNG_INACTIVE CONSTANT NUMBER := 2;
11:19:10 118  
11:19:10 119  GROUP_ACC_EMAIL_DOMAIN_ACT CONSTANT NUMBER := 1;
11:19:10 120  GROUP_ACC_EMAIL_DOMAIN_INACT CONSTANT NUMBER := 0;
11:19:10 121  
11:19:10 122  END GLOBAL_STATUSES_V15;
11:19:10 123  .
11:19:10 SQL> /

Package created.

Elapsed: 00:00:00.02
11:19:10 SQL> 
11:19:10 SQL> 
11:19:10 SQL> 
11:19:10 SQL> --------------------------------------------------------------------------------
11:19:10 SQL> -- DDL for package PROCS_COMMON
11:19:10 SQL> --------------------------------------------------------------------------------
11:19:10 SQL> 
11:19:10 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V15" AS
11:19:10   2  
11:19:10   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
11:19:10   4  	in_duration IN VARCHAR2,
11:19:10   5  	in_start_date IN DATE
11:19:10   6  ) RETURN DATE;
11:19:10   7  
11:19:10   8  PROCEDURE ISO8601DURATION_TO_INTERVALS(
11:19:10   9  /*
11:19:10  10  Throws exceptions:
11:19:10  11  APP_EXCEPTION_CODES_V15.INTERNAL_ERROR
11:19:10  12  APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:19:10  13  */
11:19:10  14  	in_duration IN	VARCHAR2,
11:19:10  15  	out_years   OUT NUMBER,
11:19:10  16  	out_months  OUT NUMBER,
11:19:10  17  	out_days    OUT NUMBER
11:19:10  18  );
11:19:10  19  
11:19:10  20  FUNCTION NORMALIZE_DATE(
11:19:10  21   in_date IN DATE
11:19:10  22  ) RETURN DATE;
11:19:10  23  
11:19:10  24  FUNCTION GENERATE_EXCEPTION_MESSAGE(
11:19:10  25  	in_sproc_name	    IN VARCHAR2,
11:19:10  26  	in_error_message    IN VARCHAR2,
11:19:10  27  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
11:19:10  28  ) RETURN VARCHAR2;
11:19:10  29  
11:19:10  30  PROCEDURE THROW_EXCEPTION(
11:19:10  31  	in_exception_code   IN NUMBER,
11:19:10  32  	in_sproc_name	    IN VARCHAR2,
11:19:10  33  	in_error_message    IN VARCHAR2,
11:19:10  34  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
11:19:10  35  );
11:19:10  36  
11:19:10  37  FUNCTION ROUND_10_6_TO_10_2 (
11:19:10  38  	in_number NUMBER
11:19:10  39  ) RETURN NUMBER;
11:19:10  40  
11:19:10  41  END PROCS_COMMON_V15;
11:19:10  42  .
11:19:10 SQL> /

Package created.

Elapsed: 00:00:00.30
11:19:10 SQL> 
11:19:10 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V15" AS
11:19:10   2  
11:19:10   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
11:19:10   4  	in_duration IN VARCHAR2,
11:19:10   5  	in_start_date IN DATE
11:19:10   6  ) RETURN DATE AS
11:19:10   7  	var_end_date DATE;
11:19:10   8  	var_years NUMBER;
11:19:10   9  	var_months NUMBER;
11:19:10  10  	var_days NUMBER;
11:19:10  11  	var_ym_interval INTERVAL YEAR TO MONTH;
11:19:10  12  	var_ds_interval INTERVAL DAY(3) TO SECOND;
11:19:10  13  BEGIN
11:19:10  14  	PROCS_COMMON_V15.ISO8601DURATION_TO_INTERVALS(in_duration, var_years, var_months, var_days);
11:19:10  15  	var_ym_interval := var_years || '-' || var_months;
11:19:10  16  	var_ds_interval := var_days || ' 0:0:0';
11:19:10  17  
11:19:10  18  	var_end_date := in_start_date + var_ym_interval + var_ds_interval;
11:19:10  19  	RETURN var_end_date;
11:19:10  20  END ADD_ISO8601DURATION_TO_DATE;
11:19:10  21  
11:19:10  22  PROCEDURE ISO8601DURATION_TO_INTERVALS(
11:19:10  23  /*
11:19:10  24  Throws exceptions:
11:19:10  25  APP_EXCEPTION_CODES_V15.INTERNAL_ERROR
11:19:10  26  APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:19:10  27  */
11:19:10  28  	in_duration IN	VARCHAR2,
11:19:10  29  	out_years   OUT NUMBER,
11:19:10  30  	out_months  OUT NUMBER,
11:19:10  31  	out_days    OUT NUMBER
11:19:10  32  ) AS
11:19:10  33  SPROC_NAME	  CONSTANT VARCHAR2(28) := 'ISO8601DURATION_TO_INTERVALS';
11:19:10  34  -- VARIABLES
11:19:10  35  var_checking_status NUMBER;
11:19:10  36  temp_duration	  VARCHAR2(29);
11:19:10  37  var_is_t_founded	  NUMBER;
11:19:10  38  
11:19:10  39  var_date_duration VARCHAR2(29);
11:19:10  40  var_time_duration VARCHAR2(29);
11:19:10  41  
11:19:10  42  var_years   VARCHAR2(4);
11:19:10  43  var_monthes VARCHAR2(4);
11:19:10  44  var_days	  VARCHAR2(4);
11:19:10  45  var_hours   VARCHAR2(4);
11:19:10  46  var_minutes VARCHAR2(4);
11:19:10  47  var_seconds VARCHAR2(4);
11:19:10  48  
11:19:10  49  -- EXCEPTIONS
11:19:10  50  BAD_ISO_FORMAT EXCEPTION;
11:19:10  51  BEGIN
11:19:10  52  
11:19:10  53  	var_years   := '0';
11:19:10  54  	var_monthes := '0';
11:19:10  55  	var_days    := '0';
11:19:10  56  	var_hours   := '0';
11:19:10  57  	var_minutes := '0';
11:19:10  58  	var_seconds := '0';
11:19:10  59  
11:19:10  60  	SELECT
11:19:10  61  	  COUNT(*) into var_checking_status
11:19:10  62  	FROM
11:19:10  63  	  DUAL
11:19:10  64  	WHERE
11:19:10  65  	  REGEXP_LIKE(in_duration, '^P')
11:19:10  66  	  AND ROWNUM <= 1;
11:19:10  67  
11:19:10  68  	IF var_checking_status = 0 THEN
11:19:10  69  	  RAISE BAD_ISO_FORMAT;
11:19:10  70  	END IF;
11:19:10  71  
11:19:10  72  	SELECT
11:19:10  73  	  SUBSTR(in_duration, 2) into temp_duration
11:19:10  74  	FROM DUAL
11:19:10  75  	WHERE ROWNUM <= 1;
11:19:10  76  
11:19:10  77  	var_is_t_founded := INSTR(temp_duration, 'T');
11:19:10  78  
11:19:10  79  	IF var_is_t_founded > 1 OR var_is_t_founded = 0 THEN
11:19:10  80  	  -- RESOLVING DATE FROM ISO STRING
11:19:10  81  	  IF var_is_t_founded != 0 THEN
11:19:10  82  	    var_date_duration := SUBSTR(temp_duration, 1, var_is_t_founded - 1);
11:19:10  83  	  ELSE
11:19:10  84  	    var_date_duration := temp_duration;
11:19:10  85  	  END IF;
11:19:10  86  
11:19:10  87  	  SELECT
11:19:10  88  	    COUNT(*) into var_checking_status
11:19:10  89  	  FROM
11:19:10  90  	    DUAL
11:19:10  91  	  WHERE
11:19:10  92  	    REGEXP_LIKE(var_date_duration, '^(\d{1,3}Y){0,1}(\d{1,3}M){0,1}(\d{1,3}D){0,1}$')
11:19:10  93  	    AND ROWNUM <= 1;
11:19:10  94  
11:19:10  95  	  IF var_checking_status = 0 THEN
11:19:10  96  	    RAISE BAD_ISO_FORMAT;
11:19:10  97  	  END IF;
11:19:10  98  
11:19:10  99  	  IF INSTR(var_date_duration, 'Y') != 0 THEN
11:19:10 100  	    SELECT
11:19:10 101  	      REGEXP_SUBSTR(var_date_duration, '\d+Y') into var_years
11:19:10 102  	    FROM
11:19:10 103  	      DUAL;
11:19:10 104  	    var_years := SUBSTR(var_years, 1, LENGTH(var_years) - 1);
11:19:10 105  	  END IF;
11:19:10 106  
11:19:10 107  	  IF INSTR(var_date_duration, 'M') != 0 THEN
11:19:10 108  	    SELECT
11:19:10 109  	      REGEXP_SUBSTR(var_date_duration, '\d+M') into var_monthes
11:19:10 110  	    FROM
11:19:10 111  	      DUAL;
11:19:10 112  	    var_monthes := SUBSTR(var_monthes, 1, LENGTH(var_monthes) - 1);
11:19:10 113  	  END IF;
11:19:10 114  
11:19:10 115  	  IF INSTR(var_date_duration, 'D') != 0 THEN
11:19:10 116  	    SELECT
11:19:10 117  	      REGEXP_SUBSTR(var_date_duration, '\d+D') into var_days
11:19:10 118  	    FROM
11:19:10 119  	      DUAL;
11:19:10 120  	    var_days := SUBSTR(var_days, 1, LENGTH(var_days) - 1);
11:19:10 121  	  END IF;
11:19:10 122  	END IF;
11:19:10 123  
11:19:10 124  	IF (var_is_t_founded > 0) THEN
11:19:10 125  	  -- RESOLVING TIME FROM ISO STRING
11:19:10 126  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded + 1);
11:19:10 127  
11:19:10 128  	  SELECT
11:19:10 129  	    COUNT(*) into var_checking_status
11:19:10 130  	  FROM
11:19:10 131  	    DUAL
11:19:10 132  	  WHERE
11:19:10 133  	    REGEXP_LIKE(var_time_duration, '^(\d{1,3}H){0,1}(\d{1,3}M){0,1}(\d{1,3}S){0,1}$')
11:19:10 134  	    AND ROWNUM <= 1;
11:19:10 135  
11:19:10 136  	  IF var_checking_status = 0 THEN
11:19:10 137  	    RAISE BAD_ISO_FORMAT;
11:19:10 138  	  END IF;
11:19:10 139  
11:19:10 140  	  IF INSTR(var_time_duration, 'H') != 0 THEN
11:19:10 141  	    SELECT
11:19:10 142  	      REGEXP_SUBSTR(var_time_duration, '\d+H') into var_hours
11:19:10 143  	    FROM
11:19:10 144  	      DUAL;
11:19:10 145  	    var_hours := SUBSTR(var_hours, 1, LENGTH(var_hours) - 1);
11:19:10 146  	  END IF;
11:19:10 147  
11:19:10 148  	  IF INSTR(var_time_duration, 'M') != 0 THEN
11:19:10 149  	    SELECT
11:19:10 150  	      REGEXP_SUBSTR(var_time_duration, '\d+M') into var_minutes
11:19:10 151  	    FROM
11:19:10 152  	      DUAL;
11:19:10 153  	    var_minutes := SUBSTR(var_minutes, 1, LENGTH(var_minutes) - 1);
11:19:10 154  	  END IF;
11:19:10 155  
11:19:10 156  	  IF INSTR(var_time_duration, 'S') != 0 THEN
11:19:10 157  	    SELECT
11:19:10 158  	      REGEXP_SUBSTR(var_time_duration, '\d+S') into var_seconds
11:19:10 159  	    FROM
11:19:10 160  	      DUAL;
11:19:10 161  	    var_seconds := SUBSTR(var_seconds, 1, LENGTH(var_seconds) - 1);
11:19:10 162  	  END IF;
11:19:10 163  
11:19:10 164  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded);
11:19:10 165  	END IF;
11:19:10 166  
11:19:10 167  	out_years  := var_years;
11:19:10 168  	out_months := var_monthes;
11:19:10 169  	out_days   := var_days;
11:19:10 170  
11:19:10 171  EXCEPTION
11:19:10 172  WHEN BAD_ISO_FORMAT THEN
11:19:10 173  	PROCS_COMMON_V15.THROW_EXCEPTION(APP_EXCEPTION_CODES_V15.INTERNAL_ERROR,
11:19:10 174  	  SPROC_NAME, 'Bad date format');
11:19:10 175  WHEN OTHERS THEN
11:19:10 176  	PROCS_COMMON_V15.THROW_EXCEPTION(APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:19:10 177  	  SPROC_NAME, 'Unknown error', SQLERRM);
11:19:10 178  END ISO8601DURATION_TO_INTERVALS;
11:19:10 179  
11:19:10 180  /******************************************************************************/
11:19:10 181  
11:19:10 182  FUNCTION NORMALIZE_DATE(
11:19:10 183   in_date IN DATE
11:19:10 184  ) RETURN DATE AS
11:19:10 185  -- VARIABLES
11:19:10 186  var_normalized_date DATE;
11:19:10 187  BEGIN
11:19:10 188  	var_normalized_date := TRUNC(in_date);
11:19:10 189  	RETURN var_normalized_date;
11:19:10 190  END NORMALIZE_DATE;
11:19:10 191  
11:19:10 192  /******************************************************************************/
11:19:10 193  
11:19:10 194  FUNCTION GENERATE_EXCEPTION_MESSAGE(
11:19:10 195  	in_sproc_name	    IN VARCHAR2,
11:19:10 196  	in_error_message    IN VARCHAR2,
11:19:10 197  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
11:19:10 198  ) RETURN VARCHAR2 AS
11:19:10 199  BEGIN
11:19:10 200  	IF in_error_stacktrace IS NOT NULL THEN
11:19:10 201  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || GLOBAL_CONSTANTS_V15.EXCEPTION_DELIMETER || in_error_stacktrace;
11:19:10 202  	END IF;
11:19:10 203  	RETURN
11:19:10 204  	  in_sproc_name || ': ' || in_error_message;
11:19:10 205  END GENERATE_EXCEPTION_MESSAGE;
11:19:10 206  
11:19:10 207  /******************************************************************************/
11:19:10 208  
11:19:10 209  PROCEDURE THROW_EXCEPTION(
11:19:10 210  	in_exception_code   IN NUMBER,
11:19:10 211  	in_sproc_name	    IN VARCHAR2,
11:19:10 212  	in_error_message    IN VARCHAR2,
11:19:10 213  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
11:19:10 214  ) AS
11:19:10 215  BEGIN
11:19:10 216  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
11:19:10 217  END;
11:19:10 218  
11:19:10 219  FUNCTION ROUND_10_6_TO_10_2 (
11:19:10 220  	in_number NUMBER
11:19:10 221  ) RETURN NUMBER AS
11:19:10 222  v_result NUMBER(10,2);
11:19:10 223  BEGIN
11:19:10 224  	v_result := in_number;
11:19:10 225  	return v_result;
11:19:10 226  END;
11:19:10 227  
11:19:10 228  END PROCS_COMMON_V15;
11:19:10 229  .
11:19:10 SQL> /

Package body created.

Elapsed: 00:00:00.18
11:19:10 SQL> 
11:19:10 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V15 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.05
11:19:10 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V15 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
11:19:10 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V15 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
11:19:10 SQL> 
11:19:10 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V15 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
11:19:10 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V15 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
11:19:10 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V15 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
11:19:10 SQL> 
11:19:10 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V15 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
11:19:10 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V15 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
11:19:10 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V15 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
11:19:10 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
11:19:10 SQL> spool off;


Subject: Nomad upgrade success: ECPR@rac01.prd.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: steven.nedlin@nytimes.com
Nomad upgrade operation success. 
        
        Details
        -------
        DB Hostname: rac01.prd.ewr1.nytimes.com
        SID: ECPR
        Schema: core_owner
        Migration: 13.0-release-1.10.0-common
        SVN Revision: 9677
        Duration: 2