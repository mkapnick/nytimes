16:51:06 SQL> @/dbbackups/ECST/migrations/core_owner/13.0-release-1.10.0-common/upgrade.sql
16:51:06 SQL> --------------------------------------------------------------------------------
16:51:06 SQL> -- DDL for package APP_EXCEPTION_CODES
16:51:06 SQL> --------------------------------------------------------------------------------
16:51:06 SQL> 
16:51:06 SQL> CREATE OR REPLACE PACKAGE "APP_EXCEPTION_CODES_V15"
16:51:06   2  AS
16:51:06   3  -- norlov 09.09 : current_timestamp replaced by sysdate
16:51:06   4  -- in comparisons (according to #38816)
16:51:06   5  -- 2010-09-13: according to #38860, current_timestamp calls replaced by SYSDATE variable
16:51:06   6  -- to use the same date in whole procedure, also single current_timestamp calls
16:51:06   7  -- replaced by SYSDATE calls
16:51:06   8  
16:51:06   9  
16:51:06  10  	-- EXCEPTION CODES
16:51:06  11  	UNKNOWN_ERROR	  CONSTANT NUMBER := -20001;
16:51:06  12  	NOT_FOUND	  CONSTANT NUMBER := -20002;
16:51:06  13  	STATE_ERROR	  CONSTANT NUMBER := -20003;
16:51:06  14  	DUPLICATE_ERROR   CONSTANT NUMBER := -20004;
16:51:06  15  	HISTORY_ERROR	  CONSTANT NUMBER := -20005;
16:51:06  16  	INVALID_PARAMETER CONSTANT NUMBER := -20006;
16:51:06  17  	INTERNAL_ERROR	  CONSTANT NUMBER := -20007;
16:51:06  18  	CONFLICT_ERROR	  CONSTANT NUMBER := -20008;
16:51:06  19  END APP_EXCEPTION_CODES_V15;
16:51:06  20  .
16:51:06 SQL> /

Package created.

Elapsed: 00:00:00.88
16:51:07 SQL> 
16:51:07 SQL> 
16:51:07 SQL> 
16:51:07 SQL> --------------------------------------------------------------------------------
16:51:07 SQL> -- DDL for package GLOBAL_CONSTANTS
16:51:07 SQL> --------------------------------------------------------------------------------
16:51:07 SQL> 
16:51:07 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_CONSTANTS_V15" AS
16:51:07   2  
16:51:07   3  TRUE  CONSTANT NUMBER := 1;
16:51:07   4  FALSE CONSTANT NUMBER := 0;
16:51:07   5  
16:51:07   6  INFINITY CONSTANT NUMBER := -1;
16:51:07   7  
16:51:07   8  ONE_DAY_INTERVAL	 CONSTANT INTERVAL DAY TO SECOND := INTERVAL '1' DAY;
16:51:07   9  ONE_MONTH_INTERVAL CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' MONTH;
16:51:07  10  ONE_YEAR_INTERVAL   CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' YEAR;
16:51:07  11  
16:51:07  12  -- Exception delimeter
16:51:07  13  EXCEPTION_DELIMETER CONSTANT VARCHAR2(1) := chr(10);
16:51:07  14  
16:51:07  15  -- Number of days when core should return all money
16:51:07  16  OFFER_START_GRACE_PERIOD CONSTANT NUMBER := 7;
16:51:07  17  
16:51:07  18  -- NUmber of days when core should not return any money
16:51:07  19  OFFER_END_GRACE_PERIOD   CONSTANT NUMBER := 7;
16:51:07  20  
16:51:07  21  -- OFFER CHAIN: is refundable META DATTA RULE
16:51:07  22  OFFER_CHAIN_IS_REFUNDABLE   CONSTANT NUMBER := 1;
16:51:07  23  OFFER_CHAIN_REFUNDABLE_RULE CONSTANT VARCHAR2(10) := 'REFUNDABLE';
16:51:07  24  
16:51:07  25  -- OFFER CHAIN REFUNDABLE RULES
16:51:07  26  OFFER_CHAIN_FULL_REFUND	  CONSTANT VARCHAR2(22) := 'FULL_REFUND_DAYS_LIMIT';
16:51:07  27  OFFER_CHAIN_PRORATED_REFUND CONSTANT VARCHAR2(26) := 'PRORATED_REFUND_DAYS_LIMIT';
16:51:07  28  
16:51:07  29  -- norlov: name of the OC eligibility
16:51:07  30  GIFT_CERTIFICATE_REQUIRED CONSTANT VARCHAR2(25) := 'gift certificate required';
16:51:07  31  
16:51:07  32  -- norlov: flag for set elibility
16:51:07  33  ELIGIBILITY_FLAG_SET CONSTANT VARCHAR2(1) := '1';
16:51:07  34  
16:51:07  35  -- norlov: name of OC metadata
16:51:07  36  REDEMPTION_OC_ID CONSTANT VARCHAR2(25) := 'redemption offer chain id';
16:51:07  37  
16:51:07  38  -- norlov: name of the OC eligibility
16:51:07  39  MAX_CONCURRENT_SUBS CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
16:51:07  40  
16:51:07  41  -- norlov: 'unlimited' value for max concurrent subscription number
16:51:07  42  MAX_CONCURRENT_SUBS_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
16:51:07  43  
16:51:07  44  -- 'unlimited' value for max concurrent products number
16:51:07  45  MAX_CONSURRENT_PRD_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
16:51:07  46  
16:51:07  47  -- UPGRADABLE_OFFER_CHAIN_ID
16:51:07  48  OCMD_UPGRADABLE_OFFER_CHAIN_ID CONSTANT VARCHAR(25) := 'UPGRADABLE_OFFER_CHAIN_ID';
16:51:07  49  
16:51:07  50  -- Max number of records that should be return
16:51:07  51  MAX_RETURN_COUNT NUMBER := 1000;
16:51:07  52  
16:51:07  53  -- Share end date for non-group-pass group accounts
16:51:07  54  MAX_DATE CONSTANT DATE := TO_DATE('12/31/9999', 'MM/DD/YYYY');
16:51:07  55  
16:51:07  56  END GLOBAL_CONSTANTS_V15;
16:51:07  57  .
16:51:07 SQL> /

Package created.

Elapsed: 00:00:00.04
16:51:07 SQL> 
16:51:07 SQL> 
16:51:07 SQL> 
16:51:07 SQL> --------------------------------------------------------------------------------
16:51:07 SQL> -- DDL for package GLOBAL_ENUMS
16:51:07 SQL> --------------------------------------------------------------------------------
16:51:07 SQL> 
16:51:07 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_ENUMS_V15" AS
16:51:07   2  
16:51:07   3  ----
16:51:07   4  -- CREDIT CARD TYPES
16:51:07   5  
16:51:07   6  CREDIT_CARD_AMEX	      CONSTANT NUMBER := 1;
16:51:07   7  CREDIT_CARD_VISA	      CONSTANT NUMBER := 2;
16:51:07   8  CREDIT_CARD_MASTER_CARD CONSTANT NUMBER := 3;
16:51:07   9  CREDIT_CARD_DISCOVER    CONSTANT NUMBER := 4;
16:51:07  10  
16:51:07  11  ----
16:51:07  12  -- INSTRUMENT TYPE
16:51:07  13  
16:51:07  14  INSTRUMENT_CREDIT_CARD	   CONSTANT NUMBER := 1;
16:51:07  15  INSTRUMENT_PAYPAL 	   CONSTANT NUMBER := 2;
16:51:07  16  INSTRUMENT_GIFT_CERTIFICATE  CONSTANT NUMBER := 3;
16:51:07  17  INSTRUMENT_ZCI_INSTRUMENT    CONSTANT NUMBER := 4;
16:51:07  18  
16:51:07  19  ----
16:51:07  20  -- SYSTEM ACTIVITY REASONS
16:51:07  21  
16:51:07  22  SAC_SYSTEM_APPLIED_RULE CONSTANT NUMBER := 1;
16:51:07  23  
16:51:07  24  ----
16:51:07  25  -- GIFT CERTIFICATES TYPE
16:51:07  26  
16:51:07  27  GSTYPE_GSTYPE1 CONSTANT NUMBER := 1;
16:51:07  28  GSTYPE_GSTYPE2 CONSTANT NUMBER := 2;
16:51:07  29  
16:51:07  30  ----
16:51:07  31  -- SYSTEM CATEGORY
16:51:07  32  
16:51:07  33  SYSTEM_CATEGORY_LIVE CONSTANT NUMBER := 1;
16:51:07  34  SYSTEM_CATEGORY_TEST CONSTANT NUMBER := 2;
16:51:07  35  
16:51:07  36  ----
16:51:07  37  -- OFFER_RECURRENCES
16:51:07  38  
16:51:07  39  OFFER_REC_INFINITY CONSTANT NUMBER := -1;
16:51:07  40  
16:51:07  41  ----
16:51:07  42  -- TAX JURISDICTION LEVELS
16:51:07  43  -- We need only international right now
16:51:07  44  
16:51:07  45  JURIS_INTERNATIONAL CONSTANT NUMBER := 5;
16:51:07  46  
16:51:07  47  ----
16:51:07  48  -- TAX TYPES
16:51:07  49  
16:51:07  50  TAX_TYPE_SALES CONSTANT NUMBER := 1;
16:51:07  51  TAX_TYPE_VAT   CONSTANT NUMBER := 2;
16:51:07  52  
16:51:07  53  END GLOBAL_ENUMS_V15;
16:51:07  54  .
16:51:07 SQL> /

Package created.

Elapsed: 00:00:00.02
16:51:07 SQL> 
16:51:07 SQL> 
16:51:07 SQL> 
16:51:07 SQL> --------------------------------------------------------------------------------
16:51:07 SQL> -- DDL for package GLOBAL_STATUSES
16:51:07 SQL> --------------------------------------------------------------------------------
16:51:07 SQL> 
16:51:07 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_STATUSES_V15" AS
16:51:07   2  
16:51:07   3  
16:51:07   4  ----
16:51:07   5  -- ACCOUNT STATUSES
16:51:07   6  
16:51:07   7  ACCOUNT_ACTIVE   CONSTANT NUMBER := 1;
16:51:07   8  ACCOUNT_FROZEN   CONSTANT NUMBER := 2;
16:51:07   9  ACCOUNT_DISABLED CONSTANT NUMBER := 3;
16:51:07  10  
16:51:07  11  ----
16:51:07  12  -- SUBSCRIPTION STATUSES
16:51:07  13  
16:51:07  14  SUBSCRIPTION_ACTIVE	  CONSTANT NUMBER := 1;
16:51:07  15  SUBSCRIPTION_SUSPENDED	  CONSTANT NUMBER := 2;
16:51:07  16  SUBSCRIPTION_CANCELED	  CONSTANT NUMBER := 3;
16:51:07  17  SUBSCRIPTION_CLOSED	  CONSTANT NUMBER := 4;
16:51:07  18  SUBSCRIPTION_FALSE_START	  CONSTANT NUMBER := 5;
16:51:07  19  
16:51:07  20  ----
16:51:07  21  -- CREDIT_CARD STATUSES
16:51:07  22  
16:51:07  23  CREDIT_CARD_ACTIVE   CONSTANT NUMBER := 1;
16:51:07  24  CREDIT_CARD_INVALID  CONSTANT NUMBER := 2; -- WAS INACTIVE
16:51:07  25  CREDIT_CARD_DISABLED CONSTANT NUMBER := 3; -- WAS FROZEN
16:51:07  26  CREDIT_CARD_EXPIRED  CONSTANT NUMBER := 4;
16:51:07  27  
16:51:07  28  ----
16:51:07  29  -- PAYPAL STATUSES
16:51:07  30  
16:51:07  31  PAYPAL_ACTIVE   CONSTANT NUMBER := 1;
16:51:07  32  PAYPAL_INACTIVE CONSTANT NUMBER := 2;
16:51:07  33  PAYPAL_FROZEN   CONSTANT NUMBER := 3;
16:51:07  34  
16:51:07  35  ----
16:51:07  36  -- GIFT_CERTIFICATE STATUSES
16:51:07  37  
16:51:07  38  GIFT_CERTIFICATE_ACTIVE	 CONSTANT NUMBER := 1;
16:51:07  39  GIFT_CERTIFICATE_FINALIZED CONSTANT NUMBER := 2;
16:51:07  40  GIFT_CERTIFICATE_REFUNDED  CONSTANT NUMBER := 3;
16:51:07  41  
16:51:07  42  ----
16:51:07  43  -- TRANSACTION STATUSES
16:51:07  44  
16:51:07  45  TRANSACTION_PENDING	     CONSTANT NUMBER := 1;
16:51:07  46  TRANSACTION_CLOSED	     CONSTANT NUMBER := 2;
16:51:07  47  TRANSACTION_CHARGEBACK	     CONSTANT NUMBER := 3;
16:51:07  48  TRANSACTION_PREPARE	     CONSTANT NUMBER := 1;
16:51:07  49  TRANSACTION_DECLINED	     CONSTANT NUMBER := 7;
16:51:07  50  
16:51:07  51  ----
16:51:07  52  -- TRANSACTION_ATTEMPT_STATUS
16:51:07  53  TRANS_ATTEMPT_IN_PROGRESS CONSTANT NUMBER := 1;
16:51:07  54  TRANS_ATTEMPT_SUCCESS	CONSTANT NUMBER := 2;
16:51:07  55  TRANS_ATTEMPT_FAILED	CONSTANT NUMBER := 3;
16:51:07  56  
16:51:07  57  ----
16:51:07  58  -- PRODUCT STATUSES
16:51:07  59  
16:51:07  60  PRODUCT_ACTIVE	CONSTANT NUMBER := 1;
16:51:07  61  PRODUCT_INACTIVE	CONSTANT NUMBER := 2;
16:51:07  62  PRODUCT_DISABLED	CONSTANT NUMBER := 3;
16:51:07  63  
16:51:07  64  ----
16:51:07  65  -- LICENSE STATUSES
16:51:07  66  
16:51:07  67  LICENSE_CLOSED CONSTANT NUMBER := 1;
16:51:07  68  LICENSE_ACTIVE CONSTANT NUMBER := 2;
16:51:07  69  
16:51:07  70  ----
16:51:07  71  -- INVOICE STATUSES
16:51:07  72  
16:51:07  73  INVOICE_OPEN		  CONSTANT NUMBER := 1; -- IN SPECS INVOICE_PENDING
16:51:07  74  INVOICE_CLOSED		  CONSTANT NUMBER := 3; -- IN SPECS INVOICE_PAID
16:51:07  75  /*
16:51:07  76  Next statuses were deleted by Sergey.
16:51:07  77  INVOICE_PENDING_TRANSACTION CONSTANT NUMBER := 2; -- IN SPECS INVOICE_PENDING_TRANSACTION
16:51:07  78  INVOICE_LEGACY		  CONSTANT NUMBER := 4;
16:51:07  79  INVOICE_FAILED		  CONSTANT NUMBER := 5; -- FAILED INVOICE
16:51:07  80  INVOICE_CANCELED		  CONSTANT NUMBER := 6; -- CANCELED INVOICE
16:51:07  81  */
16:51:07  82  
16:51:07  83  ----
16:51:07  84  -- CHARGE STATUSES
16:51:07  85  
16:51:07  86  CHARGE_OPENED    CONSTANT NUMBER := 1;
16:51:07  87  CHARGE_PROCESSED CONSTANT NUMBER := 2;
16:51:07  88  CHARGE_CANCELED  CONSTANT NUMBER := 3;
16:51:07  89  
16:51:07  90  ----
16:51:07  91  -- OFFER STATUSES
16:51:07  92  
16:51:07  93  OFFER_ACTIVE   CONSTANT NUMBER := 1;
16:51:07  94  OFFER_INACTIVE CONSTANT NUMBER := 2;
16:51:07  95  OFFER_DISABLED CONSTANT NUMBER := 3;
16:51:07  96  
16:51:07  97  ----
16:51:07  98  -- OFFER_CHAIN STATUSES
16:51:07  99  
16:51:07 100  OFFER_CHAIN_ACTIVE   CONSTANT NUMBER := 1;
16:51:07 101  OFFER_CHAIN_INACTIVE CONSTANT NUMBER := 2;
16:51:07 102  OFFER_CHAIN_DISABLED CONSTANT NUMBER := 3;
16:51:07 103  
16:51:07 104  ----
16:51:07 105  -- ZERO_CHARGE_INSTRUMENT STATUSES
16:51:07 106  
16:51:07 107  ZERO_CHARGE_INSTR_ACTIVE CONSTANT NUMBER := 1;
16:51:07 108  ZERO_CHARGE_INSTR_DISABLED CONSTANT NUMBER := 2;
16:51:07 109  
16:51:07 110  ----
16:51:07 111  -- SUBSCRIPTION_CANCELATION_REASONS
16:51:07 112  
16:51:07 113  SUBSCR_CANC_REASON_ACTIVE CONSTANT NUMBER := 1;
16:51:07 114  SUBSCR_CANC_REASON_INACTIVE CONSTANT NUMBER := 1;
16:51:07 115  
16:51:07 116  GROUP_ACC_IP_RNG_ACTIVE CONSTANT NUMBER := 1;
16:51:07 117  GROUP_ACC_IP_RNG_INACTIVE CONSTANT NUMBER := 2;
16:51:07 118  
16:51:07 119  GROUP_ACC_EMAIL_DOMAIN_ACT CONSTANT NUMBER := 1;
16:51:07 120  GROUP_ACC_EMAIL_DOMAIN_INACT CONSTANT NUMBER := 0;
16:51:07 121  
16:51:07 122  END GLOBAL_STATUSES_V15;
16:51:07 123  .
16:51:07 SQL> /

Package created.

Elapsed: 00:00:00.05
16:51:07 SQL> 
16:51:07 SQL> 
16:51:07 SQL> 
16:51:07 SQL> --------------------------------------------------------------------------------
16:51:07 SQL> -- DDL for package PROCS_COMMON
16:51:07 SQL> --------------------------------------------------------------------------------
16:51:07 SQL> 
16:51:07 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V15" AS
16:51:07   2  
16:51:07   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
16:51:07   4  	in_duration IN VARCHAR2,
16:51:07   5  	in_start_date IN DATE
16:51:07   6  ) RETURN DATE;
16:51:07   7  
16:51:07   8  PROCEDURE ISO8601DURATION_TO_INTERVALS(
16:51:07   9  /*
16:51:07  10  Throws exceptions:
16:51:07  11  APP_EXCEPTION_CODES_V15.INTERNAL_ERROR
16:51:07  12  APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
16:51:07  13  */
16:51:07  14  	in_duration IN	VARCHAR2,
16:51:07  15  	out_years   OUT NUMBER,
16:51:07  16  	out_months  OUT NUMBER,
16:51:07  17  	out_days    OUT NUMBER
16:51:07  18  );
16:51:07  19  
16:51:07  20  FUNCTION NORMALIZE_DATE(
16:51:07  21   in_date IN DATE
16:51:07  22  ) RETURN DATE;
16:51:07  23  
16:51:07  24  FUNCTION GENERATE_EXCEPTION_MESSAGE(
16:51:07  25  	in_sproc_name	    IN VARCHAR2,
16:51:07  26  	in_error_message    IN VARCHAR2,
16:51:07  27  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:51:07  28  ) RETURN VARCHAR2;
16:51:07  29  
16:51:07  30  PROCEDURE THROW_EXCEPTION(
16:51:07  31  	in_exception_code   IN NUMBER,
16:51:07  32  	in_sproc_name	    IN VARCHAR2,
16:51:07  33  	in_error_message    IN VARCHAR2,
16:51:07  34  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:51:07  35  );
16:51:07  36  
16:51:07  37  FUNCTION ROUND_10_6_TO_10_2 (
16:51:07  38  	in_number NUMBER
16:51:07  39  ) RETURN NUMBER;
16:51:07  40  
16:51:07  41  END PROCS_COMMON_V15;
16:51:07  42  .
16:51:07 SQL> /

Package created.

Elapsed: 00:00:00.27
16:51:08 SQL> 
16:51:08 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V15" AS
16:51:08   2  
16:51:08   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
16:51:08   4  	in_duration IN VARCHAR2,
16:51:08   5  	in_start_date IN DATE
16:51:08   6  ) RETURN DATE AS
16:51:08   7  	var_end_date DATE;
16:51:08   8  	var_years NUMBER;
16:51:08   9  	var_months NUMBER;
16:51:08  10  	var_days NUMBER;
16:51:08  11  	var_ym_interval INTERVAL YEAR TO MONTH;
16:51:08  12  	var_ds_interval INTERVAL DAY(3) TO SECOND;
16:51:08  13  BEGIN
16:51:08  14  	PROCS_COMMON_V15.ISO8601DURATION_TO_INTERVALS(in_duration, var_years, var_months, var_days);
16:51:08  15  	var_ym_interval := var_years || '-' || var_months;
16:51:08  16  	var_ds_interval := var_days || ' 0:0:0';
16:51:08  17  
16:51:08  18  	var_end_date := in_start_date + var_ym_interval + var_ds_interval;
16:51:08  19  	RETURN var_end_date;
16:51:08  20  END ADD_ISO8601DURATION_TO_DATE;
16:51:08  21  
16:51:08  22  PROCEDURE ISO8601DURATION_TO_INTERVALS(
16:51:08  23  /*
16:51:08  24  Throws exceptions:
16:51:08  25  APP_EXCEPTION_CODES_V15.INTERNAL_ERROR
16:51:08  26  APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
16:51:08  27  */
16:51:08  28  	in_duration IN	VARCHAR2,
16:51:08  29  	out_years   OUT NUMBER,
16:51:08  30  	out_months  OUT NUMBER,
16:51:08  31  	out_days    OUT NUMBER
16:51:08  32  ) AS
16:51:08  33  SPROC_NAME	  CONSTANT VARCHAR2(28) := 'ISO8601DURATION_TO_INTERVALS';
16:51:08  34  -- VARIABLES
16:51:08  35  var_checking_status NUMBER;
16:51:08  36  temp_duration	  VARCHAR2(29);
16:51:08  37  var_is_t_founded	  NUMBER;
16:51:08  38  
16:51:08  39  var_date_duration VARCHAR2(29);
16:51:08  40  var_time_duration VARCHAR2(29);
16:51:08  41  
16:51:08  42  var_years   VARCHAR2(4);
16:51:08  43  var_monthes VARCHAR2(4);
16:51:08  44  var_days	  VARCHAR2(4);
16:51:08  45  var_hours   VARCHAR2(4);
16:51:08  46  var_minutes VARCHAR2(4);
16:51:08  47  var_seconds VARCHAR2(4);
16:51:08  48  
16:51:08  49  -- EXCEPTIONS
16:51:08  50  BAD_ISO_FORMAT EXCEPTION;
16:51:08  51  BEGIN
16:51:08  52  
16:51:08  53  	var_years   := '0';
16:51:08  54  	var_monthes := '0';
16:51:08  55  	var_days    := '0';
16:51:08  56  	var_hours   := '0';
16:51:08  57  	var_minutes := '0';
16:51:08  58  	var_seconds := '0';
16:51:08  59  
16:51:08  60  	SELECT
16:51:08  61  	  COUNT(*) into var_checking_status
16:51:08  62  	FROM
16:51:08  63  	  DUAL
16:51:08  64  	WHERE
16:51:08  65  	  REGEXP_LIKE(in_duration, '^P')
16:51:08  66  	  AND ROWNUM <= 1;
16:51:08  67  
16:51:08  68  	IF var_checking_status = 0 THEN
16:51:08  69  	  RAISE BAD_ISO_FORMAT;
16:51:08  70  	END IF;
16:51:08  71  
16:51:08  72  	SELECT
16:51:08  73  	  SUBSTR(in_duration, 2) into temp_duration
16:51:08  74  	FROM DUAL
16:51:08  75  	WHERE ROWNUM <= 1;
16:51:08  76  
16:51:08  77  	var_is_t_founded := INSTR(temp_duration, 'T');
16:51:08  78  
16:51:08  79  	IF var_is_t_founded > 1 OR var_is_t_founded = 0 THEN
16:51:08  80  	  -- RESOLVING DATE FROM ISO STRING
16:51:08  81  	  IF var_is_t_founded != 0 THEN
16:51:08  82  	    var_date_duration := SUBSTR(temp_duration, 1, var_is_t_founded - 1);
16:51:08  83  	  ELSE
16:51:08  84  	    var_date_duration := temp_duration;
16:51:08  85  	  END IF;
16:51:08  86  
16:51:08  87  	  SELECT
16:51:08  88  	    COUNT(*) into var_checking_status
16:51:08  89  	  FROM
16:51:08  90  	    DUAL
16:51:08  91  	  WHERE
16:51:08  92  	    REGEXP_LIKE(var_date_duration, '^(\d{1,3}Y){0,1}(\d{1,3}M){0,1}(\d{1,3}D){0,1}$')
16:51:08  93  	    AND ROWNUM <= 1;
16:51:08  94  
16:51:08  95  	  IF var_checking_status = 0 THEN
16:51:08  96  	    RAISE BAD_ISO_FORMAT;
16:51:08  97  	  END IF;
16:51:08  98  
16:51:08  99  	  IF INSTR(var_date_duration, 'Y') != 0 THEN
16:51:08 100  	    SELECT
16:51:08 101  	      REGEXP_SUBSTR(var_date_duration, '\d+Y') into var_years
16:51:08 102  	    FROM
16:51:08 103  	      DUAL;
16:51:08 104  	    var_years := SUBSTR(var_years, 1, LENGTH(var_years) - 1);
16:51:08 105  	  END IF;
16:51:08 106  
16:51:08 107  	  IF INSTR(var_date_duration, 'M') != 0 THEN
16:51:08 108  	    SELECT
16:51:08 109  	      REGEXP_SUBSTR(var_date_duration, '\d+M') into var_monthes
16:51:08 110  	    FROM
16:51:08 111  	      DUAL;
16:51:08 112  	    var_monthes := SUBSTR(var_monthes, 1, LENGTH(var_monthes) - 1);
16:51:08 113  	  END IF;
16:51:08 114  
16:51:08 115  	  IF INSTR(var_date_duration, 'D') != 0 THEN
16:51:08 116  	    SELECT
16:51:08 117  	      REGEXP_SUBSTR(var_date_duration, '\d+D') into var_days
16:51:08 118  	    FROM
16:51:08 119  	      DUAL;
16:51:08 120  	    var_days := SUBSTR(var_days, 1, LENGTH(var_days) - 1);
16:51:08 121  	  END IF;
16:51:08 122  	END IF;
16:51:08 123  
16:51:08 124  	IF (var_is_t_founded > 0) THEN
16:51:08 125  	  -- RESOLVING TIME FROM ISO STRING
16:51:08 126  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded + 1);
16:51:08 127  
16:51:08 128  	  SELECT
16:51:08 129  	    COUNT(*) into var_checking_status
16:51:08 130  	  FROM
16:51:08 131  	    DUAL
16:51:08 132  	  WHERE
16:51:08 133  	    REGEXP_LIKE(var_time_duration, '^(\d{1,3}H){0,1}(\d{1,3}M){0,1}(\d{1,3}S){0,1}$')
16:51:08 134  	    AND ROWNUM <= 1;
16:51:08 135  
16:51:08 136  	  IF var_checking_status = 0 THEN
16:51:08 137  	    RAISE BAD_ISO_FORMAT;
16:51:08 138  	  END IF;
16:51:08 139  
16:51:08 140  	  IF INSTR(var_time_duration, 'H') != 0 THEN
16:51:08 141  	    SELECT
16:51:08 142  	      REGEXP_SUBSTR(var_time_duration, '\d+H') into var_hours
16:51:08 143  	    FROM
16:51:08 144  	      DUAL;
16:51:08 145  	    var_hours := SUBSTR(var_hours, 1, LENGTH(var_hours) - 1);
16:51:08 146  	  END IF;
16:51:08 147  
16:51:08 148  	  IF INSTR(var_time_duration, 'M') != 0 THEN
16:51:08 149  	    SELECT
16:51:08 150  	      REGEXP_SUBSTR(var_time_duration, '\d+M') into var_minutes
16:51:08 151  	    FROM
16:51:08 152  	      DUAL;
16:51:08 153  	    var_minutes := SUBSTR(var_minutes, 1, LENGTH(var_minutes) - 1);
16:51:08 154  	  END IF;
16:51:08 155  
16:51:08 156  	  IF INSTR(var_time_duration, 'S') != 0 THEN
16:51:08 157  	    SELECT
16:51:08 158  	      REGEXP_SUBSTR(var_time_duration, '\d+S') into var_seconds
16:51:08 159  	    FROM
16:51:08 160  	      DUAL;
16:51:08 161  	    var_seconds := SUBSTR(var_seconds, 1, LENGTH(var_seconds) - 1);
16:51:08 162  	  END IF;
16:51:08 163  
16:51:08 164  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded);
16:51:08 165  	END IF;
16:51:08 166  
16:51:08 167  	out_years  := var_years;
16:51:08 168  	out_months := var_monthes;
16:51:08 169  	out_days   := var_days;
16:51:08 170  
16:51:08 171  EXCEPTION
16:51:08 172  WHEN BAD_ISO_FORMAT THEN
16:51:08 173  	PROCS_COMMON_V15.THROW_EXCEPTION(APP_EXCEPTION_CODES_V15.INTERNAL_ERROR,
16:51:08 174  	  SPROC_NAME, 'Bad date format');
16:51:08 175  WHEN OTHERS THEN
16:51:08 176  	PROCS_COMMON_V15.THROW_EXCEPTION(APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
16:51:08 177  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:51:08 178  END ISO8601DURATION_TO_INTERVALS;
16:51:08 179  
16:51:08 180  /******************************************************************************/
16:51:08 181  
16:51:08 182  FUNCTION NORMALIZE_DATE(
16:51:08 183   in_date IN DATE
16:51:08 184  ) RETURN DATE AS
16:51:08 185  -- VARIABLES
16:51:08 186  var_normalized_date DATE;
16:51:08 187  BEGIN
16:51:08 188  	var_normalized_date := TRUNC(in_date);
16:51:08 189  	RETURN var_normalized_date;
16:51:08 190  END NORMALIZE_DATE;
16:51:08 191  
16:51:08 192  /******************************************************************************/
16:51:08 193  
16:51:08 194  FUNCTION GENERATE_EXCEPTION_MESSAGE(
16:51:08 195  	in_sproc_name	    IN VARCHAR2,
16:51:08 196  	in_error_message    IN VARCHAR2,
16:51:08 197  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:51:08 198  ) RETURN VARCHAR2 AS
16:51:08 199  BEGIN
16:51:08 200  	IF in_error_stacktrace IS NOT NULL THEN
16:51:08 201  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || GLOBAL_CONSTANTS_V15.EXCEPTION_DELIMETER || in_error_stacktrace;
16:51:08 202  	END IF;
16:51:08 203  	RETURN
16:51:08 204  	  in_sproc_name || ': ' || in_error_message;
16:51:08 205  END GENERATE_EXCEPTION_MESSAGE;
16:51:08 206  
16:51:08 207  /******************************************************************************/
16:51:08 208  
16:51:08 209  PROCEDURE THROW_EXCEPTION(
16:51:08 210  	in_exception_code   IN NUMBER,
16:51:08 211  	in_sproc_name	    IN VARCHAR2,
16:51:08 212  	in_error_message    IN VARCHAR2,
16:51:08 213  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:51:08 214  ) AS
16:51:08 215  BEGIN
16:51:08 216  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
16:51:08 217  END;
16:51:08 218  
16:51:08 219  FUNCTION ROUND_10_6_TO_10_2 (
16:51:08 220  	in_number NUMBER
16:51:08 221  ) RETURN NUMBER AS
16:51:08 222  v_result NUMBER(10,2);
16:51:08 223  BEGIN
16:51:08 224  	v_result := in_number;
16:51:08 225  	return v_result;
16:51:08 226  END;
16:51:08 227  
16:51:08 228  END PROCS_COMMON_V15;
16:51:08 229  .
16:51:08 SQL> /

Package body created.

Elapsed: 00:00:00.10
16:51:08 SQL> 
16:51:08 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V15 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.03
16:51:08 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V15 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:08 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V15 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:08 SQL> 
16:51:08 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V15 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:08 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V15 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:08 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V15 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:08 SQL> 
16:51:08 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V15 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:08 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V15 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:08 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V15 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:08 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
16:51:08 SQL> spool off;


Subject: Nomad upgrade success: ECST@rac01.stg.sea1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: steven.nedlin@nytimes.com
Nomad upgrade operation success. 
        
        Details
        -------
        DB Hostname: rac01.stg.sea1.nytimes.com
        SID: ECST
        Schema: core_owner
        Migration: 13.0-release-1.10.0-common
        SVN Revision: 9677
        Duration: 2