12:24:18 SQL> @/dbbackups/ECST2/migrations/core_owner/19.1-release-1.11.0-common/upgrade.sql
12:24:18 SQL> --------------------------------------------------------------------------------
12:24:18 SQL> -- DDL for package APP_EXCEPTION_CODES
12:24:18 SQL> --------------------------------------------------------------------------------
12:24:18 SQL> 
12:24:18 SQL> CREATE OR REPLACE PACKAGE "APP_EXCEPTION_CODES_V16"
12:24:18   2  AS
12:24:18   3  -- norlov 09.09 : current_timestamp replaced by sysdate
12:24:18   4  -- in comparisons (according to #38816)
12:24:18   5  -- 2010-09-13: according to #38860, current_timestamp calls replaced by SYSDATE variable
12:24:18   6  -- to use the same date in whole procedure, also single current_timestamp calls
12:24:18   7  -- replaced by SYSDATE calls
12:24:18   8  
12:24:18   9  
12:24:18  10  	-- EXCEPTION CODES
12:24:18  11  	UNKNOWN_ERROR	  CONSTANT NUMBER := -20001;
12:24:18  12  	NOT_FOUND	  CONSTANT NUMBER := -20002;
12:24:18  13  	STATE_ERROR	  CONSTANT NUMBER := -20003;
12:24:18  14  	DUPLICATE_ERROR   CONSTANT NUMBER := -20004;
12:24:18  15  	HISTORY_ERROR	  CONSTANT NUMBER := -20005;
12:24:18  16  	INVALID_PARAMETER CONSTANT NUMBER := -20006;
12:24:18  17  	INTERNAL_ERROR	  CONSTANT NUMBER := -20007;
12:24:18  18  	CONFLICT_ERROR	  CONSTANT NUMBER := -20008;
12:24:18  19  END APP_EXCEPTION_CODES_V16;
12:24:18  20  .
12:24:18 SQL> /

Package created.

Elapsed: 00:00:00.87
12:24:18 SQL> 
12:24:18 SQL> 
12:24:18 SQL> 
12:24:18 SQL> --------------------------------------------------------------------------------
12:24:18 SQL> -- DDL for package GLOBAL_CONSTANTS
12:24:18 SQL> --------------------------------------------------------------------------------
12:24:18 SQL> 
12:24:18 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_CONSTANTS_V16" AS
12:24:18   2  
12:24:18   3  TRUE  CONSTANT NUMBER := 1;
12:24:18   4  FALSE CONSTANT NUMBER := 0;
12:24:18   5  
12:24:18   6  INFINITY CONSTANT NUMBER := -1;
12:24:18   7  
12:24:18   8  ONE_DAY_INTERVAL	 CONSTANT INTERVAL DAY TO SECOND := INTERVAL '1' DAY;
12:24:18   9  ONE_MONTH_INTERVAL CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' MONTH;
12:24:18  10  ONE_YEAR_INTERVAL   CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' YEAR;
12:24:18  11  
12:24:18  12  -- Exception delimeter
12:24:18  13  EXCEPTION_DELIMETER CONSTANT VARCHAR2(1) := chr(10);
12:24:18  14  
12:24:18  15  -- Number of days when core should return all money
12:24:18  16  OFFER_START_GRACE_PERIOD CONSTANT NUMBER := 7;
12:24:18  17  
12:24:18  18  -- NUmber of days when core should not return any money
12:24:18  19  OFFER_END_GRACE_PERIOD   CONSTANT NUMBER := 7;
12:24:18  20  
12:24:18  21  -- OFFER CHAIN: is refundable META DATTA RULE
12:24:18  22  OFFER_CHAIN_IS_REFUNDABLE   CONSTANT NUMBER := 1;
12:24:18  23  OFFER_CHAIN_REFUNDABLE_RULE CONSTANT VARCHAR2(10) := 'REFUNDABLE';
12:24:18  24  
12:24:18  25  -- OFFER CHAIN REFUNDABLE RULES
12:24:18  26  OFFER_CHAIN_FULL_REFUND	  CONSTANT VARCHAR2(22) := 'FULL_REFUND_DAYS_LIMIT';
12:24:18  27  OFFER_CHAIN_PRORATED_REFUND CONSTANT VARCHAR2(26) := 'PRORATED_REFUND_DAYS_LIMIT';
12:24:18  28  
12:24:18  29  -- norlov: name of the OC eligibility
12:24:18  30  GIFT_CERTIFICATE_REQUIRED CONSTANT VARCHAR2(25) := 'gift certificate required';
12:24:18  31  
12:24:18  32  -- norlov: flag for set elibility
12:24:18  33  ELIGIBILITY_FLAG_SET CONSTANT VARCHAR2(1) := '1';
12:24:18  34  
12:24:18  35  -- norlov: name of OC metadata
12:24:18  36  REDEMPTION_OC_ID CONSTANT VARCHAR2(25) := 'redemption offer chain id';
12:24:18  37  
12:24:18  38  -- norlov: name of the OC eligibility
12:24:18  39  MAX_CONCURRENT_SUBS CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
12:24:18  40  
12:24:18  41  -- norlov: 'unlimited' value for max concurrent subscription number
12:24:18  42  MAX_CONCURRENT_SUBS_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
12:24:18  43  
12:24:18  44  -- 'unlimited' value for max concurrent products number
12:24:18  45  MAX_CONSURRENT_PRD_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
12:24:18  46  
12:24:18  47  -- UPGRADABLE_OFFER_CHAIN_ID
12:24:18  48  OCMD_UPGRADABLE_OFFER_CHAIN_ID CONSTANT VARCHAR(25) := 'UPGRADABLE_OFFER_CHAIN_ID';
12:24:18  49  
12:24:18  50  -- Max number of records that should be return
12:24:18  51  MAX_RETURN_COUNT NUMBER := 1000;
12:24:18  52  
12:24:18  53  -- Share end date for non-group-pass group accounts
12:24:18  54  MAX_DATE CONSTANT DATE := TO_DATE('12/31/9999', 'MM/DD/YYYY');
12:24:18  55  
12:24:18  56  END GLOBAL_CONSTANTS_V16;
12:24:18  57  .
12:24:18 SQL> /

Package created.

Elapsed: 00:00:00.13
12:24:19 SQL> 
12:24:19 SQL> 
12:24:19 SQL> 
12:24:19 SQL> --------------------------------------------------------------------------------
12:24:19 SQL> -- DDL for package GLOBAL_ENUMS
12:24:19 SQL> --------------------------------------------------------------------------------
12:24:19 SQL> 
12:24:19 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_ENUMS_V16" AS
12:24:19   2  
12:24:19   3  ----
12:24:19   4  -- CREDIT CARD TYPES
12:24:19   5  
12:24:19   6  CREDIT_CARD_AMEX	      CONSTANT NUMBER := 1;
12:24:19   7  CREDIT_CARD_VISA	      CONSTANT NUMBER := 2;
12:24:19   8  CREDIT_CARD_MASTER_CARD CONSTANT NUMBER := 3;
12:24:19   9  CREDIT_CARD_DISCOVER    CONSTANT NUMBER := 4;
12:24:19  10  
12:24:19  11  ----
12:24:19  12  -- INSTRUMENT TYPE
12:24:19  13  
12:24:19  14  INSTRUMENT_CREDIT_CARD	   CONSTANT NUMBER := 1;
12:24:19  15  INSTRUMENT_PAYPAL 	   CONSTANT NUMBER := 2;
12:24:19  16  INSTRUMENT_GIFT_CERTIFICATE  CONSTANT NUMBER := 3;
12:24:19  17  INSTRUMENT_ZCI_INSTRUMENT    CONSTANT NUMBER := 4;
12:24:19  18  
12:24:19  19  ----
12:24:19  20  -- SYSTEM ACTIVITY REASONS
12:24:19  21  
12:24:19  22  SAC_SYSTEM_APPLIED_RULE CONSTANT NUMBER := 1;
12:24:19  23  
12:24:19  24  ----
12:24:19  25  -- GIFT CERTIFICATES TYPE
12:24:19  26  
12:24:19  27  GSTYPE_GSTYPE1 CONSTANT NUMBER := 1;
12:24:19  28  GSTYPE_GSTYPE2 CONSTANT NUMBER := 2;
12:24:19  29  
12:24:19  30  ----
12:24:19  31  -- SYSTEM CATEGORY
12:24:19  32  
12:24:19  33  SYSTEM_CATEGORY_LIVE CONSTANT NUMBER := 1;
12:24:19  34  SYSTEM_CATEGORY_TEST CONSTANT NUMBER := 2;
12:24:19  35  
12:24:19  36  ----
12:24:19  37  -- OFFER_RECURRENCES
12:24:19  38  
12:24:19  39  OFFER_REC_INFINITY CONSTANT NUMBER := -1;
12:24:19  40  
12:24:19  41  ----
12:24:19  42  -- TAX JURISDICTION LEVELS
12:24:19  43  -- We need only international right now
12:24:19  44  
12:24:19  45  JURIS_INTERNATIONAL CONSTANT NUMBER := 5;
12:24:19  46  
12:24:19  47  ----
12:24:19  48  -- TAX TYPES
12:24:19  49  
12:24:19  50  TAX_TYPE_SALES CONSTANT NUMBER := 1;
12:24:19  51  TAX_TYPE_VAT   CONSTANT NUMBER := 2;
12:24:19  52  
12:24:19  53  END GLOBAL_ENUMS_V16;
12:24:19  54  .
12:24:19 SQL> /

Package created.

Elapsed: 00:00:00.02
12:24:19 SQL> 
12:24:19 SQL> 
12:24:19 SQL> 
12:24:19 SQL> --------------------------------------------------------------------------------
12:24:19 SQL> -- DDL for package GLOBAL_STATUSES
12:24:19 SQL> --------------------------------------------------------------------------------
12:24:19 SQL> 
12:24:19 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_STATUSES_V16" AS
12:24:19   2  
12:24:19   3  
12:24:19   4  ----
12:24:19   5  -- ACCOUNT STATUSES
12:24:19   6  
12:24:19   7  ACCOUNT_ACTIVE   CONSTANT NUMBER := 1;
12:24:19   8  ACCOUNT_FROZEN   CONSTANT NUMBER := 2;
12:24:19   9  ACCOUNT_DISABLED CONSTANT NUMBER := 3;
12:24:19  10  
12:24:19  11  ----
12:24:19  12  -- SUBSCRIPTION STATUSES
12:24:19  13  
12:24:19  14  SUBSCRIPTION_ACTIVE	  CONSTANT NUMBER := 1;
12:24:19  15  SUBSCRIPTION_SUSPENDED	  CONSTANT NUMBER := 2;
12:24:19  16  SUBSCRIPTION_CANCELED	  CONSTANT NUMBER := 3;
12:24:19  17  SUBSCRIPTION_CLOSED	  CONSTANT NUMBER := 4;
12:24:19  18  SUBSCRIPTION_FALSE_START	  CONSTANT NUMBER := 5;
12:24:19  19  
12:24:19  20  ----
12:24:19  21  -- CREDIT_CARD STATUSES
12:24:19  22  
12:24:19  23  CREDIT_CARD_ACTIVE   CONSTANT NUMBER := 1;
12:24:19  24  CREDIT_CARD_INVALID  CONSTANT NUMBER := 2; -- WAS INACTIVE
12:24:19  25  CREDIT_CARD_DISABLED CONSTANT NUMBER := 3; -- WAS FROZEN
12:24:19  26  CREDIT_CARD_EXPIRED  CONSTANT NUMBER := 4;
12:24:19  27  
12:24:19  28  ----
12:24:19  29  -- PAYPAL STATUSES
12:24:19  30  
12:24:19  31  PAYPAL_ACTIVE   CONSTANT NUMBER := 1;
12:24:19  32  PAYPAL_INACTIVE CONSTANT NUMBER := 2;
12:24:19  33  PAYPAL_FROZEN   CONSTANT NUMBER := 3;
12:24:19  34  
12:24:19  35  ----
12:24:19  36  -- GIFT_CERTIFICATE STATUSES
12:24:19  37  
12:24:19  38  GIFT_CERTIFICATE_ACTIVE	 CONSTANT NUMBER := 1;
12:24:19  39  GIFT_CERTIFICATE_FINALIZED CONSTANT NUMBER := 2;
12:24:19  40  GIFT_CERTIFICATE_REFUNDED  CONSTANT NUMBER := 3;
12:24:19  41  
12:24:19  42  ----
12:24:19  43  -- TRANSACTION STATUSES
12:24:19  44  
12:24:19  45  TRANSACTION_PENDING	     CONSTANT NUMBER := 1;
12:24:19  46  TRANSACTION_CLOSED	     CONSTANT NUMBER := 2;
12:24:19  47  TRANSACTION_CHARGEBACK	     CONSTANT NUMBER := 3;
12:24:19  48  TRANSACTION_PREPARE	     CONSTANT NUMBER := 1;
12:24:19  49  TRANSACTION_DECLINED	     CONSTANT NUMBER := 7;
12:24:19  50  
12:24:19  51  ----
12:24:19  52  -- TRANSACTION_ATTEMPT_STATUS
12:24:19  53  TRANS_ATTEMPT_IN_PROGRESS CONSTANT NUMBER := 1;
12:24:19  54  TRANS_ATTEMPT_SUCCESS	CONSTANT NUMBER := 2;
12:24:19  55  TRANS_ATTEMPT_FAILED	CONSTANT NUMBER := 3;
12:24:19  56  
12:24:19  57  ----
12:24:19  58  -- PRODUCT STATUSES
12:24:19  59  
12:24:19  60  PRODUCT_ACTIVE	CONSTANT NUMBER := 1;
12:24:19  61  PRODUCT_INACTIVE	CONSTANT NUMBER := 2;
12:24:19  62  PRODUCT_DISABLED	CONSTANT NUMBER := 3;
12:24:19  63  
12:24:19  64  ----
12:24:19  65  -- LICENSE STATUSES
12:24:19  66  
12:24:19  67  LICENSE_CLOSED CONSTANT NUMBER := 1;
12:24:19  68  LICENSE_ACTIVE CONSTANT NUMBER := 2;
12:24:19  69  
12:24:19  70  ----
12:24:19  71  -- INVOICE STATUSES
12:24:19  72  
12:24:19  73  INVOICE_OPEN		  CONSTANT NUMBER := 1; -- IN SPECS INVOICE_PENDING
12:24:19  74  INVOICE_CLOSED		  CONSTANT NUMBER := 3; -- IN SPECS INVOICE_PAID
12:24:19  75  /*
12:24:19  76  Next statuses were deleted by Sergey.
12:24:19  77  INVOICE_PENDING_TRANSACTION CONSTANT NUMBER := 2; -- IN SPECS INVOICE_PENDING_TRANSACTION
12:24:19  78  INVOICE_LEGACY		  CONSTANT NUMBER := 4;
12:24:19  79  INVOICE_FAILED		  CONSTANT NUMBER := 5; -- FAILED INVOICE
12:24:19  80  INVOICE_CANCELED		  CONSTANT NUMBER := 6; -- CANCELED INVOICE
12:24:19  81  */
12:24:19  82  
12:24:19  83  ----
12:24:19  84  -- CHARGE STATUSES
12:24:19  85  
12:24:19  86  CHARGE_OPENED    CONSTANT NUMBER := 1;
12:24:19  87  CHARGE_PROCESSED CONSTANT NUMBER := 2;
12:24:19  88  CHARGE_CANCELED  CONSTANT NUMBER := 3;
12:24:19  89  
12:24:19  90  ----
12:24:19  91  -- OFFER STATUSES
12:24:19  92  
12:24:19  93  OFFER_ACTIVE   CONSTANT NUMBER := 1;
12:24:19  94  OFFER_INACTIVE CONSTANT NUMBER := 2;
12:24:19  95  OFFER_DISABLED CONSTANT NUMBER := 3;
12:24:19  96  
12:24:19  97  ----
12:24:19  98  -- OFFER_CHAIN STATUSES
12:24:19  99  
12:24:19 100  OFFER_CHAIN_ACTIVE   CONSTANT NUMBER := 1;
12:24:19 101  OFFER_CHAIN_INACTIVE CONSTANT NUMBER := 2;
12:24:19 102  OFFER_CHAIN_DISABLED CONSTANT NUMBER := 3;
12:24:19 103  
12:24:19 104  ----
12:24:19 105  -- ZERO_CHARGE_INSTRUMENT STATUSES
12:24:19 106  
12:24:19 107  ZERO_CHARGE_INSTR_ACTIVE CONSTANT NUMBER := 1;
12:24:19 108  ZERO_CHARGE_INSTR_DISABLED CONSTANT NUMBER := 2;
12:24:19 109  
12:24:19 110  ----
12:24:19 111  -- SUBSCRIPTION_CANCELATION_REASONS
12:24:19 112  
12:24:19 113  SUBSCR_CANC_REASON_ACTIVE CONSTANT NUMBER := 1;
12:24:19 114  SUBSCR_CANC_REASON_INACTIVE CONSTANT NUMBER := 1;
12:24:19 115  
12:24:19 116  GROUP_ACC_IP_RNG_ACTIVE CONSTANT NUMBER := 1;
12:24:19 117  GROUP_ACC_IP_RNG_INACTIVE CONSTANT NUMBER := 2;
12:24:19 118  
12:24:19 119  GROUP_ACC_EMAIL_DOMAIN_ACT CONSTANT NUMBER := 1;
12:24:19 120  GROUP_ACC_EMAIL_DOMAIN_INACT CONSTANT NUMBER := 0;
12:24:19 121  
12:24:19 122  END GLOBAL_STATUSES_V16;
12:24:19 123  .
12:24:19 SQL> /

Package created.

Elapsed: 00:00:00.06
12:24:19 SQL> 
12:24:19 SQL> 
12:24:19 SQL> 
12:24:19 SQL> --------------------------------------------------------------------------------
12:24:19 SQL> -- DDL for package PROCS_COMMON
12:24:19 SQL> --------------------------------------------------------------------------------
12:24:19 SQL> 
12:24:19 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V16" AS
12:24:19   2  
12:24:19   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
12:24:19   4  	in_duration IN VARCHAR2,
12:24:19   5  	in_start_date IN DATE
12:24:19   6  ) RETURN DATE;
12:24:19   7  
12:24:19   8  PROCEDURE ISO8601DURATION_TO_INTERVALS(
12:24:19   9  /*
12:24:19  10  Throws exceptions:
12:24:19  11  APP_EXCEPTION_CODES_V16.INTERNAL_ERROR
12:24:19  12  APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:24:19  13  */
12:24:19  14  	in_duration IN	VARCHAR2,
12:24:19  15  	out_years   OUT NUMBER,
12:24:19  16  	out_months  OUT NUMBER,
12:24:19  17  	out_days    OUT NUMBER
12:24:19  18  );
12:24:19  19  
12:24:19  20  FUNCTION NORMALIZE_DATE(
12:24:19  21   in_date IN DATE
12:24:19  22  ) RETURN DATE;
12:24:19  23  
12:24:19  24  FUNCTION GENERATE_EXCEPTION_MESSAGE(
12:24:19  25  	in_sproc_name	    IN VARCHAR2,
12:24:19  26  	in_error_message    IN VARCHAR2,
12:24:19  27  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
12:24:19  28  ) RETURN VARCHAR2;
12:24:19  29  
12:24:19  30  PROCEDURE THROW_EXCEPTION(
12:24:19  31  	in_exception_code   IN NUMBER,
12:24:19  32  	in_sproc_name	    IN VARCHAR2,
12:24:19  33  	in_error_message    IN VARCHAR2,
12:24:19  34  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
12:24:19  35  );
12:24:19  36  
12:24:19  37  FUNCTION ROUND_10_6_TO_10_2 (
12:24:19  38  	in_number NUMBER
12:24:19  39  ) RETURN NUMBER;
12:24:19  40  
12:24:19  41  END PROCS_COMMON_V16;
12:24:19  42  .
12:24:19 SQL> /

Package created.

Elapsed: 00:00:00.31
12:24:19 SQL> 
12:24:19 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V16" AS
12:24:19   2  
12:24:19   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
12:24:19   4  	in_duration IN VARCHAR2,
12:24:19   5  	in_start_date IN DATE
12:24:19   6  ) RETURN DATE AS
12:24:19   7  	var_end_date DATE;
12:24:19   8  	var_years NUMBER;
12:24:19   9  	var_months NUMBER;
12:24:19  10  	var_days NUMBER;
12:24:19  11  	var_ym_interval INTERVAL YEAR TO MONTH;
12:24:19  12  	var_ds_interval INTERVAL DAY(3) TO SECOND;
12:24:19  13  BEGIN
12:24:19  14  	PROCS_COMMON_V16.ISO8601DURATION_TO_INTERVALS(in_duration, var_years, var_months, var_days);
12:24:19  15  	var_ym_interval := var_years || '-' || var_months;
12:24:19  16  	var_ds_interval := var_days || ' 0:0:0';
12:24:19  17  
12:24:19  18  	var_end_date := in_start_date + var_ym_interval + var_ds_interval;
12:24:19  19  	RETURN var_end_date;
12:24:19  20  END ADD_ISO8601DURATION_TO_DATE;
12:24:19  21  
12:24:19  22  PROCEDURE ISO8601DURATION_TO_INTERVALS(
12:24:19  23  /*
12:24:19  24  Throws exceptions:
12:24:19  25  APP_EXCEPTION_CODES_V16.INTERNAL_ERROR
12:24:19  26  APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:24:19  27  */
12:24:19  28  	in_duration IN	VARCHAR2,
12:24:19  29  	out_years   OUT NUMBER,
12:24:19  30  	out_months  OUT NUMBER,
12:24:19  31  	out_days    OUT NUMBER
12:24:19  32  ) AS
12:24:19  33  SPROC_NAME	  CONSTANT VARCHAR2(28) := 'ISO8601DURATION_TO_INTERVALS';
12:24:19  34  -- VARIABLES
12:24:19  35  var_checking_status NUMBER;
12:24:19  36  temp_duration	  VARCHAR2(29);
12:24:19  37  var_is_t_founded	  NUMBER;
12:24:19  38  
12:24:19  39  var_date_duration VARCHAR2(29);
12:24:19  40  var_time_duration VARCHAR2(29);
12:24:19  41  
12:24:19  42  var_years   VARCHAR2(4);
12:24:19  43  var_monthes VARCHAR2(4);
12:24:19  44  var_days	  VARCHAR2(4);
12:24:19  45  var_hours   VARCHAR2(4);
12:24:19  46  var_minutes VARCHAR2(4);
12:24:19  47  var_seconds VARCHAR2(4);
12:24:19  48  
12:24:19  49  -- EXCEPTIONS
12:24:19  50  BAD_ISO_FORMAT EXCEPTION;
12:24:19  51  BEGIN
12:24:19  52  
12:24:19  53  	var_years   := '0';
12:24:19  54  	var_monthes := '0';
12:24:19  55  	var_days    := '0';
12:24:19  56  	var_hours   := '0';
12:24:19  57  	var_minutes := '0';
12:24:19  58  	var_seconds := '0';
12:24:19  59  
12:24:19  60  	SELECT
12:24:19  61  	  COUNT(*) into var_checking_status
12:24:19  62  	FROM
12:24:19  63  	  DUAL
12:24:19  64  	WHERE
12:24:19  65  	  REGEXP_LIKE(in_duration, '^P')
12:24:19  66  	  AND ROWNUM <= 1;
12:24:19  67  
12:24:19  68  	IF var_checking_status = 0 THEN
12:24:19  69  	  RAISE BAD_ISO_FORMAT;
12:24:19  70  	END IF;
12:24:19  71  
12:24:19  72  	SELECT
12:24:19  73  	  SUBSTR(in_duration, 2) into temp_duration
12:24:19  74  	FROM DUAL
12:24:19  75  	WHERE ROWNUM <= 1;
12:24:19  76  
12:24:19  77  	var_is_t_founded := INSTR(temp_duration, 'T');
12:24:19  78  
12:24:19  79  	IF var_is_t_founded > 1 OR var_is_t_founded = 0 THEN
12:24:19  80  	  -- RESOLVING DATE FROM ISO STRING
12:24:19  81  	  IF var_is_t_founded != 0 THEN
12:24:19  82  	    var_date_duration := SUBSTR(temp_duration, 1, var_is_t_founded - 1);
12:24:19  83  	  ELSE
12:24:19  84  	    var_date_duration := temp_duration;
12:24:19  85  	  END IF;
12:24:19  86  
12:24:19  87  	  SELECT
12:24:19  88  	    COUNT(*) into var_checking_status
12:24:19  89  	  FROM
12:24:19  90  	    DUAL
12:24:19  91  	  WHERE
12:24:19  92  	    REGEXP_LIKE(var_date_duration, '^(\d{1,3}Y){0,1}(\d{1,3}M){0,1}(\d{1,3}D){0,1}$')
12:24:19  93  	    AND ROWNUM <= 1;
12:24:19  94  
12:24:19  95  	  IF var_checking_status = 0 THEN
12:24:19  96  	    RAISE BAD_ISO_FORMAT;
12:24:19  97  	  END IF;
12:24:19  98  
12:24:19  99  	  IF INSTR(var_date_duration, 'Y') != 0 THEN
12:24:19 100  	    SELECT
12:24:19 101  	      REGEXP_SUBSTR(var_date_duration, '\d+Y') into var_years
12:24:19 102  	    FROM
12:24:19 103  	      DUAL;
12:24:19 104  	    var_years := SUBSTR(var_years, 1, LENGTH(var_years) - 1);
12:24:19 105  	  END IF;
12:24:19 106  
12:24:19 107  	  IF INSTR(var_date_duration, 'M') != 0 THEN
12:24:19 108  	    SELECT
12:24:19 109  	      REGEXP_SUBSTR(var_date_duration, '\d+M') into var_monthes
12:24:19 110  	    FROM
12:24:19 111  	      DUAL;
12:24:19 112  	    var_monthes := SUBSTR(var_monthes, 1, LENGTH(var_monthes) - 1);
12:24:19 113  	  END IF;
12:24:19 114  
12:24:19 115  	  IF INSTR(var_date_duration, 'D') != 0 THEN
12:24:19 116  	    SELECT
12:24:19 117  	      REGEXP_SUBSTR(var_date_duration, '\d+D') into var_days
12:24:19 118  	    FROM
12:24:19 119  	      DUAL;
12:24:19 120  	    var_days := SUBSTR(var_days, 1, LENGTH(var_days) - 1);
12:24:19 121  	  END IF;
12:24:19 122  	END IF;
12:24:19 123  
12:24:19 124  	IF (var_is_t_founded > 0) THEN
12:24:19 125  	  -- RESOLVING TIME FROM ISO STRING
12:24:19 126  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded + 1);
12:24:19 127  
12:24:19 128  	  SELECT
12:24:19 129  	    COUNT(*) into var_checking_status
12:24:19 130  	  FROM
12:24:19 131  	    DUAL
12:24:19 132  	  WHERE
12:24:19 133  	    REGEXP_LIKE(var_time_duration, '^(\d{1,3}H){0,1}(\d{1,3}M){0,1}(\d{1,3}S){0,1}$')
12:24:19 134  	    AND ROWNUM <= 1;
12:24:19 135  
12:24:19 136  	  IF var_checking_status = 0 THEN
12:24:19 137  	    RAISE BAD_ISO_FORMAT;
12:24:19 138  	  END IF;
12:24:19 139  
12:24:19 140  	  IF INSTR(var_time_duration, 'H') != 0 THEN
12:24:19 141  	    SELECT
12:24:19 142  	      REGEXP_SUBSTR(var_time_duration, '\d+H') into var_hours
12:24:19 143  	    FROM
12:24:19 144  	      DUAL;
12:24:19 145  	    var_hours := SUBSTR(var_hours, 1, LENGTH(var_hours) - 1);
12:24:19 146  	  END IF;
12:24:19 147  
12:24:19 148  	  IF INSTR(var_time_duration, 'M') != 0 THEN
12:24:19 149  	    SELECT
12:24:19 150  	      REGEXP_SUBSTR(var_time_duration, '\d+M') into var_minutes
12:24:19 151  	    FROM
12:24:19 152  	      DUAL;
12:24:19 153  	    var_minutes := SUBSTR(var_minutes, 1, LENGTH(var_minutes) - 1);
12:24:19 154  	  END IF;
12:24:19 155  
12:24:19 156  	  IF INSTR(var_time_duration, 'S') != 0 THEN
12:24:19 157  	    SELECT
12:24:19 158  	      REGEXP_SUBSTR(var_time_duration, '\d+S') into var_seconds
12:24:19 159  	    FROM
12:24:19 160  	      DUAL;
12:24:19 161  	    var_seconds := SUBSTR(var_seconds, 1, LENGTH(var_seconds) - 1);
12:24:19 162  	  END IF;
12:24:19 163  
12:24:19 164  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded);
12:24:19 165  	END IF;
12:24:19 166  
12:24:19 167  	out_years  := var_years;
12:24:19 168  	out_months := var_monthes;
12:24:19 169  	out_days   := var_days;
12:24:19 170  
12:24:19 171  EXCEPTION
12:24:19 172  WHEN BAD_ISO_FORMAT THEN
12:24:19 173  	PROCS_COMMON_V16.THROW_EXCEPTION(APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
12:24:19 174  	  SPROC_NAME, 'Bad date format');
12:24:19 175  WHEN OTHERS THEN
12:24:19 176  	PROCS_COMMON_V16.THROW_EXCEPTION(APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:24:19 177  	  SPROC_NAME, 'Unknown error', SQLERRM);
12:24:19 178  END ISO8601DURATION_TO_INTERVALS;
12:24:19 179  
12:24:19 180  /******************************************************************************/
12:24:19 181  
12:24:19 182  FUNCTION NORMALIZE_DATE(
12:24:19 183   in_date IN DATE
12:24:19 184  ) RETURN DATE AS
12:24:19 185  -- VARIABLES
12:24:19 186  var_normalized_date DATE;
12:24:19 187  BEGIN
12:24:19 188  	var_normalized_date := TRUNC(in_date);
12:24:19 189  	RETURN var_normalized_date;
12:24:19 190  END NORMALIZE_DATE;
12:24:19 191  
12:24:19 192  /******************************************************************************/
12:24:19 193  
12:24:19 194  FUNCTION GENERATE_EXCEPTION_MESSAGE(
12:24:19 195  	in_sproc_name	    IN VARCHAR2,
12:24:19 196  	in_error_message    IN VARCHAR2,
12:24:19 197  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
12:24:19 198  ) RETURN VARCHAR2 AS
12:24:19 199  BEGIN
12:24:19 200  	IF in_error_stacktrace IS NOT NULL THEN
12:24:19 201  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || GLOBAL_CONSTANTS_V16.EXCEPTION_DELIMETER || in_error_stacktrace;
12:24:19 202  	END IF;
12:24:19 203  	RETURN
12:24:19 204  	  in_sproc_name || ': ' || in_error_message;
12:24:19 205  END GENERATE_EXCEPTION_MESSAGE;
12:24:19 206  
12:24:19 207  /******************************************************************************/
12:24:19 208  
12:24:19 209  PROCEDURE THROW_EXCEPTION(
12:24:19 210  	in_exception_code   IN NUMBER,
12:24:19 211  	in_sproc_name	    IN VARCHAR2,
12:24:19 212  	in_error_message    IN VARCHAR2,
12:24:19 213  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
12:24:19 214  ) AS
12:24:19 215  BEGIN
12:24:19 216  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
12:24:19 217  END;
12:24:19 218  
12:24:19 219  FUNCTION ROUND_10_6_TO_10_2 (
12:24:19 220  	in_number NUMBER
12:24:19 221  ) RETURN NUMBER AS
12:24:19 222  v_result NUMBER(10,2);
12:24:19 223  BEGIN
12:24:19 224  	v_result := in_number;
12:24:19 225  	return v_result;
12:24:19 226  END;
12:24:19 227  
12:24:19 228  END PROCS_COMMON_V16;
12:24:19 229  .
12:24:19 SQL> /

Package body created.

Elapsed: 00:00:00.28
12:24:19 SQL> 
12:24:19 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V16 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.03
12:24:19 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V16 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
12:24:19 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V16 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
12:24:19 SQL> 
12:24:19 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V16 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
12:24:19 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V16 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
12:24:19 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V16 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
12:24:19 SQL> 
12:24:19 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V16 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
12:24:19 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V16 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
12:24:19 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V16 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
12:24:19 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
12:24:19 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECST2@rac01.stg.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: nytd_oracledba@nytimes.com
Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.stg.ewr1.nytimes.com
        SID: ECST2
        Schema: core_owner
        Migration: 19.1-release-1.11.0-common
        SVN Revision: 10148
        Duration: 2 sec.
        