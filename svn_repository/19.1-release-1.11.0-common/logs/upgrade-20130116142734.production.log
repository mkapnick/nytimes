14:27:46 SQL> @/dbbackups/ECPR/migrations/core_owner/19.1-release-1.11.0-common/upgrade.sql
14:27:46 SQL> --------------------------------------------------------------------------------
14:27:46 SQL> -- DDL for package APP_EXCEPTION_CODES
14:27:46 SQL> --------------------------------------------------------------------------------
14:27:46 SQL> 
14:27:46 SQL> CREATE OR REPLACE PACKAGE "APP_EXCEPTION_CODES_V16"
14:27:46   2  AS
14:27:46   3  -- norlov 09.09 : current_timestamp replaced by sysdate
14:27:46   4  -- in comparisons (according to #38816)
14:27:46   5  -- 2010-09-13: according to #38860, current_timestamp calls replaced by SYSDATE variable
14:27:46   6  -- to use the same date in whole procedure, also single current_timestamp calls
14:27:46   7  -- replaced by SYSDATE calls
14:27:46   8  
14:27:46   9  
14:27:46  10  	-- EXCEPTION CODES
14:27:46  11  	UNKNOWN_ERROR	  CONSTANT NUMBER := -20001;
14:27:46  12  	NOT_FOUND	  CONSTANT NUMBER := -20002;
14:27:46  13  	STATE_ERROR	  CONSTANT NUMBER := -20003;
14:27:46  14  	DUPLICATE_ERROR   CONSTANT NUMBER := -20004;
14:27:46  15  	HISTORY_ERROR	  CONSTANT NUMBER := -20005;
14:27:46  16  	INVALID_PARAMETER CONSTANT NUMBER := -20006;
14:27:46  17  	INTERNAL_ERROR	  CONSTANT NUMBER := -20007;
14:27:46  18  	CONFLICT_ERROR	  CONSTANT NUMBER := -20008;
14:27:46  19  END APP_EXCEPTION_CODES_V16;
14:27:46  20  .
14:27:46 SQL> /

Package created.

Elapsed: 00:00:00.49
14:27:47 SQL> 
14:27:47 SQL> 
14:27:47 SQL> 
14:27:47 SQL> --------------------------------------------------------------------------------
14:27:47 SQL> -- DDL for package GLOBAL_CONSTANTS
14:27:47 SQL> --------------------------------------------------------------------------------
14:27:47 SQL> 
14:27:47 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_CONSTANTS_V16" AS
14:27:47   2  
14:27:47   3  TRUE  CONSTANT NUMBER := 1;
14:27:47   4  FALSE CONSTANT NUMBER := 0;
14:27:47   5  
14:27:47   6  INFINITY CONSTANT NUMBER := -1;
14:27:47   7  
14:27:47   8  ONE_DAY_INTERVAL	 CONSTANT INTERVAL DAY TO SECOND := INTERVAL '1' DAY;
14:27:47   9  ONE_MONTH_INTERVAL CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' MONTH;
14:27:47  10  ONE_YEAR_INTERVAL   CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' YEAR;
14:27:47  11  
14:27:47  12  -- Exception delimeter
14:27:47  13  EXCEPTION_DELIMETER CONSTANT VARCHAR2(1) := chr(10);
14:27:47  14  
14:27:47  15  -- Number of days when core should return all money
14:27:47  16  OFFER_START_GRACE_PERIOD CONSTANT NUMBER := 7;
14:27:47  17  
14:27:47  18  -- NUmber of days when core should not return any money
14:27:47  19  OFFER_END_GRACE_PERIOD   CONSTANT NUMBER := 7;
14:27:47  20  
14:27:47  21  -- OFFER CHAIN: is refundable META DATTA RULE
14:27:47  22  OFFER_CHAIN_IS_REFUNDABLE   CONSTANT NUMBER := 1;
14:27:47  23  OFFER_CHAIN_REFUNDABLE_RULE CONSTANT VARCHAR2(10) := 'REFUNDABLE';
14:27:47  24  
14:27:47  25  -- OFFER CHAIN REFUNDABLE RULES
14:27:47  26  OFFER_CHAIN_FULL_REFUND	  CONSTANT VARCHAR2(22) := 'FULL_REFUND_DAYS_LIMIT';
14:27:47  27  OFFER_CHAIN_PRORATED_REFUND CONSTANT VARCHAR2(26) := 'PRORATED_REFUND_DAYS_LIMIT';
14:27:47  28  
14:27:47  29  -- norlov: name of the OC eligibility
14:27:47  30  GIFT_CERTIFICATE_REQUIRED CONSTANT VARCHAR2(25) := 'gift certificate required';
14:27:47  31  
14:27:47  32  -- norlov: flag for set elibility
14:27:47  33  ELIGIBILITY_FLAG_SET CONSTANT VARCHAR2(1) := '1';
14:27:47  34  
14:27:47  35  -- norlov: name of OC metadata
14:27:47  36  REDEMPTION_OC_ID CONSTANT VARCHAR2(25) := 'redemption offer chain id';
14:27:47  37  
14:27:47  38  -- norlov: name of the OC eligibility
14:27:47  39  MAX_CONCURRENT_SUBS CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
14:27:47  40  
14:27:47  41  -- norlov: 'unlimited' value for max concurrent subscription number
14:27:47  42  MAX_CONCURRENT_SUBS_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
14:27:47  43  
14:27:47  44  -- 'unlimited' value for max concurrent products number
14:27:47  45  MAX_CONSURRENT_PRD_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
14:27:47  46  
14:27:47  47  -- UPGRADABLE_OFFER_CHAIN_ID
14:27:47  48  OCMD_UPGRADABLE_OFFER_CHAIN_ID CONSTANT VARCHAR(25) := 'UPGRADABLE_OFFER_CHAIN_ID';
14:27:47  49  
14:27:47  50  -- Max number of records that should be return
14:27:47  51  MAX_RETURN_COUNT NUMBER := 1000;
14:27:47  52  
14:27:47  53  -- Share end date for non-group-pass group accounts
14:27:47  54  MAX_DATE CONSTANT DATE := TO_DATE('12/31/9999', 'MM/DD/YYYY');
14:27:47  55  
14:27:47  56  END GLOBAL_CONSTANTS_V16;
14:27:47  57  .
14:27:47 SQL> /

Package created.

Elapsed: 00:00:00.03
14:27:47 SQL> 
14:27:47 SQL> 
14:27:47 SQL> 
14:27:47 SQL> --------------------------------------------------------------------------------
14:27:47 SQL> -- DDL for package GLOBAL_ENUMS
14:27:47 SQL> --------------------------------------------------------------------------------
14:27:47 SQL> 
14:27:47 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_ENUMS_V16" AS
14:27:47   2  
14:27:47   3  ----
14:27:47   4  -- CREDIT CARD TYPES
14:27:47   5  
14:27:47   6  CREDIT_CARD_AMEX	      CONSTANT NUMBER := 1;
14:27:47   7  CREDIT_CARD_VISA	      CONSTANT NUMBER := 2;
14:27:47   8  CREDIT_CARD_MASTER_CARD CONSTANT NUMBER := 3;
14:27:47   9  CREDIT_CARD_DISCOVER    CONSTANT NUMBER := 4;
14:27:47  10  
14:27:47  11  ----
14:27:47  12  -- INSTRUMENT TYPE
14:27:47  13  
14:27:47  14  INSTRUMENT_CREDIT_CARD	   CONSTANT NUMBER := 1;
14:27:47  15  INSTRUMENT_PAYPAL 	   CONSTANT NUMBER := 2;
14:27:47  16  INSTRUMENT_GIFT_CERTIFICATE  CONSTANT NUMBER := 3;
14:27:47  17  INSTRUMENT_ZCI_INSTRUMENT    CONSTANT NUMBER := 4;
14:27:47  18  
14:27:47  19  ----
14:27:47  20  -- SYSTEM ACTIVITY REASONS
14:27:47  21  
14:27:47  22  SAC_SYSTEM_APPLIED_RULE CONSTANT NUMBER := 1;
14:27:47  23  
14:27:47  24  ----
14:27:47  25  -- GIFT CERTIFICATES TYPE
14:27:47  26  
14:27:47  27  GSTYPE_GSTYPE1 CONSTANT NUMBER := 1;
14:27:47  28  GSTYPE_GSTYPE2 CONSTANT NUMBER := 2;
14:27:47  29  
14:27:47  30  ----
14:27:47  31  -- SYSTEM CATEGORY
14:27:47  32  
14:27:47  33  SYSTEM_CATEGORY_LIVE CONSTANT NUMBER := 1;
14:27:47  34  SYSTEM_CATEGORY_TEST CONSTANT NUMBER := 2;
14:27:47  35  
14:27:47  36  ----
14:27:47  37  -- OFFER_RECURRENCES
14:27:47  38  
14:27:47  39  OFFER_REC_INFINITY CONSTANT NUMBER := -1;
14:27:47  40  
14:27:47  41  ----
14:27:47  42  -- TAX JURISDICTION LEVELS
14:27:47  43  -- We need only international right now
14:27:47  44  
14:27:47  45  JURIS_INTERNATIONAL CONSTANT NUMBER := 5;
14:27:47  46  
14:27:47  47  ----
14:27:47  48  -- TAX TYPES
14:27:47  49  
14:27:47  50  TAX_TYPE_SALES CONSTANT NUMBER := 1;
14:27:47  51  TAX_TYPE_VAT   CONSTANT NUMBER := 2;
14:27:47  52  
14:27:47  53  END GLOBAL_ENUMS_V16;
14:27:47  54  .
14:27:47 SQL> /

Package created.

Elapsed: 00:00:00.01
14:27:47 SQL> 
14:27:47 SQL> 
14:27:47 SQL> 
14:27:47 SQL> --------------------------------------------------------------------------------
14:27:47 SQL> -- DDL for package GLOBAL_STATUSES
14:27:47 SQL> --------------------------------------------------------------------------------
14:27:47 SQL> 
14:27:47 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_STATUSES_V16" AS
14:27:47   2  
14:27:47   3  
14:27:47   4  ----
14:27:47   5  -- ACCOUNT STATUSES
14:27:47   6  
14:27:47   7  ACCOUNT_ACTIVE   CONSTANT NUMBER := 1;
14:27:47   8  ACCOUNT_FROZEN   CONSTANT NUMBER := 2;
14:27:47   9  ACCOUNT_DISABLED CONSTANT NUMBER := 3;
14:27:47  10  
14:27:47  11  ----
14:27:47  12  -- SUBSCRIPTION STATUSES
14:27:47  13  
14:27:47  14  SUBSCRIPTION_ACTIVE	  CONSTANT NUMBER := 1;
14:27:47  15  SUBSCRIPTION_SUSPENDED	  CONSTANT NUMBER := 2;
14:27:47  16  SUBSCRIPTION_CANCELED	  CONSTANT NUMBER := 3;
14:27:47  17  SUBSCRIPTION_CLOSED	  CONSTANT NUMBER := 4;
14:27:47  18  SUBSCRIPTION_FALSE_START	  CONSTANT NUMBER := 5;
14:27:47  19  
14:27:47  20  ----
14:27:47  21  -- CREDIT_CARD STATUSES
14:27:47  22  
14:27:47  23  CREDIT_CARD_ACTIVE   CONSTANT NUMBER := 1;
14:27:47  24  CREDIT_CARD_INVALID  CONSTANT NUMBER := 2; -- WAS INACTIVE
14:27:47  25  CREDIT_CARD_DISABLED CONSTANT NUMBER := 3; -- WAS FROZEN
14:27:47  26  CREDIT_CARD_EXPIRED  CONSTANT NUMBER := 4;
14:27:47  27  
14:27:47  28  ----
14:27:47  29  -- PAYPAL STATUSES
14:27:47  30  
14:27:47  31  PAYPAL_ACTIVE   CONSTANT NUMBER := 1;
14:27:47  32  PAYPAL_INACTIVE CONSTANT NUMBER := 2;
14:27:47  33  PAYPAL_FROZEN   CONSTANT NUMBER := 3;
14:27:47  34  
14:27:47  35  ----
14:27:47  36  -- GIFT_CERTIFICATE STATUSES
14:27:47  37  
14:27:47  38  GIFT_CERTIFICATE_ACTIVE	 CONSTANT NUMBER := 1;
14:27:47  39  GIFT_CERTIFICATE_FINALIZED CONSTANT NUMBER := 2;
14:27:47  40  GIFT_CERTIFICATE_REFUNDED  CONSTANT NUMBER := 3;
14:27:47  41  
14:27:47  42  ----
14:27:47  43  -- TRANSACTION STATUSES
14:27:47  44  
14:27:47  45  TRANSACTION_PENDING	     CONSTANT NUMBER := 1;
14:27:47  46  TRANSACTION_CLOSED	     CONSTANT NUMBER := 2;
14:27:47  47  TRANSACTION_CHARGEBACK	     CONSTANT NUMBER := 3;
14:27:47  48  TRANSACTION_PREPARE	     CONSTANT NUMBER := 1;
14:27:47  49  TRANSACTION_DECLINED	     CONSTANT NUMBER := 7;
14:27:47  50  
14:27:47  51  ----
14:27:47  52  -- TRANSACTION_ATTEMPT_STATUS
14:27:47  53  TRANS_ATTEMPT_IN_PROGRESS CONSTANT NUMBER := 1;
14:27:47  54  TRANS_ATTEMPT_SUCCESS	CONSTANT NUMBER := 2;
14:27:47  55  TRANS_ATTEMPT_FAILED	CONSTANT NUMBER := 3;
14:27:47  56  
14:27:47  57  ----
14:27:47  58  -- PRODUCT STATUSES
14:27:47  59  
14:27:47  60  PRODUCT_ACTIVE	CONSTANT NUMBER := 1;
14:27:47  61  PRODUCT_INACTIVE	CONSTANT NUMBER := 2;
14:27:47  62  PRODUCT_DISABLED	CONSTANT NUMBER := 3;
14:27:47  63  
14:27:47  64  ----
14:27:47  65  -- LICENSE STATUSES
14:27:47  66  
14:27:47  67  LICENSE_CLOSED CONSTANT NUMBER := 1;
14:27:47  68  LICENSE_ACTIVE CONSTANT NUMBER := 2;
14:27:47  69  
14:27:47  70  ----
14:27:47  71  -- INVOICE STATUSES
14:27:47  72  
14:27:47  73  INVOICE_OPEN		  CONSTANT NUMBER := 1; -- IN SPECS INVOICE_PENDING
14:27:47  74  INVOICE_CLOSED		  CONSTANT NUMBER := 3; -- IN SPECS INVOICE_PAID
14:27:47  75  /*
14:27:47  76  Next statuses were deleted by Sergey.
14:27:47  77  INVOICE_PENDING_TRANSACTION CONSTANT NUMBER := 2; -- IN SPECS INVOICE_PENDING_TRANSACTION
14:27:47  78  INVOICE_LEGACY		  CONSTANT NUMBER := 4;
14:27:47  79  INVOICE_FAILED		  CONSTANT NUMBER := 5; -- FAILED INVOICE
14:27:47  80  INVOICE_CANCELED		  CONSTANT NUMBER := 6; -- CANCELED INVOICE
14:27:47  81  */
14:27:47  82  
14:27:47  83  ----
14:27:47  84  -- CHARGE STATUSES
14:27:47  85  
14:27:47  86  CHARGE_OPENED    CONSTANT NUMBER := 1;
14:27:47  87  CHARGE_PROCESSED CONSTANT NUMBER := 2;
14:27:47  88  CHARGE_CANCELED  CONSTANT NUMBER := 3;
14:27:47  89  
14:27:47  90  ----
14:27:47  91  -- OFFER STATUSES
14:27:47  92  
14:27:47  93  OFFER_ACTIVE   CONSTANT NUMBER := 1;
14:27:47  94  OFFER_INACTIVE CONSTANT NUMBER := 2;
14:27:47  95  OFFER_DISABLED CONSTANT NUMBER := 3;
14:27:47  96  
14:27:47  97  ----
14:27:47  98  -- OFFER_CHAIN STATUSES
14:27:47  99  
14:27:47 100  OFFER_CHAIN_ACTIVE   CONSTANT NUMBER := 1;
14:27:47 101  OFFER_CHAIN_INACTIVE CONSTANT NUMBER := 2;
14:27:47 102  OFFER_CHAIN_DISABLED CONSTANT NUMBER := 3;
14:27:47 103  
14:27:47 104  ----
14:27:47 105  -- ZERO_CHARGE_INSTRUMENT STATUSES
14:27:47 106  
14:27:47 107  ZERO_CHARGE_INSTR_ACTIVE CONSTANT NUMBER := 1;
14:27:47 108  ZERO_CHARGE_INSTR_DISABLED CONSTANT NUMBER := 2;
14:27:47 109  
14:27:47 110  ----
14:27:47 111  -- SUBSCRIPTION_CANCELATION_REASONS
14:27:47 112  
14:27:47 113  SUBSCR_CANC_REASON_ACTIVE CONSTANT NUMBER := 1;
14:27:47 114  SUBSCR_CANC_REASON_INACTIVE CONSTANT NUMBER := 1;
14:27:47 115  
14:27:47 116  GROUP_ACC_IP_RNG_ACTIVE CONSTANT NUMBER := 1;
14:27:47 117  GROUP_ACC_IP_RNG_INACTIVE CONSTANT NUMBER := 2;
14:27:47 118  
14:27:47 119  GROUP_ACC_EMAIL_DOMAIN_ACT CONSTANT NUMBER := 1;
14:27:47 120  GROUP_ACC_EMAIL_DOMAIN_INACT CONSTANT NUMBER := 0;
14:27:47 121  
14:27:47 122  END GLOBAL_STATUSES_V16;
14:27:47 123  .
14:27:47 SQL> /

Package created.

Elapsed: 00:00:00.05
14:27:47 SQL> 
14:27:47 SQL> 
14:27:47 SQL> 
14:27:47 SQL> --------------------------------------------------------------------------------
14:27:47 SQL> -- DDL for package PROCS_COMMON
14:27:47 SQL> --------------------------------------------------------------------------------
14:27:47 SQL> 
14:27:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V16" AS
14:27:47   2  
14:27:47   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
14:27:47   4  	in_duration IN VARCHAR2,
14:27:47   5  	in_start_date IN DATE
14:27:47   6  ) RETURN DATE;
14:27:47   7  
14:27:47   8  PROCEDURE ISO8601DURATION_TO_INTERVALS(
14:27:47   9  /*
14:27:47  10  Throws exceptions:
14:27:47  11  APP_EXCEPTION_CODES_V16.INTERNAL_ERROR
14:27:47  12  APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:27:47  13  */
14:27:47  14  	in_duration IN	VARCHAR2,
14:27:47  15  	out_years   OUT NUMBER,
14:27:47  16  	out_months  OUT NUMBER,
14:27:47  17  	out_days    OUT NUMBER
14:27:47  18  );
14:27:47  19  
14:27:47  20  FUNCTION NORMALIZE_DATE(
14:27:47  21   in_date IN DATE
14:27:47  22  ) RETURN DATE;
14:27:47  23  
14:27:47  24  FUNCTION GENERATE_EXCEPTION_MESSAGE(
14:27:47  25  	in_sproc_name	    IN VARCHAR2,
14:27:47  26  	in_error_message    IN VARCHAR2,
14:27:47  27  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:27:47  28  ) RETURN VARCHAR2;
14:27:47  29  
14:27:47  30  PROCEDURE THROW_EXCEPTION(
14:27:47  31  	in_exception_code   IN NUMBER,
14:27:47  32  	in_sproc_name	    IN VARCHAR2,
14:27:47  33  	in_error_message    IN VARCHAR2,
14:27:47  34  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:27:47  35  );
14:27:47  36  
14:27:47  37  FUNCTION ROUND_10_6_TO_10_2 (
14:27:47  38  	in_number NUMBER
14:27:47  39  ) RETURN NUMBER;
14:27:47  40  
14:27:47  41  END PROCS_COMMON_V16;
14:27:47  42  .
14:27:47 SQL> /

Package created.

Elapsed: 00:00:00.19
14:27:47 SQL> 
14:27:47 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V16" AS
14:27:47   2  
14:27:47   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
14:27:47   4  	in_duration IN VARCHAR2,
14:27:47   5  	in_start_date IN DATE
14:27:47   6  ) RETURN DATE AS
14:27:47   7  	var_end_date DATE;
14:27:47   8  	var_years NUMBER;
14:27:47   9  	var_months NUMBER;
14:27:47  10  	var_days NUMBER;
14:27:47  11  	var_ym_interval INTERVAL YEAR TO MONTH;
14:27:47  12  	var_ds_interval INTERVAL DAY(3) TO SECOND;
14:27:47  13  BEGIN
14:27:47  14  	PROCS_COMMON_V16.ISO8601DURATION_TO_INTERVALS(in_duration, var_years, var_months, var_days);
14:27:47  15  	var_ym_interval := var_years || '-' || var_months;
14:27:47  16  	var_ds_interval := var_days || ' 0:0:0';
14:27:47  17  
14:27:47  18  	var_end_date := in_start_date + var_ym_interval + var_ds_interval;
14:27:47  19  	RETURN var_end_date;
14:27:47  20  END ADD_ISO8601DURATION_TO_DATE;
14:27:47  21  
14:27:47  22  PROCEDURE ISO8601DURATION_TO_INTERVALS(
14:27:47  23  /*
14:27:47  24  Throws exceptions:
14:27:47  25  APP_EXCEPTION_CODES_V16.INTERNAL_ERROR
14:27:47  26  APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:27:47  27  */
14:27:47  28  	in_duration IN	VARCHAR2,
14:27:47  29  	out_years   OUT NUMBER,
14:27:47  30  	out_months  OUT NUMBER,
14:27:47  31  	out_days    OUT NUMBER
14:27:47  32  ) AS
14:27:47  33  SPROC_NAME	  CONSTANT VARCHAR2(28) := 'ISO8601DURATION_TO_INTERVALS';
14:27:47  34  -- VARIABLES
14:27:47  35  var_checking_status NUMBER;
14:27:47  36  temp_duration	  VARCHAR2(29);
14:27:47  37  var_is_t_founded	  NUMBER;
14:27:47  38  
14:27:47  39  var_date_duration VARCHAR2(29);
14:27:47  40  var_time_duration VARCHAR2(29);
14:27:47  41  
14:27:47  42  var_years   VARCHAR2(4);
14:27:47  43  var_monthes VARCHAR2(4);
14:27:47  44  var_days	  VARCHAR2(4);
14:27:47  45  var_hours   VARCHAR2(4);
14:27:47  46  var_minutes VARCHAR2(4);
14:27:47  47  var_seconds VARCHAR2(4);
14:27:47  48  
14:27:47  49  -- EXCEPTIONS
14:27:47  50  BAD_ISO_FORMAT EXCEPTION;
14:27:47  51  BEGIN
14:27:47  52  
14:27:47  53  	var_years   := '0';
14:27:47  54  	var_monthes := '0';
14:27:47  55  	var_days    := '0';
14:27:47  56  	var_hours   := '0';
14:27:47  57  	var_minutes := '0';
14:27:47  58  	var_seconds := '0';
14:27:47  59  
14:27:47  60  	SELECT
14:27:47  61  	  COUNT(*) into var_checking_status
14:27:47  62  	FROM
14:27:47  63  	  DUAL
14:27:47  64  	WHERE
14:27:47  65  	  REGEXP_LIKE(in_duration, '^P')
14:27:47  66  	  AND ROWNUM <= 1;
14:27:47  67  
14:27:47  68  	IF var_checking_status = 0 THEN
14:27:47  69  	  RAISE BAD_ISO_FORMAT;
14:27:47  70  	END IF;
14:27:47  71  
14:27:47  72  	SELECT
14:27:47  73  	  SUBSTR(in_duration, 2) into temp_duration
14:27:47  74  	FROM DUAL
14:27:47  75  	WHERE ROWNUM <= 1;
14:27:47  76  
14:27:47  77  	var_is_t_founded := INSTR(temp_duration, 'T');
14:27:47  78  
14:27:47  79  	IF var_is_t_founded > 1 OR var_is_t_founded = 0 THEN
14:27:47  80  	  -- RESOLVING DATE FROM ISO STRING
14:27:47  81  	  IF var_is_t_founded != 0 THEN
14:27:47  82  	    var_date_duration := SUBSTR(temp_duration, 1, var_is_t_founded - 1);
14:27:47  83  	  ELSE
14:27:47  84  	    var_date_duration := temp_duration;
14:27:47  85  	  END IF;
14:27:47  86  
14:27:47  87  	  SELECT
14:27:47  88  	    COUNT(*) into var_checking_status
14:27:47  89  	  FROM
14:27:47  90  	    DUAL
14:27:47  91  	  WHERE
14:27:47  92  	    REGEXP_LIKE(var_date_duration, '^(\d{1,3}Y){0,1}(\d{1,3}M){0,1}(\d{1,3}D){0,1}$')
14:27:47  93  	    AND ROWNUM <= 1;
14:27:47  94  
14:27:47  95  	  IF var_checking_status = 0 THEN
14:27:47  96  	    RAISE BAD_ISO_FORMAT;
14:27:47  97  	  END IF;
14:27:47  98  
14:27:47  99  	  IF INSTR(var_date_duration, 'Y') != 0 THEN
14:27:47 100  	    SELECT
14:27:47 101  	      REGEXP_SUBSTR(var_date_duration, '\d+Y') into var_years
14:27:47 102  	    FROM
14:27:47 103  	      DUAL;
14:27:47 104  	    var_years := SUBSTR(var_years, 1, LENGTH(var_years) - 1);
14:27:47 105  	  END IF;
14:27:47 106  
14:27:47 107  	  IF INSTR(var_date_duration, 'M') != 0 THEN
14:27:47 108  	    SELECT
14:27:47 109  	      REGEXP_SUBSTR(var_date_duration, '\d+M') into var_monthes
14:27:47 110  	    FROM
14:27:47 111  	      DUAL;
14:27:47 112  	    var_monthes := SUBSTR(var_monthes, 1, LENGTH(var_monthes) - 1);
14:27:47 113  	  END IF;
14:27:47 114  
14:27:47 115  	  IF INSTR(var_date_duration, 'D') != 0 THEN
14:27:47 116  	    SELECT
14:27:47 117  	      REGEXP_SUBSTR(var_date_duration, '\d+D') into var_days
14:27:47 118  	    FROM
14:27:47 119  	      DUAL;
14:27:47 120  	    var_days := SUBSTR(var_days, 1, LENGTH(var_days) - 1);
14:27:47 121  	  END IF;
14:27:47 122  	END IF;
14:27:47 123  
14:27:47 124  	IF (var_is_t_founded > 0) THEN
14:27:47 125  	  -- RESOLVING TIME FROM ISO STRING
14:27:47 126  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded + 1);
14:27:47 127  
14:27:47 128  	  SELECT
14:27:47 129  	    COUNT(*) into var_checking_status
14:27:47 130  	  FROM
14:27:47 131  	    DUAL
14:27:47 132  	  WHERE
14:27:47 133  	    REGEXP_LIKE(var_time_duration, '^(\d{1,3}H){0,1}(\d{1,3}M){0,1}(\d{1,3}S){0,1}$')
14:27:47 134  	    AND ROWNUM <= 1;
14:27:47 135  
14:27:47 136  	  IF var_checking_status = 0 THEN
14:27:47 137  	    RAISE BAD_ISO_FORMAT;
14:27:47 138  	  END IF;
14:27:47 139  
14:27:47 140  	  IF INSTR(var_time_duration, 'H') != 0 THEN
14:27:47 141  	    SELECT
14:27:47 142  	      REGEXP_SUBSTR(var_time_duration, '\d+H') into var_hours
14:27:47 143  	    FROM
14:27:47 144  	      DUAL;
14:27:47 145  	    var_hours := SUBSTR(var_hours, 1, LENGTH(var_hours) - 1);
14:27:47 146  	  END IF;
14:27:47 147  
14:27:47 148  	  IF INSTR(var_time_duration, 'M') != 0 THEN
14:27:47 149  	    SELECT
14:27:47 150  	      REGEXP_SUBSTR(var_time_duration, '\d+M') into var_minutes
14:27:47 151  	    FROM
14:27:47 152  	      DUAL;
14:27:47 153  	    var_minutes := SUBSTR(var_minutes, 1, LENGTH(var_minutes) - 1);
14:27:47 154  	  END IF;
14:27:47 155  
14:27:47 156  	  IF INSTR(var_time_duration, 'S') != 0 THEN
14:27:47 157  	    SELECT
14:27:47 158  	      REGEXP_SUBSTR(var_time_duration, '\d+S') into var_seconds
14:27:47 159  	    FROM
14:27:47 160  	      DUAL;
14:27:47 161  	    var_seconds := SUBSTR(var_seconds, 1, LENGTH(var_seconds) - 1);
14:27:47 162  	  END IF;
14:27:47 163  
14:27:47 164  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded);
14:27:47 165  	END IF;
14:27:47 166  
14:27:47 167  	out_years  := var_years;
14:27:47 168  	out_months := var_monthes;
14:27:47 169  	out_days   := var_days;
14:27:47 170  
14:27:47 171  EXCEPTION
14:27:47 172  WHEN BAD_ISO_FORMAT THEN
14:27:47 173  	PROCS_COMMON_V16.THROW_EXCEPTION(APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
14:27:47 174  	  SPROC_NAME, 'Bad date format');
14:27:47 175  WHEN OTHERS THEN
14:27:47 176  	PROCS_COMMON_V16.THROW_EXCEPTION(APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:27:47 177  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:27:47 178  END ISO8601DURATION_TO_INTERVALS;
14:27:47 179  
14:27:47 180  /******************************************************************************/
14:27:47 181  
14:27:47 182  FUNCTION NORMALIZE_DATE(
14:27:47 183   in_date IN DATE
14:27:47 184  ) RETURN DATE AS
14:27:47 185  -- VARIABLES
14:27:47 186  var_normalized_date DATE;
14:27:47 187  BEGIN
14:27:47 188  	var_normalized_date := TRUNC(in_date);
14:27:47 189  	RETURN var_normalized_date;
14:27:47 190  END NORMALIZE_DATE;
14:27:47 191  
14:27:47 192  /******************************************************************************/
14:27:47 193  
14:27:47 194  FUNCTION GENERATE_EXCEPTION_MESSAGE(
14:27:47 195  	in_sproc_name	    IN VARCHAR2,
14:27:47 196  	in_error_message    IN VARCHAR2,
14:27:47 197  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:27:47 198  ) RETURN VARCHAR2 AS
14:27:47 199  BEGIN
14:27:47 200  	IF in_error_stacktrace IS NOT NULL THEN
14:27:47 201  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || GLOBAL_CONSTANTS_V16.EXCEPTION_DELIMETER || in_error_stacktrace;
14:27:47 202  	END IF;
14:27:47 203  	RETURN
14:27:47 204  	  in_sproc_name || ': ' || in_error_message;
14:27:47 205  END GENERATE_EXCEPTION_MESSAGE;
14:27:47 206  
14:27:47 207  /******************************************************************************/
14:27:47 208  
14:27:47 209  PROCEDURE THROW_EXCEPTION(
14:27:47 210  	in_exception_code   IN NUMBER,
14:27:47 211  	in_sproc_name	    IN VARCHAR2,
14:27:47 212  	in_error_message    IN VARCHAR2,
14:27:47 213  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:27:47 214  ) AS
14:27:47 215  BEGIN
14:27:47 216  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
14:27:47 217  END;
14:27:47 218  
14:27:47 219  FUNCTION ROUND_10_6_TO_10_2 (
14:27:47 220  	in_number NUMBER
14:27:47 221  ) RETURN NUMBER AS
14:27:47 222  v_result NUMBER(10,2);
14:27:47 223  BEGIN
14:27:47 224  	v_result := in_number;
14:27:47 225  	return v_result;
14:27:47 226  END;
14:27:47 227  
14:27:47 228  END PROCS_COMMON_V16;
14:27:47 229  .
14:27:47 SQL> /

Package body created.

Elapsed: 00:00:00.13
14:27:47 SQL> 
14:27:47 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V16 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.02
14:27:47 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V16 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:27:47 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V16 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:27:47 SQL> 
14:27:47 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V16 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:27:47 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V16 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:27:47 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V16 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:27:47 SQL> 
14:27:47 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V16 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:27:47 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V16 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:27:47 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V16 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:27:47 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
14:27:47 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECPR@rac01.prd.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: nytd_oracledba@nytimes.com
Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.prd.ewr1.nytimes.com
        SID: ECPR
        Schema: core_owner
        Migration: 19.1-release-1.11.0-common
        SVN Revision: 10148
        Duration: 1 sec.
        Service Request: https://jira.em.nytimes.com/browse/ORA-315