10:16:12 SQL> @/dbbackups/ECST/migrations/core_owner/84.2-sartre-release-1.18.0-bulk-1-CORE-common.sql/upgrade.sql
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> -- DDL for package APP_EXCEPTION_CODES
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> 
10:16:12 SQL> CREATE OR REPLACE PACKAGE "APP_EXCEPTION_CODES_V24"
10:16:12   2  AS
10:16:12   3  -- norlov 09.09 : current_timestamp replaced by sysdate
10:16:12   4  -- in comparisons (according to #38816)
10:16:12   5  -- 2010-09-13: according to #38860, current_timestamp calls replaced by SYSDATE variable
10:16:12   6  -- to use the same date in whole procedure, also single current_timestamp calls
10:16:12   7  -- replaced by SYSDATE calls
10:16:12   8  
10:16:12   9  
10:16:12  10  	-- EXCEPTION CODES
10:16:12  11  	UNKNOWN_ERROR	  CONSTANT NUMBER := -20001;
10:16:12  12  	NOT_FOUND	  CONSTANT NUMBER := -20002;
10:16:12  13  	STATE_ERROR	  CONSTANT NUMBER := -20003;
10:16:12  14  	DUPLICATE_ERROR   CONSTANT NUMBER := -20004;
10:16:12  15  	HISTORY_ERROR	  CONSTANT NUMBER := -20005;
10:16:12  16  	INVALID_PARAMETER CONSTANT NUMBER := -20006;
10:16:12  17  	INTERNAL_ERROR	  CONSTANT NUMBER := -20007;
10:16:12  18  	CONFLICT_ERROR	  CONSTANT NUMBER := -20008;
10:16:12  19  END APP_EXCEPTION_CODES_V24;
10:16:12  20  .
10:16:12 SQL> /

Package created.

Elapsed: 00:00:00.23
10:16:12 SQL> 
10:16:12 SQL> 
10:16:12 SQL> 
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> -- DDL for package GLOBAL_CONSTANTS
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> 
10:16:12 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_CONSTANTS_V24" AS
10:16:12   2  
10:16:12   3  TRUE  CONSTANT NUMBER := 1;
10:16:12   4  FALSE CONSTANT NUMBER := 0;
10:16:12   5  
10:16:12   6  INFINITY CONSTANT NUMBER := -1;
10:16:12   7  
10:16:12   8  ONE_DAY_INTERVAL	 CONSTANT INTERVAL DAY TO SECOND := INTERVAL '1' DAY;
10:16:12   9  ONE_MONTH_INTERVAL CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' MONTH;
10:16:12  10  ONE_YEAR_INTERVAL   CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' YEAR;
10:16:12  11  
10:16:12  12  -- Exception delimeter
10:16:12  13  EXCEPTION_DELIMETER CONSTANT VARCHAR2(1) := chr(10);
10:16:12  14  
10:16:12  15  -- Number of days when core should return all money
10:16:12  16  OFFER_START_GRACE_PERIOD CONSTANT NUMBER := 7;
10:16:12  17  
10:16:12  18  -- NUmber of days when core should not return any money
10:16:12  19  OFFER_END_GRACE_PERIOD   CONSTANT NUMBER := 7;
10:16:12  20  
10:16:12  21  -- OFFER CHAIN: is refundable META DATTA RULE
10:16:12  22  OFFER_CHAIN_IS_REFUNDABLE   CONSTANT NUMBER := 1;
10:16:12  23  OFFER_CHAIN_REFUNDABLE_RULE CONSTANT VARCHAR2(10) := 'REFUNDABLE';
10:16:12  24  
10:16:12  25  -- OFFER CHAIN REFUNDABLE RULES
10:16:12  26  OFFER_CHAIN_FULL_REFUND	  CONSTANT VARCHAR2(22) := 'FULL_REFUND_DAYS_LIMIT';
10:16:12  27  OFFER_CHAIN_PRORATED_REFUND CONSTANT VARCHAR2(26) := 'PRORATED_REFUND_DAYS_LIMIT';
10:16:12  28  
10:16:12  29  -- norlov: name of the OC eligibility
10:16:12  30  GIFT_CERTIFICATE_REQUIRED CONSTANT VARCHAR2(25) := 'gift certificate required';
10:16:12  31  
10:16:12  32  -- norlov: flag for set elibility
10:16:12  33  ELIGIBILITY_FLAG_SET CONSTANT VARCHAR2(1) := '1';
10:16:12  34  
10:16:12  35  -- norlov: name of OC metadata
10:16:12  36  REDEMPTION_OC_ID CONSTANT VARCHAR2(25) := 'redemption offer chain id';
10:16:12  37  
10:16:12  38  -- norlov: name of the OC eligibility
10:16:12  39  MAX_CONCURRENT_SUBS CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
10:16:12  40  
10:16:12  41  -- norlov: 'unlimited' value for max concurrent subscription number
10:16:12  42  MAX_CONCURRENT_SUBS_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
10:16:12  43  
10:16:12  44  -- 'unlimited' value for max concurrent products number
10:16:12  45  MAX_CONSURRENT_PRD_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
10:16:12  46  
10:16:12  47  -- UPGRADABLE_OFFER_CHAIN_ID
10:16:12  48  OCMD_UPGRADABLE_OFFER_CHAIN_ID CONSTANT VARCHAR(25) := 'UPGRADABLE_OFFER_CHAIN_ID';
10:16:12  49  
10:16:12  50  -- Max number of records that should be return
10:16:12  51  MAX_RETURN_COUNT NUMBER := 1000;
10:16:12  52  
10:16:12  53  -- Share end date for non-group-pass group accounts
10:16:12  54  MAX_DATE CONSTANT DATE := TO_DATE('12/31/9999', 'MM/DD/YYYY');
10:16:12  55  
10:16:12  56  END GLOBAL_CONSTANTS_V24;
10:16:12  57  .
10:16:12 SQL> /

Package created.

Elapsed: 00:00:00.17
10:16:12 SQL> 
10:16:12 SQL> 
10:16:12 SQL> 
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> -- DDL for package GLOBAL_ENUMS
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> 
10:16:12 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_ENUMS_V24" AS
10:16:12   2  
10:16:12   3  ----
10:16:12   4  -- CREDIT CARD TYPES
10:16:12   5  
10:16:12   6  CREDIT_CARD_AMEX	      CONSTANT NUMBER := 1;
10:16:12   7  CREDIT_CARD_VISA	      CONSTANT NUMBER := 2;
10:16:12   8  CREDIT_CARD_MASTER_CARD CONSTANT NUMBER := 3;
10:16:12   9  CREDIT_CARD_DISCOVER    CONSTANT NUMBER := 4;
10:16:12  10  
10:16:12  11  ----
10:16:12  12  -- INSTRUMENT TYPE
10:16:12  13  
10:16:12  14  INSTRUMENT_CREDIT_CARD	   CONSTANT NUMBER := 1;
10:16:12  15  INSTRUMENT_PAYPAL 	   CONSTANT NUMBER := 2;
10:16:12  16  INSTRUMENT_GIFT_CERTIFICATE  CONSTANT NUMBER := 3;
10:16:12  17  INSTRUMENT_ZCI_INSTRUMENT    CONSTANT NUMBER := 4;
10:16:12  18  
10:16:12  19  ----
10:16:12  20  -- SYSTEM ACTIVITY REASONS
10:16:12  21  
10:16:12  22  SAC_SYSTEM_APPLIED_RULE CONSTANT NUMBER := 1;
10:16:12  23  
10:16:12  24  ----
10:16:12  25  -- GIFT CERTIFICATES TYPE
10:16:12  26  
10:16:12  27  GSTYPE_GSTYPE1 CONSTANT NUMBER := 1;
10:16:12  28  GSTYPE_GSTYPE2 CONSTANT NUMBER := 2;
10:16:12  29  
10:16:12  30  ----
10:16:12  31  -- SYSTEM CATEGORY
10:16:12  32  
10:16:12  33  SYSTEM_CATEGORY_LIVE CONSTANT NUMBER := 1;
10:16:12  34  SYSTEM_CATEGORY_TEST CONSTANT NUMBER := 2;
10:16:12  35  
10:16:12  36  ----
10:16:12  37  -- OFFER_RECURRENCES
10:16:12  38  
10:16:12  39  OFFER_REC_INFINITY CONSTANT NUMBER := -1;
10:16:12  40  
10:16:12  41  ----
10:16:12  42  -- TAX JURISDICTION LEVELS
10:16:12  43  -- We need only international right now
10:16:12  44  
10:16:12  45  JURIS_INTERNATIONAL CONSTANT NUMBER := 5;
10:16:12  46  
10:16:12  47  ----
10:16:12  48  -- TAX TYPES
10:16:12  49  
10:16:12  50  TAX_TYPE_SALES CONSTANT NUMBER := 1;
10:16:12  51  TAX_TYPE_VAT   CONSTANT NUMBER := 2;
10:16:12  52  
10:16:12  53  END GLOBAL_ENUMS_V24;
10:16:12  54  .
10:16:12 SQL> /

Package created.

Elapsed: 00:00:00.09
10:16:12 SQL> 
10:16:12 SQL> 
10:16:12 SQL> 
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> -- DDL for package GLOBAL_STATUSES
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> 
10:16:12 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_STATUSES_V24" AS
10:16:12   2  
10:16:12   3  REAL_TIME_CANCEL_REASON CONSTANT NUMBER := 41;
10:16:12   4  
10:16:12   5  ----
10:16:12   6  -- ACCOUNT STATUSES
10:16:12   7  
10:16:12   8  ACCOUNT_ACTIVE   CONSTANT NUMBER := 1;
10:16:12   9  ACCOUNT_FROZEN   CONSTANT NUMBER := 2;
10:16:12  10  ACCOUNT_DISABLED CONSTANT NUMBER := 3;
10:16:12  11  
10:16:12  12  ----
10:16:12  13  -- SUBSCRIPTION STATUSES
10:16:12  14  
10:16:12  15  SUBSCRIPTION_ACTIVE	   CONSTANT NUMBER := 1;
10:16:12  16  SUBSCRIPTION_SUSPENDED	   CONSTANT NUMBER := 2;
10:16:12  17  SUBSCRIPTION_CANCELED	   CONSTANT NUMBER := 3;
10:16:12  18  SUBSCRIPTION_CLOSED	   CONSTANT NUMBER := 4;
10:16:12  19  SUBSCRIPTION_FALSE_START	   CONSTANT NUMBER := 5;
10:16:12  20  SUBSCRIPTION_IN_GRACE_PERIOD CONSTANT NUMBER := 6;
10:16:12  21  
10:16:12  22  ----
10:16:12  23  -- CREDIT_CARD STATUSES
10:16:12  24  
10:16:12  25  CREDIT_CARD_ACTIVE   CONSTANT NUMBER := 1;
10:16:12  26  CREDIT_CARD_INVALID  CONSTANT NUMBER := 2; -- WAS INACTIVE
10:16:12  27  CREDIT_CARD_DISABLED CONSTANT NUMBER := 3; -- WAS FROZEN
10:16:12  28  CREDIT_CARD_EXPIRED  CONSTANT NUMBER := 4;
10:16:12  29  
10:16:12  30  ----
10:16:12  31  -- PAYPAL STATUSES
10:16:12  32  
10:16:12  33  PAYPAL_ACTIVE   CONSTANT NUMBER := 1;
10:16:12  34  PAYPAL_INACTIVE CONSTANT NUMBER := 2;
10:16:12  35  PAYPAL_FROZEN   CONSTANT NUMBER := 3;
10:16:12  36  
10:16:12  37  ----
10:16:12  38  -- GIFT_CERTIFICATE STATUSES
10:16:12  39  
10:16:12  40  GIFT_CERTIFICATE_ACTIVE	 CONSTANT NUMBER := 1;
10:16:12  41  GIFT_CERTIFICATE_FINALIZED CONSTANT NUMBER := 2;
10:16:12  42  GIFT_CERTIFICATE_REFUNDED  CONSTANT NUMBER := 3;
10:16:12  43  
10:16:12  44  ----
10:16:12  45  -- TRANSACTION STATUSES
10:16:12  46  
10:16:12  47  TRANSACTION_PENDING	     CONSTANT NUMBER := 1;
10:16:12  48  TRANSACTION_CLOSED	     CONSTANT NUMBER := 2;
10:16:12  49  TRANSACTION_CHARGEBACK	     CONSTANT NUMBER := 3;
10:16:12  50  TRANSACTION_PREPARE	     CONSTANT NUMBER := 1;
10:16:12  51  TRANSACTION_DECLINED	     CONSTANT NUMBER := 7;
10:16:12  52  
10:16:12  53  ----
10:16:12  54  -- TRANSACTION_ATTEMPT_STATUS
10:16:12  55  TRANS_ATTEMPT_IN_PROGRESS CONSTANT NUMBER := 1;
10:16:12  56  TRANS_ATTEMPT_SUCCESS	CONSTANT NUMBER := 2;
10:16:12  57  TRANS_ATTEMPT_FAILED	CONSTANT NUMBER := 3;
10:16:12  58  
10:16:12  59  ----
10:16:12  60  -- PRODUCT STATUSES
10:16:12  61  
10:16:12  62  PRODUCT_ACTIVE	CONSTANT NUMBER := 1;
10:16:12  63  PRODUCT_INACTIVE	CONSTANT NUMBER := 2;
10:16:12  64  PRODUCT_DISABLED	CONSTANT NUMBER := 3;
10:16:12  65  
10:16:12  66  ----
10:16:12  67  -- LICENSE STATUSES
10:16:12  68  
10:16:12  69  LICENSE_CLOSED CONSTANT NUMBER := 1;
10:16:12  70  LICENSE_ACTIVE CONSTANT NUMBER := 2;
10:16:12  71  LICENSE_IN_GRACE_PERIOD CONSTANT NUMBER := 4;
10:16:12  72  
10:16:12  73  ----
10:16:12  74  -- INVOICE STATUSES
10:16:12  75  
10:16:12  76  INVOICE_OPEN		  CONSTANT NUMBER := 1; -- IN SPECS INVOICE_PENDING
10:16:12  77  INVOICE_CLOSED		  CONSTANT NUMBER := 3; -- IN SPECS INVOICE_PAID
10:16:12  78  
10:16:12  79  
10:16:12  80  ----
10:16:12  81  -- CHARGE STATUSES
10:16:12  82  
10:16:12  83  CHARGE_OPENED    CONSTANT NUMBER := 1;
10:16:12  84  CHARGE_PROCESSED CONSTANT NUMBER := 2;
10:16:12  85  CHARGE_CANCELED  CONSTANT NUMBER := 3;
10:16:12  86  CHARGE_CAPTURED  CONSTANT NUMBER := 4;
10:16:12  87  CHARGE_FAILED  CONSTANT NUMBER := 5;
10:16:12  88  CHARGE_SETTLED  CONSTANT NUMBER := 6;
10:16:12  89  CHARGE_CHARGEBACK_CLAIM  CONSTANT NUMBER := 7;
10:16:12  90  CHARGEBACK_SETTLED  CONSTANT NUMBER := 8;
10:16:12  91  VOID CONSTANT NUMBER := 9;
10:16:12  92  
10:16:12  93  ----
10:16:12  94  -- OFFER STATUSES
10:16:12  95  
10:16:12  96  OFFER_ACTIVE   CONSTANT NUMBER := 1;
10:16:12  97  OFFER_INACTIVE CONSTANT NUMBER := 2;
10:16:12  98  OFFER_DISABLED CONSTANT NUMBER := 3;
10:16:12  99  
10:16:12 100  ----
10:16:12 101  -- OFFER_CHAIN STATUSES
10:16:12 102  
10:16:12 103  OFFER_CHAIN_ACTIVE   CONSTANT NUMBER := 1;
10:16:12 104  OFFER_CHAIN_INACTIVE CONSTANT NUMBER := 2;
10:16:12 105  OFFER_CHAIN_DISABLED CONSTANT NUMBER := 3;
10:16:12 106  
10:16:12 107  ----
10:16:12 108  -- ZERO_CHARGE_INSTRUMENT STATUSES
10:16:12 109  
10:16:12 110  ZERO_CHARGE_INSTR_ACTIVE CONSTANT NUMBER := 1;
10:16:12 111  ZERO_CHARGE_INSTR_DISABLED CONSTANT NUMBER := 2;
10:16:12 112  
10:16:12 113  ----
10:16:12 114  -- SUBSCRIPTION_CANCELATION_REASONS
10:16:12 115  
10:16:12 116  SUBSCR_CANC_REASON_ACTIVE CONSTANT NUMBER := 1;
10:16:12 117  SUBSCR_CANC_REASON_INACTIVE CONSTANT NUMBER := 2;
10:16:12 118  SUBSCR_CANC_REASON_INT_ONLY CONSTANT NUMBER := 3;
10:16:12 119  
10:16:12 120  GROUP_ACC_IP_RNG_ACTIVE CONSTANT NUMBER := 1;
10:16:12 121  GROUP_ACC_IP_RNG_INACTIVE CONSTANT NUMBER := 2;
10:16:12 122  
10:16:12 123  GROUP_ACC_EMAIL_DOMAIN_ACT CONSTANT NUMBER := 1;
10:16:12 124  GROUP_ACC_EMAIL_DOMAIN_INACT CONSTANT NUMBER := 0;
10:16:12 125  
10:16:12 126  END GLOBAL_STATUSES_V24;
10:16:12 127  .
10:16:12 SQL> /

Package created.

Elapsed: 00:00:00.11
10:16:12 SQL> 
10:16:12 SQL> 
10:16:12 SQL> 
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> -- DDL for package NOTIFICATION_STATUSES
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> 
10:16:12 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V24" AS
10:16:12   2  
10:16:12   3  ----
10:16:12   4  -- NOTIFICATION STATUSES
10:16:12   5  
10:16:12   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
10:16:12   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
10:16:12   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
10:16:12   9  
10:16:12  10  END NOTIFICATION_STATUSES_V24;
10:16:12  11  .
10:16:12 SQL> /

Package created.

Elapsed: 00:00:00.03
10:16:12 SQL> 
10:16:12 SQL> 
10:16:12 SQL> 
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> -- DDL for package PROCS_COMMON
10:16:12 SQL> --------------------------------------------------------------------------------
10:16:12 SQL> 
10:16:12 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V24" AS
10:16:12   2  
10:16:12   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
10:16:12   4  	in_duration IN VARCHAR2,
10:16:12   5  	in_start_date IN DATE
10:16:12   6  ) RETURN DATE;
10:16:12   7  
10:16:12   8  PROCEDURE ISO8601DURATION_TO_INTERVALS(
10:16:12   9  /*
10:16:12  10  Throws exceptions:
10:16:12  11  APP_EXCEPTION_CODES_V24.INTERNAL_ERROR
10:16:12  12  APP_EXCEPTION_CODES_V24.UNKNOWN_ERROR
10:16:12  13  */
10:16:12  14  	in_duration IN	VARCHAR2,
10:16:12  15  	out_years   OUT NUMBER,
10:16:12  16  	out_months  OUT NUMBER,
10:16:12  17  	out_days    OUT NUMBER
10:16:12  18  );
10:16:12  19  
10:16:12  20  FUNCTION NORMALIZE_DATE(
10:16:12  21   in_date IN DATE
10:16:12  22  ) RETURN DATE;
10:16:12  23  
10:16:12  24  FUNCTION GENERATE_EXCEPTION_MESSAGE(
10:16:12  25  	in_sproc_name	    IN VARCHAR2,
10:16:12  26  	in_error_message    IN VARCHAR2,
10:16:12  27  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
10:16:12  28  ) RETURN VARCHAR2;
10:16:12  29  
10:16:12  30  PROCEDURE THROW_EXCEPTION(
10:16:12  31  	in_exception_code   IN NUMBER,
10:16:12  32  	in_sproc_name	    IN VARCHAR2,
10:16:12  33  	in_error_message    IN VARCHAR2,
10:16:12  34  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
10:16:12  35  );
10:16:12  36  
10:16:12  37  FUNCTION ROUND_10_6_TO_10_2 (
10:16:12  38  	in_number NUMBER
10:16:12  39  ) RETURN NUMBER;
10:16:12  40  
10:16:12  41  END PROCS_COMMON_V24;
10:16:12  42  .
10:16:12 SQL> /

Package created.

Elapsed: 00:00:00.13
10:16:12 SQL> 
10:16:12 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V24" AS
10:16:12   2  
10:16:12   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
10:16:12   4  	in_duration IN VARCHAR2,
10:16:12   5  	in_start_date IN DATE
10:16:12   6  ) RETURN DATE AS
10:16:12   7  	var_end_date DATE;
10:16:12   8  	var_years NUMBER;
10:16:12   9  	var_months NUMBER;
10:16:12  10  	var_days NUMBER;
10:16:12  11  	var_ym_interval INTERVAL YEAR TO MONTH;
10:16:12  12  	var_ds_interval INTERVAL DAY(3) TO SECOND;
10:16:12  13  BEGIN
10:16:12  14  	PROCS_COMMON_V24.ISO8601DURATION_TO_INTERVALS(in_duration, var_years, var_months, var_days);
10:16:12  15  	var_ym_interval := var_years || '-' || var_months;
10:16:12  16  	var_ds_interval := var_days || ' 0:0:0';
10:16:12  17  
10:16:12  18  	var_end_date := in_start_date + var_ym_interval + var_ds_interval;
10:16:12  19  	RETURN var_end_date;
10:16:12  20  END ADD_ISO8601DURATION_TO_DATE;
10:16:12  21  
10:16:12  22  PROCEDURE ISO8601DURATION_TO_INTERVALS(
10:16:12  23  /*
10:16:12  24  Throws exceptions:
10:16:12  25  APP_EXCEPTION_CODES_V24.INTERNAL_ERROR
10:16:12  26  APP_EXCEPTION_CODES_V24.UNKNOWN_ERROR
10:16:12  27  */
10:16:12  28  	in_duration IN	VARCHAR2,
10:16:12  29  	out_years   OUT NUMBER,
10:16:12  30  	out_months  OUT NUMBER,
10:16:12  31  	out_days    OUT NUMBER
10:16:12  32  ) AS
10:16:12  33  SPROC_NAME	  CONSTANT VARCHAR2(28) := 'ISO8601DURATION_TO_INTERVALS';
10:16:12  34  -- VARIABLES
10:16:12  35  var_checking_status NUMBER;
10:16:12  36  temp_duration	  VARCHAR2(29);
10:16:12  37  var_is_t_founded	  NUMBER;
10:16:12  38  
10:16:12  39  var_date_duration VARCHAR2(29);
10:16:12  40  var_time_duration VARCHAR2(29);
10:16:12  41  
10:16:12  42  var_years   VARCHAR2(4);
10:16:12  43  var_monthes VARCHAR2(4);
10:16:12  44  var_days	  VARCHAR2(4);
10:16:12  45  var_hours   VARCHAR2(4);
10:16:12  46  var_minutes VARCHAR2(4);
10:16:12  47  var_seconds VARCHAR2(4);
10:16:12  48  
10:16:12  49  -- EXCEPTIONS
10:16:12  50  BAD_ISO_FORMAT EXCEPTION;
10:16:12  51  BEGIN
10:16:12  52  
10:16:12  53  	var_years   := '0';
10:16:12  54  	var_monthes := '0';
10:16:12  55  	var_days    := '0';
10:16:12  56  	var_hours   := '0';
10:16:12  57  	var_minutes := '0';
10:16:12  58  	var_seconds := '0';
10:16:12  59  
10:16:12  60  	SELECT
10:16:12  61  	  COUNT(*) into var_checking_status
10:16:12  62  	FROM
10:16:12  63  	  DUAL
10:16:12  64  	WHERE
10:16:12  65  	  REGEXP_LIKE(in_duration, '^P')
10:16:12  66  	  AND ROWNUM <= 1;
10:16:12  67  
10:16:12  68  	IF var_checking_status = 0 THEN
10:16:12  69  	  RAISE BAD_ISO_FORMAT;
10:16:12  70  	END IF;
10:16:12  71  
10:16:12  72  	SELECT
10:16:12  73  	  SUBSTR(in_duration, 2) into temp_duration
10:16:12  74  	FROM DUAL
10:16:12  75  	WHERE ROWNUM <= 1;
10:16:12  76  
10:16:12  77  	var_is_t_founded := INSTR(temp_duration, 'T');
10:16:12  78  
10:16:12  79  	IF var_is_t_founded > 1 OR var_is_t_founded = 0 THEN
10:16:12  80  	  -- RESOLVING DATE FROM ISO STRING
10:16:12  81  	  IF var_is_t_founded != 0 THEN
10:16:12  82  	    var_date_duration := SUBSTR(temp_duration, 1, var_is_t_founded - 1);
10:16:12  83  	  ELSE
10:16:12  84  	    var_date_duration := temp_duration;
10:16:12  85  	  END IF;
10:16:12  86  
10:16:12  87  	  SELECT
10:16:12  88  	    COUNT(*) into var_checking_status
10:16:12  89  	  FROM
10:16:12  90  	    DUAL
10:16:12  91  	  WHERE
10:16:12  92  	    REGEXP_LIKE(var_date_duration, '^(\d{1,3}Y){0,1}(\d{1,3}M){0,1}(\d{1,3}D){0,1}$')
10:16:12  93  	    AND ROWNUM <= 1;
10:16:12  94  
10:16:12  95  	  IF var_checking_status = 0 THEN
10:16:12  96  	    RAISE BAD_ISO_FORMAT;
10:16:12  97  	  END IF;
10:16:12  98  
10:16:12  99  	  IF INSTR(var_date_duration, 'Y') != 0 THEN
10:16:12 100  	    SELECT
10:16:12 101  	      REGEXP_SUBSTR(var_date_duration, '\d+Y') into var_years
10:16:12 102  	    FROM
10:16:12 103  	      DUAL;
10:16:12 104  	    var_years := SUBSTR(var_years, 1, LENGTH(var_years) - 1);
10:16:12 105  	  END IF;
10:16:12 106  
10:16:12 107  	  IF INSTR(var_date_duration, 'M') != 0 THEN
10:16:12 108  	    SELECT
10:16:12 109  	      REGEXP_SUBSTR(var_date_duration, '\d+M') into var_monthes
10:16:12 110  	    FROM
10:16:12 111  	      DUAL;
10:16:12 112  	    var_monthes := SUBSTR(var_monthes, 1, LENGTH(var_monthes) - 1);
10:16:12 113  	  END IF;
10:16:12 114  
10:16:12 115  	  IF INSTR(var_date_duration, 'D') != 0 THEN
10:16:12 116  	    SELECT
10:16:12 117  	      REGEXP_SUBSTR(var_date_duration, '\d+D') into var_days
10:16:12 118  	    FROM
10:16:12 119  	      DUAL;
10:16:12 120  	    var_days := SUBSTR(var_days, 1, LENGTH(var_days) - 1);
10:16:12 121  	  END IF;
10:16:12 122  	END IF;
10:16:12 123  
10:16:12 124  	IF (var_is_t_founded > 0) THEN
10:16:12 125  	  -- RESOLVING TIME FROM ISO STRING
10:16:12 126  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded + 1);
10:16:12 127  
10:16:12 128  	  SELECT
10:16:12 129  	    COUNT(*) into var_checking_status
10:16:12 130  	  FROM
10:16:12 131  	    DUAL
10:16:12 132  	  WHERE
10:16:12 133  	    REGEXP_LIKE(var_time_duration, '^(\d{1,3}H){0,1}(\d{1,3}M){0,1}(\d{1,3}S){0,1}$')
10:16:12 134  	    AND ROWNUM <= 1;
10:16:12 135  
10:16:12 136  	  IF var_checking_status = 0 THEN
10:16:12 137  	    RAISE BAD_ISO_FORMAT;
10:16:12 138  	  END IF;
10:16:12 139  
10:16:12 140  	  IF INSTR(var_time_duration, 'H') != 0 THEN
10:16:12 141  	    SELECT
10:16:12 142  	      REGEXP_SUBSTR(var_time_duration, '\d+H') into var_hours
10:16:12 143  	    FROM
10:16:12 144  	      DUAL;
10:16:12 145  	    var_hours := SUBSTR(var_hours, 1, LENGTH(var_hours) - 1);
10:16:12 146  	  END IF;
10:16:12 147  
10:16:12 148  	  IF INSTR(var_time_duration, 'M') != 0 THEN
10:16:12 149  	    SELECT
10:16:12 150  	      REGEXP_SUBSTR(var_time_duration, '\d+M') into var_minutes
10:16:12 151  	    FROM
10:16:12 152  	      DUAL;
10:16:12 153  	    var_minutes := SUBSTR(var_minutes, 1, LENGTH(var_minutes) - 1);
10:16:12 154  	  END IF;
10:16:12 155  
10:16:12 156  	  IF INSTR(var_time_duration, 'S') != 0 THEN
10:16:12 157  	    SELECT
10:16:12 158  	      REGEXP_SUBSTR(var_time_duration, '\d+S') into var_seconds
10:16:12 159  	    FROM
10:16:12 160  	      DUAL;
10:16:12 161  	    var_seconds := SUBSTR(var_seconds, 1, LENGTH(var_seconds) - 1);
10:16:12 162  	  END IF;
10:16:12 163  
10:16:12 164  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded);
10:16:12 165  	END IF;
10:16:12 166  
10:16:12 167  	out_years  := var_years;
10:16:12 168  	out_months := var_monthes;
10:16:12 169  	out_days   := var_days;
10:16:12 170  
10:16:12 171  EXCEPTION
10:16:12 172  WHEN BAD_ISO_FORMAT THEN
10:16:12 173  	PROCS_COMMON_V24.THROW_EXCEPTION(APP_EXCEPTION_CODES_V24.INTERNAL_ERROR,
10:16:12 174  	  SPROC_NAME, 'Bad date format');
10:16:12 175  WHEN OTHERS THEN
10:16:12 176  	PROCS_COMMON_V24.THROW_EXCEPTION(APP_EXCEPTION_CODES_V24.UNKNOWN_ERROR,
10:16:12 177  	  SPROC_NAME, 'Unknown error', SQLERRM);
10:16:12 178  END ISO8601DURATION_TO_INTERVALS;
10:16:12 179  
10:16:12 180  /******************************************************************************/
10:16:12 181  
10:16:12 182  FUNCTION NORMALIZE_DATE(
10:16:12 183   in_date IN DATE
10:16:12 184  ) RETURN DATE AS
10:16:12 185  -- VARIABLES
10:16:12 186  var_normalized_date DATE;
10:16:12 187  BEGIN
10:16:12 188  	var_normalized_date := TRUNC(in_date);
10:16:12 189  	RETURN var_normalized_date;
10:16:12 190  END NORMALIZE_DATE;
10:16:12 191  
10:16:12 192  /******************************************************************************/
10:16:12 193  
10:16:12 194  FUNCTION GENERATE_EXCEPTION_MESSAGE(
10:16:12 195  	in_sproc_name	    IN VARCHAR2,
10:16:12 196  	in_error_message    IN VARCHAR2,
10:16:12 197  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
10:16:12 198  ) RETURN VARCHAR2 AS
10:16:12 199  BEGIN
10:16:12 200  	IF in_error_stacktrace IS NOT NULL THEN
10:16:12 201  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || GLOBAL_CONSTANTS_V24.EXCEPTION_DELIMETER || in_error_stacktrace;
10:16:12 202  	END IF;
10:16:12 203  	RETURN
10:16:12 204  	  in_sproc_name || ': ' || in_error_message;
10:16:12 205  END GENERATE_EXCEPTION_MESSAGE;
10:16:12 206  
10:16:12 207  /******************************************************************************/
10:16:12 208  
10:16:12 209  PROCEDURE THROW_EXCEPTION(
10:16:12 210  	in_exception_code   IN NUMBER,
10:16:12 211  	in_sproc_name	    IN VARCHAR2,
10:16:12 212  	in_error_message    IN VARCHAR2,
10:16:12 213  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
10:16:12 214  ) AS
10:16:12 215  BEGIN
10:16:12 216  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
10:16:12 217  END;
10:16:12 218  
10:16:12 219  FUNCTION ROUND_10_6_TO_10_2 (
10:16:12 220  	in_number NUMBER
10:16:12 221  ) RETURN NUMBER AS
10:16:12 222  v_result NUMBER(10,2);
10:16:12 223  BEGIN
10:16:12 224  	v_result := in_number;
10:16:12 225  	return v_result;
10:16:12 226  END;
10:16:12 227  
10:16:12 228  END PROCS_COMMON_V24;
10:16:12 229  .
10:16:12 SQL> /

Package body created.

Elapsed: 00:00:00.24
10:16:13 SQL> 
10:16:13 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V24 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.03
10:16:13 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V24 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
10:16:13 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V24 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
10:16:13 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
10:16:13 SQL> spool off;
