12:44:12 SQL> @/dbbackups/ECST2/migrations/ops_owner/3-release-1.11.0-all/upgrade.sql
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> -- DDL for package NOTIFICATION_STATUSES
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V16" AS
12:44:12   2  
12:44:12   3  ----
12:44:12   4  -- NOTIFICATION STATUSES
12:44:12   5  
12:44:12   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
12:44:12   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
12:44:12   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
12:44:12   9  
12:44:12  10  END NOTIFICATION_STATUSES_V16;
12:44:12  11  .
12:44:12 SQL> /

Package created.

Elapsed: 00:00:00.02
12:44:12 SQL> 
12:44:12 SQL> 
12:44:12 SQL> 
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> -- DDL for package PROCS_COMMON
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V16" AS
12:44:12   2  
12:44:12   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
12:44:12   4  	in_sproc_name	    IN VARCHAR2,
12:44:12   5  	in_error_message    IN VARCHAR2,
12:44:12   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
12:44:12   7  ) RETURN VARCHAR2;
12:44:12   8  
12:44:12   9  PROCEDURE THROW_EXCEPTION(
12:44:12  10  	in_exception_code   IN NUMBER,
12:44:12  11  	in_sproc_name	    IN VARCHAR2,
12:44:12  12  	in_error_message    IN VARCHAR2,
12:44:12  13  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
12:44:12  14  );
12:44:12  15  
12:44:12  16  END PROCS_COMMON_V16;
12:44:12  17  .
12:44:12 SQL> /

Package created.

Elapsed: 00:00:00.02
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V16" AS
12:44:12   2  
12:44:12   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
12:44:12   4  	in_sproc_name	    IN VARCHAR2,
12:44:12   5  	in_error_message    IN VARCHAR2,
12:44:12   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
12:44:12   7  ) RETURN VARCHAR2 AS
12:44:12   8  BEGIN
12:44:12   9  	IF in_error_stacktrace IS NOT NULL THEN
12:44:12  10  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || chr(10) || in_error_stacktrace;
12:44:12  11  	END IF;
12:44:12  12  	RETURN
12:44:12  13  	  in_sproc_name || ': ' || in_error_message;
12:44:12  14  END GENERATE_EXCEPTION_MESSAGE;
12:44:12  15  
12:44:12  16  /******************************************************************************/
12:44:12  17  
12:44:12  18  PROCEDURE THROW_EXCEPTION(
12:44:12  19  	in_exception_code   IN NUMBER,
12:44:12  20  	in_sproc_name	    IN VARCHAR2,
12:44:12  21  	in_error_message    IN VARCHAR2,
12:44:12  22  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
12:44:12  23  ) AS
12:44:12  24  BEGIN
12:44:12  25  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
12:44:12  26  END;
12:44:12  27  
12:44:12  28  END PROCS_COMMON_V16;
12:44:12  29  .
12:44:12 SQL> /

Package body created.

Elapsed: 00:00:00.01
12:44:12 SQL> 
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> -- DDL for package PROCS_NOTIFICATION
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE "PROCS_NOTIFICATION_V16" AS
12:44:12   2  
12:44:12   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
12:44:12   4  /*
12:44:12   5  Throws exceptions:
12:44:12   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12   8  */
12:44:12   9  	in_notification_type_name IN VARCHAR2,
12:44:12  10  	out_notification_type_id  OUT NUMBER
12:44:12  11  );
12:44:12  12  
12:44:12  13  PROCEDURE ADD_NOTIFICATION (
12:44:12  14  /*
12:44:12  15  Throws exceptions:
12:44:12  16  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12  17  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12  18  */
12:44:12  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
12:44:12  20  	in_recipient_group_id	 IN NUMBER,
12:44:12  21  	in_notification_type_id  IN NUMBER,
12:44:12  22  	in_date_to_notify	 IN DATE,
12:44:12  23  	in_email_template_params IN CLOB
12:44:12  24  );
12:44:12  25  
12:44:12  26  PROCEDURE GET_PENDING_NOTIFICATIONS (
12:44:12  27  /*
12:44:12  28  Throws exceptions:
12:44:12  29  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12  30  */
12:44:12  31  	out_result_set OUT SYS_REFCURSOR
12:44:12  32  );
12:44:12  33  
12:44:12  34  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
12:44:12  35  /*
12:44:12  36  Throws exceptions:
12:44:12  37  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12  38  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12  39  */
12:44:12  40  	in_notification_id IN NUMBER
12:44:12  41  );
12:44:12  42  
12:44:12  43  PROCEDURE SET_NOTIFICATION_STATUS (
12:44:12  44  /*
12:44:12  45  Throws exceptions:
12:44:12  46  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12  47  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12  48  */
12:44:12  49  	in_notification_id	  IN NUMBER,
12:44:12  50  	in_notification_status_id IN NUMBER,
12:44:12  51  	in_error_message	  IN VARCHAR2
12:44:12  52  );
12:44:12  53  
12:44:12  54  PROCEDURE ADD_NOTIFICATION_FAILURE (
12:44:12  55  /*
12:44:12  56  Throws exceptions:
12:44:12  57  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12  58  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12  59  */
12:44:12  60  	in_notification_id IN NUMBER,
12:44:12  61  	in_error_message   IN VARCHAR2
12:44:12  62  );
12:44:12  63  
12:44:12  64  PROCEDURE LOCK_PENDING_NOTIFICATION (
12:44:12  65  /*
12:44:12  66  Result: 1 if notification locked
12:44:12  67  2 - else
12:44:12  68  */
12:44:12  69  	in_notification_id IN NUMBER,
12:44:12  70  	out_lock_status    OUT NUMBER
12:44:12  71  );
12:44:12  72  
12:44:12  73  PROCEDURE GET_NOTIFICATION_DATA (
12:44:12  74  	in_notification_id IN NUMBER,
12:44:12  75  	out_result_set	   OUT SYS_REFCURSOR
12:44:12  76  );
12:44:12  77  
12:44:12  78  END PROCS_NOTIFICATION_V16;
12:44:12  79  .
12:44:12 SQL> /

Package created.

Elapsed: 00:00:00.12
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_NOTIFICATION_V16" AS
12:44:12   2  
12:44:12   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
12:44:12   4  /*
12:44:12   5  Throws exceptions:
12:44:12   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12   8  */
12:44:12   9  	in_notification_type_name IN VARCHAR2,
12:44:12  10  	out_notification_type_id  OUT NUMBER
12:44:12  11  ) AS
12:44:12  12  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NOTIFICATION_TYPE_BY_NAME';
12:44:12  13  BEGIN
12:44:12  14  	SELECT
12:44:12  15  	  NOTIFICATION_TYPE.ID into out_notification_type_id
12:44:12  16  	FROM
12:44:12  17  	  NOTIFICATION_TYPE
12:44:12  18  	WHERE
12:44:12  19  	  NOTIFICATION_TYPE.VALUE = in_notification_type_name;
12:44:12  20  EXCEPTION
12:44:12  21  WHEN NO_DATA_FOUND THEN
12:44:12  22  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
12:44:12  23  	  SPROC_NAME, 'No such type');
12:44:12  24  WHEN OTHERS THEN
12:44:12  25  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:44:12  26  	  SPROC_NAME, 'Unknown error', SQLERRM);
12:44:12  27  END GET_NOTIFICATION_TYPE_BY_NAME;
12:44:12  28  
12:44:12  29  /******************************************************************/
12:44:12  30  
12:44:12  31  PROCEDURE ADD_NOTIFICATION (
12:44:12  32  /*
12:44:12  33  Throws exceptions:
12:44:12  34  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12  35  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12  36  */
12:44:12  37  	in_sender_account_id	 IN NUMBER DEFAULT 0,
12:44:12  38  	in_recipient_group_id	 IN NUMBER,
12:44:12  39  	in_notification_type_id  IN NUMBER,
12:44:12  40  	in_date_to_notify	 IN DATE,
12:44:12  41  	in_email_template_params IN CLOB
12:44:12  42  ) AS
12:44:12  43  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION';
12:44:12  44  -- VARIABLES
12:44:12  45  temp_type_count NUMBER;
12:44:12  46  var_create_date DATE := SYSDATE;
12:44:12  47  -- EXCEPTIONS
12:44:12  48  BAD_NOTIFICATION_TYPE_ID EXCEPTION;
12:44:12  49  CAN_NOT_CREATE_HISTORY   EXCEPTION;
12:44:12  50  EXCEPTION_MESSAGE        VARCHAR2(1024);
12:44:12  51  BEGIN
12:44:12  52  
12:44:12  53  	SELECT
12:44:12  54  	  COUNT(*) into temp_type_count
12:44:12  55  	FROM
12:44:12  56  	  NOTIFICATION_TYPE
12:44:12  57  	WHERE
12:44:12  58  	  NOTIFICATION_TYPE.ID = in_notification_type_id;
12:44:12  59  
12:44:12  60  	IF temp_type_count = 0 THEN
12:44:12  61  	  RAISE BAD_NOTIFICATION_TYPE_ID;
12:44:12  62  	END IF;
12:44:12  63  
12:44:12  64  	INSERT INTO NOTIFICATION (
12:44:12  65  	  ID,
12:44:12  66  	  ACCOUNT_ID,
12:44:12  67  	  GROUP_ID,
12:44:12  68  	  NOTIFICATION_TYPE_ID,
12:44:12  69  	  NOTIFICATION_STATUS_ID,
12:44:12  70  	  EMAIL_TEMPLATE_PARAMS,
12:44:12  71  	  UPDATE_DATE,
12:44:12  72  	  CREATE_DATE,
12:44:12  73  	  DATE_TO_NOTIFY
12:44:12  74  	) VALUES (
12:44:12  75  	  NOT_ID_SEQ.nextVal,
12:44:12  76  	  in_sender_account_id,
12:44:12  77  	  in_recipient_group_id,
12:44:12  78  	  in_notification_type_id,
12:44:12  79  	  NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING,
12:44:12  80  	  in_email_template_params,
12:44:12  81  	  var_create_date,
12:44:12  82  	  var_create_date,
12:44:12  83  	  in_date_to_notify
12:44:12  84  	);
12:44:12  85  
12:44:12  86  	--BEGIN
12:44:12  87  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIFICATION_HISTORY (
12:44:12  88  	--    in_account_id		  => 0, -- ACCOUNT_ID. Can we delete it?
12:44:12  89  	--    in_group_id		  => in_recipient_group_id,
12:44:12  90  	--    notification_reason_type_id => in_notification_type_id,
12:44:12  91  	--    notification_status_id	  => NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING,
12:44:12  92  	--    email_template_params	  => in_email_template_params,
12:44:12  93  	--    in_create_date		  => var_create_date
12:44:12  94  	--  );
12:44:12  95  	--  EXCEPTION
12:44:12  96  	--    WHEN OTHERS THEN
12:44:12  97  	--	EXCEPTION_MESSAGE := SQLERRM;
12:44:12  98  	--	RAISE CAN_NOT_CREATE_HISTORY;
12:44:12  99  	--END;
12:44:12 100  
12:44:12 101  EXCEPTION
12:44:12 102  WHEN BAD_NOTIFICATION_TYPE_ID THEN
12:44:12 103  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
12:44:12 104  	  SPROC_NAME, 'No such notification status');
12:44:12 105  WHEN CAN_NOT_CREATE_HISTORY THEN
12:44:12 106  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
12:44:12 107  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
12:44:12 108  WHEN OTHERS THEN
12:44:12 109  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:44:12 110  	  SPROC_NAME, 'Unknown error', SQLERRM);
12:44:12 111  END ADD_NOTIFICATION;
12:44:12 112  
12:44:12 113  /******************************************************************************/
12:44:12 114  
12:44:12 115  PROCEDURE GET_PENDING_NOTIFICATIONS (
12:44:12 116  /*
12:44:12 117  Throws exceptions:
12:44:12 118  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12 119  */
12:44:12 120  	out_result_set OUT SYS_REFCURSOR
12:44:12 121  ) AS
12:44:12 122  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_PENDING_NOTIFICATIONS';
12:44:12 123  -- CONSTANTS
12:44:12 124  C_NOTIFICATION_COUNT_LIMIT CONSTANT NUMBER := 500;
12:44:12 125  BEGIN
12:44:12 126  	OPEN out_result_set FOR
12:44:12 127  SELECT * FROM
12:44:12 128  (
12:44:12 129  	SELECT
12:44:12 130  	  NOTIFICATION.ID
12:44:12 131  	FROM
12:44:12 132  	  NOTIFICATION
12:44:12 133  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
12:44:12 134  	WHERE
12:44:12 135  	  ROWNUM <= C_NOTIFICATION_COUNT_LIMIT*10
12:44:12 136  	  AND NOT EXISTS (
12:44:12 137  	    SELECT NULL
12:44:12 138  	    FROM OPS_OWNER.PROCESS_RETRY_THROTTLE
12:44:12 139  	    WHERE GENERIC_ID = NOTIFICATION.ID AND PROCESS_NAME = SPROC_NAME
12:44:12 140  	  )
12:44:12 141  	  AND (
12:44:12 142  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING
12:44:12 143  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_FAILED
12:44:12 144  	  )
12:44:12 145  	  AND (
12:44:12 146  	    NOTIFICATION.DATE_TO_NOTIFY IS NULL OR SYSDATE > NOTIFICATION.DATE_TO_NOTIFY
12:44:12 147  	  )ORDER BY dbms_random.value
12:44:12 148  ) WHERE
12:44:12 149  	ROWNUM <= C_NOTIFICATION_COUNT_LIMIT;
12:44:12 150  
12:44:12 151  EXCEPTION
12:44:12 152  WHEN OTHERS THEN
12:44:12 153  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:44:12 154  	  SPROC_NAME, 'Unknown error', SQLERRM);
12:44:12 155  END GET_PENDING_NOTIFICATIONS;
12:44:12 156  
12:44:12 157  /******************************************************************************/
12:44:12 158  
12:44:12 159  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
12:44:12 160  /*
12:44:12 161  Throws exceptions:
12:44:12 162  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12 163  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12 164  */
12:44:12 165  	in_notification_id IN NUMBER
12:44:12 166  ) AS
12:44:12 167  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_NOTIFICATION_TIMESTAMP';
12:44:12 168  -- VARIABLES
12:44:12 169  temp_notification_id NUMBER;
12:44:12 170  -- EXCEPTIONS
12:44:12 171  BAD_NOTIFICATION_ID EXCEPTION;
12:44:12 172  BEGIN
12:44:12 173  
12:44:12 174  	BEGIN
12:44:12 175  	  SELECT
12:44:12 176  	    NOTIFICATION.ID into temp_notification_id
12:44:12 177  	  FROM
12:44:12 178  	    NOTIFICATION
12:44:12 179  	  WHERE
12:44:12 180  	    NOTIFICATION.ID = in_notification_id;
12:44:12 181  	  EXCEPTION
12:44:12 182  	    WHEN NO_DATA_FOUND THEN
12:44:12 183  	      RAISE BAD_NOTIFICATION_ID;
12:44:12 184  	END;
12:44:12 185  
12:44:12 186  	UPDATE
12:44:12 187  	  NOTIFICATION
12:44:12 188  	SET
12:44:12 189  	  NOTIFICATION.UPDATE_DATE = sysdate
12:44:12 190  	WHERE
12:44:12 191  	  NOTIFICATION.ID = in_notification_id;
12:44:12 192  
12:44:12 193  EXCEPTION
12:44:12 194  WHEN BAD_NOTIFICATION_ID THEN
12:44:12 195  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
12:44:12 196  	  SPROC_NAME, 'No such notification');
12:44:12 197  WHEN OTHERS THEN
12:44:12 198  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:44:12 199  	  SPROC_NAME, 'Unknown error', SQLERRM);
12:44:12 200  END UPDATE_NOTIFICATION_TIMESTAMP;
12:44:12 201  
12:44:12 202  /******************************************************************************/
12:44:12 203  
12:44:12 204  PROCEDURE SET_NOTIFICATION_STATUS (
12:44:12 205  /*
12:44:12 206  Throws exceptions:
12:44:12 207  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12 208  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12 209  */
12:44:12 210  	in_notification_id	  IN NUMBER,
12:44:12 211  	in_notification_status_id IN NUMBER,
12:44:12 212  	in_error_message	  IN VARCHAR2
12:44:12 213  ) AS
12:44:12 214  SPROC_NAME CONSTANT VARCHAR2(32) := 'SET_NOTIFICATION_STATUS';
12:44:12 215  -- VARIABLES
12:44:12 216  var_group_id		NUMBER;
12:44:12 217  var_account_id		NUMBER;
12:44:12 218  var_notification_type_id	NUMBER;
12:44:12 219  var_email_template_params CLOB;
12:44:12 220  var_create_history_date	DATE := SYSDATE;
12:44:12 221  var_notification_status_id   NUMBER;
12:44:12 222  var_date_to_notify	DATE;
12:44:12 223  max_fails   NUMBER := 5;
12:44:12 224  num_fails   NUMBER;
12:44:12 225  -- EXCEPTIONS
12:44:12 226  BAD_NOTIFICATION_ID	 EXCEPTION;
12:44:12 227  BAD_NOTIFICATION_STATUS_ID EXCEPTION;
12:44:12 228  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
12:44:12 229  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
12:44:12 230  BEGIN
12:44:12 231  
12:44:12 232  	IF in_notification_status_id != NOTIFICATION_STATUSES_V16.NOTIFICATION_SENT
12:44:12 233  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING
12:44:12 234  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V16.NOTIFICATION_FAILED THEN
12:44:12 235  	  RAISE BAD_NOTIFICATION_STATUS_ID;
12:44:12 236  	END IF;
12:44:12 237  
12:44:12 238  	BEGIN
12:44:12 239  	  SELECT
12:44:12 240  	    NOTIFICATION.GROUP_ID,
12:44:12 241  	    NOTIFICATION.ACCOUNT_ID,
12:44:12 242  	    NOTIFICATION.NOTIFICATION_TYPE_ID,
12:44:12 243  	    NOTIFICATION.NOTIFICATION_STATUS_ID,
12:44:12 244  	    NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
12:44:12 245  	    NOTIFICATION.DATE_TO_NOTIFY
12:44:12 246  	    into
12:44:12 247  	    var_group_id,
12:44:12 248  	    var_account_id,
12:44:12 249  	    var_notification_type_id,
12:44:12 250  	    var_notification_status_id,
12:44:12 251  	    var_email_template_params,
12:44:12 252  	    var_date_to_notify
12:44:12 253  	  FROM
12:44:12 254  	    NOTIFICATION
12:44:12 255  	  WHERE
12:44:12 256  	    NOTIFICATION.ID = in_notification_id;
12:44:12 257  	  EXCEPTION
12:44:12 258  	    WHEN NO_DATA_FOUND THEN
12:44:12 259  	      RAISE BAD_NOTIFICATION_ID;
12:44:12 260  	END;
12:44:12 261  
12:44:12 262  	BEGIN
12:44:12 263  	  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIFICATION_HISTORY (
12:44:12 264  	    in_notification_id		=> in_notification_id,
12:44:12 265  	    in_account_id		=> var_account_id,
12:44:12 266  	    in_group_id 		=> var_group_id,
12:44:12 267  	    notification_reason_type_id => var_notification_type_id,
12:44:12 268  	    notification_status_id	=> var_notification_status_id,
12:44:12 269  	    email_template_params	=> var_email_template_params,
12:44:12 270  	    in_create_date		=> var_create_history_date,
12:44:12 271  	    in_date_to_notify		=> var_date_to_notify
12:44:12 272  	  );
12:44:12 273  	  EXCEPTION
12:44:12 274  	    WHEN OTHERS THEN
12:44:12 275  	      EXCEPTION_MESSAGE := SQLERRM;
12:44:12 276  	      RAISE CAN_NOT_CREATE_HISTORY;
12:44:12 277  	END;
12:44:12 278  
12:44:12 279  	UPDATE
12:44:12 280  	  NOTIFICATION
12:44:12 281  	SET
12:44:12 282  	  NOTIFICATION.NOTIFICATION_STATUS_ID = in_notification_status_id,
12:44:12 283  	  NOTIFICATION.UPDATE_DATE = sysdate
12:44:12 284  	WHERE
12:44:12 285  	  NOTIFICATION.ID = in_notification_id;
12:44:12 286  
12:44:12 287  	IF ( in_error_message IS NOT NULL ) THEN
12:44:12 288  	  ADD_NOTIFICATION_FAILURE(
12:44:12 289  	    in_notification_id => in_notification_id,
12:44:12 290  	    in_error_message => in_error_message
12:44:12 291  	  );
12:44:12 292  	END IF;
12:44:12 293  
12:44:12 294  	SELECT COUNT(1) INTO num_fails
12:44:12 295  	FROM NOTIFICATION_FAILURE
12:44:12 296  	WHERE NOTIFICATION_ID = in_notification_id;
12:44:12 297  
12:44:12 298  	IF (in_notification_status_id = NOTIFICATION_STATUSES_V16.NOTIFICATION_SENT OR num_fails >= max_fails) then
12:44:12 299  	  FOR REC IN (
12:44:12 300  	      SELECT ID, NOTIFICATION_ID, ERROR_MESSAGE, CREATE_DATE
12:44:12 301  	      FROM NOTIFICATION_FAILURE
12:44:12 302  	      WHERE NOTIFICATION_ID = in_notification_id
12:44:12 303  	      ) LOOP
12:44:12 304  	      BEGIN
12:44:12 305  		OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIF_FAILURE_HISTORY(
12:44:12 306  		  in_error_message	   => REC.ERROR_MESSAGE,
12:44:12 307  		  in_notification_id	   => REC.NOTIFICATION_ID,
12:44:12 308  		  in_create_date	   => REC.CREATE_DATE
12:44:12 309  		);
12:44:12 310  		EXCEPTION
12:44:12 311  		  WHEN OTHERS THEN
12:44:12 312  		    EXCEPTION_MESSAGE := SQLERRM;
12:44:12 313  		    RAISE CAN_NOT_CREATE_HISTORY;
12:44:12 314  	      END;
12:44:12 315  	  END LOOP;
12:44:12 316  	  DELETE FROM NOTIFICATION_FAILURE WHERE NOTIFICATION_ID = in_notification_id;
12:44:12 317  
12:44:12 318  	  BEGIN
12:44:12 319  	    SELECT
12:44:12 320  	      NOTIFICATION.GROUP_ID,
12:44:12 321  	      NOTIFICATION.ACCOUNT_ID,
12:44:12 322  	      NOTIFICATION.NOTIFICATION_TYPE_ID,
12:44:12 323  	      NOTIFICATION.NOTIFICATION_STATUS_ID,
12:44:12 324  	      NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
12:44:12 325  	      NOTIFICATION.DATE_TO_NOTIFY
12:44:12 326  	      into
12:44:12 327  	      var_group_id,
12:44:12 328  	      var_account_id,
12:44:12 329  	      var_notification_type_id,
12:44:12 330  	      var_notification_status_id,
12:44:12 331  	      var_email_template_params,
12:44:12 332  	      var_date_to_notify
12:44:12 333  	    FROM
12:44:12 334  	      NOTIFICATION
12:44:12 335  	    WHERE
12:44:12 336  	      NOTIFICATION.ID = in_notification_id;
12:44:12 337  	    EXCEPTION
12:44:12 338  	      WHEN NO_DATA_FOUND THEN
12:44:12 339  		RAISE BAD_NOTIFICATION_ID;
12:44:12 340  	  END;
12:44:12 341  
12:44:12 342  	  BEGIN
12:44:12 343  	    OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIFICATION_HISTORY (
12:44:12 344  	      in_notification_id	  => in_notification_id,
12:44:12 345  	      in_account_id		  => var_account_id,
12:44:12 346  	      in_group_id		  => var_group_id,
12:44:12 347  	      notification_reason_type_id => var_notification_type_id,
12:44:12 348  	      notification_status_id	  => var_notification_status_id,
12:44:12 349  	      email_template_params	  => var_email_template_params,
12:44:12 350  	      in_create_date		  => var_create_history_date,
12:44:12 351  	      in_date_to_notify 	  => var_date_to_notify
12:44:12 352  	    );
12:44:12 353  	    EXCEPTION
12:44:12 354  	      WHEN OTHERS THEN
12:44:12 355  		EXCEPTION_MESSAGE := SQLERRM;
12:44:12 356  		RAISE CAN_NOT_CREATE_HISTORY;
12:44:12 357  	  END;
12:44:12 358  
12:44:12 359  	  DELETE FROM NOTIFICATION WHERE ID = in_notification_id;
12:44:12 360  
12:44:12 361  	END IF;
12:44:12 362  	commit;
12:44:12 363  
12:44:12 364  EXCEPTION
12:44:12 365  WHEN BAD_NOTIFICATION_STATUS_ID THEN
12:44:12 366  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
12:44:12 367  	  SPROC_NAME, 'Bad notification status');
12:44:12 368  WHEN BAD_NOTIFICATION_ID THEN
12:44:12 369  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
12:44:12 370  	  SPROC_NAME, 'No such notification');
12:44:12 371  WHEN CAN_NOT_CREATE_HISTORY THEN
12:44:12 372  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
12:44:12 373  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
12:44:12 374  WHEN OTHERS THEN
12:44:12 375  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:44:12 376  	  SPROC_NAME, 'Unknown error', SQLERRM);
12:44:12 377  END SET_NOTIFICATION_STATUS;
12:44:12 378  
12:44:12 379  /******************************************************************************/
12:44:12 380  
12:44:12 381  PROCEDURE ADD_NOTIFICATION_FAILURE (
12:44:12 382  /*
12:44:12 383  Throws exceptions:
12:44:12 384  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12 385  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12 386  */
12:44:12 387  	in_notification_id IN NUMBER,
12:44:12 388  	in_error_message   IN VARCHAR2
12:44:12 389  ) AS
12:44:12 390  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION_FAILURE';
12:44:12 391  -- VARIABLES
12:44:12 392  temp_notification_id NUMBER;
12:44:12 393  var_create_date	   DATE := SYSDATE;
12:44:12 394  -- EXCEPTIONS
12:44:12 395  BAD_NOTIFICATION_ID	 EXCEPTION;
12:44:12 396  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
12:44:12 397  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
12:44:12 398  BEGIN
12:44:12 399  
12:44:12 400  	BEGIN
12:44:12 401  	  SELECT
12:44:12 402  	    NOTIFICATION.ID into temp_notification_id
12:44:12 403  	  FROM
12:44:12 404  	    NOTIFICATION
12:44:12 405  	  WHERE
12:44:12 406  	    NOTIFICATION.ID = in_notification_id;
12:44:12 407  	  EXCEPTION
12:44:12 408  	    WHEN NO_DATA_FOUND THEN
12:44:12 409  	      RAISE BAD_NOTIFICATION_ID;
12:44:12 410  	END;
12:44:12 411  
12:44:12 412  	INSERT INTO NOTIFICATION_FAILURE (
12:44:12 413  	  ID,
12:44:12 414  	  NOTIFICATION_ID,
12:44:12 415  	  ERROR_MESSAGE,
12:44:12 416  	  CREATE_DATE
12:44:12 417  	) VALUES (
12:44:12 418  	  NOTF_ID_SEQ.nextVal,
12:44:12 419  	  in_notification_id,
12:44:12 420  	  in_error_message,
12:44:12 421  	  sysdate
12:44:12 422  	);
12:44:12 423  
12:44:12 424  	--BEGIN
12:44:12 425  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIF_FAILURE_HISTORY(
12:44:12 426  	--    in_error_message	       => in_error_message,
12:44:12 427  	--    in_notification_queue_id => in_notification_id,
12:44:12 428  	--    in_create_date	       => var_create_date
12:44:12 429  	--  );
12:44:12 430  	--  EXCEPTION
12:44:12 431  	--    WHEN OTHERS THEN
12:44:12 432  	--	EXCEPTION_MESSAGE := SQLERRM;
12:44:12 433  	--	RAISE CAN_NOT_CREATE_HISTORY;
12:44:12 434  	--END;
12:44:12 435  
12:44:12 436  EXCEPTION
12:44:12 437  WHEN BAD_NOTIFICATION_ID THEN
12:44:12 438  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
12:44:12 439  	  SPROC_NAME, 'No such notification');
12:44:12 440  WHEN CAN_NOT_CREATE_HISTORY THEN
12:44:12 441  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
12:44:12 442  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
12:44:12 443  WHEN OTHERS THEN
12:44:12 444  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:44:12 445  	  SPROC_NAME, 'Unknown error', SQLERRM);
12:44:12 446  END ADD_NOTIFICATION_FAILURE;
12:44:12 447  
12:44:12 448  /******************************************************************************/
12:44:12 449  
12:44:12 450  PROCEDURE LOCK_PENDING_NOTIFICATION (
12:44:12 451  /*
12:44:12 452  Result: GLOBAL_STATUSES.TRUE if notification locked
12:44:12 453  GLOBA_STATUSES.FALSE - else
12:44:12 454  */
12:44:12 455  	in_notification_id IN NUMBER,
12:44:12 456  	out_lock_status    OUT NUMBER
12:44:12 457  ) AS
12:44:12 458  SPROC_NAME CONSTANT VARCHAR2(25) := 'LOCK_PENDING_NOTIFICATION';
12:44:12 459  -- VARIABLE
12:44:12 460  temp_notification_id NUMBER;
12:44:12 461  BEGIN
12:44:12 462  	SELECT
12:44:12 463  	  NOTIFICATION.ID into temp_notification_id
12:44:12 464  	FROM
12:44:12 465  	  NOTIFICATION
12:44:12 466  	WHERE
12:44:12 467  	  NOTIFICATION.ID = in_notification_id
12:44:12 468  	  AND (
12:44:12 469  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING
12:44:12 470  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_FAILED
12:44:12 471  	  )
12:44:12 472  	FOR UPDATE;
12:44:12 473  
12:44:12 474  	out_lock_status := 1;
12:44:12 475  
12:44:12 476  EXCEPTION
12:44:12 477  WHEN NO_DATA_FOUND THEN
12:44:12 478  	out_lock_status := 0;
12:44:12 479  WHEN OTHERS THEN
12:44:12 480  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:44:12 481  	  SPROC_NAME, 'Unknown error', SQLERRM);
12:44:12 482  END LOCK_PENDING_NOTIFICATION;
12:44:12 483  
12:44:12 484  /******************************************************************************/
12:44:12 485  
12:44:12 486  PROCEDURE GET_NOTIFICATION_DATA (
12:44:12 487  	in_notification_id IN NUMBER,
12:44:12 488  	out_result_set	   OUT SYS_REFCURSOR
12:44:12 489  ) AS
12:44:12 490  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_NOTIFICATION_DATA';
12:44:12 491  BEGIN
12:44:12 492  	OPEN out_result_set FOR
12:44:12 493  	SELECT
12:44:12 494  	  NOTIFICATION.ID,
12:44:12 495  	  NOTIFICATION.GROUP_ID,
12:44:12 496  	  NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
12:44:12 497  	  NOTIFICATION.NOTIFICATION_STATUS_ID,
12:44:12 498  	  NOTIFICATION.CREATE_DATE,
12:44:12 499  	  NOTIFICATION.UPDATE_DATE,
12:44:12 500  	  NOTIFICATION.NOTIFICATION_TYPE_ID,
12:44:12 501  	  NOTIFICATION_TYPE.VALUE as "TYPE_VALUE",
12:44:12 502  	  NOTIFICATION_TYPE.TEMPLATE_URL
12:44:12 503  	FROM
12:44:12 504  	  NOTIFICATION
12:44:12 505  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
12:44:12 506  	WHERE
12:44:12 507  	  NOTIFICATION.ID = in_notification_id;
12:44:12 508  
12:44:12 509  EXCEPTION
12:44:12 510  WHEN OTHERS THEN
12:44:12 511  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:44:12 512  	  SPROC_NAME, 'Unknown error', SQLERRM);
12:44:12 513  END GET_NOTIFICATION_DATA;
12:44:12 514  
12:44:12 515  END PROCS_NOTIFICATION_V16;
12:44:12 516  .
12:44:12 SQL> /

Package body created.

Elapsed: 00:00:00.06
12:44:12 SQL> 
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> -- DDL for package PROCS_PROCESS_RETRY_THROTTLE
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE "PROCS_PROCESS_RETRY_V16" AS
12:44:12   2  
12:44:12   3  PROCEDURE LOG_RETRY(
12:44:12   4  	  in_process_name IN VARCHAR2,
12:44:12   5  	  in_generic_id   IN NUMBER,
12:44:12   6  	  in_date	  IN VARCHAR2,
12:44:12   7  	  out_success	   OUT NUMBER
12:44:12   8  );
12:44:12   9  
12:44:12  10  PROCEDURE DELETE_RETRY(
12:44:12  11  	  in_process_name IN VARCHAR2,
12:44:12  12  	  in_remove_minutes  IN NUMBER
12:44:12  13  );
12:44:12  14  
12:44:12  15  PROCEDURE GET_SYSDATE (
12:44:12  16  	  out_date OUT VARCHAR2
12:44:12  17  );
12:44:12  18  
12:44:12  19  END PROCS_PROCESS_RETRY_V16;
12:44:12  20  .
12:44:12 SQL> /

Package created.

Elapsed: 00:00:00.03
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_PROCESS_RETRY_V16" AS
12:44:12   2  
12:44:12   3  PROCEDURE LOG_RETRY(
12:44:12   4  	  in_process_name IN VARCHAR2,
12:44:12   5  	  in_generic_id   IN NUMBER,
12:44:12   6  	  in_date	  IN VARCHAR2,
12:44:12   7  	  out_success	   OUT NUMBER
12:44:12   8  ) AS
12:44:12   9  SPROC_NAME CONSTANT VARCHAR2(32) := 'PROCS_PROCESS_RETRY_V16';
12:44:12  10  BEGIN
12:44:12  11  
12:44:12  12  	out_success := 1;
12:44:12  13  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
12:44:12  14  	VALUES (in_process_name, in_generic_id, 1, to_date(in_date, 'DD-Mon-YYYY HH24:MI:SS'), sysdate);
12:44:12  15  	commit;
12:44:12  16  EXCEPTION
12:44:12  17  WHEN DUP_VAL_ON_INDEX THEN
12:44:12  18  	rollback;
12:44:12  19  	out_success := 0;
12:44:12  20  WHEN OTHERS THEN
12:44:12  21  	rollback;
12:44:12  22  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:44:12  23  	  SPROC_NAME, 'Unknown error', SQLERRM);
12:44:12  24  
12:44:12  25  END;
12:44:12  26  
12:44:12  27  PROCEDURE DELETE_RETRY(
12:44:12  28  	  in_process_name IN VARCHAR2,
12:44:12  29  	  in_remove_minutes  IN NUMBER
12:44:12  30  ) AS
12:44:12  31  BEGIN
12:44:12  32  
12:44:12  33  delete from PROCESS_RETRY_THROTTLE
12:44:12  34  where
12:44:12  35  	process_name = in_process_name and
12:44:12  36  	create_date <= sysdate-in_remove_minutes/1440;
12:44:12  37  commit;
12:44:12  38  END;
12:44:12  39  
12:44:12  40  PROCEDURE GET_SYSDATE (
12:44:12  41  	out_date  OUT VARCHAR2
12:44:12  42  ) AS
12:44:12  43  BEGIN
12:44:12  44  	SELECT to_char(SYSDATE, 'DD-Mon-YYYY HH24:MI:SS') into out_date from dual;
12:44:12  45  END;
12:44:12  46  
12:44:12  47  END PROCS_PROCESS_RETRY_V16;
12:44:12  48  .
12:44:12 SQL> /

Package body created.

Elapsed: 00:00:00.03
12:44:12 SQL> 
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> -- DDL for package PROCS_SYSTEM
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE "PROCS_SYSTEM_V16" AS
12:44:12   2  
12:44:12   3  PROCEDURE INCREMENT_VERSION;
12:44:12   4  
12:44:12   5  PROCEDURE CHECK_VERSION(
12:44:12   6  	  in_vers    IN NUMBER,
12:44:12   7  	  out_result OUT NUMBER
12:44:12   8  );
12:44:12   9  
12:44:12  10  END PROCS_SYSTEM_V16;
12:44:12  11  .
12:44:12 SQL> /

Package created.

Elapsed: 00:00:00.02
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SYSTEM_V16" AS
12:44:12   2  
12:44:12   3  PROCEDURE INCREMENT_VERSION
12:44:12   4  /*
12:44:12   5  Throws exceptions:
12:44:12   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12   7  */
12:44:12   8  AS
12:44:12   9  BEGIN
12:44:12  10  
12:44:12  11  	UPDATE SYS_VERSION SET version=version+1;
12:44:12  12  
12:44:12  13  EXCEPTION
12:44:12  14  WHEN OTHERS THEN
12:44:12  15  	RAISE_APPLICATION_ERROR(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
12:44:12  16  	  'Unknown error');
12:44:12  17  END INCREMENT_VERSION;
12:44:12  18  
12:44:12  19  /*************************************************************/
12:44:12  20  
12:44:12  21  PROCEDURE CHECK_VERSION(
12:44:12  22  	  in_vers    IN NUMBER,
12:44:12  23  	  out_result OUT NUMBER
12:44:12  24  ) AS
12:44:12  25  	current_version NUMBER;
12:44:12  26  BEGIN
12:44:12  27  	SELECT version INTO current_version FROM SYS_VERSION;
12:44:12  28  	IF(current_version != in_vers) THEN
12:44:12  29  	  out_result := 1;
12:44:12  30  	ELSE
12:44:12  31  	  out_result := 0;
12:44:12  32  	END IF;
12:44:12  33  	EXCEPTION
12:44:12  34  	      WHEN OTHERS THEN
12:44:12  35  	      NULL;
12:44:12  36  END CHECK_VERSION;
12:44:12  37  
12:44:12  38  END PROCS_SYSTEM_V16;
12:44:12  39  .
12:44:12 SQL> /

Package body created.

Elapsed: 00:00:00.02
12:44:12 SQL> 
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> -- DDL for package PUBLIC_PROCS_CLIENT
12:44:12 SQL> --------------------------------------------------------------------------------
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_CLIENT_V16" AS
12:44:12   2  
12:44:12   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
12:44:12   4  /*
12:44:12   5  Throws exceptions:
12:44:12   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12   8  */
12:44:12   9  	in_notification_type_name IN VARCHAR2,
12:44:12  10  	out_notification_type_id  OUT NUMBER
12:44:12  11  );
12:44:12  12  
12:44:12  13  PROCEDURE ADD_NOTIFICATION (
12:44:12  14  /*
12:44:12  15  Throws exceptions:
12:44:12  16  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12  17  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12  18  */
12:44:12  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
12:44:12  20  	in_recipient_group_id	 IN NUMBER,
12:44:12  21  	in_notification_type_id  IN NUMBER,
12:44:12  22  	in_date_to_notify	 IN DATE,
12:44:12  23  	in_email_template_params IN CLOB
12:44:12  24  );
12:44:12  25  
12:44:12  26  END PUBLIC_PROCS_CLIENT_V16;
12:44:12  27  .
12:44:12 SQL> /

Package created.

Elapsed: 00:00:00.01
12:44:12 SQL> 
12:44:12 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_CLIENT_V16" AS
12:44:12   2  
12:44:12   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
12:44:12   4  /*
12:44:12   5  Throws exceptions:
12:44:12   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12   8  */
12:44:12   9  	in_notification_type_name IN VARCHAR2,
12:44:12  10  	out_notification_type_id  OUT NUMBER
12:44:12  11  ) AS
12:44:12  12  BEGIN
12:44:12  13  	PROCS_NOTIFICATION_V16.GET_NOTIFICATION_TYPE_BY_NAME (
12:44:12  14  	  in_notification_type_name,
12:44:12  15  	  out_notification_type_id
12:44:12  16  	);
12:44:12  17  END;
12:44:12  18  
12:44:12  19  /*****************************************************************/
12:44:12  20  
12:44:12  21  PROCEDURE ADD_NOTIFICATION (
12:44:12  22  /*
12:44:12  23  Throws exceptions:
12:44:12  24  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
12:44:12  25  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
12:44:12  26  */
12:44:12  27  	in_sender_account_id	 IN NUMBER DEFAULT 0,
12:44:12  28  	in_recipient_group_id	 IN NUMBER,
12:44:12  29  	in_notification_type_id  IN NUMBER,
12:44:12  30  	in_date_to_notify	 IN DATE,
12:44:12  31  	in_email_template_params IN CLOB
12:44:12  32  ) AS
12:44:12  33  BEGIN
12:44:12  34  	PROCS_NOTIFICATION_V16.ADD_NOTIFICATION (
12:44:12  35  	  in_sender_account_id,
12:44:12  36  	  in_recipient_group_id,
12:44:12  37  	  in_notification_type_id,
12:44:12  38  	  in_date_to_notify,
12:44:12  39  	  in_email_template_params
12:44:12  40  	);
12:44:12  41  END;
12:44:12  42  
12:44:12  43  END PUBLIC_PROCS_CLIENT_V16;
12:44:12  44  .
12:44:12 SQL> /

Package body created.

Elapsed: 00:00:00.02
12:44:12 SQL> 
12:44:12 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V16 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V16 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V16 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:12 SQL> 
12:44:12 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V16 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V16 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V16 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> 
12:44:12 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> 
12:44:12 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:12 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:12 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:12 SQL> 
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_owner;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:12 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.02
12:44:13 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_poller_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:13 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> 
12:44:13 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.04
12:44:13 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:13 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> 
12:44:13 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:13 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> 
12:44:13 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
12:44:13 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> 
12:44:13 SQL> grant select, insert, update, delete ON OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> grant select ON OPS_OWNER.NOTTID_SEQ to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
12:44:13 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
12:44:13 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECST2@rac01.stg.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: nytd_oracledba@nytimes.com
Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.stg.ewr1.nytimes.com
        SID: ECST2
        Schema: ops_owner
        Migration: 3-release-1.11.0-all
        SVN Revision: 10148
        Duration: 1 sec.
        Service Request: https://jira.em.nytimes.com/browse/ORA-284