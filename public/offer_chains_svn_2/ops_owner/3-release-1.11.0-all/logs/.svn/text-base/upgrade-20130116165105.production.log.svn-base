16:51:17 SQL> @/dbbackups/ECPR/migrations/ops_owner/3-release-1.11.0-all/upgrade.sql
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> -- DDL for package NOTIFICATION_STATUSES
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V16" AS
16:51:17   2  
16:51:17   3  ----
16:51:17   4  -- NOTIFICATION STATUSES
16:51:17   5  
16:51:17   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
16:51:17   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
16:51:17   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
16:51:17   9  
16:51:17  10  END NOTIFICATION_STATUSES_V16;
16:51:17  11  .
16:51:17 SQL> /

Package created.

Elapsed: 00:00:00.03
16:51:17 SQL> 
16:51:17 SQL> 
16:51:17 SQL> 
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> -- DDL for package PROCS_COMMON
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V16" AS
16:51:17   2  
16:51:17   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
16:51:17   4  	in_sproc_name	    IN VARCHAR2,
16:51:17   5  	in_error_message    IN VARCHAR2,
16:51:17   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:51:17   7  ) RETURN VARCHAR2;
16:51:17   8  
16:51:17   9  PROCEDURE THROW_EXCEPTION(
16:51:17  10  	in_exception_code   IN NUMBER,
16:51:17  11  	in_sproc_name	    IN VARCHAR2,
16:51:17  12  	in_error_message    IN VARCHAR2,
16:51:17  13  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:51:17  14  );
16:51:17  15  
16:51:17  16  END PROCS_COMMON_V16;
16:51:17  17  .
16:51:17 SQL> /

Package created.

Elapsed: 00:00:00.02
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V16" AS
16:51:17   2  
16:51:17   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
16:51:17   4  	in_sproc_name	    IN VARCHAR2,
16:51:17   5  	in_error_message    IN VARCHAR2,
16:51:17   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:51:17   7  ) RETURN VARCHAR2 AS
16:51:17   8  BEGIN
16:51:17   9  	IF in_error_stacktrace IS NOT NULL THEN
16:51:17  10  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || chr(10) || in_error_stacktrace;
16:51:17  11  	END IF;
16:51:17  12  	RETURN
16:51:17  13  	  in_sproc_name || ': ' || in_error_message;
16:51:17  14  END GENERATE_EXCEPTION_MESSAGE;
16:51:17  15  
16:51:17  16  /******************************************************************************/
16:51:17  17  
16:51:17  18  PROCEDURE THROW_EXCEPTION(
16:51:17  19  	in_exception_code   IN NUMBER,
16:51:17  20  	in_sproc_name	    IN VARCHAR2,
16:51:17  21  	in_error_message    IN VARCHAR2,
16:51:17  22  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
16:51:17  23  ) AS
16:51:17  24  BEGIN
16:51:17  25  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
16:51:17  26  END;
16:51:17  27  
16:51:17  28  END PROCS_COMMON_V16;
16:51:17  29  .
16:51:17 SQL> /

Package body created.

Elapsed: 00:00:00.01
16:51:17 SQL> 
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> -- DDL for package PROCS_NOTIFICATION
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE "PROCS_NOTIFICATION_V16" AS
16:51:17   2  
16:51:17   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
16:51:17   4  /*
16:51:17   5  Throws exceptions:
16:51:17   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17   8  */
16:51:17   9  	in_notification_type_name IN VARCHAR2,
16:51:17  10  	out_notification_type_id  OUT NUMBER
16:51:17  11  );
16:51:17  12  
16:51:17  13  PROCEDURE ADD_NOTIFICATION (
16:51:17  14  /*
16:51:17  15  Throws exceptions:
16:51:17  16  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17  17  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17  18  */
16:51:17  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
16:51:17  20  	in_recipient_group_id	 IN NUMBER,
16:51:17  21  	in_notification_type_id  IN NUMBER,
16:51:17  22  	in_date_to_notify	 IN DATE,
16:51:17  23  	in_email_template_params IN CLOB
16:51:17  24  );
16:51:17  25  
16:51:17  26  PROCEDURE GET_PENDING_NOTIFICATIONS (
16:51:17  27  /*
16:51:17  28  Throws exceptions:
16:51:17  29  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17  30  */
16:51:17  31  	out_result_set OUT SYS_REFCURSOR
16:51:17  32  );
16:51:17  33  
16:51:17  34  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
16:51:17  35  /*
16:51:17  36  Throws exceptions:
16:51:17  37  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17  38  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17  39  */
16:51:17  40  	in_notification_id IN NUMBER
16:51:17  41  );
16:51:17  42  
16:51:17  43  PROCEDURE SET_NOTIFICATION_STATUS (
16:51:17  44  /*
16:51:17  45  Throws exceptions:
16:51:17  46  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17  47  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17  48  */
16:51:17  49  	in_notification_id	  IN NUMBER,
16:51:17  50  	in_notification_status_id IN NUMBER,
16:51:17  51  	in_error_message	  IN VARCHAR2
16:51:17  52  );
16:51:17  53  
16:51:17  54  PROCEDURE ADD_NOTIFICATION_FAILURE (
16:51:17  55  /*
16:51:17  56  Throws exceptions:
16:51:17  57  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17  58  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17  59  */
16:51:17  60  	in_notification_id IN NUMBER,
16:51:17  61  	in_error_message   IN VARCHAR2
16:51:17  62  );
16:51:17  63  
16:51:17  64  PROCEDURE LOCK_PENDING_NOTIFICATION (
16:51:17  65  /*
16:51:17  66  Result: 1 if notification locked
16:51:17  67  2 - else
16:51:17  68  */
16:51:17  69  	in_notification_id IN NUMBER,
16:51:17  70  	out_lock_status    OUT NUMBER
16:51:17  71  );
16:51:17  72  
16:51:17  73  PROCEDURE GET_NOTIFICATION_DATA (
16:51:17  74  	in_notification_id IN NUMBER,
16:51:17  75  	out_result_set	   OUT SYS_REFCURSOR
16:51:17  76  );
16:51:17  77  
16:51:17  78  END PROCS_NOTIFICATION_V16;
16:51:17  79  .
16:51:17 SQL> /

Package created.

Elapsed: 00:00:00.02
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_NOTIFICATION_V16" AS
16:51:17   2  
16:51:17   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
16:51:17   4  /*
16:51:17   5  Throws exceptions:
16:51:17   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17   8  */
16:51:17   9  	in_notification_type_name IN VARCHAR2,
16:51:17  10  	out_notification_type_id  OUT NUMBER
16:51:17  11  ) AS
16:51:17  12  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NOTIFICATION_TYPE_BY_NAME';
16:51:17  13  BEGIN
16:51:17  14  	SELECT
16:51:17  15  	  NOTIFICATION_TYPE.ID into out_notification_type_id
16:51:17  16  	FROM
16:51:17  17  	  NOTIFICATION_TYPE
16:51:17  18  	WHERE
16:51:17  19  	  NOTIFICATION_TYPE.VALUE = in_notification_type_name;
16:51:17  20  EXCEPTION
16:51:17  21  WHEN NO_DATA_FOUND THEN
16:51:17  22  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
16:51:17  23  	  SPROC_NAME, 'No such type');
16:51:17  24  WHEN OTHERS THEN
16:51:17  25  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
16:51:17  26  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:51:17  27  END GET_NOTIFICATION_TYPE_BY_NAME;
16:51:17  28  
16:51:17  29  /******************************************************************/
16:51:17  30  
16:51:17  31  PROCEDURE ADD_NOTIFICATION (
16:51:17  32  /*
16:51:17  33  Throws exceptions:
16:51:17  34  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17  35  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17  36  */
16:51:17  37  	in_sender_account_id	 IN NUMBER DEFAULT 0,
16:51:17  38  	in_recipient_group_id	 IN NUMBER,
16:51:17  39  	in_notification_type_id  IN NUMBER,
16:51:17  40  	in_date_to_notify	 IN DATE,
16:51:17  41  	in_email_template_params IN CLOB
16:51:17  42  ) AS
16:51:17  43  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION';
16:51:17  44  -- VARIABLES
16:51:17  45  temp_type_count NUMBER;
16:51:17  46  var_create_date DATE := SYSDATE;
16:51:17  47  -- EXCEPTIONS
16:51:17  48  BAD_NOTIFICATION_TYPE_ID EXCEPTION;
16:51:17  49  CAN_NOT_CREATE_HISTORY   EXCEPTION;
16:51:17  50  EXCEPTION_MESSAGE        VARCHAR2(1024);
16:51:17  51  BEGIN
16:51:17  52  
16:51:17  53  	SELECT
16:51:17  54  	  COUNT(*) into temp_type_count
16:51:17  55  	FROM
16:51:17  56  	  NOTIFICATION_TYPE
16:51:17  57  	WHERE
16:51:17  58  	  NOTIFICATION_TYPE.ID = in_notification_type_id;
16:51:17  59  
16:51:17  60  	IF temp_type_count = 0 THEN
16:51:17  61  	  RAISE BAD_NOTIFICATION_TYPE_ID;
16:51:17  62  	END IF;
16:51:17  63  
16:51:17  64  	INSERT INTO NOTIFICATION (
16:51:17  65  	  ID,
16:51:17  66  	  ACCOUNT_ID,
16:51:17  67  	  GROUP_ID,
16:51:17  68  	  NOTIFICATION_TYPE_ID,
16:51:17  69  	  NOTIFICATION_STATUS_ID,
16:51:17  70  	  EMAIL_TEMPLATE_PARAMS,
16:51:17  71  	  UPDATE_DATE,
16:51:17  72  	  CREATE_DATE,
16:51:17  73  	  DATE_TO_NOTIFY
16:51:17  74  	) VALUES (
16:51:17  75  	  NOT_ID_SEQ.nextVal,
16:51:17  76  	  in_sender_account_id,
16:51:17  77  	  in_recipient_group_id,
16:51:17  78  	  in_notification_type_id,
16:51:17  79  	  NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING,
16:51:17  80  	  in_email_template_params,
16:51:17  81  	  var_create_date,
16:51:17  82  	  var_create_date,
16:51:17  83  	  in_date_to_notify
16:51:17  84  	);
16:51:17  85  
16:51:17  86  	--BEGIN
16:51:17  87  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIFICATION_HISTORY (
16:51:17  88  	--    in_account_id		  => 0, -- ACCOUNT_ID. Can we delete it?
16:51:17  89  	--    in_group_id		  => in_recipient_group_id,
16:51:17  90  	--    notification_reason_type_id => in_notification_type_id,
16:51:17  91  	--    notification_status_id	  => NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING,
16:51:17  92  	--    email_template_params	  => in_email_template_params,
16:51:17  93  	--    in_create_date		  => var_create_date
16:51:17  94  	--  );
16:51:17  95  	--  EXCEPTION
16:51:17  96  	--    WHEN OTHERS THEN
16:51:17  97  	--	EXCEPTION_MESSAGE := SQLERRM;
16:51:17  98  	--	RAISE CAN_NOT_CREATE_HISTORY;
16:51:17  99  	--END;
16:51:17 100  
16:51:17 101  EXCEPTION
16:51:17 102  WHEN BAD_NOTIFICATION_TYPE_ID THEN
16:51:17 103  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
16:51:17 104  	  SPROC_NAME, 'No such notification status');
16:51:17 105  WHEN CAN_NOT_CREATE_HISTORY THEN
16:51:17 106  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
16:51:17 107  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
16:51:17 108  WHEN OTHERS THEN
16:51:17 109  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
16:51:17 110  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:51:17 111  END ADD_NOTIFICATION;
16:51:17 112  
16:51:17 113  /******************************************************************************/
16:51:17 114  
16:51:17 115  PROCEDURE GET_PENDING_NOTIFICATIONS (
16:51:17 116  /*
16:51:17 117  Throws exceptions:
16:51:17 118  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17 119  */
16:51:17 120  	out_result_set OUT SYS_REFCURSOR
16:51:17 121  ) AS
16:51:17 122  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_PENDING_NOTIFICATIONS';
16:51:17 123  -- CONSTANTS
16:51:17 124  C_NOTIFICATION_COUNT_LIMIT CONSTANT NUMBER := 500;
16:51:17 125  BEGIN
16:51:17 126  	OPEN out_result_set FOR
16:51:17 127  SELECT * FROM
16:51:17 128  (
16:51:17 129  	SELECT
16:51:17 130  	  NOTIFICATION.ID
16:51:17 131  	FROM
16:51:17 132  	  NOTIFICATION
16:51:17 133  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
16:51:17 134  	WHERE
16:51:17 135  	  ROWNUM <= C_NOTIFICATION_COUNT_LIMIT*10
16:51:17 136  	  AND NOT EXISTS (
16:51:17 137  	    SELECT NULL
16:51:17 138  	    FROM OPS_OWNER.PROCESS_RETRY_THROTTLE
16:51:17 139  	    WHERE GENERIC_ID = NOTIFICATION.ID AND PROCESS_NAME = SPROC_NAME
16:51:17 140  	  )
16:51:17 141  	  AND (
16:51:17 142  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING
16:51:17 143  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_FAILED
16:51:17 144  	  )
16:51:17 145  	  AND (
16:51:17 146  	    NOTIFICATION.DATE_TO_NOTIFY IS NULL OR SYSDATE > NOTIFICATION.DATE_TO_NOTIFY
16:51:17 147  	  )ORDER BY dbms_random.value
16:51:17 148  ) WHERE
16:51:17 149  	ROWNUM <= C_NOTIFICATION_COUNT_LIMIT;
16:51:17 150  
16:51:17 151  EXCEPTION
16:51:17 152  WHEN OTHERS THEN
16:51:17 153  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
16:51:17 154  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:51:17 155  END GET_PENDING_NOTIFICATIONS;
16:51:17 156  
16:51:17 157  /******************************************************************************/
16:51:17 158  
16:51:17 159  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
16:51:17 160  /*
16:51:17 161  Throws exceptions:
16:51:17 162  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17 163  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17 164  */
16:51:17 165  	in_notification_id IN NUMBER
16:51:17 166  ) AS
16:51:17 167  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_NOTIFICATION_TIMESTAMP';
16:51:17 168  -- VARIABLES
16:51:17 169  temp_notification_id NUMBER;
16:51:17 170  -- EXCEPTIONS
16:51:17 171  BAD_NOTIFICATION_ID EXCEPTION;
16:51:17 172  BEGIN
16:51:17 173  
16:51:17 174  	BEGIN
16:51:17 175  	  SELECT
16:51:17 176  	    NOTIFICATION.ID into temp_notification_id
16:51:17 177  	  FROM
16:51:17 178  	    NOTIFICATION
16:51:17 179  	  WHERE
16:51:17 180  	    NOTIFICATION.ID = in_notification_id;
16:51:17 181  	  EXCEPTION
16:51:17 182  	    WHEN NO_DATA_FOUND THEN
16:51:17 183  	      RAISE BAD_NOTIFICATION_ID;
16:51:17 184  	END;
16:51:17 185  
16:51:17 186  	UPDATE
16:51:17 187  	  NOTIFICATION
16:51:17 188  	SET
16:51:17 189  	  NOTIFICATION.UPDATE_DATE = sysdate
16:51:17 190  	WHERE
16:51:17 191  	  NOTIFICATION.ID = in_notification_id;
16:51:17 192  
16:51:17 193  EXCEPTION
16:51:17 194  WHEN BAD_NOTIFICATION_ID THEN
16:51:17 195  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
16:51:17 196  	  SPROC_NAME, 'No such notification');
16:51:17 197  WHEN OTHERS THEN
16:51:17 198  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
16:51:17 199  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:51:17 200  END UPDATE_NOTIFICATION_TIMESTAMP;
16:51:17 201  
16:51:17 202  /******************************************************************************/
16:51:17 203  
16:51:17 204  PROCEDURE SET_NOTIFICATION_STATUS (
16:51:17 205  /*
16:51:17 206  Throws exceptions:
16:51:17 207  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17 208  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17 209  */
16:51:17 210  	in_notification_id	  IN NUMBER,
16:51:17 211  	in_notification_status_id IN NUMBER,
16:51:17 212  	in_error_message	  IN VARCHAR2
16:51:17 213  ) AS
16:51:17 214  SPROC_NAME CONSTANT VARCHAR2(32) := 'SET_NOTIFICATION_STATUS';
16:51:17 215  -- VARIABLES
16:51:17 216  var_group_id		NUMBER;
16:51:17 217  var_account_id		NUMBER;
16:51:17 218  var_notification_type_id	NUMBER;
16:51:17 219  var_email_template_params CLOB;
16:51:17 220  var_create_history_date	DATE := SYSDATE;
16:51:17 221  var_notification_status_id   NUMBER;
16:51:17 222  var_date_to_notify	DATE;
16:51:17 223  max_fails   NUMBER := 5;
16:51:17 224  num_fails   NUMBER;
16:51:17 225  -- EXCEPTIONS
16:51:17 226  BAD_NOTIFICATION_ID	 EXCEPTION;
16:51:17 227  BAD_NOTIFICATION_STATUS_ID EXCEPTION;
16:51:17 228  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
16:51:17 229  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
16:51:17 230  BEGIN
16:51:17 231  
16:51:17 232  	IF in_notification_status_id != NOTIFICATION_STATUSES_V16.NOTIFICATION_SENT
16:51:17 233  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING
16:51:17 234  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V16.NOTIFICATION_FAILED THEN
16:51:17 235  	  RAISE BAD_NOTIFICATION_STATUS_ID;
16:51:17 236  	END IF;
16:51:17 237  
16:51:17 238  	BEGIN
16:51:17 239  	  SELECT
16:51:17 240  	    NOTIFICATION.GROUP_ID,
16:51:17 241  	    NOTIFICATION.ACCOUNT_ID,
16:51:17 242  	    NOTIFICATION.NOTIFICATION_TYPE_ID,
16:51:17 243  	    NOTIFICATION.NOTIFICATION_STATUS_ID,
16:51:17 244  	    NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
16:51:17 245  	    NOTIFICATION.DATE_TO_NOTIFY
16:51:17 246  	    into
16:51:17 247  	    var_group_id,
16:51:17 248  	    var_account_id,
16:51:17 249  	    var_notification_type_id,
16:51:17 250  	    var_notification_status_id,
16:51:17 251  	    var_email_template_params,
16:51:17 252  	    var_date_to_notify
16:51:17 253  	  FROM
16:51:17 254  	    NOTIFICATION
16:51:17 255  	  WHERE
16:51:17 256  	    NOTIFICATION.ID = in_notification_id;
16:51:17 257  	  EXCEPTION
16:51:17 258  	    WHEN NO_DATA_FOUND THEN
16:51:17 259  	      RAISE BAD_NOTIFICATION_ID;
16:51:17 260  	END;
16:51:17 261  
16:51:17 262  	BEGIN
16:51:17 263  	  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIFICATION_HISTORY (
16:51:17 264  	    in_notification_id		=> in_notification_id,
16:51:17 265  	    in_account_id		=> var_account_id,
16:51:17 266  	    in_group_id 		=> var_group_id,
16:51:17 267  	    notification_reason_type_id => var_notification_type_id,
16:51:17 268  	    notification_status_id	=> var_notification_status_id,
16:51:17 269  	    email_template_params	=> var_email_template_params,
16:51:17 270  	    in_create_date		=> var_create_history_date,
16:51:17 271  	    in_date_to_notify		=> var_date_to_notify
16:51:17 272  	  );
16:51:17 273  	  EXCEPTION
16:51:17 274  	    WHEN OTHERS THEN
16:51:17 275  	      EXCEPTION_MESSAGE := SQLERRM;
16:51:17 276  	      RAISE CAN_NOT_CREATE_HISTORY;
16:51:17 277  	END;
16:51:17 278  
16:51:17 279  	UPDATE
16:51:17 280  	  NOTIFICATION
16:51:17 281  	SET
16:51:17 282  	  NOTIFICATION.NOTIFICATION_STATUS_ID = in_notification_status_id,
16:51:17 283  	  NOTIFICATION.UPDATE_DATE = sysdate
16:51:17 284  	WHERE
16:51:17 285  	  NOTIFICATION.ID = in_notification_id;
16:51:17 286  
16:51:17 287  	IF ( in_error_message IS NOT NULL ) THEN
16:51:17 288  	  ADD_NOTIFICATION_FAILURE(
16:51:17 289  	    in_notification_id => in_notification_id,
16:51:17 290  	    in_error_message => in_error_message
16:51:17 291  	  );
16:51:17 292  	END IF;
16:51:17 293  
16:51:17 294  	SELECT COUNT(1) INTO num_fails
16:51:17 295  	FROM NOTIFICATION_FAILURE
16:51:17 296  	WHERE NOTIFICATION_ID = in_notification_id;
16:51:17 297  
16:51:17 298  	IF (in_notification_status_id = NOTIFICATION_STATUSES_V16.NOTIFICATION_SENT OR num_fails >= max_fails) then
16:51:17 299  	  FOR REC IN (
16:51:17 300  	      SELECT ID, NOTIFICATION_ID, ERROR_MESSAGE, CREATE_DATE
16:51:17 301  	      FROM NOTIFICATION_FAILURE
16:51:17 302  	      WHERE NOTIFICATION_ID = in_notification_id
16:51:17 303  	      ) LOOP
16:51:17 304  	      BEGIN
16:51:17 305  		OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIF_FAILURE_HISTORY(
16:51:17 306  		  in_error_message	   => REC.ERROR_MESSAGE,
16:51:17 307  		  in_notification_id	   => REC.NOTIFICATION_ID,
16:51:17 308  		  in_create_date	   => REC.CREATE_DATE
16:51:17 309  		);
16:51:17 310  		EXCEPTION
16:51:17 311  		  WHEN OTHERS THEN
16:51:17 312  		    EXCEPTION_MESSAGE := SQLERRM;
16:51:17 313  		    RAISE CAN_NOT_CREATE_HISTORY;
16:51:17 314  	      END;
16:51:17 315  	  END LOOP;
16:51:17 316  	  DELETE FROM NOTIFICATION_FAILURE WHERE NOTIFICATION_ID = in_notification_id;
16:51:17 317  
16:51:17 318  	  BEGIN
16:51:17 319  	    SELECT
16:51:17 320  	      NOTIFICATION.GROUP_ID,
16:51:17 321  	      NOTIFICATION.ACCOUNT_ID,
16:51:17 322  	      NOTIFICATION.NOTIFICATION_TYPE_ID,
16:51:17 323  	      NOTIFICATION.NOTIFICATION_STATUS_ID,
16:51:17 324  	      NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
16:51:17 325  	      NOTIFICATION.DATE_TO_NOTIFY
16:51:17 326  	      into
16:51:17 327  	      var_group_id,
16:51:17 328  	      var_account_id,
16:51:17 329  	      var_notification_type_id,
16:51:17 330  	      var_notification_status_id,
16:51:17 331  	      var_email_template_params,
16:51:17 332  	      var_date_to_notify
16:51:17 333  	    FROM
16:51:17 334  	      NOTIFICATION
16:51:17 335  	    WHERE
16:51:17 336  	      NOTIFICATION.ID = in_notification_id;
16:51:17 337  	    EXCEPTION
16:51:17 338  	      WHEN NO_DATA_FOUND THEN
16:51:17 339  		RAISE BAD_NOTIFICATION_ID;
16:51:17 340  	  END;
16:51:17 341  
16:51:17 342  	  BEGIN
16:51:17 343  	    OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIFICATION_HISTORY (
16:51:17 344  	      in_notification_id	  => in_notification_id,
16:51:17 345  	      in_account_id		  => var_account_id,
16:51:17 346  	      in_group_id		  => var_group_id,
16:51:17 347  	      notification_reason_type_id => var_notification_type_id,
16:51:17 348  	      notification_status_id	  => var_notification_status_id,
16:51:17 349  	      email_template_params	  => var_email_template_params,
16:51:17 350  	      in_create_date		  => var_create_history_date,
16:51:17 351  	      in_date_to_notify 	  => var_date_to_notify
16:51:17 352  	    );
16:51:17 353  	    EXCEPTION
16:51:17 354  	      WHEN OTHERS THEN
16:51:17 355  		EXCEPTION_MESSAGE := SQLERRM;
16:51:17 356  		RAISE CAN_NOT_CREATE_HISTORY;
16:51:17 357  	  END;
16:51:17 358  
16:51:17 359  	  DELETE FROM NOTIFICATION WHERE ID = in_notification_id;
16:51:17 360  
16:51:17 361  	END IF;
16:51:17 362  	commit;
16:51:17 363  
16:51:17 364  EXCEPTION
16:51:17 365  WHEN BAD_NOTIFICATION_STATUS_ID THEN
16:51:17 366  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
16:51:17 367  	  SPROC_NAME, 'Bad notification status');
16:51:17 368  WHEN BAD_NOTIFICATION_ID THEN
16:51:17 369  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
16:51:17 370  	  SPROC_NAME, 'No such notification');
16:51:17 371  WHEN CAN_NOT_CREATE_HISTORY THEN
16:51:17 372  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
16:51:17 373  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
16:51:17 374  WHEN OTHERS THEN
16:51:17 375  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
16:51:17 376  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:51:17 377  END SET_NOTIFICATION_STATUS;
16:51:17 378  
16:51:17 379  /******************************************************************************/
16:51:17 380  
16:51:17 381  PROCEDURE ADD_NOTIFICATION_FAILURE (
16:51:17 382  /*
16:51:17 383  Throws exceptions:
16:51:17 384  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17 385  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17 386  */
16:51:17 387  	in_notification_id IN NUMBER,
16:51:17 388  	in_error_message   IN VARCHAR2
16:51:17 389  ) AS
16:51:17 390  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION_FAILURE';
16:51:17 391  -- VARIABLES
16:51:17 392  temp_notification_id NUMBER;
16:51:17 393  var_create_date	   DATE := SYSDATE;
16:51:17 394  -- EXCEPTIONS
16:51:17 395  BAD_NOTIFICATION_ID	 EXCEPTION;
16:51:17 396  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
16:51:17 397  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
16:51:17 398  BEGIN
16:51:17 399  
16:51:17 400  	BEGIN
16:51:17 401  	  SELECT
16:51:17 402  	    NOTIFICATION.ID into temp_notification_id
16:51:17 403  	  FROM
16:51:17 404  	    NOTIFICATION
16:51:17 405  	  WHERE
16:51:17 406  	    NOTIFICATION.ID = in_notification_id;
16:51:17 407  	  EXCEPTION
16:51:17 408  	    WHEN NO_DATA_FOUND THEN
16:51:17 409  	      RAISE BAD_NOTIFICATION_ID;
16:51:17 410  	END;
16:51:17 411  
16:51:17 412  	INSERT INTO NOTIFICATION_FAILURE (
16:51:17 413  	  ID,
16:51:17 414  	  NOTIFICATION_ID,
16:51:17 415  	  ERROR_MESSAGE,
16:51:17 416  	  CREATE_DATE
16:51:17 417  	) VALUES (
16:51:17 418  	  NOTF_ID_SEQ.nextVal,
16:51:17 419  	  in_notification_id,
16:51:17 420  	  in_error_message,
16:51:17 421  	  sysdate
16:51:17 422  	);
16:51:17 423  
16:51:17 424  	--BEGIN
16:51:17 425  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIF_FAILURE_HISTORY(
16:51:17 426  	--    in_error_message	       => in_error_message,
16:51:17 427  	--    in_notification_queue_id => in_notification_id,
16:51:17 428  	--    in_create_date	       => var_create_date
16:51:17 429  	--  );
16:51:17 430  	--  EXCEPTION
16:51:17 431  	--    WHEN OTHERS THEN
16:51:17 432  	--	EXCEPTION_MESSAGE := SQLERRM;
16:51:17 433  	--	RAISE CAN_NOT_CREATE_HISTORY;
16:51:17 434  	--END;
16:51:17 435  
16:51:17 436  EXCEPTION
16:51:17 437  WHEN BAD_NOTIFICATION_ID THEN
16:51:17 438  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
16:51:17 439  	  SPROC_NAME, 'No such notification');
16:51:17 440  WHEN CAN_NOT_CREATE_HISTORY THEN
16:51:17 441  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
16:51:17 442  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
16:51:17 443  WHEN OTHERS THEN
16:51:17 444  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
16:51:17 445  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:51:17 446  END ADD_NOTIFICATION_FAILURE;
16:51:17 447  
16:51:17 448  /******************************************************************************/
16:51:17 449  
16:51:17 450  PROCEDURE LOCK_PENDING_NOTIFICATION (
16:51:17 451  /*
16:51:17 452  Result: GLOBAL_STATUSES.TRUE if notification locked
16:51:17 453  GLOBA_STATUSES.FALSE - else
16:51:17 454  */
16:51:17 455  	in_notification_id IN NUMBER,
16:51:17 456  	out_lock_status    OUT NUMBER
16:51:17 457  ) AS
16:51:17 458  SPROC_NAME CONSTANT VARCHAR2(25) := 'LOCK_PENDING_NOTIFICATION';
16:51:17 459  -- VARIABLE
16:51:17 460  temp_notification_id NUMBER;
16:51:17 461  BEGIN
16:51:17 462  	SELECT
16:51:17 463  	  NOTIFICATION.ID into temp_notification_id
16:51:17 464  	FROM
16:51:17 465  	  NOTIFICATION
16:51:17 466  	WHERE
16:51:17 467  	  NOTIFICATION.ID = in_notification_id
16:51:17 468  	  AND (
16:51:17 469  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING
16:51:17 470  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_FAILED
16:51:17 471  	  )
16:51:17 472  	FOR UPDATE;
16:51:17 473  
16:51:17 474  	out_lock_status := 1;
16:51:17 475  
16:51:17 476  EXCEPTION
16:51:17 477  WHEN NO_DATA_FOUND THEN
16:51:17 478  	out_lock_status := 0;
16:51:17 479  WHEN OTHERS THEN
16:51:17 480  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
16:51:17 481  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:51:17 482  END LOCK_PENDING_NOTIFICATION;
16:51:17 483  
16:51:17 484  /******************************************************************************/
16:51:17 485  
16:51:17 486  PROCEDURE GET_NOTIFICATION_DATA (
16:51:17 487  	in_notification_id IN NUMBER,
16:51:17 488  	out_result_set	   OUT SYS_REFCURSOR
16:51:17 489  ) AS
16:51:17 490  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_NOTIFICATION_DATA';
16:51:17 491  BEGIN
16:51:17 492  	OPEN out_result_set FOR
16:51:17 493  	SELECT
16:51:17 494  	  NOTIFICATION.ID,
16:51:17 495  	  NOTIFICATION.GROUP_ID,
16:51:17 496  	  NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
16:51:17 497  	  NOTIFICATION.NOTIFICATION_STATUS_ID,
16:51:17 498  	  NOTIFICATION.CREATE_DATE,
16:51:17 499  	  NOTIFICATION.UPDATE_DATE,
16:51:17 500  	  NOTIFICATION.NOTIFICATION_TYPE_ID,
16:51:17 501  	  NOTIFICATION_TYPE.VALUE as "TYPE_VALUE",
16:51:17 502  	  NOTIFICATION_TYPE.TEMPLATE_URL
16:51:17 503  	FROM
16:51:17 504  	  NOTIFICATION
16:51:17 505  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
16:51:17 506  	WHERE
16:51:17 507  	  NOTIFICATION.ID = in_notification_id;
16:51:17 508  
16:51:17 509  EXCEPTION
16:51:17 510  WHEN OTHERS THEN
16:51:17 511  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
16:51:17 512  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:51:17 513  END GET_NOTIFICATION_DATA;
16:51:17 514  
16:51:17 515  END PROCS_NOTIFICATION_V16;
16:51:17 516  .
16:51:17 SQL> /

Package body created.

Elapsed: 00:00:00.07
16:51:17 SQL> 
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> -- DDL for package PROCS_PROCESS_RETRY_THROTTLE
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE "PROCS_PROCESS_RETRY_V16" AS
16:51:17   2  
16:51:17   3  PROCEDURE LOG_RETRY(
16:51:17   4  	  in_process_name IN VARCHAR2,
16:51:17   5  	  in_generic_id   IN NUMBER,
16:51:17   6  	  in_date	  IN VARCHAR2,
16:51:17   7  	  out_success	   OUT NUMBER
16:51:17   8  );
16:51:17   9  
16:51:17  10  PROCEDURE DELETE_RETRY(
16:51:17  11  	  in_process_name IN VARCHAR2,
16:51:17  12  	  in_remove_minutes  IN NUMBER
16:51:17  13  );
16:51:17  14  
16:51:17  15  PROCEDURE GET_SYSDATE (
16:51:17  16  	  out_date OUT VARCHAR2
16:51:17  17  );
16:51:17  18  
16:51:17  19  END PROCS_PROCESS_RETRY_V16;
16:51:17  20  .
16:51:17 SQL> /

Package created.

Elapsed: 00:00:00.02
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_PROCESS_RETRY_V16" AS
16:51:17   2  
16:51:17   3  PROCEDURE LOG_RETRY(
16:51:17   4  	  in_process_name IN VARCHAR2,
16:51:17   5  	  in_generic_id   IN NUMBER,
16:51:17   6  	  in_date	  IN VARCHAR2,
16:51:17   7  	  out_success	   OUT NUMBER
16:51:17   8  ) AS
16:51:17   9  SPROC_NAME CONSTANT VARCHAR2(32) := 'PROCS_PROCESS_RETRY_V16';
16:51:17  10  BEGIN
16:51:17  11  
16:51:17  12  	out_success := 1;
16:51:17  13  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
16:51:17  14  	VALUES (in_process_name, in_generic_id, 1, to_date(in_date, 'DD-Mon-YYYY HH24:MI:SS'), sysdate);
16:51:17  15  	commit;
16:51:17  16  EXCEPTION
16:51:17  17  WHEN DUP_VAL_ON_INDEX THEN
16:51:17  18  	rollback;
16:51:17  19  	out_success := 0;
16:51:17  20  WHEN OTHERS THEN
16:51:17  21  	rollback;
16:51:17  22  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
16:51:17  23  	  SPROC_NAME, 'Unknown error', SQLERRM);
16:51:17  24  
16:51:17  25  END;
16:51:17  26  
16:51:17  27  PROCEDURE DELETE_RETRY(
16:51:17  28  	  in_process_name IN VARCHAR2,
16:51:17  29  	  in_remove_minutes  IN NUMBER
16:51:17  30  ) AS
16:51:17  31  BEGIN
16:51:17  32  
16:51:17  33  delete from PROCESS_RETRY_THROTTLE
16:51:17  34  where
16:51:17  35  	process_name = in_process_name and
16:51:17  36  	create_date <= sysdate-in_remove_minutes/1440;
16:51:17  37  commit;
16:51:17  38  END;
16:51:17  39  
16:51:17  40  PROCEDURE GET_SYSDATE (
16:51:17  41  	out_date  OUT VARCHAR2
16:51:17  42  ) AS
16:51:17  43  BEGIN
16:51:17  44  	SELECT to_char(SYSDATE, 'DD-Mon-YYYY HH24:MI:SS') into out_date from dual;
16:51:17  45  END;
16:51:17  46  
16:51:17  47  END PROCS_PROCESS_RETRY_V16;
16:51:17  48  .
16:51:17 SQL> /

Package body created.

Elapsed: 00:00:00.02
16:51:17 SQL> 
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> -- DDL for package PROCS_SYSTEM
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE "PROCS_SYSTEM_V16" AS
16:51:17   2  
16:51:17   3  PROCEDURE INCREMENT_VERSION;
16:51:17   4  
16:51:17   5  PROCEDURE CHECK_VERSION(
16:51:17   6  	  in_vers    IN NUMBER,
16:51:17   7  	  out_result OUT NUMBER
16:51:17   8  );
16:51:17   9  
16:51:17  10  END PROCS_SYSTEM_V16;
16:51:17  11  .
16:51:17 SQL> /

Package created.

Elapsed: 00:00:00.02
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SYSTEM_V16" AS
16:51:17   2  
16:51:17   3  PROCEDURE INCREMENT_VERSION
16:51:17   4  /*
16:51:17   5  Throws exceptions:
16:51:17   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17   7  */
16:51:17   8  AS
16:51:17   9  BEGIN
16:51:17  10  
16:51:17  11  	UPDATE SYS_VERSION SET version=version+1;
16:51:17  12  
16:51:17  13  EXCEPTION
16:51:17  14  WHEN OTHERS THEN
16:51:17  15  	RAISE_APPLICATION_ERROR(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
16:51:17  16  	  'Unknown error');
16:51:17  17  END INCREMENT_VERSION;
16:51:17  18  
16:51:17  19  /*************************************************************/
16:51:17  20  
16:51:17  21  PROCEDURE CHECK_VERSION(
16:51:17  22  	  in_vers    IN NUMBER,
16:51:17  23  	  out_result OUT NUMBER
16:51:17  24  ) AS
16:51:17  25  	current_version NUMBER;
16:51:17  26  BEGIN
16:51:17  27  	SELECT version INTO current_version FROM SYS_VERSION;
16:51:17  28  	IF(current_version != in_vers) THEN
16:51:17  29  	  out_result := 1;
16:51:17  30  	ELSE
16:51:17  31  	  out_result := 0;
16:51:17  32  	END IF;
16:51:17  33  	EXCEPTION
16:51:17  34  	      WHEN OTHERS THEN
16:51:17  35  	      NULL;
16:51:17  36  END CHECK_VERSION;
16:51:17  37  
16:51:17  38  END PROCS_SYSTEM_V16;
16:51:17  39  .
16:51:17 SQL> /

Package body created.

Elapsed: 00:00:00.02
16:51:17 SQL> 
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> -- DDL for package PUBLIC_PROCS_CLIENT
16:51:17 SQL> --------------------------------------------------------------------------------
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_CLIENT_V16" AS
16:51:17   2  
16:51:17   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
16:51:17   4  /*
16:51:17   5  Throws exceptions:
16:51:17   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17   8  */
16:51:17   9  	in_notification_type_name IN VARCHAR2,
16:51:17  10  	out_notification_type_id  OUT NUMBER
16:51:17  11  );
16:51:17  12  
16:51:17  13  PROCEDURE ADD_NOTIFICATION (
16:51:17  14  /*
16:51:17  15  Throws exceptions:
16:51:17  16  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17  17  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17  18  */
16:51:17  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
16:51:17  20  	in_recipient_group_id	 IN NUMBER,
16:51:17  21  	in_notification_type_id  IN NUMBER,
16:51:17  22  	in_date_to_notify	 IN DATE,
16:51:17  23  	in_email_template_params IN CLOB
16:51:17  24  );
16:51:17  25  
16:51:17  26  END PUBLIC_PROCS_CLIENT_V16;
16:51:17  27  .
16:51:17 SQL> /

Package created.

Elapsed: 00:00:00.03
16:51:17 SQL> 
16:51:17 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_CLIENT_V16" AS
16:51:17   2  
16:51:17   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
16:51:17   4  /*
16:51:17   5  Throws exceptions:
16:51:17   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17   8  */
16:51:17   9  	in_notification_type_name IN VARCHAR2,
16:51:17  10  	out_notification_type_id  OUT NUMBER
16:51:17  11  ) AS
16:51:17  12  BEGIN
16:51:17  13  	PROCS_NOTIFICATION_V16.GET_NOTIFICATION_TYPE_BY_NAME (
16:51:17  14  	  in_notification_type_name,
16:51:17  15  	  out_notification_type_id
16:51:17  16  	);
16:51:17  17  END;
16:51:17  18  
16:51:17  19  /*****************************************************************/
16:51:17  20  
16:51:17  21  PROCEDURE ADD_NOTIFICATION (
16:51:17  22  /*
16:51:17  23  Throws exceptions:
16:51:17  24  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
16:51:17  25  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
16:51:17  26  */
16:51:17  27  	in_sender_account_id	 IN NUMBER DEFAULT 0,
16:51:17  28  	in_recipient_group_id	 IN NUMBER,
16:51:17  29  	in_notification_type_id  IN NUMBER,
16:51:17  30  	in_date_to_notify	 IN DATE,
16:51:17  31  	in_email_template_params IN CLOB
16:51:17  32  ) AS
16:51:17  33  BEGIN
16:51:17  34  	PROCS_NOTIFICATION_V16.ADD_NOTIFICATION (
16:51:17  35  	  in_sender_account_id,
16:51:17  36  	  in_recipient_group_id,
16:51:17  37  	  in_notification_type_id,
16:51:17  38  	  in_date_to_notify,
16:51:17  39  	  in_email_template_params
16:51:17  40  	);
16:51:17  41  END;
16:51:17  42  
16:51:17  43  END PUBLIC_PROCS_CLIENT_V16;
16:51:17  44  .
16:51:17 SQL> /

Package body created.

Elapsed: 00:00:00.02
16:51:17 SQL> 
16:51:17 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V16 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V16 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V16 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> 
16:51:17 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V16 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V16 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V16 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> 
16:51:17 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> 
16:51:17 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> 
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_owner;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_poller_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> 
16:51:17 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> 
16:51:17 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> 
16:51:17 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
16:51:17 SQL> 
16:51:17 SQL> grant select, insert, update, delete ON OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> grant select ON OPS_OWNER.NOTTID_SEQ to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
16:51:17 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
16:51:17 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECPR@rac01.prd.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: nytd_oracledba@nytimes.com
Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.prd.ewr1.nytimes.com
        SID: ECPR
        Schema: ops_owner
        Migration: 3-release-1.11.0-all
        SVN Revision: 10148
        Duration: 1 sec.
        Service Request: https://jira.em.nytimes.com/browse/ORA-315