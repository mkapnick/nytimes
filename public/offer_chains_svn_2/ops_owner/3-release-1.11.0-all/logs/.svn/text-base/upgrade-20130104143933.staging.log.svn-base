14:39:44 SQL> @/dbbackups/ECST2/migrations/ops_owner/3-release-1.11.0-all/upgrade.sql
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> -- DDL for package NOTIFICATION_STATUSES
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V16" AS
14:39:44   2  
14:39:44   3  ----
14:39:44   4  -- NOTIFICATION STATUSES
14:39:44   5  
14:39:44   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
14:39:44   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
14:39:44   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
14:39:44   9  
14:39:44  10  END NOTIFICATION_STATUSES_V16;
14:39:44  11  .
14:39:44 SQL> /

Package created.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> 
14:39:44 SQL> 
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> -- DDL for package PROCS_COMMON
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V16" AS
14:39:44   2  
14:39:44   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
14:39:44   4  	in_sproc_name	    IN VARCHAR2,
14:39:44   5  	in_error_message    IN VARCHAR2,
14:39:44   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:39:44   7  ) RETURN VARCHAR2;
14:39:44   8  
14:39:44   9  PROCEDURE THROW_EXCEPTION(
14:39:44  10  	in_exception_code   IN NUMBER,
14:39:44  11  	in_sproc_name	    IN VARCHAR2,
14:39:44  12  	in_error_message    IN VARCHAR2,
14:39:44  13  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:39:44  14  );
14:39:44  15  
14:39:44  16  END PROCS_COMMON_V16;
14:39:44  17  .
14:39:44 SQL> /

Package created.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V16" AS
14:39:44   2  
14:39:44   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
14:39:44   4  	in_sproc_name	    IN VARCHAR2,
14:39:44   5  	in_error_message    IN VARCHAR2,
14:39:44   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:39:44   7  ) RETURN VARCHAR2 AS
14:39:44   8  BEGIN
14:39:44   9  	IF in_error_stacktrace IS NOT NULL THEN
14:39:44  10  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || chr(10) || in_error_stacktrace;
14:39:44  11  	END IF;
14:39:44  12  	RETURN
14:39:44  13  	  in_sproc_name || ': ' || in_error_message;
14:39:44  14  END GENERATE_EXCEPTION_MESSAGE;
14:39:44  15  
14:39:44  16  /******************************************************************************/
14:39:44  17  
14:39:44  18  PROCEDURE THROW_EXCEPTION(
14:39:44  19  	in_exception_code   IN NUMBER,
14:39:44  20  	in_sproc_name	    IN VARCHAR2,
14:39:44  21  	in_error_message    IN VARCHAR2,
14:39:44  22  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:39:44  23  ) AS
14:39:44  24  BEGIN
14:39:44  25  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
14:39:44  26  END;
14:39:44  27  
14:39:44  28  END PROCS_COMMON_V16;
14:39:44  29  .
14:39:44 SQL> /

Package body created.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> -- DDL for package PROCS_NOTIFICATION
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_NOTIFICATION_V16" AS
14:39:44   2  
14:39:44   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
14:39:44   4  /*
14:39:44   5  Throws exceptions:
14:39:44   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44   8  */
14:39:44   9  	in_notification_type_name IN VARCHAR2,
14:39:44  10  	out_notification_type_id  OUT NUMBER
14:39:44  11  );
14:39:44  12  
14:39:44  13  PROCEDURE ADD_NOTIFICATION (
14:39:44  14  /*
14:39:44  15  Throws exceptions:
14:39:44  16  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44  17  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44  18  */
14:39:44  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
14:39:44  20  	in_recipient_group_id	 IN NUMBER,
14:39:44  21  	in_notification_type_id  IN NUMBER,
14:39:44  22  	in_date_to_notify	 IN DATE,
14:39:44  23  	in_email_template_params IN CLOB
14:39:44  24  );
14:39:44  25  
14:39:44  26  PROCEDURE GET_PENDING_NOTIFICATIONS (
14:39:44  27  /*
14:39:44  28  Throws exceptions:
14:39:44  29  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44  30  */
14:39:44  31  	out_result_set OUT SYS_REFCURSOR
14:39:44  32  );
14:39:44  33  
14:39:44  34  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
14:39:44  35  /*
14:39:44  36  Throws exceptions:
14:39:44  37  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44  38  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44  39  */
14:39:44  40  	in_notification_id IN NUMBER
14:39:44  41  );
14:39:44  42  
14:39:44  43  PROCEDURE SET_NOTIFICATION_STATUS (
14:39:44  44  /*
14:39:44  45  Throws exceptions:
14:39:44  46  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44  47  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44  48  */
14:39:44  49  	in_notification_id	  IN NUMBER,
14:39:44  50  	in_notification_status_id IN NUMBER,
14:39:44  51  	in_error_message	  IN VARCHAR2
14:39:44  52  );
14:39:44  53  
14:39:44  54  PROCEDURE ADD_NOTIFICATION_FAILURE (
14:39:44  55  /*
14:39:44  56  Throws exceptions:
14:39:44  57  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44  58  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44  59  */
14:39:44  60  	in_notification_id IN NUMBER,
14:39:44  61  	in_error_message   IN VARCHAR2
14:39:44  62  );
14:39:44  63  
14:39:44  64  PROCEDURE LOCK_PENDING_NOTIFICATION (
14:39:44  65  /*
14:39:44  66  Result: 1 if notification locked
14:39:44  67  2 - else
14:39:44  68  */
14:39:44  69  	in_notification_id IN NUMBER,
14:39:44  70  	out_lock_status    OUT NUMBER
14:39:44  71  );
14:39:44  72  
14:39:44  73  PROCEDURE GET_NOTIFICATION_DATA (
14:39:44  74  	in_notification_id IN NUMBER,
14:39:44  75  	out_result_set	   OUT SYS_REFCURSOR
14:39:44  76  );
14:39:44  77  
14:39:44  78  END PROCS_NOTIFICATION_V16;
14:39:44  79  .
14:39:44 SQL> /

Package created.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_NOTIFICATION_V16" AS
14:39:44   2  
14:39:44   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
14:39:44   4  /*
14:39:44   5  Throws exceptions:
14:39:44   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44   8  */
14:39:44   9  	in_notification_type_name IN VARCHAR2,
14:39:44  10  	out_notification_type_id  OUT NUMBER
14:39:44  11  ) AS
14:39:44  12  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NOTIFICATION_TYPE_BY_NAME';
14:39:44  13  BEGIN
14:39:44  14  	SELECT
14:39:44  15  	  NOTIFICATION_TYPE.ID into out_notification_type_id
14:39:44  16  	FROM
14:39:44  17  	  NOTIFICATION_TYPE
14:39:44  18  	WHERE
14:39:44  19  	  NOTIFICATION_TYPE.VALUE = in_notification_type_name;
14:39:44  20  EXCEPTION
14:39:44  21  WHEN NO_DATA_FOUND THEN
14:39:44  22  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
14:39:44  23  	  SPROC_NAME, 'No such type');
14:39:44  24  WHEN OTHERS THEN
14:39:44  25  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:39:44  26  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:39:44  27  END GET_NOTIFICATION_TYPE_BY_NAME;
14:39:44  28  
14:39:44  29  /******************************************************************/
14:39:44  30  
14:39:44  31  PROCEDURE ADD_NOTIFICATION (
14:39:44  32  /*
14:39:44  33  Throws exceptions:
14:39:44  34  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44  35  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44  36  */
14:39:44  37  	in_sender_account_id	 IN NUMBER DEFAULT 0,
14:39:44  38  	in_recipient_group_id	 IN NUMBER,
14:39:44  39  	in_notification_type_id  IN NUMBER,
14:39:44  40  	in_date_to_notify	 IN DATE,
14:39:44  41  	in_email_template_params IN CLOB
14:39:44  42  ) AS
14:39:44  43  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION';
14:39:44  44  -- VARIABLES
14:39:44  45  temp_type_count NUMBER;
14:39:44  46  var_create_date DATE := SYSDATE;
14:39:44  47  -- EXCEPTIONS
14:39:44  48  BAD_NOTIFICATION_TYPE_ID EXCEPTION;
14:39:44  49  CAN_NOT_CREATE_HISTORY   EXCEPTION;
14:39:44  50  EXCEPTION_MESSAGE        VARCHAR2(1024);
14:39:44  51  BEGIN
14:39:44  52  
14:39:44  53  	SELECT
14:39:44  54  	  COUNT(*) into temp_type_count
14:39:44  55  	FROM
14:39:44  56  	  NOTIFICATION_TYPE
14:39:44  57  	WHERE
14:39:44  58  	  NOTIFICATION_TYPE.ID = in_notification_type_id;
14:39:44  59  
14:39:44  60  	IF temp_type_count = 0 THEN
14:39:44  61  	  RAISE BAD_NOTIFICATION_TYPE_ID;
14:39:44  62  	END IF;
14:39:44  63  
14:39:44  64  	INSERT INTO NOTIFICATION (
14:39:44  65  	  ID,
14:39:44  66  	  ACCOUNT_ID,
14:39:44  67  	  GROUP_ID,
14:39:44  68  	  NOTIFICATION_TYPE_ID,
14:39:44  69  	  NOTIFICATION_STATUS_ID,
14:39:44  70  	  EMAIL_TEMPLATE_PARAMS,
14:39:44  71  	  UPDATE_DATE,
14:39:44  72  	  CREATE_DATE,
14:39:44  73  	  DATE_TO_NOTIFY
14:39:44  74  	) VALUES (
14:39:44  75  	  NOT_ID_SEQ.nextVal,
14:39:44  76  	  in_sender_account_id,
14:39:44  77  	  in_recipient_group_id,
14:39:44  78  	  in_notification_type_id,
14:39:44  79  	  NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING,
14:39:44  80  	  in_email_template_params,
14:39:44  81  	  var_create_date,
14:39:44  82  	  var_create_date,
14:39:44  83  	  in_date_to_notify
14:39:44  84  	);
14:39:44  85  
14:39:44  86  	--BEGIN
14:39:44  87  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIFICATION_HISTORY (
14:39:44  88  	--    in_account_id		  => 0, -- ACCOUNT_ID. Can we delete it?
14:39:44  89  	--    in_group_id		  => in_recipient_group_id,
14:39:44  90  	--    notification_reason_type_id => in_notification_type_id,
14:39:44  91  	--    notification_status_id	  => NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING,
14:39:44  92  	--    email_template_params	  => in_email_template_params,
14:39:44  93  	--    in_create_date		  => var_create_date
14:39:44  94  	--  );
14:39:44  95  	--  EXCEPTION
14:39:44  96  	--    WHEN OTHERS THEN
14:39:44  97  	--	EXCEPTION_MESSAGE := SQLERRM;
14:39:44  98  	--	RAISE CAN_NOT_CREATE_HISTORY;
14:39:44  99  	--END;
14:39:44 100  
14:39:44 101  EXCEPTION
14:39:44 102  WHEN BAD_NOTIFICATION_TYPE_ID THEN
14:39:44 103  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
14:39:44 104  	  SPROC_NAME, 'No such notification status');
14:39:44 105  WHEN CAN_NOT_CREATE_HISTORY THEN
14:39:44 106  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
14:39:44 107  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:39:44 108  WHEN OTHERS THEN
14:39:44 109  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:39:44 110  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:39:44 111  END ADD_NOTIFICATION;
14:39:44 112  
14:39:44 113  /******************************************************************************/
14:39:44 114  
14:39:44 115  PROCEDURE GET_PENDING_NOTIFICATIONS (
14:39:44 116  /*
14:39:44 117  Throws exceptions:
14:39:44 118  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44 119  */
14:39:44 120  	out_result_set OUT SYS_REFCURSOR
14:39:44 121  ) AS
14:39:44 122  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_PENDING_NOTIFICATIONS';
14:39:44 123  -- CONSTANTS
14:39:44 124  C_NOTIFICATION_COUNT_LIMIT CONSTANT NUMBER := 500;
14:39:44 125  BEGIN
14:39:44 126  	OPEN out_result_set FOR
14:39:44 127  SELECT * FROM
14:39:44 128  (
14:39:44 129  	SELECT
14:39:44 130  	  NOTIFICATION.ID
14:39:44 131  	FROM
14:39:44 132  	  NOTIFICATION
14:39:44 133  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
14:39:44 134  	WHERE
14:39:44 135  	  ROWNUM <= C_NOTIFICATION_COUNT_LIMIT*10
14:39:44 136  	  AND NOT EXISTS (
14:39:44 137  	    SELECT NULL
14:39:44 138  	    FROM OPS_OWNER.PROCESS_RETRY_THROTTLE
14:39:44 139  	    WHERE GENERIC_ID = NOTIFICATION.ID AND PROCESS_NAME = SPROC_NAME
14:39:44 140  	  )
14:39:44 141  	  AND (
14:39:44 142  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING
14:39:44 143  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_FAILED
14:39:44 144  	  )
14:39:44 145  	  AND (
14:39:44 146  	    NOTIFICATION.DATE_TO_NOTIFY IS NULL OR SYSDATE > NOTIFICATION.DATE_TO_NOTIFY
14:39:44 147  	  )ORDER BY dbms_random.value
14:39:44 148  ) WHERE
14:39:44 149  	ROWNUM <= C_NOTIFICATION_COUNT_LIMIT;
14:39:44 150  
14:39:44 151  EXCEPTION
14:39:44 152  WHEN OTHERS THEN
14:39:44 153  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:39:44 154  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:39:44 155  END GET_PENDING_NOTIFICATIONS;
14:39:44 156  
14:39:44 157  /******************************************************************************/
14:39:44 158  
14:39:44 159  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
14:39:44 160  /*
14:39:44 161  Throws exceptions:
14:39:44 162  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44 163  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44 164  */
14:39:44 165  	in_notification_id IN NUMBER
14:39:44 166  ) AS
14:39:44 167  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_NOTIFICATION_TIMESTAMP';
14:39:44 168  -- VARIABLES
14:39:44 169  temp_notification_id NUMBER;
14:39:44 170  -- EXCEPTIONS
14:39:44 171  BAD_NOTIFICATION_ID EXCEPTION;
14:39:44 172  BEGIN
14:39:44 173  
14:39:44 174  	BEGIN
14:39:44 175  	  SELECT
14:39:44 176  	    NOTIFICATION.ID into temp_notification_id
14:39:44 177  	  FROM
14:39:44 178  	    NOTIFICATION
14:39:44 179  	  WHERE
14:39:44 180  	    NOTIFICATION.ID = in_notification_id;
14:39:44 181  	  EXCEPTION
14:39:44 182  	    WHEN NO_DATA_FOUND THEN
14:39:44 183  	      RAISE BAD_NOTIFICATION_ID;
14:39:44 184  	END;
14:39:44 185  
14:39:44 186  	UPDATE
14:39:44 187  	  NOTIFICATION
14:39:44 188  	SET
14:39:44 189  	  NOTIFICATION.UPDATE_DATE = sysdate
14:39:44 190  	WHERE
14:39:44 191  	  NOTIFICATION.ID = in_notification_id;
14:39:44 192  
14:39:44 193  EXCEPTION
14:39:44 194  WHEN BAD_NOTIFICATION_ID THEN
14:39:44 195  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
14:39:44 196  	  SPROC_NAME, 'No such notification');
14:39:44 197  WHEN OTHERS THEN
14:39:44 198  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:39:44 199  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:39:44 200  END UPDATE_NOTIFICATION_TIMESTAMP;
14:39:44 201  
14:39:44 202  /******************************************************************************/
14:39:44 203  
14:39:44 204  PROCEDURE SET_NOTIFICATION_STATUS (
14:39:44 205  /*
14:39:44 206  Throws exceptions:
14:39:44 207  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44 208  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44 209  */
14:39:44 210  	in_notification_id	  IN NUMBER,
14:39:44 211  	in_notification_status_id IN NUMBER,
14:39:44 212  	in_error_message	  IN VARCHAR2
14:39:44 213  ) AS
14:39:44 214  SPROC_NAME CONSTANT VARCHAR2(32) := 'SET_NOTIFICATION_STATUS';
14:39:44 215  -- VARIABLES
14:39:44 216  var_group_id		NUMBER;
14:39:44 217  var_account_id		NUMBER;
14:39:44 218  var_notification_type_id	NUMBER;
14:39:44 219  var_email_template_params CLOB;
14:39:44 220  var_create_history_date	DATE := SYSDATE;
14:39:44 221  var_notification_status_id   NUMBER;
14:39:44 222  var_date_to_notify	DATE;
14:39:44 223  max_fails   NUMBER := 5;
14:39:44 224  num_fails   NUMBER;
14:39:44 225  -- EXCEPTIONS
14:39:44 226  BAD_NOTIFICATION_ID	 EXCEPTION;
14:39:44 227  BAD_NOTIFICATION_STATUS_ID EXCEPTION;
14:39:44 228  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
14:39:44 229  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
14:39:44 230  BEGIN
14:39:44 231  
14:39:44 232  	IF in_notification_status_id != NOTIFICATION_STATUSES_V16.NOTIFICATION_SENT
14:39:44 233  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING
14:39:44 234  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V16.NOTIFICATION_FAILED THEN
14:39:44 235  	  RAISE BAD_NOTIFICATION_STATUS_ID;
14:39:44 236  	END IF;
14:39:44 237  
14:39:44 238  	BEGIN
14:39:44 239  	  SELECT
14:39:44 240  	    NOTIFICATION.GROUP_ID,
14:39:44 241  	    NOTIFICATION.ACCOUNT_ID,
14:39:44 242  	    NOTIFICATION.NOTIFICATION_TYPE_ID,
14:39:44 243  	    NOTIFICATION.NOTIFICATION_STATUS_ID,
14:39:44 244  	    NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
14:39:44 245  	    NOTIFICATION.DATE_TO_NOTIFY
14:39:44 246  	    into
14:39:44 247  	    var_group_id,
14:39:44 248  	    var_account_id,
14:39:44 249  	    var_notification_type_id,
14:39:44 250  	    var_notification_status_id,
14:39:44 251  	    var_email_template_params,
14:39:44 252  	    var_date_to_notify
14:39:44 253  	  FROM
14:39:44 254  	    NOTIFICATION
14:39:44 255  	  WHERE
14:39:44 256  	    NOTIFICATION.ID = in_notification_id;
14:39:44 257  	  EXCEPTION
14:39:44 258  	    WHEN NO_DATA_FOUND THEN
14:39:44 259  	      RAISE BAD_NOTIFICATION_ID;
14:39:44 260  	END;
14:39:44 261  
14:39:44 262  	BEGIN
14:39:44 263  	  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIFICATION_HISTORY (
14:39:44 264  	    in_notification_id		=> in_notification_id,
14:39:44 265  	    in_account_id		=> var_account_id,
14:39:44 266  	    in_group_id 		=> var_group_id,
14:39:44 267  	    notification_reason_type_id => var_notification_type_id,
14:39:44 268  	    notification_status_id	=> var_notification_status_id,
14:39:44 269  	    email_template_params	=> var_email_template_params,
14:39:44 270  	    in_create_date		=> var_create_history_date,
14:39:44 271  	    in_date_to_notify		=> var_date_to_notify
14:39:44 272  	  );
14:39:44 273  	  EXCEPTION
14:39:44 274  	    WHEN OTHERS THEN
14:39:44 275  	      EXCEPTION_MESSAGE := SQLERRM;
14:39:44 276  	      RAISE CAN_NOT_CREATE_HISTORY;
14:39:44 277  	END;
14:39:44 278  
14:39:44 279  	UPDATE
14:39:44 280  	  NOTIFICATION
14:39:44 281  	SET
14:39:44 282  	  NOTIFICATION.NOTIFICATION_STATUS_ID = in_notification_status_id,
14:39:44 283  	  NOTIFICATION.UPDATE_DATE = sysdate
14:39:44 284  	WHERE
14:39:44 285  	  NOTIFICATION.ID = in_notification_id;
14:39:44 286  
14:39:44 287  	IF ( in_error_message IS NOT NULL ) THEN
14:39:44 288  	  ADD_NOTIFICATION_FAILURE(
14:39:44 289  	    in_notification_id => in_notification_id,
14:39:44 290  	    in_error_message => in_error_message
14:39:44 291  	  );
14:39:44 292  	END IF;
14:39:44 293  
14:39:44 294  	SELECT COUNT(1) INTO num_fails
14:39:44 295  	FROM NOTIFICATION_FAILURE
14:39:44 296  	WHERE NOTIFICATION_ID = in_notification_id;
14:39:44 297  
14:39:44 298  	IF (in_notification_status_id = NOTIFICATION_STATUSES_V16.NOTIFICATION_SENT OR num_fails >= max_fails) then
14:39:44 299  	  FOR REC IN (
14:39:44 300  	      SELECT ID, NOTIFICATION_ID, ERROR_MESSAGE, CREATE_DATE
14:39:44 301  	      FROM NOTIFICATION_FAILURE
14:39:44 302  	      WHERE NOTIFICATION_ID = in_notification_id
14:39:44 303  	      ) LOOP
14:39:44 304  	      BEGIN
14:39:44 305  		OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIF_FAILURE_HISTORY(
14:39:44 306  		  in_error_message	   => REC.ERROR_MESSAGE,
14:39:44 307  		  in_notification_id	   => REC.NOTIFICATION_ID,
14:39:44 308  		  in_create_date	   => REC.CREATE_DATE
14:39:44 309  		);
14:39:44 310  		EXCEPTION
14:39:44 311  		  WHEN OTHERS THEN
14:39:44 312  		    EXCEPTION_MESSAGE := SQLERRM;
14:39:44 313  		    RAISE CAN_NOT_CREATE_HISTORY;
14:39:44 314  	      END;
14:39:44 315  	  END LOOP;
14:39:44 316  	  DELETE FROM NOTIFICATION_FAILURE WHERE NOTIFICATION_ID = in_notification_id;
14:39:44 317  
14:39:44 318  	  BEGIN
14:39:44 319  	    SELECT
14:39:44 320  	      NOTIFICATION.GROUP_ID,
14:39:44 321  	      NOTIFICATION.ACCOUNT_ID,
14:39:44 322  	      NOTIFICATION.NOTIFICATION_TYPE_ID,
14:39:44 323  	      NOTIFICATION.NOTIFICATION_STATUS_ID,
14:39:44 324  	      NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
14:39:44 325  	      NOTIFICATION.DATE_TO_NOTIFY
14:39:44 326  	      into
14:39:44 327  	      var_group_id,
14:39:44 328  	      var_account_id,
14:39:44 329  	      var_notification_type_id,
14:39:44 330  	      var_notification_status_id,
14:39:44 331  	      var_email_template_params,
14:39:44 332  	      var_date_to_notify
14:39:44 333  	    FROM
14:39:44 334  	      NOTIFICATION
14:39:44 335  	    WHERE
14:39:44 336  	      NOTIFICATION.ID = in_notification_id;
14:39:44 337  	    EXCEPTION
14:39:44 338  	      WHEN NO_DATA_FOUND THEN
14:39:44 339  		RAISE BAD_NOTIFICATION_ID;
14:39:44 340  	  END;
14:39:44 341  
14:39:44 342  	  BEGIN
14:39:44 343  	    OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIFICATION_HISTORY (
14:39:44 344  	      in_notification_id	  => in_notification_id,
14:39:44 345  	      in_account_id		  => var_account_id,
14:39:44 346  	      in_group_id		  => var_group_id,
14:39:44 347  	      notification_reason_type_id => var_notification_type_id,
14:39:44 348  	      notification_status_id	  => var_notification_status_id,
14:39:44 349  	      email_template_params	  => var_email_template_params,
14:39:44 350  	      in_create_date		  => var_create_history_date,
14:39:44 351  	      in_date_to_notify 	  => var_date_to_notify
14:39:44 352  	    );
14:39:44 353  	    EXCEPTION
14:39:44 354  	      WHEN OTHERS THEN
14:39:44 355  		EXCEPTION_MESSAGE := SQLERRM;
14:39:44 356  		RAISE CAN_NOT_CREATE_HISTORY;
14:39:44 357  	  END;
14:39:44 358  
14:39:44 359  	  DELETE FROM NOTIFICATION WHERE ID = in_notification_id;
14:39:44 360  
14:39:44 361  	END IF;
14:39:44 362  	commit;
14:39:44 363  
14:39:44 364  EXCEPTION
14:39:44 365  WHEN BAD_NOTIFICATION_STATUS_ID THEN
14:39:44 366  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
14:39:44 367  	  SPROC_NAME, 'Bad notification status');
14:39:44 368  WHEN BAD_NOTIFICATION_ID THEN
14:39:44 369  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
14:39:44 370  	  SPROC_NAME, 'No such notification');
14:39:44 371  WHEN CAN_NOT_CREATE_HISTORY THEN
14:39:44 372  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
14:39:44 373  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:39:44 374  WHEN OTHERS THEN
14:39:44 375  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:39:44 376  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:39:44 377  END SET_NOTIFICATION_STATUS;
14:39:44 378  
14:39:44 379  /******************************************************************************/
14:39:44 380  
14:39:44 381  PROCEDURE ADD_NOTIFICATION_FAILURE (
14:39:44 382  /*
14:39:44 383  Throws exceptions:
14:39:44 384  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44 385  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44 386  */
14:39:44 387  	in_notification_id IN NUMBER,
14:39:44 388  	in_error_message   IN VARCHAR2
14:39:44 389  ) AS
14:39:44 390  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION_FAILURE';
14:39:44 391  -- VARIABLES
14:39:44 392  temp_notification_id NUMBER;
14:39:44 393  var_create_date	   DATE := SYSDATE;
14:39:44 394  -- EXCEPTIONS
14:39:44 395  BAD_NOTIFICATION_ID	 EXCEPTION;
14:39:44 396  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
14:39:44 397  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
14:39:44 398  BEGIN
14:39:44 399  
14:39:44 400  	BEGIN
14:39:44 401  	  SELECT
14:39:44 402  	    NOTIFICATION.ID into temp_notification_id
14:39:44 403  	  FROM
14:39:44 404  	    NOTIFICATION
14:39:44 405  	  WHERE
14:39:44 406  	    NOTIFICATION.ID = in_notification_id;
14:39:44 407  	  EXCEPTION
14:39:44 408  	    WHEN NO_DATA_FOUND THEN
14:39:44 409  	      RAISE BAD_NOTIFICATION_ID;
14:39:44 410  	END;
14:39:44 411  
14:39:44 412  	INSERT INTO NOTIFICATION_FAILURE (
14:39:44 413  	  ID,
14:39:44 414  	  NOTIFICATION_ID,
14:39:44 415  	  ERROR_MESSAGE,
14:39:44 416  	  CREATE_DATE
14:39:44 417  	) VALUES (
14:39:44 418  	  NOTF_ID_SEQ.nextVal,
14:39:44 419  	  in_notification_id,
14:39:44 420  	  in_error_message,
14:39:44 421  	  sysdate
14:39:44 422  	);
14:39:44 423  
14:39:44 424  	--BEGIN
14:39:44 425  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V16.CREATE_NOTIF_FAILURE_HISTORY(
14:39:44 426  	--    in_error_message	       => in_error_message,
14:39:44 427  	--    in_notification_queue_id => in_notification_id,
14:39:44 428  	--    in_create_date	       => var_create_date
14:39:44 429  	--  );
14:39:44 430  	--  EXCEPTION
14:39:44 431  	--    WHEN OTHERS THEN
14:39:44 432  	--	EXCEPTION_MESSAGE := SQLERRM;
14:39:44 433  	--	RAISE CAN_NOT_CREATE_HISTORY;
14:39:44 434  	--END;
14:39:44 435  
14:39:44 436  EXCEPTION
14:39:44 437  WHEN BAD_NOTIFICATION_ID THEN
14:39:44 438  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND,
14:39:44 439  	  SPROC_NAME, 'No such notification');
14:39:44 440  WHEN CAN_NOT_CREATE_HISTORY THEN
14:39:44 441  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.INTERNAL_ERROR,
14:39:44 442  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:39:44 443  WHEN OTHERS THEN
14:39:44 444  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:39:44 445  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:39:44 446  END ADD_NOTIFICATION_FAILURE;
14:39:44 447  
14:39:44 448  /******************************************************************************/
14:39:44 449  
14:39:44 450  PROCEDURE LOCK_PENDING_NOTIFICATION (
14:39:44 451  /*
14:39:44 452  Result: GLOBAL_STATUSES.TRUE if notification locked
14:39:44 453  GLOBA_STATUSES.FALSE - else
14:39:44 454  */
14:39:44 455  	in_notification_id IN NUMBER,
14:39:44 456  	out_lock_status    OUT NUMBER
14:39:44 457  ) AS
14:39:44 458  SPROC_NAME CONSTANT VARCHAR2(25) := 'LOCK_PENDING_NOTIFICATION';
14:39:44 459  -- VARIABLE
14:39:44 460  temp_notification_id NUMBER;
14:39:44 461  BEGIN
14:39:44 462  	SELECT
14:39:44 463  	  NOTIFICATION.ID into temp_notification_id
14:39:44 464  	FROM
14:39:44 465  	  NOTIFICATION
14:39:44 466  	WHERE
14:39:44 467  	  NOTIFICATION.ID = in_notification_id
14:39:44 468  	  AND (
14:39:44 469  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_PENDING
14:39:44 470  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V16.NOTIFICATION_FAILED
14:39:44 471  	  )
14:39:44 472  	FOR UPDATE;
14:39:44 473  
14:39:44 474  	out_lock_status := 1;
14:39:44 475  
14:39:44 476  EXCEPTION
14:39:44 477  WHEN NO_DATA_FOUND THEN
14:39:44 478  	out_lock_status := 0;
14:39:44 479  WHEN OTHERS THEN
14:39:44 480  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:39:44 481  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:39:44 482  END LOCK_PENDING_NOTIFICATION;
14:39:44 483  
14:39:44 484  /******************************************************************************/
14:39:44 485  
14:39:44 486  PROCEDURE GET_NOTIFICATION_DATA (
14:39:44 487  	in_notification_id IN NUMBER,
14:39:44 488  	out_result_set	   OUT SYS_REFCURSOR
14:39:44 489  ) AS
14:39:44 490  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_NOTIFICATION_DATA';
14:39:44 491  BEGIN
14:39:44 492  	OPEN out_result_set FOR
14:39:44 493  	SELECT
14:39:44 494  	  NOTIFICATION.ID,
14:39:44 495  	  NOTIFICATION.GROUP_ID,
14:39:44 496  	  NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
14:39:44 497  	  NOTIFICATION.NOTIFICATION_STATUS_ID,
14:39:44 498  	  NOTIFICATION.CREATE_DATE,
14:39:44 499  	  NOTIFICATION.UPDATE_DATE,
14:39:44 500  	  NOTIFICATION.NOTIFICATION_TYPE_ID,
14:39:44 501  	  NOTIFICATION_TYPE.VALUE as "TYPE_VALUE",
14:39:44 502  	  NOTIFICATION_TYPE.TEMPLATE_URL
14:39:44 503  	FROM
14:39:44 504  	  NOTIFICATION
14:39:44 505  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
14:39:44 506  	WHERE
14:39:44 507  	  NOTIFICATION.ID = in_notification_id;
14:39:44 508  
14:39:44 509  EXCEPTION
14:39:44 510  WHEN OTHERS THEN
14:39:44 511  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:39:44 512  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:39:44 513  END GET_NOTIFICATION_DATA;
14:39:44 514  
14:39:44 515  END PROCS_NOTIFICATION_V16;
14:39:44 516  .
14:39:44 SQL> /

Package body created.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> -- DDL for package PROCS_PROCESS_RETRY_THROTTLE
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_PROCESS_RETRY_V16" AS
14:39:44   2  
14:39:44   3  PROCEDURE LOG_RETRY(
14:39:44   4  	  in_process_name IN VARCHAR2,
14:39:44   5  	  in_generic_id   IN NUMBER,
14:39:44   6  	  in_date	  IN VARCHAR2,
14:39:44   7  	  out_success	   OUT NUMBER
14:39:44   8  );
14:39:44   9  
14:39:44  10  PROCEDURE DELETE_RETRY(
14:39:44  11  	  in_process_name IN VARCHAR2,
14:39:44  12  	  in_remove_minutes  IN NUMBER
14:39:44  13  );
14:39:44  14  
14:39:44  15  PROCEDURE GET_SYSDATE (
14:39:44  16  	  out_date OUT VARCHAR2
14:39:44  17  );
14:39:44  18  
14:39:44  19  END PROCS_PROCESS_RETRY_V16;
14:39:44  20  .
14:39:44 SQL> /

Package created.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_PROCESS_RETRY_V16" AS
14:39:44   2  
14:39:44   3  PROCEDURE LOG_RETRY(
14:39:44   4  	  in_process_name IN VARCHAR2,
14:39:44   5  	  in_generic_id   IN NUMBER,
14:39:44   6  	  in_date	  IN VARCHAR2,
14:39:44   7  	  out_success	   OUT NUMBER
14:39:44   8  ) AS
14:39:44   9  SPROC_NAME CONSTANT VARCHAR2(32) := 'PROCS_PROCESS_RETRY_V16';
14:39:44  10  BEGIN
14:39:44  11  
14:39:44  12  	out_success := 1;
14:39:44  13  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
14:39:44  14  	VALUES (in_process_name, in_generic_id, 1, to_date(in_date, 'DD-Mon-YYYY HH24:MI:SS'), sysdate);
14:39:44  15  	commit;
14:39:44  16  EXCEPTION
14:39:44  17  WHEN DUP_VAL_ON_INDEX THEN
14:39:44  18  	rollback;
14:39:44  19  	out_success := 0;
14:39:44  20  WHEN OTHERS THEN
14:39:44  21  	rollback;
14:39:44  22  	PROCS_COMMON_V16.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:39:44  23  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:39:44  24  
14:39:44  25  END;
14:39:44  26  
14:39:44  27  PROCEDURE DELETE_RETRY(
14:39:44  28  	  in_process_name IN VARCHAR2,
14:39:44  29  	  in_remove_minutes  IN NUMBER
14:39:44  30  ) AS
14:39:44  31  BEGIN
14:39:44  32  
14:39:44  33  delete from PROCESS_RETRY_THROTTLE
14:39:44  34  where
14:39:44  35  	process_name = in_process_name and
14:39:44  36  	create_date <= sysdate-in_remove_minutes/1440;
14:39:44  37  commit;
14:39:44  38  END;
14:39:44  39  
14:39:44  40  PROCEDURE GET_SYSDATE (
14:39:44  41  	out_date  OUT VARCHAR2
14:39:44  42  ) AS
14:39:44  43  BEGIN
14:39:44  44  	SELECT to_char(SYSDATE, 'DD-Mon-YYYY HH24:MI:SS') into out_date from dual;
14:39:44  45  END;
14:39:44  46  
14:39:44  47  END PROCS_PROCESS_RETRY_V16;
14:39:44  48  .
14:39:44 SQL> /

Package body created.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> -- DDL for package PROCS_SYSTEM
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_SYSTEM_V16" AS
14:39:44   2  
14:39:44   3  PROCEDURE INCREMENT_VERSION;
14:39:44   4  
14:39:44   5  PROCEDURE CHECK_VERSION(
14:39:44   6  	  in_vers    IN NUMBER,
14:39:44   7  	  out_result OUT NUMBER
14:39:44   8  );
14:39:44   9  
14:39:44  10  END PROCS_SYSTEM_V16;
14:39:44  11  .
14:39:44 SQL> /

Package created.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SYSTEM_V16" AS
14:39:44   2  
14:39:44   3  PROCEDURE INCREMENT_VERSION
14:39:44   4  /*
14:39:44   5  Throws exceptions:
14:39:44   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44   7  */
14:39:44   8  AS
14:39:44   9  BEGIN
14:39:44  10  
14:39:44  11  	UPDATE SYS_VERSION SET version=version+1;
14:39:44  12  
14:39:44  13  EXCEPTION
14:39:44  14  WHEN OTHERS THEN
14:39:44  15  	RAISE_APPLICATION_ERROR(CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR,
14:39:44  16  	  'Unknown error');
14:39:44  17  END INCREMENT_VERSION;
14:39:44  18  
14:39:44  19  /*************************************************************/
14:39:44  20  
14:39:44  21  PROCEDURE CHECK_VERSION(
14:39:44  22  	  in_vers    IN NUMBER,
14:39:44  23  	  out_result OUT NUMBER
14:39:44  24  ) AS
14:39:44  25  	current_version NUMBER;
14:39:44  26  BEGIN
14:39:44  27  	SELECT version INTO current_version FROM SYS_VERSION;
14:39:44  28  	IF(current_version != in_vers) THEN
14:39:44  29  	  out_result := 1;
14:39:44  30  	ELSE
14:39:44  31  	  out_result := 0;
14:39:44  32  	END IF;
14:39:44  33  	EXCEPTION
14:39:44  34  	      WHEN OTHERS THEN
14:39:44  35  	      NULL;
14:39:44  36  END CHECK_VERSION;
14:39:44  37  
14:39:44  38  END PROCS_SYSTEM_V16;
14:39:44  39  .
14:39:44 SQL> /

Package body created.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> -- DDL for package PUBLIC_PROCS_CLIENT
14:39:44 SQL> --------------------------------------------------------------------------------
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_CLIENT_V16" AS
14:39:44   2  
14:39:44   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
14:39:44   4  /*
14:39:44   5  Throws exceptions:
14:39:44   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44   8  */
14:39:44   9  	in_notification_type_name IN VARCHAR2,
14:39:44  10  	out_notification_type_id  OUT NUMBER
14:39:44  11  );
14:39:44  12  
14:39:44  13  PROCEDURE ADD_NOTIFICATION (
14:39:44  14  /*
14:39:44  15  Throws exceptions:
14:39:44  16  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44  17  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44  18  */
14:39:44  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
14:39:44  20  	in_recipient_group_id	 IN NUMBER,
14:39:44  21  	in_notification_type_id  IN NUMBER,
14:39:44  22  	in_date_to_notify	 IN DATE,
14:39:44  23  	in_email_template_params IN CLOB
14:39:44  24  );
14:39:44  25  
14:39:44  26  END PUBLIC_PROCS_CLIENT_V16;
14:39:44  27  .
14:39:44 SQL> /

Package created.

Elapsed: 00:00:00.00
14:39:44 SQL> 
14:39:44 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_CLIENT_V16" AS
14:39:44   2  
14:39:44   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
14:39:44   4  /*
14:39:44   5  Throws exceptions:
14:39:44   6  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44   7  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44   8  */
14:39:44   9  	in_notification_type_name IN VARCHAR2,
14:39:44  10  	out_notification_type_id  OUT NUMBER
14:39:44  11  ) AS
14:39:44  12  BEGIN
14:39:44  13  	PROCS_NOTIFICATION_V16.GET_NOTIFICATION_TYPE_BY_NAME (
14:39:44  14  	  in_notification_type_name,
14:39:44  15  	  out_notification_type_id
14:39:44  16  	);
14:39:44  17  END;
14:39:44  18  
14:39:44  19  /*****************************************************************/
14:39:44  20  
14:39:44  21  PROCEDURE ADD_NOTIFICATION (
14:39:44  22  /*
14:39:44  23  Throws exceptions:
14:39:44  24  CORE_OWNER.APP_EXCEPTION_CODES_V16.NOT_FOUND
14:39:44  25  CORE_OWNER.APP_EXCEPTION_CODES_V16.UNKNOWN_ERROR
14:39:44  26  */
14:39:44  27  	in_sender_account_id	 IN NUMBER DEFAULT 0,
14:39:44  28  	in_recipient_group_id	 IN NUMBER,
14:39:44  29  	in_notification_type_id  IN NUMBER,
14:39:44  30  	in_date_to_notify	 IN DATE,
14:39:44  31  	in_email_template_params IN CLOB
14:39:44  32  ) AS
14:39:44  33  BEGIN
14:39:44  34  	PROCS_NOTIFICATION_V16.ADD_NOTIFICATION (
14:39:44  35  	  in_sender_account_id,
14:39:44  36  	  in_recipient_group_id,
14:39:44  37  	  in_notification_type_id,
14:39:44  38  	  in_date_to_notify,
14:39:44  39  	  in_email_template_params
14:39:44  40  	);
14:39:44  41  END;
14:39:44  42  
14:39:44  43  END PUBLIC_PROCS_CLIENT_V16;
14:39:44  44  .
14:39:44 SQL> /

Package body created.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V16 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V16 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V16 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V16 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V16 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V16 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> 
14:39:44 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V16 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_poller_app;

Grant succeeded.

Elapsed: 00:00:00.02
14:39:44 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V16 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:39:44 SQL> 
14:39:44 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.10
14:39:44 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.02
14:39:44 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.02
14:39:44 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.02
14:39:44 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.03
14:39:44 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.02
14:39:44 SQL> 
14:39:44 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.02
14:39:44 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> 
14:39:44 SQL> grant select, insert, update, delete ON OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> grant select ON OPS_OWNER.NOTTID_SEQ to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:39:44 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
14:39:44 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECST2@rac01.stg.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: nytd_oracledba@nytimes.com
Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.stg.ewr1.nytimes.com
        SID: ECST2
        Schema: ops_owner
        Migration: 3-release-1.11.0-all
        SVN Revision: 10148
        Duration: 1 sec.
        