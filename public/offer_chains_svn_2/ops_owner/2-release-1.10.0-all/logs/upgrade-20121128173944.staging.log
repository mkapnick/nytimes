17:39:45 SQL> @/dbbackups/ECST/migrations/ops_owner/2-release-1.10.0-all/upgrade.sql
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> -- DDL for package NOTIFICATION_STATUSES
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V15" AS
17:39:45   2  
17:39:45   3  ----
17:39:45   4  -- NOTIFICATION STATUSES
17:39:45   5  
17:39:45   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
17:39:45   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
17:39:45   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
17:39:45   9  
17:39:45  10  END NOTIFICATION_STATUSES_V15;
17:39:45  11  .
17:39:45 SQL> /

Package created.

Elapsed: 00:00:00.03
17:39:45 SQL> 
17:39:45 SQL> 
17:39:45 SQL> 
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> -- DDL for package PROCS_COMMON
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V15" AS
17:39:45   2  
17:39:45   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
17:39:45   4  	in_sproc_name	    IN VARCHAR2,
17:39:45   5  	in_error_message    IN VARCHAR2,
17:39:45   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
17:39:45   7  ) RETURN VARCHAR2;
17:39:45   8  
17:39:45   9  PROCEDURE THROW_EXCEPTION(
17:39:45  10  	in_exception_code   IN NUMBER,
17:39:45  11  	in_sproc_name	    IN VARCHAR2,
17:39:45  12  	in_error_message    IN VARCHAR2,
17:39:45  13  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
17:39:45  14  );
17:39:45  15  
17:39:45  16  END PROCS_COMMON_V15;
17:39:45  17  .
17:39:45 SQL> /

Package created.

Elapsed: 00:00:00.02
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V15" AS
17:39:45   2  
17:39:45   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
17:39:45   4  	in_sproc_name	    IN VARCHAR2,
17:39:45   5  	in_error_message    IN VARCHAR2,
17:39:45   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
17:39:45   7  ) RETURN VARCHAR2 AS
17:39:45   8  BEGIN
17:39:45   9  	IF in_error_stacktrace IS NOT NULL THEN
17:39:45  10  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || chr(10) || in_error_stacktrace;
17:39:45  11  	END IF;
17:39:45  12  	RETURN
17:39:45  13  	  in_sproc_name || ': ' || in_error_message;
17:39:45  14  END GENERATE_EXCEPTION_MESSAGE;
17:39:45  15  
17:39:45  16  /******************************************************************************/
17:39:45  17  
17:39:45  18  PROCEDURE THROW_EXCEPTION(
17:39:45  19  	in_exception_code   IN NUMBER,
17:39:45  20  	in_sproc_name	    IN VARCHAR2,
17:39:45  21  	in_error_message    IN VARCHAR2,
17:39:45  22  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
17:39:45  23  ) AS
17:39:45  24  BEGIN
17:39:45  25  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
17:39:45  26  END;
17:39:45  27  
17:39:45  28  END PROCS_COMMON_V15;
17:39:45  29  .
17:39:45 SQL> /

Package body created.

Elapsed: 00:00:00.02
17:39:45 SQL> 
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> -- DDL for package PROCS_NOTIFICATION
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE "PROCS_NOTIFICATION_V15" AS
17:39:45   2  
17:39:45   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
17:39:45   4  /*
17:39:45   5  Throws exceptions:
17:39:45   6  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45   7  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45   8  */
17:39:45   9  	in_notification_type_name IN VARCHAR2,
17:39:45  10  	out_notification_type_id  OUT NUMBER
17:39:45  11  );
17:39:45  12  
17:39:45  13  PROCEDURE ADD_NOTIFICATION (
17:39:45  14  /*
17:39:45  15  Throws exceptions:
17:39:45  16  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45  17  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45  18  */
17:39:45  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
17:39:45  20  	in_recipient_group_id	 IN NUMBER,
17:39:45  21  	in_notification_type_id  IN NUMBER,
17:39:45  22  	in_date_to_notify	 IN DATE,
17:39:45  23  	in_email_template_params IN CLOB
17:39:45  24  );
17:39:45  25  
17:39:45  26  PROCEDURE GET_PENDING_NOTIFICATIONS (
17:39:45  27  /*
17:39:45  28  Throws exceptions:
17:39:45  29  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45  30  */
17:39:45  31  	out_result_set OUT SYS_REFCURSOR
17:39:45  32  );
17:39:45  33  
17:39:45  34  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
17:39:45  35  /*
17:39:45  36  Throws exceptions:
17:39:45  37  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45  38  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45  39  */
17:39:45  40  	in_notification_id IN NUMBER
17:39:45  41  );
17:39:45  42  
17:39:45  43  PROCEDURE SET_NOTIFICATION_STATUS (
17:39:45  44  /*
17:39:45  45  Throws exceptions:
17:39:45  46  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45  47  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45  48  */
17:39:45  49  	in_notification_id	  IN NUMBER,
17:39:45  50  	in_notification_status_id IN NUMBER,
17:39:45  51  	in_error_message	  IN VARCHAR2
17:39:45  52  );
17:39:45  53  
17:39:45  54  PROCEDURE ADD_NOTIFICATION_FAILURE (
17:39:45  55  /*
17:39:45  56  Throws exceptions:
17:39:45  57  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45  58  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45  59  */
17:39:45  60  	in_notification_id IN NUMBER,
17:39:45  61  	in_error_message   IN VARCHAR2
17:39:45  62  );
17:39:45  63  
17:39:45  64  PROCEDURE LOCK_PENDING_NOTIFICATION (
17:39:45  65  /*
17:39:45  66  Result: 1 if notification locked
17:39:45  67  2 - else
17:39:45  68  */
17:39:45  69  	in_notification_id IN NUMBER,
17:39:45  70  	out_lock_status    OUT NUMBER
17:39:45  71  );
17:39:45  72  
17:39:45  73  PROCEDURE GET_NOTIFICATION_DATA (
17:39:45  74  	in_notification_id IN NUMBER,
17:39:45  75  	out_result_set	   OUT SYS_REFCURSOR
17:39:45  76  );
17:39:45  77  
17:39:45  78  END PROCS_NOTIFICATION_V15;
17:39:45  79  .
17:39:45 SQL> /

Package created.

Elapsed: 00:00:00.03
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_NOTIFICATION_V15" AS
17:39:45   2  
17:39:45   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
17:39:45   4  /*
17:39:45   5  Throws exceptions:
17:39:45   6  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45   7  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45   8  */
17:39:45   9  	in_notification_type_name IN VARCHAR2,
17:39:45  10  	out_notification_type_id  OUT NUMBER
17:39:45  11  ) AS
17:39:45  12  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NOTIFICATION_TYPE_BY_NAME';
17:39:45  13  BEGIN
17:39:45  14  	SELECT
17:39:45  15  	  NOTIFICATION_TYPE.ID into out_notification_type_id
17:39:45  16  	FROM
17:39:45  17  	  NOTIFICATION_TYPE
17:39:45  18  	WHERE
17:39:45  19  	  NOTIFICATION_TYPE.VALUE = in_notification_type_name;
17:39:45  20  EXCEPTION
17:39:45  21  WHEN NO_DATA_FOUND THEN
17:39:45  22  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
17:39:45  23  	  SPROC_NAME, 'No such type');
17:39:45  24  WHEN OTHERS THEN
17:39:45  25  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
17:39:45  26  	  SPROC_NAME, 'Unknown error', SQLERRM);
17:39:45  27  END GET_NOTIFICATION_TYPE_BY_NAME;
17:39:45  28  
17:39:45  29  /******************************************************************/
17:39:45  30  
17:39:45  31  PROCEDURE ADD_NOTIFICATION (
17:39:45  32  /*
17:39:45  33  Throws exceptions:
17:39:45  34  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45  35  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45  36  */
17:39:45  37  	in_sender_account_id	 IN NUMBER DEFAULT 0,
17:39:45  38  	in_recipient_group_id	 IN NUMBER,
17:39:45  39  	in_notification_type_id  IN NUMBER,
17:39:45  40  	in_date_to_notify	 IN DATE,
17:39:45  41  	in_email_template_params IN CLOB
17:39:45  42  ) AS
17:39:45  43  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION';
17:39:45  44  -- VARIABLES
17:39:45  45  temp_type_count NUMBER;
17:39:45  46  var_create_date DATE := SYSDATE;
17:39:45  47  -- EXCEPTIONS
17:39:45  48  BAD_NOTIFICATION_TYPE_ID EXCEPTION;
17:39:45  49  CAN_NOT_CREATE_HISTORY   EXCEPTION;
17:39:45  50  EXCEPTION_MESSAGE        VARCHAR2(1024);
17:39:45  51  BEGIN
17:39:45  52  
17:39:45  53  	SELECT
17:39:45  54  	  COUNT(*) into temp_type_count
17:39:45  55  	FROM
17:39:45  56  	  NOTIFICATION_TYPE
17:39:45  57  	WHERE
17:39:45  58  	  NOTIFICATION_TYPE.ID = in_notification_type_id;
17:39:45  59  
17:39:45  60  	IF temp_type_count = 0 THEN
17:39:45  61  	  RAISE BAD_NOTIFICATION_TYPE_ID;
17:39:45  62  	END IF;
17:39:45  63  
17:39:45  64  	INSERT INTO NOTIFICATION (
17:39:45  65  	  ID,
17:39:45  66  	  ACCOUNT_ID,
17:39:45  67  	  GROUP_ID,
17:39:45  68  	  NOTIFICATION_TYPE_ID,
17:39:45  69  	  NOTIFICATION_STATUS_ID,
17:39:45  70  	  EMAIL_TEMPLATE_PARAMS,
17:39:45  71  	  UPDATE_DATE,
17:39:45  72  	  CREATE_DATE,
17:39:45  73  	  DATE_TO_NOTIFY
17:39:45  74  	) VALUES (
17:39:45  75  	  NOT_ID_SEQ.nextVal,
17:39:45  76  	  in_sender_account_id,
17:39:45  77  	  in_recipient_group_id,
17:39:45  78  	  in_notification_type_id,
17:39:45  79  	  NOTIFICATION_STATUSES_V15.NOTIFICATION_PENDING,
17:39:45  80  	  in_email_template_params,
17:39:45  81  	  var_create_date,
17:39:45  82  	  var_create_date,
17:39:45  83  	  in_date_to_notify
17:39:45  84  	);
17:39:45  85  
17:39:45  86  	--BEGIN
17:39:45  87  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V15.CREATE_NOTIFICATION_HISTORY (
17:39:45  88  	--    in_account_id		  => 0, -- ACCOUNT_ID. Can we delete it?
17:39:45  89  	--    in_group_id		  => in_recipient_group_id,
17:39:45  90  	--    notification_reason_type_id => in_notification_type_id,
17:39:45  91  	--    notification_status_id	  => NOTIFICATION_STATUSES_V15.NOTIFICATION_PENDING,
17:39:45  92  	--    email_template_params	  => in_email_template_params,
17:39:45  93  	--    in_create_date		  => var_create_date
17:39:45  94  	--  );
17:39:45  95  	--  EXCEPTION
17:39:45  96  	--    WHEN OTHERS THEN
17:39:45  97  	--	EXCEPTION_MESSAGE := SQLERRM;
17:39:45  98  	--	RAISE CAN_NOT_CREATE_HISTORY;
17:39:45  99  	--END;
17:39:45 100  
17:39:45 101  EXCEPTION
17:39:45 102  WHEN BAD_NOTIFICATION_TYPE_ID THEN
17:39:45 103  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
17:39:45 104  	  SPROC_NAME, 'No such notification status');
17:39:45 105  WHEN CAN_NOT_CREATE_HISTORY THEN
17:39:45 106  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.INTERNAL_ERROR,
17:39:45 107  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
17:39:45 108  WHEN OTHERS THEN
17:39:45 109  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
17:39:45 110  	  SPROC_NAME, 'Unknown error', SQLERRM);
17:39:45 111  END ADD_NOTIFICATION;
17:39:45 112  
17:39:45 113  /******************************************************************************/
17:39:45 114  
17:39:45 115  PROCEDURE GET_PENDING_NOTIFICATIONS (
17:39:45 116  /*
17:39:45 117  Throws exceptions:
17:39:45 118  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45 119  */
17:39:45 120  	out_result_set OUT SYS_REFCURSOR
17:39:45 121  ) AS
17:39:45 122  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_PENDING_NOTIFICATIONS';
17:39:45 123  -- CONSTANTS
17:39:45 124  C_NOTIFICATION_COUNT_LIMIT CONSTANT NUMBER := 500;
17:39:45 125  BEGIN
17:39:45 126  	OPEN out_result_set FOR
17:39:45 127  SELECT * FROM
17:39:45 128  (
17:39:45 129  	SELECT
17:39:45 130  	  NOTIFICATION.ID
17:39:45 131  	FROM
17:39:45 132  	  NOTIFICATION
17:39:45 133  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
17:39:45 134  	WHERE
17:39:45 135  	  ROWNUM <= C_NOTIFICATION_COUNT_LIMIT*10
17:39:45 136  	  AND NOT EXISTS (
17:39:45 137  	    SELECT NULL
17:39:45 138  	    FROM OPS_OWNER.PROCESS_RETRY_THROTTLE
17:39:45 139  	    WHERE GENERIC_ID = NOTIFICATION.ID AND PROCESS_NAME = SPROC_NAME
17:39:45 140  	  )
17:39:45 141  	  AND (
17:39:45 142  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V15.NOTIFICATION_PENDING
17:39:45 143  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V15.NOTIFICATION_FAILED
17:39:45 144  	  )
17:39:45 145  	  AND (
17:39:45 146  	    NOTIFICATION.DATE_TO_NOTIFY IS NULL OR SYSDATE > NOTIFICATION.DATE_TO_NOTIFY
17:39:45 147  	  )ORDER BY dbms_random.value
17:39:45 148  ) WHERE
17:39:45 149  	ROWNUM <= C_NOTIFICATION_COUNT_LIMIT;
17:39:45 150  
17:39:45 151  EXCEPTION
17:39:45 152  WHEN OTHERS THEN
17:39:45 153  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
17:39:45 154  	  SPROC_NAME, 'Unknown error', SQLERRM);
17:39:45 155  END GET_PENDING_NOTIFICATIONS;
17:39:45 156  
17:39:45 157  /******************************************************************************/
17:39:45 158  
17:39:45 159  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
17:39:45 160  /*
17:39:45 161  Throws exceptions:
17:39:45 162  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45 163  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45 164  */
17:39:45 165  	in_notification_id IN NUMBER
17:39:45 166  ) AS
17:39:45 167  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_NOTIFICATION_TIMESTAMP';
17:39:45 168  -- VARIABLES
17:39:45 169  temp_notification_id NUMBER;
17:39:45 170  -- EXCEPTIONS
17:39:45 171  BAD_NOTIFICATION_ID EXCEPTION;
17:39:45 172  BEGIN
17:39:45 173  
17:39:45 174  	BEGIN
17:39:45 175  	  SELECT
17:39:45 176  	    NOTIFICATION.ID into temp_notification_id
17:39:45 177  	  FROM
17:39:45 178  	    NOTIFICATION
17:39:45 179  	  WHERE
17:39:45 180  	    NOTIFICATION.ID = in_notification_id;
17:39:45 181  	  EXCEPTION
17:39:45 182  	    WHEN NO_DATA_FOUND THEN
17:39:45 183  	      RAISE BAD_NOTIFICATION_ID;
17:39:45 184  	END;
17:39:45 185  
17:39:45 186  	UPDATE
17:39:45 187  	  NOTIFICATION
17:39:45 188  	SET
17:39:45 189  	  NOTIFICATION.UPDATE_DATE = sysdate
17:39:45 190  	WHERE
17:39:45 191  	  NOTIFICATION.ID = in_notification_id;
17:39:45 192  
17:39:45 193  EXCEPTION
17:39:45 194  WHEN BAD_NOTIFICATION_ID THEN
17:39:45 195  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
17:39:45 196  	  SPROC_NAME, 'No such notification');
17:39:45 197  WHEN OTHERS THEN
17:39:45 198  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
17:39:45 199  	  SPROC_NAME, 'Unknown error', SQLERRM);
17:39:45 200  END UPDATE_NOTIFICATION_TIMESTAMP;
17:39:45 201  
17:39:45 202  /******************************************************************************/
17:39:45 203  
17:39:45 204  PROCEDURE SET_NOTIFICATION_STATUS (
17:39:45 205  /*
17:39:45 206  Throws exceptions:
17:39:45 207  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45 208  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45 209  */
17:39:45 210  	in_notification_id	  IN NUMBER,
17:39:45 211  	in_notification_status_id IN NUMBER,
17:39:45 212  	in_error_message	  IN VARCHAR2
17:39:45 213  ) AS
17:39:45 214  SPROC_NAME CONSTANT VARCHAR2(32) := 'SET_NOTIFICATION_STATUS';
17:39:45 215  -- VARIABLES
17:39:45 216  var_group_id		NUMBER;
17:39:45 217  var_account_id		NUMBER;
17:39:45 218  var_notification_type_id	NUMBER;
17:39:45 219  var_email_template_params CLOB;
17:39:45 220  var_create_history_date	DATE := SYSDATE;
17:39:45 221  var_notification_status_id   NUMBER;
17:39:45 222  var_date_to_notify	DATE;
17:39:45 223  max_fails   NUMBER := 5;
17:39:45 224  num_fails   NUMBER;
17:39:45 225  -- EXCEPTIONS
17:39:45 226  BAD_NOTIFICATION_ID	 EXCEPTION;
17:39:45 227  BAD_NOTIFICATION_STATUS_ID EXCEPTION;
17:39:45 228  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
17:39:45 229  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
17:39:45 230  BEGIN
17:39:45 231  
17:39:45 232  	IF in_notification_status_id != NOTIFICATION_STATUSES_V15.NOTIFICATION_SENT
17:39:45 233  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V15.NOTIFICATION_PENDING
17:39:45 234  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V15.NOTIFICATION_FAILED THEN
17:39:45 235  	  RAISE BAD_NOTIFICATION_STATUS_ID;
17:39:45 236  	END IF;
17:39:45 237  
17:39:45 238  	BEGIN
17:39:45 239  	  SELECT
17:39:45 240  	    NOTIFICATION.GROUP_ID,
17:39:45 241  	    NOTIFICATION.ACCOUNT_ID,
17:39:45 242  	    NOTIFICATION.NOTIFICATION_TYPE_ID,
17:39:45 243  	    NOTIFICATION.NOTIFICATION_STATUS_ID,
17:39:45 244  	    NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
17:39:45 245  	    NOTIFICATION.DATE_TO_NOTIFY
17:39:45 246  	    into
17:39:45 247  	    var_group_id,
17:39:45 248  	    var_account_id,
17:39:45 249  	    var_notification_type_id,
17:39:45 250  	    var_notification_status_id,
17:39:45 251  	    var_email_template_params,
17:39:45 252  	    var_date_to_notify
17:39:45 253  	  FROM
17:39:45 254  	    NOTIFICATION
17:39:45 255  	  WHERE
17:39:45 256  	    NOTIFICATION.ID = in_notification_id;
17:39:45 257  	  EXCEPTION
17:39:45 258  	    WHEN NO_DATA_FOUND THEN
17:39:45 259  	      RAISE BAD_NOTIFICATION_ID;
17:39:45 260  	END;
17:39:45 261  
17:39:45 262  	BEGIN
17:39:45 263  	  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V15.CREATE_NOTIFICATION_HISTORY (
17:39:45 264  	    in_notification_id		=> in_notification_id,
17:39:45 265  	    in_account_id		=> var_account_id,
17:39:45 266  	    in_group_id 		=> var_group_id,
17:39:45 267  	    notification_reason_type_id => var_notification_type_id,
17:39:45 268  	    notification_status_id	=> var_notification_status_id,
17:39:45 269  	    email_template_params	=> var_email_template_params,
17:39:45 270  	    in_create_date		=> var_create_history_date,
17:39:45 271  	    in_date_to_notify		=> var_date_to_notify
17:39:45 272  	  );
17:39:45 273  	  EXCEPTION
17:39:45 274  	    WHEN OTHERS THEN
17:39:45 275  	      EXCEPTION_MESSAGE := SQLERRM;
17:39:45 276  	      RAISE CAN_NOT_CREATE_HISTORY;
17:39:45 277  	END;
17:39:45 278  
17:39:45 279  	UPDATE
17:39:45 280  	  NOTIFICATION
17:39:45 281  	SET
17:39:45 282  	  NOTIFICATION.NOTIFICATION_STATUS_ID = in_notification_status_id,
17:39:45 283  	  NOTIFICATION.UPDATE_DATE = sysdate
17:39:45 284  	WHERE
17:39:45 285  	  NOTIFICATION.ID = in_notification_id;
17:39:45 286  
17:39:45 287  	IF ( in_error_message IS NOT NULL ) THEN
17:39:45 288  	  ADD_NOTIFICATION_FAILURE(
17:39:45 289  	    in_notification_id => in_notification_id,
17:39:45 290  	    in_error_message => in_error_message
17:39:45 291  	  );
17:39:45 292  	END IF;
17:39:45 293  
17:39:45 294  	SELECT COUNT(1) INTO num_fails
17:39:45 295  	FROM NOTIFICATION_FAILURE
17:39:45 296  	WHERE NOTIFICATION_ID = in_notification_id;
17:39:45 297  
17:39:45 298  	IF (in_notification_status_id = NOTIFICATION_STATUSES_V15.NOTIFICATION_SENT OR num_fails >= max_fails) then
17:39:45 299  	  FOR REC IN (
17:39:45 300  	      SELECT ID, NOTIFICATION_ID, ERROR_MESSAGE, CREATE_DATE
17:39:45 301  	      FROM NOTIFICATION_FAILURE
17:39:45 302  	      WHERE NOTIFICATION_ID = in_notification_id
17:39:45 303  	      ) LOOP
17:39:45 304  	      BEGIN
17:39:45 305  		OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V15.CREATE_NOTIF_FAILURE_HISTORY(
17:39:45 306  		  in_error_message	   => REC.ERROR_MESSAGE,
17:39:45 307  		  in_notification_id	   => REC.NOTIFICATION_ID,
17:39:45 308  		  in_create_date	   => REC.CREATE_DATE
17:39:45 309  		);
17:39:45 310  		EXCEPTION
17:39:45 311  		  WHEN OTHERS THEN
17:39:45 312  		    EXCEPTION_MESSAGE := SQLERRM;
17:39:45 313  		    RAISE CAN_NOT_CREATE_HISTORY;
17:39:45 314  	      END;
17:39:45 315  	  END LOOP;
17:39:45 316  	  DELETE FROM NOTIFICATION_FAILURE WHERE NOTIFICATION_ID = in_notification_id;
17:39:45 317  
17:39:45 318  	  BEGIN
17:39:45 319  	    SELECT
17:39:45 320  	      NOTIFICATION.GROUP_ID,
17:39:45 321  	      NOTIFICATION.ACCOUNT_ID,
17:39:45 322  	      NOTIFICATION.NOTIFICATION_TYPE_ID,
17:39:45 323  	      NOTIFICATION.NOTIFICATION_STATUS_ID,
17:39:45 324  	      NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
17:39:45 325  	      NOTIFICATION.DATE_TO_NOTIFY
17:39:45 326  	      into
17:39:45 327  	      var_group_id,
17:39:45 328  	      var_account_id,
17:39:45 329  	      var_notification_type_id,
17:39:45 330  	      var_notification_status_id,
17:39:45 331  	      var_email_template_params,
17:39:45 332  	      var_date_to_notify
17:39:45 333  	    FROM
17:39:45 334  	      NOTIFICATION
17:39:45 335  	    WHERE
17:39:45 336  	      NOTIFICATION.ID = in_notification_id;
17:39:45 337  	    EXCEPTION
17:39:45 338  	      WHEN NO_DATA_FOUND THEN
17:39:45 339  		RAISE BAD_NOTIFICATION_ID;
17:39:45 340  	  END;
17:39:45 341  
17:39:45 342  	  BEGIN
17:39:45 343  	    OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V15.CREATE_NOTIFICATION_HISTORY (
17:39:45 344  	      in_notification_id	  => in_notification_id,
17:39:45 345  	      in_account_id		  => var_account_id,
17:39:45 346  	      in_group_id		  => var_group_id,
17:39:45 347  	      notification_reason_type_id => var_notification_type_id,
17:39:45 348  	      notification_status_id	  => var_notification_status_id,
17:39:45 349  	      email_template_params	  => var_email_template_params,
17:39:45 350  	      in_create_date		  => var_create_history_date,
17:39:45 351  	      in_date_to_notify 	  => var_date_to_notify
17:39:45 352  	    );
17:39:45 353  	    EXCEPTION
17:39:45 354  	      WHEN OTHERS THEN
17:39:45 355  		EXCEPTION_MESSAGE := SQLERRM;
17:39:45 356  		RAISE CAN_NOT_CREATE_HISTORY;
17:39:45 357  	  END;
17:39:45 358  
17:39:45 359  	  DELETE FROM NOTIFICATION WHERE ID = in_notification_id;
17:39:45 360  
17:39:45 361  	END IF;
17:39:45 362  	commit;
17:39:45 363  
17:39:45 364  EXCEPTION
17:39:45 365  WHEN BAD_NOTIFICATION_STATUS_ID THEN
17:39:45 366  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
17:39:45 367  	  SPROC_NAME, 'Bad notification status');
17:39:45 368  WHEN BAD_NOTIFICATION_ID THEN
17:39:45 369  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
17:39:45 370  	  SPROC_NAME, 'No such notification');
17:39:45 371  WHEN CAN_NOT_CREATE_HISTORY THEN
17:39:45 372  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.INTERNAL_ERROR,
17:39:45 373  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
17:39:45 374  WHEN OTHERS THEN
17:39:45 375  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
17:39:45 376  	  SPROC_NAME, 'Unknown error', SQLERRM);
17:39:45 377  END SET_NOTIFICATION_STATUS;
17:39:45 378  
17:39:45 379  /******************************************************************************/
17:39:45 380  
17:39:45 381  PROCEDURE ADD_NOTIFICATION_FAILURE (
17:39:45 382  /*
17:39:45 383  Throws exceptions:
17:39:45 384  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45 385  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45 386  */
17:39:45 387  	in_notification_id IN NUMBER,
17:39:45 388  	in_error_message   IN VARCHAR2
17:39:45 389  ) AS
17:39:45 390  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION_FAILURE';
17:39:45 391  -- VARIABLES
17:39:45 392  temp_notification_id NUMBER;
17:39:45 393  var_create_date	   DATE := SYSDATE;
17:39:45 394  -- EXCEPTIONS
17:39:45 395  BAD_NOTIFICATION_ID	 EXCEPTION;
17:39:45 396  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
17:39:45 397  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
17:39:45 398  BEGIN
17:39:45 399  
17:39:45 400  	BEGIN
17:39:45 401  	  SELECT
17:39:45 402  	    NOTIFICATION.ID into temp_notification_id
17:39:45 403  	  FROM
17:39:45 404  	    NOTIFICATION
17:39:45 405  	  WHERE
17:39:45 406  	    NOTIFICATION.ID = in_notification_id;
17:39:45 407  	  EXCEPTION
17:39:45 408  	    WHEN NO_DATA_FOUND THEN
17:39:45 409  	      RAISE BAD_NOTIFICATION_ID;
17:39:45 410  	END;
17:39:45 411  
17:39:45 412  	INSERT INTO NOTIFICATION_FAILURE (
17:39:45 413  	  ID,
17:39:45 414  	  NOTIFICATION_ID,
17:39:45 415  	  ERROR_MESSAGE,
17:39:45 416  	  CREATE_DATE
17:39:45 417  	) VALUES (
17:39:45 418  	  NOTF_ID_SEQ.nextVal,
17:39:45 419  	  in_notification_id,
17:39:45 420  	  in_error_message,
17:39:45 421  	  sysdate
17:39:45 422  	);
17:39:45 423  
17:39:45 424  	--BEGIN
17:39:45 425  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V15.CREATE_NOTIF_FAILURE_HISTORY(
17:39:45 426  	--    in_error_message	       => in_error_message,
17:39:45 427  	--    in_notification_queue_id => in_notification_id,
17:39:45 428  	--    in_create_date	       => var_create_date
17:39:45 429  	--  );
17:39:45 430  	--  EXCEPTION
17:39:45 431  	--    WHEN OTHERS THEN
17:39:45 432  	--	EXCEPTION_MESSAGE := SQLERRM;
17:39:45 433  	--	RAISE CAN_NOT_CREATE_HISTORY;
17:39:45 434  	--END;
17:39:45 435  
17:39:45 436  EXCEPTION
17:39:45 437  WHEN BAD_NOTIFICATION_ID THEN
17:39:45 438  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
17:39:45 439  	  SPROC_NAME, 'No such notification');
17:39:45 440  WHEN CAN_NOT_CREATE_HISTORY THEN
17:39:45 441  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.INTERNAL_ERROR,
17:39:45 442  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
17:39:45 443  WHEN OTHERS THEN
17:39:45 444  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
17:39:45 445  	  SPROC_NAME, 'Unknown error', SQLERRM);
17:39:45 446  END ADD_NOTIFICATION_FAILURE;
17:39:45 447  
17:39:45 448  /******************************************************************************/
17:39:45 449  
17:39:45 450  PROCEDURE LOCK_PENDING_NOTIFICATION (
17:39:45 451  /*
17:39:45 452  Result: GLOBAL_STATUSES.TRUE if notification locked
17:39:45 453  GLOBA_STATUSES.FALSE - else
17:39:45 454  */
17:39:45 455  	in_notification_id IN NUMBER,
17:39:45 456  	out_lock_status    OUT NUMBER
17:39:45 457  ) AS
17:39:45 458  SPROC_NAME CONSTANT VARCHAR2(25) := 'LOCK_PENDING_NOTIFICATION';
17:39:45 459  -- VARIABLE
17:39:45 460  temp_notification_id NUMBER;
17:39:45 461  BEGIN
17:39:45 462  	SELECT
17:39:45 463  	  NOTIFICATION.ID into temp_notification_id
17:39:45 464  	FROM
17:39:45 465  	  NOTIFICATION
17:39:45 466  	WHERE
17:39:45 467  	  NOTIFICATION.ID = in_notification_id
17:39:45 468  	  AND (
17:39:45 469  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V15.NOTIFICATION_PENDING
17:39:45 470  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V15.NOTIFICATION_FAILED
17:39:45 471  	  )
17:39:45 472  	FOR UPDATE;
17:39:45 473  
17:39:45 474  	out_lock_status := 1;
17:39:45 475  
17:39:45 476  EXCEPTION
17:39:45 477  WHEN NO_DATA_FOUND THEN
17:39:45 478  	out_lock_status := 0;
17:39:45 479  WHEN OTHERS THEN
17:39:45 480  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
17:39:45 481  	  SPROC_NAME, 'Unknown error', SQLERRM);
17:39:45 482  END LOCK_PENDING_NOTIFICATION;
17:39:45 483  
17:39:45 484  /******************************************************************************/
17:39:45 485  
17:39:45 486  PROCEDURE GET_NOTIFICATION_DATA (
17:39:45 487  	in_notification_id IN NUMBER,
17:39:45 488  	out_result_set	   OUT SYS_REFCURSOR
17:39:45 489  ) AS
17:39:45 490  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_NOTIFICATION_DATA';
17:39:45 491  BEGIN
17:39:45 492  	OPEN out_result_set FOR
17:39:45 493  	SELECT
17:39:45 494  	  NOTIFICATION.ID,
17:39:45 495  	  NOTIFICATION.GROUP_ID,
17:39:45 496  	  NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
17:39:45 497  	  NOTIFICATION.NOTIFICATION_STATUS_ID,
17:39:45 498  	  NOTIFICATION.CREATE_DATE,
17:39:45 499  	  NOTIFICATION.UPDATE_DATE,
17:39:45 500  	  NOTIFICATION.NOTIFICATION_TYPE_ID,
17:39:45 501  	  NOTIFICATION_TYPE.VALUE as "TYPE_VALUE",
17:39:45 502  	  NOTIFICATION_TYPE.TEMPLATE_URL
17:39:45 503  	FROM
17:39:45 504  	  NOTIFICATION
17:39:45 505  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
17:39:45 506  	WHERE
17:39:45 507  	  NOTIFICATION.ID = in_notification_id;
17:39:45 508  
17:39:45 509  EXCEPTION
17:39:45 510  WHEN OTHERS THEN
17:39:45 511  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
17:39:45 512  	  SPROC_NAME, 'Unknown error', SQLERRM);
17:39:45 513  END GET_NOTIFICATION_DATA;
17:39:45 514  
17:39:45 515  END PROCS_NOTIFICATION_V15;
17:39:45 516  .
17:39:45 SQL> /

Package body created.

Elapsed: 00:00:00.05
17:39:45 SQL> 
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> -- DDL for package PROCS_PROCESS_RETRY_THROTTLE
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE "PROCS_PROCESS_RETRY_V15" AS
17:39:45   2  
17:39:45   3  PROCEDURE LOG_RETRY(
17:39:45   4  	  in_process_name IN VARCHAR2,
17:39:45   5  	  in_generic_id   IN NUMBER,
17:39:45   6  	  in_date	  IN VARCHAR2,
17:39:45   7  	  out_success	   OUT NUMBER
17:39:45   8  );
17:39:45   9  
17:39:45  10  PROCEDURE DELETE_RETRY(
17:39:45  11  	  in_process_name IN VARCHAR2,
17:39:45  12  	  in_remove_minutes  IN NUMBER
17:39:45  13  );
17:39:45  14  
17:39:45  15  PROCEDURE GET_SYSDATE (
17:39:45  16  	  out_date OUT VARCHAR2
17:39:45  17  );
17:39:45  18  
17:39:45  19  END PROCS_PROCESS_RETRY_V15;
17:39:45  20  .
17:39:45 SQL> /

Package created.

Elapsed: 00:00:00.03
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_PROCESS_RETRY_V15" AS
17:39:45   2  
17:39:45   3  PROCEDURE LOG_RETRY(
17:39:45   4  	  in_process_name IN VARCHAR2,
17:39:45   5  	  in_generic_id   IN NUMBER,
17:39:45   6  	  in_date	  IN VARCHAR2,
17:39:45   7  	  out_success	   OUT NUMBER
17:39:45   8  ) AS
17:39:45   9  SPROC_NAME CONSTANT VARCHAR2(32) := 'PROCS_PROCESS_RETRY_V15';
17:39:45  10  BEGIN
17:39:45  11  
17:39:45  12  	out_success := 1;
17:39:45  13  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
17:39:45  14  	VALUES (in_process_name, in_generic_id, 1, to_date(in_date, 'DD-Mon-YYYY HH24:MI:SS'), sysdate);
17:39:45  15  	commit;
17:39:45  16  EXCEPTION
17:39:45  17  WHEN DUP_VAL_ON_INDEX THEN
17:39:45  18  	rollback;
17:39:45  19  	out_success := 0;
17:39:45  20  WHEN OTHERS THEN
17:39:45  21  	rollback;
17:39:45  22  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
17:39:45  23  	  SPROC_NAME, 'Unknown error', SQLERRM);
17:39:45  24  
17:39:45  25  END;
17:39:45  26  
17:39:45  27  PROCEDURE DELETE_RETRY(
17:39:45  28  	  in_process_name IN VARCHAR2,
17:39:45  29  	  in_remove_minutes  IN NUMBER
17:39:45  30  ) AS
17:39:45  31  BEGIN
17:39:45  32  
17:39:45  33  delete from PROCESS_RETRY_THROTTLE
17:39:45  34  where
17:39:45  35  	process_name = in_process_name and
17:39:45  36  	create_date <= sysdate-in_remove_minutes/1440;
17:39:45  37  commit;
17:39:45  38  END;
17:39:45  39  
17:39:45  40  PROCEDURE GET_SYSDATE (
17:39:45  41  	out_date  OUT VARCHAR2
17:39:45  42  ) AS
17:39:45  43  BEGIN
17:39:45  44  	SELECT to_char(SYSDATE, 'DD-Mon-YYYY HH24:MI:SS') into out_date from dual;
17:39:45  45  END;
17:39:45  46  
17:39:45  47  END PROCS_PROCESS_RETRY_V15;
17:39:45  48  .
17:39:45 SQL> /

Package body created.

Elapsed: 00:00:00.02
17:39:45 SQL> 
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> -- DDL for package PROCS_SYSTEM
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE "PROCS_SYSTEM_V15" AS
17:39:45   2  
17:39:45   3  PROCEDURE INCREMENT_VERSION;
17:39:45   4  
17:39:45   5  PROCEDURE CHECK_VERSION(
17:39:45   6  	  in_vers    IN NUMBER,
17:39:45   7  	  out_result OUT NUMBER
17:39:45   8  );
17:39:45   9  
17:39:45  10  END PROCS_SYSTEM_V15;
17:39:45  11  .
17:39:45 SQL> /

Package created.

Elapsed: 00:00:00.02
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SYSTEM_V15" AS
17:39:45   2  
17:39:45   3  PROCEDURE INCREMENT_VERSION
17:39:45   4  /*
17:39:45   5  Throws exceptions:
17:39:45   6  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45   7  */
17:39:45   8  AS
17:39:45   9  BEGIN
17:39:45  10  
17:39:45  11  	UPDATE SYS_VERSION SET version=version+1;
17:39:45  12  
17:39:45  13  EXCEPTION
17:39:45  14  WHEN OTHERS THEN
17:39:45  15  	RAISE_APPLICATION_ERROR(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
17:39:45  16  	  'Unknown error');
17:39:45  17  END INCREMENT_VERSION;
17:39:45  18  
17:39:45  19  /*************************************************************/
17:39:45  20  
17:39:45  21  PROCEDURE CHECK_VERSION(
17:39:45  22  	  in_vers    IN NUMBER,
17:39:45  23  	  out_result OUT NUMBER
17:39:45  24  ) AS
17:39:45  25  	current_version NUMBER;
17:39:45  26  BEGIN
17:39:45  27  	SELECT version INTO current_version FROM SYS_VERSION;
17:39:45  28  	IF(current_version != in_vers) THEN
17:39:45  29  	  out_result := 1;
17:39:45  30  	ELSE
17:39:45  31  	  out_result := 0;
17:39:45  32  	END IF;
17:39:45  33  	EXCEPTION
17:39:45  34  	      WHEN OTHERS THEN
17:39:45  35  	      NULL;
17:39:45  36  END CHECK_VERSION;
17:39:45  37  
17:39:45  38  END PROCS_SYSTEM_V15;
17:39:45  39  .
17:39:45 SQL> /

Package body created.

Elapsed: 00:00:00.01
17:39:45 SQL> 
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> -- DDL for package PUBLIC_PROCS_CLIENT
17:39:45 SQL> --------------------------------------------------------------------------------
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_CLIENT_V15" AS
17:39:45   2  
17:39:45   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
17:39:45   4  /*
17:39:45   5  Throws exceptions:
17:39:45   6  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45   7  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45   8  */
17:39:45   9  	in_notification_type_name IN VARCHAR2,
17:39:45  10  	out_notification_type_id  OUT NUMBER
17:39:45  11  );
17:39:45  12  
17:39:45  13  PROCEDURE ADD_NOTIFICATION (
17:39:45  14  /*
17:39:45  15  Throws exceptions:
17:39:45  16  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45  17  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45  18  */
17:39:45  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
17:39:45  20  	in_recipient_group_id	 IN NUMBER,
17:39:45  21  	in_notification_type_id  IN NUMBER,
17:39:45  22  	in_date_to_notify	 IN DATE,
17:39:45  23  	in_email_template_params IN CLOB
17:39:45  24  );
17:39:45  25  
17:39:45  26  END PUBLIC_PROCS_CLIENT_V15;
17:39:45  27  .
17:39:45 SQL> /

Package created.

Elapsed: 00:00:00.02
17:39:45 SQL> 
17:39:45 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_CLIENT_V15" AS
17:39:45   2  
17:39:45   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
17:39:45   4  /*
17:39:45   5  Throws exceptions:
17:39:45   6  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45   7  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45   8  */
17:39:45   9  	in_notification_type_name IN VARCHAR2,
17:39:45  10  	out_notification_type_id  OUT NUMBER
17:39:45  11  ) AS
17:39:45  12  BEGIN
17:39:45  13  	PROCS_NOTIFICATION_V15.GET_NOTIFICATION_TYPE_BY_NAME (
17:39:45  14  	  in_notification_type_name,
17:39:45  15  	  out_notification_type_id
17:39:45  16  	);
17:39:45  17  END;
17:39:45  18  
17:39:45  19  /*****************************************************************/
17:39:45  20  
17:39:45  21  PROCEDURE ADD_NOTIFICATION (
17:39:45  22  /*
17:39:45  23  Throws exceptions:
17:39:45  24  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
17:39:45  25  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
17:39:45  26  */
17:39:45  27  	in_sender_account_id	 IN NUMBER DEFAULT 0,
17:39:45  28  	in_recipient_group_id	 IN NUMBER,
17:39:45  29  	in_notification_type_id  IN NUMBER,
17:39:45  30  	in_date_to_notify	 IN DATE,
17:39:45  31  	in_email_template_params IN CLOB
17:39:45  32  ) AS
17:39:45  33  BEGIN
17:39:45  34  	PROCS_NOTIFICATION_V15.ADD_NOTIFICATION (
17:39:45  35  	  in_sender_account_id,
17:39:45  36  	  in_recipient_group_id,
17:39:45  37  	  in_notification_type_id,
17:39:45  38  	  in_date_to_notify,
17:39:45  39  	  in_email_template_params
17:39:45  40  	);
17:39:45  41  END;
17:39:45  42  
17:39:45  43  END PUBLIC_PROCS_CLIENT_V15;
17:39:45  44  .
17:39:45 SQL> /

Package body created.

Elapsed: 00:00:00.02
17:39:45 SQL> 
17:39:45 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V15 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V15 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V15 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> 
17:39:45 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V15 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V15 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V15 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> 
17:39:45 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V15 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V15 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V15 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> 
17:39:45 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V15 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V15 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:45 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V15 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V15 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> 
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_poller_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:45 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:45 SQL> 
17:39:45 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.09
17:39:46 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_app;

Grant succeeded.

Elapsed: 00:00:00.02
17:39:46 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:46 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:46 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:46 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:46 SQL> 
17:39:46 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:46 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:46 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:46 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:46 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:46 SQL> 
17:39:46 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:46 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:46 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:46 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:46 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:46 SQL> 
17:39:46 SQL> grant select, insert, update, delete ON OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.00
17:39:46 SQL> grant select ON OPS_OWNER.NOTTID_SEQ to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
17:39:46 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
17:39:46 SQL> spool off;


Subject: Nomad upgrade success: ECST@rac01.stg.sea1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: steven.nedlin@nytimes.com
Nomad upgrade operation success. 
        
        Details
        -------
        DB Hostname: rac01.stg.sea1.nytimes.com
        SID: ECST
        Schema: ops_owner
        Migration: 2-release-1.10.0-all
        SVN Revision: 9677
        Duration: 1