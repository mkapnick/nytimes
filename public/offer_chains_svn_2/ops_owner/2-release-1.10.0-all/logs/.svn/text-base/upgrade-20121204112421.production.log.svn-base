11:24:31 SQL> @/dbbackups/ECPR/migrations/ops_owner/2-release-1.10.0-all/upgrade.sql
11:24:31 SQL> --------------------------------------------------------------------------------
11:24:31 SQL> -- DDL for package NOTIFICATION_STATUSES
11:24:31 SQL> --------------------------------------------------------------------------------
11:24:31 SQL> 
11:24:31 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V15" AS
11:24:31   2  
11:24:31   3  ----
11:24:31   4  -- NOTIFICATION STATUSES
11:24:31   5  
11:24:31   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
11:24:31   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
11:24:31   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
11:24:31   9  
11:24:31  10  END NOTIFICATION_STATUSES_V15;
11:24:31  11  .
11:24:31 SQL> /

Package created.

Elapsed: 00:00:00.05
11:24:32 SQL> 
11:24:32 SQL> 
11:24:32 SQL> 
11:24:32 SQL> --------------------------------------------------------------------------------
11:24:32 SQL> -- DDL for package PROCS_COMMON
11:24:32 SQL> --------------------------------------------------------------------------------
11:24:32 SQL> 
11:24:32 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V15" AS
11:24:32   2  
11:24:32   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
11:24:32   4  	in_sproc_name	    IN VARCHAR2,
11:24:32   5  	in_error_message    IN VARCHAR2,
11:24:32   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
11:24:32   7  ) RETURN VARCHAR2;
11:24:32   8  
11:24:32   9  PROCEDURE THROW_EXCEPTION(
11:24:32  10  	in_exception_code   IN NUMBER,
11:24:32  11  	in_sproc_name	    IN VARCHAR2,
11:24:32  12  	in_error_message    IN VARCHAR2,
11:24:32  13  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
11:24:32  14  );
11:24:32  15  
11:24:32  16  END PROCS_COMMON_V15;
11:24:32  17  .
11:24:32 SQL> /

Package created.

Elapsed: 00:00:00.02
11:24:32 SQL> 
11:24:32 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V15" AS
11:24:32   2  
11:24:32   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
11:24:32   4  	in_sproc_name	    IN VARCHAR2,
11:24:32   5  	in_error_message    IN VARCHAR2,
11:24:32   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
11:24:32   7  ) RETURN VARCHAR2 AS
11:24:32   8  BEGIN
11:24:32   9  	IF in_error_stacktrace IS NOT NULL THEN
11:24:32  10  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || chr(10) || in_error_stacktrace;
11:24:32  11  	END IF;
11:24:32  12  	RETURN
11:24:32  13  	  in_sproc_name || ': ' || in_error_message;
11:24:32  14  END GENERATE_EXCEPTION_MESSAGE;
11:24:32  15  
11:24:32  16  /******************************************************************************/
11:24:32  17  
11:24:32  18  PROCEDURE THROW_EXCEPTION(
11:24:32  19  	in_exception_code   IN NUMBER,
11:24:32  20  	in_sproc_name	    IN VARCHAR2,
11:24:32  21  	in_error_message    IN VARCHAR2,
11:24:32  22  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
11:24:32  23  ) AS
11:24:32  24  BEGIN
11:24:32  25  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
11:24:32  26  END;
11:24:32  27  
11:24:32  28  END PROCS_COMMON_V15;
11:24:32  29  .
11:24:32 SQL> /

Package body created.

Elapsed: 00:00:00.02
11:24:32 SQL> 
11:24:32 SQL> --------------------------------------------------------------------------------
11:24:32 SQL> -- DDL for package PROCS_NOTIFICATION
11:24:32 SQL> --------------------------------------------------------------------------------
11:24:32 SQL> 
11:24:32 SQL> CREATE OR REPLACE PACKAGE "PROCS_NOTIFICATION_V15" AS
11:24:32   2  
11:24:32   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
11:24:32   4  /*
11:24:32   5  Throws exceptions:
11:24:32   6  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32   7  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32   8  */
11:24:32   9  	in_notification_type_name IN VARCHAR2,
11:24:32  10  	out_notification_type_id  OUT NUMBER
11:24:32  11  );
11:24:32  12  
11:24:32  13  PROCEDURE ADD_NOTIFICATION (
11:24:32  14  /*
11:24:32  15  Throws exceptions:
11:24:32  16  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32  17  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32  18  */
11:24:32  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
11:24:32  20  	in_recipient_group_id	 IN NUMBER,
11:24:32  21  	in_notification_type_id  IN NUMBER,
11:24:32  22  	in_date_to_notify	 IN DATE,
11:24:32  23  	in_email_template_params IN CLOB
11:24:32  24  );
11:24:32  25  
11:24:32  26  PROCEDURE GET_PENDING_NOTIFICATIONS (
11:24:32  27  /*
11:24:32  28  Throws exceptions:
11:24:32  29  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32  30  */
11:24:32  31  	out_result_set OUT SYS_REFCURSOR
11:24:32  32  );
11:24:32  33  
11:24:32  34  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
11:24:32  35  /*
11:24:32  36  Throws exceptions:
11:24:32  37  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32  38  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32  39  */
11:24:32  40  	in_notification_id IN NUMBER
11:24:32  41  );
11:24:32  42  
11:24:32  43  PROCEDURE SET_NOTIFICATION_STATUS (
11:24:32  44  /*
11:24:32  45  Throws exceptions:
11:24:32  46  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32  47  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32  48  */
11:24:32  49  	in_notification_id	  IN NUMBER,
11:24:32  50  	in_notification_status_id IN NUMBER,
11:24:32  51  	in_error_message	  IN VARCHAR2
11:24:32  52  );
11:24:32  53  
11:24:32  54  PROCEDURE ADD_NOTIFICATION_FAILURE (
11:24:32  55  /*
11:24:32  56  Throws exceptions:
11:24:32  57  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32  58  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32  59  */
11:24:32  60  	in_notification_id IN NUMBER,
11:24:32  61  	in_error_message   IN VARCHAR2
11:24:32  62  );
11:24:32  63  
11:24:32  64  PROCEDURE LOCK_PENDING_NOTIFICATION (
11:24:32  65  /*
11:24:32  66  Result: 1 if notification locked
11:24:32  67  2 - else
11:24:32  68  */
11:24:32  69  	in_notification_id IN NUMBER,
11:24:32  70  	out_lock_status    OUT NUMBER
11:24:32  71  );
11:24:32  72  
11:24:32  73  PROCEDURE GET_NOTIFICATION_DATA (
11:24:32  74  	in_notification_id IN NUMBER,
11:24:32  75  	out_result_set	   OUT SYS_REFCURSOR
11:24:32  76  );
11:24:32  77  
11:24:32  78  END PROCS_NOTIFICATION_V15;
11:24:32  79  .
11:24:32 SQL> /

Package created.

Elapsed: 00:00:00.01
11:24:32 SQL> 
11:24:32 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_NOTIFICATION_V15" AS
11:24:32   2  
11:24:32   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
11:24:32   4  /*
11:24:32   5  Throws exceptions:
11:24:32   6  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32   7  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32   8  */
11:24:32   9  	in_notification_type_name IN VARCHAR2,
11:24:32  10  	out_notification_type_id  OUT NUMBER
11:24:32  11  ) AS
11:24:32  12  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NOTIFICATION_TYPE_BY_NAME';
11:24:32  13  BEGIN
11:24:32  14  	SELECT
11:24:32  15  	  NOTIFICATION_TYPE.ID into out_notification_type_id
11:24:32  16  	FROM
11:24:32  17  	  NOTIFICATION_TYPE
11:24:32  18  	WHERE
11:24:32  19  	  NOTIFICATION_TYPE.VALUE = in_notification_type_name;
11:24:32  20  EXCEPTION
11:24:32  21  WHEN NO_DATA_FOUND THEN
11:24:32  22  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
11:24:32  23  	  SPROC_NAME, 'No such type');
11:24:32  24  WHEN OTHERS THEN
11:24:32  25  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:24:32  26  	  SPROC_NAME, 'Unknown error', SQLERRM);
11:24:32  27  END GET_NOTIFICATION_TYPE_BY_NAME;
11:24:32  28  
11:24:32  29  /******************************************************************/
11:24:32  30  
11:24:32  31  PROCEDURE ADD_NOTIFICATION (
11:24:32  32  /*
11:24:32  33  Throws exceptions:
11:24:32  34  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32  35  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32  36  */
11:24:32  37  	in_sender_account_id	 IN NUMBER DEFAULT 0,
11:24:32  38  	in_recipient_group_id	 IN NUMBER,
11:24:32  39  	in_notification_type_id  IN NUMBER,
11:24:32  40  	in_date_to_notify	 IN DATE,
11:24:32  41  	in_email_template_params IN CLOB
11:24:32  42  ) AS
11:24:32  43  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION';
11:24:32  44  -- VARIABLES
11:24:32  45  temp_type_count NUMBER;
11:24:32  46  var_create_date DATE := SYSDATE;
11:24:32  47  -- EXCEPTIONS
11:24:32  48  BAD_NOTIFICATION_TYPE_ID EXCEPTION;
11:24:32  49  CAN_NOT_CREATE_HISTORY   EXCEPTION;
11:24:32  50  EXCEPTION_MESSAGE        VARCHAR2(1024);
11:24:32  51  BEGIN
11:24:32  52  
11:24:32  53  	SELECT
11:24:32  54  	  COUNT(*) into temp_type_count
11:24:32  55  	FROM
11:24:32  56  	  NOTIFICATION_TYPE
11:24:32  57  	WHERE
11:24:32  58  	  NOTIFICATION_TYPE.ID = in_notification_type_id;
11:24:32  59  
11:24:32  60  	IF temp_type_count = 0 THEN
11:24:32  61  	  RAISE BAD_NOTIFICATION_TYPE_ID;
11:24:32  62  	END IF;
11:24:32  63  
11:24:32  64  	INSERT INTO NOTIFICATION (
11:24:32  65  	  ID,
11:24:32  66  	  ACCOUNT_ID,
11:24:32  67  	  GROUP_ID,
11:24:32  68  	  NOTIFICATION_TYPE_ID,
11:24:32  69  	  NOTIFICATION_STATUS_ID,
11:24:32  70  	  EMAIL_TEMPLATE_PARAMS,
11:24:32  71  	  UPDATE_DATE,
11:24:32  72  	  CREATE_DATE,
11:24:32  73  	  DATE_TO_NOTIFY
11:24:32  74  	) VALUES (
11:24:32  75  	  NOT_ID_SEQ.nextVal,
11:24:32  76  	  in_sender_account_id,
11:24:32  77  	  in_recipient_group_id,
11:24:32  78  	  in_notification_type_id,
11:24:32  79  	  NOTIFICATION_STATUSES_V15.NOTIFICATION_PENDING,
11:24:32  80  	  in_email_template_params,
11:24:32  81  	  var_create_date,
11:24:32  82  	  var_create_date,
11:24:32  83  	  in_date_to_notify
11:24:32  84  	);
11:24:32  85  
11:24:32  86  	--BEGIN
11:24:32  87  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V15.CREATE_NOTIFICATION_HISTORY (
11:24:32  88  	--    in_account_id		  => 0, -- ACCOUNT_ID. Can we delete it?
11:24:32  89  	--    in_group_id		  => in_recipient_group_id,
11:24:32  90  	--    notification_reason_type_id => in_notification_type_id,
11:24:32  91  	--    notification_status_id	  => NOTIFICATION_STATUSES_V15.NOTIFICATION_PENDING,
11:24:32  92  	--    email_template_params	  => in_email_template_params,
11:24:32  93  	--    in_create_date		  => var_create_date
11:24:32  94  	--  );
11:24:32  95  	--  EXCEPTION
11:24:32  96  	--    WHEN OTHERS THEN
11:24:32  97  	--	EXCEPTION_MESSAGE := SQLERRM;
11:24:32  98  	--	RAISE CAN_NOT_CREATE_HISTORY;
11:24:32  99  	--END;
11:24:32 100  
11:24:32 101  EXCEPTION
11:24:32 102  WHEN BAD_NOTIFICATION_TYPE_ID THEN
11:24:32 103  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
11:24:32 104  	  SPROC_NAME, 'No such notification status');
11:24:32 105  WHEN CAN_NOT_CREATE_HISTORY THEN
11:24:32 106  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.INTERNAL_ERROR,
11:24:32 107  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
11:24:32 108  WHEN OTHERS THEN
11:24:32 109  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:24:32 110  	  SPROC_NAME, 'Unknown error', SQLERRM);
11:24:32 111  END ADD_NOTIFICATION;
11:24:32 112  
11:24:32 113  /******************************************************************************/
11:24:32 114  
11:24:32 115  PROCEDURE GET_PENDING_NOTIFICATIONS (
11:24:32 116  /*
11:24:32 117  Throws exceptions:
11:24:32 118  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32 119  */
11:24:32 120  	out_result_set OUT SYS_REFCURSOR
11:24:32 121  ) AS
11:24:32 122  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_PENDING_NOTIFICATIONS';
11:24:32 123  -- CONSTANTS
11:24:32 124  C_NOTIFICATION_COUNT_LIMIT CONSTANT NUMBER := 500;
11:24:32 125  BEGIN
11:24:32 126  	OPEN out_result_set FOR
11:24:32 127  SELECT * FROM
11:24:32 128  (
11:24:32 129  	SELECT
11:24:32 130  	  NOTIFICATION.ID
11:24:32 131  	FROM
11:24:32 132  	  NOTIFICATION
11:24:32 133  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
11:24:32 134  	WHERE
11:24:32 135  	  ROWNUM <= C_NOTIFICATION_COUNT_LIMIT*10
11:24:32 136  	  AND NOT EXISTS (
11:24:32 137  	    SELECT NULL
11:24:32 138  	    FROM OPS_OWNER.PROCESS_RETRY_THROTTLE
11:24:32 139  	    WHERE GENERIC_ID = NOTIFICATION.ID AND PROCESS_NAME = SPROC_NAME
11:24:32 140  	  )
11:24:32 141  	  AND (
11:24:32 142  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V15.NOTIFICATION_PENDING
11:24:32 143  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V15.NOTIFICATION_FAILED
11:24:32 144  	  )
11:24:32 145  	  AND (
11:24:32 146  	    NOTIFICATION.DATE_TO_NOTIFY IS NULL OR SYSDATE > NOTIFICATION.DATE_TO_NOTIFY
11:24:32 147  	  )ORDER BY dbms_random.value
11:24:32 148  ) WHERE
11:24:32 149  	ROWNUM <= C_NOTIFICATION_COUNT_LIMIT;
11:24:32 150  
11:24:32 151  EXCEPTION
11:24:32 152  WHEN OTHERS THEN
11:24:32 153  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:24:32 154  	  SPROC_NAME, 'Unknown error', SQLERRM);
11:24:32 155  END GET_PENDING_NOTIFICATIONS;
11:24:32 156  
11:24:32 157  /******************************************************************************/
11:24:32 158  
11:24:32 159  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
11:24:32 160  /*
11:24:32 161  Throws exceptions:
11:24:32 162  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32 163  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32 164  */
11:24:32 165  	in_notification_id IN NUMBER
11:24:32 166  ) AS
11:24:32 167  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_NOTIFICATION_TIMESTAMP';
11:24:32 168  -- VARIABLES
11:24:32 169  temp_notification_id NUMBER;
11:24:32 170  -- EXCEPTIONS
11:24:32 171  BAD_NOTIFICATION_ID EXCEPTION;
11:24:32 172  BEGIN
11:24:32 173  
11:24:32 174  	BEGIN
11:24:32 175  	  SELECT
11:24:32 176  	    NOTIFICATION.ID into temp_notification_id
11:24:32 177  	  FROM
11:24:32 178  	    NOTIFICATION
11:24:32 179  	  WHERE
11:24:32 180  	    NOTIFICATION.ID = in_notification_id;
11:24:32 181  	  EXCEPTION
11:24:32 182  	    WHEN NO_DATA_FOUND THEN
11:24:32 183  	      RAISE BAD_NOTIFICATION_ID;
11:24:32 184  	END;
11:24:32 185  
11:24:32 186  	UPDATE
11:24:32 187  	  NOTIFICATION
11:24:32 188  	SET
11:24:32 189  	  NOTIFICATION.UPDATE_DATE = sysdate
11:24:32 190  	WHERE
11:24:32 191  	  NOTIFICATION.ID = in_notification_id;
11:24:32 192  
11:24:32 193  EXCEPTION
11:24:32 194  WHEN BAD_NOTIFICATION_ID THEN
11:24:32 195  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
11:24:32 196  	  SPROC_NAME, 'No such notification');
11:24:32 197  WHEN OTHERS THEN
11:24:32 198  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:24:32 199  	  SPROC_NAME, 'Unknown error', SQLERRM);
11:24:32 200  END UPDATE_NOTIFICATION_TIMESTAMP;
11:24:32 201  
11:24:32 202  /******************************************************************************/
11:24:32 203  
11:24:32 204  PROCEDURE SET_NOTIFICATION_STATUS (
11:24:32 205  /*
11:24:32 206  Throws exceptions:
11:24:32 207  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32 208  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32 209  */
11:24:32 210  	in_notification_id	  IN NUMBER,
11:24:32 211  	in_notification_status_id IN NUMBER,
11:24:32 212  	in_error_message	  IN VARCHAR2
11:24:32 213  ) AS
11:24:32 214  SPROC_NAME CONSTANT VARCHAR2(32) := 'SET_NOTIFICATION_STATUS';
11:24:32 215  -- VARIABLES
11:24:32 216  var_group_id		NUMBER;
11:24:32 217  var_account_id		NUMBER;
11:24:32 218  var_notification_type_id	NUMBER;
11:24:32 219  var_email_template_params CLOB;
11:24:32 220  var_create_history_date	DATE := SYSDATE;
11:24:32 221  var_notification_status_id   NUMBER;
11:24:32 222  var_date_to_notify	DATE;
11:24:32 223  max_fails   NUMBER := 5;
11:24:32 224  num_fails   NUMBER;
11:24:32 225  -- EXCEPTIONS
11:24:32 226  BAD_NOTIFICATION_ID	 EXCEPTION;
11:24:32 227  BAD_NOTIFICATION_STATUS_ID EXCEPTION;
11:24:32 228  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
11:24:32 229  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
11:24:32 230  BEGIN
11:24:32 231  
11:24:32 232  	IF in_notification_status_id != NOTIFICATION_STATUSES_V15.NOTIFICATION_SENT
11:24:32 233  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V15.NOTIFICATION_PENDING
11:24:32 234  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V15.NOTIFICATION_FAILED THEN
11:24:32 235  	  RAISE BAD_NOTIFICATION_STATUS_ID;
11:24:32 236  	END IF;
11:24:32 237  
11:24:32 238  	BEGIN
11:24:32 239  	  SELECT
11:24:32 240  	    NOTIFICATION.GROUP_ID,
11:24:32 241  	    NOTIFICATION.ACCOUNT_ID,
11:24:32 242  	    NOTIFICATION.NOTIFICATION_TYPE_ID,
11:24:32 243  	    NOTIFICATION.NOTIFICATION_STATUS_ID,
11:24:32 244  	    NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
11:24:32 245  	    NOTIFICATION.DATE_TO_NOTIFY
11:24:32 246  	    into
11:24:32 247  	    var_group_id,
11:24:32 248  	    var_account_id,
11:24:32 249  	    var_notification_type_id,
11:24:32 250  	    var_notification_status_id,
11:24:32 251  	    var_email_template_params,
11:24:32 252  	    var_date_to_notify
11:24:32 253  	  FROM
11:24:32 254  	    NOTIFICATION
11:24:32 255  	  WHERE
11:24:32 256  	    NOTIFICATION.ID = in_notification_id;
11:24:32 257  	  EXCEPTION
11:24:32 258  	    WHEN NO_DATA_FOUND THEN
11:24:32 259  	      RAISE BAD_NOTIFICATION_ID;
11:24:32 260  	END;
11:24:32 261  
11:24:32 262  	BEGIN
11:24:32 263  	  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V15.CREATE_NOTIFICATION_HISTORY (
11:24:32 264  	    in_notification_id		=> in_notification_id,
11:24:32 265  	    in_account_id		=> var_account_id,
11:24:32 266  	    in_group_id 		=> var_group_id,
11:24:32 267  	    notification_reason_type_id => var_notification_type_id,
11:24:32 268  	    notification_status_id	=> var_notification_status_id,
11:24:32 269  	    email_template_params	=> var_email_template_params,
11:24:32 270  	    in_create_date		=> var_create_history_date,
11:24:32 271  	    in_date_to_notify		=> var_date_to_notify
11:24:32 272  	  );
11:24:32 273  	  EXCEPTION
11:24:32 274  	    WHEN OTHERS THEN
11:24:32 275  	      EXCEPTION_MESSAGE := SQLERRM;
11:24:32 276  	      RAISE CAN_NOT_CREATE_HISTORY;
11:24:32 277  	END;
11:24:32 278  
11:24:32 279  	UPDATE
11:24:32 280  	  NOTIFICATION
11:24:32 281  	SET
11:24:32 282  	  NOTIFICATION.NOTIFICATION_STATUS_ID = in_notification_status_id,
11:24:32 283  	  NOTIFICATION.UPDATE_DATE = sysdate
11:24:32 284  	WHERE
11:24:32 285  	  NOTIFICATION.ID = in_notification_id;
11:24:32 286  
11:24:32 287  	IF ( in_error_message IS NOT NULL ) THEN
11:24:32 288  	  ADD_NOTIFICATION_FAILURE(
11:24:32 289  	    in_notification_id => in_notification_id,
11:24:32 290  	    in_error_message => in_error_message
11:24:32 291  	  );
11:24:32 292  	END IF;
11:24:32 293  
11:24:32 294  	SELECT COUNT(1) INTO num_fails
11:24:32 295  	FROM NOTIFICATION_FAILURE
11:24:32 296  	WHERE NOTIFICATION_ID = in_notification_id;
11:24:32 297  
11:24:32 298  	IF (in_notification_status_id = NOTIFICATION_STATUSES_V15.NOTIFICATION_SENT OR num_fails >= max_fails) then
11:24:32 299  	  FOR REC IN (
11:24:32 300  	      SELECT ID, NOTIFICATION_ID, ERROR_MESSAGE, CREATE_DATE
11:24:32 301  	      FROM NOTIFICATION_FAILURE
11:24:32 302  	      WHERE NOTIFICATION_ID = in_notification_id
11:24:32 303  	      ) LOOP
11:24:32 304  	      BEGIN
11:24:32 305  		OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V15.CREATE_NOTIF_FAILURE_HISTORY(
11:24:32 306  		  in_error_message	   => REC.ERROR_MESSAGE,
11:24:32 307  		  in_notification_id	   => REC.NOTIFICATION_ID,
11:24:32 308  		  in_create_date	   => REC.CREATE_DATE
11:24:32 309  		);
11:24:32 310  		EXCEPTION
11:24:32 311  		  WHEN OTHERS THEN
11:24:32 312  		    EXCEPTION_MESSAGE := SQLERRM;
11:24:32 313  		    RAISE CAN_NOT_CREATE_HISTORY;
11:24:32 314  	      END;
11:24:32 315  	  END LOOP;
11:24:32 316  	  DELETE FROM NOTIFICATION_FAILURE WHERE NOTIFICATION_ID = in_notification_id;
11:24:32 317  
11:24:32 318  	  BEGIN
11:24:32 319  	    SELECT
11:24:32 320  	      NOTIFICATION.GROUP_ID,
11:24:32 321  	      NOTIFICATION.ACCOUNT_ID,
11:24:32 322  	      NOTIFICATION.NOTIFICATION_TYPE_ID,
11:24:32 323  	      NOTIFICATION.NOTIFICATION_STATUS_ID,
11:24:32 324  	      NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
11:24:32 325  	      NOTIFICATION.DATE_TO_NOTIFY
11:24:32 326  	      into
11:24:32 327  	      var_group_id,
11:24:32 328  	      var_account_id,
11:24:32 329  	      var_notification_type_id,
11:24:32 330  	      var_notification_status_id,
11:24:32 331  	      var_email_template_params,
11:24:32 332  	      var_date_to_notify
11:24:32 333  	    FROM
11:24:32 334  	      NOTIFICATION
11:24:32 335  	    WHERE
11:24:32 336  	      NOTIFICATION.ID = in_notification_id;
11:24:32 337  	    EXCEPTION
11:24:32 338  	      WHEN NO_DATA_FOUND THEN
11:24:32 339  		RAISE BAD_NOTIFICATION_ID;
11:24:32 340  	  END;
11:24:32 341  
11:24:32 342  	  BEGIN
11:24:32 343  	    OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V15.CREATE_NOTIFICATION_HISTORY (
11:24:32 344  	      in_notification_id	  => in_notification_id,
11:24:32 345  	      in_account_id		  => var_account_id,
11:24:32 346  	      in_group_id		  => var_group_id,
11:24:32 347  	      notification_reason_type_id => var_notification_type_id,
11:24:32 348  	      notification_status_id	  => var_notification_status_id,
11:24:32 349  	      email_template_params	  => var_email_template_params,
11:24:32 350  	      in_create_date		  => var_create_history_date,
11:24:32 351  	      in_date_to_notify 	  => var_date_to_notify
11:24:32 352  	    );
11:24:32 353  	    EXCEPTION
11:24:32 354  	      WHEN OTHERS THEN
11:24:32 355  		EXCEPTION_MESSAGE := SQLERRM;
11:24:32 356  		RAISE CAN_NOT_CREATE_HISTORY;
11:24:32 357  	  END;
11:24:32 358  
11:24:32 359  	  DELETE FROM NOTIFICATION WHERE ID = in_notification_id;
11:24:32 360  
11:24:32 361  	END IF;
11:24:32 362  	commit;
11:24:32 363  
11:24:32 364  EXCEPTION
11:24:32 365  WHEN BAD_NOTIFICATION_STATUS_ID THEN
11:24:32 366  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
11:24:32 367  	  SPROC_NAME, 'Bad notification status');
11:24:32 368  WHEN BAD_NOTIFICATION_ID THEN
11:24:32 369  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
11:24:32 370  	  SPROC_NAME, 'No such notification');
11:24:32 371  WHEN CAN_NOT_CREATE_HISTORY THEN
11:24:32 372  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.INTERNAL_ERROR,
11:24:32 373  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
11:24:32 374  WHEN OTHERS THEN
11:24:32 375  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:24:32 376  	  SPROC_NAME, 'Unknown error', SQLERRM);
11:24:32 377  END SET_NOTIFICATION_STATUS;
11:24:32 378  
11:24:32 379  /******************************************************************************/
11:24:32 380  
11:24:32 381  PROCEDURE ADD_NOTIFICATION_FAILURE (
11:24:32 382  /*
11:24:32 383  Throws exceptions:
11:24:32 384  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32 385  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32 386  */
11:24:32 387  	in_notification_id IN NUMBER,
11:24:32 388  	in_error_message   IN VARCHAR2
11:24:32 389  ) AS
11:24:32 390  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION_FAILURE';
11:24:32 391  -- VARIABLES
11:24:32 392  temp_notification_id NUMBER;
11:24:32 393  var_create_date	   DATE := SYSDATE;
11:24:32 394  -- EXCEPTIONS
11:24:32 395  BAD_NOTIFICATION_ID	 EXCEPTION;
11:24:32 396  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
11:24:32 397  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
11:24:32 398  BEGIN
11:24:32 399  
11:24:32 400  	BEGIN
11:24:32 401  	  SELECT
11:24:32 402  	    NOTIFICATION.ID into temp_notification_id
11:24:32 403  	  FROM
11:24:32 404  	    NOTIFICATION
11:24:32 405  	  WHERE
11:24:32 406  	    NOTIFICATION.ID = in_notification_id;
11:24:32 407  	  EXCEPTION
11:24:32 408  	    WHEN NO_DATA_FOUND THEN
11:24:32 409  	      RAISE BAD_NOTIFICATION_ID;
11:24:32 410  	END;
11:24:32 411  
11:24:32 412  	INSERT INTO NOTIFICATION_FAILURE (
11:24:32 413  	  ID,
11:24:32 414  	  NOTIFICATION_ID,
11:24:32 415  	  ERROR_MESSAGE,
11:24:32 416  	  CREATE_DATE
11:24:32 417  	) VALUES (
11:24:32 418  	  NOTF_ID_SEQ.nextVal,
11:24:32 419  	  in_notification_id,
11:24:32 420  	  in_error_message,
11:24:32 421  	  sysdate
11:24:32 422  	);
11:24:32 423  
11:24:32 424  	--BEGIN
11:24:32 425  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V15.CREATE_NOTIF_FAILURE_HISTORY(
11:24:32 426  	--    in_error_message	       => in_error_message,
11:24:32 427  	--    in_notification_queue_id => in_notification_id,
11:24:32 428  	--    in_create_date	       => var_create_date
11:24:32 429  	--  );
11:24:32 430  	--  EXCEPTION
11:24:32 431  	--    WHEN OTHERS THEN
11:24:32 432  	--	EXCEPTION_MESSAGE := SQLERRM;
11:24:32 433  	--	RAISE CAN_NOT_CREATE_HISTORY;
11:24:32 434  	--END;
11:24:32 435  
11:24:32 436  EXCEPTION
11:24:32 437  WHEN BAD_NOTIFICATION_ID THEN
11:24:32 438  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND,
11:24:32 439  	  SPROC_NAME, 'No such notification');
11:24:32 440  WHEN CAN_NOT_CREATE_HISTORY THEN
11:24:32 441  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.INTERNAL_ERROR,
11:24:32 442  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
11:24:32 443  WHEN OTHERS THEN
11:24:32 444  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:24:32 445  	  SPROC_NAME, 'Unknown error', SQLERRM);
11:24:32 446  END ADD_NOTIFICATION_FAILURE;
11:24:32 447  
11:24:32 448  /******************************************************************************/
11:24:32 449  
11:24:32 450  PROCEDURE LOCK_PENDING_NOTIFICATION (
11:24:32 451  /*
11:24:32 452  Result: GLOBAL_STATUSES.TRUE if notification locked
11:24:32 453  GLOBA_STATUSES.FALSE - else
11:24:32 454  */
11:24:32 455  	in_notification_id IN NUMBER,
11:24:32 456  	out_lock_status    OUT NUMBER
11:24:32 457  ) AS
11:24:32 458  SPROC_NAME CONSTANT VARCHAR2(25) := 'LOCK_PENDING_NOTIFICATION';
11:24:32 459  -- VARIABLE
11:24:32 460  temp_notification_id NUMBER;
11:24:32 461  BEGIN
11:24:32 462  	SELECT
11:24:32 463  	  NOTIFICATION.ID into temp_notification_id
11:24:32 464  	FROM
11:24:32 465  	  NOTIFICATION
11:24:32 466  	WHERE
11:24:32 467  	  NOTIFICATION.ID = in_notification_id
11:24:32 468  	  AND (
11:24:32 469  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V15.NOTIFICATION_PENDING
11:24:32 470  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V15.NOTIFICATION_FAILED
11:24:32 471  	  )
11:24:32 472  	FOR UPDATE;
11:24:32 473  
11:24:32 474  	out_lock_status := 1;
11:24:32 475  
11:24:32 476  EXCEPTION
11:24:32 477  WHEN NO_DATA_FOUND THEN
11:24:32 478  	out_lock_status := 0;
11:24:32 479  WHEN OTHERS THEN
11:24:32 480  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:24:32 481  	  SPROC_NAME, 'Unknown error', SQLERRM);
11:24:32 482  END LOCK_PENDING_NOTIFICATION;
11:24:32 483  
11:24:32 484  /******************************************************************************/
11:24:32 485  
11:24:32 486  PROCEDURE GET_NOTIFICATION_DATA (
11:24:32 487  	in_notification_id IN NUMBER,
11:24:32 488  	out_result_set	   OUT SYS_REFCURSOR
11:24:32 489  ) AS
11:24:32 490  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_NOTIFICATION_DATA';
11:24:32 491  BEGIN
11:24:32 492  	OPEN out_result_set FOR
11:24:32 493  	SELECT
11:24:32 494  	  NOTIFICATION.ID,
11:24:32 495  	  NOTIFICATION.GROUP_ID,
11:24:32 496  	  NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
11:24:32 497  	  NOTIFICATION.NOTIFICATION_STATUS_ID,
11:24:32 498  	  NOTIFICATION.CREATE_DATE,
11:24:32 499  	  NOTIFICATION.UPDATE_DATE,
11:24:32 500  	  NOTIFICATION.NOTIFICATION_TYPE_ID,
11:24:32 501  	  NOTIFICATION_TYPE.VALUE as "TYPE_VALUE",
11:24:32 502  	  NOTIFICATION_TYPE.TEMPLATE_URL
11:24:32 503  	FROM
11:24:32 504  	  NOTIFICATION
11:24:32 505  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
11:24:32 506  	WHERE
11:24:32 507  	  NOTIFICATION.ID = in_notification_id;
11:24:32 508  
11:24:32 509  EXCEPTION
11:24:32 510  WHEN OTHERS THEN
11:24:32 511  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:24:32 512  	  SPROC_NAME, 'Unknown error', SQLERRM);
11:24:32 513  END GET_NOTIFICATION_DATA;
11:24:32 514  
11:24:32 515  END PROCS_NOTIFICATION_V15;
11:24:32 516  .
11:24:32 SQL> /

Package body created.

Elapsed: 00:00:00.05
11:24:32 SQL> 
11:24:32 SQL> --------------------------------------------------------------------------------
11:24:32 SQL> -- DDL for package PROCS_PROCESS_RETRY_THROTTLE
11:24:32 SQL> --------------------------------------------------------------------------------
11:24:32 SQL> 
11:24:32 SQL> CREATE OR REPLACE PACKAGE "PROCS_PROCESS_RETRY_V15" AS
11:24:32   2  
11:24:32   3  PROCEDURE LOG_RETRY(
11:24:32   4  	  in_process_name IN VARCHAR2,
11:24:32   5  	  in_generic_id   IN NUMBER,
11:24:32   6  	  in_date	  IN VARCHAR2,
11:24:32   7  	  out_success	   OUT NUMBER
11:24:32   8  );
11:24:32   9  
11:24:32  10  PROCEDURE DELETE_RETRY(
11:24:32  11  	  in_process_name IN VARCHAR2,
11:24:32  12  	  in_remove_minutes  IN NUMBER
11:24:32  13  );
11:24:32  14  
11:24:32  15  PROCEDURE GET_SYSDATE (
11:24:32  16  	  out_date OUT VARCHAR2
11:24:32  17  );
11:24:32  18  
11:24:32  19  END PROCS_PROCESS_RETRY_V15;
11:24:32  20  .
11:24:32 SQL> /

Package created.

Elapsed: 00:00:00.03
11:24:32 SQL> 
11:24:32 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_PROCESS_RETRY_V15" AS
11:24:32   2  
11:24:32   3  PROCEDURE LOG_RETRY(
11:24:32   4  	  in_process_name IN VARCHAR2,
11:24:32   5  	  in_generic_id   IN NUMBER,
11:24:32   6  	  in_date	  IN VARCHAR2,
11:24:32   7  	  out_success	   OUT NUMBER
11:24:32   8  ) AS
11:24:32   9  SPROC_NAME CONSTANT VARCHAR2(32) := 'PROCS_PROCESS_RETRY_V15';
11:24:32  10  BEGIN
11:24:32  11  
11:24:32  12  	out_success := 1;
11:24:32  13  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
11:24:32  14  	VALUES (in_process_name, in_generic_id, 1, to_date(in_date, 'DD-Mon-YYYY HH24:MI:SS'), sysdate);
11:24:32  15  	commit;
11:24:32  16  EXCEPTION
11:24:32  17  WHEN DUP_VAL_ON_INDEX THEN
11:24:32  18  	rollback;
11:24:32  19  	out_success := 0;
11:24:32  20  WHEN OTHERS THEN
11:24:32  21  	rollback;
11:24:32  22  	PROCS_COMMON_V15.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:24:32  23  	  SPROC_NAME, 'Unknown error', SQLERRM);
11:24:32  24  
11:24:32  25  END;
11:24:32  26  
11:24:32  27  PROCEDURE DELETE_RETRY(
11:24:32  28  	  in_process_name IN VARCHAR2,
11:24:32  29  	  in_remove_minutes  IN NUMBER
11:24:32  30  ) AS
11:24:32  31  BEGIN
11:24:32  32  
11:24:32  33  delete from PROCESS_RETRY_THROTTLE
11:24:32  34  where
11:24:32  35  	process_name = in_process_name and
11:24:32  36  	create_date <= sysdate-in_remove_minutes/1440;
11:24:32  37  commit;
11:24:32  38  END;
11:24:32  39  
11:24:32  40  PROCEDURE GET_SYSDATE (
11:24:32  41  	out_date  OUT VARCHAR2
11:24:32  42  ) AS
11:24:32  43  BEGIN
11:24:32  44  	SELECT to_char(SYSDATE, 'DD-Mon-YYYY HH24:MI:SS') into out_date from dual;
11:24:32  45  END;
11:24:32  46  
11:24:32  47  END PROCS_PROCESS_RETRY_V15;
11:24:32  48  .
11:24:32 SQL> /

Package body created.

Elapsed: 00:00:00.03
11:24:32 SQL> 
11:24:32 SQL> --------------------------------------------------------------------------------
11:24:32 SQL> -- DDL for package PROCS_SYSTEM
11:24:32 SQL> --------------------------------------------------------------------------------
11:24:32 SQL> 
11:24:32 SQL> CREATE OR REPLACE PACKAGE "PROCS_SYSTEM_V15" AS
11:24:32   2  
11:24:32   3  PROCEDURE INCREMENT_VERSION;
11:24:32   4  
11:24:32   5  PROCEDURE CHECK_VERSION(
11:24:32   6  	  in_vers    IN NUMBER,
11:24:32   7  	  out_result OUT NUMBER
11:24:32   8  );
11:24:32   9  
11:24:32  10  END PROCS_SYSTEM_V15;
11:24:32  11  .
11:24:32 SQL> /

Package created.

Elapsed: 00:00:00.01
11:24:32 SQL> 
11:24:32 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SYSTEM_V15" AS
11:24:32   2  
11:24:32   3  PROCEDURE INCREMENT_VERSION
11:24:32   4  /*
11:24:32   5  Throws exceptions:
11:24:32   6  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32   7  */
11:24:32   8  AS
11:24:32   9  BEGIN
11:24:32  10  
11:24:32  11  	UPDATE SYS_VERSION SET version=version+1;
11:24:32  12  
11:24:32  13  EXCEPTION
11:24:32  14  WHEN OTHERS THEN
11:24:32  15  	RAISE_APPLICATION_ERROR(CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR,
11:24:32  16  	  'Unknown error');
11:24:32  17  END INCREMENT_VERSION;
11:24:32  18  
11:24:32  19  /*************************************************************/
11:24:32  20  
11:24:32  21  PROCEDURE CHECK_VERSION(
11:24:32  22  	  in_vers    IN NUMBER,
11:24:32  23  	  out_result OUT NUMBER
11:24:32  24  ) AS
11:24:32  25  	current_version NUMBER;
11:24:32  26  BEGIN
11:24:32  27  	SELECT version INTO current_version FROM SYS_VERSION;
11:24:32  28  	IF(current_version != in_vers) THEN
11:24:32  29  	  out_result := 1;
11:24:32  30  	ELSE
11:24:32  31  	  out_result := 0;
11:24:32  32  	END IF;
11:24:32  33  	EXCEPTION
11:24:32  34  	      WHEN OTHERS THEN
11:24:32  35  	      NULL;
11:24:32  36  END CHECK_VERSION;
11:24:32  37  
11:24:32  38  END PROCS_SYSTEM_V15;
11:24:32  39  .
11:24:32 SQL> /

Package body created.

Elapsed: 00:00:00.02
11:24:32 SQL> 
11:24:32 SQL> --------------------------------------------------------------------------------
11:24:32 SQL> -- DDL for package PUBLIC_PROCS_CLIENT
11:24:32 SQL> --------------------------------------------------------------------------------
11:24:32 SQL> 
11:24:32 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_CLIENT_V15" AS
11:24:32   2  
11:24:32   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
11:24:32   4  /*
11:24:32   5  Throws exceptions:
11:24:32   6  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32   7  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32   8  */
11:24:32   9  	in_notification_type_name IN VARCHAR2,
11:24:32  10  	out_notification_type_id  OUT NUMBER
11:24:32  11  );
11:24:32  12  
11:24:32  13  PROCEDURE ADD_NOTIFICATION (
11:24:32  14  /*
11:24:32  15  Throws exceptions:
11:24:32  16  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32  17  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32  18  */
11:24:32  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
11:24:32  20  	in_recipient_group_id	 IN NUMBER,
11:24:32  21  	in_notification_type_id  IN NUMBER,
11:24:32  22  	in_date_to_notify	 IN DATE,
11:24:32  23  	in_email_template_params IN CLOB
11:24:32  24  );
11:24:32  25  
11:24:32  26  END PUBLIC_PROCS_CLIENT_V15;
11:24:32  27  .
11:24:32 SQL> /

Package created.

Elapsed: 00:00:00.02
11:24:32 SQL> 
11:24:32 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_CLIENT_V15" AS
11:24:32   2  
11:24:32   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
11:24:32   4  /*
11:24:32   5  Throws exceptions:
11:24:32   6  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32   7  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32   8  */
11:24:32   9  	in_notification_type_name IN VARCHAR2,
11:24:32  10  	out_notification_type_id  OUT NUMBER
11:24:32  11  ) AS
11:24:32  12  BEGIN
11:24:32  13  	PROCS_NOTIFICATION_V15.GET_NOTIFICATION_TYPE_BY_NAME (
11:24:32  14  	  in_notification_type_name,
11:24:32  15  	  out_notification_type_id
11:24:32  16  	);
11:24:32  17  END;
11:24:32  18  
11:24:32  19  /*****************************************************************/
11:24:32  20  
11:24:32  21  PROCEDURE ADD_NOTIFICATION (
11:24:32  22  /*
11:24:32  23  Throws exceptions:
11:24:32  24  CORE_OWNER.APP_EXCEPTION_CODES_V15.NOT_FOUND
11:24:32  25  CORE_OWNER.APP_EXCEPTION_CODES_V15.UNKNOWN_ERROR
11:24:32  26  */
11:24:32  27  	in_sender_account_id	 IN NUMBER DEFAULT 0,
11:24:32  28  	in_recipient_group_id	 IN NUMBER,
11:24:32  29  	in_notification_type_id  IN NUMBER,
11:24:32  30  	in_date_to_notify	 IN DATE,
11:24:32  31  	in_email_template_params IN CLOB
11:24:32  32  ) AS
11:24:32  33  BEGIN
11:24:32  34  	PROCS_NOTIFICATION_V15.ADD_NOTIFICATION (
11:24:32  35  	  in_sender_account_id,
11:24:32  36  	  in_recipient_group_id,
11:24:32  37  	  in_notification_type_id,
11:24:32  38  	  in_date_to_notify,
11:24:32  39  	  in_email_template_params
11:24:32  40  	);
11:24:32  41  END;
11:24:32  42  
11:24:32  43  END PUBLIC_PROCS_CLIENT_V15;
11:24:32  44  .
11:24:32 SQL> /

Package body created.

Elapsed: 00:00:00.02
11:24:32 SQL> 
11:24:32 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V15 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V15 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V15 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> 
11:24:32 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V15 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V15 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V15 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> 
11:24:32 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V15 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V15 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V15 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> 
11:24:32 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V15 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V15 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V15 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V15 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> 
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_poller_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V15 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> 
11:24:32 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
11:24:32 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> 
11:24:32 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> 
11:24:32 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> 
11:24:32 SQL> grant select, insert, update, delete ON OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> grant select ON OPS_OWNER.NOTTID_SEQ to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
11:24:32 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
11:24:32 SQL> spool off;


Subject: Nomad upgrade success: ECPR@rac01.prd.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: steven.nedlin@nytimes.com
Nomad upgrade operation success. 
        
        Details
        -------
        DB Hostname: rac01.prd.ewr1.nytimes.com
        SID: ECPR
        Schema: ops_owner
        Migration: 2-release-1.10.0-all
        SVN Revision: 9677
        Duration: 1