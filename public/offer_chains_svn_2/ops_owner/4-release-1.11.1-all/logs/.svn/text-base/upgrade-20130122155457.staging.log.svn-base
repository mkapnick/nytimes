15:55:09 SQL> @/dbbackups/ECST2/migrations/ops_owner/4-release-1.11.1-all/upgrade.sql
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> -- DDL for package NOTIFICATION_STATUSES
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V17" AS
15:55:09   2  
15:55:09   3  ----
15:55:09   4  -- NOTIFICATION STATUSES
15:55:09   5  
15:55:09   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
15:55:09   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
15:55:09   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
15:55:09   9  
15:55:09  10  END NOTIFICATION_STATUSES_V17;
15:55:09  11  .
15:55:09 SQL> /

Package created.

Elapsed: 00:00:00.02
15:55:09 SQL> 
15:55:09 SQL> 
15:55:09 SQL> 
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> -- DDL for package PROCS_COMMON
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V17" AS
15:55:09   2  
15:55:09   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
15:55:09   4  	in_sproc_name	    IN VARCHAR2,
15:55:09   5  	in_error_message    IN VARCHAR2,
15:55:09   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
15:55:09   7  ) RETURN VARCHAR2;
15:55:09   8  
15:55:09   9  PROCEDURE THROW_EXCEPTION(
15:55:09  10  	in_exception_code   IN NUMBER,
15:55:09  11  	in_sproc_name	    IN VARCHAR2,
15:55:09  12  	in_error_message    IN VARCHAR2,
15:55:09  13  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
15:55:09  14  );
15:55:09  15  
15:55:09  16  END PROCS_COMMON_V17;
15:55:09  17  .
15:55:09 SQL> /

Package created.

Elapsed: 00:00:00.02
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V17" AS
15:55:09   2  
15:55:09   3  FUNCTION GENERATE_EXCEPTION_MESSAGE(
15:55:09   4  	in_sproc_name	    IN VARCHAR2,
15:55:09   5  	in_error_message    IN VARCHAR2,
15:55:09   6  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
15:55:09   7  ) RETURN VARCHAR2 AS
15:55:09   8  BEGIN
15:55:09   9  	IF in_error_stacktrace IS NOT NULL THEN
15:55:09  10  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || chr(10) || in_error_stacktrace;
15:55:09  11  	END IF;
15:55:09  12  	RETURN
15:55:09  13  	  in_sproc_name || ': ' || in_error_message;
15:55:09  14  END GENERATE_EXCEPTION_MESSAGE;
15:55:09  15  
15:55:09  16  /******************************************************************************/
15:55:09  17  
15:55:09  18  PROCEDURE THROW_EXCEPTION(
15:55:09  19  	in_exception_code   IN NUMBER,
15:55:09  20  	in_sproc_name	    IN VARCHAR2,
15:55:09  21  	in_error_message    IN VARCHAR2,
15:55:09  22  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
15:55:09  23  ) AS
15:55:09  24  BEGIN
15:55:09  25  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
15:55:09  26  END;
15:55:09  27  
15:55:09  28  END PROCS_COMMON_V17;
15:55:09  29  .
15:55:09 SQL> /

Package body created.

Elapsed: 00:00:00.01
15:55:09 SQL> 
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> -- DDL for package PROCS_NOTIFICATION
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE "PROCS_NOTIFICATION_V17" AS
15:55:09   2  
15:55:09   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
15:55:09   4  /*
15:55:09   5  Throws exceptions:
15:55:09   6  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09   7  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09   8  */
15:55:09   9  	in_notification_type_name IN VARCHAR2,
15:55:09  10  	out_notification_type_id  OUT NUMBER
15:55:09  11  );
15:55:09  12  
15:55:09  13  PROCEDURE ADD_NOTIFICATION (
15:55:09  14  /*
15:55:09  15  Throws exceptions:
15:55:09  16  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09  17  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09  18  */
15:55:09  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
15:55:09  20  	in_recipient_group_id	 IN NUMBER,
15:55:09  21  	in_notification_type_id  IN NUMBER,
15:55:09  22  	in_date_to_notify	 IN DATE,
15:55:09  23  	in_email_template_params IN CLOB
15:55:09  24  );
15:55:09  25  
15:55:09  26  PROCEDURE GET_PENDING_NOTIFICATIONS (
15:55:09  27  /*
15:55:09  28  Throws exceptions:
15:55:09  29  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09  30  */
15:55:09  31  	out_result_set OUT SYS_REFCURSOR
15:55:09  32  );
15:55:09  33  
15:55:09  34  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
15:55:09  35  /*
15:55:09  36  Throws exceptions:
15:55:09  37  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09  38  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09  39  */
15:55:09  40  	in_notification_id IN NUMBER
15:55:09  41  );
15:55:09  42  
15:55:09  43  PROCEDURE SET_NOTIFICATION_STATUS (
15:55:09  44  /*
15:55:09  45  Throws exceptions:
15:55:09  46  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09  47  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09  48  */
15:55:09  49  	in_notification_id	  IN NUMBER,
15:55:09  50  	in_notification_status_id IN NUMBER,
15:55:09  51  	in_error_message	  IN VARCHAR2
15:55:09  52  );
15:55:09  53  
15:55:09  54  PROCEDURE ADD_NOTIFICATION_FAILURE (
15:55:09  55  /*
15:55:09  56  Throws exceptions:
15:55:09  57  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09  58  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09  59  */
15:55:09  60  	in_notification_id IN NUMBER,
15:55:09  61  	in_error_message   IN VARCHAR2
15:55:09  62  );
15:55:09  63  
15:55:09  64  PROCEDURE LOCK_PENDING_NOTIFICATION (
15:55:09  65  /*
15:55:09  66  Result: 1 if notification locked
15:55:09  67  2 - else
15:55:09  68  */
15:55:09  69  	in_notification_id IN NUMBER,
15:55:09  70  	out_lock_status    OUT NUMBER
15:55:09  71  );
15:55:09  72  
15:55:09  73  PROCEDURE GET_NOTIFICATION_DATA (
15:55:09  74  	in_notification_id IN NUMBER,
15:55:09  75  	out_result_set	   OUT SYS_REFCURSOR
15:55:09  76  );
15:55:09  77  
15:55:09  78  END PROCS_NOTIFICATION_V17;
15:55:09  79  .
15:55:09 SQL> /

Package created.

Elapsed: 00:00:00.03
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_NOTIFICATION_V17" AS
15:55:09   2  
15:55:09   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
15:55:09   4  /*
15:55:09   5  Throws exceptions:
15:55:09   6  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09   7  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09   8  */
15:55:09   9  	in_notification_type_name IN VARCHAR2,
15:55:09  10  	out_notification_type_id  OUT NUMBER
15:55:09  11  ) AS
15:55:09  12  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NOTIFICATION_TYPE_BY_NAME';
15:55:09  13  BEGIN
15:55:09  14  	SELECT
15:55:09  15  	  NOTIFICATION_TYPE.ID into out_notification_type_id
15:55:09  16  	FROM
15:55:09  17  	  NOTIFICATION_TYPE
15:55:09  18  	WHERE
15:55:09  19  	  NOTIFICATION_TYPE.VALUE = in_notification_type_name;
15:55:09  20  EXCEPTION
15:55:09  21  WHEN NO_DATA_FOUND THEN
15:55:09  22  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND,
15:55:09  23  	  SPROC_NAME, 'No such type');
15:55:09  24  WHEN OTHERS THEN
15:55:09  25  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09  26  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:55:09  27  END GET_NOTIFICATION_TYPE_BY_NAME;
15:55:09  28  
15:55:09  29  /******************************************************************/
15:55:09  30  
15:55:09  31  PROCEDURE ADD_NOTIFICATION (
15:55:09  32  /*
15:55:09  33  Throws exceptions:
15:55:09  34  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09  35  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09  36  */
15:55:09  37  	in_sender_account_id	 IN NUMBER DEFAULT 0,
15:55:09  38  	in_recipient_group_id	 IN NUMBER,
15:55:09  39  	in_notification_type_id  IN NUMBER,
15:55:09  40  	in_date_to_notify	 IN DATE,
15:55:09  41  	in_email_template_params IN CLOB
15:55:09  42  ) AS
15:55:09  43  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION';
15:55:09  44  -- VARIABLES
15:55:09  45  temp_type_count NUMBER;
15:55:09  46  var_create_date DATE := SYSDATE;
15:55:09  47  -- EXCEPTIONS
15:55:09  48  BAD_NOTIFICATION_TYPE_ID EXCEPTION;
15:55:09  49  CAN_NOT_CREATE_HISTORY   EXCEPTION;
15:55:09  50  EXCEPTION_MESSAGE        VARCHAR2(1024);
15:55:09  51  BEGIN
15:55:09  52  
15:55:09  53  	SELECT
15:55:09  54  	  COUNT(*) into temp_type_count
15:55:09  55  	FROM
15:55:09  56  	  NOTIFICATION_TYPE
15:55:09  57  	WHERE
15:55:09  58  	  NOTIFICATION_TYPE.ID = in_notification_type_id;
15:55:09  59  
15:55:09  60  	IF temp_type_count = 0 THEN
15:55:09  61  	  RAISE BAD_NOTIFICATION_TYPE_ID;
15:55:09  62  	END IF;
15:55:09  63  
15:55:09  64  	INSERT INTO NOTIFICATION (
15:55:09  65  	  ID,
15:55:09  66  	  ACCOUNT_ID,
15:55:09  67  	  GROUP_ID,
15:55:09  68  	  NOTIFICATION_TYPE_ID,
15:55:09  69  	  NOTIFICATION_STATUS_ID,
15:55:09  70  	  EMAIL_TEMPLATE_PARAMS,
15:55:09  71  	  UPDATE_DATE,
15:55:09  72  	  CREATE_DATE,
15:55:09  73  	  DATE_TO_NOTIFY
15:55:09  74  	) VALUES (
15:55:09  75  	  NOT_ID_SEQ.nextVal,
15:55:09  76  	  in_sender_account_id,
15:55:09  77  	  in_recipient_group_id,
15:55:09  78  	  in_notification_type_id,
15:55:09  79  	  NOTIFICATION_STATUSES_V17.NOTIFICATION_PENDING,
15:55:09  80  	  in_email_template_params,
15:55:09  81  	  var_create_date,
15:55:09  82  	  var_create_date,
15:55:09  83  	  in_date_to_notify
15:55:09  84  	);
15:55:09  85  
15:55:09  86  	--BEGIN
15:55:09  87  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V17.CREATE_NOTIFICATION_HISTORY (
15:55:09  88  	--    in_account_id		  => 0, -- ACCOUNT_ID. Can we delete it?
15:55:09  89  	--    in_group_id		  => in_recipient_group_id,
15:55:09  90  	--    notification_reason_type_id => in_notification_type_id,
15:55:09  91  	--    notification_status_id	  => NOTIFICATION_STATUSES_V17.NOTIFICATION_PENDING,
15:55:09  92  	--    email_template_params	  => in_email_template_params,
15:55:09  93  	--    in_create_date		  => var_create_date
15:55:09  94  	--  );
15:55:09  95  	--  EXCEPTION
15:55:09  96  	--    WHEN OTHERS THEN
15:55:09  97  	--	EXCEPTION_MESSAGE := SQLERRM;
15:55:09  98  	--	RAISE CAN_NOT_CREATE_HISTORY;
15:55:09  99  	--END;
15:55:09 100  
15:55:09 101  EXCEPTION
15:55:09 102  WHEN BAD_NOTIFICATION_TYPE_ID THEN
15:55:09 103  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND,
15:55:09 104  	  SPROC_NAME, 'No such notification status');
15:55:09 105  WHEN CAN_NOT_CREATE_HISTORY THEN
15:55:09 106  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.INTERNAL_ERROR,
15:55:09 107  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:55:09 108  WHEN OTHERS THEN
15:55:09 109  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09 110  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:55:09 111  END ADD_NOTIFICATION;
15:55:09 112  
15:55:09 113  /******************************************************************************/
15:55:09 114  
15:55:09 115  PROCEDURE GET_PENDING_NOTIFICATIONS (
15:55:09 116  /*
15:55:09 117  Throws exceptions:
15:55:09 118  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09 119  */
15:55:09 120  	out_result_set OUT SYS_REFCURSOR
15:55:09 121  ) AS
15:55:09 122  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_PENDING_NOTIFICATIONS';
15:55:09 123  -- CONSTANTS
15:55:09 124  C_NOTIFICATION_COUNT_LIMIT CONSTANT NUMBER := 500;
15:55:09 125  BEGIN
15:55:09 126  	OPEN out_result_set FOR
15:55:09 127  SELECT * FROM
15:55:09 128  (
15:55:09 129  	SELECT
15:55:09 130  	  NOTIFICATION.ID
15:55:09 131  	FROM
15:55:09 132  	  NOTIFICATION
15:55:09 133  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
15:55:09 134  	WHERE
15:55:09 135  	  ROWNUM <= C_NOTIFICATION_COUNT_LIMIT*10
15:55:09 136  	  AND NOT EXISTS (
15:55:09 137  	    SELECT NULL
15:55:09 138  	    FROM OPS_OWNER.PROCESS_RETRY_THROTTLE
15:55:09 139  	    WHERE GENERIC_ID = NOTIFICATION.ID AND PROCESS_NAME = SPROC_NAME
15:55:09 140  	  )
15:55:09 141  	  AND (
15:55:09 142  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V17.NOTIFICATION_PENDING
15:55:09 143  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V17.NOTIFICATION_FAILED
15:55:09 144  	  )
15:55:09 145  	  AND (
15:55:09 146  	    NOTIFICATION.DATE_TO_NOTIFY IS NULL OR SYSDATE > NOTIFICATION.DATE_TO_NOTIFY
15:55:09 147  	  )ORDER BY dbms_random.value
15:55:09 148  ) WHERE
15:55:09 149  	ROWNUM <= C_NOTIFICATION_COUNT_LIMIT;
15:55:09 150  
15:55:09 151  EXCEPTION
15:55:09 152  WHEN OTHERS THEN
15:55:09 153  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09 154  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:55:09 155  END GET_PENDING_NOTIFICATIONS;
15:55:09 156  
15:55:09 157  /******************************************************************************/
15:55:09 158  
15:55:09 159  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
15:55:09 160  /*
15:55:09 161  Throws exceptions:
15:55:09 162  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09 163  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09 164  */
15:55:09 165  	in_notification_id IN NUMBER
15:55:09 166  ) AS
15:55:09 167  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_NOTIFICATION_TIMESTAMP';
15:55:09 168  -- VARIABLES
15:55:09 169  temp_notification_id NUMBER;
15:55:09 170  -- EXCEPTIONS
15:55:09 171  BAD_NOTIFICATION_ID EXCEPTION;
15:55:09 172  BEGIN
15:55:09 173  
15:55:09 174  	BEGIN
15:55:09 175  	  SELECT
15:55:09 176  	    NOTIFICATION.ID into temp_notification_id
15:55:09 177  	  FROM
15:55:09 178  	    NOTIFICATION
15:55:09 179  	  WHERE
15:55:09 180  	    NOTIFICATION.ID = in_notification_id;
15:55:09 181  	  EXCEPTION
15:55:09 182  	    WHEN NO_DATA_FOUND THEN
15:55:09 183  	      RAISE BAD_NOTIFICATION_ID;
15:55:09 184  	END;
15:55:09 185  
15:55:09 186  	UPDATE
15:55:09 187  	  NOTIFICATION
15:55:09 188  	SET
15:55:09 189  	  NOTIFICATION.UPDATE_DATE = sysdate
15:55:09 190  	WHERE
15:55:09 191  	  NOTIFICATION.ID = in_notification_id;
15:55:09 192  
15:55:09 193  EXCEPTION
15:55:09 194  WHEN BAD_NOTIFICATION_ID THEN
15:55:09 195  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND,
15:55:09 196  	  SPROC_NAME, 'No such notification');
15:55:09 197  WHEN OTHERS THEN
15:55:09 198  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09 199  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:55:09 200  END UPDATE_NOTIFICATION_TIMESTAMP;
15:55:09 201  
15:55:09 202  /******************************************************************************/
15:55:09 203  
15:55:09 204  PROCEDURE SET_NOTIFICATION_STATUS (
15:55:09 205  /*
15:55:09 206  Throws exceptions:
15:55:09 207  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09 208  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09 209  */
15:55:09 210  	in_notification_id	  IN NUMBER,
15:55:09 211  	in_notification_status_id IN NUMBER,
15:55:09 212  	in_error_message	  IN VARCHAR2
15:55:09 213  ) AS
15:55:09 214  SPROC_NAME CONSTANT VARCHAR2(32) := 'SET_NOTIFICATION_STATUS';
15:55:09 215  -- VARIABLES
15:55:09 216  var_group_id		NUMBER;
15:55:09 217  var_account_id		NUMBER;
15:55:09 218  var_notification_type_id	NUMBER;
15:55:09 219  var_email_template_params CLOB;
15:55:09 220  var_create_history_date	DATE := SYSDATE;
15:55:09 221  var_notification_status_id   NUMBER;
15:55:09 222  var_date_to_notify	DATE;
15:55:09 223  max_fails   NUMBER := 5;
15:55:09 224  num_fails   NUMBER;
15:55:09 225  -- EXCEPTIONS
15:55:09 226  BAD_NOTIFICATION_ID	 EXCEPTION;
15:55:09 227  BAD_NOTIFICATION_STATUS_ID EXCEPTION;
15:55:09 228  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
15:55:09 229  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
15:55:09 230  BEGIN
15:55:09 231  
15:55:09 232  	IF in_notification_status_id != NOTIFICATION_STATUSES_V17.NOTIFICATION_SENT
15:55:09 233  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V17.NOTIFICATION_PENDING
15:55:09 234  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V17.NOTIFICATION_FAILED THEN
15:55:09 235  	  RAISE BAD_NOTIFICATION_STATUS_ID;
15:55:09 236  	END IF;
15:55:09 237  
15:55:09 238  	BEGIN
15:55:09 239  	  SELECT
15:55:09 240  	    NOTIFICATION.GROUP_ID,
15:55:09 241  	    NOTIFICATION.ACCOUNT_ID,
15:55:09 242  	    NOTIFICATION.NOTIFICATION_TYPE_ID,
15:55:09 243  	    NOTIFICATION.NOTIFICATION_STATUS_ID,
15:55:09 244  	    NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
15:55:09 245  	    NOTIFICATION.DATE_TO_NOTIFY
15:55:09 246  	    into
15:55:09 247  	    var_group_id,
15:55:09 248  	    var_account_id,
15:55:09 249  	    var_notification_type_id,
15:55:09 250  	    var_notification_status_id,
15:55:09 251  	    var_email_template_params,
15:55:09 252  	    var_date_to_notify
15:55:09 253  	  FROM
15:55:09 254  	    NOTIFICATION
15:55:09 255  	  WHERE
15:55:09 256  	    NOTIFICATION.ID = in_notification_id;
15:55:09 257  	  EXCEPTION
15:55:09 258  	    WHEN NO_DATA_FOUND THEN
15:55:09 259  	      RAISE BAD_NOTIFICATION_ID;
15:55:09 260  	END;
15:55:09 261  
15:55:09 262  	BEGIN
15:55:09 263  	  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V17.CREATE_NOTIFICATION_HISTORY (
15:55:09 264  	    in_notification_id		=> in_notification_id,
15:55:09 265  	    in_account_id		=> var_account_id,
15:55:09 266  	    in_group_id 		=> var_group_id,
15:55:09 267  	    notification_reason_type_id => var_notification_type_id,
15:55:09 268  	    notification_status_id	=> var_notification_status_id,
15:55:09 269  	    email_template_params	=> var_email_template_params,
15:55:09 270  	    in_create_date		=> var_create_history_date,
15:55:09 271  	    in_date_to_notify		=> var_date_to_notify
15:55:09 272  	  );
15:55:09 273  	  EXCEPTION
15:55:09 274  	    WHEN OTHERS THEN
15:55:09 275  	      EXCEPTION_MESSAGE := SQLERRM;
15:55:09 276  	      RAISE CAN_NOT_CREATE_HISTORY;
15:55:09 277  	END;
15:55:09 278  
15:55:09 279  	UPDATE
15:55:09 280  	  NOTIFICATION
15:55:09 281  	SET
15:55:09 282  	  NOTIFICATION.NOTIFICATION_STATUS_ID = in_notification_status_id,
15:55:09 283  	  NOTIFICATION.UPDATE_DATE = sysdate
15:55:09 284  	WHERE
15:55:09 285  	  NOTIFICATION.ID = in_notification_id;
15:55:09 286  
15:55:09 287  	IF ( in_error_message IS NOT NULL ) THEN
15:55:09 288  	  ADD_NOTIFICATION_FAILURE(
15:55:09 289  	    in_notification_id => in_notification_id,
15:55:09 290  	    in_error_message => in_error_message
15:55:09 291  	  );
15:55:09 292  	END IF;
15:55:09 293  
15:55:09 294  	SELECT COUNT(1) INTO num_fails
15:55:09 295  	FROM NOTIFICATION_FAILURE
15:55:09 296  	WHERE NOTIFICATION_ID = in_notification_id;
15:55:09 297  
15:55:09 298  	IF (in_notification_status_id = NOTIFICATION_STATUSES_V17.NOTIFICATION_SENT OR num_fails >= max_fails) then
15:55:09 299  	  FOR REC IN (
15:55:09 300  	      SELECT ID, NOTIFICATION_ID, ERROR_MESSAGE, CREATE_DATE
15:55:09 301  	      FROM NOTIFICATION_FAILURE
15:55:09 302  	      WHERE NOTIFICATION_ID = in_notification_id
15:55:09 303  	      ) LOOP
15:55:09 304  	      BEGIN
15:55:09 305  		OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V17.CREATE_NOTIF_FAILURE_HISTORY(
15:55:09 306  		  in_error_message	   => REC.ERROR_MESSAGE,
15:55:09 307  		  in_notification_id	   => REC.NOTIFICATION_ID,
15:55:09 308  		  in_create_date	   => REC.CREATE_DATE
15:55:09 309  		);
15:55:09 310  		EXCEPTION
15:55:09 311  		  WHEN OTHERS THEN
15:55:09 312  		    EXCEPTION_MESSAGE := SQLERRM;
15:55:09 313  		    RAISE CAN_NOT_CREATE_HISTORY;
15:55:09 314  	      END;
15:55:09 315  	  END LOOP;
15:55:09 316  	  DELETE FROM NOTIFICATION_FAILURE WHERE NOTIFICATION_ID = in_notification_id;
15:55:09 317  
15:55:09 318  	  BEGIN
15:55:09 319  	    SELECT
15:55:09 320  	      NOTIFICATION.GROUP_ID,
15:55:09 321  	      NOTIFICATION.ACCOUNT_ID,
15:55:09 322  	      NOTIFICATION.NOTIFICATION_TYPE_ID,
15:55:09 323  	      NOTIFICATION.NOTIFICATION_STATUS_ID,
15:55:09 324  	      NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
15:55:09 325  	      NOTIFICATION.DATE_TO_NOTIFY
15:55:09 326  	      into
15:55:09 327  	      var_group_id,
15:55:09 328  	      var_account_id,
15:55:09 329  	      var_notification_type_id,
15:55:09 330  	      var_notification_status_id,
15:55:09 331  	      var_email_template_params,
15:55:09 332  	      var_date_to_notify
15:55:09 333  	    FROM
15:55:09 334  	      NOTIFICATION
15:55:09 335  	    WHERE
15:55:09 336  	      NOTIFICATION.ID = in_notification_id;
15:55:09 337  	    EXCEPTION
15:55:09 338  	      WHEN NO_DATA_FOUND THEN
15:55:09 339  		RAISE BAD_NOTIFICATION_ID;
15:55:09 340  	  END;
15:55:09 341  
15:55:09 342  	  BEGIN
15:55:09 343  	    OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V17.CREATE_NOTIFICATION_HISTORY (
15:55:09 344  	      in_notification_id	  => in_notification_id,
15:55:09 345  	      in_account_id		  => var_account_id,
15:55:09 346  	      in_group_id		  => var_group_id,
15:55:09 347  	      notification_reason_type_id => var_notification_type_id,
15:55:09 348  	      notification_status_id	  => var_notification_status_id,
15:55:09 349  	      email_template_params	  => var_email_template_params,
15:55:09 350  	      in_create_date		  => var_create_history_date,
15:55:09 351  	      in_date_to_notify 	  => var_date_to_notify
15:55:09 352  	    );
15:55:09 353  	    EXCEPTION
15:55:09 354  	      WHEN OTHERS THEN
15:55:09 355  		EXCEPTION_MESSAGE := SQLERRM;
15:55:09 356  		RAISE CAN_NOT_CREATE_HISTORY;
15:55:09 357  	  END;
15:55:09 358  
15:55:09 359  	  DELETE FROM NOTIFICATION WHERE ID = in_notification_id;
15:55:09 360  
15:55:09 361  	END IF;
15:55:09 362  	commit;
15:55:09 363  
15:55:09 364  EXCEPTION
15:55:09 365  WHEN BAD_NOTIFICATION_STATUS_ID THEN
15:55:09 366  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND,
15:55:09 367  	  SPROC_NAME, 'Bad notification status');
15:55:09 368  WHEN BAD_NOTIFICATION_ID THEN
15:55:09 369  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND,
15:55:09 370  	  SPROC_NAME, 'No such notification');
15:55:09 371  WHEN CAN_NOT_CREATE_HISTORY THEN
15:55:09 372  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.INTERNAL_ERROR,
15:55:09 373  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:55:09 374  WHEN OTHERS THEN
15:55:09 375  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09 376  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:55:09 377  END SET_NOTIFICATION_STATUS;
15:55:09 378  
15:55:09 379  /******************************************************************************/
15:55:09 380  
15:55:09 381  PROCEDURE ADD_NOTIFICATION_FAILURE (
15:55:09 382  /*
15:55:09 383  Throws exceptions:
15:55:09 384  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09 385  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09 386  */
15:55:09 387  	in_notification_id IN NUMBER,
15:55:09 388  	in_error_message   IN VARCHAR2
15:55:09 389  ) AS
15:55:09 390  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION_FAILURE';
15:55:09 391  -- VARIABLES
15:55:09 392  temp_notification_id NUMBER;
15:55:09 393  var_create_date	   DATE := SYSDATE;
15:55:09 394  -- EXCEPTIONS
15:55:09 395  BAD_NOTIFICATION_ID	 EXCEPTION;
15:55:09 396  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
15:55:09 397  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
15:55:09 398  BEGIN
15:55:09 399  
15:55:09 400  	BEGIN
15:55:09 401  	  SELECT
15:55:09 402  	    NOTIFICATION.ID into temp_notification_id
15:55:09 403  	  FROM
15:55:09 404  	    NOTIFICATION
15:55:09 405  	  WHERE
15:55:09 406  	    NOTIFICATION.ID = in_notification_id;
15:55:09 407  	  EXCEPTION
15:55:09 408  	    WHEN NO_DATA_FOUND THEN
15:55:09 409  	      RAISE BAD_NOTIFICATION_ID;
15:55:09 410  	END;
15:55:09 411  
15:55:09 412  	INSERT INTO NOTIFICATION_FAILURE (
15:55:09 413  	  ID,
15:55:09 414  	  NOTIFICATION_ID,
15:55:09 415  	  ERROR_MESSAGE,
15:55:09 416  	  CREATE_DATE
15:55:09 417  	) VALUES (
15:55:09 418  	  NOTF_ID_SEQ.nextVal,
15:55:09 419  	  in_notification_id,
15:55:09 420  	  in_error_message,
15:55:09 421  	  sysdate
15:55:09 422  	);
15:55:09 423  
15:55:09 424  	--BEGIN
15:55:09 425  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V17.CREATE_NOTIF_FAILURE_HISTORY(
15:55:09 426  	--    in_error_message	       => in_error_message,
15:55:09 427  	--    in_notification_queue_id => in_notification_id,
15:55:09 428  	--    in_create_date	       => var_create_date
15:55:09 429  	--  );
15:55:09 430  	--  EXCEPTION
15:55:09 431  	--    WHEN OTHERS THEN
15:55:09 432  	--	EXCEPTION_MESSAGE := SQLERRM;
15:55:09 433  	--	RAISE CAN_NOT_CREATE_HISTORY;
15:55:09 434  	--END;
15:55:09 435  
15:55:09 436  EXCEPTION
15:55:09 437  WHEN BAD_NOTIFICATION_ID THEN
15:55:09 438  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND,
15:55:09 439  	  SPROC_NAME, 'No such notification');
15:55:09 440  WHEN CAN_NOT_CREATE_HISTORY THEN
15:55:09 441  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.INTERNAL_ERROR,
15:55:09 442  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:55:09 443  WHEN OTHERS THEN
15:55:09 444  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09 445  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:55:09 446  END ADD_NOTIFICATION_FAILURE;
15:55:09 447  
15:55:09 448  /******************************************************************************/
15:55:09 449  
15:55:09 450  PROCEDURE LOCK_PENDING_NOTIFICATION (
15:55:09 451  /*
15:55:09 452  Result: GLOBAL_STATUSES.TRUE if notification locked
15:55:09 453  GLOBA_STATUSES.FALSE - else
15:55:09 454  */
15:55:09 455  	in_notification_id IN NUMBER,
15:55:09 456  	out_lock_status    OUT NUMBER
15:55:09 457  ) AS
15:55:09 458  SPROC_NAME CONSTANT VARCHAR2(25) := 'LOCK_PENDING_NOTIFICATION';
15:55:09 459  -- VARIABLE
15:55:09 460  temp_notification_id NUMBER;
15:55:09 461  BEGIN
15:55:09 462  	SELECT
15:55:09 463  	  NOTIFICATION.ID into temp_notification_id
15:55:09 464  	FROM
15:55:09 465  	  NOTIFICATION
15:55:09 466  	WHERE
15:55:09 467  	  NOTIFICATION.ID = in_notification_id
15:55:09 468  	  AND (
15:55:09 469  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V17.NOTIFICATION_PENDING
15:55:09 470  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V17.NOTIFICATION_FAILED
15:55:09 471  	  )
15:55:09 472  	FOR UPDATE;
15:55:09 473  
15:55:09 474  	out_lock_status := 1;
15:55:09 475  
15:55:09 476  EXCEPTION
15:55:09 477  WHEN NO_DATA_FOUND THEN
15:55:09 478  	out_lock_status := 0;
15:55:09 479  WHEN OTHERS THEN
15:55:09 480  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09 481  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:55:09 482  END LOCK_PENDING_NOTIFICATION;
15:55:09 483  
15:55:09 484  /******************************************************************************/
15:55:09 485  
15:55:09 486  PROCEDURE GET_NOTIFICATION_DATA (
15:55:09 487  	in_notification_id IN NUMBER,
15:55:09 488  	out_result_set	   OUT SYS_REFCURSOR
15:55:09 489  ) AS
15:55:09 490  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_NOTIFICATION_DATA';
15:55:09 491  BEGIN
15:55:09 492  	OPEN out_result_set FOR
15:55:09 493  	SELECT
15:55:09 494  	  NOTIFICATION.ID,
15:55:09 495  	  NOTIFICATION.GROUP_ID,
15:55:09 496  	  NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
15:55:09 497  	  NOTIFICATION.NOTIFICATION_STATUS_ID,
15:55:09 498  	  NOTIFICATION.CREATE_DATE,
15:55:09 499  	  NOTIFICATION.UPDATE_DATE,
15:55:09 500  	  NOTIFICATION.NOTIFICATION_TYPE_ID,
15:55:09 501  	  NOTIFICATION_TYPE.VALUE as "TYPE_VALUE",
15:55:09 502  	  NOTIFICATION_TYPE.TEMPLATE_URL
15:55:09 503  	FROM
15:55:09 504  	  NOTIFICATION
15:55:09 505  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
15:55:09 506  	WHERE
15:55:09 507  	  NOTIFICATION.ID = in_notification_id;
15:55:09 508  
15:55:09 509  EXCEPTION
15:55:09 510  WHEN OTHERS THEN
15:55:09 511  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09 512  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:55:09 513  END GET_NOTIFICATION_DATA;
15:55:09 514  
15:55:09 515  END PROCS_NOTIFICATION_V17;
15:55:09 516  .
15:55:09 SQL> /

Package body created.

Elapsed: 00:00:00.08
15:55:09 SQL> 
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> -- DDL for package PROCS_PROCESS_RETRY_THROTTLE
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE "PROCS_PROCESS_RETRY_V17" AS
15:55:09   2  
15:55:09   3  PROCEDURE LOG_RETRY(
15:55:09   4  	  in_process_name IN VARCHAR2,
15:55:09   5  	  in_generic_id   IN NUMBER,
15:55:09   6  	  in_date	  IN VARCHAR2,
15:55:09   7  	  out_success	   OUT NUMBER
15:55:09   8  );
15:55:09   9  
15:55:09  10  PROCEDURE LOG_RETRY_DATE(
15:55:09  11  	  in_process_name IN VARCHAR2,
15:55:09  12  	  in_generic_id   IN NUMBER,
15:55:09  13  	  in_date	  IN DATE,
15:55:09  14  	  out_success	   OUT NUMBER
15:55:09  15  );
15:55:09  16  
15:55:09  17  PROCEDURE DELETE_RETRY(
15:55:09  18  	  in_process_name IN VARCHAR2,
15:55:09  19  	  in_remove_minutes  IN NUMBER
15:55:09  20  );
15:55:09  21  
15:55:09  22  PROCEDURE GET_SYSDATE (
15:55:09  23  	  out_date OUT VARCHAR2
15:55:09  24  );
15:55:09  25  
15:55:09  26  END PROCS_PROCESS_RETRY_V17;
15:55:09  27  .
15:55:09 SQL> /

Package created.

Elapsed: 00:00:00.02
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_PROCESS_RETRY_V17" AS
15:55:09   2  
15:55:09   3  PROCEDURE LOG_RETRY(
15:55:09   4  	  in_process_name IN VARCHAR2,
15:55:09   5  	  in_generic_id   IN NUMBER,
15:55:09   6  	  in_date	  IN VARCHAR2,
15:55:09   7  	  out_success	   OUT NUMBER
15:55:09   8  ) AS
15:55:09   9  SPROC_NAME CONSTANT VARCHAR2(32) := 'PROCS_PROCESS_RETRY_V17';
15:55:09  10  BEGIN
15:55:09  11  
15:55:09  12  	out_success := 1;
15:55:09  13  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
15:55:09  14  	VALUES (in_process_name, in_generic_id, 1, to_date(in_date, 'DD-Mon-YYYY HH24:MI:SS'), sysdate);
15:55:09  15  	commit;
15:55:09  16  EXCEPTION
15:55:09  17  WHEN DUP_VAL_ON_INDEX THEN
15:55:09  18  	rollback;
15:55:09  19  	out_success := 0;
15:55:09  20  WHEN OTHERS THEN
15:55:09  21  	rollback;
15:55:09  22  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09  23  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:55:09  24  
15:55:09  25  END;
15:55:09  26  
15:55:09  27  PROCEDURE LOG_RETRY_DATE(
15:55:09  28  	  in_process_name IN VARCHAR2,
15:55:09  29  	  in_generic_id   IN NUMBER,
15:55:09  30  	  in_date	  IN DATE,
15:55:09  31  	  out_success	   OUT NUMBER
15:55:09  32  ) AS
15:55:09  33  SPROC_NAME CONSTANT VARCHAR2(32) := 'PROCS_PROCESS_RETRY_V17';
15:55:09  34  BEGIN
15:55:09  35  
15:55:09  36  	out_success := 1;
15:55:09  37  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
15:55:09  38  	VALUES (in_process_name, in_generic_id, 1, in_date, sysdate);
15:55:09  39  	commit;
15:55:09  40  EXCEPTION
15:55:09  41  WHEN DUP_VAL_ON_INDEX THEN
15:55:09  42  	rollback;
15:55:09  43  	out_success := 0;
15:55:09  44  WHEN OTHERS THEN
15:55:09  45  	rollback;
15:55:09  46  	PROCS_COMMON_V17.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09  47  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:55:09  48  
15:55:09  49  END;
15:55:09  50  
15:55:09  51  PROCEDURE DELETE_RETRY(
15:55:09  52  	  in_process_name IN VARCHAR2,
15:55:09  53  	  in_remove_minutes  IN NUMBER
15:55:09  54  ) AS
15:55:09  55  BEGIN
15:55:09  56  
15:55:09  57  delete from PROCESS_RETRY_THROTTLE
15:55:09  58  where
15:55:09  59  	process_name = in_process_name and
15:55:09  60  	create_date <= sysdate-in_remove_minutes/1440;
15:55:09  61  commit;
15:55:09  62  END;
15:55:09  63  
15:55:09  64  PROCEDURE GET_SYSDATE (
15:55:09  65  	out_date  OUT VARCHAR2
15:55:09  66  ) AS
15:55:09  67  BEGIN
15:55:09  68  	SELECT to_char(SYSDATE, 'DD-Mon-YYYY HH24:MI:SS') into out_date from dual;
15:55:09  69  END;
15:55:09  70  
15:55:09  71  END PROCS_PROCESS_RETRY_V17;
15:55:09  72  .
15:55:09 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:55:09 SQL> 
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> -- DDL for package PROCS_SYSTEM
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE "PROCS_SYSTEM_V17" AS
15:55:09   2  
15:55:09   3  PROCEDURE INCREMENT_VERSION;
15:55:09   4  
15:55:09   5  PROCEDURE CHECK_VERSION(
15:55:09   6  	  in_vers    IN NUMBER,
15:55:09   7  	  out_result OUT NUMBER
15:55:09   8  );
15:55:09   9  
15:55:09  10  END PROCS_SYSTEM_V17;
15:55:09  11  .
15:55:09 SQL> /

Package created.

Elapsed: 00:00:00.02
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SYSTEM_V17" AS
15:55:09   2  
15:55:09   3  PROCEDURE INCREMENT_VERSION
15:55:09   4  /*
15:55:09   5  Throws exceptions:
15:55:09   6  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09   7  */
15:55:09   8  AS
15:55:09   9  BEGIN
15:55:09  10  
15:55:09  11  	UPDATE SYS_VERSION SET version=version+1;
15:55:09  12  
15:55:09  13  EXCEPTION
15:55:09  14  WHEN OTHERS THEN
15:55:09  15  	RAISE_APPLICATION_ERROR(CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR,
15:55:09  16  	  'Unknown error');
15:55:09  17  END INCREMENT_VERSION;
15:55:09  18  
15:55:09  19  /*************************************************************/
15:55:09  20  
15:55:09  21  PROCEDURE CHECK_VERSION(
15:55:09  22  	  in_vers    IN NUMBER,
15:55:09  23  	  out_result OUT NUMBER
15:55:09  24  ) AS
15:55:09  25  	current_version NUMBER;
15:55:09  26  BEGIN
15:55:09  27  	SELECT version INTO current_version FROM SYS_VERSION;
15:55:09  28  	IF(current_version != in_vers) THEN
15:55:09  29  	  out_result := 1;
15:55:09  30  	ELSE
15:55:09  31  	  out_result := 0;
15:55:09  32  	END IF;
15:55:09  33  	EXCEPTION
15:55:09  34  	      WHEN OTHERS THEN
15:55:09  35  	      NULL;
15:55:09  36  END CHECK_VERSION;
15:55:09  37  
15:55:09  38  END PROCS_SYSTEM_V17;
15:55:09  39  .
15:55:09 SQL> /

Package body created.

Elapsed: 00:00:00.01
15:55:09 SQL> 
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> -- DDL for package PUBLIC_PROCS_CLIENT
15:55:09 SQL> --------------------------------------------------------------------------------
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_CLIENT_V17" AS
15:55:09   2  
15:55:09   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
15:55:09   4  /*
15:55:09   5  Throws exceptions:
15:55:09   6  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09   7  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09   8  */
15:55:09   9  	in_notification_type_name IN VARCHAR2,
15:55:09  10  	out_notification_type_id  OUT NUMBER
15:55:09  11  );
15:55:09  12  
15:55:09  13  PROCEDURE ADD_NOTIFICATION (
15:55:09  14  /*
15:55:09  15  Throws exceptions:
15:55:09  16  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09  17  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09  18  */
15:55:09  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
15:55:09  20  	in_recipient_group_id	 IN NUMBER,
15:55:09  21  	in_notification_type_id  IN NUMBER,
15:55:09  22  	in_date_to_notify	 IN DATE,
15:55:09  23  	in_email_template_params IN CLOB
15:55:09  24  );
15:55:09  25  
15:55:09  26  END PUBLIC_PROCS_CLIENT_V17;
15:55:09  27  .
15:55:09 SQL> /

Package created.

Elapsed: 00:00:00.02
15:55:09 SQL> 
15:55:09 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_CLIENT_V17" AS
15:55:09   2  
15:55:09   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
15:55:09   4  /*
15:55:09   5  Throws exceptions:
15:55:09   6  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09   7  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09   8  */
15:55:09   9  	in_notification_type_name IN VARCHAR2,
15:55:09  10  	out_notification_type_id  OUT NUMBER
15:55:09  11  ) AS
15:55:09  12  BEGIN
15:55:09  13  	PROCS_NOTIFICATION_V17.GET_NOTIFICATION_TYPE_BY_NAME (
15:55:09  14  	  in_notification_type_name,
15:55:09  15  	  out_notification_type_id
15:55:09  16  	);
15:55:09  17  END;
15:55:09  18  
15:55:09  19  /*****************************************************************/
15:55:09  20  
15:55:09  21  PROCEDURE ADD_NOTIFICATION (
15:55:09  22  /*
15:55:09  23  Throws exceptions:
15:55:09  24  CORE_OWNER.APP_EXCEPTION_CODES_V17.NOT_FOUND
15:55:09  25  CORE_OWNER.APP_EXCEPTION_CODES_V17.UNKNOWN_ERROR
15:55:09  26  */
15:55:09  27  	in_sender_account_id	 IN NUMBER DEFAULT 0,
15:55:09  28  	in_recipient_group_id	 IN NUMBER,
15:55:09  29  	in_notification_type_id  IN NUMBER,
15:55:09  30  	in_date_to_notify	 IN DATE,
15:55:09  31  	in_email_template_params IN CLOB
15:55:09  32  ) AS
15:55:09  33  BEGIN
15:55:09  34  	PROCS_NOTIFICATION_V17.ADD_NOTIFICATION (
15:55:09  35  	  in_sender_account_id,
15:55:09  36  	  in_recipient_group_id,
15:55:09  37  	  in_notification_type_id,
15:55:09  38  	  in_date_to_notify,
15:55:09  39  	  in_email_template_params
15:55:09  40  	);
15:55:09  41  END;
15:55:09  42  
15:55:09  43  END PUBLIC_PROCS_CLIENT_V17;
15:55:09  44  .
15:55:09 SQL> /

Package body created.

Elapsed: 00:00:00.02
15:55:09 SQL> 
15:55:09 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V17 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V17 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V17 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> 
15:55:09 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V17 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V17 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V17 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> 
15:55:09 SQL> grant execute on OPS_OWNER.NOTIFICATION_STATUSES_V17 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_NOTIFICATION_V17 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_SYSTEM_V17 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> 
15:55:09 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V17 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V17 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V17 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PUBLIC_PROCS_CLIENT_V17 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> 
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V17 to core_owner;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V17 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V17 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V17 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V17 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V17 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V17 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V17 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V17 to core_poller_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant execute on OPS_OWNER.PROCS_PROCESS_RETRY_V17 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> 
15:55:09 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.04
15:55:09 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant select on OPS_OWNER.PROCESS_RETRY_THROTTLE to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> 
15:55:09 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant select on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> 
15:55:09 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant REFERENCES on OPS_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> 
15:55:09 SQL> grant select, insert, update, delete ON OPS_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant select ON OPS_OWNER.NOTTID_SEQ to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> 
15:55:09 SQL> grant select on OPS_OWNER.NOTIFICATION to core_owner;

Grant succeeded.

Elapsed: 00:00:00.00
15:55:09 SQL> grant select on OPS_OWNER.NOTIFICATION_FAILURE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> grant select on OPS_OWNER.NOTIFICATION_STATUS to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:55:09 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
15:55:09 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECST2@rac01.stg.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com,nytd_oracledba@nytimes.com
Cc: nytd_oracledba@nytimes.com
Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.stg.ewr1.nytimes.com
        SID: ECST2
        Schema: ops_owner
        Migration: 4-release-1.11.1-all
        SVN Revision: 10382
        Duration: 1 sec.
        Service Request: https://jira.em.nytimes.com/browse/ORA-339