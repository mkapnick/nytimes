WHENEVER SQLERROR EXIT ROLLBACK;

variable is_current_version_fine NUMBER;
variable change_version NUMBER;
variable bad_current_version VARCHAR2(1024);

exec :change_version := 129;
exec PROCS_SYSTEM_V11.CHECK_VERSION(:change_version - 1, :is_current_version_fine);
exec :bad_current_version := 'Current version is bad, please update your version to '||(:change_version-1);

BEGIN
  IF (:is_current_version_fine != 0) THEN
    RAISE_APPLICATION_ERROR(-20001, :bad_current_version);
  END IF;
END;
/

CREATE TABLE RCN_AMEX_CHARGEBACK (
    ID NUMBER NOT NULL,
    RCN_EXT_SOURCE_LOG_ID NUMBER NOT NULL,
    RESOLUTION VARCHAR2(1),
    FROM_SYSTEM VARCHAR2(1),
    REJECTS_TO_SYSTEM VARCHAR2(1),
    DISPUTES_TO_SYSTEM VARCHAR2(1),
    DATE_OF_ADJUSTMENT DATE,
    DATE_OF_CHARGE DATE,
    CASE_TYPE VARCHAR2(6),
    CB_REAS_CODE VARCHAR2(3),
    CB_AMOUNT NUMBER,
    CB_ADJUSTMENT_NUMBER VARCHAR2(6),
    BILLED_AMOUNT NUMBER,
    SOC_AMOUNT NUMBER,
    FOREIGN_AMOUNT VARCHAR2(15),
    CURRENCY VARCHAR2(3),
    NOTE1 VARCHAR2(66),
    NOTE2 VARCHAR2(78),
    NOTE3 VARCHAR2(60),
    NOTE4 VARCHAR2(60),
    NOTE5 VARCHAR2(60),
    NOTE6 VARCHAR2(60),
    NOTE7 VARCHAR2(60),
    IND_REF_NUMBER VARCHAR2(30),
    CREATE_DATE DATE NOT NULL,
    CREATED_BY VARCHAR2(255) NOT NULL,
    UPDATE_DATE DATE NOT NULL,
    UPDATED_BY VARCHAR2(255) NOT NULL,
    CONSTRAINT RCNAMEXCB_PK PRIMARY KEY (ID) USING INDEX TABLESPACE CORE_IDX,
    CONSTRAINT AMEXEXTSOURCE_FK FOREIGN KEY (RCN_EXT_SOURCE_LOG_ID) REFERENCES RCN_EXT_SOURCE_LOG(ID)
)
TABLESPACE CORE;

CREATE INDEX IND_REF_NUMBER ON
    RCN_AMEX_CHARGEBACK(IND_REF_NUMBER) TABLESPACE CORE_IDX;

CREATE SEQUENCE RCNAMEXCB_ID_SEQ;

exec PROCS_SYSTEM_V11.INCREMENT_VERSION();
