14:34:41 SQL> @/dbbackups/ECST/migrations/core_owner/30.2-release-1.13.0-3-CORE-all/upgrade.sql
14:34:41 SQL> 
14:34:41 SQL> .
14:34:41 SQL> /
SP2-0103: Nothing in SQL buffer to run.
14:34:41 SQL> 
14:34:41 SQL> --------------------------------------------------------------------------------
14:34:41 SQL> -- DDL for package PROCS_ACCOUNT
14:34:41 SQL> --------------------------------------------------------------------------------
14:34:41 SQL> 
14:34:41 SQL> CREATE OR REPLACE PACKAGE "PROCS_ACCOUNT_V18" AS
14:34:41   2  
14:34:41   3  FUNCTION GET_GRACE_START_DATE(
14:34:41   4  	in_subscription_id IN NUMBER
14:34:41   5  ) RETURN DATE;
14:34:41   6  
14:34:41   7  FUNCTION GET_GRACE_END_DATE(
14:34:41   8  	in_subscription_id IN NUMBER
14:34:41   9  ) RETURN DATE;
14:34:41  10  
14:34:41  11  PROCEDURE INVOICE_IDS_BY_GROUP_ID (
14:34:41  12  	in_group_id    IN  NUMBER,
14:34:41  13  	out_result_set OUT SYS_REFCURSOR
14:34:41  14  );
14:34:41  15  
14:34:41  16  PROCEDURE ANNOTATE_ACCOUNT (
14:34:41  17  /*
14:34:41  18  Throws exceptions:
14:34:41  19  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:41  20  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41  21  */
14:34:41  22  	in_group_id   IN  NUMBER,
14:34:41  23  	in_agent_id   IN  NUMBER,
14:34:41  24  	in_note       IN  VARCHAR2,
14:34:41  25  	in_created_by IN  VARCHAR2
14:34:41  26  );
14:34:41  27  
14:34:41  28  PROCEDURE ASSERT_ACCOUNT_EXISTS (
14:34:41  29  /*
14:34:41  30  Throws exceptions:
14:34:41  31  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:41  32  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41  33  */
14:34:41  34  	in_group_id IN	NUMBER,
14:34:41  35  	out_exists  OUT NUMBER
14:34:41  36  );
14:34:41  37  
14:34:41  38  PROCEDURE DISABLE_ACCOUNT (
14:34:41  39  /*
14:34:41  40  Throws exceptions:
14:34:41  41  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:41  42  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:41  43  */
14:34:41  44  	in_group_id   IN NUMBER,
14:34:41  45  	in_updated_by IN VARCHAR2,
14:34:41  46  	in_note       IN VARCHAR2,
14:34:41  47  	in_agent_id   IN NUMBER
14:34:41  48  );
14:34:41  49  
14:34:41  50  PROCEDURE CREATE_ACTIVE_ACCOUNT(
14:34:41  51  /*
14:34:41  52  Throws exceptions:
14:34:41  53  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:41  54  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41  55  */
14:34:41  56  	in_created_by	       IN VARCHAR2,
14:34:41  57  	in_group_id	       IN NUMBER
14:34:41  58  );
14:34:41  59  
14:34:41  60  PROCEDURE REACTIVATE_ACCOUNT (
14:34:41  61  /*
14:34:41  62  Throws exceptions:
14:34:41  63  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:41  64  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:41  65  */
14:34:41  66  	in_group_id	  IN NUMBER,
14:34:41  67  	in_updated_by	  IN VARCHAR2,
14:34:41  68  	in_note 	  IN VARCHAR2,
14:34:41  69  	in_agent_id	  IN NUMBER
14:34:41  70  );
14:34:41  71  
14:34:41  72  /*
14:34:41  73  
14:34:41  74  THERE ARE NO ACCOUNT STATUS "SUSPENDED"
14:34:41  75  Waiting for new instructions.
14:34:41  76  
14:34:41  77  PROCEDURE SUSPEND_ACCOUNT (
14:34:41  78  /*
14:34:41  79  Throws exceptions:
14:34:41  80  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:41  81  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:41  82  
14:34:41  83  	  in_group_id	 IN  NUMBER,
14:34:41  84  	  in_updated_by  IN  VARCHAR2
14:34:41  85  )
14:34:41  86  */
14:34:41  87  
14:34:41  88  PROCEDURE GET_ACCOUNT_CREDIT_CARDS (
14:34:41  89  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE,
14:34:41  90  	in_status_id   IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT GLOBAL_STATUSES_V18.CREDIT_CARD_ACTIVE,
14:34:41  91  	out_result_set OUT SYS_REFCURSOR
14:34:41  92  );
14:34:41  93  
14:34:41  94  PROCEDURE GET_ACCOUNT_GIFT_CERTIFICATES (
14:34:41  95  /*
14:34:41  96  IN:
14:34:41  97  instr_status:
14:34:41  98  GLOBAL_CONSTANTS_V18.TRUE - get active instruments only (default)
14:34:41  99  GLOBAL_CONSTANTS_V18.FALSE - get inactive instruments only
14:34:41 100  
14:34:41 101  Throws exceptions:
14:34:41 102  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 103  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 104  */
14:34:41 105  	in_group_id	  IN NUMBER,
14:34:41 106  	out_result_gc_set OUT SYS_REFCURSOR,
14:34:41 107  	in_instr_status   IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.TRUE
14:34:41 108  );
14:34:41 109  
14:34:41 110  PROCEDURE GET_ACCOUNT_INFO  (
14:34:41 111  /*
14:34:41 112  Throws exceptions:
14:34:41 113  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 114  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 115  */
14:34:41 116  	  in_group_id	    IN	NUMBER,
14:34:41 117  	  out_account_info  OUT SYS_REFCURSOR
14:34:41 118  );
14:34:41 119  
14:34:41 120  PROCEDURE GET_ACCOUNT_NOTES (
14:34:41 121  /*
14:34:41 122  Throws exceptions:
14:34:41 123  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 124  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:41 125  */
14:34:41 126  	  in_group_id	 IN  NUMBER,
14:34:41 127  	  out_result_set OUT SYS_REFCURSOR
14:34:41 128  );
14:34:41 129  
14:34:41 130  PROCEDURE GET_ACCOUNT_PAYPALS(
14:34:41 131  	in_group_id    IN  ACCOUNT.GROUP_ID%TYPE,
14:34:41 132  	in_status_id   IN  PAYPAL.PAYPAL_STATUS_ID%TYPE DEFAULT GLOBAL_STATUSES_V18.PAYPAL_ACTIVE,
14:34:41 133  	out_result_set OUT SYS_REFCURSOR
14:34:41 134  );
14:34:41 135  
14:34:41 136  PROCEDURE GET_ACCOUNT_SUBSCRIPTIONS (
14:34:41 137  /*
14:34:41 138  Throws exceptions:
14:34:41 139  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 140  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:41 141  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 142  */
14:34:41 143  	  in_group_id	 IN  NUMBER,
14:34:41 144  	  in_start_date  IN DATE,
14:34:41 145  	  in_end_date	 IN DATE,
14:34:41 146  	  in_status	 IN NUMBER,
14:34:41 147  	  in_group_account_type IN VARCHAR2,
14:34:41 148  	  out_result_set  OUT SYS_REFCURSOR
14:34:41 149  );
14:34:41 150  
14:34:41 151  PROCEDURE FREEZE_ACCOUNT (
14:34:41 152  /*
14:34:41 153  Throws exceptions:
14:34:41 154  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 155  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 156  */
14:34:41 157  	in_group_id   IN NUMBER,
14:34:41 158  	in_updated_by IN VARCHAR2,
14:34:41 159  	in_note       IN VARCHAR2,
14:34:41 160  	in_agent_id   IN NUMBER
14:34:41 161  );
14:34:41 162  
14:34:41 163  PROCEDURE GET_ACCOUNT_SUBSCR_INVOICES (
14:34:41 164  /*
14:34:41 165  Throws exceptions:
14:34:41 166  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 167  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 168  */
14:34:41 169  	in_group_id	   IN  NUMBER,
14:34:41 170  	in_subscription_id IN NUMBER,
14:34:41 171  	out_result_set	   OUT SYS_REFCURSOR
14:34:41 172  );
14:34:41 173  
14:34:41 174  PROCEDURE GET_ACCOUNT_GC_INVOICES (
14:34:41 175  /*
14:34:41 176  Throws exceptions:
14:34:41 177  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 178  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 179  */
14:34:41 180  	in_group_id    IN  NUMBER,
14:34:41 181  	out_result_set OUT SYS_REFCURSOR
14:34:41 182  );
14:34:41 183  
14:34:41 184  PROCEDURE GET_GC_INVOICE (
14:34:41 185  /*
14:34:41 186  Throws exceptions:
14:34:41 187  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 188  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 189  */
14:34:41 190  	in_group_id    IN  NUMBER,
14:34:41 191  	in_gc_code     IN  VARCHAR2,
14:34:41 192  	out_result_set OUT SYS_REFCURSOR
14:34:41 193  );
14:34:41 194  
14:34:41 195  PROCEDURE GET_ACCOUNT_PRODUCTS (
14:34:41 196  /*
14:34:41 197  Throws exceptions:
14:34:41 198  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 199  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 200  */
14:34:41 201  	in_group_id    IN  NUMBER,
14:34:41 202  	out_result_set OUT SYS_REFCURSOR
14:34:41 203  );
14:34:41 204  
14:34:41 205  PROCEDURE GET_ACCOUNT_PROD_OFFERRINGS (
14:34:41 206  /*
14:34:41 207  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:41 208  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 209  */
14:34:41 210  	in_group_id IN NUMBER,
14:34:41 211  	out_result_set	   OUT SYS_REFCURSOR
14:34:41 212  );
14:34:41 213  
14:34:41 214  PROCEDURE UPDATE_ACCOUNT_STATUS (
14:34:41 215  /*
14:34:41 216  Throws exceptions:
14:34:41 217  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 218  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 219  */
14:34:41 220  	in_account_id	     IN ACCOUNT.ID%TYPE,
14:34:41 221  	in_account_status_id IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE,
14:34:41 222  	in_updated_by	     IN ACCOUNT.UPDATED_BY%TYPE
14:34:41 223  );
14:34:41 224  
14:34:41 225  PROCEDURE GET_NEEDS_ENTTL_LICENSES_NUM (
14:34:41 226  /*
14:34:41 227  Throws exceptions:
14:34:41 228  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 229  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 230  */
14:34:41 231  	in_group_id	 IN ACCOUNT.GROUP_ID%TYPE,
14:34:41 232  	out_licenses_num OUT NUMBER
14:34:41 233  );
14:34:41 234  
14:34:41 235  PROCEDURE SET_TAX_EXEMPT (
14:34:41 236  /*
14:34:41 237  Throws exceptions:
14:34:41 238  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 239  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 240  */
14:34:41 241  	in_group_id  IN NUMBER,
14:34:41 242  	in_exempt_id IN VARCHAR2
14:34:41 243  );
14:34:41 244  
14:34:41 245  PROCEDURE IS_TAX_EXEMPT (
14:34:41 246  /*
14:34:41 247  Throws exceptions:
14:34:41 248  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 249  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 250  Return:
14:34:41 251  	GLOBAL_CONSTANTS_V18.TRUE if ACCOUNT.EXEMPT_ID is not null
14:34:41 252  	GLOBAL_CONSTANTS_V18.FALSE else
14:34:41 253  */
14:34:41 254  	in_group_id	  IN NUMBER,
14:34:41 255  	out_is_tax_exempt OUT NUMBER
14:34:41 256  );
14:34:41 257  
14:34:41 258  PROCEDURE GET_GROUP_ID_BY_ACCOUNT_ID (
14:34:41 259  /*
14:34:41 260  Throws exceptions:
14:34:41 261  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 262  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 263  */
14:34:41 264  	in_account_id IN NUMBER,
14:34:41 265  	out_group_id  OUT NUMBER
14:34:41 266  );
14:34:41 267  
14:34:41 268  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
14:34:41 269  /*
14:34:41 270  Throws exceptions:
14:34:41 271  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 272  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 273  */
14:34:41 274  	in_group_id IN NUMBER,
14:34:41 275  	out_account_id	OUT NUMBER
14:34:41 276  );
14:34:41 277  
14:34:41 278  PROCEDURE GET_GROUPS_ID_BY_INVOICE_ID (
14:34:41 279  /*
14:34:41 280  Throws exceptions:
14:34:41 281  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 282  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 283  */
14:34:41 284  	in_invoice_id IN NUMBER,
14:34:41 285  	out_group_ids OUT SYS_REFCURSOR
14:34:41 286  );
14:34:41 287  
14:34:41 288  PROCEDURE GET_ACCOUNT_TAX_EXEMPT_ID (
14:34:41 289  /*
14:34:41 290  Throws exceptions:
14:34:41 291  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 292  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 293  */
14:34:41 294  	in_group_id	  IN NUMBER,
14:34:41 295  	out_tax_exempt_id OUT VARCHAR2
14:34:41 296  );
14:34:41 297  
14:34:41 298  PROCEDURE GET_UPGRADABLE_SUBSCRIPTIONS (
14:34:41 299  /*
14:34:41 300  Throws exceptions:
14:34:41 301  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 302  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 303  
14:34:41 304  Result has two columns:
14:34:41 305  subscription_id and offer_chain_id
14:34:41 306  */
14:34:41 307  	in_group_id    IN NUMBER,
14:34:41 308  	out_result_set OUT SYS_REFCURSOR
14:34:41 309  );
14:34:41 310  
14:34:41 311  PROCEDURE GET_USR_ALL_SBSCR_IDS (
14:34:41 312  /*
14:34:41 313  Throws exceptions:
14:34:41 314  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 315  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:41 316  
14:34:41 317  Result has two columns:
14:34:41 318  subscription_id and offer_chain_id
14:34:41 319  */
14:34:41 320  	in_group_id	   IN NUMBER,
14:34:41 321  	out_result_set	   OUT SYS_REFCURSOR
14:34:41 322  );
14:34:41 323  
14:34:41 324  PROCEDURE GET_USR_SBSCR_IDS_BY_OFFCH_IDS (
14:34:41 325  /*
14:34:41 326  Throws exceptions:
14:34:41 327  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:41 328  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:41 329  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:41 330  
14:34:41 331  Result has two columns:
14:34:41 332  subscription_id and offer_chain_id
14:34:41 333  */
14:34:41 334  	in_group_id	   IN NUMBER,
14:34:41 335  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
14:34:41 336  	out_result_set	   OUT SYS_REFCURSOR
14:34:41 337  );
14:34:41 338  
14:34:41 339  PROCEDURE GET_GROUP_IDS_BY_CC_INFO (
14:34:41 340  	in_last_four_cc IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
14:34:41 341  	in_expiration_date IN DATE,
14:34:41 342  	in_country IN CREDIT_CARD.COUNTRY%TYPE DEFAULT NULL,
14:34:41 343  	in_postal_code IN CREDIT_CARD.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:41 344  	in_city IN CREDIT_CARD.CITY%TYPE DEFAULT NULL,
14:34:41 345  	in_state IN CREDIT_CARD.STATE%TYPE DEFAULT NULL,
14:34:41 346  	in_credit_card_type_id IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE DEFAULT NULL,
14:34:41 347  	in_credit_card_status_id IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT NULL,
14:34:41 348  	in_lower_bound IN NUMBER DEFAULT 1,
14:34:41 349  	in_upper_bound IN NUMBER DEFAULT 11,
14:34:41 350  	out_result_set OUT SYS_REFCURSOR
14:34:41 351  );
14:34:41 352  
14:34:41 353  END PROCS_ACCOUNT_V18;
14:34:41 354  .
14:34:41 SQL> /

Package created.

Elapsed: 00:00:00.18
14:34:42 SQL> 
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> -- DDL for package PROCS_ACCOUNT_CRU
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_ACCOUNT_CRU_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE CREATE_ACCOUNT (
14:34:42   4  	out_account_id	      OUT ACCOUNT.ID%TYPE,
14:34:42   5  	in_account_status_id  IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE,
14:34:42   6  	in_suspend_date       IN ACCOUNT.SUSPEND_DATE%TYPE DEFAULT NULL,
14:34:42   7  	in_group_id	      IN ACCOUNT.GROUP_ID%TYPE,
14:34:42   8  	in_created_by	      IN ACCOUNT.CREATED_BY%TYPE,
14:34:42   9  	in_system_category_id IN ACCOUNT.SYSTEM_CATEGORY_ID%TYPE,
14:34:42  10  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
14:34:42  11  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE DEFAULT NULL
14:34:42  12  );
14:34:42  13  
14:34:42  14  PROCEDURE UPDATE_ACCOUNT (
14:34:42  15  	in_account_id	      IN ACCOUNT.ID%TYPE,
14:34:42  16  	in_account_status_id  IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE DEFAULT NULL,
14:34:42  17  	in_suspend_date       IN ACCOUNT.SUSPEND_DATE%TYPE DEFAULT NULL,
14:34:42  18  	in_updated_by	      IN ACCOUNT.UPDATED_BY%TYPE,
14:34:42  19  	in_system_category_id IN ACCOUNT.SYSTEM_CATEGORY_ID%TYPE DEFAULT NULL,
14:34:42  20  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
14:34:42  21  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE DEFAULT NULL
14:34:42  22  );
14:34:42  23  
14:34:42  24  PROCEDURE UPDATE_DEF_FIN_INSTRUMENT(
14:34:42  25  	in_account_id	      IN ACCOUNT.ID%TYPE,
14:34:42  26  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE,
14:34:42  27  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE,
14:34:42  28  	in_updated_by	      IN ACCOUNT.UPDATED_BY%TYPE
14:34:42  29  );
14:34:42  30  
14:34:42  31  PROCEDURE READ_ACCOUNT (
14:34:42  32  	in_account_id  IN ACCOUNT.ID%TYPE,
14:34:42  33  	out_result_set OUT SYS_REFCURSOR
14:34:42  34  );
14:34:42  35  
14:34:42  36  PROCEDURE CREATE_ACCOUNT_NOTE (
14:34:42  37  	inout_account_note_id IN OUT ACCOUNT_NOTE.ID%TYPE,
14:34:42  38  	in_agent_id	      IN ACCOUNT_NOTE.AGENT_ID%TYPE,
14:34:42  39  	in_account_id	      IN ACCOUNT_NOTE.ACCOUNT_ID%TYPE,
14:34:42  40  	in_note 	      IN ACCOUNT_NOTE.NOTE%TYPE,
14:34:42  41  	in_created_by	      IN ACCOUNT_NOTE.CREATED_BY%TYPE
14:34:42  42  );
14:34:42  43  
14:34:42  44  END PROCS_ACCOUNT_CRU_V18;
14:34:42  45  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.07
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_ADDRESS_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE CREATE_ADDRESS(
14:34:42   4  /*
14:34:42   5  Throws exceptions:
14:34:42   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42   7  */
14:34:42   8  	  out_address_id	OUT NUMBER,
14:34:42   9  	  in_address1		IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
14:34:42  10  	  in_address2		IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
14:34:42  11  	  in_city		IN ADDRESS.CITY%TYPE DEFAULT NULL,
14:34:42  12  	  in_state		IN ADDRESS.STATE%TYPE DEFAULT NULL,
14:34:42  13  	  in_postal_code	IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:42  14  	  in_country		IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
14:34:42  15  	  in_created_by 	IN ADDRESS.CREATED_BY%TYPE
14:34:42  16  );
14:34:42  17  
14:34:42  18  PROCEDURE UPDATE_ADDRESS(
14:34:42  19  /*
14:34:42  20  Throws exceptions:
14:34:42  21  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  22  */
14:34:42  23  	  in_address_id 	IN ADDRESS.ID%TYPE,
14:34:42  24  	  in_address1		IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
14:34:42  25  	  in_address2		IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
14:34:42  26  	  in_city		IN ADDRESS.CITY%TYPE DEFAULT NULL,
14:34:42  27  	  in_state		IN ADDRESS.STATE%TYPE DEFAULT NULL,
14:34:42  28  	  in_postal_code	IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:42  29  	  in_country		IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
14:34:42  30  	  in_updated_by 	IN ADDRESS.UPDATED_BY%TYPE
14:34:42  31  );
14:34:42  32  
14:34:42  33  PROCEDURE GET_ADDRESS (
14:34:42  34  /*
14:34:42  35  Throws exceptions:
14:34:42  36  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  37  */
14:34:42  38  	  in_id 		IN ADDRESS.ID%TYPE,
14:34:42  39  	  out_result_set	OUT SYS_REFCURSOR
14:34:42  40  );
14:34:42  41  
14:34:42  42  END PROCS_ADDRESS_V18;
14:34:42  43  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.03
14:34:42 SQL> 
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> -- DDL for package PROCS_ADDRESS_CRU
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_ADDRESS_CRU_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE CREATE_ADDRESS(
14:34:42   4  	out_address_id	      OUT ADDRESS.ID%TYPE,
14:34:42   5  	in_address_id	      IN ADDRESS.ID%TYPE DEFAULT NULL,
14:34:42   6  	in_address1	      IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
14:34:42   7  	in_address2	      IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
14:34:42   8  	in_city 	      IN ADDRESS.CITY%TYPE DEFAULT NULL,
14:34:42   9  	in_state	      IN ADDRESS.STATE%TYPE DEFAULT NULL,
14:34:42  10  	in_postal_code	      IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:42  11  	in_country	      IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
14:34:42  12  	in_created_by	      IN ADDRESS.CREATED_BY%TYPE
14:34:42  13  );
14:34:42  14  
14:34:42  15  PROCEDURE UPDATE_ADDRESS(
14:34:42  16  	in_address_id	      IN ADDRESS.ID%TYPE,
14:34:42  17  	in_address1	      IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
14:34:42  18  	in_address2	      IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
14:34:42  19  	in_city 	      IN ADDRESS.CITY%TYPE DEFAULT NULL,
14:34:42  20  	in_state	      IN ADDRESS.STATE%TYPE DEFAULT NULL,
14:34:42  21  	in_postal_code	      IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:42  22  	in_country	      IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
14:34:42  23  	in_updated_by	      IN ADDRESS.UPDATED_BY%TYPE
14:34:42  24  );
14:34:42  25  
14:34:42  26  END PROCS_ADDRESS_CRU_V18;
14:34:42  27  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.03
14:34:42 SQL> 
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> -- DDL for package PROCS_ADJUSTMENTS
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_ADJUSTMENTS_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE CREATE_INVOICE_ADJUSTMENT (
14:34:42   4  	in_invoice_id		  IN NUMBER,
14:34:42   5  	in_adjustment_reason	  IN VARCHAR2,
14:34:42   6  	in_is_credit		  IN NUMBER,
14:34:42   7  	in_charge_id		  IN NUMBER,
14:34:42   8  	in_business_date	  IN DATE,
14:34:42   9  	in_created_by		  IN VARCHAR2,
14:34:42  10  	out_invoice_adjustment_id OUT NUMBER
14:34:42  11  );
14:34:42  12  
14:34:42  13  PROCEDURE UPDATE_INVOICE_ADJUSTMENT (
14:34:42  14  	in_invoice_id		  IN NUMBER,
14:34:42  15  	in_original_charge_id	  IN NUMBER,
14:34:42  16  	in_charge_id		  IN NUMBER,
14:34:42  17  	in_updated_by		  IN VARCHAR2
14:34:42  18  );
14:34:42  19  
14:34:42  20  PROCEDURE CREATE_LINE_ITEM_ADJUSTMENT (
14:34:42  21  	in_line_item_id 	    IN NUMBER,
14:34:42  22  	in_invoice_adjustment_id    IN NUMBER,
14:34:42  23  	in_amount		    IN NUMBER,
14:34:42  24  	in_tax			    IN NUMBER,
14:34:42  25  	in_discount		    IN NUMBER,
14:34:42  26  	in_created_by		    IN VARCHAR2,
14:34:42  27  	out_line_item_adjustment_id OUT NUMBER
14:34:42  28  );
14:34:42  29  
14:34:42  30  PROCEDURE CREATE_TAX_ADJUSTMENT (
14:34:42  31  	in_tax_id		   IN NUMBER,
14:34:42  32  	in_line_item_adjustment_id IN NUMBER,
14:34:42  33  	in_amount		   IN NUMBER,
14:34:42  34  	in_created_by		   IN VARCHAR2,
14:34:42  35  	out_tax_adjustment_id	   OUT NUMBER
14:34:42  36  );
14:34:42  37  
14:34:42  38  PROCEDURE CREATE_DISCOUNT_LI_ADJUSTMENT (
14:34:42  39  	in_discount_id		   NUMBER,
14:34:42  40  	in_line_item_id 	   NUMBER,
14:34:42  41  	in_line_item_adjustment_id IN NUMBER,
14:34:42  42  	in_amount		   IN NUMBER,
14:34:42  43  	in_created_by		   IN VARCHAR2,
14:34:42  44  	out_discount_li_id	   OUT NUMBER
14:34:42  45  );
14:34:42  46  
14:34:42  47  END PROCS_ADJUSTMENTS_V18;
14:34:42  48  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.06
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_ADX_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE GET_SUB_ADX_INFO (
14:34:42   4  /*
14:34:42   5  Throws exceptions:
14:34:42   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42   7  */
14:34:42   8  	out_result_set	    OUT SYS_REFCURSOR,
14:34:42   9  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE
14:34:42  10  );
14:34:42  11  
14:34:42  12  END PROCS_ADX_V18;
14:34:42  13  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.03
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_AMAZON_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE CREATE_AMAZON_SUB(
14:34:42   4  /*
14:34:42   5  Throws exceptions:
14:34:42   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42   7  */
14:34:42   8  	  out_id	      OUT NUMBER,
14:34:42   9  	  in_subscription_id  IN AMAZON_SUB.SUBSCRIPTION_ID%TYPE,
14:34:42  10  	  in_amazon_id	      IN AMAZON_SUB.AMAZON_ID%TYPE,
14:34:42  11  	  in_created_by       IN AMAZON_SUB.CREATED_BY%TYPE
14:34:42  12  );
14:34:42  13  
14:34:42  14  PROCEDURE GET_ACTIVE_SUB_IDS (
14:34:42  15  /*
14:34:42  16  Throws exceptions:
14:34:42  17  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  18  */
14:34:42  19  	out_result_set	    OUT SYS_REFCURSOR,
14:34:42  20  	in_amazon_id	IN AMAZON_SUB.AMAZON_ID%TYPE
14:34:42  21  );
14:34:42  22  
14:34:42  23  PROCEDURE GET_ACTIVE_GROUP_IDS (
14:34:42  24  /*
14:34:42  25  Throws exceptions:
14:34:42  26  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  27  */
14:34:42  28  	out_result_set	    OUT SYS_REFCURSOR,
14:34:42  29  	in_amazon_id	IN AMAZON_SUB.AMAZON_ID%TYPE
14:34:42  30  );
14:34:42  31  
14:34:42  32  END PROCS_AMAZON_V18;
14:34:42  33  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.02
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_AMAZON_CRU_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE CREATE_AMAZON_SUB(
14:34:42   4  /*
14:34:42   5  Throws exceptions:
14:34:42   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42   7  */
14:34:42   8  	  out_id	      OUT NUMBER,
14:34:42   9  	  in_subscription_id  IN AMAZON_SUB.SUBSCRIPTION_ID%TYPE,
14:34:42  10  	  in_amazon_id	      IN AMAZON_SUB.AMAZON_ID%TYPE,
14:34:42  11  	  in_created_by       IN AMAZON_SUB.CREATED_BY%TYPE
14:34:42  12  );
14:34:42  13  
14:34:42  14  END PROCS_AMAZON_CRU_V18;
14:34:42  15  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.01
14:34:42 SQL> 
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> -- DDL for package PROCS_CHARGE
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_CHARGE_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE CREATE_CHARGE(
14:34:42   4  /*
14:34:42   5  Throws exceptions:
14:34:42   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42   8  */
14:34:42   9  	in_invoice_id	      IN NUMBER,
14:34:42  10  	in_transaction_id     IN NUMBER,
14:34:42  11  	in_instrument_type_id IN NUMBER,
14:34:42  12  	in_instrument_id      IN NUMBER,
14:34:42  13  	in_charge_amount      IN NUMBER,
14:34:42  14  	in_created_by	      IN VARCHAR2,
14:34:42  15  	in_charge_status_id   IN NUMBER,
14:34:42  16  	out_charge_id	      OUT NUMBER
14:34:42  17  );
14:34:42  18  
14:34:42  19  PROCEDURE GET_PENDING_REFUND_CHARGES (
14:34:42  20  /*
14:34:42  21  Throws exceptions:
14:34:42  22  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  23  */
14:34:42  24  	out_result_set	    OUT SYS_REFCURSOR,
14:34:42  25  	in_row_number	    IN NUMBER DEFAULT NULL
14:34:42  26  );
14:34:42  27  
14:34:42  28  PROCEDURE GET_UNPROCESSED_CHARGES (
14:34:42  29  /*
14:34:42  30  Throws exceptions:
14:34:42  31  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  32  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  33  */
14:34:42  34  	in_invoice_id  IN NUMBER,
14:34:42  35  	out_result_set OUT SYS_REFCURSOR
14:34:42  36  );
14:34:42  37  
14:34:42  38  PROCEDURE GET_PROCESSED_CHARGES (
14:34:42  39  /*
14:34:42  40  Throws exceptions:
14:34:42  41  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  42  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  43  */
14:34:42  44  	in_invoice_id  IN NUMBER,
14:34:42  45  	out_result_set OUT SYS_REFCURSOR
14:34:42  46  );
14:34:42  47  
14:34:42  48  PROCEDURE GET_SUBSCR_ID_BY_CHARGE_ID (
14:34:42  49  /*
14:34:42  50  Throws exceptions:
14:34:42  51  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  52  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  53  */
14:34:42  54  	in_charge_id	    IN NUMBER,
14:34:42  55  	out_subscription_id OUT NUMBER
14:34:42  56  );
14:34:42  57  
14:34:42  58  PROCEDURE UPDATE_CHARGE_STATUS (
14:34:42  59  /*
14:34:42  60  Throws exceptions:
14:34:42  61  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  62  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  63  */
14:34:42  64  	in_charge_id	    IN CHARGE.ID%TYPE,
14:34:42  65  	in_charge_status_id IN CHARGE.CHARGE_STATUS_ID%TYPE,
14:34:42  66  	in_updated_by	    IN CHARGE.UPDATED_BY%TYPE
14:34:42  67  );
14:34:42  68  
14:34:42  69  FUNCTION IS_CHARGE_COLLECTED (
14:34:42  70  /*
14:34:42  71  Throws:
14:34:42  72  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  73  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  74  Returns:
14:34:42  75  GLOBAL_CONST.TRUE if transaction collected,
14:34:42  76  GLOBAL_CONST.FALSE else
14:34:42  77  */
14:34:42  78  	in_charge_id IN NUMBER
14:34:42  79  ) RETURN NUMBER;
14:34:42  80  
14:34:42  81  PROCEDURE GET_COLLECTED_CHARGES (
14:34:42  82  /*
14:34:42  83  Throws exceptions:
14:34:42  84  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  85  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  86  */
14:34:42  87  	in_invoice_id  IN NUMBER,
14:34:42  88  	out_result_set OUT SYS_REFCURSOR
14:34:42  89  );
14:34:42  90  
14:34:42  91  END PROCS_CHARGE_V18;
14:34:42  92  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.04
14:34:42 SQL> 
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> -- DDL for package PROCS_CHARGE_CRU
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_CHARGE_CRU_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE CREATE_CHARGE(
14:34:42   4  	out_charge_id	      OUT CHARGE.ID%TYPE,
14:34:42   5  	in_charge_id	      IN CHARGE.ID%TYPE DEFAULT NULL,
14:34:42   6  	in_invoice_id	      IN CHARGE.INVOICE_ID%TYPE,
14:34:42   7  	in_transaction_id     IN CHARGE.TRANSACTION_ID%TYPE DEFAULT NULL,
14:34:42   8  	in_instrument_type_id IN CHARGE.INSTRUMENT_TYPE_ID%TYPE,
14:34:42   9  	in_instrument_id      IN CHARGE.INSTRUMENT_ID%TYPE,
14:34:42  10  	in_charge_amount      IN CHARGE.CHARGE_AMOUNT%TYPE,
14:34:42  11  	in_charge_status_id   IN CHARGE.CHARGE_STATUS_ID%TYPE,
14:34:42  12  	in_created_by	      IN CHARGE.CREATED_BY%TYPE
14:34:42  13  );
14:34:42  14  
14:34:42  15  PROCEDURE UPDATE_CHARGE(
14:34:42  16  	in_charge_id	      IN CHARGE.ID%TYPE,
14:34:42  17  	in_instrument_type_id IN CHARGE.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
14:34:42  18  	in_instrument_id      IN CHARGE.INSTRUMENT_ID%TYPE DEFAULT NULL,
14:34:42  19  	in_charge_amount      IN CHARGE.CHARGE_AMOUNT%TYPE DEFAULT NULL,
14:34:42  20  	in_charge_status_id   IN CHARGE.CHARGE_STATUS_ID%TYPE DEFAULT NULL,
14:34:42  21  	in_updated_by	      IN CHARGE.UPDATED_BY%TYPE
14:34:42  22  );
14:34:42  23  
14:34:42  24  END PROCS_CHARGE_CRU_V18;
14:34:42  25  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.03
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_CUPY" AS
14:34:42   2  
14:34:42   3  	PROCEDURE POPULATE_REQUEST_INFO(
14:34:42   4  	  in_hours_prior    IN	NUMBER,
14:34:42   5  	  in_filename	    IN	CC_REQUEST_FILE.FILE_NAME%TYPE,
14:34:42   6  	  in_creator	    IN	CC_REQUEST_FILE.UPDATED_BY%TYPE
14:34:42   7  	);
14:34:42   8  
14:34:42   9  	PROCEDURE CHASE_PROFILE_BY_REQ_FILE_ID(
14:34:42  10  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
14:34:42  11  	  in_start	     IN NUMBER,
14:34:42  12  	  in_end	     IN NUMBER,
14:34:42  13  	  out_result_set     OUT SYS_REFCURSOR
14:34:42  14  	);
14:34:42  15  
14:34:42  16  	PROCEDURE UPDATE_REQUEST_FILE_STATUS(
14:34:42  17  	  in_request_file_id IN CC_REQUEST_FILE.ID%TYPE,
14:34:42  18  	  in_status	     IN CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
14:34:42  19  	  in_updated_by      IN CC_REQUEST_FILE.UPDATED_BY%TYPE
14:34:42  20  	);
14:34:42  21  
14:34:42  22  	PROCEDURE UPDATE_CC_REQUEST_STATUS(
14:34:42  23  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
14:34:42  24  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
14:34:42  25  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
14:34:42  26  	);
14:34:42  27  
14:34:42  28  	PROCEDURE REQUEST_FILES_BY_STATUS (
14:34:42  29  	  in_status	      IN  CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
14:34:42  30  	  in_older_than_hours IN  NUMBER DEFAULT -288,
14:34:42  31  	  out_request_files   OUT SYS_REFCURSOR
14:34:42  32  	);
14:34:42  33  
14:34:42  34  	PROCEDURE COUNT_BY_REQUEST_FILE_ID (
14:34:42  35  	  in_id     IN	CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
14:34:42  36  	  out_count OUT NUMBER
14:34:42  37  	);
14:34:42  38  
14:34:42  39  	PROCEDURE GET_CREDIT_CARD_LICENSE (
14:34:42  40  	  in_chase_profile_id  IN  CREDIT_CARD.CHASE_PROFILE_ID%TYPE,
14:34:42  41  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE DEFAULT NULL,
14:34:42  42  	  out_card_license     OUT SYS_REFCURSOR
14:34:42  43  	);
14:34:42  44  
14:34:42  45  	PROCEDURE UPDATE_CC_UPDATE(
14:34:42  46  	  in_id 	     IN CC_UPDATE.ID%TYPE,
14:34:42  47  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
14:34:42  48  	  in_action	     IN CC_UPDATE.CC_UPDATE_ACTION%TYPE DEFAULT NULL,
14:34:42  49  	  in_reason	     IN CC_UPDATE.CC_UPDATE_REASON%TYPE DEFAULT NULL,
14:34:42  50  	  in_response_proc_status_code IN CC_UPDATE.RESPONSE_PROC_STATUS_CODE%TYPE DEFAULT NULL,
14:34:42  51  	  in_response_proc_status_msg  IN CC_UPDATE.RESPONSE_PROC_STATUS_MESSAGE%TYPE DEFAULT NULL,
14:34:42  52  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
14:34:42  53  	);
14:34:42  54  
14:34:42  55  	PROCEDURE UPDATE_CC_UPDATE_STATUS(
14:34:42  56  	  in_id 	IN CC_UPDATE.ID%TYPE,
14:34:42  57  	  in_status	IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
14:34:42  58  	  in_updated_by IN CC_UPDATE.UPDATED_BY%TYPE
14:34:42  59  	);
14:34:42  60  
14:34:42  61  	PROCEDURE GET_REQUEST_FILE_BY_FILENAME (
14:34:42  62  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE,
14:34:42  63  	  out_request_file     OUT SYS_REFCURSOR
14:34:42  64  	);
14:34:42  65  
14:34:42  66  	PROCEDURE SUSPEND_CREDIT_CARD (
14:34:42  67  	  in_credit_card_id  IN CREDIT_CARD.ID%TYPE,
14:34:42  68  	  in_updated_by      IN CREDIT_CARD.UPDATED_BY%TYPE
14:34:42  69  	);
14:34:42  70  
14:34:42  71  	PROCEDURE UPDATE_CREDIT_CARD (
14:34:42  72  	  in_credit_card_id   IN CREDIT_CARD.ID%TYPE,
14:34:42  73  	  in_last_four_cc     IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
14:34:42  74  	  in_expiration_date  IN CREDIT_CARD.EXPIRATION_DATE%TYPE,
14:34:42  75  	  in_updated_by       IN CREDIT_CARD.UPDATED_BY%TYPE
14:34:42  76  	);
14:34:42  77  
14:34:42  78  	PROCEDURE COMPLETABLE_REQUESTS (
14:34:42  79  	  out_request_files OUT SYS_REFCURSOR
14:34:42  80  	);
14:34:42  81  
14:34:42  82  	PROCEDURE COMPLETABLE_REQUESTS_W_FAILS (
14:34:42  83  	  in_max_hours_before_report IN  NUMBER,
14:34:42  84  	  out_request_files	     OUT SYS_REFCURSOR
14:34:42  85  	);
14:34:42  86  
14:34:42  87  END PROCS_CUPY;
14:34:42  88  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.11
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE
14:34:42   2  PACKAGE PROCS_ENTITLEMENT_V18 AS
14:34:42   3  
14:34:42   4  PROCEDURE GET_ALL_ENTITLEMENTS(
14:34:42   5  	in_group_id IN NUMBER,
14:34:42   6  	out_result_set OUT SYS_REFCURSOR);
14:34:42   7  
14:34:42   8  PROCEDURE GET_ITUNES_ENTITLEMENTS(
14:34:42   9  	in_product_id IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
14:34:42  10  	out_result_set OUT SYS_REFCURSOR);
14:34:42  11  
14:34:42  12  PROCEDURE GET_ARCHIVE_ENTITLEMENT_URI(
14:34:42  13  	in_subscription_id IN NUMBER,
14:34:42  14  	out_uri OUT VARCHAR2);
14:34:42  15  
14:34:42  16  END PROCS_ENTITLEMENT_V18;
14:34:42  17  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.02
14:34:42 SQL> 
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> -- DDL for package PROCS_FIN_INSTRUMENTS
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_FIN_INSTRUMENTS_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE UPDATE_GC_STATUS_BY_INVOICE (
14:34:42   4  	  in_invoice_id IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:42   5  	  in_status_id	IN GIFT_CERTIFICATE_STATUS.ID%TYPE,
14:34:42   6  	  in_updater	IN GIFT_CERTIFICATE.UPDATED_BY%TYPE
14:34:42   7  );
14:34:42   8  
14:34:42   9  PROCEDURE IS_INVOICE_FOR_REDEEMED_GC (
14:34:42  10  	in_invoice_id		     IN NUMBER,
14:34:42  11  	out_is_invoice_for_redeem_gc OUT NUMBER
14:34:42  12  );
14:34:42  13  
14:34:42  14  PROCEDURE GET_UNREDEEMED_GCS (
14:34:42  15  	out_result_set		OUT SYS_REFCURSOR,
14:34:42  16  	in_hours_number 	IN NUMBER DEFAULT 14*24,
14:34:42  17  	in_num_rows		IN NUMBER DEFAULT 10000,
14:34:42  18  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
14:34:42  19  );
14:34:42  20  
14:34:42  21  PROCEDURE GET_GC_ID_BY_PURCH_INVOICE_ID (
14:34:42  22  in_invoice_id IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:42  23  out_gift_certificate_id OUT GIFT_CERTIFICATE.ID%TYPE
14:34:42  24  );
14:34:42  25  
14:34:42  26  PROCEDURE ADD_CREDIT_CARD (
14:34:42  27  /*
14:34:42  28  Throws exceptions:
14:34:42  29  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  30  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  31  */
14:34:42  32  	in_group_id		  IN NUMBER,
14:34:42  33  	in_updated_by		  IN VARCHAR2,
14:34:42  34  	in_instrument_name	  IN VARCHAR2,
14:34:42  35  	in_card_holder_name	  IN VARCHAR2,
14:34:42  36  	in_street_address	  IN VARCHAR2,
14:34:42  37  	in_street_address2	  IN VARCHAR2,
14:34:42  38  	in_state		  IN VARCHAR2,
14:34:42  39  	in_city 		  IN VARCHAR2,
14:34:42  40  	in_postal_code		  IN VARCHAR2,
14:34:42  41  	in_country		  IN CHAR,
14:34:42  42  	in_last_four_cc 	  IN VARCHAR2,
14:34:42  43  	in_expiration_date	  IN DATE,
14:34:42  44  	in_credit_card_type_id	  IN NUMBER,
14:34:42  45  	in_token		  IN VARCHAR2,
14:34:42  46  	in_chase_profile_id	  IN VARCHAR2,
14:34:42  47  	in_credit_card_status_id  IN NUMBER,
14:34:42  48  	in_private_first_name	  IN VARCHAR2,
14:34:42  49  	in_private_last_name	  IN VARCHAR2,
14:34:42  50  	out_credit_card_id	  OUT NUMBER
14:34:42  51  );
14:34:42  52  
14:34:42  53  /******************************************************************************/
14:34:42  54  
14:34:42  55  PROCEDURE ADD_PAYPAL (
14:34:42  56  /*
14:34:42  57  Throws exceptions:
14:34:42  58  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  59  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  60  */
14:34:42  61  	in_group_id			IN NUMBER,
14:34:42  62  	in_instrument_name		IN VARCHAR2,
14:34:42  63  	in_private_email_address	IN VARCHAR2,
14:34:42  64  	in_created_by			IN VARCHAR2,
14:34:42  65  	in_paypal_status_id		IN NUMBER,
14:34:42  66  	in_paypal_prvt_street_address	IN VARCHAR2,
14:34:42  67  	in_paypal_prvt_street_address2	IN VARCHAR2,
14:34:42  68  	in_state			IN VARCHAR2,
14:34:42  69  	in_city 			IN VARCHAR2,
14:34:42  70  	in_postal_code			IN VARCHAR2,
14:34:42  71  	in_country			IN CHAR,
14:34:42  72  	in_expiration_date		IN DATE,
14:34:42  73  	in_secret_token 		IN VARCHAR2,
14:34:42  74  	out_paypal_id			OUT NUMBER
14:34:42  75  );
14:34:42  76  
14:34:42  77  /********************************************/
14:34:42  78  
14:34:42  79  PROCEDURE GET_GIFT_CERTIFICATE_BY_CODE (
14:34:42  80  /*
14:34:42  81  Throws exceptions:
14:34:42  82  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:42  83  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  84  */
14:34:42  85  	in_code       IN VARCHAR,
14:34:42  86  	out_result_set OUT SYS_REFCURSOR
14:34:42  87  );
14:34:42  88  
14:34:42  89  /********************************************/
14:34:42  90  
14:34:42  91  PROCEDURE GET_GIFT_CERTIFICATE_BY_ID (
14:34:42  92  /*
14:34:42  93  Throws exceptions:
14:34:42  94  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:42  95  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  96  */
14:34:42  97  	in_gift_certificate_id IN NUMBER,
14:34:42  98  	out_result_set	       OUT SYS_REFCURSOR
14:34:42  99  );
14:34:42 100  
14:34:42 101  /********************************************/
14:34:42 102  
14:34:42 103  PROCEDURE DISABLE_CREDIT_CARD (
14:34:42 104  /*
14:34:42 105  Throws exceptions:
14:34:42 106  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42 107  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42 108  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42 109  */
14:34:42 110  	in_credit_card_id IN NUMBER,
14:34:42 111  	in_updated_by	  IN VARCHAR2
14:34:42 112  );
14:34:42 113  
14:34:42 114  /********************************************/
14:34:42 115  
14:34:42 116  PROCEDURE DISABLE_PAYPAL (
14:34:42 117  /*
14:34:42 118  Throws exceptions:
14:34:42 119  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42 120  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42 121  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42 122  */
14:34:42 123  	in_paypal_id  IN NUMBER,
14:34:42 124  	in_updated_by IN VARCHAR2
14:34:42 125  );
14:34:42 126  
14:34:42 127  /********************************************/
14:34:42 128  
14:34:42 129  PROCEDURE UPDATE_CREDIT_CARD (
14:34:42 130  /*
14:34:42 131  Throws exceptions:
14:34:42 132  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42 133  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42 134  */
14:34:42 135  	in_credit_card_id	  IN NUMBER,
14:34:42 136  	in_updated_by		  IN VARCHAR2,
14:34:42 137  	in_instrument_name	  IN VARCHAR2,
14:34:42 138  	in_is_default		  IN NUMBER
14:34:42 139  );
14:34:42 140  
14:34:42 141  /********************************************/
14:34:42 142  
14:34:42 143  PROCEDURE START_GC_PURCHASING (
14:34:42 144  	in_group_id		  IN NUMBER,
14:34:42 145  	in_offer_chain_id	  IN VARCHAR2,
14:34:42 146  	in_gift_certificate_code  IN  VARCHAR2,
14:34:42 147  	in_created_by		  IN  VARCHAR2,
14:34:42 148  	in_recipient_name	  IN  VARCHAR2,
14:34:42 149  	in_recipient_email	  IN  VARCHAR2,
14:34:42 150  	in_recipient_address_id   IN NUMBER,
14:34:42 151  	in_recipient_notify_date  IN DATE,
14:34:42 152  	in_sender_name		  IN VARCHAR2,
14:34:42 153  	in_sender_email 	  IN VARCHAR2,
14:34:42 154  	in_gift_message 	  IN  VARCHAR2,
14:34:42 155  	in_expiration_date	  IN DATE,
14:34:42 156  	out_gift_certificate_id   OUT NUMBER,
14:34:42 157  	out_invoice_id		  OUT NUMBER
14:34:42 158  );
14:34:42 159  
14:34:42 160  PROCEDURE FINALIZE_GC_PURCHASING (
14:34:42 161  	in_invoice_id	      IN NUMBER,
14:34:42 162  	in_created_by	      IN VARCHAR2,
14:34:42 163  	in_instrument_id      IN NUMBER,
14:34:42 164  	in_instrument_type_id IN NUMBER,
14:34:42 165  	in_order_id	      IN VARCHAR2,
14:34:42 166  	in_transaction_id     IN NUMBER,
14:34:42 167  	out_charge_amount     OUT NUMBER
14:34:42 168  );
14:34:42 169  
14:34:42 170  PROCEDURE PURCHASE_GIFT_CERTIFICATE (
14:34:42 171  	in_group_id	  IN NUMBER,
14:34:42 172  	in_offer_chain_id IN VARCHAR2,
14:34:42 173  	in_gift_certificate_code  IN  VARCHAR2,
14:34:42 174  	in_created_by IN  VARCHAR2,
14:34:42 175  	in_recipient_name IN  VARCHAR2,
14:34:42 176  	in_recipient_email IN  VARCHAR2,
14:34:42 177  	in_sender_name IN VARCHAR2,
14:34:42 178  	in_sender_email IN VARCHAR2,
14:34:42 179  	in_gift_message IN  VARCHAR2,
14:34:42 180  	in_instrument_id  IN  NUMBER,
14:34:42 181  	in_instrument_type_id IN NUMBER,
14:34:42 182  	in_expiration_date IN DATE,
14:34:42 183  	in_order_id IN VARCHAR2,
14:34:42 184  	in_transaction_id IN NUMBER
14:34:42 185  );
14:34:42 186  
14:34:42 187  /*********************************************/
14:34:42 188  
14:34:42 189  PROCEDURE REDEEM_GIFT_CERTIFICATE (
14:34:42 190  	in_group_id			IN NUMBER,
14:34:42 191  	in_gift_certificate_code	IN VARCHAR2,
14:34:42 192  	in_created_by			IN VARCHAR2,
14:34:42 193  	in_redeemer_address_id		IN NUMBER,
14:34:42 194  	in_fin_instrument_id		IN NUMBER,
14:34:42 195  	in_fin_instrument_type_id	IN NUMBER,
14:34:42 196  	in_redemption_offer_chain_id	IN NUMBER,
14:34:42 197  	out_subscription_id		OUT NUMBER,
14:34:42 198  	out_license_id			OUT NUMBER
14:34:42 199  );
14:34:42 200  
14:34:42 201  /********************************************/
14:34:42 202  
14:34:42 203  PROCEDURE GET_DEF_FINANCIAL_INSTRUMENT (
14:34:42 204  	in_group_id	       IN  NUMBER,
14:34:42 205  	out_instrument_type_id OUT NUMBER,
14:34:42 206  	out_instrument_id      OUT NUMBER
14:34:42 207  );
14:34:42 208  
14:34:42 209  /************************************************/
14:34:42 210  
14:34:42 211  PROCEDURE SET_DEF_FINANCIAL_INSTRUMENT (
14:34:42 212  	in_group_id	      IN NUMBER,
14:34:42 213  	in_instrument_type_id IN NUMBER,
14:34:42 214  	in_instrument_id      IN NUMBER,
14:34:42 215  	in_updated_by	      IN VARCHAR2
14:34:42 216  );
14:34:42 217  
14:34:42 218  /***************************************************/
14:34:42 219  
14:34:42 220  PROCEDURE DEL_DEF_FINANCIAL_INSTRUMENT (
14:34:42 221  	in_group_id	      IN NUMBER
14:34:42 222  );
14:34:42 223  
14:34:42 224  /****************************************************/
14:34:42 225  
14:34:42 226  PROCEDURE GET_CREDIT_CARD_BY_ID (
14:34:42 227  	in_credit_card_id IN  NUMBER,
14:34:42 228  	out_result_set	  OUT SYS_REFCURSOR
14:34:42 229  );
14:34:42 230  
14:34:42 231  /****************************************************/
14:34:42 232  
14:34:42 233  PROCEDURE GET_PAYPAL_BY_ID (
14:34:42 234  	in_paypal_id   IN  NUMBER,
14:34:42 235  	out_result_set OUT SYS_REFCURSOR
14:34:42 236  );
14:34:42 237  
14:34:42 238  /***********************************************/
14:34:42 239  
14:34:42 240  FUNCTION F_CAN_DISABLE_CREDIT_CARD (
14:34:42 241  	in_credit_card_id NUMBER
14:34:42 242  ) RETURN NUMBER;
14:34:42 243  
14:34:42 244  /*************************************************/
14:34:42 245  
14:34:42 246  PROCEDURE GET_PURCHASED_GCERTIFICATES (
14:34:42 247  	in_group_id    IN NUMBER,
14:34:42 248  	out_result_set OUT SYS_REFCURSOR
14:34:42 249  );
14:34:42 250  
14:34:42 251  /*************************************************/
14:34:42 252  
14:34:42 253  -- isGiftCertificateForProperOffer
14:34:42 254  
14:34:42 255  PROCEDURE IS_GCERT_FOR_PROPER_OFFER (
14:34:42 256  	in_gift_certificate_id IN NUMBER,
14:34:42 257  	in_charge_id	       IN NUMBER,
14:34:42 258  	out_result	       OUT NUMBER
14:34:42 259  );
14:34:42 260  
14:34:42 261  FUNCTION IS_CREDIT_CARD_EXISTS (
14:34:42 262  /*
14:34:42 263  1 - if instrument exists
14:34:42 264  0 - else
14:34:42 265  */
14:34:42 266  	in_credit_card_id IN NUMBER
14:34:42 267  ) RETURN NUMBER;
14:34:42 268  
14:34:42 269  FUNCTION IS_PAYPAL_EXISTS (
14:34:42 270  /*
14:34:42 271  1 - if instrument exists
14:34:42 272  0 - else
14:34:42 273  */
14:34:42 274  	in_paypal_id IN NUMBER
14:34:42 275  ) RETURN NUMBER;
14:34:42 276  
14:34:42 277  FUNCTION IS_GIFT_CERTIFICATE_EXISTS (
14:34:42 278  /*
14:34:42 279  1 - if instrument exists
14:34:42 280  0 - else
14:34:42 281  */
14:34:42 282  	in_gift_certificate_id IN NUMBER
14:34:42 283  ) RETURN NUMBER;
14:34:42 284  
14:34:42 285  PROCEDURE GET_GROUP_ID_BY_CREDIT_CARD_ID (
14:34:42 286  	in_credit_card_id IN NUMBER,
14:34:42 287  	out_group_id	  OUT NUMBER
14:34:42 288  );
14:34:42 289  
14:34:42 290  PROCEDURE GET_GROUP_ID_BY_PAYPAL_ID (
14:34:42 291  	in_paypal_id IN NUMBER,
14:34:42 292  	out_group_id	  OUT NUMBER
14:34:42 293  );
14:34:42 294  
14:34:42 295  PROCEDURE UPDATE_CREDIT_CARD_STATUS (
14:34:42 296  	in_credit_card_id	 IN CREDIT_CARD.ID%TYPE,
14:34:42 297  	in_credit_card_status_id IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE,
14:34:42 298  	in_updated_by		 IN CREDIT_CARD.UPDATED_BY%TYPE
14:34:42 299  );
14:34:42 300  
14:34:42 301  PROCEDURE UPDATE_PAYPAL_STATUS (
14:34:42 302  	in_paypal_id	    IN PAYPAL.ID%TYPE,
14:34:42 303  	in_paypal_status_id IN PAYPAL.PAYPAL_STATUS_ID%TYPE,
14:34:42 304  	in_updated_by	    IN PAYPAL.UPDATED_BY%TYPE
14:34:42 305  );
14:34:42 306  
14:34:42 307  PROCEDURE UPDATE_GIFT_CERTIFICATE_STATUS (
14:34:42 308  	in_gift_certificate_id	      IN GIFT_CERTIFICATE.ID%TYPE,
14:34:42 309  	in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE,
14:34:42 310  	in_updated_by		      IN GIFT_CERTIFICATE.UPDATED_BY%TYPE
14:34:42 311  );
14:34:42 312  
14:34:42 313  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
14:34:42 314  	in_invoice_id		IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:42 315  	out_result_set OUT SYS_REFCURSOR
14:34:42 316  );
14:34:42 317  
14:34:42 318  PROCEDURE SWITCH_FINANCIAL_INSTRUMENT (
14:34:42 319  	/*in_group_id		     IN NUMBER	-- TODO: should we pass group_id here?*/
14:34:42 320  	in_old_fin_instrument_id   IN NUMBER,
14:34:42 321  	in_old_fin_instrument_type IN NUMBER,
14:34:42 322  	in_new_fin_instrument_id   IN NUMBER,
14:34:42 323  	in_new_fin_instrument_type IN NUMBER,
14:34:42 324  	in_updated_by		   IN VARCHAR2
14:34:42 325  );
14:34:42 326  
14:34:42 327  END PROCS_FIN_INSTRUMENTS_V18;
14:34:42 328  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.11
14:34:42 SQL> 
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> -- DDL for package PROCS_FIN_INSTRUMENTS_CRU
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_FIN_INSTRUMENTS_CRU_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE CREATE_CREDIT_CARD(
14:34:42   4  	out_credit_card_id	    OUT CREDIT_CARD.ID%TYPE,
14:34:42   5  	in_credit_card_id	    IN CREDIT_CARD.ID%TYPE DEFAULT NULL,
14:34:42   6  	in_account_id		    IN CREDIT_CARD.ACCOUNT_ID%TYPE,
14:34:42   7  	in_instrument_name	    IN CREDIT_CARD.INSTRUMENT_NAME%TYPE,
14:34:42   8  	in_private_card_holder_name IN CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME%TYPE,
14:34:42   9  	in_private_street_address   IN CREDIT_CARD.PRIVATE_STREET_ADDRESS%TYPE,
14:34:42  10  	in_private_street_address2  IN CREDIT_CARD.PRIVATE_STREET_ADDRESS2%TYPE DEFAULT NULL,
14:34:42  11  	in_state		    IN CREDIT_CARD.STATE%TYPE,
14:34:42  12  	in_city 		    IN CREDIT_CARD.CITY%TYPE,
14:34:42  13  	in_postal_code		    IN CREDIT_CARD.POSTAL_CODE%TYPE,
14:34:42  14  	in_country		    IN CREDIT_CARD.COUNTRY%TYPE,
14:34:42  15  	in_last_four_cc 	    IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
14:34:42  16  	in_expiration_date	    IN CREDIT_CARD.EXPIRATION_DATE%TYPE,
14:34:42  17  	in_credit_card_type_id	    IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE,
14:34:42  18  	in_secret_token 	    IN CREDIT_CARD.SECRET_TOKEN%TYPE,
14:34:42  19  	in_chase_profile_id	    IN CREDIT_CARD.CHASE_PROFILE_ID%TYPE,
14:34:42  20  	in_created_by		    IN CREDIT_CARD.CREATED_BY%TYPE,
14:34:42  21  	in_credit_card_status_id    IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE,
14:34:42  22  	in_private_first_name	    IN CREDIT_CARD.PRIVATE_FIRST_NAME%TYPE,
14:34:42  23  	in_private_last_name	    IN CREDIT_CARD.PRIVATE_LAST_NAME%TYPE
14:34:42  24  );
14:34:42  25  
14:34:42  26  PROCEDURE UPDATE_CREDIT_CARD(
14:34:42  27  	in_credit_card_id	    IN CREDIT_CARD.ID%TYPE,
14:34:42  28  	in_instrument_name	    IN CREDIT_CARD.INSTRUMENT_NAME%TYPE DEFAULT NULL,
14:34:42  29  	in_private_card_holder_name IN CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME%TYPE DEFAULT NULL,
14:34:42  30  	in_private_street_address   IN CREDIT_CARD.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
14:34:42  31  	in_private_street_address2  IN CREDIT_CARD.PRIVATE_STREET_ADDRESS2%TYPE DEFAULT NULL,
14:34:42  32  	in_state		    IN CREDIT_CARD.STATE%TYPE DEFAULT NULL,
14:34:42  33  	in_city 		    IN CREDIT_CARD.CITY%TYPE DEFAULT NULL,
14:34:42  34  	in_postal_code		    IN CREDIT_CARD.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:42  35  	in_country		    IN CREDIT_CARD.COUNTRY%TYPE DEFAULT NULL,
14:34:42  36  	in_last_four_cc 	    IN CREDIT_CARD.LAST_FOUR_CC%TYPE DEFAULT NULL,
14:34:42  37  	in_expiration_date	    IN CREDIT_CARD.EXPIRATION_DATE%TYPE DEFAULT NULL,
14:34:42  38  	in_credit_card_type_id	    IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE DEFAULT NULL,
14:34:42  39  	in_secret_token 	    IN CREDIT_CARD.SECRET_TOKEN%TYPE DEFAULT NULL,
14:34:42  40  	in_chase_profile_id	    IN CREDIT_CARD.CHASE_PROFILE_ID%TYPE DEFAULT NULL,
14:34:42  41  	in_updated_by		    IN CREDIT_CARD.UPDATED_BY%TYPE,
14:34:42  42  	in_credit_card_status_id    IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT NULL,
14:34:42  43  	in_private_first_name	    IN CREDIT_CARD.PRIVATE_FIRST_NAME%TYPE DEFAULT NULL,
14:34:42  44  	in_private_last_name	    IN CREDIT_CARD.PRIVATE_LAST_NAME%TYPE DEFAULT NULL
14:34:42  45  );
14:34:42  46  
14:34:42  47  PROCEDURE CREATE_PAYPAL(
14:34:42  48  	out_paypal_id			OUT PAYPAL.ID%TYPE,
14:34:42  49  	in_paypal_id			IN PAYPAL.ID%TYPE DEFAULT NULL,
14:34:42  50  	in_account_id			IN PAYPAL.ACCOUNT_ID%TYPE,
14:34:42  51  	in_instrument_name		IN PAYPAL.INSTRUMENT_NAME%TYPE DEFAULT NULL,
14:34:42  52  	in_private_email_address	IN PAYPAL.PRIVATE_EMAIL_ADDRESS%TYPE DEFAULT NULL,
14:34:42  53  	in_created_by			IN PAYPAL.CREATED_BY%TYPE,
14:34:42  54  	in_paypal_status_id		IN PAYPAL.PAYPAL_STATUS_ID%TYPE,
14:34:42  55  	in_paypal_prvt_street_address	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE,
14:34:42  56  	in_paypal_prvt_street_address2	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE,
14:34:42  57  	in_state			IN PAYPAL.STATE%TYPE,
14:34:42  58  	in_city 			IN PAYPAL.CITY%TYPE,
14:34:42  59  	in_postal_code			IN PAYPAL.POSTAL_CODE%TYPE,
14:34:42  60  	in_country			IN PAYPAL.COUNTRY%TYPE,
14:34:42  61  	in_expiration_date		IN PAYPAL.EXPIRATION_DATE%TYPE,
14:34:42  62  	in_secret_token 		IN PAYPAL.SECRET_TOKEN%TYPE
14:34:42  63  );
14:34:42  64  
14:34:42  65  PROCEDURE UPDATE_PAYPAL(
14:34:42  66  	in_paypal_id			IN PAYPAL.ID%TYPE,
14:34:42  67  	in_instrument_name		IN PAYPAL.INSTRUMENT_NAME%TYPE DEFAULT NULL,
14:34:42  68  	in_private_email_address	IN PAYPAL.PRIVATE_EMAIL_ADDRESS%TYPE DEFAULT NULL,
14:34:42  69  	in_updated_by			IN PAYPAL.UPDATED_BY%TYPE,
14:34:42  70  	in_paypal_status_id		IN PAYPAL.PAYPAL_STATUS_ID%TYPE DEFAULT NULL,
14:34:42  71  	in_paypal_prvt_street_address	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
14:34:42  72  	in_paypal_prvt_street_address2	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
14:34:42  73  	in_state			IN PAYPAL.STATE%TYPE DEFAULT NULL,
14:34:42  74  	in_city 			IN PAYPAL.CITY%TYPE DEFAULT NULL,
14:34:42  75  	in_postal_code			IN PAYPAL.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:42  76  	in_country			IN PAYPAL.COUNTRY%TYPE DEFAULT NULL,
14:34:42  77  	in_expiration_date		IN PAYPAL.EXPIRATION_DATE%TYPE DEFAULT NULL,
14:34:42  78  	in_secret_token 		IN PAYPAL.SECRET_TOKEN%TYPE DEFAULT NULL
14:34:42  79  );
14:34:42  80  
14:34:42  81  PROCEDURE CREATE_GIFT_CERTIFICATE(
14:34:42  82  	out_gift_certificate_id       OUT GIFT_CERTIFICATE.ID%TYPE,
14:34:42  83  	in_gift_certificate_id	      IN GIFT_CERTIFICATE.ID%TYPE DEFAULT NULL,
14:34:42  84  	in_purchaser_group_id	      IN GIFT_CERTIFICATE.PURCHASER_GROUP_ID%TYPE,
14:34:42  85  	in_purchaser_invoice_id       IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:42  86  	in_offer_chain_id	      IN GIFT_CERTIFICATE.OFFER_CHAIN_ID%TYPE,
14:34:42  87  	in_expiration_date	      IN GIFT_CERTIFICATE.EXPIRATION_DATE%TYPE DEFAULT NULL,
14:34:42  88  	in_purchase_date	      IN GIFT_CERTIFICATE.PURCHASE_DATE%TYPE,
14:34:42  89  	in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE,
14:34:42  90  	in_code 		      IN GIFT_CERTIFICATE.CODE%TYPE,
14:34:42  91  	in_created_by		      IN GIFT_CERTIFICATE.CREATED_BY%TYPE,
14:34:42  92  	in_recipient_name	      IN GIFT_CERTIFICATE.RECIPIENT_NAME%TYPE DEFAULT NULL,
14:34:42  93  	in_gift_message 	      IN GIFT_CERTIFICATE.GIFT_MESSAGE%TYPE DEFAULT NULL,
14:34:42  94  	in_recipient_email	      IN GIFT_CERTIFICATE.RECIPIENT_EMAIL%TYPE DEFAULT NULL,
14:34:42  95  	in_finalized_invoice_id       IN GIFT_CERTIFICATE.FINALIZED_INVOICE_ID%TYPE DEFAULT NULL,
14:34:42  96  	in_sender_email 	      IN GIFT_CERTIFICATE.SENDER_EMAIL%TYPE,
14:34:42  97  	in_sender_name		      IN GIFT_CERTIFICATE.SENDER_NAME%TYPE,
14:34:42  98  	in_redemption_date	      IN GIFT_CERTIFICATE.REDEMPTION_DATE%TYPE DEFAULT NULL,
14:34:42  99  	in_cancelation_date	      IN GIFT_CERTIFICATE.CANCELATION_DATE%TYPE DEFAULT NULL,
14:34:42 100  	in_redeemer_group_id	      IN GIFT_CERTIFICATE.REDEEMER_GROUP_ID%TYPE DEFAULT NULL,
14:34:42 101  	in_recipient_address_id       IN GIFT_CERTIFICATE.RECIPIENT_ADDRESS_ID%TYPE DEFAULT NULL,
14:34:42 102  	in_recipient_notify_date      IN GIFT_CERTIFICATE.RECIPIENT_NOTIFY_DATE%TYPE DEFAULT NULL
14:34:42 103  );
14:34:42 104  
14:34:42 105  PROCEDURE UPDATE_GIFT_CERTIFICATE(
14:34:42 106  	in_gift_certificate_id	      IN GIFT_CERTIFICATE.ID%TYPE,
14:34:42 107  	in_expiration_date	      IN GIFT_CERTIFICATE.EXPIRATION_DATE%TYPE DEFAULT NULL,
14:34:42 108  	in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE DEFAULT NULL,
14:34:42 109  	in_code 		      IN GIFT_CERTIFICATE.CODE%TYPE DEFAULT NULL,
14:34:42 110  	in_updated_by		      IN GIFT_CERTIFICATE.UPDATED_BY%TYPE,
14:34:42 111  	in_recipient_name	      IN GIFT_CERTIFICATE.RECIPIENT_NAME%TYPE DEFAULT NULL,
14:34:42 112  	in_gift_message 	      IN GIFT_CERTIFICATE.GIFT_MESSAGE%TYPE DEFAULT NULL,
14:34:42 113  	in_recipient_email	      IN GIFT_CERTIFICATE.RECIPIENT_EMAIL%TYPE DEFAULT NULL,
14:34:42 114  	in_finalized_invoice_id       IN GIFT_CERTIFICATE.FINALIZED_INVOICE_ID%TYPE DEFAULT NULL,
14:34:42 115  	in_sender_email 	      IN GIFT_CERTIFICATE.SENDER_EMAIL%TYPE DEFAULT NULL,
14:34:42 116  	in_sender_name		      IN GIFT_CERTIFICATE.SENDER_NAME%TYPE DEFAULT NULL,
14:34:42 117  	in_redemption_date	      IN GIFT_CERTIFICATE.REDEMPTION_DATE%TYPE DEFAULT NULL,
14:34:42 118  	in_cancelation_date	      IN GIFT_CERTIFICATE.CANCELATION_DATE%TYPE DEFAULT NULL,
14:34:42 119  	in_redeemer_group_id	      IN GIFT_CERTIFICATE.REDEEMER_GROUP_ID%TYPE DEFAULT NULL,
14:34:42 120  	in_recipient_address_id       IN GIFT_CERTIFICATE.RECIPIENT_ADDRESS_ID%TYPE DEFAULT NULL,
14:34:42 121  	in_redeemer_address_id	      IN GIFT_CERTIFICATE.REDEEMER_ADDRESS_ID%TYPE DEFAULT NULL,
14:34:42 122  	in_recipient_notify_date      IN GIFT_CERTIFICATE.RECIPIENT_NOTIFY_DATE%TYPE DEFAULT NULL
14:34:42 123  );
14:34:42 124  
14:34:42 125  END PROCS_FIN_INSTRUMENTS_CRU_V18;
14:34:42 126  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.08
14:34:42 SQL> 
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> -- DDL for package PROCS_GROUP_ACCOUNT
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_GROUP_ACCOUNT_V18" As
14:34:42   2  
14:34:42   3  PROCEDURE UPDATE_SS_NEED_ENTITLEMENTS (
14:34:42   4  	in_sub_share_id      IN SUBSCRIPTION_SHARE.ID%TYPE,
14:34:42   5  	in_need_entitlements IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE,
14:34:42   6  	in_updater	     IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
14:34:42   7  );
14:34:42   8  
14:34:42   9  PROCEDURE SUB_EXPIRES_NEED_ENTITLEMENTS (
14:34:42  10  	out_result_set OUT SYS_REFCURSOR
14:34:42  11  );
14:34:42  12  
14:34:42  13  PROCEDURE EXPIRE_SUB_SHARE (
14:34:42  14  	in_sub_share_id IN SUBSCRIPTION_SHARE.ID%TYPE,
14:34:42  15  	in_updater	IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
14:34:42  16  );
14:34:42  17  
14:34:42  18  PROCEDURE EXPIRE_ALL_SHARES (
14:34:42  19  	in_group_account_id IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE,
14:34:42  20  	in_updated_by	    IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
14:34:42  21  );
14:34:42  22  
14:34:42  23  PROCEDURE SUB_SHARE_BY_GROUP_ID (
14:34:42  24  	in_group_id	 IN  ACCOUNT.GROUP_ID%TYPE,
14:34:42  25  	in_start	 IN  NUMBER,
14:34:42  26  	in_end		 IN  NUMBER,
14:34:42  27  	in_expired	 IN  NUMBER,
14:34:42  28  	out_result_set	 OUT SYS_REFCURSOR,
14:34:42  29  	out_shares_count OUT NUMBER
14:34:42  30  );
14:34:42  31  
14:34:42  32  PROCEDURE IS_VALID_IP_ADDRESS (
14:34:42  33  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
14:34:42  34  	in_ip_low	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
14:34:42  35  	in_ip_high	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
14:34:42  36  	out_is_valid	    OUT NUMBER
14:34:42  37  );
14:34:42  38  
14:34:42  39  PROCEDURE IS_VALID_EMAIL_DOMAIN (
14:34:42  40  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:42  41  	in_email_domain     IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
14:34:42  42  	out_is_valid	    OUT NUMBER
14:34:42  43  );
14:34:42  44  
14:34:42  45  PROCEDURE GET_SUBSCRIPTION_SHARE (
14:34:42  46  	in_group_account_id    IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE,
14:34:42  47  	in_borrower_account_id IN SUBSCRIPTION_SHARE.BORROWER_ACCOUNT_ID%TYPE,
14:34:42  48  	Out_Result_Set	       Out Sys_Refcursor
14:34:42  49  );
14:34:42  50  
14:34:42  51  PROCEDURE GET_SUBSCRIPTION_SHARES (
14:34:42  52  	in_group_account_id IN NUMBER,
14:34:42  53  	in_start	    IN NUMBER,
14:34:42  54  	in_end		    IN NUMBER,
14:34:42  55  	Out_Result_Set	    OUT Sys_Refcursor
14:34:42  56  );
14:34:42  57  
14:34:42  58  PROCEDURE GET_GROUP_ACCOUNT_BY_SUB_ID (
14:34:42  59  	in_subscription_id IN Group_Account.SUBSCRIPTION_ID%TYPE,
14:34:42  60  	Out_Result_Set	   Out Sys_Refcursor
14:34:42  61  );
14:34:42  62  
14:34:42  63  PROCEDURE CREATE_GROUP_ACCOUNT (
14:34:42  64  	in_subscription_id	 IN NUMBER,
14:34:42  65  	in_group_name		 IN VARCHAR2,
14:34:42  66  	in_first_name		 IN VARCHAR2,
14:34:42  67  	in_last_name		 IN VARCHAR2,
14:34:42  68  	in_email		 IN VARCHAR2,
14:34:42  69  	in_phone		 IN VARCHAR2,
14:34:42  70  	in_organization_type	 IN VARCHAR2,
14:34:42  71  	in_seats		 IN NUMBER,
14:34:42  72  	in_seat_ttl_in_hours	 IN NUMBER,
14:34:42  73  	in_ip			 IN NUMBER,
14:34:42  74  	in_created_by		 IN VARCHAR2
14:34:42  75  );
14:34:42  76  
14:34:42  77  PROCEDURE GET_GROUP_ACCOUNT_BY_EMAIL (
14:34:42  78  	in_email_domain     IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
14:34:42  79  	out_result_set	    OUT SYS_REFCURSOR
14:34:42  80  );
14:34:42  81  
14:34:42  82  PROCEDURE GET_GROUP_ACCOUNT_BY_IP (
14:34:42  83  	in_ip_low	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
14:34:42  84  	in_ip_high	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
14:34:42  85  	out_result_set	    OUT SYS_REFCURSOR
14:34:42  86  );
14:34:42  87  
14:34:42  88  PROCEDURE GET_GROUP_ACCOUNT_IP_RANGES (
14:34:42  89  	in_group_account_id   IN NUMBER,
14:34:42  90  	in_start	      IN NUMBER,
14:34:42  91  	in_end		      IN NUMBER,
14:34:42  92  	in_status	      IN NUMBER,
14:34:42  93  	out_record_count      OUT NUMBER,
14:34:42  94  	out_result_set	      OUT SYS_REFCURSOR
14:34:42  95  );
14:34:42  96  
14:34:42  97  PROCEDURE GET_GRP_ACCNT_EMAIL_DOMAINS (
14:34:42  98  	in_group_account_id   IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:42  99  	in_start	      IN NUMBER,
14:34:42 100  	in_end		      IN NUMBER,
14:34:42 101  	in_status	      IN GROUP_ACCOUNT_EMAIL_DOMAIN.IS_ACTIVE%TYPE,
14:34:42 102  	out_record_count      OUT NUMBER,
14:34:42 103  	out_result_set	      OUT SYS_REFCURSOR
14:34:42 104  );
14:34:42 105  
14:34:42 106  PROCEDURE ADD_EMAIL_DOMAIN (
14:34:42 107  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:42 108  	in_email_domain IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
14:34:42 109  	in_created_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.CREATED_BY%TYPE
14:34:42 110  );
14:34:42 111  
14:34:42 112  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_GA_ID(
14:34:42 113  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:42 114  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
14:34:42 115  );
14:34:42 116  
14:34:42 117  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_ID(
14:34:42 118  	in_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
14:34:42 119  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
14:34:42 120  );
14:34:42 121  
14:34:42 122  PROCEDURE CREATE_SUBSCRIPTION_SHARE (
14:34:42 123  	in_group_account_id    IN NUMBER,
14:34:42 124  	in_borrower_account_id IN NUMBER,
14:34:42 125  	in_ip_address	       IN VARCHAR2,
14:34:42 126  	in_email_domain        IN VARCHAR2,
14:34:42 127  	in_created_by	       IN VARCHAR2
14:34:42 128  );
14:34:42 129  
14:34:42 130  PROCEDURE GET_NUM_OCCUPIED_GROUP_SEATS (
14:34:42 131  	in_group_account_id   IN NUMBER,
14:34:42 132  	out_occupied_seats   OUT NUMBER
14:34:42 133  );
14:34:42 134  
14:34:42 135  FUNCTION F_GET_NUM_OCCUPIED_GROUP_SEATS (
14:34:42 136  	in_group_account_id   IN NUMBER
14:34:42 137  ) RETURN NUMBER;
14:34:42 138  
14:34:42 139  PROCEDURE DISABLE_IP_RANGES_BY_GA_ID(
14:34:42 140  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
14:34:42 141  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
14:34:42 142  );
14:34:42 143  
14:34:42 144  PROCEDURE DISABLE_IP_RANGE_BY_ID(
14:34:42 145  	in_id IN GROUP_ACCOUNT_IP_RANGE.ID%TYPE,
14:34:42 146  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
14:34:42 147  );
14:34:42 148  
14:34:42 149  PROCEDURE ADD_IP_RANGE (
14:34:42 150  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
14:34:42 151  	in_minimum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_STRING%TYPE,
14:34:42 152  	in_minimum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
14:34:42 153  	in_minimum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
14:34:42 154  	in_maximum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_STRING%TYPE,
14:34:42 155  	in_maximum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_LOW%TYPE,
14:34:42 156  	in_maximum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_HIGH%TYPE,
14:34:42 157  	in_created_by IN GROUP_ACCOUNT_IP_RANGE.CREATED_BY%TYPE
14:34:42 158  );
14:34:42 159  
14:34:42 160  PROCEDURE GET_GRP_ID_BY_GRP_ACCOUNT_ID (
14:34:42 161  	in_group_account_id IN NUMBER,
14:34:42 162  	out_group_id OUT NUMBER
14:34:42 163  );
14:34:42 164  
14:34:42 165  PROCEDURE GET_GRP_ID_BY_GRPACCIPRNG_ID (
14:34:42 166  	in_group_account_ip_range_id IN NUMBER,
14:34:42 167  	out_group_id OUT NUMBER
14:34:42 168  );
14:34:42 169  
14:34:42 170  PROCEDURE GET_GRP_ID_BY_EMAIL_DOM_ID (
14:34:42 171  	in_group_account_email_dom_id IN NUMBER,
14:34:42 172  	out_group_id OUT NUMBER
14:34:42 173  );
14:34:42 174  
14:34:42 175  PROCEDURE UPDATE_GROUP_ACCOUNT (
14:34:42 176  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
14:34:42 177  	in_group_name		 IN GROUP_ACCOUNT.GROUP_NAME%TYPE,
14:34:42 178  	in_first_name		 IN GROUP_ACCOUNT.FIRST_NAME%TYPE,
14:34:42 179  	in_last_name		 IN GROUP_ACCOUNT.LAST_NAME%TYPE,
14:34:42 180  	in_email		 IN GROUP_ACCOUNT.EMAIL%TYPE,
14:34:42 181  	in_phone		 IN GROUP_ACCOUNT.PHONE%TYPE,
14:34:42 182  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
14:34:42 183  );
14:34:42 184  
14:34:42 185  PROCEDURE UPDATE_GROUP_ACCOUNT_SEATS (
14:34:42 186  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
14:34:42 187  	in_seats		 IN GROUP_ACCOUNT.SEATS%TYPE,
14:34:42 188  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
14:34:42 189  );
14:34:42 190  
14:34:42 191  END PROCS_GROUP_ACCOUNT_V18;
14:34:42 192  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.09
14:34:42 SQL> 
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> -- DDL for package PROCS_GROUP_ACCOUNT
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_GROUP_ACCOUNT_CRU_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE UPDATE_SUBSCRIPTION_SHARE (
14:34:42   4  	in_id		       IN SUBSCRIPTION_SHARE.ID%TYPE,
14:34:42   5  	in_group_account_id    IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE DEFAULT NULL,
14:34:42   6  	in_borrower_account_id IN SUBSCRIPTION_SHARE.BORROWER_ACCOUNT_ID%TYPE DEFAULT NULL,
14:34:42   7  	in_ip_address	       IN SUBSCRIPTION_SHARE.IP_ADDRESS%TYPE DEFAULT NULL,
14:34:42   8  	in_start_date	       IN SUBSCRIPTION_SHARE.START_DATE%TYPE DEFAULT NULL,
14:34:42   9  	in_end_date	       IN SUBSCRIPTION_SHARE.END_DATE%TYPE DEFAULT NULL,
14:34:42  10  	in_needs_entitlements  IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE DEFAULT NULL,
14:34:42  11  	in_updated_by	       IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
14:34:42  12  );
14:34:42  13  
14:34:42  14  PROCEDURE CREATE_GROUP_ACCOUNT (
14:34:42  15  	in_subscription_id	 IN NUMBER,
14:34:42  16  	in_group_name		 IN VARCHAR2,
14:34:42  17  	in_first_name		 IN VARCHAR2,
14:34:42  18  	in_last_name		 IN VARCHAR2,
14:34:42  19  	in_email		 IN VARCHAR2,
14:34:42  20  	in_phone		 IN VARCHAR2,
14:34:42  21  	in_organization_type	 IN VARCHAR2,
14:34:42  22  	in_seats		 IN NUMBER,
14:34:42  23  	in_seat_ttl_in_hours	 IN NUMBER,
14:34:42  24  	in_ip			 IN NUMBER,
14:34:42  25  	in_created_by		 IN VARCHAR2
14:34:42  26  );
14:34:42  27  
14:34:42  28  PROCEDURE CREATE_SUBSCRIPTION_SHARE (
14:34:42  29  	in_group_account_id    IN NUMBER,
14:34:42  30  	in_borrower_account_id IN NUMBER,
14:34:42  31  	in_ip_address	       IN VARCHAR2,
14:34:42  32  	in_email_domain        IN VARCHAR2,
14:34:42  33  	in_start_date	       IN DATE,
14:34:42  34  	in_end_date	       IN DATE,
14:34:42  35  	in_created_by	       IN VARCHAR2
14:34:42  36  );
14:34:42  37  
14:34:42  38  PROCEDURE DISABLE_IP_RANGES_BY_GA_ID(
14:34:42  39  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
14:34:42  40  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
14:34:42  41  );
14:34:42  42  
14:34:42  43  PROCEDURE DISABLE_IP_RANGE_BY_ID(
14:34:42  44  	in_id IN GROUP_ACCOUNT_IP_RANGE.ID%TYPE,
14:34:42  45  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
14:34:42  46  );
14:34:42  47  
14:34:42  48  PROCEDURE ADD_IP_RANGE (
14:34:42  49  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
14:34:42  50  	in_minimum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_STRING%TYPE,
14:34:42  51  	in_minimum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
14:34:42  52  	in_minimum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
14:34:42  53  	in_maximum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_STRING%TYPE,
14:34:42  54  	in_maximum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_LOW%TYPE,
14:34:42  55  	in_maximum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_HIGH%TYPE,
14:34:42  56  	in_created_by IN GROUP_ACCOUNT_IP_RANGE.CREATED_BY%TYPE
14:34:42  57  );
14:34:42  58  
14:34:42  59  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_GA_ID(
14:34:42  60  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:42  61  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
14:34:42  62  );
14:34:42  63  
14:34:42  64  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_ID(
14:34:42  65  	in_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
14:34:42  66  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
14:34:42  67  );
14:34:42  68  
14:34:42  69  PROCEDURE ENABLE_EMAIL_DOMAIN_BY_ID(
14:34:42  70  	in_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
14:34:42  71  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
14:34:42  72  );
14:34:42  73  
14:34:42  74  PROCEDURE ADD_EMAIL_DOMAIN (
14:34:42  75  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:42  76  	in_email_domain IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
14:34:42  77  	in_is_active IN  GROUP_ACCOUNT_EMAIL_DOMAIN.IS_ACTIVE%TYPE,
14:34:42  78  	in_created_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.CREATED_BY%TYPE
14:34:42  79  );
14:34:42  80  
14:34:42  81  PROCEDURE UPDATE_GROUP_ACCOUNT (
14:34:42  82  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
14:34:42  83  	in_group_name		 IN GROUP_ACCOUNT.GROUP_NAME%TYPE,
14:34:42  84  	in_first_name		 IN GROUP_ACCOUNT.FIRST_NAME%TYPE,
14:34:42  85  	in_last_name		 IN GROUP_ACCOUNT.LAST_NAME%TYPE,
14:34:42  86  	in_email		 IN GROUP_ACCOUNT.EMAIL%TYPE,
14:34:42  87  	in_phone		 IN GROUP_ACCOUNT.PHONE%TYPE,
14:34:42  88  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
14:34:42  89  );
14:34:42  90  
14:34:42  91  PROCEDURE UPDATE_GROUP_ACCOUNT_SEATS (
14:34:42  92  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
14:34:42  93  	in_seats		 IN GROUP_ACCOUNT.SEATS%TYPE,
14:34:42  94  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
14:34:42  95  );
14:34:42  96  END PROCS_GROUP_ACCOUNT_CRU_V18;
14:34:42  97  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.07
14:34:42 SQL> 
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> -- DDL for package PROCS_HISTORY
14:34:42 SQL> --------------------------------------------------------------------------------
14:34:42 SQL> 
14:34:42 SQL> CREATE OR REPLACE PACKAGE "PROCS_HISTORY_V18" AS
14:34:42   2  
14:34:42   3  PROCEDURE CREATE_ADDRESS_HISTORY(
14:34:42   4  /*
14:34:42   5  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42   7  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42   8  */
14:34:42   9  	in_address_id		     IN NUMBER,
14:34:42  10  	in_system_activity_reason_id IN NUMBER
14:34:42  11  );
14:34:42  12  
14:34:42  13  PROCEDURE CREATE_ACCOUNT_HISTORY(
14:34:42  14  /*
14:34:42  15  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  16  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  17  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42  18  */
14:34:42  19  	in_account_id		     IN NUMBER,
14:34:42  20  	in_system_activity_reason_id IN NUMBER
14:34:42  21  );
14:34:42  22  
14:34:42  23  PROCEDURE CREATE_SUBSCRIPTION_HISTORY (
14:34:42  24  /*
14:34:42  25  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  26  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  27  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42  28  */
14:34:42  29  	in_subscription_id	     IN NUMBER,
14:34:42  30  	in_system_activity_reason_id IN NUMBER
14:34:42  31  );
14:34:42  32  
14:34:42  33  PROCEDURE CREATE_CREDIT_CARD_HISTORY(
14:34:42  34  /*
14:34:42  35  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  36  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  37  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42  38  */
14:34:42  39  	in_credit_card_id	      IN NUMBER,
14:34:42  40  	in_system_activity_reason_id  IN  NUMBER
14:34:42  41  );
14:34:42  42  
14:34:42  43  PROCEDURE CREATE_PAYPAL_HISTORY(
14:34:42  44  /*
14:34:42  45  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  46  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  47  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42  48  */
14:34:42  49  	in_paypal_id		      IN NUMBER,
14:34:42  50  	in_system_activity_reason_id  IN NUMBER
14:34:42  51  );
14:34:42  52  
14:34:42  53  PROCEDURE CREATE_GIFT_CERT_HISTORY(
14:34:42  54  /*
14:34:42  55  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  56  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  57  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42  58  */
14:34:42  59  	in_gift_certificate_id	      IN NUMBER,
14:34:42  60  	in_system_activity_reason_id  IN  NUMBER
14:34:42  61  );
14:34:42  62  
14:34:42  63  PROCEDURE CREATE_TRANSACTION_HISTORY (
14:34:42  64  /*
14:34:42  65  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  66  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  67  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42  68  */
14:34:42  69  	in_transaction_id	     IN NUMBER,
14:34:42  70  	in_system_activity_reason_id IN NUMBER
14:34:42  71  );
14:34:42  72  
14:34:42  73  PROCEDURE CREATE_INVOICE_HISTORY (
14:34:42  74  /*
14:34:42  75  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  76  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  77  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42  78  */
14:34:42  79  	in_invoice_id		     IN NUMBER,
14:34:42  80  	in_system_activity_reason_id IN NUMBER
14:34:42  81  );
14:34:42  82  
14:34:42  83  PROCEDURE CREATE_LICENSE_HISTORY (
14:34:42  84  /*
14:34:42  85  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  86  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  87  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42  88  */
14:34:42  89  	in_license_id		     IN NUMBER,
14:34:42  90  	in_system_activity_reason_id IN NUMBER
14:34:42  91  );
14:34:42  92  
14:34:42  93  PROCEDURE CREATE_CHARGE_HISTORY (
14:34:42  94  /*
14:34:42  95  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42  96  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42  97  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42  98  */
14:34:42  99  	in_charge_id		    IN NUMBER,
14:34:42 100  	in_system_activity_reason_id IN NUMBER
14:34:42 101  );
14:34:42 102  
14:34:42 103  PROCEDURE CREATE_INVOICE_ADJ_HISTORY (
14:34:42 104  /*
14:34:42 105  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:42 106  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:42 107  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:42 108  */
14:34:42 109  	in_invoice_adjustment_id     IN NUMBER,
14:34:42 110  	in_system_activity_reason_id IN NUMBER
14:34:42 111  );
14:34:42 112  
14:34:42 113  
14:34:42 114  END PROCS_HISTORY_V18;
14:34:42 115  .
14:34:42 SQL> /

Package created.

Elapsed: 00:00:00.03
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_INVOICE
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_INVOICE_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE GET_INVOICE_IDS(
14:34:43   4  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE,
14:34:43   5  	in_fin_id      IN SUBSCRIPTION.INSTRUMENT_ID%TYPE,
14:34:43   6  	out_result_set OUT SYS_REFCURSOR
14:34:43   7  );
14:34:43   8  
14:34:43   9  PROCEDURE IS_INVOICE_FOR_GC (
14:34:43  10  	in_invoice_id  IN NUMBER,
14:34:43  11  	out_result     OUT NUMBER
14:34:43  12  );
14:34:43  13  
14:34:43  14  PROCEDURE CREATE_INVOICE(
14:34:43  15  /*
14:34:43  16  Throws exceptions:
14:34:43  17  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  18  */
14:34:43  19  	  in_invoice_status IN NUMBER,
14:34:43  20  	  in_created_by     IN VARCHAR2,
14:34:43  21  	  in_tax_exempt_id  IN VARCHAR2,
14:34:43  22  	  out_invoice_id    OUT NUMBER
14:34:43  23  );
14:34:43  24  
14:34:43  25  PROCEDURE GET_PENDING_INVOICES (
14:34:43  26  /*
14:34:43  27  Throws exceptions:
14:34:43  28  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  29  */
14:34:43  30  	out_result_set1      OUT SYS_REFCURSOR,
14:34:43  31  	out_result_set2      OUT SYS_REFCURSOR,
14:34:43  32  	out_result_set3      OUT SYS_REFCURSOR,
14:34:43  33  	in_row_number	     IN NUMBER DEFAULT NULL
14:34:43  34  );
14:34:43  35  
14:34:43  36  PROCEDURE CALCULATE_INVOICE_AMOUNT (
14:34:43  37  /*
14:34:43  38  Throws exceptions:
14:34:43  39  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  40  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  41  */
14:34:43  42  	in_invoice_id IN  NUMBER,
14:34:43  43  	out_amount    OUT NUMBER
14:34:43  44  );
14:34:43  45  
14:34:43  46  FUNCTION F_CALCULATE_INVOICE_AMOUNT(
14:34:43  47  	in_invoice_id IN  NUMBER
14:34:43  48  ) RETURN NUMBER;
14:34:43  49  
14:34:43  50  PROCEDURE GET_ACCOUNT_BY_INVOICE_ID (
14:34:43  51  /*
14:34:43  52  Throws exceptions:
14:34:43  53  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  54  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  55  */
14:34:43  56  	in_invoice_id  IN  NUMBER,
14:34:43  57  	out_account_id OUT NUMBER
14:34:43  58  );
14:34:43  59  
14:34:43  60  PROCEDURE GET_INVOICE_DETAILS (
14:34:43  61  /*
14:34:43  62  Throws exceptions:
14:34:43  63  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  64  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  65  */
14:34:43  66  	in_invoice_id	   IN  NUMBER,
14:34:43  67  	out_group_id	   OUT NUMBER,
14:34:43  68  	out_status_id	   OUT NUMBER,
14:34:43  69  	out_line_items_set OUT SYS_REFCURSOR,
14:34:43  70  	out_pp_charges_set OUT SYS_REFCURSOR,
14:34:43  71  	out_cc_charges_set OUT SYS_REFCURSOR,
14:34:43  72  	out_gc_charges_set OUT SYS_REFCURSOR
14:34:43  73  );
14:34:43  74  -- norlov: #38796
14:34:43  75  PROCEDURE GET_TRANSACTION_INVOICE (
14:34:43  76  /*
14:34:43  77  Throws exceptions:
14:34:43  78  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  79  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  80  */
14:34:43  81  	in_transaction_id  IN  NUMBER,
14:34:43  82  	out_result_set	      OUT SYS_REFCURSOR
14:34:43  83  );
14:34:43  84  
14:34:43  85  PROCEDURE UPDATE_INVOICE_STATUS (
14:34:43  86  /*
14:34:43  87  Throws exceptions:
14:34:43  88  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  89  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  90  */
14:34:43  91  	in_invoice_id		       IN NUMBER,
14:34:43  92  	in_invoice_status_id	       IN NUMBER,
14:34:43  93  	in_updated_by		       IN VARCHAR2
14:34:43  94  );
14:34:43  95  
14:34:43  96  FUNCTION IS_INVOICE_PAYING_STARTED (
14:34:43  97  /*
14:34:43  98  Throws exceptions:
14:34:43  99  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43 100  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 101  */
14:34:43 102  	in_invoice_id IN NUMBER
14:34:43 103  ) RETURN NUMBER;
14:34:43 104  
14:34:43 105  PROCEDURE P_IS_INVOICE_PAYING_STARTED (
14:34:43 106  	in_invoice_id  IN NUMBER,
14:34:43 107  	out_is_started OUT NUMBER
14:34:43 108  );
14:34:43 109  
14:34:43 110  PROCEDURE CALCULATE_INVOICE_CHARGEBACK (
14:34:43 111  	in_invoice_id	      IN NUMBER,
14:34:43 112  	in_chargeback_date    IN DATE,
14:34:43 113  	out_chargeback_amount OUT NUMBER
14:34:43 114  );
14:34:43 115  
14:34:43 116  PROCEDURE APPLY_REFUND (
14:34:43 117  	in_invoice_id	     IN NUMBER,
14:34:43 118  	in_chargeback_amount IN NUMBER,
14:34:43 119  	in_created_by	     IN VARCHAR2,
14:34:43 120  	out_charge_id	     OUT NUMBER
14:34:43 121  );
14:34:43 122  
14:34:43 123  PROCEDURE GET_MAX_REFUND (
14:34:43 124  	in_invoice_id IN NUMBER,
14:34:43 125  	out_amount    OUT NUMBER
14:34:43 126  );
14:34:43 127  
14:34:43 128  PROCEDURE GET_INVOICE_DAYS_USED_NUMBER (
14:34:43 129  	in_invoice_id	    IN NUMBER,
14:34:43 130  	in_chargeback_date  IN DATE DEFAULT SYSDATE,
14:34:43 131  	out_days_num	    OUT NUMBER
14:34:43 132  );
14:34:43 133  
14:34:43 134  PROCEDURE GET_INVOICE_LINE_ITEMS (
14:34:43 135  	in_invoice_id  IN NUMBER,
14:34:43 136  	out_result_set OUT SYS_REFCURSOR
14:34:43 137  );
14:34:43 138  
14:34:43 139  PROCEDURE GET_INVOICE_LICENSES (
14:34:43 140  	in_invoice_id  IN NUMBER,
14:34:43 141  	out_result_set OUT SYS_REFCURSOR
14:34:43 142  );
14:34:43 143  
14:34:43 144  PROCEDURE GET_OFFER_CH_ID_BY_INVOICE_ID (
14:34:43 145  	in_invoice_id	   IN NUMBER,
14:34:43 146  	out_offer_chain_id OUT NUMBER
14:34:43 147  );
14:34:43 148  
14:34:43 149  PROCEDURE CLOSE_INVOICE_AS_NOT_COLLECTED (
14:34:43 150  -- Closing invoice without refund
14:34:43 151  	in_invoice_id IN NUMBER,
14:34:43 152  	in_updated_by IN VARCHAR2
14:34:43 153  );
14:34:43 154  
14:34:43 155  PROCEDURE GET_SUBSCR_ID_BY_INVOICE_ID (
14:34:43 156  	in_invoice_id	    IN NUMBER,
14:34:43 157  	out_subscription_id OUT NUMBER
14:34:43 158  );
14:34:43 159  
14:34:43 160  PROCEDURE IS_INVOICE_TAX_EXEMPT (
14:34:43 161  /*
14:34:43 162  Throws exceptions:
14:34:43 163  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:43 164  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 165  Return:
14:34:43 166  	GLOBAL_CONSTANTS_V18.TRUE if ACCOUNT.EXEMPT_ID is not null
14:34:43 167  	GLOBAL_CONSTANTS_V18.FALSE else
14:34:43 168  */
14:34:43 169  	in_invoice_id	  IN NUMBER,
14:34:43 170  	out_is_tax_exempt OUT NUMBER
14:34:43 171  );
14:34:43 172  
14:34:43 173  PROCEDURE GET_INVOICE_BY_ID (
14:34:43 174  	in_invoice_id  IN NUMBER,
14:34:43 175  	out_result_set OUT SYS_REFCURSOR
14:34:43 176  );
14:34:43 177  
14:34:43 178  PROCEDURE GET_IS_TAX_CALCULATION_NEEDED (
14:34:43 179  	in_invoice_id		      IN NUMBER,
14:34:43 180  	out_is_tax_calculation_needed OUT NUMBER
14:34:43 181  );
14:34:43 182  
14:34:43 183  PROCEDURE SET_IS_TAX_CALCULATION_NEEDED (
14:34:43 184  	in_invoice_id		     IN NUMBER,
14:34:43 185  	in_updated_by		     IN VARCHAR2,
14:34:43 186  	in_is_tax_calculation_needed IN NUMBER
14:34:43 187  );
14:34:43 188  
14:34:43 189  PROCEDURE REFUND_INVOICE (
14:34:43 190  	in_invoice_id	   IN NUMBER,
14:34:43 191  	in_refund_amount   IN NUMBER,
14:34:43 192  	in_note 	   IN VARCHAR2,
14:34:43 193  	in_created_by	   IN VARCHAR2,
14:34:43 194  	out_charge_id	   OUT NUMBER
14:34:43 195  );
14:34:43 196  
14:34:43 197  PROCEDURE GET_PAYMENT_INFO_BY_INVOICE_ID (
14:34:43 198  	in_invoice_id		    IN NUMBER,
14:34:43 199  	out_order_id		    OUT VARCHAR2,
14:34:43 200  	out_external_transaction_id OUT VARCHAR2
14:34:43 201  );
14:34:43 202  
14:34:43 203  PROCEDURE GET_INVOICE_BY_TRNS_ORDER_ID (
14:34:43 204  	in_order_id  IN TRANSACTION.ORDER_ID%TYPE,
14:34:43 205  	out_result_set OUT SYS_REFCURSOR
14:34:43 206  );
14:34:43 207  
14:34:43 208  PROCEDURE IS_REVOKE_ENTITLEMENTS(
14:34:43 209  	in_invoice_id IN NUMBER,
14:34:43 210  	out_is_revoke OUT NUMBER
14:34:43 211  );
14:34:43 212  
14:34:43 213  END PROCS_INVOICE_V18;
14:34:43 214  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.08
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_INVOICE_CRU
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_INVOICE_CRU_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE CREATE_INVOICE (
14:34:43   4  	out_invoice_id		       OUT INVOICE.ID%TYPE,
14:34:43   5  	in_invoice_id		       IN INVOICE.ID%TYPE DEFAULT NULL,
14:34:43   6  	in_invoice_status_id	       IN INVOICE.INVOICE_STATUS_ID%TYPE,
14:34:43   7  	in_tax_exempt_id	       IN INVOICE.TAX_EXEMPT_ID%TYPE,
14:34:43   8  	in_created_by		       IN INVOICE.CREATED_BY%TYPE
14:34:43   9  );
14:34:43  10  
14:34:43  11  PROCEDURE UPDATE_INVOICE (
14:34:43  12  	in_invoice_id		       IN INVOICE.ID%TYPE,
14:34:43  13  	in_updated_by		       IN INVOICE.UPDATED_BY%TYPE,
14:34:43  14  	in_invoice_status_id	       IN INVOICE.INVOICE_STATUS_ID%TYPE DEFAULT NULL,
14:34:43  15  	in_is_tax_calculation_needed   IN INVOICE.IS_TAX_CALCULATION_NEEDED%TYPE DEFAULT NULL
14:34:43  16  );
14:34:43  17  
14:34:43  18  END PROCS_INVOICE_CRU_V18;
14:34:43  19  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.03
14:34:43 SQL> 
14:34:43 SQL> /*
14:34:43 SQL> CREATE TABLE ITUNES_RECEIPT (
14:34:43 SQL> 	id NUMBER NOT NULL ENABLE,
14:34:43 SQL> 	subscription_id NUMBER NOT NULL ENABLE,
14:34:43 SQL> 	receipt VARCHAR(1024) NOT NULL ENABLE,
14:34:43 SQL> 	status NUMBER,
14:34:43 SQL> 	quantity NUMBER,
14:34:43 SQL> 	product_id VARCHAR(1024),
14:34:43 SQL> 	transaction_id VARCHAR(1024),
14:34:43 SQL> 	purchase_date TIMESTAMP,
14:34:43 SQL> 	original_transaction_id VARCHAR(1024),
14:34:43 SQL> 	original_purchase_date TIMESTAMP,
14:34:43 SQL> 	app_item_id VARCHAR(1024),
14:34:43 SQL> 	version_external_id NUMBER,
14:34:43 SQL> 	bid VARCHAR(1024),
14:34:43 SQL> 	bvrs VARCHAR(255),
14:34:43 SQL> 	expires_date TIMESTAMP,
14:34:43 SQL> 	create_date DATE NOT NULL,
14:34:43 SQL> 	created_by VARCHAR(255) NOT NULL,
14:34:43 SQL> 	update_date DATE NOT NULL,
14:34:43 SQL> 	updated_by VARCHAR(255) NOT NULL,
14:34:43 SQL> 	last_check_date DATE NOT NULL,
14:34:43 SQL> 	CONSTRAINT "ITUNESRECEIPT_PK" PRIMARY KEY ("ID") USING INDEX TABLESPACE "CORE_IDX" ENABLE,
14:34:43 SQL> 	CONSTRAINT "ITUNESRECEIPT_SUBID_FK" FOREIGN KEY ("SUBSCRIPTION_ID") REFERENCES SUBSCRIPTION(ID) USING INDEX TABLESPACE "CORE_IDX" ENABLE,
14:34:43 SQL> 	CONSTRAINT "ITUNESRECEIPT_RECEIPT_UK" UNIQUE(receipt) USING INDEX TABLESPACE "CORE_IDX" ENABLE,
14:34:43 SQL> 	CONSTRAINT "ITUNESRECEIPT_SUBID_UK" UNIQUE(subscription_id) USING INDEX TABLESPACE "CORE_IDX" ENABLE
14:34:43 SQL> )
14:34:43 SQL> TABLESPACE CORE;
14:34:43 SQL> */
14:34:43 SQL> 
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_ITUNES_RECEIPT_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE ITUNES_RECEIPT_SUBSCRIPTION(
14:34:43   4  	      /*
14:34:43   5  	      Throws exceptions:
14:34:43   6  	      APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43   7  	      */
14:34:43   8  	      in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
14:34:43   9  	      out_result_set	  OUT SYS_REFCURSOR
14:34:43  10  );
14:34:43  11  
14:34:43  12  PROCEDURE CREATE_RECEIPT(
14:34:43  13  /*
14:34:43  14  Throws exceptions:
14:34:43  15  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  16  */
14:34:43  17  	  out_id	      OUT NUMBER,
14:34:43  18  	  in_subscription_id  IN ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
14:34:43  19  	  in_receipt	      IN ITUNES_RECEIPT.RECEIPT%TYPE,
14:34:43  20  	  in_status	      IN ITUNES_RECEIPT.STATUS%TYPE,
14:34:43  21  	  in_quantity	      IN ITUNES_RECEIPT.QUANTITY%TYPE,
14:34:43  22  	  in_product_id       IN ITUNES_RECEIPT.PRODUCT_ID%TYPE,
14:34:43  23  	  in_transaction_id   IN ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
14:34:43  24  	  in_purchase_date    IN ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
14:34:43  25  	  in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
14:34:43  26  	  in_original_purchase_date IN ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
14:34:43  27  	  in_app_item_id      IN ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
14:34:43  28  	  in_version_external_id IN ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
14:34:43  29  	  in_bid	      IN ITUNES_RECEIPT.BID%TYPE,
14:34:43  30  	  in_bvrs	      IN ITUNES_RECEIPT.BVRS%TYPE,
14:34:43  31  	  in_expires_date     IN ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
14:34:43  32  	  in_created_by       IN ITUNES_RECEIPT.CREATED_BY%TYPE
14:34:43  33  );
14:34:43  34  
14:34:43  35  PROCEDURE UPDATE_RECEIPT(
14:34:43  36  /*
14:34:43  37  Throws exceptions:
14:34:43  38  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  39  */
14:34:43  40  	  in_id 	      IN ITUNES_RECEIPT.ID%TYPE,
14:34:43  41  	  in_receipt	      IN ITUNES_RECEIPT.RECEIPT%TYPE,
14:34:43  42  	  in_status	      IN ITUNES_RECEIPT.STATUS%TYPE,
14:34:43  43  	  in_quantity	      IN ITUNES_RECEIPT.QUANTITY%TYPE,
14:34:43  44  	  in_product_id       IN ITUNES_RECEIPT.PRODUCT_ID%TYPE,
14:34:43  45  	  in_transaction_id   IN ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
14:34:43  46  	  in_purchase_date    IN ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
14:34:43  47  	  in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
14:34:43  48  	  in_original_purchase_date IN ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
14:34:43  49  	  in_app_item_id      IN ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
14:34:43  50  	  in_version_external_id IN ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
14:34:43  51  	  in_bid	      IN ITUNES_RECEIPT.BID%TYPE,
14:34:43  52  	  in_bvrs	      IN ITUNES_RECEIPT.BVRS%TYPE,
14:34:43  53  	  in_expires_date     IN ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
14:34:43  54  	  in_updated_by       IN ITUNES_RECEIPT.UPDATED_BY%TYPE,
14:34:43  55  	  in_is_expired       IN NUMBER
14:34:43  56  );
14:34:43  57  
14:34:43  58  PROCEDURE LINK_ITUNES_RECEIPT(
14:34:43  59  /*
14:34:43  60  Throws exceptions:
14:34:43  61  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  62  */
14:34:43  63  	  in_id 	      IN ITUNES_RECEIPT.ID%TYPE,
14:34:43  64  	  in_subscription_id  IN ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
14:34:43  65  	  in_updated_by       IN ITUNES_RECEIPT.UPDATED_BY%TYPE
14:34:43  66  );
14:34:43  67  
14:34:43  68  PROCEDURE MARK_RECEIPT_CHECKED(
14:34:43  69  /*
14:34:43  70  Throws exceptions:
14:34:43  71  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  72  */
14:34:43  73  	  in_id       IN ITUNES_RECEIPT.ID%TYPE
14:34:43  74  );
14:34:43  75  
14:34:43  76  PROCEDURE GET_ITUNES_RECEIPTS (
14:34:43  77  /*
14:34:43  78  Throws exceptions:
14:34:43  79  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  80  */
14:34:43  81  	out_result_set	    OUT SYS_REFCURSOR,
14:34:43  82  	in_row_number	    IN NUMBER DEFAULT 500
14:34:43  83  );
14:34:43  84  
14:34:43  85  PROCEDURE GET_VENDOR_FROM_ITUNES_PID(
14:34:43  86  /*
14:34:43  87  Throws exceptions:
14:34:43  88  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  89  */
14:34:43  90  	  out_vendor_source_id OUT OFFER_CHAIN.VENDOR_SOURCE_ID%TYPE,
14:34:43  91  	  in_itunes_pid        IN ITUNES_RECEIPT.PRODUCT_ID%TYPE
14:34:43  92  );
14:34:43  93  
14:34:43  94  END PROCS_ITUNES_RECEIPT_V18;
14:34:43  95  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.06
14:34:43 SQL> 
14:34:43 SQL> /*
14:34:43 SQL> CREATE TABLE ITUNES_RECEIPT (
14:34:43 SQL> 	id NUMBER NOT NULL ENABLE,
14:34:43 SQL> 	subscription_id NUMBER NOT NULL ENABLE,
14:34:43 SQL> 	receipt VARCHAR(1024) NOT NULL ENABLE,
14:34:43 SQL> 	status NUMBER,
14:34:43 SQL> 	quantity NUMBER,
14:34:43 SQL> 	product_id VARCHAR(1024),
14:34:43 SQL> 	transaction_id VARCHAR(1024),
14:34:43 SQL> 	purchase_date TIMESTAMP,
14:34:43 SQL> 	original_transaction_id VARCHAR(1024),
14:34:43 SQL> 	original_purchase_date TIMESTAMP,
14:34:43 SQL> 	app_item_id VARCHAR(1024),
14:34:43 SQL> 	version_external_id NUMBER,
14:34:43 SQL> 	bid VARCHAR(1024),
14:34:43 SQL> 	bvrs VARCHAR(255),
14:34:43 SQL> 	expires_date TIMESTAMP,
14:34:43 SQL> 	create_date DATE NOT NULL,
14:34:43 SQL> 	created_by VARCHAR(255) NOT NULL,
14:34:43 SQL> 	update_date DATE NOT NULL,
14:34:43 SQL> 	updated_by VARCHAR(255) NOT NULL,
14:34:43 SQL> 	last_check_date DATE NOT NULL,
14:34:43 SQL> 	CONSTRAINT "ITUNESRECEIPT_PK" PRIMARY KEY ("ID") USING INDEX TABLESPACE "CORE_IDX" ENABLE,
14:34:43 SQL> 	CONSTRAINT "ITUNESRECEIPT_SUBID_FK" FOREIGN KEY ("SUBSCRIPTION_ID") REFERENCES SUBSCRIPTION(ID) USING INDEX TABLESPACE "CORE_IDX" ENABLE,
14:34:43 SQL> 	CONSTRAINT "ITUNESRECEIPT_RECEIPT_UK" UNIQUE(receipt) USING INDEX TABLESPACE "CORE_IDX" ENABLE,
14:34:43 SQL> 	CONSTRAINT "ITUNESRECEIPT_SUBID_UK" UNIQUE(subscription_id) USING INDEX TABLESPACE "CORE_IDX" ENABLE
14:34:43 SQL> )
14:34:43 SQL> TABLESPACE CORE;
14:34:43 SQL> */
14:34:43 SQL> 
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_ITUNES_RECEIPT_CRU_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE CREATE_RECEIPT(
14:34:43   4  /*
14:34:43   5  Throws exceptions:
14:34:43   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43   7  */
14:34:43   8  	  out_id	      OUT NUMBER,
14:34:43   9  	  in_subscription_id  IN CORE_OWNER.ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
14:34:43  10  	  in_receipt	      IN CORE_OWNER.ITUNES_RECEIPT.RECEIPT%TYPE,
14:34:43  11  	  in_status	      IN CORE_OWNER.ITUNES_RECEIPT.STATUS%TYPE,
14:34:43  12  	  in_quantity	      IN CORE_OWNER.ITUNES_RECEIPT.QUANTITY%TYPE,
14:34:43  13  	  in_product_id       IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
14:34:43  14  	  in_transaction_id   IN CORE_OWNER.ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
14:34:43  15  	  in_purchase_date    IN CORE_OWNER.ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
14:34:43  16  	  in_original_transaction_id IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
14:34:43  17  	  in_original_purchase_date IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
14:34:43  18  	  in_app_item_id      IN CORE_OWNER.ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
14:34:43  19  	  in_version_external_id IN CORE_OWNER.ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
14:34:43  20  	  in_bid	      IN CORE_OWNER.ITUNES_RECEIPT.BID%TYPE,
14:34:43  21  	  in_bvrs	      IN CORE_OWNER.ITUNES_RECEIPT.BVRS%TYPE,
14:34:43  22  	  in_expires_date     IN CORE_OWNER.ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
14:34:43  23  	  in_created_by       IN CORE_OWNER.ITUNES_RECEIPT.CREATED_BY%TYPE
14:34:43  24  );
14:34:43  25  
14:34:43  26  PROCEDURE UPDATE_RECEIPT(
14:34:43  27  /*
14:34:43  28  Throws exceptions:
14:34:43  29  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  30  */
14:34:43  31  	  in_id 	      IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE,
14:34:43  32  	  in_receipt	      IN CORE_OWNER.ITUNES_RECEIPT.RECEIPT%TYPE,
14:34:43  33  	  in_status	      IN CORE_OWNER.ITUNES_RECEIPT.STATUS%TYPE,
14:34:43  34  	  in_quantity	      IN CORE_OWNER.ITUNES_RECEIPT.QUANTITY%TYPE,
14:34:43  35  	  in_product_id       IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
14:34:43  36  	  in_transaction_id   IN CORE_OWNER.ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
14:34:43  37  	  in_purchase_date    IN CORE_OWNER.ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
14:34:43  38  	  in_original_transaction_id IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
14:34:43  39  	  in_original_purchase_date IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
14:34:43  40  	  in_app_item_id      IN CORE_OWNER.ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
14:34:43  41  	  in_version_external_id IN CORE_OWNER.ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
14:34:43  42  	  in_bid	      IN CORE_OWNER.ITUNES_RECEIPT.BID%TYPE,
14:34:43  43  	  in_bvrs	      IN CORE_OWNER.ITUNES_RECEIPT.BVRS%TYPE,
14:34:43  44  	  in_expires_date     IN CORE_OWNER.ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
14:34:43  45  	  in_updated_by       IN CORE_OWNER.ITUNES_RECEIPT.UPDATED_BY%TYPE,
14:34:43  46  	  in_cancel_date      IN CORE_OWNER.ITUNES_RECEIPT.CANCEL_DATE%TYPE
14:34:43  47  );
14:34:43  48  
14:34:43  49  PROCEDURE LINK_ITUNES_RECEIPT(
14:34:43  50  /*
14:34:43  51  Throws exceptions:
14:34:43  52  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  53  */
14:34:43  54  	  in_id 	      IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE,
14:34:43  55  	  in_subscription_id  IN CORE_OWNER.ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
14:34:43  56  	  in_updated_by       IN CORE_OWNER.ITUNES_RECEIPT.UPDATED_BY%TYPE
14:34:43  57  );
14:34:43  58  
14:34:43  59  PROCEDURE MARK_RECEIPT_CHECKED(
14:34:43  60  /*
14:34:43  61  Throws exceptions:
14:34:43  62  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  63  */
14:34:43  64  	  in_id 	      IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE
14:34:43  65  );
14:34:43  66  
14:34:43  67  END PROCS_ITUNES_RECEIPT_CRU_V18;
14:34:43  68  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.05
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_LICENSE
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_LICENSE_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE CREATE_LICENSE(
14:34:43   4  /*
14:34:43   5  Throws exceptions:
14:34:43   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43   8  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:43   9  */
14:34:43  10  	in_status_id		    IN NUMBER,
14:34:43  11  	in_needs_entitlements	    IN NUMBER,
14:34:43  12  	in_start_date		    IN DATE,
14:34:43  13  	in_end_date		    IN DATE,
14:34:43  14  	in_offer_id		    IN NUMBER,
14:34:43  15  	in_subscription_id	    IN NUMBER,
14:34:43  16  	in_invoice_id		    IN NUMBER,
14:34:43  17  	in_created_by		    IN VARCHAR2,
14:34:43  18  	in_is_extension 	    IN NUMBER,
14:34:43  19  	in_current_offer_index	    IN NUMBER,
14:34:43  20  	in_current_offer_recurr_num IN NUMBER,
14:34:43  21  	out_license_id		    OUT NUMBER
14:34:43  22  );
14:34:43  23  
14:34:43  24  /*********************************************/
14:34:43  25  
14:34:43  26  PROCEDURE UPDATE_LICENSE_STATUS(
14:34:43  27  /*
14:34:43  28  Throws exceptions:
14:34:43  29  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  30  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  31  */
14:34:43  32  	  in_license_id     IN NUMBER,
14:34:43  33  	  in_license_status IN NUMBER,
14:34:43  34  	  in_updated_by     IN VARCHAR2,
14:34:43  35  	  in_ent_end	    IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.FALSE
14:34:43  36  );
14:34:43  37  
14:34:43  38  /*********************************************/
14:34:43  39  
14:34:43  40  PROCEDURE GET_ENDING_LICENSES (
14:34:43  41  	in_hours_number IN NUMBER,
14:34:43  42  	out_result_set OUT SYS_REFCURSOR
14:34:43  43  );
14:34:43  44  
14:34:43  45  /*********************************************/
14:34:43  46  
14:34:43  47  PROCEDURE GET_ENDING_LICENSES_CC (
14:34:43  48  	in_hours_number IN NUMBER,
14:34:43  49  	out_result_set OUT SYS_REFCURSOR,
14:34:43  50  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
14:34:43  51  );
14:34:43  52  
14:34:43  53  /**********************************************/
14:34:43  54  
14:34:43  55  PROCEDURE GET_RECURRING_OFFER (
14:34:43  56  	in_license_id  IN NUMBER,
14:34:43  57  	out_result_set OUT SYS_REFCURSOR
14:34:43  58  );
14:34:43  59  
14:34:43  60  /**********************************************/
14:34:43  61  
14:34:43  62  PROCEDURE GET_NEXT_OFFER (
14:34:43  63  	in_license_id  IN NUMBER,
14:34:43  64  	out_result_set OUT SYS_REFCURSOR
14:34:43  65  );
14:34:43  66  
14:34:43  67  /**********************************************/
14:34:43  68  
14:34:43  69  PROCEDURE GET_GROUP_ID_BY_LICENSE_ID (
14:34:43  70  	in_license_id IN NUMBER,
14:34:43  71  	out_group_id  OUT NUMBER
14:34:43  72  );
14:34:43  73  
14:34:43  74  /**************************************************/
14:34:43  75  
14:34:43  76  PROCEDURE GET_NEED_ENTITLEMENTS_LICENSES (
14:34:43  77  	out_result_set OUT SYS_REFCURSOR
14:34:43  78  );
14:34:43  79  
14:34:43  80  /**************************************************/
14:34:43  81  
14:34:43  82  PROCEDURE UPDATE_NEED_ENTITLEMENTS_FLAG (
14:34:43  83  	in_license_id	      IN NUMBER,
14:34:43  84  	in_needs_entitlements IN NUMBER,
14:34:43  85  	in_updated_by	      IN VARCHAR2
14:34:43  86  );
14:34:43  87  
14:34:43  88  PROCEDURE GET_ENDED_GC_LICENSES (
14:34:43  89  	out_result_set		OUT SYS_REFCURSOR,
14:34:43  90  	in_hours_number 	IN NUMBER DEFAULT 14*24,
14:34:43  91  	in_num_rows		IN NUMBER DEFAULT 10000,
14:34:43  92  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
14:34:43  93  );
14:34:43  94  
14:34:43  95  PROCEDURE GET_LICENSE_BY_ID (
14:34:43  96  
14:34:43  97  	in_license_id  IN NUMBER,
14:34:43  98  
14:34:43  99  	out_result_set OUT SYS_REFCURSOR
14:34:43 100  
14:34:43 101  );
14:34:43 102  PROCEDURE UP_LATEST_LICE_END_BY_SUBID (
14:34:43 103  	in_subscription_id IN NUMBER,
14:34:43 104  	in_end_date IN DATE,
14:34:43 105  	in_updated_by IN VARCHAR2
14:34:43 106  );
14:34:43 107  
14:34:43 108  PROCEDURE GET_GRACE_LICE_FOR_FINAL_TRANS (
14:34:43 109  	in_days_before_close	 IN NUMBER,
14:34:43 110  	in_num_licenses_to_fetch IN NUMBER,
14:34:43 111  	out_result_set		 OUT SYS_REFCURSOR
14:34:43 112  );
14:34:43 113  
14:34:43 114  END PROCS_LICENSE_V18;
14:34:43 115  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.04
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_LICENSE_CRU
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_LICENSE_CRU_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE CREATE_LICENSE(
14:34:43   4  	out_license_id		    OUT LICENSE.ID%TYPE,
14:34:43   5  	in_license_id		    IN LICENSE.ID%TYPE DEFAULT NULL,
14:34:43   6  	in_license_status_id	    IN LICENSE.LICENSE_STATUS_ID%TYPE,
14:34:43   7  	in_needs_entitlements	    IN LICENSE.NEEDS_ENTITLEMENTS%TYPE,
14:34:43   8  	in_start_date		    IN LICENSE.START_DATE%TYPE,
14:34:43   9  	in_offer_id		    IN LICENSE.OFFER_ID%TYPE,
14:34:43  10  	in_subscription_id	    IN LICENSE.SUBSCRIPTION_ID%TYPE,
14:34:43  11  	in_invoice_id		    IN LICENSE.INVOICE_ID%TYPE,
14:34:43  12  	in_end_date		    IN LICENSE.END_DATE%TYPE,
14:34:43  13  	in_created_by		    IN LICENSE.CREATED_BY%TYPE,
14:34:43  14  	in_is_extension 	    IN LICENSE.IS_EXTENSION%TYPE,
14:34:43  15  	in_current_offer_index	    IN LICENSE.CURRENT_OFFER_INDEX%TYPE,
14:34:43  16  	in_current_offer_recurr_num IN LICENSE.CURRENT_OFFER_RECURR_NUM%TYPE
14:34:43  17  );
14:34:43  18  
14:34:43  19  PROCEDURE UPDATE_LICENSE (
14:34:43  20  	in_license_id		    IN LICENSE.ID%TYPE,
14:34:43  21  	in_license_status_id	    IN LICENSE.LICENSE_STATUS_ID%TYPE DEFAULT NULL,
14:34:43  22  	in_needs_entitlements	    IN LICENSE.NEEDS_ENTITLEMENTS%TYPE DEFAULT NULL,
14:34:43  23  	in_start_date		    IN LICENSE.START_DATE%TYPE DEFAULT NULL,
14:34:43  24  	in_end_date		    IN LICENSE.END_DATE%TYPE DEFAULT NULL,
14:34:43  25  	in_updated_by		    IN LICENSE.CREATED_BY%TYPE,
14:34:43  26  	in_is_extension 	    IN LICENSE.IS_EXTENSION%TYPE DEFAULT NULL,
14:34:43  27  	in_current_offer_index	    IN LICENSE.CURRENT_OFFER_INDEX%TYPE DEFAULT NULL,
14:34:43  28  	in_current_offer_recurr_num IN LICENSE.CURRENT_OFFER_RECURR_NUM%TYPE DEFAULT NULL,
14:34:43  29  	in_entitlement_end_date     IN LICENSE.ENTITLEMENT_END_DATE%TYPE DEFAULT NULL,
14:34:43  30  	in_grace_start_date	    IN LICENSE.GRACE_START_DATE%TYPE DEFAULT NULL,
14:34:43  31  	in_grace_end_date	    IN LICENSE.GRACE_END_DATE%TYPE DEFAULT NULL
14:34:43  32  );
14:34:43  33  
14:34:43  34  END PROCS_LICENSE_CRU_V18;
14:34:43  35  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.05
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_LINE_ITEMS
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_LINE_ITEMS_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE ADD_LINE_ITEMS(
14:34:43   4  /*
14:34:43   5  Throws exceptions:
14:34:43   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43   8  */
14:34:43   9  	in_invoice_id IN NUMBER,
14:34:43  10  	in_offer_id   IN NUMBER,
14:34:43  11  	in_created_by IN VARCHAR2
14:34:43  12  );
14:34:43  13  
14:34:43  14  /****************************************************/
14:34:43  15  
14:34:43  16  PROCEDURE UPDATE_LINE_ITEM_AMOUNT (
14:34:43  17  	in_line_item_id    IN NUMBER,
14:34:43  18  	in_amount	   IN NUMBER,
14:34:43  19  	in_discount_amount IN NUMBER,
14:34:43  20  	in_taxes_amount    IN NUMBER
14:34:43  21  );
14:34:43  22  
14:34:43  23  /****************************************************/
14:34:43  24  
14:34:43  25  PROCEDURE GET_INVOICE_LINE_ITEMS (
14:34:43  26  /*
14:34:43  27  Throws exceptions:
14:34:43  28  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  29  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  30  */
14:34:43  31  	in_invoice_id  IN NUMBER,
14:34:43  32  	out_result_set OUT SYS_REFCURSOR
14:34:43  33  );
14:34:43  34  
14:34:43  35  /****************************************************/
14:34:43  36  
14:34:43  37  PROCEDURE GET_LINE_ITEM_TAXES (
14:34:43  38  /*
14:34:43  39  Throws exceptions:
14:34:43  40  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  41  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  42  */
14:34:43  43  	in_line_item_id IN  NUMBER,
14:34:43  44  	out_result_set	OUT SYS_REFCURSOR
14:34:43  45  );
14:34:43  46  /****************************************************/
14:34:43  47  
14:34:43  48  PROCEDURE GET_LINE_ITEM_DISCOUNTS (
14:34:43  49  /*
14:34:43  50  Throws exceptions:
14:34:43  51  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  52  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  53  */
14:34:43  54  	in_line_item_id IN  NUMBER,
14:34:43  55  	out_result_set	OUT SYS_REFCURSOR
14:34:43  56  );
14:34:43  57  
14:34:43  58  /****************************************************/
14:34:43  59  
14:34:43  60  PROCEDURE CALCULATE_LINE_ITEM_AMOUNT (
14:34:43  61  /*
14:34:43  62  Throws exceptions:
14:34:43  63  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  64  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  65  */
14:34:43  66  	in_line_item_id     IN	NUMBER,
14:34:43  67  	out_amount	    OUT NUMBER
14:34:43  68  );
14:34:43  69  
14:34:43  70  /****************************************************/
14:34:43  71  
14:34:43  72  FUNCTION F_CALCULATE_LINE_ITEM_AMOUNT (
14:34:43  73  /*
14:34:43  74  Throws exceptions:
14:34:43  75  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  76  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  77  */
14:34:43  78  	in_line_item_id     IN	NUMBER
14:34:43  79  ) RETURN NUMBER;
14:34:43  80  
14:34:43  81  END PROCS_LINE_ITEMS_V18;
14:34:43  82  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.02
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_LINE_ITEMS_CRU
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_LINE_ITEMS_CRU_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE CREATE_LINE_ITEM (
14:34:43   4  	inout_line_item_id  IN OUT LINE_ITEM.ID%TYPE,
14:34:43   5  	in_product_offer_id IN LINE_ITEM.PRODUCT_OFFER_ID%TYPE,
14:34:43   6  	in_invoice_id	    IN LINE_ITEM.INVOICE_ID%TYPE,
14:34:43   7  	in_amount	    IN LINE_ITEM.AMOUNT%TYPE,
14:34:43   8  	in_created_by	    IN LINE_ITEM.CREATED_BY%TYPE,
14:34:43   9  	in_discount_amount  IN LINE_ITEM.DISCOUNT_AMOUNT%TYPE,
14:34:43  10  	in_taxes_amount     IN LINE_ITEM.TAXES_AMOUNT%TYPE
14:34:43  11  );
14:34:43  12  
14:34:43  13  PROCEDURE UPDATE_LINE_ITEM (
14:34:43  14  	in_line_item_id     IN LINE_ITEM.ID%TYPE,
14:34:43  15  	in_amount	    IN LINE_ITEM.AMOUNT%TYPE DEFAULT NULL,
14:34:43  16  	in_discount_amount  IN LINE_ITEM.DISCOUNT_AMOUNT%TYPE  DEFAULT NULL,
14:34:43  17  	in_taxes_amount     IN LINE_ITEM.TAXES_AMOUNT%TYPE DEFAULT NULL
14:34:43  18  );
14:34:43  19  
14:34:43  20  PROCEDURE CREATE_DISCOUNT_LINE_ITEM (
14:34:43  21  	in_discount_id	IN DISCOUNT.ID%TYPE,
14:34:43  22  	in_line_item_id IN LINE_ITEM.ID%TYPE
14:34:43  23  );
14:34:43  24  
14:34:43  25  END PROCS_LINE_ITEMS_CRU_V18;
14:34:43  26  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.04
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_LOCKING
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_LOCKING_V18" AS
14:34:43   2  
14:34:43   3  /*
14:34:43   4  Removed by Sergey
14:34:43   5  10.12.2010
14:34:43   6  PROCEDURE INITIALIZE_SYSTEM;
14:34:43   7  
14:34:43   8  PROCEDURE INITIALIZE_ACCOUNT (
14:34:43   9  	in_account_id IN NUMBER
14:34:43  10  );
14:34:43  11  
14:34:43  12  PROCEDURE INITIALIZE_GROUP (
14:34:43  13  	in_group_id IN NUMBER
14:34:43  14  );
14:34:43  15  */
14:34:43  16  
14:34:43  17  PROCEDURE LOCK_ACCOUNT (
14:34:43  18  	in_group_id    IN NUMBER,
14:34:43  19  	in_lock_key    IN VARCHAR2,
14:34:43  20  	in_seconds_num IN NUMBER,
14:34:43  21  	in_created_by  IN VARCHAR2,
14:34:43  22  	in_reason      IN VARCHAR2
14:34:43  23  );
14:34:43  24  
14:34:43  25  PROCEDURE RELEASE_LOCK (
14:34:43  26  	in_group_id IN NUMBER,
14:34:43  27  	in_lock_key IN VARCHAR2
14:34:43  28  );
14:34:43  29  
14:34:43  30  END PROCS_LOCKING_V18;
14:34:43  31  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.05
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_NOTIFICATION
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_NOTIFICATION_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
14:34:43   4  /*
14:34:43   5  Throws exceptions:
14:34:43   6  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43   7  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43   8  */
14:34:43   9  	in_notification_type_name IN VARCHAR2,
14:34:43  10  	out_notification_type_id  OUT NUMBER
14:34:43  11  );
14:34:43  12  
14:34:43  13  PROCEDURE ADD_NOTIFICATION (
14:34:43  14  /*
14:34:43  15  Throws exceptions:
14:34:43  16  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  17  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  18  */
14:34:43  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
14:34:43  20  	in_recipient_group_id	 IN NUMBER,
14:34:43  21  	in_notification_type_id  IN NUMBER,
14:34:43  22  	in_date_to_notify	 IN DATE,
14:34:43  23  	in_email_template_params IN CLOB
14:34:43  24  );
14:34:43  25  
14:34:43  26  PROCEDURE GET_PENDING_NOTIFICATIONS (
14:34:43  27  /*
14:34:43  28  Throws exceptions:
14:34:43  29  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  30  */
14:34:43  31  	out_result_set OUT SYS_REFCURSOR
14:34:43  32  );
14:34:43  33  
14:34:43  34  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
14:34:43  35  /*
14:34:43  36  Throws exceptions:
14:34:43  37  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  38  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  39  */
14:34:43  40  	in_notification_id IN NUMBER
14:34:43  41  );
14:34:43  42  
14:34:43  43  PROCEDURE SET_NOTIFICATION_STATUS (
14:34:43  44  /*
14:34:43  45  Throws exceptions:
14:34:43  46  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  47  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  48  */
14:34:43  49  	in_notification_id	  IN NUMBER,
14:34:43  50  	in_notification_status_id IN NUMBER,
14:34:43  51  	in_error_message	  IN VARCHAR2
14:34:43  52  );
14:34:43  53  
14:34:43  54  PROCEDURE ADD_NOTIFICATION_FAILURE (
14:34:43  55  /*
14:34:43  56  Throws exceptions:
14:34:43  57  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  58  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  59  */
14:34:43  60  	in_notification_id IN NUMBER,
14:34:43  61  	in_error_message   IN VARCHAR2
14:34:43  62  );
14:34:43  63  
14:34:43  64  PROCEDURE LOCK_PENDING_NOTIFICATION (
14:34:43  65  /*
14:34:43  66  Result: 1 if notification locked
14:34:43  67  2 - else
14:34:43  68  */
14:34:43  69  	in_notification_id IN NUMBER,
14:34:43  70  	out_lock_status    OUT NUMBER
14:34:43  71  );
14:34:43  72  
14:34:43  73  PROCEDURE GET_NOTIFICATION_DATA (
14:34:43  74  	in_notification_id IN NUMBER,
14:34:43  75  	out_result_set	   OUT SYS_REFCURSOR
14:34:43  76  );
14:34:43  77  
14:34:43  78  END PROCS_NOTIFICATION_V18;
14:34:43  79  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.05
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_OFFER_CHAIN
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_OFFER_CHAIN_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE GET_OFFER_CHAIN_BY_ID (
14:34:43   4  /*
14:34:43   5  Throws exceptions:
14:34:43   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43   8  */
14:34:43   9  	  in_offer_chain_id IN	 NUMBER,
14:34:43  10  	  out_result_set    OUT  SYS_REFCURSOR
14:34:43  11  );
14:34:43  12  
14:34:43  13  PROCEDURE GET_OFFER_CHAINS_BY_IDS (
14:34:43  14  /*
14:34:43  15  Throws exceptions:
14:34:43  16  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:43  17  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:43  18  */
14:34:43  19  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
14:34:43  20  	out_result_set	   OUT SYS_REFCURSOR
14:34:43  21  );
14:34:43  22  
14:34:43  23  PROCEDURE GET_OFFER_CHAINS_PRODUCTS (
14:34:43  24  /*
14:34:43  25  Throws exceptions:
14:34:43  26  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:43  27  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:43  28  */
14:34:43  29  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
14:34:43  30  	out_result_set	   OUT SYS_REFCURSOR
14:34:43  31  );
14:34:43  32  
14:34:43  33  PROCEDURE GET_OFFER_CHAINS_OFFERS (
14:34:43  34  /*
14:34:43  35  Throws exceptions:
14:34:43  36  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:43  37  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:43  38  */
14:34:43  39  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
14:34:43  40  	out_result_set	   OUT SYS_REFCURSOR
14:34:43  41  );
14:34:43  42  
14:34:43  43  PROCEDURE GET_OFFER_CHAINS_BY_PRODUCT (
14:34:43  44  /*
14:34:43  45  Throws exceptions (codes):
14:34:43  46  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  47  */
14:34:43  48  	in_product_id  IN  NUMBER,
14:34:43  49  	out_result_set OUT SYS_REFCURSOR
14:34:43  50  );
14:34:43  51  
14:34:43  52  PROCEDURE GET_OFFER_CHAIN_PRICE (
14:34:43  53  /*
14:34:43  54  Throws exceptions (codes):
14:34:43  55  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  56  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  57  */
14:34:43  58  	in_offer_chain_id IN NUMBER,
14:34:43  59  	out_price	  OUT NUMBER
14:34:43  60  );
14:34:43  61  
14:34:43  62  PROCEDURE GET_FIRST_OFFER(
14:34:43  63  /*
14:34:43  64  Throws exceptions (codes):
14:34:43  65  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  66  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  67  */
14:34:43  68  	in_offer_chain_id IN  NUMBER,
14:34:43  69  	out_offer_id	  OUT NUMBER
14:34:43  70  );
14:34:43  71  
14:34:43  72  PROCEDURE GET_ACTIVE_OFFER_CHAINS (
14:34:43  73  /*
14:34:43  74  Throws exceptions (codes):
14:34:43  75  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  76  */
14:34:43  77  	out_result_set OUT SYS_REFCURSOR
14:34:43  78  );
14:34:43  79  
14:34:43  80  PROCEDURE GET_OFFER_CHAIN_PRODUCTS (
14:34:43  81  /*
14:34:43  82  Throws exceptions (codes):
14:34:43  83  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  84  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  85  */
14:34:43  86  	in_offer_chain_id IN NUMBER,
14:34:43  87  	out_result_set	  OUT SYS_REFCURSOR
14:34:43  88  );
14:34:43  89  
14:34:43  90  FUNCTION CALCULATE_OFFER_CHAIN_END_DATE (
14:34:43  91  /*
14:34:43  92  Throws exceptions (codes):
14:34:43  93  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  94  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  95  */
14:34:43  96  	in_offer_chain_id	  IN NUMBER,
14:34:43  97  	in_offer_chain_start_date IN DATE
14:34:43  98  ) RETURN DATE;
14:34:43  99  
14:34:43 100  FUNCTION CALCULATE_OFFER_AMOUNT (
14:34:43 101  	in_offer_id IN NUMBER
14:34:43 102  ) RETURN NUMBER;
14:34:43 103  
14:34:43 104  FUNCTION CALCULATE_OFFER_CHAIN_AMOUNT (
14:34:43 105  	in_offer_chain_id IN NUMBER
14:34:43 106  ) RETURN NUMBER;
14:34:43 107  
14:34:43 108  FUNCTION GET_FIRST_OFFER_INDEX (
14:34:43 109  	in_offer_chain_id IN NUMBER
14:34:43 110  ) RETURN NUMBER;
14:34:43 111  
14:34:43 112  FUNCTION GET_NEXT_OFFER_INDEX (
14:34:43 113  /*
14:34:43 114  NULL, if not exists
14:34:43 115  */
14:34:43 116  	in_offer_chain_id	     IN NUMBER,
14:34:43 117  	in_offer_chain_current_index IN NUMBER
14:34:43 118  ) RETURN NUMBER;
14:34:43 119  
14:34:43 120  PROCEDURE P_GET_NEXT_OFFER_INDEX (
14:34:43 121  	in_offer_chain_id	     IN NUMBER,
14:34:43 122  	in_offer_chain_current_index IN NUMBER,
14:34:43 123  	out_next_offer_index	     OUT NUMBER
14:34:43 124  );
14:34:43 125  
14:34:43 126  PROCEDURE GET_NEXT_OFFER_INDEX_BY_LCNS (
14:34:43 127  	in_license_id		     IN NUMBER,
14:34:43 128  	in_offer_chain_current_index IN NUMBER,
14:34:43 129  	out_next_offer_index	     OUT NUMBER
14:34:43 130  );
14:34:43 131  
14:34:43 132  FUNCTION IS_OFFER_INDEX_EXISTS (
14:34:43 133  /*
14:34:43 134  1 - exists
14:34:43 135  0 - not exists
14:34:43 136  */
14:34:43 137  	in_offer_chain_id	   IN NUMBER,
14:34:43 138  	in_offer_chain_offer_index IN NUMBER
14:34:43 139  ) RETURN NUMBER;
14:34:43 140  
14:34:43 141  PROCEDURE GET_OFFER_LENGTH (
14:34:43 142  	in_offer_id IN NUMBER,
14:34:43 143  	out_years   OUT NUMBER,
14:34:43 144  	out_months  OUT NUMBER,
14:34:43 145  	out_days    OUT NUMBER
14:34:43 146  );
14:34:43 147  
14:34:43 148  PROCEDURE GET_OFFER_LENGTH_IN_DAYS (
14:34:43 149  	in_offer_id   IN NUMBER,
14:34:43 150  	in_start_date IN DATE DEFAULT SYSDATE,
14:34:43 151  	out_days      OUT NUMBER
14:34:43 152  );
14:34:43 153  
14:34:43 154  PROCEDURE GET_OFFER_PRODUCTS (
14:34:43 155  /*
14:34:43 156  Throws exceptions (codes):
14:34:43 157  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43 158  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 159  */
14:34:43 160  	in_offer_id    IN NUMBER,
14:34:43 161  	out_result_set OUT SYS_REFCURSOR
14:34:43 162  );
14:34:43 163  
14:34:43 164  PROCEDURE GET_OFFER_CHAIN_PROD_OFFERINGS (
14:34:43 165  /*
14:34:43 166  Throws exceptions (codes):
14:34:43 167  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43 168  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 169  */
14:34:43 170  	in_offer_chain_id IN NUMBER,
14:34:43 171  	out_result_set	  OUT SYS_REFCURSOR
14:34:43 172  );
14:34:43 173  
14:34:43 174  FUNCTION CHECK_FOR_SAME_PRODUCTS (
14:34:43 175  /*
14:34:43 176  Throws exceptions (codes):
14:34:43 177  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43 178  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 179  Returns:
14:34:43 180  GLOBAL_CONSTANTS_V18.TRUE if there are at least one same product
14:34:43 181  GLOBAL_CONSTANTS_V18.FALSE else
14:34:43 182  */
14:34:43 183  	in_offer_chain_1	 IN OFFER_CHAIN.ID%TYPE,
14:34:43 184  	in_offer_chain_2	 IN OFFER_CHAIN.ID%TYPE,
14:34:43 185  	in_use_eligibility_rules IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.FALSE
14:34:43 186  ) RETURN NUMBER;
14:34:43 187  
14:34:43 188  FUNCTION IS_OFFER_CHAIN_CANCELABLE (
14:34:43 189  /*
14:34:43 190  Throws exceptions (codes):
14:34:43 191  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 192  Returns:
14:34:43 193  GLOBAL_CONSTANTS_V18.TRUE cancelation key is 1 (in OFFER_CHAIN_META_DATA)
14:34:43 194  GLOBAL_CONSTANTS_V18.FALSE else
14:34:43 195  */
14:34:43 196  	in_offer_chain_id IN NUMBER
14:34:43 197  ) RETURN NUMBER;
14:34:43 198  
14:34:43 199  FUNCTION GET_OFFER_CHAIN_MAX_CONC_SUBSC (
14:34:43 200  /*
14:34:43 201  Throws exceptions (codes):
14:34:43 202  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 203  */
14:34:43 204  	in_offer_chain_id IN NUMBER
14:34:43 205  ) RETURN NUMBER;
14:34:43 206  
14:34:43 207  PROCEDURE GET_OFFER_CHAIN_ELIGIBILITY (
14:34:43 208  /*
14:34:43 209  Throws exceptions (codes):
14:34:43 210  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43 211  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 212  */
14:34:43 213  	in_offer_chain_id   IN NUMBER,
14:34:43 214  	in_eligibility_name IN VARCHAR2,
14:34:43 215  	out_result_set	    OUT SYS_REFCURSOR
14:34:43 216  );
14:34:43 217  
14:34:43 218  PROCEDURE GET_OFFER_CHAINS_ELIGIBILITY (
14:34:43 219  /*
14:34:43 220  Throws exceptions (codes):
14:34:43 221  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 222  */
14:34:43 223  	in_offer_chain_ids  IN VARCHAR2,
14:34:43 224  	in_eligibility_name IN VARCHAR2,
14:34:43 225  	out_result_set	    OUT SYS_REFCURSOR
14:34:43 226  );
14:34:43 227  
14:34:43 228  PROCEDURE GET_OFFER_CHAIN_META_DATA (
14:34:43 229  /*
14:34:43 230  Throws exceptions (codes):
14:34:43 231  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43 232  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 233  */
14:34:43 234  	in_offer_chain_id IN NUMBER,
14:34:43 235  	in_meta_data_name IN VARCHAR2,
14:34:43 236  	out_result_set	  OUT SYS_REFCURSOR
14:34:43 237  );
14:34:43 238  
14:34:43 239  PROCEDURE GET_OFFER_CHAINS_META_DATA (
14:34:43 240  /*
14:34:43 241  Throws exceptions (codes):
14:34:43 242  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 243  */
14:34:43 244  	in_offer_chain_ids IN VARCHAR2,
14:34:43 245  	in_meta_data_name  IN VARCHAR2,
14:34:43 246  	out_result_set	   OUT SYS_REFCURSOR
14:34:43 247  );
14:34:43 248  
14:34:43 249  PROCEDURE GET_PROD_OFFERINGS_BY_OFFER_ID (
14:34:43 250  /*
14:34:43 251  Throws exceptions (codes):
14:34:43 252  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43 253  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 254  */
14:34:43 255  	in_offer_id    IN NUMBER,
14:34:43 256  	out_result_set OUT SYS_REFCURSOR
14:34:43 257  );
14:34:43 258  
14:34:43 259  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
14:34:43 260  /*
14:34:43 261  Throws exceptions (codes):
14:34:43 262  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43 263  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 264  */
14:34:43 265  	in_product_offering_id IN NUMBER,
14:34:43 266  	in_meta_data_name      IN VARCHAR2 DEFAULT NULL,
14:34:43 267  	out_result_set	       OUT SYS_REFCURSOR
14:34:43 268  );
14:34:43 269  
14:34:43 270  PROCEDURE GET_OFF_CHAINS_SAME_PRODUCTS (
14:34:43 271  /*
14:34:43 272  Throws exceptions (codes):
14:34:43 273  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43 274  */
14:34:43 275  	in_offer_chain_1 IN NUMBER,
14:34:43 276  	in_offer_chain_2 IN NUMBER,
14:34:43 277  	out_result_set	OUT SYS_REFCURSOR
14:34:43 278  );
14:34:43 279  
14:34:43 280  PROCEDURE GET_OFFER_CHAIN_MD_VALUE (
14:34:43 281  	in_offer_chain_id IN NUMBER,
14:34:43 282  	in_meta_data_name IN VARCHAR2,
14:34:43 283  	out_value	  OUT VARCHAR2
14:34:43 284  );
14:34:43 285  
14:34:43 286  PROCEDURE GET_OFFER_CHAIN_EL_VALUE (
14:34:43 287  	in_offer_chain_id   IN NUMBER,
14:34:43 288  	in_eligibility_name IN VARCHAR2,
14:34:43 289  	out_value	    OUT VARCHAR2
14:34:43 290  );
14:34:43 291  
14:34:43 292  PROCEDURE GET_OFFER_PRODUCT_OFFERINGS (
14:34:43 293  	in_offer_id    IN NUMBER,
14:34:43 294  	out_result_set OUT SYS_REFCURSOR
14:34:43 295  );
14:34:43 296  
14:34:43 297  PROCEDURE GET_OFFER_CHAINS_BY_META_DATA (
14:34:43 298  	in_meta_data_name  IN VARCHAR2,
14:34:43 299  	in_meta_data_value IN VARCHAR2,
14:34:43 300  	out_result_set	   OUT SYS_REFCURSOR
14:34:43 301  );
14:34:43 302  
14:34:43 303  PROCEDURE GET_ALL_META_DATA (
14:34:43 304  	in_offer_chain_id IN NUMBER,
14:34:43 305  	out_result_set	  OUT SYS_REFCURSOR
14:34:43 306  );
14:34:43 307  
14:34:43 308  PROCEDURE CHECK_PRODUCT_ELIGIBILITY (
14:34:43 309  	in_group_id	  IN NUMBER,
14:34:43 310  	in_offer_chain_id IN NUMBER,
14:34:43 311  	out_is_eligible   OUT NUMBER,
14:34:43 312  	out_concurrent_subscription_id OUT NUMBER
14:34:43 313  );
14:34:43 314  
14:34:43 315  PROCEDURE GET_NOTIFICATION_TYPE_ID (
14:34:43 316  	in_offer_chain_id	 IN NUMBER,
14:34:43 317  	in_action_name		 IN VARCHAR2,
14:34:43 318  	out_notification_type_id OUT NUMBER
14:34:43 319  );
14:34:43 320  
14:34:43 321  END PROCS_OFFER_CHAIN_V18;
14:34:43 322  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.09
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE 		  "PROCS_POLLING_SYNC"
14:34:43   2  AS
14:34:43   3  
14:34:43   4  ----
14:34:43   5  --------------------------------------------------------------------------------
14:34:43   6  ----
14:34:43   7  	  /* Call the Gather Events on a timer. Pass in the timestamp
14:34:43   8  	      returned from the previous call and store the result for the
14:34:43   9  	      next call.
14:34:43  10  	     This method will identify and create new Sync Events from trigger activity data */
14:34:43  11  	  procedure GATHER_SYNC_EVENTS(in_last_timestamp timestamp, out_new_timestamp out timestamp);
14:34:43  12  ----
14:34:43  13  --------------------------------------------------------------------------------
14:34:43  14  ----
14:34:43  15  	  /* Internal logic call may need to be used to fix poller data */
14:34:43  16  	  procedure GATHER_SYNC_EVENTS_RANGE(in_start_ts timestamp, in_end_ts timestamp, in_offset number);
14:34:43  17  ----
14:34:43  18  --------------------------------------------------------------------------------
14:34:43  19  ----
14:34:43  20  	  /* User request for sync events. Params should be hard-coded in the application
14:34:43  21  	      layer. Unconfirmed transfer sets will be resent up to maximum before being
14:34:43  22  	      skipped. Last read time is logged.
14:34:43  23  	     Params:
14:34:43  24  		  set_maximum: Size of each transfer set
14:34:43  25  		  max_retries: Number of times to resend unconfirmed sets before skipping
14:34:43  26  	     Returns:
14:34:43  27  		  set_id: Transfer set id, duplicated for all entries
14:34:43  28  		  group_id: regi_id value
14:34:43  29  		  event_type: Financial (I)nstrument, (S)ubscription, (G)ift Cert
14:34:43  30  	  */
14:34:43  31  	  procedure GET_TRANSFER_SET(in_set_maximum number, in_max_retries number, out_refcursor out sys_refcursor);
14:34:43  32  ----
14:34:43  33  --------------------------------------------------------------------------------
14:34:43  34  ----
14:34:43  35  	  /* Confirmation from user of receipt of sync transfer set. Will only allow a
14:34:43  36  	      single confirmation per transfer set.
14:34:43  37  	  */
14:34:43  38  	  procedure CONFIRM_TRANSFER_SET(in_set_id core_owner.polling_sync.set_id%type);
14:34:43  39  ----
14:34:43  40  --------------------------------------------------------------------------------
14:34:43  41  ----
14:34:43  42  	  procedure SET_LAST_RUN(ts in timestamp);
14:34:43  43  	  procedure GET_LAST_RUN(ts out timestamp);
14:34:43  44  END PROCS_POLLING_SYNC;
14:34:43  45  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.06
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_PROCESS_RETRY_THROTTLE
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_PROCESS_RETRY_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE LOG_RETRY(
14:34:43   4  	  in_process_name IN VARCHAR2,
14:34:43   5  	  in_generic_id   IN NUMBER,
14:34:43   6  	  in_date	  IN VARCHAR2,
14:34:43   7  	  out_success	   OUT NUMBER
14:34:43   8  );
14:34:43   9  
14:34:43  10  PROCEDURE LOG_RETRY_DATE(
14:34:43  11  	  in_process_name IN VARCHAR2,
14:34:43  12  	  in_generic_id   IN NUMBER,
14:34:43  13  	  in_date	  IN DATE,
14:34:43  14  	  out_success	   OUT NUMBER
14:34:43  15  );
14:34:43  16  
14:34:43  17  PROCEDURE DELETE_RETRY(
14:34:43  18  	  in_process_name IN VARCHAR2,
14:34:43  19  	  in_remove_minutes  IN NUMBER
14:34:43  20  );
14:34:43  21  
14:34:43  22  PROCEDURE GET_SYSDATE (
14:34:43  23  	  out_date OUT VARCHAR2
14:34:43  24  );
14:34:43  25  
14:34:43  26  END PROCS_PROCESS_RETRY_V18;
14:34:43  27  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.01
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_PRODUCT
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_PRODUCT_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE GET_PRODUCTS (
14:34:43   4  /*
14:34:43   5  Throws exceptions:
14:34:43   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43   7  */
14:34:43   8  	in_status_id   IN  NUMBER,
14:34:43   9  	out_result_set OUT SYS_REFCURSOR
14:34:43  10  );
14:34:43  11  
14:34:43  12  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
14:34:43  13  /*
14:34:43  14  Throws exceptions:
14:34:43  15  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  16  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  17  */
14:34:43  18  	in_product_offering_id	IN NUMBER,
14:34:43  19  	out_result_set OUT SYS_REFCURSOR
14:34:43  20  );
14:34:43  21  
14:34:43  22  PROCEDURE GET_PRODUCT_ELIGIBIL_BY_NAME (
14:34:43  23  /*
14:34:43  24  Throws exceptions:
14:34:43  25  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:43  26  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:43  27  */
14:34:43  28  	in_product_id	    IN NUMBER,
14:34:43  29  	in_eligibility_name IN VARCHAR2 DEFAULT NULL,
14:34:43  30  	out_result_set	    OUT SYS_REFCURSOR
14:34:43  31  );
14:34:43  32  
14:34:43  33  PROCEDURE GET_PRODUCT_BY_ID (
14:34:43  34  	in_product_id  IN NUMBER,
14:34:43  35  	out_result_set OUT SYS_REFCURSOR
14:34:43  36  );
14:34:43  37  
14:34:43  38  PROCEDURE GET_PRD_OFFERING_BY_LINE_IT_ID (
14:34:43  39  	in_line_item_id IN NUMBER,
14:34:43  40  	out_result_set	OUT SYS_REFCURSOR
14:34:43  41  );
14:34:43  42  
14:34:43  43  PROCEDURE GET_PRD_OFFERING_BY_ID (
14:34:43  44  	in_product_offering_id IN NUMBER,
14:34:43  45  	out_result_set	OUT SYS_REFCURSOR
14:34:43  46  );
14:34:43  47  
14:34:43  48  PROCEDURE GET_PRODUCT_OFFERING_DISCOUNTS(
14:34:43  49  	in_product_offering_id IN NUMBER,
14:34:43  50  	out_result_set	       OUT SYS_REFCURSOR
14:34:43  51  );
14:34:43  52  
14:34:43  53  END PROCS_PRODUCT_V18;
14:34:43  54  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.02
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_RECONCILIATION_CRU
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_RECONCILIATION_CRU_V18" AS
14:34:43   2  
14:34:43   3  PROCEDURE CREATE_CPT_CHARGEBACK_ACT (
14:34:43   4  	out_cpt_chargeback_act_id   OUT RCN_CPT_CHARGEBACK_ACT_DETAIL.ID%TYPE,
14:34:43   5  	in_cpt_chargeback_act_id    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ID%TYPE DEFAULT NULL,
14:34:43   6  	in_ext_source_log_id	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:43   7  	in_record_type		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.RECORD_TYPE%TYPE,
14:34:43   8  	in_entity_type		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ENTITY_TYPE%TYPE,
14:34:43   9  	in_entity_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ENTITY_NUMBER%TYPE,
14:34:43  10  	in_chargeback_amount_issuer IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_AMOUNT_ISSUER%TYPE,
14:34:43  11  	in_prev_partial_repres	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.PREV_PARTIAL_REPRESENTMENT%TYPE,
14:34:43  12  	in_presentment_currency     IN RCN_CPT_CHARGEBACK_ACT_DETAIL.PRESENTMENT_CURRENCY%TYPE,
14:34:43  13  	in_chargeback_category	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_CATEGORY%TYPE,
14:34:43  14  	in_status_flag		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.STATUS_FLAG%TYPE,
14:34:43  15  	in_sequence_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.SEQUENCE_NUMBER%TYPE,
14:34:43  16  	in_merchant_order_number    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
14:34:43  17  	in_account_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ACCOUNT_NUMBER%TYPE,
14:34:43  18  	in_reason_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.REASON_CODE%TYPE,
14:34:43  19  	in_transaction_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.TRANSACTION_DATE%TYPE,
14:34:43  20  	in_chargeback_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_DATE%TYPE,
14:34:43  21  	in_activity_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ACTIVITY_DATE%TYPE,
14:34:43  22  	in_chargeback_amount_action IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_AMOUNT_ACTION%TYPE,
14:34:43  23  	in_fee_amount		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.FEE_AMOUNT%TYPE,
14:34:43  24  	in_usage_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.USAGE_CODE%TYPE,
14:34:43  25  	in_mop_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.MOP_CODE%TYPE,
14:34:43  26  	in_authorization_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.AUTHORIZATION_DATE%TYPE,
14:34:43  27  	in_chargeback_due_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_DUE_DATE%TYPE,
14:34:43  28  	in_created_by		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CREATED_BY%TYPE
14:34:43  29  );
14:34:43  30  
14:34:43  31  PROCEDURE CREATE_EXT_SOURCE_LOG (
14:34:43  32  	out_ext_source_log_id	    OUT RCN_EXT_SOURCE_LOG.ID%TYPE,
14:34:43  33  	in_ext_source_log_id	    IN RCN_EXT_SOURCE_LOG.ID%TYPE DEFAULT NULL,
14:34:43  34  	in_extraction_timestamp     IN RCN_EXT_SOURCE_LOG.EXTRACTION_TIMESTAMP%TYPE,
14:34:43  35  	in_report_date		    IN RCN_EXT_SOURCE_LOG.REPORT_DATE%TYPE,
14:34:43  36  	in_report_gen_datetime	    IN RCN_EXT_SOURCE_LOG.REPORT_GENERATION_DATETIME%TYPE,
14:34:43  37  	in_record_type		    IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
14:34:43  38  	in_report_file_name	    IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE,
14:34:43  39  	in_created_by		    IN RCN_EXT_SOURCE_LOG.CREATED_BY%TYPE
14:34:43  40  );
14:34:43  41  
14:34:43  42  PROCEDURE CREATE_CPT_SERVICE_CHARGE (
14:34:43  43  	out_cpt_service_charge_id   OUT RCN_CPT_SERVICE_CHARGE_DETAIL.ID%TYPE,
14:34:43  44  	in_cpt_service_charge_id    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ID%TYPE DEFAULT NULL,
14:34:43  45  	in_ext_source_log_id	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:43  46  	in_record_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.RECORD_TYPE%TYPE,
14:34:43  47  	in_category		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.CATEGORY%TYPE,
14:34:43  48  	in_sub_category 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SUB_CATEGORY%TYPE,
14:34:43  49  	in_entity_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ENTITY_TYPE%TYPE,
14:34:43  50  	in_entity_number	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ENTITY_NUMBER%TYPE,
14:34:43  51  	in_funds_trans_inst_number  IN RCN_CPT_SERVICE_CHARGE_DETAIL.FUNDS_TRANSFER_INST_NUMBER%TYPE,
14:34:43  52  	in_secure_ba_number	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SECURE_BA_NUMBER%TYPE,
14:34:43  53  	in_settlement_currency	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SETTLEMENT_CURRENCY%TYPE,
14:34:43  54  	in_fee_schedule 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.FEE_SCHEDULE%TYPE,
14:34:43  55  	in_mop			    IN RCN_CPT_SERVICE_CHARGE_DETAIL.MOP%TYPE,
14:34:43  56  	in_interchange_qual	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.INTERCHANGE_QUALIFICATION%TYPE,
14:34:43  57  	in_fee_type_description     IN RCN_CPT_SERVICE_CHARGE_DETAIL.FEE_TYPE_DESCRIPTION%TYPE,
14:34:43  58  	in_action_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ACTION_TYPE%TYPE,
14:34:43  59  	in_unit_quantity	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.UNIT_QUANTITY%TYPE,
14:34:43  60  	in_unit_fee		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.UNIT_FEE%TYPE,
14:34:43  61  	in_amount		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.AMOUNT%TYPE,
14:34:43  62  	in_percentage_rate	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.PERCENTAGE_RATE%TYPE,
14:34:43  63  	in_total_charge 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.TOTAL_CHARGE%TYPE,
14:34:43  64  	in_created_by		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.CREATED_BY%TYPE
14:34:43  65  );
14:34:43  66  
14:34:43  67  PROCEDURE CREATE_CPT_EXCEPTION (
14:34:43  68  	out_cpt_exception_id	 OUT RCN_CPT_EXCEPTION_DETAIL.ID%TYPE,
14:34:43  69  	in_cpt_exception_id	 IN RCN_CPT_EXCEPTION_DETAIL.ID%TYPE DEFAULT NULL,
14:34:43  70  	in_ext_source_log_id	 IN RCN_CPT_EXCEPTION_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:43  71  	in_record_type		 IN RCN_CPT_EXCEPTION_DETAIL.RECORD_TYPE%TYPE,
14:34:43  72  	in_submission_date	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_DATE%TYPE,
14:34:43  73  	in_pid_number		 IN RCN_CPT_EXCEPTION_DETAIL.PID_NUMBER%TYPE,
14:34:43  74  	in_pid_short_name	 IN RCN_CPT_EXCEPTION_DETAIL.PID_SHORT_NAME%TYPE,
14:34:43  75  	in_submission_number	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_NUMBER%TYPE,
14:34:43  76  	in_record_number	 IN RCN_CPT_EXCEPTION_DETAIL.RECORD_NUMBER%TYPE,
14:34:43  77  	in_entity_type		 IN RCN_CPT_EXCEPTION_DETAIL.ENTITY_TYPE%TYPE,
14:34:43  78  	in_entity_number	 IN RCN_CPT_EXCEPTION_DETAIL.ENTITY_NUMBER%TYPE,
14:34:43  79  	in_presentment_currency  IN RCN_CPT_EXCEPTION_DETAIL.PRESENTMENT_CURRENCY%TYPE,
14:34:43  80  	in_merchant_order_number IN RCN_CPT_EXCEPTION_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
14:34:43  81  	in_rdfi_number		 IN RCN_CPT_EXCEPTION_DETAIL.RDFI_NUMBER%TYPE,
14:34:43  82  	in_account_number	 IN RCN_CPT_EXCEPTION_DETAIL.ACCOUNT_NUMBER%TYPE,
14:34:43  83  	in_expiration_date	 IN RCN_CPT_EXCEPTION_DETAIL.EXPIRATION_DATE%TYPE,
14:34:43  84  	in_amount		 IN RCN_CPT_EXCEPTION_DETAIL.AMOUNT%TYPE,
14:34:43  85  	in_mop			 IN RCN_CPT_EXCEPTION_DETAIL.MOP%TYPE,
14:34:43  86  	in_action_code		 IN RCN_CPT_EXCEPTION_DETAIL.ACTION_CODE%TYPE,
14:34:43  87  	in_auth_date		 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_DATE%TYPE,
14:34:43  88  	in_auth_code		 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_CODE%TYPE,
14:34:43  89  	in_auth_response_code	 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_RESPONSE_CODE%TYPE,
14:34:43  90  	in_trace_number 	 IN RCN_CPT_EXCEPTION_DETAIL.TRACE_NUMBER%TYPE,
14:34:43  91  	in_consumer_country_code IN RCN_CPT_EXCEPTION_DETAIL.CONSUMER_COUNTRY_CODE%TYPE,
14:34:43  92  	in_category		 IN RCN_CPT_EXCEPTION_DETAIL.CATEGORY%TYPE,
14:34:43  93  	in_mcc			 IN RCN_CPT_EXCEPTION_DETAIL.MCC%TYPE,
14:34:43  94  	in_reject_code		 IN RCN_CPT_EXCEPTION_DETAIL.REJECT_CODE%TYPE,
14:34:43  95  	in_submission_status	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_STATUS%TYPE,
14:34:43  96  	in_created_by		 IN RCN_CPT_EXCEPTION_DETAIL.CREATED_BY%TYPE
14:34:43  97  );
14:34:43  98  
14:34:43  99  PROCEDURE CREATE_CPT_DEPOSIT (
14:34:43 100  	out_cpt_deposit_id	  OUT RCN_CPT_DEPOSIT_DETAIL.ID%TYPE,
14:34:43 101  	in_cpt_deposit_id	  IN RCN_CPT_DEPOSIT_DETAIL.ID%TYPE DEFAULT NULL,
14:34:43 102  	in_ext_source_log_id	  IN RCN_CPT_DEPOSIT_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:43 103  	in_record_type		  IN RCN_CPT_DEPOSIT_DETAIL.RECORD_TYPE%TYPE,
14:34:43 104  	in_submission_date	  IN RCN_CPT_DEPOSIT_DETAIL.SUBMISSION_DATE%TYPE,
14:34:43 105  	in_pid_number		  IN RCN_CPT_DEPOSIT_DETAIL.PID_NUMBER%TYPE,
14:34:43 106  	in_pid_short_name	  IN RCN_CPT_DEPOSIT_DETAIL.PID_SHORT_NAME%TYPE,
14:34:43 107  	in_submission_number	  IN RCN_CPT_DEPOSIT_DETAIL.SUBMISSION_NUMBER%TYPE,
14:34:43 108  	in_record_number	  IN RCN_CPT_DEPOSIT_DETAIL.RECORD_NUMBER%TYPE,
14:34:43 109  	in_entity_type		  IN RCN_CPT_DEPOSIT_DETAIL.ENTITY_TYPE%TYPE,
14:34:43 110  	in_entity_number	  IN RCN_CPT_DEPOSIT_DETAIL.ENTITY_NUMBER%TYPE,
14:34:43 111  	in_presentment_currency   IN RCN_CPT_DEPOSIT_DETAIL.PRESENTMENT_CURRENCY%TYPE,
14:34:43 112  	in_merchant_order_number  IN RCN_CPT_DEPOSIT_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
14:34:43 113  	in_rdfi_number		  IN RCN_CPT_DEPOSIT_DETAIL.RDFI_NUMBER%TYPE,
14:34:43 114  	in_account_number	  IN RCN_CPT_DEPOSIT_DETAIL.ACCOUNT_NUMBER%TYPE,
14:34:43 115  	in_expiration_date	  IN RCN_CPT_DEPOSIT_DETAIL.EXPIRATION_DATE%TYPE,
14:34:43 116  	in_amount		  IN RCN_CPT_DEPOSIT_DETAIL.AMOUNT%TYPE,
14:34:43 117  	in_mop			  IN RCN_CPT_DEPOSIT_DETAIL.MOP%TYPE,
14:34:43 118  	in_action_code		  IN RCN_CPT_DEPOSIT_DETAIL.ACTION_CODE%TYPE,
14:34:43 119  	in_auth_date		  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_DATE%TYPE,
14:34:43 120  	in_auth_code		  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_CODE%TYPE,
14:34:43 121  	in_auth_response_code	  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_RESPONSE_CODE%TYPE,
14:34:43 122  	in_trace_number 	  IN RCN_CPT_DEPOSIT_DETAIL.TRACE_NUMBER%TYPE,
14:34:43 123  	in_consumer_country_code  IN RCN_CPT_DEPOSIT_DETAIL.CONSUMER_COUNTRY_CODE%TYPE,
14:34:43 124  	in_mcc			  IN RCN_CPT_DEPOSIT_DETAIL.MCC%TYPE,
14:34:43 125  	in_fee_code		  IN RCN_CPT_DEPOSIT_DETAIL.FEE_CODE%TYPE,
14:34:43 126  	in_unit_fee		  IN RCN_CPT_DEPOSIT_DETAIL.UNIT_FEE%TYPE,
14:34:43 127  	in_percent_fee		  IN RCN_CPT_DEPOSIT_DETAIL.PERCENT_FEE%TYPE,
14:34:43 128  	in_total_interchange_fee  IN RCN_CPT_DEPOSIT_DETAIL.TOTAL_INTERCHANGE_FEE%TYPE,
14:34:43 129  	in_total_assessment_fee   IN RCN_CPT_DEPOSIT_DETAIL.TOTAL_ASSESSMENT_FEE%TYPE,
14:34:43 130  	in_other_fee		  IN RCN_CPT_DEPOSIT_DETAIL.OTHER_FEE%TYPE,
14:34:43 131  	in_created_by		  IN RCN_CPT_DEPOSIT_DETAIL.CREATED_BY%TYPE
14:34:43 132  );
14:34:43 133  
14:34:43 134  PROCEDURE CREATE_PP_SETTLEMENT (
14:34:43 135  	out_pp_settlement_id	   OUT RCN_PP_SETTLEMENT.ID%TYPE,
14:34:43 136  	in_pp_settlement_id	   IN RCN_PP_SETTLEMENT.ID%TYPE DEFAULT NULL,
14:34:43 137  	in_ext_source_log_id	   IN RCN_PP_SETTLEMENT.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:43 138  	in_transaction_id	   IN RCN_PP_SETTLEMENT.TRANSACTION_ID%TYPE,
14:34:43 139  	in_invoice_id		   IN RCN_PP_SETTLEMENT.INVOICE_ID%TYPE,
14:34:43 140  	in_pp_ref_id		   IN RCN_PP_SETTLEMENT.PP_REF_ID%TYPE,
14:34:43 141  	in_pp_ref_id_type	   IN RCN_PP_SETTLEMENT.PP_REF_ID_TYPE%TYPE,
14:34:43 142  	in_trans_event_code	   IN RCN_PP_SETTLEMENT.TRANS_EVENT_CODE%TYPE,
14:34:43 143  	in_trans_init_date	   IN RCN_PP_SETTLEMENT.TRANS_INIT_DATE%TYPE,
14:34:43 144  	in_trans_comp_date	   IN RCN_PP_SETTLEMENT.TRANS_COMP_DATE%TYPE,
14:34:43 145  	in_trans_deb_or_cred	   IN RCN_PP_SETTLEMENT.TRANS_DEB_OR_CRED%TYPE,
14:34:43 146  	in_gross_trans_amount	   IN RCN_PP_SETTLEMENT.GROSS_TRANS_AMOUNT%TYPE,
14:34:43 147  	in_gross_trans_currency    IN RCN_PP_SETTLEMENT.GROSS_TRANS_CURRENCY%TYPE,
14:34:43 148  	in_fee_deb_or_cred	   IN RCN_PP_SETTLEMENT.FEE_DEB_OR_CRED%TYPE,
14:34:43 149  	in_fee_amount		   IN RCN_PP_SETTLEMENT.FEE_AMOUNT%TYPE,
14:34:43 150  	in_fee_currency 	   IN RCN_PP_SETTLEMENT.FEE_CURRENCY%TYPE,
14:34:43 151  	in_custom_field 	   IN RCN_PP_SETTLEMENT.CUSTOM_FIELD%TYPE,
14:34:43 152  	in_created_by		   IN RCN_PP_SETTLEMENT.CREATED_BY%TYPE
14:34:43 153  );
14:34:43 154  
14:34:43 155  PROCEDURE CREATE_PP_DISPUTE (
14:34:43 156  	out_pp_dispute_id	     OUT RCN_PP_DISPUTE.ID%TYPE,
14:34:43 157  	in_pp_dispute_id	     IN RCN_PP_DISPUTE.ID%TYPE DEFAULT NULL,
14:34:43 158  	in_ext_source_log_id	     IN RCN_PP_DISPUTE.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:43 159  	in_dispute_type 	     IN RCN_PP_DISPUTE.DISPUTE_TYPE%TYPE,
14:34:43 160  	in_claimant_name	     IN RCN_PP_DISPUTE.CLAIMANT_NAME%TYPE,
14:34:43 161  	in_claimant_email	     IN RCN_PP_DISPUTE.CLAIMANT_EMAIL%TYPE,
14:34:43 162  	in_transaction_id	     IN RCN_PP_DISPUTE.TRANSACTION_ID%TYPE,
14:34:43 163  	in_trans_date		     IN RCN_PP_DISPUTE.TRANS_DATE%TYPE,
14:34:43 164  	in_disputed_amount	     IN RCN_PP_DISPUTE.DISPUTED_AMOUNT%TYPE,
14:34:43 165  	in_disputed_amount_currency  IN RCN_PP_DISPUTE.DISPUTED_AMOUNT_CURRENCY%TYPE,
14:34:43 166  	in_dispute_reason	     IN RCN_PP_DISPUTE.DISPUTE_REASON%TYPE,
14:34:43 167  	in_dispute_filing_date	     IN RCN_PP_DISPUTE.DISPUTE_FILING_DATE%TYPE,
14:34:43 168  	in_dispute_status	     IN RCN_PP_DISPUTE.DISPUTE_STATUS%TYPE,
14:34:43 169  	in_dispute_case_id	     IN RCN_PP_DISPUTE.DISPUTE_CASE_ID%TYPE,
14:34:43 170  	in_invoice_id		     IN RCN_PP_DISPUTE.INVOICE_ID%TYPE,
14:34:43 171  	in_created_by		     IN RCN_PP_DISPUTE.CREATED_BY%TYPE
14:34:43 172  );
14:34:43 173  
14:34:43 174  PROCEDURE CREATE_PP_TRANS_DETAIL (
14:34:43 175  	out_pp_trans_detail_id	     OUT RCN_PP_TRANS_DETAIL.ID%TYPE,
14:34:43 176  	in_pp_trans_detail_id	     IN RCN_PP_TRANS_DETAIL.ID%TYPE DEFAULT NULL,
14:34:43 177  	in_ext_source_log_id	     IN RCN_PP_TRANS_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:43 178  	in_invoice_id		     IN RCN_PP_TRANS_DETAIL.INVOICE_ID%TYPE,
14:34:43 179  	in_transaction_id	     IN RCN_PP_TRANS_DETAIL.TRANSACTION_ID%TYPE,
14:34:43 180  	in_pp_ref_id		     IN RCN_PP_TRANS_DETAIL.PP_REF_ID%TYPE,
14:34:43 181  	in_trans_deb_or_cred	     IN RCN_PP_TRANS_DETAIL.TRANS_DEB_OR_CRED%TYPE,
14:34:43 182  	in_trans_init_date	     IN RCN_PP_TRANS_DETAIL.TRANS_INIT_DATE%TYPE,
14:34:43 183  	in_trans_comp_date	     IN RCN_PP_TRANS_DETAIL.TRANS_COMP_DATE%TYPE,
14:34:43 184  	in_gross_trans_amount	     IN RCN_PP_TRANS_DETAIL.GROSS_TRANS_AMOUNT%TYPE,
14:34:43 185  	in_gross_trans_currency      IN RCN_PP_TRANS_DETAIL.GROSS_TRANS_CURRENCY%TYPE,
14:34:43 186  	in_fee_amount		     IN RCN_PP_TRANS_DETAIL.FEE_AMOUNT%TYPE,
14:34:43 187  	in_fee_currency 	     IN RCN_PP_TRANS_DETAIL.FEE_CURRENCY%TYPE,
14:34:43 188  	in_fee_deb_or_cred	     IN RCN_PP_TRANS_DETAIL.FEE_DEB_OR_CRED%TYPE,
14:34:43 189  	in_trans_event_code	     IN RCN_PP_TRANS_DETAIL.TRANS_EVENT_CODE%TYPE,
14:34:43 190  	in_trans_status 	     IN RCN_PP_TRANS_DETAIL.TRANS_STATUS%TYPE,
14:34:43 191  	in_insurance_amount	     IN RCN_PP_TRANS_DETAIL.INSURANCE_AMOUNT%TYPE,
14:34:43 192  	in_sales_tax_amount	     IN RCN_PP_TRANS_DETAIL.SALES_TAX_AMOUNT%TYPE,
14:34:43 193  	in_shipping_amount	     IN RCN_PP_TRANS_DETAIL.SHIPPING_AMOUNT%TYPE,
14:34:43 194  	in_trans_subject	     IN RCN_PP_TRANS_DETAIL.TRANS_SUBJECT%TYPE,
14:34:43 195  	in_trans_note		     IN RCN_PP_TRANS_DETAIL.TRANS_NOTE%TYPE,
14:34:43 196  	in_payer_acct_id	     IN RCN_PP_TRANS_DETAIL.PAYER_ACCT_ID%TYPE,
14:34:43 197  	in_payer_addr_status	     IN RCN_PP_TRANS_DETAIL.PAYER_ADDR_STATUS%TYPE,
14:34:43 198  	in_item_name		     IN RCN_PP_TRANS_DETAIL.ITEM_NAME%TYPE,
14:34:43 199  	in_item_id		     IN RCN_PP_TRANS_DETAIL.ITEM_ID%TYPE,
14:34:43 200  	in_option_1_name	     IN RCN_PP_TRANS_DETAIL.OPTION_1_NAME%TYPE,
14:34:43 201  	in_option_1_value	     IN RCN_PP_TRANS_DETAIL.OPTION_1_VALUE%TYPE,
14:34:43 202  	in_option_2_name	     IN RCN_PP_TRANS_DETAIL.OPTION_2_NAME%TYPE,
14:34:43 203  	in_option_2_value	     IN RCN_PP_TRANS_DETAIL.OPTION_2_VALUE%TYPE,
14:34:43 204  	in_auction_site 	     IN RCN_PP_TRANS_DETAIL.AUCTION_SITE%TYPE,
14:34:43 205  	in_auction_buyer_id	     IN RCN_PP_TRANS_DETAIL.AUCTION_BUYER_ID%TYPE,
14:34:43 206  	in_auction_closing_date      IN RCN_PP_TRANS_DETAIL.AUCTION_CLOSING_DATE%TYPE,
14:34:43 207  	in_shipping_addr_line_1      IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_LINE_1%TYPE,
14:34:43 208  	in_shipping_addr_line_2      IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_LINE_2%TYPE,
14:34:43 209  	in_shipping_addr_city	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_CITY%TYPE,
14:34:43 210  	in_shipping_addr_state	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_STATE%TYPE,
14:34:43 211  	in_shipping_addr_zip	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_ZIP%TYPE,
14:34:43 212  	in_shipping_addr_country     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_COUNTRY%TYPE,
14:34:43 213  	in_custom_field 	     IN RCN_PP_TRANS_DETAIL.CUSTOM_FIELD%TYPE,
14:34:43 214  	in_created_by		     IN RCN_PP_TRANS_DETAIL.CREATED_BY%TYPE
14:34:43 215  );
14:34:43 216  
14:34:43 217  PROCEDURE GET_EXT_SOURCE_LOG (
14:34:43 218  	in_record_type		 IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
14:34:43 219  	in_report_file_name	 IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE,
14:34:43 220  	out_result_set		 OUT SYS_REFCURSOR
14:34:43 221  );
14:34:43 222  
14:34:43 223  FUNCTION CHECK_EXT_SOURCE_LOG (
14:34:43 224  	in_record_type		 IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
14:34:43 225  	in_report_file_name	 IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE
14:34:43 226  ) RETURN NUMBER;
14:34:43 227  
14:34:43 228  PROCEDURE CREATE_AMEX_CHARGEBACK (
14:34:43 229  	  in_rcn_ext_source_log_id IN RCN_EXT_SOURCE_LOG.ID%TYPE,
14:34:43 230  	  in_resolution IN RCN_AMEX_CHARGEBACK.RESOLUTION%TYPE,
14:34:43 231  	  in_from_system IN RCN_AMEX_CHARGEBACK.FROM_SYSTEM%TYPE,
14:34:43 232  	  in_rejects_to_system IN RCN_AMEX_CHARGEBACK.REJECTS_TO_SYSTEM%TYPE,
14:34:43 233  	  in_disputes_to_system IN RCN_AMEX_CHARGEBACK.DISPUTES_TO_SYSTEM%TYPE,
14:34:43 234  	  in_date_of_adjustment IN RCN_AMEX_CHARGEBACK.DATE_OF_ADJUSTMENT%TYPE,
14:34:43 235  	  in_date_of_charge IN RCN_AMEX_CHARGEBACK.DATE_OF_CHARGE%TYPE,
14:34:43 236  	  in_case_type IN RCN_AMEX_CHARGEBACK.CASE_TYPE%TYPE,
14:34:43 237  	  in_cb_reas_code IN RCN_AMEX_CHARGEBACK.CB_REAS_CODE%TYPE,
14:34:43 238  	  in_cb_amount IN RCN_AMEX_CHARGEBACK.CB_AMOUNT%TYPE,
14:34:43 239  	  in_cb_adjustment_number IN RCN_AMEX_CHARGEBACK.CB_ADJUSTMENT_NUMBER%TYPE,
14:34:43 240  	  in_billed_amount IN RCN_AMEX_CHARGEBACK.BILLED_AMOUNT%TYPE,
14:34:43 241  	  in_soc_amount IN RCN_AMEX_CHARGEBACK.SOC_AMOUNT%TYPE,
14:34:43 242  	  in_foreign_amount IN RCN_AMEX_CHARGEBACK.FOREIGN_AMOUNT%TYPE,
14:34:43 243  	  in_currency IN RCN_AMEX_CHARGEBACK.CURRENCY%TYPE,
14:34:43 244  	  in_note1 IN RCN_AMEX_CHARGEBACK.NOTE1%TYPE,
14:34:43 245  	  in_note2 IN RCN_AMEX_CHARGEBACK.NOTE2%TYPE,
14:34:43 246  	  in_note3 IN RCN_AMEX_CHARGEBACK.NOTE3%TYPE,
14:34:43 247  	  in_note4 IN RCN_AMEX_CHARGEBACK.NOTE4%TYPE,
14:34:43 248  	  in_note5 IN RCN_AMEX_CHARGEBACK.NOTE5%TYPE,
14:34:43 249  	  in_note6 IN RCN_AMEX_CHARGEBACK.NOTE6%TYPE,
14:34:43 250  	  in_note7 IN RCN_AMEX_CHARGEBACK.NOTE7%TYPE,
14:34:43 251  	  in_ind_ref_number IN RCN_AMEX_CHARGEBACK.IND_REF_NUMBER%TYPE,
14:34:43 252  	  in_created_by IN RCN_AMEX_CHARGEBACK.CREATED_BY%TYPE
14:34:43 253  );
14:34:43 254  
14:34:43 255  END PROCS_RECONCILIATION_CRU_V18;
14:34:43 256  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.20
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "CORE_OWNER"."PROCS_REPORTING" AS
14:34:43   2  
14:34:43   3  ----
14:34:43   4  --------------------------------------------------------------------------------
14:34:43   5  ----
14:34:43   6  	  procedure ext_charge(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43   7  ----
14:34:43   8  --------------------------------------------------------------------------------
14:34:43   9  ----
14:34:43  10  	  procedure ext_license(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  11  ----
14:34:43  12  --------------------------------------------------------------------------------
14:34:43  13  ----
14:34:43  14  	  procedure ext_invoice(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  15  ----
14:34:43  16  --------------------------------------------------------------------------------
14:34:43  17  ----
14:34:43  18  	  procedure ext_line_item(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  19  ----
14:34:43  20  --------------------------------------------------------------------------------
14:34:43  21  ----
14:34:43  22  	  procedure ext_account(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  23  ----
14:34:43  24  --------------------------------------------------------------------------------
14:34:43  25  ----
14:34:43  26  	  procedure ext_subscription(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  27  ----
14:34:43  28  --------------------------------------------------------------------------------
14:34:43  29  ----
14:34:43  30  	  procedure ext_transaction(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  31  ----
14:34:43  32  --------------------------------------------------------------------------------
14:34:43  33  ----
14:34:43  34  	  procedure ext_offer_chain(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  35  ----
14:34:43  36  --------------------------------------------------------------------------------
14:34:43  37  ----
14:34:43  38  	  procedure ext_offer_offer_chain(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  39  ----
14:34:43  40  --------------------------------------------------------------------------------
14:34:43  41  ----
14:34:43  42  	  procedure ext_offer(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  43  ----
14:34:43  44  --------------------------------------------------------------------------------
14:34:43  45  ----
14:34:43  46  	  procedure ext_gift_certificate(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  47  ----
14:34:43  48  --------------------------------------------------------------------------------
14:34:43  49  ----
14:34:43  50  	  procedure ext_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  51  ----
14:34:43  52  --------------------------------------------------------------------------------
14:34:43  53  ----
14:34:43  54  	  procedure ext_product(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  55  ----
14:34:43  56  --------------------------------------------------------------------------------
14:34:43  57  ----
14:34:43  58  	  procedure ext_offer_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  59  ----
14:34:43  60  --------------------------------------------------------------------------------
14:34:43  61  ----
14:34:43  62  	  procedure ext_discount_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  63  ----
14:34:43  64  --------------------------------------------------------------------------------
14:34:43  65  ----
14:34:43  66  	  procedure ext_discount(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  67  ----
14:34:43  68  --------------------------------------------------------------------------------
14:34:43  69  ----
14:34:43  70  	  procedure ext_offer_chain_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  71  ----
14:34:43  72  --------------------------------------------------------------------------------
14:34:43  73  ----
14:34:43  74  	  procedure ext_product_offering_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  75  ----
14:34:43  76  --------------------------------------------------------------------------------
14:34:43  77  ----
14:34:43  78  	  procedure ext_subscription_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  79  ----
14:34:43  80  --------------------------------------------------------------------------------
14:34:43  81  ----
14:34:43  82  	  procedure ext_credit_card(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  83  ----
14:34:43  84  --------------------------------------------------------------------------------
14:34:43  85  ----
14:34:43  86  	  procedure ext_transaction_attempt(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  87  ----
14:34:43  88  --------------------------------------------------------------------------------
14:34:43  89  ----
14:34:43  90  	  procedure ext_invoice_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  91  ----
14:34:43  92  --------------------------------------------------------------------------------
14:34:43  93  ----
14:34:43  94  	  procedure ext_line_item_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  95  ----
14:34:43  96  --------------------------------------------------------------------------------
14:34:43  97  ----
14:34:43  98  	  procedure ext_product_eligibility(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43  99  ----
14:34:43 100  --------------------------------------------------------------------------------
14:34:43 101  ----
14:34:43 102  	  procedure ext_offer_chain_eligibility(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 103  ----
14:34:43 104  --------------------------------------------------------------------------------
14:34:43 105  ----
14:34:43 106  	  procedure ext_tax(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 107  ----
14:34:43 108  --------------------------------------------------------------------------------
14:34:43 109  ----
14:34:43 110  	  procedure ext_tax_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 111  ----
14:34:43 112  --------------------------------------------------------------------------------
14:34:43 113  ----
14:34:43 114  /**/
14:34:43 115  	  procedure ext_rcn_ext_source_log(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 116  ----
14:34:43 117  --------------------------------------------------------------------------------
14:34:43 118  ----
14:34:43 119  	  procedure ext_rcn_cpt_svc_chg_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 120  ----
14:34:43 121  --------------------------------------------------------------------------------
14:34:43 122  ----
14:34:43 123  	  procedure ext_rcn_cpt_excpt_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 124  ----
14:34:43 125  --------------------------------------------------------------------------------
14:34:43 126  ----
14:34:43 127  	  procedure ext_rcn_cpt_dpst_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 128  ----
14:34:43 129  --------------------------------------------------------------------------------
14:34:43 130  ----
14:34:43 131  	  procedure ext_rcn_cpt_chgbk_act_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 132  ----
14:34:43 133  --------------------------------------------------------------------------------
14:34:43 134  ----
14:34:43 135  	  procedure ext_rcn_pp_sttlmnt(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 136  ----
14:34:43 137  --------------------------------------------------------------------------------
14:34:43 138  ----
14:34:43 139  	  procedure ext_rcn_pp_dispute(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 140  ----
14:34:43 141  --------------------------------------------------------------------------------
14:34:43 142  ----
14:34:43 143  	  procedure ext_rcn_pp_trns_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 144  ----
14:34:43 145  --------------------------------------------------------------------------------
14:34:43 146  ----
14:34:43 147  	  procedure ext_rcn_amex_chargeback(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 148  ----
14:34:43 149  --------------------------------------------------------------------------------
14:34:43 150  ----
14:34:43 151  	  procedure ext_paypal(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 152  ----
14:34:43 153  --------------------------------------------------------------------------------
14:34:43 154  ----
14:34:43 155  	  procedure ext_address(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
14:34:43 156  ----
14:34:43 157  --------------------------------------------------------------------------------
14:34:43 158  ----
14:34:43 159  /**/
14:34:43 160  END PROCS_REPORTING;
14:34:43 161  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.05
14:34:43 SQL> 
14:34:43 SQL> prompt Compiling Package PROCS_REPORTING_1A
Compiling Package PROCS_REPORTING_1A
14:34:43 SQL> 
14:34:43 SQL> whenever sqlerror exit failure
14:34:43 SQL> 
14:34:43 SQL> create or replace PACKAGE 	     "PROCS_REPORTING_1A" AS
14:34:43   2  
14:34:43   3  ----
14:34:43   4  --------------------------------------------------------------------------------
14:34:43   5  ----
14:34:43   6  	  function getDiscountAmount(in_line_item_id line_item.id%type)
14:34:43   7  	      return line_item.amount%type;
14:34:43   8  ----
14:34:43   9  --------------------------------------------------------------------------------
14:34:43  10  ----
14:34:43  11  	  function getRefundAmount(in_line_item_id line_item.id%type)
14:34:43  12  	      return line_item.amount%type;
14:34:43  13  ----
14:34:43  14  --------------------------------------------------------------------------------
14:34:43  15  ----
14:34:43  16  	  PROCEDURE EXTRACT_LINE_ITEMS(
14:34:43  17  	      in_lower_date_bound DATE,
14:34:43  18  	      in_upper_date_bound DATE,
14:34:43  19  	      out_lic_cur OUT sys_refcursor
14:34:43  20  	  );
14:34:43  21  ----
14:34:43  22  --------------------------------------------------------------------------------
14:34:43  23  ----
14:34:43  24  END PROCS_REPORTING_1A;
14:34:43  25  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.02
14:34:43 SQL> 
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> -- DDL for package PROCS_REPORTS
14:34:43 SQL> --------------------------------------------------------------------------------
14:34:43 SQL> 
14:34:43 SQL> CREATE OR REPLACE PACKAGE "PROCS_REPORTS_V5" AS
14:34:43   2  
14:34:43   3  FUNCTION GET_PRODUCT_NAMES(
14:34:43   4  	in_offer_id IN NUMBER
14:34:43   5  ) RETURN VARCHAR2;
14:34:43   6  
14:34:43   7  PROCEDURE GET_FULL_FLASH_REPORT_PURCH (
14:34:43   8  	in_start_date  IN DATE,
14:34:43   9  	in_end_date    IN DATE,
14:34:43  10  	out_result_set OUT SYS_REFCURSOR
14:34:43  11  );
14:34:43  12  
14:34:43  13  PROCEDURE GET_FLASH_REPORT_PURCHASES (
14:34:43  14  	in_offer_id	       IN NUMBER,
14:34:43  15  	in_start_date	       IN DATE,
14:34:43  16  	in_end_date	       IN DATE,
14:34:43  17  	out_new_purchasers_num OUT NUMBER,
14:34:43  18  	out_renewals_num       OUT NUMBER,
14:34:43  19  	out_product_names      OUT VARCHAR2,
14:34:43  20  	out_total_dollar_value OUT NUMBER,
14:34:43  21  	out_unique_purchasers  OUT NUMBER
14:34:43  22  );
14:34:43  23  
14:34:43  24  /*
14:34:43  25  FUNCTIONS FOR THE FLASH REPORT
14:34:43  26  */
14:34:43  27  
14:34:43  28  FUNCTION FLR_NEW_PURCHASERS_NUM (
14:34:43  29  	in_offer_id	       IN NUMBER,
14:34:43  30  	in_start_date	       IN DATE,
14:34:43  31  	in_end_date	       IN DATE
14:34:43  32  ) RETURN NUMBER;
14:34:43  33  
14:34:43  34  FUNCTION FLR_RENEWALS_NUM (
14:34:43  35  	in_offer_id	       IN NUMBER,
14:34:43  36  	in_start_date	       IN DATE,
14:34:43  37  	in_end_date	       IN DATE
14:34:43  38  ) RETURN NUMBER;
14:34:43  39  
14:34:43  40  FUNCTION FLR_TOTAL_DOLLAR_VALUE (
14:34:43  41  	in_offer_id	       IN NUMBER,
14:34:43  42  	in_start_date	       IN DATE,
14:34:43  43  	in_end_date	       IN DATE
14:34:43  44  ) RETURN NUMBER;
14:34:43  45  
14:34:43  46  FUNCTION FLR_UNIQUE_PURCHASERS (
14:34:43  47  	in_offer_id	       IN NUMBER,
14:34:43  48  	in_start_date	       IN DATE,
14:34:43  49  	in_end_date	       IN DATE
14:34:43  50  ) RETURN NUMBER;
14:34:43  51  
14:34:43  52  END PROCS_REPORTS_V5;
14:34:43  53  .
14:34:43 SQL> /

Package created.

Elapsed: 00:00:00.05
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PROCS_SUBSCRIPTION
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_SUBSCRIPTION_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE START_GRACE_BY_INVOICE_ID(
14:34:44   4  	in_invoice_id	     IN LICENSE.INVOICE_ID%TYPE,
14:34:44   5  	in_updater	     IN VARCHAR2,
14:34:44   6  	in_duration_in_hours IN NUMBER
14:34:44   7  );
14:34:44   8  
14:34:44   9  PROCEDURE STOP_GRACE_BY_INVOICE_ID(
14:34:44  10  	in_invoice_id IN LICENSE.INVOICE_ID%TYPE,
14:34:44  11  	in_updater    IN VARCHAR2
14:34:44  12  );
14:34:44  13  
14:34:44  14  PROCEDURE START_SUBSCRIPTION_CREATION (
14:34:44  15  	in_group_id	      IN NUMBER,
14:34:44  16  	in_created_by	      IN VARCHAR2,
14:34:44  17  	in_offer_chain_id     IN NUMBER,
14:34:44  18  	in_instrument_type_id IN NUMBER,
14:34:44  19  	in_instrument_id      IN NUMBER,
14:34:44  20  	in_agent_id	      IN NUMBER,
14:34:44  21  	in_note 	      IN VARCHAR2,
14:34:44  22  	out_subscription_id   OUT NUMBER,
14:34:44  23  	out_invoice_id	      OUT NUMBER,
14:34:44  24  	out_new_license_id    OUT NUMBER,
14:34:44  25  	in_check_dupe_products	 IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.TRUE
14:34:44  26  );
14:34:44  27  
14:34:44  28  PROCEDURE FINALIZE_SUBSCRIPTION_CREATION (
14:34:44  29  	in_subscription_id    IN NUMBER,
14:34:44  30  	in_invoice_id	      IN NUMBER,
14:34:44  31  	in_instrument_type_id IN NUMBER,
14:34:44  32  	in_instrument_id      IN NUMBER,
14:34:44  33  	in_created_by	      IN VARCHAR2
14:34:44  34  );
14:34:44  35  
14:34:44  36  PROCEDURE SUSPEND_SUBSCRIPTION(
14:34:44  37  /*
14:34:44  38  Throws exceptions:
14:34:44  39  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  40  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44  41  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  42  */
14:34:44  43  	  in_subs_id	IN NUMBER ,
14:34:44  44  	  in_updated_by IN VARCHAR2
14:34:44  45  );
14:34:44  46  
14:34:44  47  PROCEDURE REACTIVATE_SUBSCRIPTION (
14:34:44  48  	in_subscription_id IN  NUMBER,
14:34:44  49  	in_updated_by	   IN  VARCHAR2
14:34:44  50  );
14:34:44  51  
14:34:44  52  PROCEDURE GET_SUBSCRIPTION_INFO (
14:34:44  53  /*
14:34:44  54  Throws exceptions:
14:34:44  55  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  56  */
14:34:44  57  	  in_subscription_id IN  NUMBER,
14:34:44  58  	  out_result_set      OUT SYS_REFCURSOR
14:34:44  59  );
14:34:44  60  
14:34:44  61  PROCEDURE GET_SUBSCRIPTION_INVOICES (
14:34:44  62  /*
14:34:44  63  Throws exceptions:
14:34:44  64  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:44  65  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  66  */
14:34:44  67  	in_subscription_id  IN	NUMBER,
14:34:44  68  	out_result_set	    OUT SYS_REFCURSOR
14:34:44  69  );
14:34:44  70  
14:34:44  71  PROCEDURE GET_SUBSCRIPTION_NOTES (
14:34:44  72  /*
14:34:44  73  Throws exceptions:
14:34:44  74  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  75  */
14:34:44  76  	in_subscription_id  IN	NUMBER,
14:34:44  77  	out_result_set	    OUT SYS_REFCURSOR
14:34:44  78  );
14:34:44  79  
14:34:44  80  PROCEDURE ANNOTATE_SUBSCRIPTION (
14:34:44  81  /*
14:34:44  82  Throws exceptions:
14:34:44  83  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:44  84  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  85  */
14:34:44  86  	in_subscription_id IN  NUMBER,
14:34:44  87  	in_agent_id	   IN  NUMBER,
14:34:44  88  	in_note 	   IN  VARCHAR2,
14:34:44  89  	in_created_by	   IN  VARCHAR2
14:34:44  90  );
14:34:44  91  
14:34:44  92  PROCEDURE GET_CANCEL_REASONS (
14:34:44  93  	out_result_set OUT    SYS_REFCURSOR
14:34:44  94  );
14:34:44  95  
14:34:44  96  FUNCTION GET_RENEWAL_DATE (
14:34:44  97  /*
14:34:44  98  Throws exceptions:
14:34:44  99  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 100  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 101  */
14:34:44 102  	in_subscription_id in NUMBER
14:34:44 103  ) RETURN DATE;
14:34:44 104  
14:34:44 105  FUNCTION GET_RECENT_CHARGE (
14:34:44 106  /*
14:34:44 107  Throws exceptions:
14:34:44 108  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 109  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 110  */
14:34:44 111  	in_subscription_id IN NUMBER
14:34:44 112  ) RETURN NUMBER;
14:34:44 113  
14:34:44 114  FUNCTION GET_BILLING_CYCLE (
14:34:44 115  /*
14:34:44 116  Throws exceptions:
14:34:44 117  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 118  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 119  */
14:34:44 120  	in_subscription_id IN NUMBER
14:34:44 121  ) RETURN VARCHAR2;
14:34:44 122  
14:34:44 123  PROCEDURE REFUND_SUBSCRIPTION (
14:34:44 124  /*
14:34:44 125  Throws exceptions:
14:34:44 126  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 127  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 128  */
14:34:44 129  	in_subscription_id IN NUMBER,
14:34:44 130  	in_invoice_id	   IN NUMBER,
14:34:44 131  	in_refund_amount   IN NUMBER,
14:34:44 132  	in_note 	   IN VARCHAR2,
14:34:44 133  	in_created_by	   IN VARCHAR2,
14:34:44 134  	out_charge_id	   OUT NUMBER
14:34:44 135  );
14:34:44 136  
14:34:44 137  PROCEDURE ADD_SUBSCRIPTION_EXTENSION (
14:34:44 138  /*
14:34:44 139  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 140  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44 141  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 142  */
14:34:44 143  	in_subscription_id	IN NUMBER,
14:34:44 144  	in_effective_start_date IN DATE,
14:34:44 145  	in_effective_end_date	IN DATE,
14:34:44 146  	in_note 		IN VARCHAR2,
14:34:44 147  	in_updated_by		IN VARCHAR2
14:34:44 148  );
14:34:44 149  
14:34:44 150  FUNCTION CALC_SUBSCRIPTION_END_DATE (
14:34:44 151  /*
14:34:44 152  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 153  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44 154  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 155  Returns:
14:34:44 156  NULL if it is impossible to calculate end date (for example,
14:34:44 157  	offer chain includes offer with infinity recurrences number)
14:34:44 158  DATE else
14:34:44 159  */
14:34:44 160  	in_subscription_id IN NUMBER
14:34:44 161  ) RETURN DATE;
14:34:44 162  
14:34:44 163  PROCEDURE HAS_FUTURE_LICENSE (
14:34:44 164  /*
14:34:44 165  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 166  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 167  */
14:34:44 168  	in_license_id IN  NUMBER,
14:34:44 169  	out_result    OUT NUMBER
14:34:44 170  );
14:34:44 171  
14:34:44 172  PROCEDURE CLOSE_SUBSCRIPTION (
14:34:44 173  	in_subscription_id IN NUMBER,
14:34:44 174  	in_updated_by	   IN VARCHAR2
14:34:44 175  );
14:34:44 176  
14:34:44 177  PROCEDURE GET_GROUP_ID_BY_SBSCRPTN_ID (
14:34:44 178  	in_subscription_id IN NUMBER,
14:34:44 179  	out_group_id	   OUT NUMBER
14:34:44 180  );
14:34:44 181  
14:34:44 182  PROCEDURE GET_SUBSCRIPTION_PRODUCTS (
14:34:44 183  /*
14:34:44 184  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 185  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 186  */
14:34:44 187  	in_subscription_id IN NUMBER,
14:34:44 188  	out_result_set	   OUT SYS_REFCURSOR
14:34:44 189  );
14:34:44 190  
14:34:44 191  PROCEDURE UPDATE_SUBSCRIPTION_STATUS (
14:34:44 192  /*
14:34:44 193  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 194  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 195  */
14:34:44 196  	in_subscription_id	  IN SUBSCRIPTION.ID%TYPE,
14:34:44 197  	in_subscription_status_id IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE,
14:34:44 198  	in_updated_by		  IN SUBSCRIPTION.UPDATED_BY%TYPE
14:34:44 199  );
14:34:44 200  
14:34:44 201  PROCEDURE GET_ACTIVE_INVOICES_IDS (
14:34:44 202  /*
14:34:44 203  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 204  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 205  */
14:34:44 206  --  in_subscription_id IN SUBSCRIPTION.ID%TYPE,
14:34:44 207  	in_subscription_id IN NUMBER,
14:34:44 208  	out_result_set	   OUT SYS_REFCURSOR
14:34:44 209  );
14:34:44 210  
14:34:44 211  PROCEDURE CANCEL_SUBSCRIPTION_INVOICE (
14:34:44 212  /*
14:34:44 213  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 214  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 215  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44 216  */
14:34:44 217  	in_invoice_id	     IN NUMBER,
14:34:44 218  	in_updated_by	     IN VARCHAR2,
14:34:44 219  	in_refundable	     IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.FALSE
14:34:44 220  );
14:34:44 221  
14:34:44 222  PROCEDURE FINALIZE_CANCELATION (
14:34:44 223  /*
14:34:44 224  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 225  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 226  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44 227  */
14:34:44 228  --  in_subscription_id	IN SUBSCRIPTION.ID%TYPE,
14:34:44 229  --  in_cancelation_reason IN SUBSCRIPTION_CANCEL_REASON.VALUE%TYPE,
14:34:44 230  --  in_cancelation_date	IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
14:34:44 231  --  in_note		IN SUBSCRIPTION_NOTE.NOTE%TYPE,
14:34:44 232  --  in_agent_id		IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
14:34:44 233  --  in_updated_by 	IN SUBSCRIPTION.UPDATED_BY%TYPE
14:34:44 234  	in_subscription_id    IN NUMBER,
14:34:44 235  	in_cancelation_reason IN VARCHAR2,
14:34:44 236  	in_cancelation_date   IN DATE,
14:34:44 237  	in_note 	      IN VARCHAR2,
14:34:44 238  	in_agent_id	      IN NUMBER,
14:34:44 239  	in_updated_by	      IN VARCHAR2
14:34:44 240  );
14:34:44 241  
14:34:44 242  PROCEDURE FINALIZE_FALSE_START (
14:34:44 243  /*
14:34:44 244  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 245  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 246  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44 247  */
14:34:44 248  --  in_subscription_id	IN SUBSCRIPTION.ID%TYPE,
14:34:44 249  --  in_cancelation_date	IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
14:34:44 250  --  in_note		IN SUBSCRIPTION_NOTE.NOTE%TYPE,
14:34:44 251  --  in_agent_id		IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
14:34:44 252  --  in_updated_by 	IN SUBSCRIPTION.UPDATED_BY%TYPE
14:34:44 253  	in_subscription_id    IN NUMBER,
14:34:44 254  	in_cancelation_date   IN DATE,
14:34:44 255  	in_note 	      IN VARCHAR2,
14:34:44 256  	in_agent_id	      IN NUMBER,
14:34:44 257  	in_updated_by	      IN VARCHAR2
14:34:44 258  );
14:34:44 259  
14:34:44 260  FUNCTION IS_SUBSCRIPTION_CANCELABLE (
14:34:44 261  	in_subscription_id IN NUMBER
14:34:44 262  ) RETURN NUMBER;
14:34:44 263  
14:34:44 264  PROCEDURE GET_SUBSCR_PROD_OFFERRINGS (
14:34:44 265  /*
14:34:44 266  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 267  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 268  */
14:34:44 269  	in_subscription_id IN NUMBER,
14:34:44 270  	out_result_set	   OUT SYS_REFCURSOR
14:34:44 271  );
14:34:44 272  
14:34:44 273  PROCEDURE RETRIEVE_SUB_PROD_OFFER (
14:34:44 274  /*
14:34:44 275  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 276  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 277  */
14:34:44 278  	in_subscription_id IN NUMBER,
14:34:44 279  	out_result_set	   OUT SYS_REFCURSOR
14:34:44 280  );
14:34:44 281  
14:34:44 282  PROCEDURE GET_SUBSCR_LIC_OFFER (
14:34:44 283  /*
14:34:44 284  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 285  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 286  */
14:34:44 287  	in_subscription_id IN NUMBER,
14:34:44 288  	out_result_set	   OUT SYS_REFCURSOR
14:34:44 289  );
14:34:44 290  
14:34:44 291  PROCEDURE ARE_REFUNDS_PENDING_FOR_SUBSCR (
14:34:44 292  /*
14:34:44 293  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 294  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 295  */
14:34:44 296  	in_subscription_id IN NUMBER,
14:34:44 297  	out_result	   OUT NUMBER
14:34:44 298  );
14:34:44 299  
14:34:44 300  PROCEDURE GET_EXISTING_SUBSCR_NUMBER (
14:34:44 301  /*
14:34:44 302  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 303  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 304  */
14:34:44 305  	in_group_id	   IN NUMBER,
14:34:44 306  	in_offer_chain_id  IN NUMBER,
14:34:44 307  	out_result	   out number
14:34:44 308  );
14:34:44 309  
14:34:44 310  PROCEDURE GET_EXISTING_SUBSCR_IDS (
14:34:44 311  /*
14:34:44 312  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 313  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 314  */
14:34:44 315  	in_group_id	   IN NUMBER,
14:34:44 316  	in_offer_chain_id  IN NUMBER,
14:34:44 317  	out_result_set	   OUT SYS_REFCURSOR
14:34:44 318  );
14:34:44 319  
14:34:44 320  PROCEDURE ADD_META_DATA (
14:34:44 321  /*
14:34:44 322  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 323  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 324  */
14:34:44 325  	in_subscription_id IN NUMBER,
14:34:44 326  	in_name 	   IN VARCHAR2,
14:34:44 327  	in_value	   IN VARCHAR2,
14:34:44 328  	in_created_by	   IN VARCHAR2
14:34:44 329  );
14:34:44 330  
14:34:44 331  PROCEDURE GET_SUBSCRIPTIONS_META_DATA (
14:34:44 332  /*
14:34:44 333  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:44 334  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 335  */
14:34:44 336  	in_subscriptions_ids IN core_owner.NUMBER_TABLE,
14:34:44 337  	out_result_set	     OUT SYS_REFCURSOR
14:34:44 338  );
14:34:44 339  
14:34:44 340  PROCEDURE GET_SUBS_BY_TRNS_ORDER_ID (
14:34:44 341  /*
14:34:44 342  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 343  */
14:34:44 344  	in_order_id	   IN TRANSACTION.ORDER_ID%TYPE,
14:34:44 345  	out_result_set	   OUT SYS_REFCURSOR
14:34:44 346  );
14:34:44 347  
14:34:44 348  PROCEDURE GET_OPEN_CHARGES_BY_SUBID
14:34:44 349   (
14:34:44 350  /*
14:34:44 351  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 352  */
14:34:44 353  	in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
14:34:44 354  	out_result_set	    OUT SYS_REFCURSOR
14:34:44 355  );
14:34:44 356  
14:34:44 357  FUNCTION GET_GIFT_CERT_ID_BY_SUB_ID (
14:34:44 358  	in_subscription_id IN SUBSCRIPTION.ID%TYPE
14:34:44 359  ) RETURN NUMBER;
14:34:44 360  
14:34:44 361  FUNCTION GET_GIFT_CERT_CODE_BY_SUB_ID (
14:34:44 362  	in_subscription_id IN SUBSCRIPTION.ID%TYPE
14:34:44 363  ) RETURN VARCHAR2;
14:34:44 364  
14:34:44 365  
14:34:44 366  
14:34:44 367  PROCEDURE GET_ACTIVE_MEU_SUBS (
14:34:44 368  	out_result_set	    OUT SYS_REFCURSOR
14:34:44 369  );
14:34:44 370  
14:34:44 371  PROCEDURE GET_EARLIEST_ACTIVE_OFFER_ID (
14:34:44 372  	in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
14:34:44 373  	out_offer_id	    OUT LICENSE.ID%TYPE
14:34:44 374  );
14:34:44 375  
14:34:44 376  PROCEDURE GET_EARLIEST_ACTIVE_LICENSE_ID (
14:34:44 377  	in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
14:34:44 378  	out_license_id	    OUT LICENSE.ID%TYPE
14:34:44 379  );
14:34:44 380  
14:34:44 381  PROCEDURE GET_ACT_SUBS_W_CPT_CHARGEBACKS (
14:34:44 382  	out_result_set	    OUT SYS_REFCURSOR
14:34:44 383  );
14:34:44 384  
14:34:44 385  PROCEDURE GET_ACT_SUBS_W_PP_CHARGEBACKS (
14:34:44 386  	out_result_set	    OUT SYS_REFCURSOR
14:34:44 387  );
14:34:44 388  
14:34:44 389  PROCEDURE GET_ACT_SUBS_W_AMEX_CB (
14:34:44 390  	out_result_set	    OUT SYS_REFCURSOR
14:34:44 391  );
14:34:44 392  
14:34:44 393  PROCEDURE GET_GRACE_PERIOD_SUB_REGIS (
14:34:44 394  	in_max_days_until_close IN NUMBER,
14:34:44 395  	in_num_subs_to_fetch	IN NUMBER,
14:34:44 396  	out_result_set		OUT SYS_REFCURSOR
14:34:44 397  );
14:34:44 398  
14:34:44 399  
14:34:44 400  END PROCS_SUBSCRIPTION_V18;
14:34:44 401  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.09
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PROCS_SUBSCRIPTION_CRU
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_SUBSCRIPTION_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_SUBSCRIPTION(
14:34:44   4  	out_subscription_id	     OUT SUBSCRIPTION.ID%TYPE,
14:34:44   5  	in_subscription_id	     IN SUBSCRIPTION.ID%TYPE DEFAULT NULL,
14:34:44   6  	in_suspend_date 	     IN SUBSCRIPTION.SUSPEND_DATE%TYPE DEFAULT NULL,
14:34:44   7  	in_account_id		     IN SUBSCRIPTION.ACCOUNT_ID%TYPE,
14:34:44   8  	in_purchase_date	     IN SUBSCRIPTION.PURCHASE_DATE%TYPE,
14:34:44   9  	in_offer_chain_id	     IN SUBSCRIPTION.OFFER_CHAIN_ID%TYPE,
14:34:44  10  	in_termination_date	     IN SUBSCRIPTION.TERMINATION_DATE%TYPE DEFAULT NULL,
14:34:44  11  	in_days_remainning_ajustment IN SUBSCRIPTION.DAYS_REMAINING_ADJUSTMENT%TYPE DEFAULT NULL,
14:34:44  12  	in_sct_id		     IN SUBSCRIPTION.SCT_ID%TYPE DEFAULT NULL,
14:34:44  13  	in_created_by		     IN SUBSCRIPTION.CREATED_BY%TYPE,
14:34:44  14  	in_instrument_type_id	     IN SUBSCRIPTION.INSTRUMENT_TYPE_ID%TYPE,
14:34:44  15  	in_instrument_id	     IN SUBSCRIPTION.INSTRUMENT_ID%TYPE,
14:34:44  16  	in_subscription_status_id    IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE,
14:34:44  17  	in_cancelation_date	     IN SUBSCRIPTION.CANCELLATION_DATE%TYPE DEFAULT NULL,
14:34:44  18  	in_reactivation_date	     IN SUBSCRIPTION.REACTIVATION_DATE%TYPE DEFAULT NULL
14:34:44  19  );
14:34:44  20  
14:34:44  21  PROCEDURE UPDATE_SUBSCRIPTION(
14:34:44  22  	in_subscription_id	     IN SUBSCRIPTION.ID%TYPE,
14:34:44  23  	in_suspend_date 	     IN SUBSCRIPTION.SUSPEND_DATE%TYPE DEFAULT NULL,
14:34:44  24  	in_purchase_date	     IN SUBSCRIPTION.PURCHASE_DATE%TYPE DEFAULT NULL,
14:34:44  25  	in_termination_date	     IN SUBSCRIPTION.TERMINATION_DATE%TYPE DEFAULT NULL,
14:34:44  26  	in_days_remainning_ajustment IN SUBSCRIPTION.DAYS_REMAINING_ADJUSTMENT%TYPE DEFAULT NULL,
14:34:44  27  	in_sct_id		     IN SUBSCRIPTION.SCT_ID%TYPE DEFAULT NULL,
14:34:44  28  	in_updated_by		     IN SUBSCRIPTION.CREATED_BY%TYPE DEFAULT NULL,
14:34:44  29  	in_instrument_type_id	     IN SUBSCRIPTION.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
14:34:44  30  	in_instrument_id	     IN SUBSCRIPTION.INSTRUMENT_ID%TYPE DEFAULT NULL,
14:34:44  31  	in_subscription_status_id    IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE DEFAULT NULL,
14:34:44  32  	in_cancelation_date	     IN SUBSCRIPTION.CANCELLATION_DATE%TYPE DEFAULT NULL,
14:34:44  33  	in_reactivation_date	     IN SUBSCRIPTION.REACTIVATION_DATE%TYPE DEFAULT NULL
14:34:44  34  );
14:34:44  35  
14:34:44  36  PROCEDURE CREATE_SUBSCRIPTION_NOTE (
14:34:44  37  	inout_subscription_note_id IN OUT SUBSCRIPTION_NOTE.ID%TYPE,
14:34:44  38  	in_agent_id		   IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
14:34:44  39  	in_subscription_id	   IN SUBSCRIPTION_NOTE.ID%TYPE,
14:34:44  40  	in_note 		   IN SUBSCRIPTION_NOTE.NOTE%TYPE,
14:34:44  41  	in_created_by		   IN SUBSCRIPTION_NOTE.CREATED_BY%TYPE
14:34:44  42  );
14:34:44  43  
14:34:44  44  END PROCS_SUBSCRIPTION_CRU_V18;
14:34:44  45  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.06
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PROCS_SYSTEM
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_SYSTEM_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE INCREMENT_VERSION;
14:34:44   4  
14:34:44   5  PROCEDURE CHECK_VERSION(
14:34:44   6  	  in_vers    IN NUMBER,
14:34:44   7  	  out_result OUT NUMBER
14:34:44   8  );
14:34:44   9  
14:34:44  10  END PROCS_SYSTEM_V18;
14:34:44  11  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.01
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PROCS_TAXES
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_TAXES_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE ADD_TAX (
14:34:44   4  	in_tax_type_id		 IN NUMBER,
14:34:44   5  	in_calculated_amount	 IN NUMBER,
14:34:44   6  	in_created_by		 IN VARCHAR2,
14:34:44   7  	in_line_item_id 	 IN NUMBER,
14:34:44   8  	in_effective_rate	 IN VARCHAR2,
14:34:44   9  	in_taxable_amount	 IN NUMBER,
14:34:44  10  	in_tax_rule_id		 IN NUMBER,
14:34:44  11  	in_jurisdiction_level_id IN NUMBER,
14:34:44  12  	in_jurisdiction_name	 IN VARCHAR2,
14:34:44  13  	in_jurisdiction_id	 IN VARCHAR2,
14:34:44  14  	in_ext_tax_type 	 IN VARCHAR2,
14:34:44  15  	in_ext_result		 IN VARCHAR2,
14:34:44  16  	in_imposition_type	 IN VARCHAR2,
14:34:44  17  	in_imposition		 IN VARCHAR2
14:34:44  18  );
14:34:44  19  
14:34:44  20  PROCEDURE CHECK_COUNTRY_FOR_EXCLUSION (
14:34:44  21  	in_country_code IN CHAR,
14:34:44  22  	in_check_date IN DATE,
14:34:44  23  	out_is_founded	OUT NUMBER -- GLOBAL_CONSTANT.TRUE of GLOBAL_CONSTANTS_V18.FALSE
14:34:44  24  );
14:34:44  25  
14:34:44  26  PROCEDURE GET_TAX_CATEGORY (
14:34:44  27  	in_tax_category_id IN NUMBER,
14:34:44  28  	out_result_set	   OUT SYS_REFCURSOR
14:34:44  29  );
14:34:44  30  
14:34:44  31  END PROCS_TAXES_V18;
14:34:44  32  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.03
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PROCS_TAXES_CRU
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_TAXES_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_TAX (
14:34:44   4  	inout_tax_id		 IN OUT NUMBER,
14:34:44   5  	in_tax_type_id		 IN NUMBER,
14:34:44   6  	in_calculated_amount	 IN NUMBER,
14:34:44   7  	in_created_by		 IN VARCHAR2,
14:34:44   8  	in_line_item_id 	 IN NUMBER,
14:34:44   9  	in_effective_rate	 IN VARCHAR2,
14:34:44  10  	in_taxable_amount	 IN NUMBER,
14:34:44  11  	in_tax_rule_id		 IN NUMBER,
14:34:44  12  	in_jurisdiction_level_id IN NUMBER,
14:34:44  13  	in_jurisdiction_name	 IN VARCHAR2,
14:34:44  14  	in_jurisdiction_id	 IN VARCHAR2,
14:34:44  15  	in_ext_tax_type 	 IN VARCHAR2,
14:34:44  16  	in_ext_result		 IN VARCHAR2,
14:34:44  17  	in_imposition_type	 IN VARCHAR2,
14:34:44  18  	in_imposition		 IN VARCHAR2
14:34:44  19  );
14:34:44  20  
14:34:44  21  END PROCS_TAXES_CRU_V18;
14:34:44  22  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.02
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PROCS_TEST
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_TEST_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE TEST_CLEAR_ALL;
14:34:44   4  PROCEDURE TEST_CLEAR_PRODUCTS;
14:34:44   5  
14:34:44   6  /********************************************/
14:34:44   7  
14:34:44   8  PROCEDURE TEST_GET_ACCOUNT (
14:34:44   9  	in_group_id	IN NUMBER,
14:34:44  10  	out_result_set	OUT SYS_REFCURSOR
14:34:44  11  );
14:34:44  12  
14:34:44  13  /********************************************/
14:34:44  14  
14:34:44  15  PROCEDURE TEST_GET_SUBSCRIPTION (
14:34:44  16  	in_subscription_id IN NUMBER,
14:34:44  17  	out_result_set	   OUT SYS_REFCURSOR
14:34:44  18  );
14:34:44  19  
14:34:44  20  /*********************************************/
14:34:44  21  
14:34:44  22  PROCEDURE TEST_DELETE_INVOICE (
14:34:44  23  	in_invoice_id IN NUMBER
14:34:44  24  );
14:34:44  25  
14:34:44  26  PROCEDURE TEST_DELETE_USER_ACCOUNT (
14:34:44  27  	in_group_id IN NUMBER
14:34:44  28  );
14:34:44  29  
14:34:44  30  PROCEDURE TEST_DELETE_USER_ACCOUNTS  (
14:34:44  31  	in_start_group_id IN NUMBER,
14:34:44  32  	in_end_group_id   IN NUMBER
14:34:44  33  );
14:34:44  34  
14:34:44  35  /**********************************************/
14:34:44  36  
14:34:44  37  FUNCTION TEST_IS_INVOICE_EXISTS(
14:34:44  38  /*
14:34:44  39  1 - exists
14:34:44  40  0 - not exists
14:34:44  41  */
14:34:44  42  	in_invoice_id IN NUMBER
14:34:44  43  ) RETURN NUMBER;
14:34:44  44  
14:34:44  45  PROCEDURE TEST_GET_INVOICE_INFO (
14:34:44  46  	in_invoice_id  IN NUMBER,
14:34:44  47  	out_result_set OUT SYS_REFCURSOR
14:34:44  48  );
14:34:44  49  
14:34:44  50  /******************************************************************************/
14:34:44  51  
14:34:44  52  PROCEDURE TEST_DELETE_OFFER_CHAIN(
14:34:44  53  	in_offer_chain_id in number
14:34:44  54  );
14:34:44  55  
14:34:44  56  END PROCS_TEST_V18;
14:34:44  57  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.02
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PROCS_TRANSACTION
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_TRANSACTION_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_TRANSACTION (
14:34:44   4  /*
14:34:44   5  Throws exceptions:
14:34:44   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44   8  */
14:34:44   9  	in_transaction_id	  IN NUMBER,
14:34:44  10  	in_status_id		  IN NUMBER,
14:34:44  11  	in_amount		  IN NUMBER,
14:34:44  12  	in_created_by		  IN VARCHAR2,
14:34:44  13  	in_order_id		  IN VARCHAR2,
14:34:44  14  	in_is_refund		  IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.FALSE,
14:34:44  15  	in_transaction_type_code  IN VARCHAR2 DEFAULT NULL,
14:34:44  16  	out_transaction_id	  OUT NUMBER
14:34:44  17  );
14:34:44  18  
14:34:44  19  PROCEDURE CREATE_TRANSACTION_ATTEMPT (
14:34:44  20  /*
14:34:44  21  Throws exceptions:
14:34:44  22  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  23  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  24  */
14:34:44  25  	in_transaction_id	   IN NUMBER,
14:34:44  26  	in_trans_attempt_status    IN NUMBER,
14:34:44  27  	in_external_status_code    IN VARCHAR2,
14:34:44  28  	in_external_status_message IN VARCHAR2,
14:34:44  29  	in_created_by		   IN VARCHAR2,
14:34:44  30  	in_ext_transaction_id	   IN VARCHAR2,
14:34:44  31  	out_transaction_attempt_id OUT NUMBER
14:34:44  32  );
14:34:44  33  
14:34:44  34  PROCEDURE UPDATE_TRANSACTION_STATUS (
14:34:44  35  /*
14:34:44  36  Throws exceptions:
14:34:44  37  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  38  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  39  */
14:34:44  40  	in_transaction_id	 IN NUMBER,
14:34:44  41  	in_updated_by		 IN VARCHAR2,
14:34:44  42  	in_transaction_status_id IN NUMBER
14:34:44  43  );
14:34:44  44  
14:34:44  45  PROCEDURE UPDATE_TRANSACTION_SETTLED (
14:34:44  46  /*
14:34:44  47  Throws exceptions:
14:34:44  48  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  49  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  50  */
14:34:44  51  	in_transaction_id	 IN NUMBER,
14:34:44  52  	in_updated_by		 IN VARCHAR2,
14:34:44  53  	in_is_settled		 IN NUMBER
14:34:44  54  );
14:34:44  55  
14:34:44  56  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_TIME (
14:34:44  57  /*
14:34:44  58  Throws exceptions:
14:34:44  59  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  60  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  61  */
14:34:44  62  	in_transaction_attempt_id IN NUMBER,
14:34:44  63  	in_updated_by		  IN VARCHAR2
14:34:44  64  );
14:34:44  65  
14:34:44  66  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_STATUS (
14:34:44  67  /*
14:34:44  68  Throws exceptions:
14:34:44  69  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  70  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  71  */
14:34:44  72  	in_transaction_attempt_id     IN NUMBER,
14:34:44  73  	in_transaction_attempt_status IN NUMBER
14:34:44  74  );
14:34:44  75  
14:34:44  76  PROCEDURE GET_TRNSCTN_ATTEMPTS_BY_STATUS (
14:34:44  77  /*
14:34:44  78  Throws exceptions:
14:34:44  79  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  80  */
14:34:44  81  	in_transaction_id	      IN NUMBER,
14:34:44  82  	in_transaction_attempt_status IN NUMBER,
14:34:44  83  	out_result_set		      OUT SYS_REFCURSOR
14:34:44  84  );
14:34:44  85  
14:34:44  86  PROCEDURE UPDATE_TRANSACTION_ATTEMPT_INF (
14:34:44  87  /*
14:34:44  88  Throws exceptions:
14:34:44  89  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  90  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  91  */
14:34:44  92  	in_transaction_attempt_id IN NUMBER,
14:34:44  93  	in_ext_status_code	  IN VARCHAR2,
14:34:44  94  	in_ext_status_message	  IN VARCHAR2,
14:34:44  95  	in_ext_transaction_id	  IN VARCHAR2
14:34:44  96  );
14:34:44  97  
14:34:44  98  PROCEDURE GET_FAILED_ATTEMPTS_NUMBER (
14:34:44  99  /*
14:34:44 100  Throws exceptions:
14:34:44 101  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 102  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 103  */
14:34:44 104  	in_transaction_id IN  NUMBER,
14:34:44 105  	out_attempts_num  OUT NUMBER
14:34:44 106  );
14:34:44 107  
14:34:44 108  PROCEDURE GET_TRANSACTION_AMOUNT (
14:34:44 109  /*
14:34:44 110  Throws exceptions:
14:34:44 111  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 112  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 113  */
14:34:44 114  	in_transaction_id      IN  NUMBER,
14:34:44 115  	out_transaction_amount OUT NUMBER
14:34:44 116  );
14:34:44 117  
14:34:44 118  PROCEDURE GET_TRANSACTIONS_BY_CHARGE_ID (
14:34:44 119  /*
14:34:44 120  Throws exceptions:
14:34:44 121  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 122  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 123  */
14:34:44 124  	in_charge_id   IN  NUMBER,
14:34:44 125  	out_result_set OUT SYS_REFCURSOR
14:34:44 126  );
14:34:44 127  
14:34:44 128  PROCEDURE GET_TRANSACTION_BY_ORDER_ID (
14:34:44 129  /*
14:34:44 130  Throws exceptions:
14:34:44 131  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 132  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 133  */
14:34:44 134  	in_order_id   IN  TRANSACTION.ORDER_ID%TYPE,
14:34:44 135  	out_result_set OUT SYS_REFCURSOR
14:34:44 136  );
14:34:44 137  
14:34:44 138  PROCEDURE GET_TRANSACTIONS_BY_ORDER_ID (
14:34:44 139  /*
14:34:44 140  Throws exceptions:
14:34:44 141  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 142  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 143  */
14:34:44 144  	in_order_id   IN  TRANSACTION.ORDER_ID%TYPE,
14:34:44 145  	out_result_set OUT SYS_REFCURSOR
14:34:44 146  );
14:34:44 147  
14:34:44 148  PROCEDURE GET_TRANSACTION_ATTEMPTS (
14:34:44 149  /*
14:34:44 150  Throws exceptions:
14:34:44 151  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 152  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 153  */
14:34:44 154  	in_transaction_id IN  NUMBER,
14:34:44 155  	out_result_set	  OUT SYS_REFCURSOR
14:34:44 156  );
14:34:44 157  
14:34:44 158  PROCEDURE RESERVE_TRANSACTION_ID (
14:34:44 159  /*
14:34:44 160  Throws exceptions:
14:34:44 161  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 162  */
14:34:44 163  	out_transaction_id OUT NUMBER
14:34:44 164  );
14:34:44 165  
14:34:44 166  PROCEDURE GET_TRANSACTION_BY_ID (
14:34:44 167  /*
14:34:44 168  Throws exceptions:
14:34:44 169  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 170  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 171  */
14:34:44 172  	in_transaction_id IN NUMBER,
14:34:44 173  	out_result_set	  OUT SYS_REFCURSOR
14:34:44 174  );
14:34:44 175  
14:34:44 176  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
14:34:44 177  /*
14:34:44 178  Throws exceptions:
14:34:44 179  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 180  APP_EXCEPTION_CODES_V18.INTRNAL_ERROR
14:34:44 181  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 182  */
14:34:44 183  	in_transaction_id IN TRANSACTION.ID%TYPE,
14:34:44 184  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
14:34:44 185  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
14:34:44 186  );
14:34:44 187  
14:34:44 188  PROCEDURE GET_CLOSED_REFUNDS_BY_INVOICE (
14:34:44 189  /*
14:34:44 190  Throws exceptions:
14:34:44 191  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 192  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 193  */
14:34:44 194  	in_invoice_id	IN  NUMBER,
14:34:44 195  	out_result_set OUT SYS_REFCURSOR
14:34:44 196  );
14:34:44 197  PROCEDURE IS_TRANSACTION_SUCCESSFULL (
14:34:44 198  /*
14:34:44 199  Throws exceptions:
14:34:44 200  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 201  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 202  */
14:34:44 203  	in_transaction_id IN  NUMBER,
14:34:44 204  	out_is_successfull  OUT NUMBER
14:34:44 205  );
14:34:44 206  
14:34:44 207  FUNCTION GET_TRANSACTION_TAX_AMOUNT (
14:34:44 208  	in_transaction_id IN NUMBER
14:34:44 209  ) RETURN NUMBER;
14:34:44 210  
14:34:44 211  FUNCTION GET_TRANSACTION_INTRL_TAXES (
14:34:44 212  	in_transaction_id IN NUMBER
14:34:44 213  ) RETURN NUMBER;
14:34:44 214  
14:34:44 215  -- norlov: #38796
14:34:44 216  PROCEDURE GET_TRANSACTIONS (
14:34:44 217  /*
14:34:44 218  Throws exceptions:
14:34:44 219  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 220  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 221  */
14:34:44 222  	in_group_id	      IN  NUMBER,
14:34:44 223  	in_invoice_id	      IN NUMBER DEFAULT NULL,
14:34:44 224  	in_subscription_id    IN NUMBER DEFAULT NULL,
14:34:44 225  	in_start_date	      IN TRANSACTION.CREATE_DATE%TYPE DEFAULT NULL,
14:34:44 226  	in_end_date	      IN TRANSACTION.CREATE_DATE%TYPE DEFAULT NULL,
14:34:44 227  	in_transaction_status IN NUMBER DEFAULT NULL,
14:34:44 228  	out_result_set	      OUT SYS_REFCURSOR
14:34:44 229  );
14:34:44 230  
14:34:44 231  FUNCTION IS_TRANSACTION_COLLECTED (
14:34:44 232  /*
14:34:44 233  Throws:
14:34:44 234  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 235  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 236  Returns:
14:34:44 237  GLOBAL_CONST.TRUE if transaction collected,
14:34:44 238  GLOBAL_CONST.FALSE else
14:34:44 239  */
14:34:44 240  	in_transaction_id IN NUMBER
14:34:44 241  ) RETURN NUMBER;
14:34:44 242  
14:34:44 243  PROCEDURE GET_NEXT_ATTEMPT_NUMBER (
14:34:44 244  /*
14:34:44 245  Throws exceptions:
14:34:44 246  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 247  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 248  */
14:34:44 249  	in_charge_id   in  number,
14:34:44 250  	out_attempt_count out number
14:34:44 251  );
14:34:44 252  
14:34:44 253  END PROCS_TRANSACTION_V18;
14:34:44 254  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.08
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PROCS_TRANSACTION_CRU
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PROCS_TRANSACTION_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_TRANSACTION (
14:34:44   4  	out_transaction_id	 OUT TRANSACTION.ID%TYPE,
14:34:44   5  	in_transaction_id	 IN TRANSACTION.ID%TYPE DEFAULT NULL,
14:34:44   6  	in_transaction_status_id IN TRANSACTION.TRANSACTION_STATUS_ID%TYPE,
14:34:44   7  	in_transaction_amount	 IN TRANSACTION.TRANSACTION_AMOUNT%TYPE,
14:34:44   8  	in_created_by		 IN TRANSACTION.CREATED_BY%TYPE,
14:34:44   9  	in_order_id		 IN TRANSACTION.ORDER_ID%TYPE,
14:34:44  10  	in_is_refund		 IN TRANSACTION.IS_REFUND%TYPE DEFAULT GLOBAL_CONSTANTS_V18.FALSE,
14:34:44  11  	in_transaction_type_code IN TRANSACTION.TRANSACTION_TYPE_CODE%TYPE DEFAULT NULL
14:34:44  12  );
14:34:44  13  
14:34:44  14  PROCEDURE UPDATE_TRANSACTION (
14:34:44  15  	in_transaction_id	 IN TRANSACTION.ID%TYPE,
14:34:44  16  	in_transaction_status_id IN TRANSACTION.TRANSACTION_STATUS_ID%TYPE DEFAULT NULL,
14:34:44  17  	in_transaction_amount	 IN TRANSACTION.TRANSACTION_AMOUNT%TYPE DEFAULT NULL,
14:34:44  18  	in_updated_by		 IN TRANSACTION.CREATED_BY%TYPE,
14:34:44  19  	in_order_id		 IN TRANSACTION.ORDER_ID%TYPE DEFAULT NULL,
14:34:44  20  	in_is_settled		 IN TRANSACTION.IS_SETTLED%TYPE DEFAULT NULL
14:34:44  21  );
14:34:44  22  
14:34:44  23  PROCEDURE READ_TRANSACTION (
14:34:44  24  	in_transaction_id IN TRANSACTION.ID%TYPE,
14:34:44  25  	out_result_set	  OUT SYS_REFCURSOR
14:34:44  26  );
14:34:44  27  
14:34:44  28  PROCEDURE CREATE_TRANSACTION_ATTEMPT(
14:34:44  29  	inout_transaction_attempt_id IN OUT TRANSACTION_ATTEMPT.ID%TYPE,
14:34:44  30  	in_transaction_id	     IN TRANSACTION_ATTEMPT.TRANSACTION_ID%TYPE,
14:34:44  31  	in_external_status_code      IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE%TYPE DEFAULT NULL,
14:34:44  32  	in_external_status_message   IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE%TYPE DEFAULT NULL,
14:34:44  33  	in_created_by		     IN TRANSACTION_ATTEMPT.CREATED_BY%TYPE,
14:34:44  34  	in_external_transaction_id   IN TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID%TYPE DEFAULT NULL,
14:34:44  35  	in_transaction_start_time    IN TRANSACTION_ATTEMPT.TRANSACTION_START_TIME%TYPE DEFAULT NULL,
14:34:44  36  	in_status_id		     IN TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID%TYPE
14:34:44  37  );
14:34:44  38  
14:34:44  39  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
14:34:44  40  /*
14:34:44  41  Throws exceptions:
14:34:44  42  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  43  APP_EXCEPTION_CODES_V18.INTRNAL_ERROR
14:34:44  44  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  45  */
14:34:44  46  	in_transaction_id IN TRANSACTION.ID%TYPE,
14:34:44  47  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
14:34:44  48  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
14:34:44  49  );
14:34:44  50  
14:34:44  51  PROCEDURE UPDATE_TRANSACTION_ATTEMPT (
14:34:44  52  	in_transaction_attempt_id  IN TRANSACTION_ATTEMPT.ID%TYPE,
14:34:44  53  	in_external_status_code    IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE%TYPE DEFAULT NULL,
14:34:44  54  	in_external_status_message IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE%TYPE DEFAULT NULL,
14:34:44  55  	in_external_transaction_id IN TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID%TYPE DEFAULT NULL,
14:34:44  56  	in_transaction_start_time  IN TRANSACTION_ATTEMPT.TRANSACTION_START_TIME%TYPE DEFAULT NULL,
14:34:44  57  	in_status_id		   IN TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID%TYPE DEFAULT NULL
14:34:44  58  );
14:34:44  59  
14:34:44  60  END PROCS_TRANSACTION_CRU_V18;
14:34:44  61  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.03
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PUBLIC_PROCS_BILLING
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_BILLING_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE GET_OFFER_CHAIN_BY_ID (
14:34:44   4  /*
14:34:44   5  Throws exceptions:
14:34:44   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44   8  */
14:34:44   9  	  in_offer_chain_id IN	 NUMBER,
14:34:44  10  	  out_result_set    OUT  SYS_REFCURSOR
14:34:44  11  );
14:34:44  12  
14:34:44  13  PROCEDURE GET_GC_ID_BY_PURCH_INVOICE_ID (
14:34:44  14  /*
14:34:44  15  Throws exceptions:
14:34:44  16  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  17  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  18  */
14:34:44  19  in_invoice_id IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:44  20  out_gift_certificate_id OUT GIFT_CERTIFICATE.ID%TYPE
14:34:44  21  );
14:34:44  22  
14:34:44  23  PROCEDURE GET_PENDING_INVOICES (
14:34:44  24  /*
14:34:44  25  Throws exceptions:
14:34:44  26  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  27  */
14:34:44  28  	out_result_set1      OUT SYS_REFCURSOR,
14:34:44  29  	out_result_set2      OUT SYS_REFCURSOR,
14:34:44  30  	out_result_set3      OUT SYS_REFCURSOR,
14:34:44  31  	in_row_number	     IN NUMBER DEFAULT NULL
14:34:44  32  );
14:34:44  33  
14:34:44  34  PROCEDURE GET_PENDING_REFUND_CHARGES (
14:34:44  35  /*
14:34:44  36  Throws exceptions:
14:34:44  37  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  38  */
14:34:44  39  	out_result_set	    OUT SYS_REFCURSOR,
14:34:44  40  	in_row_number	    IN NUMBER DEFAULT NULL
14:34:44  41  );
14:34:44  42  
14:34:44  43  PROCEDURE GET_UNPROCESSED_CHARGES (
14:34:44  44  /*
14:34:44  45  Throws exceptions:
14:34:44  46  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  47  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  48  */
14:34:44  49  	in_invoice_id  IN NUMBER,
14:34:44  50  	out_result_set OUT SYS_REFCURSOR
14:34:44  51  );
14:34:44  52  
14:34:44  53  PROCEDURE GET_PROCESSED_CHARGES (
14:34:44  54  /*
14:34:44  55  Throws exceptions:
14:34:44  56  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  57  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  58  */
14:34:44  59  	in_invoice_id  IN NUMBER,
14:34:44  60  	out_result_set OUT SYS_REFCURSOR
14:34:44  61  );
14:34:44  62  
14:34:44  63  PROCEDURE GET_TRNSCTN_ATTEMPTS_BY_STATUS (
14:34:44  64  /*
14:34:44  65  Throws exceptions:
14:34:44  66  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  67  */
14:34:44  68  	in_transaction_id	      IN NUMBER,
14:34:44  69  	in_transaction_attempt_status IN NUMBER,
14:34:44  70  	out_result_set		      OUT SYS_REFCURSOR
14:34:44  71  );
14:34:44  72  
14:34:44  73  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_STATUS (
14:34:44  74  /*
14:34:44  75  Throws exceptions:
14:34:44  76  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  77  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  78  */
14:34:44  79  	in_transaction_attempt_id     IN NUMBER,
14:34:44  80  	in_transaction_attempt_status IN NUMBER
14:34:44  81  );
14:34:44  82  
14:34:44  83  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_TIME (
14:34:44  84  /*
14:34:44  85  Throws exceptions:
14:34:44  86  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  87  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  88  */
14:34:44  89  	in_transaction_attempt_id IN NUMBER,
14:34:44  90  	in_updated_by		  IN VARCHAR2
14:34:44  91  );
14:34:44  92  
14:34:44  93  PROCEDURE CREATE_TRANSACTION_ATTEMPT (
14:34:44  94  /*
14:34:44  95  Throws exceptions:
14:34:44  96  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  97  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  98  */
14:34:44  99  	in_transaction_id	   IN NUMBER,
14:34:44 100  	in_trans_attempt_status    IN NUMBER,
14:34:44 101  	in_external_status_code    IN VARCHAR2,
14:34:44 102  	in_external_status_message IN VARCHAR2,
14:34:44 103  	in_created_by		   IN VARCHAR2,
14:34:44 104  	in_ext_transaction_id	   IN VARCHAR2,
14:34:44 105  	out_transaction_attempt_id OUT NUMBER
14:34:44 106  );
14:34:44 107  
14:34:44 108  PROCEDURE UPDATE_TRANSACTION_ATTEMPT_INF (
14:34:44 109  /*
14:34:44 110  Throws exceptions:
14:34:44 111  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 112  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 113  */
14:34:44 114  	in_transaction_attempt_id IN NUMBER,
14:34:44 115  	in_ext_status_code	  IN VARCHAR2,
14:34:44 116  	in_ext_status_message	  IN VARCHAR2,
14:34:44 117  	in_ext_transaction_id	  IN VARCHAR2
14:34:44 118  );
14:34:44 119  
14:34:44 120  PROCEDURE UPDATE_TRANSACTION_STATUS (
14:34:44 121  /*
14:34:44 122  Throws exceptions:
14:34:44 123  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 124  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 125  */
14:34:44 126  	in_transaction_id	 IN NUMBER,
14:34:44 127  	in_updated_by		 IN VARCHAR2,
14:34:44 128  	in_transaction_status_id IN NUMBER
14:34:44 129  );
14:34:44 130  
14:34:44 131  PROCEDURE GET_FAILED_ATTEMPTS_NUMBER (
14:34:44 132  /*
14:34:44 133  Throws exceptions:
14:34:44 134  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 135  */
14:34:44 136  	in_transaction_id IN  NUMBER,
14:34:44 137  	out_attempts_num  OUT NUMBER
14:34:44 138  );
14:34:44 139  
14:34:44 140  PROCEDURE IS_TRANSACTION_SUCCESSFULL (
14:34:44 141  /*
14:34:44 142  Throws exceptions:
14:34:44 143  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 144  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 145  */
14:34:44 146  	in_transaction_id IN  NUMBER,
14:34:44 147  	out_is_successfull  OUT NUMBER
14:34:44 148  );
14:34:44 149  
14:34:44 150  PROCEDURE UPDATE_INVOICE_STATUS (
14:34:44 151  /*
14:34:44 152  Throws exceptions:
14:34:44 153  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 154  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 155  */
14:34:44 156  	in_invoice_id		       IN NUMBER,
14:34:44 157  	in_invoice_status_id	       IN NUMBER,
14:34:44 158  	in_updated_by		       IN VARCHAR2
14:34:44 159  );
14:34:44 160  
14:34:44 161  PROCEDURE SUSPEND_SUBSCRIPTION(
14:34:44 162  /*
14:34:44 163  Throws exceptions:
14:34:44 164  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 165  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44 166  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 167  */
14:34:44 168  	  in_subs_id	IN NUMBER ,
14:34:44 169  	  in_updated_by IN VARCHAR2
14:34:44 170  );
14:34:44 171  
14:34:44 172  PROCEDURE GET_CREDIT_CARD_BY_ID (
14:34:44 173  /*
14:34:44 174  Throws exceptions:
14:34:44 175  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 176  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 177  */
14:34:44 178  	in_credit_card_id IN  NUMBER,
14:34:44 179  	out_result_set	  OUT SYS_REFCURSOR
14:34:44 180  );
14:34:44 181  
14:34:44 182  PROCEDURE GET_TRANSACTION_AMOUNT (
14:34:44 183  /*
14:34:44 184  Throws exceptions:
14:34:44 185  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 186  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 187  */
14:34:44 188  	in_transaction_id      IN  NUMBER,
14:34:44 189  	out_transaction_amount OUT NUMBER
14:34:44 190  );
14:34:44 191  
14:34:44 192  PROCEDURE GET_ACCOUNT_BY_INVOICE_ID (
14:34:44 193  /*
14:34:44 194  Throws exceptions:
14:34:44 195  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 196  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 197  */
14:34:44 198  	in_invoice_id  IN  NUMBER,
14:34:44 199  	out_account_id OUT NUMBER
14:34:44 200  );
14:34:44 201  
14:34:44 202  PROCEDURE GET_GIFT_CERTIFICATE_BY_ID (
14:34:44 203  /*
14:34:44 204  Throws exceptions:
14:34:44 205  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:44 206  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 207  */
14:34:44 208  	in_gift_certificate_id IN NUMBER,
14:34:44 209  	out_result_set	       OUT SYS_REFCURSOR
14:34:44 210  );
14:34:44 211  
14:34:44 212  PROCEDURE GET_SUBSCR_ID_BY_CHARGE_ID (
14:34:44 213  /*
14:34:44 214  Throws exceptions:
14:34:44 215  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 216  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 217  */
14:34:44 218  	in_charge_id	    IN NUMBER,
14:34:44 219  	out_subscription_id OUT NUMBER
14:34:44 220  );
14:34:44 221  
14:34:44 222  PROCEDURE IS_GCERT_FOR_PROPER_OFFER (
14:34:44 223  /*
14:34:44 224  Throws exceptions:
14:34:44 225  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 226  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 227  */
14:34:44 228  	in_gift_certificate_id IN NUMBER,
14:34:44 229  	in_charge_id	       IN NUMBER,
14:34:44 230  	out_result	       OUT NUMBER
14:34:44 231  );
14:34:44 232  
14:34:44 233  PROCEDURE GET_SUBSCRIPTION_INFO (
14:34:44 234  /*
14:34:44 235  Throws exceptions:
14:34:44 236  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 237  */
14:34:44 238  	  in_subscription_id IN  NUMBER,
14:34:44 239  	  out_result_set      OUT SYS_REFCURSOR
14:34:44 240  );
14:34:44 241  
14:34:44 242  PROCEDURE CALCULATE_INVOICE_AMOUNT (
14:34:44 243  /*
14:34:44 244  Throws exceptions:
14:34:44 245  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 246  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 247  */
14:34:44 248  	in_invoice_id IN  NUMBER,
14:34:44 249  	out_amount    OUT NUMBER
14:34:44 250  );
14:34:44 251  
14:34:44 252  PROCEDURE GET_TRANSACTION_BY_ID (
14:34:44 253  /*
14:34:44 254  Throws exceptions:
14:34:44 255  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 256  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 257  */
14:34:44 258  	in_transaction_id IN NUMBER,
14:34:44 259  	out_result_set	  OUT SYS_REFCURSOR
14:34:44 260  );
14:34:44 261  
14:34:44 262  PROCEDURE UPDATE_CHARGE_STATUS (
14:34:44 263  /*
14:34:44 264  Throws exceptions:
14:34:44 265  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 266  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 267  */
14:34:44 268  	in_charge_id	    IN CHARGE.ID%TYPE,
14:34:44 269  	in_charge_status_id IN CHARGE.CHARGE_STATUS_ID%TYPE,
14:34:44 270  	in_updated_by	    IN CHARGE.UPDATED_BY%TYPE
14:34:44 271  );
14:34:44 272  
14:34:44 273  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
14:34:44 274  	in_invoice_id		IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:44 275  	out_result_set OUT SYS_REFCURSOR
14:34:44 276  );
14:34:44 277  
14:34:44 278  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
14:34:44 279  /*
14:34:44 280  Throws exceptions:
14:34:44 281  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 282  APP_EXCEPTION_CODES_V18.INTRNAL_ERROR
14:34:44 283  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 284  */
14:34:44 285  	in_transaction_id IN TRANSACTION.ID%TYPE,
14:34:44 286  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
14:34:44 287  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
14:34:44 288  );
14:34:44 289  PROCEDURE GET_CLOSED_REFUNDS_BY_INVOICE (
14:34:44 290  /*
14:34:44 291  Throws exceptions:
14:34:44 292  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 293  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 294  */
14:34:44 295  	in_invoice_id	IN  NUMBER,
14:34:44 296  	out_result_set OUT SYS_REFCURSOR
14:34:44 297  );
14:34:44 298  PROCEDURE GET_ACTIVE_INVOICES_IDS (
14:34:44 299  /*
14:34:44 300  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 301  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 302  */
14:34:44 303  --  in_subscription_id IN SUBSCRIPTION.ID%TYPE,
14:34:44 304  	in_subscription_id IN NUMBER,
14:34:44 305  	out_result_set	   OUT SYS_REFCURSOR
14:34:44 306  );
14:34:44 307  PROCEDURE CANCEL_SUBSCRIPTION_INVOICE (
14:34:44 308  /*
14:34:44 309  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 310  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 311  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44 312  */
14:34:44 313  --  in_invoice_id        IN INVOICE.ID%TYPE,
14:34:44 314  --  in_updated_by        IN INVOICE.UPDATED_BY%TYPE,
14:34:44 315  -- norlov: in_refundable	      IN refund enabled
14:34:44 316  	in_invoice_id	     IN NUMBER,
14:34:44 317  	in_updated_by	     IN VARCHAR2,
14:34:44 318  	in_refundable	     IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.FALSE
14:34:44 319  --  in_cancellation_date IN DATE DEFAULT current_timestamp
14:34:44 320  );
14:34:44 321  
14:34:44 322  PROCEDURE FINALIZE_CANCELATION (
14:34:44 323  /*
14:34:44 324  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 325  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 326  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44 327  */
14:34:44 328  --  in_subscription_id	IN SUBSCRIPTION.ID%TYPE,
14:34:44 329  --  in_cancelation_reason IN SUBSCRIPTION_CANCEL_REASON.VALUE%TYPE,
14:34:44 330  --  in_cancelation_date	IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
14:34:44 331  --  in_note		IN SUBSCRIPTION_NOTE.NOTE%TYPE,
14:34:44 332  --  in_agent_id		IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
14:34:44 333  --  in_updated_by 	IN SUBSCRIPTION.UPDATED_BY%TYPE
14:34:44 334  	in_subscription_id    IN NUMBER,
14:34:44 335  	in_cancelation_reason IN VARCHAR2,
14:34:44 336  	in_cancelation_date   IN DATE,
14:34:44 337  	in_note 	      IN VARCHAR2,
14:34:44 338  	in_agent_id	      IN NUMBER,
14:34:44 339  	in_updated_by	      IN VARCHAR2
14:34:44 340  );
14:34:44 341  PROCEDURE GET_SUBSCR_PROD_OFFERRINGS (
14:34:44 342  /*
14:34:44 343  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 344  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 345  */
14:34:44 346  	in_subscription_id IN NUMBER,
14:34:44 347  	out_result_set	   OUT SYS_REFCURSOR
14:34:44 348  );
14:34:44 349  PROCEDURE GET_OFFER_CHAIN_META_DATA (
14:34:44 350  /*
14:34:44 351  Throws exceptions (codes):
14:34:44 352  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 353  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 354  */
14:34:44 355  	in_offer_chain_id IN NUMBER,
14:34:44 356  	in_meta_data_name IN VARCHAR2,
14:34:44 357  	out_result_set	  OUT SYS_REFCURSOR
14:34:44 358  );
14:34:44 359  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
14:34:44 360  /*
14:34:44 361  Throws exceptions (codes):
14:34:44 362  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 363  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 364  */
14:34:44 365  	in_product_offering_id IN NUMBER,
14:34:44 366  	in_meta_data_name      IN VARCHAR2 DEFAULT NULL,
14:34:44 367  	out_result_set	       OUT SYS_REFCURSOR
14:34:44 368  );
14:34:44 369  PROCEDURE READ_ACCOUNT (
14:34:44 370  	in_account_id  IN ACCOUNT.ID%TYPE,
14:34:44 371  	out_result_set OUT SYS_REFCURSOR
14:34:44 372  );
14:34:44 373  
14:34:44 374  PROCEDURE GET_COLLECTED_CHARGES (
14:34:44 375  /*
14:34:44 376  Throws exceptions:
14:34:44 377  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 378  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 379  */
14:34:44 380  	in_invoice_id  IN NUMBER,
14:34:44 381  	out_result_set OUT SYS_REFCURSOR
14:34:44 382  );
14:34:44 383  
14:34:44 384  PROCEDURE GET_GROUPS_ID_BY_INVOICE_ID (
14:34:44 385  /*
14:34:44 386  Throws exceptions:
14:34:44 387  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:44 388  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 389  */
14:34:44 390  	in_invoice_id IN NUMBER,
14:34:44 391  	out_group_ids OUT SYS_REFCURSOR
14:34:44 392  );
14:34:44 393  
14:34:44 394  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
14:34:44 395  /*
14:34:44 396  Throws exceptions:
14:34:44 397  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:44 398  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 399  */
14:34:44 400  	in_group_id IN NUMBER,
14:34:44 401  	out_account_id	OUT NUMBER
14:34:44 402  );
14:34:44 403  
14:34:44 404  PROCEDURE LOCK_ACCOUNT (
14:34:44 405  	in_group_id    IN NUMBER,
14:34:44 406  	in_lock_key    IN VARCHAR2,
14:34:44 407  	in_seconds_num IN NUMBER,
14:34:44 408  	in_created_by  IN VARCHAR2,
14:34:44 409  	in_reason      IN VARCHAR2
14:34:44 410  );
14:34:44 411  
14:34:44 412  PROCEDURE RELEASE_LOCK (
14:34:44 413  	in_group_id IN NUMBER,
14:34:44 414  	in_lock_key IN VARCHAR2
14:34:44 415  );
14:34:44 416  
14:34:44 417  PROCEDURE GET_PAYMENT_INFO_BY_INVOICE_ID (
14:34:44 418  	in_invoice_id		    IN NUMBER,
14:34:44 419  	out_order_id		    OUT VARCHAR2,
14:34:44 420  	out_external_transaction_id OUT VARCHAR2
14:34:44 421  );
14:34:44 422  
14:34:44 423  PROCEDURE GET_PAYPAL_BY_ID (
14:34:44 424  	in_paypal_id   IN  NUMBER,
14:34:44 425  	out_result_set OUT SYS_REFCURSOR
14:34:44 426  );
14:34:44 427  
14:34:44 428  PROCEDURE GET_NEXT_ATTEMPT_NUMBER (
14:34:44 429  /*
14:34:44 430  Throws exceptions:
14:34:44 431  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 432  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 433  */
14:34:44 434  	in_charge_id   in  number,
14:34:44 435  	out_attempt_count out number
14:34:44 436  );
14:34:44 437  
14:34:44 438  PROCEDURE GET_NOTIFICATION_TYPE_ID (
14:34:44 439  	in_offer_chain_id	 IN NUMBER,
14:34:44 440  	in_action_name		 IN VARCHAR2,
14:34:44 441  	out_notification_type_id out number
14:34:44 442  );
14:34:44 443  
14:34:44 444  PROCEDURE SHOULD_MOVE_TO_GRACE(
14:34:44 445  	in_invoice_id  IN INVOICE.ID%TYPE,
14:34:44 446  	out_result     OUT NUMBER
14:34:44 447  );
14:34:44 448  
14:34:44 449  PROCEDURE MOVE_TO_GRACE(
14:34:44 450  	in_invoice_id		      IN INVOICE.ID%TYPE,
14:34:44 451  	in_updated_by		      IN LICENSE.UPDATED_BY%TYPE,
14:34:44 452  	in_grace_period_length_hours  IN NUMBER
14:34:44 453  );
14:34:44 454  
14:34:44 455  PROCEDURE MOVE_OUT_OF_GRACE(
14:34:44 456  	in_invoice_id	IN INVOICE.ID%TYPE,
14:34:44 457  	in_updated_by	IN LICENSE.UPDATED_BY%TYPE
14:34:44 458  );
14:34:44 459  
14:34:44 460  END PUBLIC_PROCS_BILLING_V18;
14:34:44 461  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.09
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PUBLIC_PROCS_CLIENT
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_CLIENT_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
14:34:44   4  /*
14:34:44   5  Throws exceptions:
14:34:44   6  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44   7  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44   8  */
14:34:44   9  	in_notification_type_name IN VARCHAR2,
14:34:44  10  	out_notification_type_id  OUT NUMBER
14:34:44  11  );
14:34:44  12  
14:34:44  13  PROCEDURE ADD_NOTIFICATION (
14:34:44  14  /*
14:34:44  15  Throws exceptions:
14:34:44  16  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  17  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  18  */
14:34:44  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
14:34:44  20  	in_recipient_group_id	 IN NUMBER,
14:34:44  21  	in_notification_type_id  IN NUMBER,
14:34:44  22  	in_date_to_notify	 IN DATE,
14:34:44  23  	in_email_template_params IN CLOB
14:34:44  24  );
14:34:44  25  
14:34:44  26  END PUBLIC_PROCS_CLIENT_V18;
14:34:44  27  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.02
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PUBLIC_PROCS_NOTIFICATION
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_NOTIFICATION_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE LOCK_ACCOUNT (
14:34:44   4  	in_group_id    IN NUMBER,
14:34:44   5  	in_lock_key    IN VARCHAR2,
14:34:44   6  	in_seconds_num IN NUMBER,
14:34:44   7  	in_created_by  IN VARCHAR2,
14:34:44   8  	in_reason      IN VARCHAR2
14:34:44   9  );
14:34:44  10  
14:34:44  11  PROCEDURE RELEASE_LOCK (
14:34:44  12  	in_group_id IN NUMBER,
14:34:44  13  	in_lock_key IN VARCHAR2
14:34:44  14  );
14:34:44  15  
14:34:44  16  END PUBLIC_PROCS_NOTIFICATION_V18;
14:34:44  17  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.03
14:34:44 SQL> 
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> -- DDL for package PUBLIC_PROCS_RENEWAL
14:34:44 SQL> --------------------------------------------------------------------------------
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_RENEWAL_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE SUB_EXPIRES_NEED_ENTITLEMENTS (
14:34:44   4  	out_result_set OUT SYS_REFCURSOR
14:34:44   5  );
14:34:44   6  
14:34:44   7  PROCEDURE UPDATE_SS_NEED_ENTITLEMENTS (
14:34:44   8  	in_sub_share_id      IN SUBSCRIPTION_SHARE.ID%TYPE,
14:34:44   9  	in_need_entitlements IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE,
14:34:44  10  	in_updater	     IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
14:34:44  11  );
14:34:44  12  
14:34:44  13  PROCEDURE GET_OFFER_CHAIN_BY_ID (
14:34:44  14  /*
14:34:44  15  Throws exceptions:
14:34:44  16  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  17  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  18  */
14:34:44  19  	  in_offer_chain_id IN	 NUMBER,
14:34:44  20  	  out_result_set    OUT  SYS_REFCURSOR
14:34:44  21  );
14:34:44  22  
14:34:44  23  PROCEDURE GET_UNREDEEMED_GCS (
14:34:44  24  	out_result_set		OUT SYS_REFCURSOR,
14:34:44  25  	in_hours_number 	IN NUMBER DEFAULT 14*24,
14:34:44  26  	in_num_rows		IN NUMBER DEFAULT 10000,
14:34:44  27  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
14:34:44  28  );
14:34:44  29  
14:34:44  30  PROCEDURE GET_SUBSCRIPTIONS_META_DATA (
14:34:44  31  /*
14:34:44  32  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:44  33  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  34  */
14:34:44  35  	in_subscriptions_ids IN core_owner.NUMBER_TABLE,
14:34:44  36  	out_result_set	     OUT SYS_REFCURSOR
14:34:44  37  );
14:34:44  38  
14:34:44  39  PROCEDURE GET_ALL_OCH_META_DATA (
14:34:44  40  	in_offer_chain_id IN NUMBER,
14:34:44  41  	out_result_set	  OUT SYS_REFCURSOR
14:34:44  42  );
14:34:44  43  
14:34:44  44  PROCEDURE GET_OFFER_CHAIN_META_DATA (
14:34:44  45  /*
14:34:44  46  Throws exceptions (codes):
14:34:44  47  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  48  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  49  */
14:34:44  50  	in_offer_chain_id IN NUMBER,
14:34:44  51  	in_meta_data_name IN VARCHAR2,
14:34:44  52  	out_result_set	  OUT SYS_REFCURSOR
14:34:44  53  );
14:34:44  54  
14:34:44  55  PROCEDURE GET_ENDING_LICENSES (
14:34:44  56  /*
14:34:44  57  Throws exceptions:
14:34:44  58  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  59  */
14:34:44  60  	in_hours_number IN NUMBER,
14:34:44  61  	out_result_set OUT SYS_REFCURSOR
14:34:44  62  );
14:34:44  63  
14:34:44  64  PROCEDURE GET_ENDING_LICENSES_CC (
14:34:44  65  /*
14:34:44  66  Throws exceptions:
14:34:44  67  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  68  */
14:34:44  69  	in_hours_number IN NUMBER,
14:34:44  70  	out_result_set OUT SYS_REFCURSOR,
14:34:44  71  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
14:34:44  72  );
14:34:44  73  
14:34:44  74  /************************************************/
14:34:44  75  
14:34:44  76  PROCEDURE GET_RECURRING_OFFER (
14:34:44  77  /*
14:34:44  78  Throws exceptions:
14:34:44  79  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  80  */
14:34:44  81  	in_license_id  IN NUMBER,
14:34:44  82  	out_result_set OUT SYS_REFCURSOR
14:34:44  83  );
14:34:44  84  
14:34:44  85  /*************************************************/
14:34:44  86  
14:34:44  87  PROCEDURE GET_NEXT_OFFER (
14:34:44  88  /*
14:34:44  89  Throws exceptions:
14:34:44  90  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44  91  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44  92  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44  93  */
14:34:44  94  	in_license_id  IN NUMBER,
14:34:44  95  	out_result_set OUT SYS_REFCURSOR
14:34:44  96  );
14:34:44  97  
14:34:44  98  /**************************************************/
14:34:44  99  
14:34:44 100  PROCEDURE UPDATE_LICENSE_STATUS(
14:34:44 101  /*
14:34:44 102  Throws exceptions:
14:34:44 103  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 104  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 105  */
14:34:44 106  	  in_license_id     IN NUMBER,
14:34:44 107  	  in_license_status IN NUMBER,
14:34:44 108  	  in_updated_by     IN VARCHAR2
14:34:44 109  );
14:34:44 110  
14:34:44 111  /***************************************************/
14:34:44 112  
14:34:44 113  PROCEDURE UPDATE_INVOICE_STATUS (
14:34:44 114  /*
14:34:44 115  Throws exceptions:
14:34:44 116  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 117  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 118  */
14:34:44 119  	in_invoice_id		       IN NUMBER,
14:34:44 120  	in_invoice_status_id	       IN NUMBER,
14:34:44 121  	in_updated_by		       IN VARCHAR2
14:34:44 122  );
14:34:44 123  
14:34:44 124  /***************************************************/
14:34:44 125  
14:34:44 126  PROCEDURE CREATE_LICENSE(
14:34:44 127  /*
14:34:44 128  Throws exceptions:
14:34:44 129  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 130  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 131  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:44 132  */
14:34:44 133  	in_status_id		    IN NUMBER,
14:34:44 134  	in_needs_entitlements	    IN NUMBER,
14:34:44 135  	in_start_date		    IN DATE,
14:34:44 136  	in_end_date		    IN DATE,
14:34:44 137  	in_offer_id		    IN NUMBER,
14:34:44 138  	in_subscription_id	    IN NUMBER,
14:34:44 139  	in_invoice_id		    IN NUMBER,
14:34:44 140  	in_created_by		    IN VARCHAR2,
14:34:44 141  	in_is_extension 	    IN NUMBER,
14:34:44 142  	in_current_offer_index	    IN NUMBER,
14:34:44 143  	in_current_offer_recurr_num IN NUMBER,
14:34:44 144  	out_license_id		    OUT NUMBER
14:34:44 145  );
14:34:44 146  
14:34:44 147  /**************************************************/
14:34:44 148  
14:34:44 149  PROCEDURE CREATE_INVOICE(
14:34:44 150  /*
14:34:44 151  Throws exceptions:
14:34:44 152  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 153  */
14:34:44 154  	  in_invoice_status IN NUMBER,
14:34:44 155  	  in_created_by     IN VARCHAR2,
14:34:44 156  	  in_tax_exempt_id  IN VARCHAR2,
14:34:44 157  	  out_invoice_id    OUT NUMBER
14:34:44 158  );
14:34:44 159  
14:34:44 160  /*****************************************************/
14:34:44 161  
14:34:44 162  PROCEDURE CREATE_CHARGE(
14:34:44 163  /*
14:34:44 164  Throws exceptions:
14:34:44 165  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 166  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 167  */
14:34:44 168  	in_invoice_id	      IN NUMBER,
14:34:44 169  	in_transaction_id     IN NUMBER,
14:34:44 170  	in_instrument_type_id IN NUMBER,
14:34:44 171  	in_instrument_id      IN NUMBER,
14:34:44 172  	in_charge_amount      IN NUMBER,
14:34:44 173  	in_created_by	      IN VARCHAR2,
14:34:44 174  	in_charge_status_id   IN NUMBER,
14:34:44 175  	out_charge_id	      OUT NUMBER
14:34:44 176  );
14:34:44 177  
14:34:44 178  /*****************************************************/
14:34:44 179  
14:34:44 180  PROCEDURE HAS_FUTURE_LICENSE (
14:34:44 181  /*
14:34:44 182  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 183  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 184  --
14:34:44 185  RETURNS:
14:34:44 186  1 - if has,
14:34:44 187  0 - else
14:34:44 188  */
14:34:44 189  	in_license_id IN NUMBER,
14:34:44 190  	out_result	   OUT NUMBER
14:34:44 191  );
14:34:44 192  
14:34:44 193  /*****************************************************/
14:34:44 194  
14:34:44 195  PROCEDURE GET_GROUP_ID_BY_LICENSE_ID (
14:34:44 196  /*
14:34:44 197  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 198  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 199  */
14:34:44 200  	in_license_id IN NUMBER,
14:34:44 201  	out_group_id  OUT NUMBER
14:34:44 202  );
14:34:44 203  
14:34:44 204  /*****************************************************/
14:34:44 205  
14:34:44 206  PROCEDURE GET_OFFER_PRODUCTS (
14:34:44 207  /*
14:34:44 208  Throws exceptions (codes):
14:34:44 209  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 210  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 211  */
14:34:44 212  	in_offer_id    IN NUMBER,
14:34:44 213  	out_result_set OUT SYS_REFCURSOR
14:34:44 214  );
14:34:44 215  
14:34:44 216  /*******************************************************/
14:34:44 217  
14:34:44 218  PROCEDURE CREATE_TRANSACTION (
14:34:44 219  /*
14:34:44 220  Throws exceptions:
14:34:44 221  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 222  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 223  */
14:34:44 224  	in_transaction_id	  IN NUMBER,
14:34:44 225  	in_status_id		  IN NUMBER,
14:34:44 226  	in_amount		  IN NUMBER,
14:34:44 227  	in_created_by		  IN VARCHAR2,
14:34:44 228  	in_order_id		  IN VARCHAR2,
14:34:44 229  	in_transaction_type_code  IN VARCHAR2 DEFAULT NULL,
14:34:44 230  	out_transaction_id	  OUT NUMBER
14:34:44 231  );
14:34:44 232  
14:34:44 233  /*********************************************************/
14:34:44 234  
14:34:44 235  PROCEDURE ADD_LINE_ITEMS(
14:34:44 236  /*
14:34:44 237  Throws exceptions:
14:34:44 238  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 239  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 240  */
14:34:44 241  	in_invoice_id IN NUMBER,
14:34:44 242  	in_offer_id   IN NUMBER,
14:34:44 243  	in_created_by IN VARCHAR2
14:34:44 244  );
14:34:44 245  
14:34:44 246  /**********************************************************/
14:34:44 247  
14:34:44 248  PROCEDURE CALCULATE_INVOICE_AMOUNT (
14:34:44 249  /*
14:34:44 250  Throws exceptions:
14:34:44 251  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 252  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 253  */
14:34:44 254  	in_invoice_id IN  NUMBER,
14:34:44 255  	out_amount    OUT NUMBER
14:34:44 256  );
14:34:44 257  
14:34:44 258  /*********************************************************/
14:34:44 259  
14:34:44 260  PROCEDURE RESERVE_TRANSACTION_ID (
14:34:44 261  /*
14:34:44 262  Throws exceptions:
14:34:44 263  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 264  */
14:34:44 265  	out_transaction_id OUT NUMBER
14:34:44 266  );
14:34:44 267  
14:34:44 268  /**********************************************************/
14:34:44 269  
14:34:44 270  PROCEDURE P_GET_NEXT_OFFER_INDEX (
14:34:44 271  	in_offer_chain_id	     IN NUMBER,
14:34:44 272  	in_offer_chain_current_index IN NUMBER,
14:34:44 273  	out_next_offer_index	     OUT NUMBER
14:34:44 274  );
14:34:44 275  
14:34:44 276  /***********************************************************/
14:34:44 277  
14:34:44 278  PROCEDURE GET_NEXT_OFFER_INDEX_BY_LCNS (
14:34:44 279  	in_license_id		     IN NUMBER,
14:34:44 280  	in_offer_chain_current_index IN NUMBER,
14:34:44 281  	out_next_offer_index	     OUT NUMBER
14:34:44 282  );
14:34:44 283  
14:34:44 284  /**********************************************************/
14:34:44 285  
14:34:44 286  PROCEDURE GET_SUBSCRIPTION_INFO (
14:34:44 287  /*
14:34:44 288  Throws exceptions:
14:34:44 289  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 290  */
14:34:44 291  	  in_subscription_id IN  NUMBER,
14:34:44 292  	  out_result_set      OUT SYS_REFCURSOR
14:34:44 293  );
14:34:44 294  
14:34:44 295  /***********************************************************/
14:34:44 296  
14:34:44 297  PROCEDURE CLOSE_SUBSCRIPTION (
14:34:44 298  	in_subscription_id IN NUMBER,
14:34:44 299  	in_updated_by	   IN VARCHAR2
14:34:44 300  );
14:34:44 301  
14:34:44 302  /***********************************************************/
14:34:44 303  
14:34:44 304  PROCEDURE GET_NEED_ENTITLEMENTS_LICENSES (
14:34:44 305  	out_result_set OUT SYS_REFCURSOR
14:34:44 306  );
14:34:44 307  
14:34:44 308  /***********************************************************/
14:34:44 309  
14:34:44 310  PROCEDURE UPDATE_NEED_ENTITLEMENTS_FLAG (
14:34:44 311  	in_license_id	      IN NUMBER,
14:34:44 312  	in_needs_entitlements IN NUMBER,
14:34:44 313  	in_updated_by	      IN VARCHAR2
14:34:44 314  );
14:34:44 315  /***********************************************************/
14:34:44 316  PROCEDURE GET_PROD_OFFERINGS_BY_OFFER_ID (
14:34:44 317  	in_offer_id    IN NUMBER,
14:34:44 318  	out_result_set OUT SYS_REFCURSOR
14:34:44 319  );
14:34:44 320  /***********************************************************/
14:34:44 321  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
14:34:44 322  	in_product_offering_id IN NUMBER,
14:34:44 323  	in_meta_data_name      IN VARCHAR2 DEFAULT NULL,
14:34:44 324  	out_result_set	       OUT SYS_REFCURSOR
14:34:44 325  );
14:34:44 326  
14:34:44 327  PROCEDURE LOCK_ACCOUNT (
14:34:44 328  	in_group_id    IN NUMBER,
14:34:44 329  	in_lock_key    IN VARCHAR2,
14:34:44 330  	in_seconds_num IN NUMBER,
14:34:44 331  	in_created_by  IN VARCHAR2,
14:34:44 332  	in_reason      IN VARCHAR2
14:34:44 333  );
14:34:44 334  
14:34:44 335  PROCEDURE RELEASE_LOCK (
14:34:44 336  	in_group_id IN NUMBER,
14:34:44 337  	in_lock_key IN VARCHAR2
14:34:44 338  );
14:34:44 339  
14:34:44 340  PROCEDURE GET_INVOICE_LINE_ITEMS (
14:34:44 341  	in_invoice_id  IN NUMBER,
14:34:44 342  	out_result_set OUT SYS_REFCURSOR
14:34:44 343  );
14:34:44 344  
14:34:44 345  PROCEDURE ADD_TAX (
14:34:44 346  	in_tax_type_id		 IN NUMBER,
14:34:44 347  	in_calculated_amount	 IN NUMBER,
14:34:44 348  	in_created_by		 IN VARCHAR2,
14:34:44 349  	in_line_item_id 	 IN NUMBER,
14:34:44 350  	in_effective_rate	 IN VARCHAR2,
14:34:44 351  	in_taxable_amount	 IN NUMBER,
14:34:44 352  	in_tax_rule_id		 IN NUMBER,
14:34:44 353  	in_jurisdiction_level_id IN NUMBER,
14:34:44 354  	in_jurisdiction_name	 IN VARCHAR2,
14:34:44 355  	in_jurisdiction_id	 IN VARCHAR2,
14:34:44 356  	in_ext_tax_type 	 IN VARCHAR2,
14:34:44 357  	in_ext_result		 IN VARCHAR2,
14:34:44 358  	in_imposition_type	 IN VARCHAR2,
14:34:44 359  	in_imposition		 IN VARCHAR2
14:34:44 360  );
14:34:44 361  
14:34:44 362  PROCEDURE GET_CREDIT_CARD_BY_ID (
14:34:44 363  	in_credit_card_id IN  NUMBER,
14:34:44 364  	out_result_set	  OUT SYS_REFCURSOR
14:34:44 365  );
14:34:44 366  
14:34:44 367  PROCEDURE GET_PRD_OFFERING_BY_LINE_IT_ID (
14:34:44 368  	in_line_item_id IN NUMBER,
14:34:44 369  	out_result_set	OUT SYS_REFCURSOR
14:34:44 370  );
14:34:44 371  
14:34:44 372  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
14:34:44 373  /*
14:34:44 374  Throws exceptions:
14:34:44 375  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:44 376  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 377  */
14:34:44 378  	in_group_id IN NUMBER,
14:34:44 379  	out_account_id	OUT NUMBER
14:34:44 380  );
14:34:44 381  
14:34:44 382  PROCEDURE GET_LINE_ITEM_DISCOUNTS (
14:34:44 383  /*
14:34:44 384  Throws exceptions:
14:34:44 385  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:44 386  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 387  */
14:34:44 388  	in_line_item_id IN  NUMBER,
14:34:44 389  	out_result_set	OUT SYS_REFCURSOR
14:34:44 390  );
14:34:44 391  
14:34:44 392  PROCEDURE UPDATE_LINE_ITEM_AMOUNT (
14:34:44 393  	in_line_item_id    IN NUMBER,
14:34:44 394  	in_amount	   IN NUMBER,
14:34:44 395  	in_discount_amount IN NUMBER,
14:34:44 396  	in_taxes_amount    IN NUMBER
14:34:44 397  );
14:34:44 398  
14:34:44 399  PROCEDURE GET_PAYPAL_BY_ID (
14:34:44 400  	in_paypal_id   IN  NUMBER,
14:34:44 401  	out_result_set OUT SYS_REFCURSOR
14:34:44 402  );
14:34:44 403  
14:34:44 404  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
14:34:44 405  	in_invoice_id		IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:44 406  	out_result_set OUT SYS_REFCURSOR
14:34:44 407  );
14:34:44 408  
14:34:44 409  PROCEDURE GET_LICENSE_BY_ID (
14:34:44 410  	in_license_id  IN NUMBER,
14:34:44 411  	out_result_set OUT SYS_REFCURSOR
14:34:44 412  );
14:34:44 413  
14:34:44 414  PROCEDURE GET_NOTIFICATION_TYPE_ID (
14:34:44 415  	in_offer_chain_id	 IN NUMBER,
14:34:44 416  	in_action_name		 IN VARCHAR2,
14:34:44 417  	out_notification_type_id OUT NUMBER
14:34:44 418  );
14:34:44 419  
14:34:44 420  PROCEDURE GET_OFFER_CHAIN_MD_VALUE (
14:34:44 421  	in_offer_chain_id IN NUMBER,
14:34:44 422  	in_meta_data_name IN VARCHAR2,
14:34:44 423  	out_value	  OUT VARCHAR2
14:34:44 424  );
14:34:44 425  
14:34:44 426  PROCEDURE GET_ACT_SUBS_W_CPT_CHARGEBACKS (
14:34:44 427  	out_result_set	    OUT SYS_REFCURSOR
14:34:44 428  );
14:34:44 429  
14:34:44 430  PROCEDURE GET_ACT_SUBS_W_PP_CHARGEBACKS (
14:34:44 431  	out_result_set	    OUT SYS_REFCURSOR
14:34:44 432  );
14:34:44 433  
14:34:44 434  PROCEDURE GET_ACT_SUBS_W_AMEX_CB (
14:34:44 435  	out_result_set	    OUT SYS_REFCURSOR
14:34:44 436  );
14:34:44 437  
14:34:44 438  PROCEDURE GET_GRACE_PERIOD_SUB_REGIS (
14:34:44 439  	in_max_days_until_close IN NUMBER,
14:34:44 440  	in_num_subs_to_fetch	IN NUMBER,
14:34:44 441  	out_result_set		OUT SYS_REFCURSOR
14:34:44 442  );
14:34:44 443  
14:34:44 444  PROCEDURE GET_GRACE_LICE_FOR_FINAL_TRANS (
14:34:44 445  	in_days_before_close	 IN NUMBER,
14:34:44 446  	in_num_licenses_to_fetch IN NUMBER,
14:34:44 447  	out_result_set		 OUT SYS_REFCURSOR
14:34:44 448  );
14:34:44 449  
14:34:44 450  END PUBLIC_PROCS_RENEWAL_V18;
14:34:44 451  .
14:34:44 SQL> /

Package created.

Elapsed: 00:00:00.10
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ACCOUNT_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_ACCOUNT (
14:34:44   4  	out_account_id	      OUT ACCOUNT.ID%TYPE,
14:34:44   5  	in_account_status_id  IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE,
14:34:44   6  	in_suspend_date       IN ACCOUNT.SUSPEND_DATE%TYPE DEFAULT NULL,
14:34:44   7  	in_group_id	      IN ACCOUNT.GROUP_ID%TYPE,
14:34:44   8  	in_created_by	      IN ACCOUNT.CREATED_BY%TYPE,
14:34:44   9  	in_system_category_id IN ACCOUNT.SYSTEM_CATEGORY_ID%TYPE,
14:34:44  10  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
14:34:44  11  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE DEFAULT NULL
14:34:44  12  ) AS
14:34:44  13  -- VARIABLES
14:34:44  14  var_new_account_id ACCOUNT.ID%TYPE;
14:34:44  15  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:44  16  var_date DATE := SYSDATE;
14:34:44  17  BEGIN
14:34:44  18  	SELECT
14:34:44  19  	  ACC_ID_SEQ.nextVal into var_new_account_id
14:34:44  20  	FROM DUAL;
14:34:44  21  	INSERT INTO ACCOUNT (
14:34:44  22  	  ID,
14:34:44  23  	  ACCOUNT_STATUS_ID,
14:34:44  24  	  SUSPEND_DATE,
14:34:44  25  	  GROUP_ID,
14:34:44  26  	  CREATE_DATE,
14:34:44  27  	  CREATED_BY,
14:34:44  28  	  UPDATE_DATE,
14:34:44  29  	  UPDATED_BY,
14:34:44  30  	  SYSTEM_CATEGORY_ID,
14:34:44  31  	  INSTRUMENT_TYPE_ID,
14:34:44  32  	  INSTRUMENT_ID,
14:34:44  33  	  TAX_EXEMPT_ID
14:34:44  34  	) VALUES (
14:34:44  35  	  var_new_account_id,
14:34:44  36  	  in_account_status_id,
14:34:44  37  	  in_suspend_date,
14:34:44  38  	  in_group_id,
14:34:44  39  	  var_date,
14:34:44  40  	  in_created_by,
14:34:44  41  	  var_date,
14:34:44  42  	  in_created_by,
14:34:44  43  	  in_system_category_id,
14:34:44  44  	  in_instrument_type_id,
14:34:44  45  	  in_instrument_id,
14:34:44  46  	  NULL
14:34:44  47  	);
14:34:44  48  
14:34:44  49  	out_account_id := var_new_account_id;
14:34:44  50  END CREATE_ACCOUNT;
14:34:44  51  
14:34:44  52  /*************************************************************/
14:34:44  53  
14:34:44  54  PROCEDURE UPDATE_ACCOUNT (
14:34:44  55  	in_account_id	      IN ACCOUNT.ID%TYPE,
14:34:44  56  	in_account_status_id  IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE DEFAULT NULL,
14:34:44  57  	in_suspend_date       IN ACCOUNT.SUSPEND_DATE%TYPE DEFAULT NULL,
14:34:44  58  	in_updated_by	      IN ACCOUNT.UPDATED_BY%TYPE,
14:34:44  59  	in_system_category_id IN ACCOUNT.SYSTEM_CATEGORY_ID%TYPE DEFAULT NULL,
14:34:44  60  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
14:34:44  61  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE DEFAULT NULL
14:34:44  62  ) AS
14:34:44  63  BEGIN
14:34:44  64  
14:34:44  65  	-- CREATE HISTORY
14:34:44  66  	PROCS_HISTORY_V18.CREATE_ACCOUNT_HISTORY(
14:34:44  67  	  in_account_id 	       => in_account_id,
14:34:44  68  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:44  69  	);
14:34:44  70  
14:34:44  71  	UPDATE ACCOUNT SET
14:34:44  72  	  ACCOUNT_STATUS_ID  = NVL(in_account_status_id, ACCOUNT_STATUS_ID),
14:34:44  73  	  SUSPEND_DATE	     = NVL(in_suspend_date, SUSPEND_DATE),
14:34:44  74  	  UPDATED_BY	     = in_updated_by,
14:34:44  75  	  UPDATE_DATE	     = SYSDATE,
14:34:44  76  	  SYSTEM_CATEGORY_ID = NVL(in_system_category_id, SYSTEM_CATEGORY_ID),
14:34:44  77  	  INSTRUMENT_TYPE_ID = NVL(in_instrument_type_id, INSTRUMENT_TYPE_ID),
14:34:44  78  	  INSTRUMENT_ID      = NVL(in_instrument_id, INSTRUMENT_ID)
14:34:44  79  	WHERE
14:34:44  80  	  ACCOUNT.ID = in_account_id;
14:34:44  81  
14:34:44  82  END UPDATE_ACCOUNT;
14:34:44  83  
14:34:44  84  /*************************************************************/
14:34:44  85  
14:34:44  86  PROCEDURE UPDATE_DEF_FIN_INSTRUMENT(
14:34:44  87  	in_account_id	      IN ACCOUNT.ID%TYPE,
14:34:44  88  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE,
14:34:44  89  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE,
14:34:44  90  	in_updated_by	      IN ACCOUNT.UPDATED_BY%TYPE
14:34:44  91  ) AS
14:34:44  92  BEGIN
14:34:44  93  
14:34:44  94  	-- CREATE HISTORY
14:34:44  95  	PROCS_HISTORY_V18.CREATE_ACCOUNT_HISTORY(
14:34:44  96  	  in_account_id 	       => in_account_id,
14:34:44  97  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:44  98  	);
14:34:44  99  
14:34:44 100  	UPDATE ACCOUNT SET
14:34:44 101  	  INSTRUMENT_TYPE_ID = in_instrument_type_id,
14:34:44 102  	  INSTRUMENT_ID      = in_instrument_id
14:34:44 103  	WHERE
14:34:44 104  	  ACCOUNT.ID = in_account_id;
14:34:44 105  
14:34:44 106  END;
14:34:44 107  
14:34:44 108  /*************************************************************/
14:34:44 109  
14:34:44 110  PROCEDURE READ_ACCOUNT (
14:34:44 111  	in_account_id  IN ACCOUNT.ID%TYPE,
14:34:44 112  	out_result_set OUT SYS_REFCURSOR
14:34:44 113  ) AS
14:34:44 114  BEGIN
14:34:44 115  	OPEN out_result_set FOR
14:34:44 116  	SELECT
14:34:44 117  	  ACCOUNT_STATUS_ID,
14:34:44 118  	  SUSPEND_DATE,
14:34:44 119  	  GROUP_ID
14:34:44 120  	FROM
14:34:44 121  	  ACCOUNT
14:34:44 122  	WHERE
14:34:44 123  	  ID = in_account_id;
14:34:44 124  END READ_ACCOUNT;
14:34:44 125  
14:34:44 126  /*************************************************************/
14:34:44 127  
14:34:44 128  PROCEDURE CREATE_ACCOUNT_NOTE (
14:34:44 129  	inout_account_note_id IN OUT ACCOUNT_NOTE.ID%TYPE,
14:34:44 130  	in_agent_id	      IN ACCOUNT_NOTE.AGENT_ID%TYPE,
14:34:44 131  	in_account_id	      IN ACCOUNT_NOTE.ACCOUNT_ID%TYPE,
14:34:44 132  	in_note 	      IN ACCOUNT_NOTE.NOTE%TYPE,
14:34:44 133  	in_created_by	      IN ACCOUNT_NOTE.CREATED_BY%TYPE
14:34:44 134  ) AS
14:34:44 135  BEGIN
14:34:44 136  	IF inout_account_note_id IS NULL THEN
14:34:44 137  	  SELECT
14:34:44 138  	    ACCN_ID_SEQ.nextVal into inout_account_note_id
14:34:44 139  	  FROM DUAL;
14:34:44 140  	END IF;
14:34:44 141  	INSERT INTO ACCOUNT_NOTE(
14:34:44 142  	  ID,
14:34:44 143  	  AGENT_ID,
14:34:44 144  	  ACCOUNT_ID,
14:34:44 145  	  NOTE,
14:34:44 146  	  CREATE_DATE,
14:34:44 147  	  CREATED_BY
14:34:44 148  	) VALUES (
14:34:44 149  	  inout_account_note_id,
14:34:44 150  	  in_agent_id,
14:34:44 151  	  in_account_id,
14:34:44 152  	  in_note,
14:34:44 153  	  SYSDATE,
14:34:44 154  	  in_created_by
14:34:44 155  	);
14:34:44 156  END CREATE_ACCOUNT_NOTE;
14:34:44 157  
14:34:44 158  END PROCS_ACCOUNT_CRU_V18;
14:34:44 159  .
14:34:44 SQL> /

Package body created.

Elapsed: 00:00:00.04
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ADDRESS_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_ADDRESS(
14:34:44   4  	out_address_id	      OUT ADDRESS.ID%TYPE,
14:34:44   5  	in_address_id	      IN ADDRESS.ID%TYPE DEFAULT NULL,
14:34:44   6  	in_address1	      IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
14:34:44   7  	in_address2	      IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
14:34:44   8  	in_city 	      IN ADDRESS.CITY%TYPE DEFAULT NULL,
14:34:44   9  	in_state	      IN ADDRESS.STATE%TYPE DEFAULT NULL,
14:34:44  10  	in_postal_code	      IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:44  11  	in_country	      IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
14:34:44  12  	in_created_by	      IN ADDRESS.CREATED_BY%TYPE
14:34:44  13  ) AS
14:34:44  14  -- VARIABLES
14:34:44  15  var_address_id ADDRESS.ID%TYPE;
14:34:44  16  var_date DATE := SYSDATE;
14:34:44  17  BEGIN
14:34:44  18  	IF in_address_id IS NULL THEN
14:34:44  19  	  SELECT
14:34:44  20  	    ADDRESS_ID_SEQ.nextVal into var_address_id
14:34:44  21  	  FROM DUAL;
14:34:44  22  	ELSE
14:34:44  23  	  var_address_id := in_address_id;
14:34:44  24  	END IF;
14:34:44  25  	INSERT INTO
14:34:44  26  	  ADDRESS (
14:34:44  27  	    ID,
14:34:44  28  	    ADDRESS1,
14:34:44  29  	    ADDRESS2,
14:34:44  30  	    CITY,
14:34:44  31  	    STATE,
14:34:44  32  	    POSTAL_CODE,
14:34:44  33  	    COUNTRY,
14:34:44  34  	    CREATE_DATE,
14:34:44  35  	    CREATED_BY,
14:34:44  36  	    UPDATE_DATE,
14:34:44  37  	    UPDATED_BY
14:34:44  38  	  ) VALUES (
14:34:44  39  	    var_address_id,
14:34:44  40  	    in_address1,
14:34:44  41  	    in_address2,
14:34:44  42  	    in_city,
14:34:44  43  	    in_state,
14:34:44  44  	    in_postal_code,
14:34:44  45  	    in_country,
14:34:44  46  	    var_date,
14:34:44  47  	    in_created_by,
14:34:44  48  	    var_date,
14:34:44  49  	    in_created_by
14:34:44  50  	  );
14:34:44  51  
14:34:44  52  	out_address_id := var_address_id;
14:34:44  53  END CREATE_ADDRESS;
14:34:44  54  
14:34:44  55  PROCEDURE UPDATE_ADDRESS(
14:34:44  56  	in_address_id	      IN ADDRESS.ID%TYPE,
14:34:44  57  	in_address1	      IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
14:34:44  58  	in_address2	      IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
14:34:44  59  	in_city 	      IN ADDRESS.CITY%TYPE DEFAULT NULL,
14:34:44  60  	in_state	      IN ADDRESS.STATE%TYPE DEFAULT NULL,
14:34:44  61  	in_postal_code	      IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:44  62  	in_country	      IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
14:34:44  63  	in_updated_by	      IN ADDRESS.UPDATED_BY%TYPE
14:34:44  64  ) AS
14:34:44  65  BEGIN
14:34:44  66  
14:34:44  67  	-- Create history
14:34:44  68  	PROCS_HISTORY_V18.CREATE_ADDRESS_HISTORY(
14:34:44  69  	  in_address_id 		=> in_address_id,
14:34:44  70  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:44  71  	);
14:34:44  72  
14:34:44  73  	UPDATE
14:34:44  74  	  ADDRESS
14:34:44  75  	SET
14:34:44  76  	  ADDRESS1 = NVL(in_address1, ADDRESS1),
14:34:44  77  	  ADDRESS2 = NVL(in_address2, ADDRESS2),
14:34:44  78  	  CITY = NVL(in_city, CITY),
14:34:44  79  	  STATE = NVL(in_state, STATE),
14:34:44  80  	  POSTAL_CODE = NVL(in_postal_code, POSTAL_CODE),
14:34:44  81  	  COUNTRY = NVL(in_country, COUNTRY),
14:34:44  82  	  UPDATE_DATE = SYSDATE,
14:34:44  83  	  UPDATED_BY = in_updated_by
14:34:44  84  	WHERE
14:34:44  85  	  ID = in_address_id;
14:34:44  86  
14:34:44  87  END UPDATE_ADDRESS;
14:34:44  88  
14:34:44  89  END PROCS_ADDRESS_CRU_V18;
14:34:44  90  .
14:34:44 SQL> /

Package body created.

Elapsed: 00:00:00.02
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_AMAZON_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_AMAZON_SUB(
14:34:44   4  /*
14:34:44   5  Throws exceptions:
14:34:44   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44   7  */
14:34:44   8  	  out_id	      OUT NUMBER,
14:34:44   9  	  in_subscription_id  IN AMAZON_SUB.SUBSCRIPTION_ID%TYPE,
14:34:44  10  	  in_amazon_id	      IN AMAZON_SUB.AMAZON_ID%TYPE,
14:34:44  11  	  in_created_by       IN AMAZON_SUB.CREATED_BY%TYPE
14:34:44  12  ) AS
14:34:44  13  -- VARIABLES
14:34:44  14  SPROC_NAME	CONSTANT VARCHAR2(32) := 'CREATE_AMAZON_SUB';
14:34:44  15  var_current_date	DATE;
14:34:44  16  var_count 	NUMBER;
14:34:44  17  AMAZON_SUB_USED	EXCEPTION;
14:34:44  18  BEGIN
14:34:44  19  
14:34:44  20  	SELECT COUNT(1) INTO var_count
14:34:44  21  	FROM SUBSCRIPTION s, AMAZON_SUB am
14:34:44  22  	WHERE
14:34:44  23  	  am.AMAZON_ID = in_amazon_id
14:34:44  24  	  and am.subscription_id = s.id
14:34:44  25  	  and s.subscription_status_id = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE;
14:34:44  26  
14:34:44  27  	if var_count > 0 then
14:34:44  28  	  raise AMAZON_SUB_USED;
14:34:44  29  	end if;
14:34:44  30  
14:34:44  31  	SELECT
14:34:44  32  	  CORE_OWNER.AMAZON_SUB_ID_SEQ.NEXTVAL
14:34:44  33  	INTO
14:34:44  34  	  out_id
14:34:44  35  	FROM
14:34:44  36  	  dual
14:34:44  37  	;
14:34:44  38  
14:34:44  39  	SELECT
14:34:44  40  	  sysdate
14:34:44  41  	INTO
14:34:44  42  	  var_current_date
14:34:44  43  	FROM
14:34:44  44  	  dual
14:34:44  45  	;
14:34:44  46  
14:34:44  47  	INSERT INTO CORE_OWNER.AMAZON_SUB
14:34:44  48  	(
14:34:44  49  	  id,
14:34:44  50  	  subscription_id,
14:34:44  51  	  amazon_id,
14:34:44  52  	  create_date,
14:34:44  53  	  created_by,
14:34:44  54  	  update_date,
14:34:44  55  	  updated_by
14:34:44  56  	)
14:34:44  57  	VALUES
14:34:44  58  	(
14:34:44  59  	  out_id,
14:34:44  60  	  in_subscription_id,
14:34:44  61  	  in_amazon_id,
14:34:44  62  	  var_current_date,
14:34:44  63  	  in_created_by,
14:34:44  64  	  var_current_date,
14:34:44  65  	  in_created_by
14:34:44  66  	);
14:34:44  67  
14:34:44  68  EXCEPTION
14:34:44  69  WHEN AMAZON_SUB_USED THEN
14:34:44  70  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:44  71  	  SPROC_NAME, 'Amazon sub already used', SQLERRM);
14:34:44  72  WHEN DUP_VAL_ON_INDEX THEN
14:34:44  73  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:44  74  	  SPROC_NAME, 'Duplicate value', SQLERRM);
14:34:44  75  WHEN OTHERS THEN
14:34:44  76  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44  77  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:44  78  END CREATE_AMAZON_SUB;
14:34:44  79  
14:34:44  80  END PROCS_AMAZON_CRU_V18;
14:34:44  81  .
14:34:44 SQL> /

Package body created.

Elapsed: 00:00:00.03
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_CHARGE_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_CHARGE(
14:34:44   4  	out_charge_id	      OUT CHARGE.ID%TYPE,
14:34:44   5  	in_charge_id	      IN CHARGE.ID%TYPE DEFAULT NULL,
14:34:44   6  	in_invoice_id	      IN CHARGE.INVOICE_ID%TYPE,
14:34:44   7  	in_transaction_id     IN CHARGE.TRANSACTION_ID%TYPE DEFAULT NULL,
14:34:44   8  	in_instrument_type_id IN CHARGE.INSTRUMENT_TYPE_ID%TYPE,
14:34:44   9  	in_instrument_id      IN CHARGE.INSTRUMENT_ID%TYPE,
14:34:44  10  	in_charge_amount      IN CHARGE.CHARGE_AMOUNT%TYPE,
14:34:44  11  	in_charge_status_id   IN CHARGE.CHARGE_STATUS_ID%TYPE,
14:34:44  12  	in_created_by	      IN CHARGE.CREATED_BY%TYPE
14:34:44  13  ) AS
14:34:44  14  -- VARIABLES
14:34:44  15  var_charge_id CHARGE.ID%TYPE;
14:34:44  16  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:44  17  var_date DATE := SYSDATE;
14:34:44  18  BEGIN
14:34:44  19  	IF in_charge_id IS NULL THEN
14:34:44  20  	  SELECT
14:34:44  21  	    CRG_ID_SEQ.nextVal into var_charge_id
14:34:44  22  	  FROM DUAL;
14:34:44  23  	ELSE
14:34:44  24  	  var_charge_id := in_charge_id;
14:34:44  25  	END IF;
14:34:44  26  	INSERT INTO
14:34:44  27  	  CHARGE (
14:34:44  28  	    ID,
14:34:44  29  	    INVOICE_ID,
14:34:44  30  	    TRANSACTION_ID,
14:34:44  31  	    INSTRUMENT_TYPE_ID,
14:34:44  32  	    INSTRUMENT_ID,
14:34:44  33  	    CHARGE_AMOUNT,
14:34:44  34  	    CHARGE_STATUS_ID,
14:34:44  35  	    CREATE_DATE,
14:34:44  36  	    CREATED_BY,
14:34:44  37  	    UPDATE_DATE,
14:34:44  38  	    UPDATED_BY
14:34:44  39  	  ) VALUES (
14:34:44  40  	    var_charge_id,
14:34:44  41  	    in_invoice_id,
14:34:44  42  	    in_transaction_id,
14:34:44  43  	    in_instrument_type_id,
14:34:44  44  	    in_instrument_id,
14:34:44  45  	    in_charge_amount,
14:34:44  46  	    in_charge_status_id,
14:34:44  47  	    var_date,
14:34:44  48  	    in_created_by,
14:34:44  49  	    var_date,
14:34:44  50  	    in_created_by
14:34:44  51  	  );
14:34:44  52  
14:34:44  53  	out_charge_id := var_charge_id;
14:34:44  54  END CREATE_CHARGE;
14:34:44  55  
14:34:44  56  PROCEDURE UPDATE_CHARGE(
14:34:44  57  	in_charge_id	      IN CHARGE.ID%TYPE,
14:34:44  58  	in_instrument_type_id IN CHARGE.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
14:34:44  59  	in_instrument_id      IN CHARGE.INSTRUMENT_ID%TYPE DEFAULT NULL,
14:34:44  60  	in_charge_amount      IN CHARGE.CHARGE_AMOUNT%TYPE DEFAULT NULL,
14:34:44  61  	in_charge_status_id   IN CHARGE.CHARGE_STATUS_ID%TYPE DEFAULT NULL,
14:34:44  62  	in_updated_by	      IN CHARGE.UPDATED_BY%TYPE
14:34:44  63  ) AS
14:34:44  64  BEGIN
14:34:44  65  
14:34:44  66  	-- Create history
14:34:44  67  	PROCS_HISTORY_V18.CREATE_CHARGE_HISTORY(
14:34:44  68  	  in_charge_id		       => in_charge_id,
14:34:44  69  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:44  70  	);
14:34:44  71  
14:34:44  72  	UPDATE
14:34:44  73  	  CHARGE
14:34:44  74  	SET
14:34:44  75  	  INSTRUMENT_TYPE_ID = NVL(in_instrument_type_id, INSTRUMENT_TYPE_ID),
14:34:44  76  	  INSTRUMENT_ID      = NVL(in_instrument_id, INSTRUMENT_ID),
14:34:44  77  	  CHARGE_AMOUNT      = NVL(in_charge_amount, CHARGE_AMOUNT),
14:34:44  78  	  CHARGE_STATUS_ID   = NVL(in_charge_status_id, CHARGE_STATUS_ID),
14:34:44  79  	  UPDATE_DATE	     = SYSDATE,
14:34:44  80  	  UPDATED_BY	     = in_updated_by
14:34:44  81  	WHERE
14:34:44  82  	  ID = in_charge_id;
14:34:44  83  
14:34:44  84  END UPDATE_CHARGE;
14:34:44  85  
14:34:44  86  END PROCS_CHARGE_CRU_V18;
14:34:44  87  .
14:34:44 SQL> /

Package body created.

Elapsed: 00:00:00.02
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_FIN_INSTRUMENTS_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_CREDIT_CARD(
14:34:44   4  	out_credit_card_id	    OUT CREDIT_CARD.ID%TYPE,
14:34:44   5  	in_credit_card_id	    IN CREDIT_CARD.ID%TYPE DEFAULT NULL,
14:34:44   6  	in_account_id		    IN CREDIT_CARD.ACCOUNT_ID%TYPE,
14:34:44   7  	in_instrument_name	    IN CREDIT_CARD.INSTRUMENT_NAME%TYPE,
14:34:44   8  	in_private_card_holder_name IN CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME%TYPE,
14:34:44   9  	in_private_street_address   IN CREDIT_CARD.PRIVATE_STREET_ADDRESS%TYPE,
14:34:44  10  	in_private_street_address2  IN CREDIT_CARD.PRIVATE_STREET_ADDRESS2%TYPE DEFAULT NULL,
14:34:44  11  	in_state		    IN CREDIT_CARD.STATE%TYPE,
14:34:44  12  	in_city 		    IN CREDIT_CARD.CITY%TYPE,
14:34:44  13  	in_postal_code		    IN CREDIT_CARD.POSTAL_CODE%TYPE,
14:34:44  14  	in_country		    IN CREDIT_CARD.COUNTRY%TYPE,
14:34:44  15  	in_last_four_cc 	    IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
14:34:44  16  	in_expiration_date	    IN CREDIT_CARD.EXPIRATION_DATE%TYPE,
14:34:44  17  	in_credit_card_type_id	    IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE,
14:34:44  18  	in_secret_token 	    IN CREDIT_CARD.SECRET_TOKEN%TYPE,
14:34:44  19  	in_chase_profile_id		in CREDIT_CARD.CHASE_PROFILE_ID%TYPE,
14:34:44  20  	in_created_by		    IN CREDIT_CARD.CREATED_BY%TYPE,
14:34:44  21  	in_credit_card_status_id    IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE,
14:34:44  22  	in_private_first_name	    IN CREDIT_CARD.PRIVATE_FIRST_NAME%TYPE,
14:34:44  23  	in_private_last_name	    IN CREDIT_CARD.PRIVATE_LAST_NAME%TYPE
14:34:44  24  ) AS
14:34:44  25  -- VARIABLES
14:34:44  26  var_credit_card_id CREDIT_CARD.ID%TYPE;
14:34:44  27  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:44  28  var_date DATE := SYSDATE;
14:34:44  29  BEGIN
14:34:44  30  	IF in_credit_card_id IS NULL THEN
14:34:44  31  	  SELECT
14:34:44  32  	    CC_ID_SEQ.nextVal into var_credit_card_id
14:34:44  33  	  FROM DUAL;
14:34:44  34  	ELSE
14:34:44  35  	  var_credit_card_id := in_credit_card_id;
14:34:44  36  	END IF;
14:34:44  37  	INSERT INTO CREDIT_CARD(
14:34:44  38  	    ID,
14:34:44  39  	    ACCOUNT_ID,
14:34:44  40  	    INSTRUMENT_NAME,
14:34:44  41  	    PRIVATE_CARD_HOLDER_NAME,
14:34:44  42  	    PRIVATE_STREET_ADDRESS,
14:34:44  43  	    PRIVATE_STREET_ADDRESS2,
14:34:44  44  	    STATE,
14:34:44  45  	    CITY,
14:34:44  46  	    POSTAL_CODE,
14:34:44  47  	    COUNTRY,
14:34:44  48  	    LAST_FOUR_CC,
14:34:44  49  	    EXPIRATION_DATE,
14:34:44  50  	    CREDIT_CARD_TYPE_ID,
14:34:44  51  	    SECRET_TOKEN,
14:34:44  52  	    CHASE_PROFILE_ID,
14:34:44  53  	    CREATE_DATE,
14:34:44  54  	    CREATED_BY,
14:34:44  55  	    UPDATE_DATE,
14:34:44  56  	    UPDATED_BY,
14:34:44  57  	    CREDIT_CARD_STATUS_ID,
14:34:44  58  	    PRIVATE_FIRST_NAME,
14:34:44  59  	    PRIVATE_LAST_NAME
14:34:44  60  	  ) VALUES (
14:34:44  61  	    var_credit_card_id,
14:34:44  62  	    in_account_id,
14:34:44  63  	    in_instrument_name,
14:34:44  64  	    in_private_card_holder_name,
14:34:44  65  	    in_private_street_address,
14:34:44  66  	    in_private_street_address2,
14:34:44  67  	    in_state,
14:34:44  68  	    in_city,
14:34:44  69  	    in_postal_code,
14:34:44  70  	    in_country,
14:34:44  71  	    in_last_four_cc,
14:34:44  72  	    in_expiration_date,
14:34:44  73  	    in_credit_card_type_id,
14:34:44  74  	    in_secret_token,
14:34:44  75  	    in_chase_profile_id,
14:34:44  76  	    var_date,
14:34:44  77  	    in_created_by,
14:34:44  78  	    var_date,
14:34:44  79  	    in_created_by,
14:34:44  80  	    in_credit_card_status_id,
14:34:44  81  	    in_private_first_name,
14:34:44  82  	    in_private_last_name
14:34:44  83  	  );
14:34:44  84  
14:34:44  85  	out_credit_card_id := var_credit_card_id;
14:34:44  86  END CREATE_CREDIT_CARD;
14:34:44  87  
14:34:44  88  /******************************************************************************/
14:34:44  89  
14:34:44  90  PROCEDURE UPDATE_CREDIT_CARD(
14:34:44  91  	in_credit_card_id	    IN CREDIT_CARD.ID%TYPE,
14:34:44  92  	in_instrument_name	    IN CREDIT_CARD.INSTRUMENT_NAME%TYPE DEFAULT NULL,
14:34:44  93  	in_private_card_holder_name IN CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME%TYPE DEFAULT NULL,
14:34:44  94  	in_private_street_address   IN CREDIT_CARD.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
14:34:44  95  	in_private_street_address2  IN CREDIT_CARD.PRIVATE_STREET_ADDRESS2%TYPE DEFAULT NULL,
14:34:44  96  	in_state		    IN CREDIT_CARD.STATE%TYPE DEFAULT NULL,
14:34:44  97  	in_city 		    IN CREDIT_CARD.CITY%TYPE DEFAULT NULL,
14:34:44  98  	in_postal_code		    IN CREDIT_CARD.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:44  99  	in_country		    IN CREDIT_CARD.COUNTRY%TYPE DEFAULT NULL,
14:34:44 100  	in_last_four_cc 	    IN CREDIT_CARD.LAST_FOUR_CC%TYPE DEFAULT NULL,
14:34:44 101  	in_expiration_date	    IN CREDIT_CARD.EXPIRATION_DATE%TYPE DEFAULT NULL,
14:34:44 102  	in_credit_card_type_id	    IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE DEFAULT NULL,
14:34:44 103  	in_secret_token 	    IN CREDIT_CARD.SECRET_TOKEN%TYPE DEFAULT NULL,
14:34:44 104  	in_chase_profile_id	    IN CREDIT_CARD.CHASE_PROFILE_ID%TYPE DEFAULT NULL,
14:34:44 105  	in_updated_by		    IN CREDIT_CARD.UPDATED_BY%TYPE,
14:34:44 106  	in_credit_card_status_id    IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT NULL,
14:34:44 107  	in_private_first_name	    IN CREDIT_CARD.PRIVATE_FIRST_NAME%TYPE DEFAULT NULL,
14:34:44 108  	in_private_last_name	    IN CREDIT_CARD.PRIVATE_LAST_NAME%TYPE DEFAULT NULL
14:34:44 109  ) AS
14:34:44 110  BEGIN
14:34:44 111  
14:34:44 112  	-- Create history
14:34:44 113  	PROCS_HISTORY_V18.CREATE_CREDIT_CARD_HISTORY(
14:34:44 114  	  in_credit_card_id	       => in_credit_card_id,
14:34:44 115  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:44 116  	);
14:34:44 117  
14:34:44 118  	UPDATE CREDIT_CARD SET
14:34:44 119  	  INSTRUMENT_NAME	   = NVL(in_instrument_name, INSTRUMENT_NAME),
14:34:44 120  	  PRIVATE_CARD_HOLDER_NAME = NVL(in_private_card_holder_name, PRIVATE_CARD_HOLDER_NAME),
14:34:44 121  	  PRIVATE_STREET_ADDRESS   = NVL(in_private_street_address, PRIVATE_STREET_ADDRESS),
14:34:44 122  	  PRIVATE_STREET_ADDRESS2  = NVL(in_private_street_address, PRIVATE_STREET_ADDRESS2),
14:34:44 123  	  STATE 		   = NVL(in_state, STATE),
14:34:44 124  	  CITY			   = NVL(in_city, CITY),
14:34:44 125  	  POSTAL_CODE		   = NVL(in_postal_code, POSTAL_CODE),
14:34:44 126  	  COUNTRY		   = NVL(in_country, COUNTRY),
14:34:44 127  	  LAST_FOUR_CC		   = NVL(in_last_four_cc, LAST_FOUR_CC),
14:34:44 128  	  EXPIRATION_DATE	   = NVL(in_expiration_date, EXPIRATION_DATE),
14:34:44 129  	  CREDIT_CARD_TYPE_ID	   = NVL(in_credit_card_type_id, CREDIT_CARD_TYPE_ID),
14:34:44 130  	  SECRET_TOKEN		   = NVL(in_secret_token, SECRET_TOKEN),
14:34:44 131  	  CHASE_PROFILE_ID	   = NVL(in_chase_profile_id, CHASE_PROFILE_ID),
14:34:44 132  	  UPDATE_DATE		   = SYSDATE,
14:34:44 133  	  UPDATED_BY		   = in_updated_by,
14:34:44 134  	  CREDIT_CARD_STATUS_ID    = NVL(in_credit_card_status_id, CREDIT_CARD_STATUS_ID),
14:34:44 135  	  PRIVATE_FIRST_NAME	   = NVL(in_private_first_name, PRIVATE_FIRST_NAME),
14:34:44 136  	  PRIVATE_LAST_NAME	   = NVL(in_private_last_name, PRIVATE_LAST_NAME)
14:34:44 137  	WHERE
14:34:44 138  	  ID = in_credit_card_id;
14:34:44 139  
14:34:44 140  END UPDATE_CREDIT_CARD;
14:34:44 141  
14:34:44 142  /******************************************************************************/
14:34:44 143  
14:34:44 144  PROCEDURE CREATE_PAYPAL(
14:34:44 145  	out_paypal_id			OUT PAYPAL.ID%TYPE,
14:34:44 146  	in_paypal_id			IN PAYPAL.ID%TYPE DEFAULT NULL,
14:34:44 147  	in_account_id			IN PAYPAL.ACCOUNT_ID%TYPE,
14:34:44 148  	in_instrument_name		IN PAYPAL.INSTRUMENT_NAME%TYPE DEFAULT NULL,
14:34:44 149  	in_private_email_address	IN PAYPAL.PRIVATE_EMAIL_ADDRESS%TYPE DEFAULT NULL,
14:34:44 150  	in_created_by			IN PAYPAL.CREATED_BY%TYPE,
14:34:44 151  	in_paypal_status_id		IN PAYPAL.PAYPAL_STATUS_ID%TYPE,
14:34:44 152  	in_paypal_prvt_street_address	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE,
14:34:44 153  	in_paypal_prvt_street_address2	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE,
14:34:44 154  	in_state			IN PAYPAL.STATE%TYPE,
14:34:44 155  	in_city 			IN PAYPAL.CITY%TYPE,
14:34:44 156  	in_postal_code			IN PAYPAL.POSTAL_CODE%TYPE,
14:34:44 157  	in_country			IN PAYPAL.COUNTRY%TYPE,
14:34:44 158  	in_expiration_date		IN PAYPAL.EXPIRATION_DATE%TYPE,
14:34:44 159  	in_secret_token 		IN PAYPAL.SECRET_TOKEN%TYPE
14:34:44 160  ) AS
14:34:44 161  -- VARIABLES
14:34:44 162  var_paypal_id PAYPAL.ID%TYPE;
14:34:44 163  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:44 164  var_date DATE := SYSDATE;
14:34:44 165  BEGIN
14:34:44 166  	IF in_paypal_id IS NULL THEN
14:34:44 167  	  SELECT
14:34:44 168  	    PP_ID_SEQ.nextVal into var_paypal_id
14:34:44 169  	  FROM DUAL;
14:34:44 170  	ELSE
14:34:44 171  	  var_paypal_id := in_paypal_id;
14:34:44 172  	END IF;
14:34:44 173  	INSERT INTO PAYPAL(
14:34:44 174  	    ID,
14:34:44 175  	    ACCOUNT_ID,
14:34:44 176  	    INSTRUMENT_NAME,
14:34:44 177  	    PRIVATE_EMAIL_ADDRESS,
14:34:44 178  	    CREATE_DATE,
14:34:44 179  	    CREATED_BY,
14:34:44 180  	    UPDATE_DATE,
14:34:44 181  	    UPDATED_BY,
14:34:44 182  	    PAYPAL_STATUS_ID,
14:34:44 183  	    PRIVATE_STREET_ADDRESS,
14:34:44 184  	    PRIVATE_STREET_ADDRESS2,
14:34:44 185  	    STATE,
14:34:44 186  	    CITY,
14:34:44 187  	    POSTAL_CODE,
14:34:44 188  	    COUNTRY,
14:34:44 189  	    EXPIRATION_DATE,
14:34:44 190  	    SECRET_TOKEN
14:34:44 191  	  ) VALUES (
14:34:44 192  	    var_paypal_id,
14:34:44 193  	    in_account_id,
14:34:44 194  	    in_instrument_name,
14:34:44 195  	    in_private_email_address,
14:34:44 196  	    var_date,
14:34:44 197  	    in_created_by,
14:34:44 198  	    var_date,
14:34:44 199  	    in_created_by,
14:34:44 200  	    in_paypal_status_id,
14:34:44 201  	    in_paypal_prvt_street_address,
14:34:44 202  	    in_paypal_prvt_street_address2,
14:34:44 203  	    in_state,
14:34:44 204  	    in_city,
14:34:44 205  	    in_postal_code,
14:34:44 206  	    in_country,
14:34:44 207  	    in_expiration_date,
14:34:44 208  	    in_secret_token
14:34:44 209  	  );
14:34:44 210  	out_paypal_id := var_paypal_id;
14:34:44 211  END CREATE_PAYPAL;
14:34:44 212  
14:34:44 213  /******************************************************************************/
14:34:44 214  
14:34:44 215  PROCEDURE UPDATE_PAYPAL(
14:34:44 216  	in_paypal_id			IN PAYPAL.ID%TYPE,
14:34:44 217  	in_instrument_name		IN PAYPAL.INSTRUMENT_NAME%TYPE DEFAULT NULL,
14:34:44 218  	in_private_email_address	IN PAYPAL.PRIVATE_EMAIL_ADDRESS%TYPE DEFAULT NULL,
14:34:44 219  	in_updated_by			IN PAYPAL.UPDATED_BY%TYPE,
14:34:44 220  	in_paypal_status_id		IN PAYPAL.PAYPAL_STATUS_ID%TYPE DEFAULT NULL,
14:34:44 221  	in_paypal_prvt_street_address	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
14:34:44 222  	in_paypal_prvt_street_address2	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
14:34:44 223  	in_state			IN PAYPAL.STATE%TYPE DEFAULT NULL,
14:34:44 224  	in_city 			IN PAYPAL.CITY%TYPE DEFAULT NULL,
14:34:44 225  	in_postal_code			IN PAYPAL.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:44 226  	in_country			IN PAYPAL.COUNTRY%TYPE DEFAULT NULL,
14:34:44 227  	in_expiration_date		IN PAYPAL.EXPIRATION_DATE%TYPE DEFAULT NULL,
14:34:44 228  	in_secret_token 		IN PAYPAL.SECRET_TOKEN%TYPE
14:34:44 229  ) AS
14:34:44 230  BEGIN
14:34:44 231  	-- Create history
14:34:44 232  	PROCS_HISTORY_V18.CREATE_PAYPAL_HISTORY(
14:34:44 233  	  in_paypal_id		       => in_paypal_id,
14:34:44 234  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:44 235  	);
14:34:44 236  
14:34:44 237  	UPDATE PAYPAL SET
14:34:44 238  	  INSTRUMENT_NAME  = NVL(in_instrument_name, INSTRUMENT_NAME),
14:34:44 239  	  PRIVATE_EMAIL_ADDRESS    = NVL(in_private_email_address, PRIVATE_EMAIL_ADDRESS),
14:34:44 240  	  UPDATE_DATE	   = SYSDATE,
14:34:44 241  	  UPDATED_BY	   = in_updated_by,
14:34:44 242  	  PAYPAL_STATUS_ID = NVL(in_paypal_status_id, PAYPAL_STATUS_ID),
14:34:44 243  	  PRIVATE_STREET_ADDRESS  = NVL(in_paypal_prvt_street_address, PRIVATE_STREET_ADDRESS),
14:34:44 244  	  PRIVATE_STREET_ADDRESS2 = NVL(in_paypal_prvt_street_address2, PRIVATE_STREET_ADDRESS2),
14:34:44 245  	  STATE 		  = NVL(in_state, STATE),
14:34:44 246  	  CITY			  = NVL(in_city, CITY),
14:34:44 247  	  POSTAL_CODE		  = NVL(in_postal_code, POSTAL_CODE),
14:34:44 248  	  COUNTRY		  = NVL(in_country, COUNTRY),
14:34:44 249  	  EXPIRATION_DATE	  = NVL(in_expiration_date, EXPIRATION_DATE),
14:34:44 250  	  SECRET_TOKEN		  = NVL(in_secret_token, SECRET_TOKEN)
14:34:44 251  	WHERE
14:34:44 252  	  ID = in_paypal_id;
14:34:44 253  END UPDATE_PAYPAL;
14:34:44 254  
14:34:44 255  /******************************************************************************/
14:34:44 256  
14:34:44 257  PROCEDURE CREATE_GIFT_CERTIFICATE(
14:34:44 258  	out_gift_certificate_id       OUT GIFT_CERTIFICATE.ID%TYPE,
14:34:44 259  	in_gift_certificate_id	      IN GIFT_CERTIFICATE.ID%TYPE DEFAULT NULL,
14:34:44 260  	in_purchaser_group_id	      IN GIFT_CERTIFICATE.PURCHASER_GROUP_ID%TYPE,
14:34:44 261  	in_purchaser_invoice_id       IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:44 262  	in_offer_chain_id	      IN GIFT_CERTIFICATE.OFFER_CHAIN_ID%TYPE,
14:34:44 263  	in_expiration_date	      IN GIFT_CERTIFICATE.EXPIRATION_DATE%TYPE DEFAULT NULL,
14:34:44 264  	in_purchase_date	      IN GIFT_CERTIFICATE.PURCHASE_DATE%TYPE,
14:34:44 265  	in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE,
14:34:44 266  	in_code 		      IN GIFT_CERTIFICATE.CODE%TYPE,
14:34:44 267  	in_created_by		      IN GIFT_CERTIFICATE.CREATED_BY%TYPE,
14:34:44 268  	in_recipient_name	      IN GIFT_CERTIFICATE.RECIPIENT_NAME%TYPE DEFAULT NULL,
14:34:44 269  	in_gift_message 	      IN GIFT_CERTIFICATE.GIFT_MESSAGE%TYPE DEFAULT NULL,
14:34:44 270  	in_recipient_email	      IN GIFT_CERTIFICATE.RECIPIENT_EMAIL%TYPE DEFAULT NULL,
14:34:44 271  	in_finalized_invoice_id       IN GIFT_CERTIFICATE.FINALIZED_INVOICE_ID%TYPE DEFAULT NULL,
14:34:44 272  	in_sender_email 	      IN GIFT_CERTIFICATE.SENDER_EMAIL%TYPE,
14:34:44 273  	in_sender_name		      IN GIFT_CERTIFICATE.SENDER_NAME%TYPE,
14:34:44 274  	in_redemption_date	      IN GIFT_CERTIFICATE.REDEMPTION_DATE%TYPE DEFAULT NULL,
14:34:44 275  	in_cancelation_date	      IN GIFT_CERTIFICATE.CANCELATION_DATE%TYPE DEFAULT NULL,
14:34:44 276  	in_redeemer_group_id	      IN GIFT_CERTIFICATE.REDEEMER_GROUP_ID%TYPE DEFAULT NULL,
14:34:44 277  	in_recipient_address_id       IN GIFT_CERTIFICATE.RECIPIENT_ADDRESS_ID%TYPE DEFAULT NULL,
14:34:44 278  	in_recipient_notify_date      IN GIFT_CERTIFICATE.RECIPIENT_NOTIFY_DATE%TYPE DEFAULT NULL
14:34:44 279  ) AS
14:34:44 280  -- VARIABLES
14:34:44 281  var_gift_certificate_id GIFT_CERTIFICATE.ID%TYPE;
14:34:44 282  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:44 283  var_date DATE := SYSDATE;
14:34:44 284  BEGIN
14:34:44 285  	IF in_gift_certificate_id IS NULL THEN
14:34:44 286  	  SELECT
14:34:44 287  	    GC_ID_SEQ.nextVal into var_gift_certificate_id
14:34:44 288  	  FROM DUAL;
14:34:44 289  	ELSE
14:34:44 290  	  var_gift_certificate_id := in_gift_certificate_id;
14:34:44 291  	END IF;
14:34:44 292  	INSERT INTO GIFT_CERTIFICATE (
14:34:44 293  	    ID,
14:34:44 294  	    PURCHASER_GROUP_ID,
14:34:44 295  	    PURCHASE_INVOICE_ID,
14:34:44 296  	    OFFER_CHAIN_ID,
14:34:44 297  	    EXPIRATION_DATE,
14:34:44 298  	    PURCHASE_DATE,
14:34:44 299  	    GIFT_CERTIFICATE_STATUS_ID,
14:34:44 300  	    CODE,
14:34:44 301  	    CREATE_DATE,
14:34:44 302  	    CREATED_BY,
14:34:44 303  	    UPDATE_DATE,
14:34:44 304  	    UPDATED_BY,
14:34:44 305  	    RECIPIENT_NAME,
14:34:44 306  	    GIFT_MESSAGE,
14:34:44 307  	    RECIPIENT_EMAIL,
14:34:44 308  	    FINALIZED_INVOICE_ID,
14:34:44 309  	    SENDER_EMAIL,
14:34:44 310  	    SENDER_NAME,
14:34:44 311  	    REDEMPTION_DATE,
14:34:44 312  	    CANCELATION_DATE,
14:34:44 313  	    REDEEMER_GROUP_ID,
14:34:44 314  	    RECIPIENT_ADDRESS_ID,
14:34:44 315  	    RECIPIENT_NOTIFY_DATE
14:34:44 316  	  ) VALUES(
14:34:44 317  	    var_gift_certificate_id,
14:34:44 318  	    in_purchaser_group_id,
14:34:44 319  	    in_purchaser_invoice_id,
14:34:44 320  	    in_offer_chain_id,
14:34:44 321  	    in_expiration_date,
14:34:44 322  	    in_purchase_date,
14:34:44 323  	    in_gift_certificate_status_id,
14:34:44 324  	    in_code,
14:34:44 325  	    var_date,
14:34:44 326  	    in_created_by,
14:34:44 327  	    var_date,
14:34:44 328  	    in_created_by,
14:34:44 329  	    in_recipient_name,
14:34:44 330  	    in_gift_message,
14:34:44 331  	    in_recipient_email,
14:34:44 332  	    in_finalized_invoice_id,
14:34:44 333  	    in_sender_email,
14:34:44 334  	    in_sender_name,
14:34:44 335  	    in_redemption_date,
14:34:44 336  	    in_cancelation_date,
14:34:44 337  	    in_redeemer_group_id,
14:34:44 338  	    in_recipient_address_id,
14:34:44 339  	    in_recipient_notify_date
14:34:44 340  	  );
14:34:44 341  
14:34:44 342  	out_gift_certificate_id := var_gift_certificate_id;
14:34:44 343  END CREATE_GIFT_CERTIFICATE;
14:34:44 344  
14:34:44 345  /******************************************************************************/
14:34:44 346  
14:34:44 347  PROCEDURE UPDATE_GIFT_CERTIFICATE(
14:34:44 348  	in_gift_certificate_id	      IN GIFT_CERTIFICATE.ID%TYPE,
14:34:44 349  	in_expiration_date	      IN GIFT_CERTIFICATE.EXPIRATION_DATE%TYPE DEFAULT NULL,
14:34:44 350  	in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE DEFAULT NULL,
14:34:44 351  	in_code 		      IN GIFT_CERTIFICATE.CODE%TYPE DEFAULT NULL,
14:34:44 352  	in_updated_by		      IN GIFT_CERTIFICATE.UPDATED_BY%TYPE,
14:34:44 353  	in_recipient_name	      IN GIFT_CERTIFICATE.RECIPIENT_NAME%TYPE DEFAULT NULL,
14:34:44 354  	in_gift_message 	      IN GIFT_CERTIFICATE.GIFT_MESSAGE%TYPE DEFAULT NULL,
14:34:44 355  	in_recipient_email	      IN GIFT_CERTIFICATE.RECIPIENT_EMAIL%TYPE DEFAULT NULL,
14:34:44 356  	in_finalized_invoice_id       IN GIFT_CERTIFICATE.FINALIZED_INVOICE_ID%TYPE DEFAULT NULL,
14:34:44 357  	in_sender_email 	      IN GIFT_CERTIFICATE.SENDER_EMAIL%TYPE DEFAULT NULL,
14:34:44 358  	in_sender_name		      IN GIFT_CERTIFICATE.SENDER_NAME%TYPE DEFAULT NULL,
14:34:44 359  	in_redemption_date	      IN GIFT_CERTIFICATE.REDEMPTION_DATE%TYPE DEFAULT NULL,
14:34:44 360  	in_cancelation_date	      IN GIFT_CERTIFICATE.CANCELATION_DATE%TYPE DEFAULT NULL,
14:34:44 361  	in_redeemer_group_id	      IN GIFT_CERTIFICATE.REDEEMER_GROUP_ID%TYPE DEFAULT NULL,
14:34:44 362  	in_recipient_address_id       IN GIFT_CERTIFICATE.RECIPIENT_ADDRESS_ID%TYPE DEFAULT NULL,
14:34:44 363  	in_redeemer_address_id	      IN GIFT_CERTIFICATE.REDEEMER_ADDRESS_ID%TYPE DEFAULT NULL,
14:34:44 364  	in_recipient_notify_date      IN GIFT_CERTIFICATE.RECIPIENT_NOTIFY_DATE%TYPE DEFAULT NULL
14:34:44 365  ) AS
14:34:44 366  BEGIN
14:34:44 367  
14:34:44 368  	-- Create history
14:34:44 369  	PROCS_HISTORY_V18.CREATE_GIFT_CERT_HISTORY(
14:34:44 370  	  in_gift_certificate_id       => in_gift_certificate_id,
14:34:44 371  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:44 372  	);
14:34:44 373  
14:34:44 374  	UPDATE GIFT_CERTIFICATE SET
14:34:44 375  	  EXPIRATION_DATE	     = NVL(in_expiration_date, EXPIRATION_DATE),
14:34:44 376  	  GIFT_CERTIFICATE_STATUS_ID = NVL(in_gift_certificate_status_id, GIFT_CERTIFICATE_STATUS_ID),
14:34:44 377  	  CODE			     = NVL(in_code, CODE),
14:34:44 378  	  UPDATE_DATE		     = SYSDATE,
14:34:44 379  	  UPDATED_BY		     = in_updated_by,
14:34:44 380  	  RECIPIENT_NAME	     = NVL(in_recipient_name, RECIPIENT_NAME),
14:34:44 381  	  GIFT_MESSAGE		     = NVL(in_gift_message, GIFT_MESSAGE),
14:34:44 382  	  RECIPIENT_EMAIL	     = NVL(in_recipient_email, RECIPIENT_EMAIL),
14:34:44 383  	  FINALIZED_INVOICE_ID	     = NVL(in_finalized_invoice_id, FINALIZED_INVOICE_ID),
14:34:44 384  	  SENDER_EMAIL		     = NVL(in_sender_email, SENDER_EMAIL),
14:34:44 385  	  SENDER_NAME		     = NVL(in_sender_name, SENDER_NAME),
14:34:44 386  	  REDEMPTION_DATE	     = NVL(in_redemption_date, REDEMPTION_DATE),
14:34:44 387  	  CANCELATION_DATE	     = NVL(in_cancelation_date, CANCELATION_DATE),
14:34:44 388  	  REDEEMER_GROUP_ID	     = NVL(in_redeemer_group_id, REDEEMER_GROUP_ID),
14:34:44 389  	  RECIPIENT_ADDRESS_ID	     = NVL(in_recipient_address_id, RECIPIENT_ADDRESS_ID),
14:34:44 390  	  REDEEMER_ADDRESS_ID	     = NVL(in_redeemer_address_id, REDEEMER_ADDRESS_ID),
14:34:44 391  	  RECIPIENT_NOTIFY_DATE      = NVL(in_recipient_notify_date, RECIPIENT_NOTIFY_DATE)
14:34:44 392  	WHERE
14:34:44 393  	  ID = in_gift_certificate_id;
14:34:44 394  
14:34:44 395  END UPDATE_GIFT_CERTIFICATE;
14:34:44 396  
14:34:44 397  END PROCS_FIN_INSTRUMENTS_CRU_V18;
14:34:44 398  .
14:34:44 SQL> /

Package body created.

Elapsed: 00:00:00.06
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_GROUP_ACCOUNT_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE UPDATE_SUBSCRIPTION_SHARE (
14:34:44   4  	in_id		       IN SUBSCRIPTION_SHARE.ID%TYPE,
14:34:44   5  	in_group_account_id    IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE DEFAULT NULL,
14:34:44   6  	in_borrower_account_id IN SUBSCRIPTION_SHARE.BORROWER_ACCOUNT_ID%TYPE DEFAULT NULL,
14:34:44   7  	in_ip_address	       IN SUBSCRIPTION_SHARE.IP_ADDRESS%TYPE DEFAULT NULL,
14:34:44   8  	in_start_date	       IN SUBSCRIPTION_SHARE.START_DATE%TYPE DEFAULT NULL,
14:34:44   9  	in_end_date	       IN SUBSCRIPTION_SHARE.END_DATE%TYPE DEFAULT NULL,
14:34:44  10  	in_needs_entitlements  IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE DEFAULT NULL,
14:34:44  11  	in_updated_by	       IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
14:34:44  12  ) AS
14:34:44  13  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_SUBSCRIPTION_SHARE';
14:34:44  14  BEGIN
14:34:44  15  	UPDATE SUBSCRIPTION_SHARE SET
14:34:44  16  	  GROUP_ACCOUNT_ID     = NVL(in_group_account_id,GROUP_ACCOUNT_ID),
14:34:44  17  	  BORROWER_ACCOUNT_ID  = NVL(in_borrower_account_id,BORROWER_ACCOUNT_ID),
14:34:44  18  	  IP_ADDRESS	       = NVL(in_ip_address,IP_ADDRESS),
14:34:44  19  	  START_DATE	       = NVL(in_start_date,START_DATE),
14:34:44  20  	  END_DATE	       = NVL(in_end_date,END_DATE),
14:34:44  21  	  NEEDS_ENTITLEMENTS   = NVL(in_needs_entitlements,NEEDS_ENTITLEMENTS),
14:34:44  22  	  UPDATED_BY	       = in_updated_by,
14:34:44  23  	  UPDATE_DATE	       = SYSDATE
14:34:44  24  	WHERE
14:34:44  25  	  SUBSCRIPTION_SHARE.ID = in_id;
14:34:44  26  EXCEPTION
14:34:44  27  	WHEN OTHERS THEN
14:34:44  28  	  Procs_Common_V18.Throw_Exception(APP_EXCEPTION_CODES_V18.Internal_Error,
14:34:44  29  	    SPROC_NAME, 'Error while updating subscription share', SQLERRM);
14:34:44  30  END UPDATE_SUBSCRIPTION_SHARE;
14:34:44  31  
14:34:44  32  PROCEDURE CREATE_GROUP_ACCOUNT (
14:34:44  33  	in_subscription_id	 IN NUMBER,
14:34:44  34  	in_group_name		 IN VARCHAR2,
14:34:44  35  	in_first_name		 IN VARCHAR2,
14:34:44  36  	in_last_name		 IN VARCHAR2,
14:34:44  37  	in_email		 IN VARCHAR2,
14:34:44  38  	in_phone		 IN VARCHAR2,
14:34:44  39  	in_organization_type	 IN VARCHAR2,
14:34:44  40  	in_seats		 IN NUMBER,
14:34:44  41  	in_seat_ttl_in_hours	 IN NUMBER,
14:34:44  42  	in_ip			 IN NUMBER,
14:34:44  43  	in_created_by		 IN VARCHAR2
14:34:44  44  ) AS
14:34:44  45  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_GROUP_ACCOUNT';
14:34:44  46  var_now DATE;
14:34:44  47  BEGIN
14:34:44  48  
14:34:44  49  	SELECT
14:34:44  50  	  SYSDATE INTO var_now
14:34:44  51  	FROM dual;
14:34:44  52  
14:34:44  53  	INSERT INTO GROUP_ACCOUNT (
14:34:44  54  	  id,
14:34:44  55  	  subscription_id,
14:34:44  56  	  group_name,
14:34:44  57  	  first_name,
14:34:44  58  	  last_name,
14:34:44  59  	  email,
14:34:44  60  	  phone,
14:34:44  61  	  organization_type,
14:34:44  62  	  seats,
14:34:44  63  	  seat_ttl_in_hours,
14:34:44  64  	  ip,
14:34:44  65  	  create_date,
14:34:44  66  	  created_by,
14:34:44  67  	  update_date,
14:34:44  68  	  updated_by
14:34:44  69  	) VALUES (
14:34:44  70  	  core_owner.GRPACCNT_ID_SEQ.NEXTVAL,
14:34:44  71  	  in_subscription_id,
14:34:44  72  	  in_group_name,
14:34:44  73  	  in_first_name,
14:34:44  74  	  in_last_name,
14:34:44  75  	  in_email,
14:34:44  76  	  in_phone,
14:34:44  77  	  in_organization_type,
14:34:44  78  	  in_seats,
14:34:44  79  	  in_seat_ttl_in_hours,
14:34:44  80  	  in_ip,
14:34:44  81  	  var_now,
14:34:44  82  	  in_created_by,
14:34:44  83  	  var_now,
14:34:44  84  	  in_created_by
14:34:44  85  	);
14:34:44  86  
14:34:44  87  EXCEPTION
14:34:44  88  	WHEN PROGRAM_ERROR THEN
14:34:44  89  	  PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:44  90  	    SPROC_NAME, 'Program error when inserting group account', SQLERRM);
14:34:44  91  	WHEN OTHERS THEN
14:34:44  92  	  PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44  93  	    SPROC_NAME, 'Unknown error when inserting group account', SQLERRM);
14:34:44  94  END CREATE_GROUP_ACCOUNT;
14:34:44  95  
14:34:44  96  
14:34:44  97  PROCEDURE CREATE_SUBSCRIPTION_SHARE (
14:34:44  98  	in_group_account_id    IN NUMBER,
14:34:44  99  	in_borrower_account_id IN NUMBER,
14:34:44 100  	in_ip_address	       IN VARCHAR2,
14:34:44 101  	in_email_domain        IN VARCHAR2,
14:34:44 102  	in_start_date	       IN DATE,
14:34:44 103  	in_end_date	       IN DATE,
14:34:44 104  	in_created_by	       IN VARCHAR2
14:34:44 105  ) AS
14:34:44 106  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_SUBSCRIPTION_SHARE';
14:34:44 107  var_now DATE;
14:34:44 108  BEGIN
14:34:44 109  
14:34:44 110  	SELECT
14:34:44 111  	  SYSDATE INTO var_now
14:34:44 112  	FROM dual;
14:34:44 113  
14:34:44 114  	INSERT INTO SUBSCRIPTION_SHARE (
14:34:44 115  	  id,
14:34:44 116  	  group_account_id,
14:34:44 117  	  borrower_account_id,
14:34:44 118  	  ip_address,
14:34:44 119  	  email_domain,
14:34:44 120  	  start_date,
14:34:44 121  	  end_date,
14:34:44 122  	  create_date,
14:34:44 123  	  created_by,
14:34:44 124  	  update_date,
14:34:44 125  	  updated_by
14:34:44 126  	) VALUES (
14:34:44 127  	  core_owner.SUBSCRIPTIONSHARE_ID_SEQ.NEXTVAL,
14:34:44 128  	  in_group_account_id,
14:34:44 129  	  in_borrower_account_id,
14:34:44 130  	  in_ip_address,
14:34:44 131  	  in_email_domain,
14:34:44 132  	  in_start_date,
14:34:44 133  	  in_end_date,
14:34:44 134  	  var_now,
14:34:44 135  	  in_created_by,
14:34:44 136  	  var_now,
14:34:44 137  	  in_created_by
14:34:44 138  	);
14:34:44 139  
14:34:44 140  EXCEPTION
14:34:44 141  	WHEN PROGRAM_ERROR THEN
14:34:44 142  	  PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:44 143  	    SPROC_NAME, 'Program error when inserting subscription share', SQLERRM);
14:34:44 144  END CREATE_SUBSCRIPTION_SHARE;
14:34:44 145  
14:34:44 146  -- Eh, I don't like the cru packages at all
14:34:44 147  -- the idea of code reuse in PL/SQL is still lost on me
14:34:44 148  PROCEDURE DISABLE_IP_RANGES_BY_GA_ID(
14:34:44 149  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
14:34:44 150  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
14:34:44 151  ) AS
14:34:44 152  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_IP_RANGES_BY_GA_ID';
14:34:44 153  BEGIN
14:34:44 154  	update
14:34:44 155  	  GROUP_ACCOUNT_IP_RANGE IR
14:34:44 156  	set
14:34:44 157  	  IR.GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V18.GROUP_ACC_IP_RNG_INACTIVE,
14:34:44 158  	  IR.UPDATED_BY = in_updated_by,
14:34:44 159  	  IR.UPDATE_DATE = sysdate
14:34:44 160  	where
14:34:44 161  	  IR.GROUP_ACCOUNT_ID = in_group_account_id and
14:34:44 162  	  IR.GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V18.GROUP_ACC_IP_RNG_ACTIVE
14:34:44 163  	;
14:34:44 164  EXCEPTION
14:34:44 165  WHEN OTHERS THEN
14:34:44 166  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 167  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:44 168  END DISABLE_IP_RANGES_BY_GA_ID;
14:34:44 169  
14:34:44 170  PROCEDURE DISABLE_IP_RANGE_BY_ID(
14:34:44 171  	in_id	IN GROUP_ACCOUNT_IP_RANGE.ID%TYPE,
14:34:44 172  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
14:34:44 173  ) AS
14:34:44 174  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_IP_RANGE_BY_ID';
14:34:44 175  BEGIN
14:34:44 176  	update
14:34:44 177  	  GROUP_ACCOUNT_IP_RANGE IR
14:34:44 178  	set
14:34:44 179  	  IR.GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V18.GROUP_ACC_IP_RNG_INACTIVE,
14:34:44 180  	  IR.UPDATED_BY = in_updated_by,
14:34:44 181  	  IR.UPDATE_DATE = sysdate
14:34:44 182  	where
14:34:44 183  	  IR.ID = in_id and
14:34:44 184  	  IR.GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V18.GROUP_ACC_IP_RNG_ACTIVE
14:34:44 185  	;
14:34:44 186  raise no_data_found;
14:34:44 187  EXCEPTION
14:34:44 188  WHEN OTHERS THEN
14:34:44 189  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 190  	  SPROC_NAME, 'Unknown error '||in_id, SQLERRM);
14:34:44 191  END DISABLE_IP_RANGE_BY_ID;
14:34:44 192  
14:34:44 193  PROCEDURE ADD_IP_RANGE (
14:34:44 194  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
14:34:44 195  	in_minimum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_STRING%TYPE,
14:34:44 196  	in_minimum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
14:34:44 197  	in_minimum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
14:34:44 198  	in_maximum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_STRING%TYPE,
14:34:44 199  	in_maximum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_LOW%TYPE,
14:34:44 200  	in_maximum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_HIGH%TYPE,
14:34:44 201  	in_created_by IN GROUP_ACCOUNT_IP_RANGE.CREATED_BY%TYPE
14:34:44 202  ) AS
14:34:44 203  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_IP_RANGE';
14:34:44 204  BEGIN
14:34:44 205  	  INSERT INTO GROUP_ACCOUNT_IP_RANGE (
14:34:44 206  	    ID,
14:34:44 207  	    GROUP_ACCOUNT_ID,
14:34:44 208  	    MINIMUM_IP_STRING,
14:34:44 209  	    MINIMUM_IP_LOW,
14:34:44 210  	    MINIMUM_IP_HIGH,
14:34:44 211  	    MAXIMUM_IP_STRING,
14:34:44 212  	    MAXIMUM_IP_LOW,
14:34:44 213  	    MAXIMUM_IP_HIGH,
14:34:44 214  	    CREATED_BY,
14:34:44 215  	    CREATE_DATE,
14:34:44 216  	    UPDATED_BY,
14:34:44 217  	    UPDATE_DATE,
14:34:44 218  	    GROUP_ACC_IP_RNG_STATUS_ID
14:34:44 219  	  )
14:34:44 220  	  VALUES (
14:34:44 221  	    GROUPACCOUNTIPRANGE_ID_SEQ.nextval,
14:34:44 222  	    in_group_account_id,
14:34:44 223  	    in_minimum_ip_string,
14:34:44 224  	    in_minimum_ip_low,
14:34:44 225  	    in_minimum_ip_high,
14:34:44 226  	    in_maximum_ip_string,
14:34:44 227  	    in_maximum_ip_low,
14:34:44 228  	    in_maximum_ip_high,
14:34:44 229  	    in_created_by,
14:34:44 230  	    sysdate,
14:34:44 231  	    in_created_by,
14:34:44 232  	    sysdate,
14:34:44 233  	    GLOBAL_STATUSES_V18.GROUP_ACC_IP_RNG_ACTIVE
14:34:44 234  	  );
14:34:44 235  EXCEPTION
14:34:44 236  WHEN OTHERS THEN
14:34:44 237  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 238  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:44 239  END ADD_IP_RANGE;
14:34:44 240  
14:34:44 241  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_GA_ID(
14:34:44 242  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:44 243  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
14:34:44 244  ) AS
14:34:44 245  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_EMAIL_DOMAIN_BY_GA_ID';
14:34:44 246  BEGIN
14:34:44 247  	update
14:34:44 248  	  GROUP_ACCOUNT_EMAIL_DOMAIN ED
14:34:44 249  	set
14:34:44 250  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V18.GROUP_ACC_EMAIL_DOMAIN_INACT,
14:34:44 251  	  ED.UPDATED_BY = in_updated_by,
14:34:44 252  	  ED.UPDATE_DATE = sysdate
14:34:44 253  	where
14:34:44 254  	  ED.GROUP_ACCOUNT_ID = in_group_account_id and
14:34:44 255  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V18.GROUP_ACC_EMAIL_DOMAIN_ACT
14:34:44 256  	;
14:34:44 257  EXCEPTION
14:34:44 258  WHEN OTHERS THEN
14:34:44 259  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 260  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:44 261  END DISABLE_EMAIL_DOMAIN_BY_GA_ID;
14:34:44 262  
14:34:44 263  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_ID(
14:34:44 264  	in_id	IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
14:34:44 265  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
14:34:44 266  ) AS
14:34:44 267  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_EMAIL_DOMAIN_BY_ID';
14:34:44 268  BEGIN
14:34:44 269  	update
14:34:44 270  	  GROUP_ACCOUNT_EMAIL_DOMAIN ED
14:34:44 271  	set
14:34:44 272  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V18.GROUP_ACC_EMAIL_DOMAIN_INACT,
14:34:44 273  	  ED.UPDATED_BY = in_updated_by,
14:34:44 274  	  ED.UPDATE_DATE = sysdate
14:34:44 275  	where
14:34:44 276  	  ED.ID = in_id and
14:34:44 277  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V18.GROUP_ACC_EMAIL_DOMAIN_ACT
14:34:44 278  	;
14:34:44 279  EXCEPTION
14:34:44 280  WHEN OTHERS THEN
14:34:44 281  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 282  	  SPROC_NAME, 'Unknown error '||in_id, SQLERRM);
14:34:44 283  END DISABLE_EMAIL_DOMAIN_BY_ID;
14:34:44 284  
14:34:44 285  
14:34:44 286  PROCEDURE ENABLE_EMAIL_DOMAIN_BY_ID(
14:34:44 287  	in_id	IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
14:34:44 288  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
14:34:44 289  ) AS
14:34:44 290  SPROC_NAME CONSTANT VARCHAR2(32) := 'ENABLE_EMAIL_DOMAIN_BY_ID';
14:34:44 291  BEGIN
14:34:44 292  	update
14:34:44 293  	  GROUP_ACCOUNT_EMAIL_DOMAIN ED
14:34:44 294  	set
14:34:44 295  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V18.GROUP_ACC_EMAIL_DOMAIN_ACT,
14:34:44 296  	  ED.UPDATED_BY = in_updated_by,
14:34:44 297  	  ED.UPDATE_DATE = sysdate
14:34:44 298  	where
14:34:44 299  	  ED.ID = in_id and
14:34:44 300  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V18.GROUP_ACC_EMAIL_DOMAIN_INACT
14:34:44 301  	;
14:34:44 302  EXCEPTION
14:34:44 303  WHEN OTHERS THEN
14:34:44 304  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 305  	  SPROC_NAME, 'Unknown error '||in_id, SQLERRM);
14:34:44 306  END ENABLE_EMAIL_DOMAIN_BY_ID;
14:34:44 307  
14:34:44 308  
14:34:44 309  PROCEDURE ADD_EMAIL_DOMAIN (
14:34:44 310  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:44 311  	in_email_domain IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
14:34:44 312  	in_is_active IN  GROUP_ACCOUNT_EMAIL_DOMAIN.IS_ACTIVE%TYPE,
14:34:44 313  	in_created_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.CREATED_BY%TYPE
14:34:44 314  ) AS
14:34:44 315  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_EMAIL_DOMAIN';
14:34:44 316  BEGIN
14:34:44 317  	  INSERT INTO GROUP_ACCOUNT_EMAIL_DOMAIN (
14:34:44 318  	    ID,
14:34:44 319  	    GROUP_ACCOUNT_ID,
14:34:44 320  	    EMAIL_DOMAIN,
14:34:44 321  		IS_ACTIVE,
14:34:44 322  	    CREATED_BY,
14:34:44 323  	    CREATE_DATE,
14:34:44 324  	    UPDATED_BY,
14:34:44 325  	    UPDATE_DATE
14:34:44 326  	  )
14:34:44 327  	  VALUES (
14:34:44 328  	    GROUPACCOUNTEMAILDOMAIN_SEQ.nextval,
14:34:44 329  	    in_group_account_id,
14:34:44 330  		in_email_domain,
14:34:44 331  		in_is_active,
14:34:44 332  		in_created_by,
14:34:44 333  	    sysdate,
14:34:44 334  	    in_created_by,
14:34:44 335  	    sysdate
14:34:44 336  	  );
14:34:44 337  EXCEPTION
14:34:44 338  WHEN DUP_VAL_ON_INDEX THEN
14:34:44 339  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:44 340  	  SPROC_NAME, 'Unique Constraint Violated', SQLERRM);
14:34:44 341  WHEN OTHERS THEN
14:34:44 342  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 343  	  SPROC_NAME, 'Unknown error 1', SQLERRM);
14:34:44 344  END ADD_EMAIL_DOMAIN;
14:34:44 345  
14:34:44 346  PROCEDURE UPDATE_GROUP_ACCOUNT (
14:34:44 347  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
14:34:44 348  	in_group_name		 IN GROUP_ACCOUNT.GROUP_NAME%TYPE,
14:34:44 349  	in_first_name		 IN GROUP_ACCOUNT.FIRST_NAME%TYPE,
14:34:44 350  	in_last_name		 IN GROUP_ACCOUNT.LAST_NAME%TYPE,
14:34:44 351  	in_email		 IN GROUP_ACCOUNT.EMAIL%TYPE,
14:34:44 352  	in_phone		 IN GROUP_ACCOUNT.PHONE%TYPE,
14:34:44 353  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
14:34:44 354  ) AS
14:34:44 355  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_GROUP_ACCOUNT';
14:34:44 356  BEGIN
14:34:44 357  	update
14:34:44 358  	  group_account
14:34:44 359  	set
14:34:44 360  	  group_name = nvl(in_group_name, group_name),
14:34:44 361  	  first_name = nvl(in_first_name, first_name),
14:34:44 362  	  last_name = nvl(in_last_name, last_name),
14:34:44 363  	  email = nvl(in_email, email),
14:34:44 364  	  phone = nvl(in_phone, phone),
14:34:44 365  	  updated_by = in_updated_by,
14:34:44 366  	  update_date = sysdate
14:34:44 367  	where
14:34:44 368  	  id = in_group_account_id;
14:34:44 369  
14:34:44 370  	if(sql%rowcount = 0) then
14:34:44 371  	  PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:44 372  	  SPROC_NAME, 'Group Account not found', SQLERRM);
14:34:44 373  	end if;
14:34:44 374  EXCEPTION
14:34:44 375  	WHEN OTHERS THEN
14:34:44 376  	  PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:44 377  	    SPROC_NAME, 'Error while updating group account', SQLERRM);
14:34:44 378  END UPDATE_GROUP_ACCOUNT;
14:34:44 379  
14:34:44 380  PROCEDURE UPDATE_GROUP_ACCOUNT_SEATS (
14:34:44 381  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
14:34:44 382  	in_seats		 IN GROUP_ACCOUNT.SEATS%TYPE,
14:34:44 383  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
14:34:44 384  ) AS
14:34:44 385  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_GROUP_ACCOUNT_SEATS';
14:34:44 386  var_subscription_id NUMBER;
14:34:44 387  var_seats NUMBER;
14:34:44 388  BEGIN
14:34:44 389  	select subscription_id, seats into var_subscription_id, var_seats
14:34:44 390  	from group_account
14:34:44 391  	where id = in_group_account_id;
14:34:44 392  
14:34:44 393  	update
14:34:44 394  	  group_account
14:34:44 395  	set
14:34:44 396  	  seats = in_seats,
14:34:44 397  	  updated_by = in_updated_by,
14:34:44 398  	  update_date = sysdate
14:34:44 399  	where
14:34:44 400  	  id = in_group_account_id;
14:34:44 401  
14:34:44 402  	if(sql%rowcount = 0) then
14:34:44 403  	  PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:44 404  	  SPROC_NAME, 'Group Account not found', SQLERRM);
14:34:44 405  	end if;
14:34:44 406  
14:34:44 407  	PROCS_SUBSCRIPTION_V18.ANNOTATE_SUBSCRIPTION(
14:34:44 408  	  in_subscription_id => var_subscription_id,
14:34:44 409  	  in_agent_id	     => 0,
14:34:44 410  	  in_note	     => 'seats updated from '||var_seats||' to '||in_seats,
14:34:44 411  	  in_created_by      => in_updated_by
14:34:44 412  	);
14:34:44 413  EXCEPTION
14:34:44 414  	WHEN NO_DATA_FOUND THEN
14:34:44 415  	  PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:44 416  	  SPROC_NAME, 'Group Account not found', SQLERRM);
14:34:44 417  	WHEN OTHERS THEN
14:34:44 418  	  PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:44 419  	    SPROC_NAME, 'Error while updating group account seats', SQLERRM);
14:34:44 420  END UPDATE_GROUP_ACCOUNT_SEATS;
14:34:44 421  
14:34:44 422  END PROCS_GROUP_ACCOUNT_CRU_V18;
14:34:44 423  .
14:34:44 SQL> /

Package body created.

Elapsed: 00:00:00.09
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_INVOICE_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_INVOICE (
14:34:44   4  	out_invoice_id		       OUT INVOICE.ID%TYPE,
14:34:44   5  	in_invoice_id		       IN INVOICE.ID%TYPE DEFAULT NULL,
14:34:44   6  	in_invoice_status_id	       IN INVOICE.INVOICE_STATUS_ID%TYPE,
14:34:44   7  	in_tax_exempt_id	       IN INVOICE.TAX_EXEMPT_ID%TYPE,
14:34:44   8  	in_created_by		       IN INVOICE.CREATED_BY%TYPE
14:34:44   9  ) AS
14:34:44  10  -- VARIABLES
14:34:44  11  var_invoice_id INVOICE.ID%TYPE;
14:34:44  12  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:44  13  var_date DATE := SYSDATE;
14:34:44  14  BEGIN
14:34:44  15  	IF in_invoice_id IS NULL THEN
14:34:44  16  	  SELECT
14:34:44  17  	    INV_ID_SEQ.nextVal into var_invoice_id
14:34:44  18  	  FROM DUAL;
14:34:44  19  	ELSE
14:34:44  20  	  var_invoice_id := in_invoice_id;
14:34:44  21  	END IF;
14:34:44  22  	INSERT INTO
14:34:44  23  	  INVOICE (
14:34:44  24  	    ID,
14:34:44  25  	    INVOICE_STATUS_ID,
14:34:44  26  	    CREATE_DATE,
14:34:44  27  	    CREATED_BY,
14:34:44  28  	    UPDATE_DATE,
14:34:44  29  	    UPDATED_BY,
14:34:44  30  	    TAX_EXEMPT_ID,
14:34:44  31  	    IS_TAX_CALCULATION_NEEDED
14:34:44  32  	  ) VALUES (
14:34:44  33  	    var_invoice_id,
14:34:44  34  	    in_invoice_status_id,
14:34:44  35  	    var_date,
14:34:44  36  	    in_created_by,
14:34:44  37  	    var_date,
14:34:44  38  	    in_created_by,
14:34:44  39  	    in_tax_exempt_id,
14:34:44  40  	    0 -- DEFAULT VALUE
14:34:44  41  	  );
14:34:44  42  
14:34:44  43  	out_invoice_id := var_invoice_id;
14:34:44  44  END;
14:34:44  45  
14:34:44  46  /*****************************************************************/
14:34:44  47  
14:34:44  48  PROCEDURE UPDATE_INVOICE (
14:34:44  49  	in_invoice_id		       IN INVOICE.ID%TYPE,
14:34:44  50  	in_updated_by		       IN INVOICE.UPDATED_BY%TYPE,
14:34:44  51  	in_invoice_status_id	       IN INVOICE.INVOICE_STATUS_ID%TYPE DEFAULT NULL,
14:34:44  52  	in_is_tax_calculation_needed   IN INVOICE.IS_TAX_CALCULATION_NEEDED%TYPE DEFAULT NULL
14:34:44  53  ) AS
14:34:44  54  BEGIN
14:34:44  55  	-- Create history
14:34:44  56  	PROCS_HISTORY_V18.CREATE_INVOICE_HISTORY(
14:34:44  57  	  in_invoice_id 	       => in_invoice_id,
14:34:44  58  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:44  59  	);
14:34:44  60  
14:34:44  61  	UPDATE
14:34:44  62  	  INVOICE
14:34:44  63  	SET
14:34:44  64  	  INVOICE_STATUS_ID	    = NVL(in_invoice_status_id, INVOICE_STATUS_ID),
14:34:44  65  	  UPDATE_DATE		    = SYSDATE,
14:34:44  66  	  UPDATED_BY		    = in_updated_by,
14:34:44  67  	  IS_TAX_CALCULATION_NEEDED = NVL(in_is_tax_calculation_needed, IS_TAX_CALCULATION_NEEDED)
14:34:44  68  	WHERE
14:34:44  69  	  ID = in_invoice_id;
14:34:44  70  END;
14:34:44  71  
14:34:44  72  END PROCS_INVOICE_CRU_V18;
14:34:44  73  .
14:34:44 SQL> /

Package body created.

Elapsed: 00:00:00.04
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ITUNES_RECEIPT_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_RECEIPT(
14:34:44   4  /*
14:34:44   5  Throws exceptions:
14:34:44   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44   7  */
14:34:44   8  	  out_id	      OUT NUMBER,
14:34:44   9  	  in_subscription_id  IN CORE_OWNER.ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
14:34:44  10  	  in_receipt	      IN CORE_OWNER.ITUNES_RECEIPT.RECEIPT%TYPE,
14:34:44  11  	  in_status	      IN CORE_OWNER.ITUNES_RECEIPT.STATUS%TYPE,
14:34:44  12  	  in_quantity	      IN CORE_OWNER.ITUNES_RECEIPT.QUANTITY%TYPE,
14:34:44  13  	  in_product_id       IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
14:34:44  14  	  in_transaction_id   IN CORE_OWNER.ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
14:34:44  15  	  in_purchase_date    IN CORE_OWNER.ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
14:34:44  16  	  in_original_transaction_id IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
14:34:44  17  	  in_original_purchase_date IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
14:34:44  18  	  in_app_item_id      IN CORE_OWNER.ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
14:34:44  19  	  in_version_external_id IN CORE_OWNER.ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
14:34:44  20  	  in_bid	      IN CORE_OWNER.ITUNES_RECEIPT.BID%TYPE,
14:34:44  21  	  in_bvrs	      IN CORE_OWNER.ITUNES_RECEIPT.BVRS%TYPE,
14:34:44  22  	  in_expires_date     IN CORE_OWNER.ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
14:34:44  23  	  in_created_by       IN CORE_OWNER.ITUNES_RECEIPT.CREATED_BY%TYPE
14:34:44  24  ) AS
14:34:44  25  -- VARIABLES
14:34:44  26  SPROC_NAME	CONSTANT VARCHAR2(32) := 'CREATE_RECEIPT';
14:34:44  27  var_current_date	    DATE;
14:34:44  28  var_count 	    NUMBER;
14:34:44  29  ITUNES_ORG_TNX_USED   EXCEPTION;
14:34:44  30  BEGIN
14:34:44  31  	SELECT COUNT(1) into var_count
14:34:44  32  	FROM
14:34:44  33  	  ITUNES_RECEIPT IR, SUBSCRIPTION S
14:34:44  34  	WHERE
14:34:44  35  	  IR.ORIGINAL_TRANSACTION_ID = in_original_transaction_id AND
14:34:44  36  	  IR.SUBSCRIPTION_ID = S.ID AND
14:34:44  37  	  S.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE;
14:34:44  38  
14:34:44  39  	if var_count > 0 then
14:34:44  40  	  raise ITUNES_ORG_TNX_USED;
14:34:44  41  	end if;
14:34:44  42  
14:34:44  43  	SELECT
14:34:44  44  	  CORE_OWNER.ITUNES_RECEIPT_ID_SEQ.NEXTVAL
14:34:44  45  	INTO
14:34:44  46  	  out_id
14:34:44  47  	FROM
14:34:44  48  	  dual
14:34:44  49  	;
14:34:44  50  
14:34:44  51  	SELECT
14:34:44  52  	  sysdate
14:34:44  53  	INTO
14:34:44  54  	  var_current_date
14:34:44  55  	FROM
14:34:44  56  	  dual
14:34:44  57  	;
14:34:44  58  
14:34:44  59  	INSERT INTO CORE_OWNER.ITUNES_RECEIPT
14:34:44  60  	(
14:34:44  61  	  id,
14:34:44  62  	  subscription_id,
14:34:44  63  	  receipt,
14:34:44  64  	  status,
14:34:44  65  	  quantity,
14:34:44  66  	  product_id,
14:34:44  67  	  transaction_id,
14:34:44  68  	  purchase_date,
14:34:44  69  	  original_transaction_id,
14:34:44  70  	  original_purchase_date,
14:34:44  71  	  app_item_id,
14:34:44  72  	  version_external_id,
14:34:44  73  	  bid,
14:34:44  74  	  bvrs,
14:34:44  75  	  expires_date,
14:34:44  76  	  create_date,
14:34:44  77  	  created_by,
14:34:44  78  	  update_date,
14:34:44  79  	  updated_by,
14:34:44  80  	  last_check_date
14:34:44  81  	)
14:34:44  82  	VALUES
14:34:44  83  	(
14:34:44  84  	  out_id,
14:34:44  85  	  in_subscription_id,
14:34:44  86  	  in_receipt,
14:34:44  87  	  in_status,
14:34:44  88  	  in_quantity,
14:34:44  89  	  in_product_id,
14:34:44  90  	  in_transaction_id,
14:34:44  91  	  in_purchase_date,
14:34:44  92  	  in_original_transaction_id,
14:34:44  93  	  in_original_purchase_date,
14:34:44  94  	  in_app_item_id,
14:34:44  95  	  in_version_external_id,
14:34:44  96  	  in_bid,
14:34:44  97  	  in_bvrs,
14:34:44  98  	  in_expires_date,
14:34:44  99  	  var_current_date,
14:34:44 100  	  in_created_by,
14:34:44 101  	  var_current_date,
14:34:44 102  	  in_created_by,
14:34:44 103  	  var_current_date
14:34:44 104  	);
14:34:44 105  
14:34:44 106  EXCEPTION
14:34:44 107  WHEN ITUNES_ORG_TNX_USED THEN
14:34:44 108  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:44 109  	  SPROC_NAME, 'iTunes orginal transaction id already in use', SQLERRM);
14:34:44 110  WHEN DUP_VAL_ON_INDEX THEN
14:34:44 111  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:44 112  	  SPROC_NAME, 'Duplicate value', SQLERRM);
14:34:44 113  WHEN OTHERS THEN
14:34:44 114  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 115  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:44 116  END CREATE_RECEIPT;
14:34:44 117  
14:34:44 118  PROCEDURE UPDATE_RECEIPT(
14:34:44 119  /*
14:34:44 120  Throws exceptions:
14:34:44 121  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 122  */
14:34:44 123  	  in_id 	      IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE,
14:34:44 124  	  in_receipt	      IN CORE_OWNER.ITUNES_RECEIPT.RECEIPT%TYPE,
14:34:44 125  	  in_status	      IN CORE_OWNER.ITUNES_RECEIPT.STATUS%TYPE,
14:34:44 126  	  in_quantity	      IN CORE_OWNER.ITUNES_RECEIPT.QUANTITY%TYPE,
14:34:44 127  	  in_product_id       IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
14:34:44 128  	  in_transaction_id   IN CORE_OWNER.ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
14:34:44 129  	  in_purchase_date    IN CORE_OWNER.ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
14:34:44 130  	  in_original_transaction_id IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
14:34:44 131  	  in_original_purchase_date IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
14:34:44 132  	  in_app_item_id      IN CORE_OWNER.ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
14:34:44 133  	  in_version_external_id IN CORE_OWNER.ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
14:34:44 134  	  in_bid	      IN CORE_OWNER.ITUNES_RECEIPT.BID%TYPE,
14:34:44 135  	  in_bvrs	      IN CORE_OWNER.ITUNES_RECEIPT.BVRS%TYPE,
14:34:44 136  	  in_expires_date     IN CORE_OWNER.ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
14:34:44 137  	  in_updated_by       IN CORE_OWNER.ITUNES_RECEIPT.UPDATED_BY%TYPE,
14:34:44 138  	  in_cancel_date      IN CORE_OWNER.ITUNES_RECEIPT.CANCEL_DATE%TYPE
14:34:44 139  ) AS
14:34:44 140  -- VARIABLES
14:34:44 141  SPROC_NAME	CONSTANT VARCHAR2(32) := 'UPDATE_RECEIPT';
14:34:44 142  var_current_date	    DATE;
14:34:44 143  BEGIN
14:34:44 144  
14:34:44 145  	SELECT
14:34:44 146  	  sysdate
14:34:44 147  	INTO
14:34:44 148  	  var_current_date
14:34:44 149  	FROM
14:34:44 150  	  dual
14:34:44 151  	;
14:34:44 152  
14:34:44 153  	FOR REC IN (SELECT * FROM CORE_OWNER.ITUNES_RECEIPT WHERE ID = in_id) LOOP
14:34:44 154  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_ITUNES_RECEIPT_HISTORY
14:34:44 155  	  (
14:34:44 156  	      rec.id,
14:34:44 157  	      rec.subscription_id,
14:34:44 158  	      rec.receipt,
14:34:44 159  	      rec.status,
14:34:44 160  	      rec.quantity,
14:34:44 161  	      rec.product_id,
14:34:44 162  	      rec.transaction_id,
14:34:44 163  	      rec.purchase_date,
14:34:44 164  	      rec.original_transaction_id,
14:34:44 165  	      rec.original_purchase_date,
14:34:44 166  	      rec.app_item_id,
14:34:44 167  	      rec.version_external_id,
14:34:44 168  	      rec.bid,
14:34:44 169  	      rec.bvrs,
14:34:44 170  	      rec.expires_date,
14:34:44 171  	      rec.create_date,
14:34:44 172  	      rec.created_by,
14:34:44 173  	      rec.update_date,
14:34:44 174  	      rec.updated_by,
14:34:44 175  	      rec.last_check_date,
14:34:44 176  	      rec.cancel_date
14:34:44 177  	  );
14:34:44 178  	END LOOP;
14:34:44 179  
14:34:44 180  	UPDATE CORE_OWNER.ITUNES_RECEIPT
14:34:44 181  	SET
14:34:44 182  	  receipt = in_receipt,
14:34:44 183  	  status = in_status,
14:34:44 184  	  quantity = in_quantity,
14:34:44 185  	  product_id = in_product_id,
14:34:44 186  	  transaction_id = in_transaction_id,
14:34:44 187  	  purchase_date = in_purchase_date,
14:34:44 188  	  original_transaction_id = in_original_transaction_id,
14:34:44 189  	  original_purchase_date = in_original_purchase_date,
14:34:44 190  	  app_item_id = in_app_item_id,
14:34:44 191  	  version_external_id = in_version_external_id,
14:34:44 192  	  bid = in_bid,
14:34:44 193  	  bvrs = in_bvrs,
14:34:44 194  	  expires_date = in_expires_date,
14:34:44 195  	  update_date = var_current_date,
14:34:44 196  	  updated_by = in_updated_by,
14:34:44 197  	  last_check_date = var_current_date,
14:34:44 198  	  cancel_date = in_cancel_date
14:34:44 199  	WHERE
14:34:44 200  	  id = in_id
14:34:44 201  	;
14:34:44 202  
14:34:44 203  EXCEPTION
14:34:44 204  WHEN DUP_VAL_ON_INDEX THEN
14:34:44 205  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:44 206  	  SPROC_NAME, 'Duplicate value', SQLERRM);
14:34:44 207  WHEN OTHERS THEN
14:34:44 208  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 209  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:44 210  
14:34:44 211  END UPDATE_RECEIPT;
14:34:44 212  
14:34:44 213  PROCEDURE LINK_ITUNES_RECEIPT(
14:34:44 214  /*
14:34:44 215  Throws exceptions:
14:34:44 216  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 217  */
14:34:44 218  	  in_id 	      IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE,
14:34:44 219  	  in_subscription_id  IN CORE_OWNER.ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
14:34:44 220  	  in_updated_by       IN CORE_OWNER.ITUNES_RECEIPT.UPDATED_BY%TYPE
14:34:44 221  ) AS
14:34:44 222  -- VARIABLES
14:34:44 223  SPROC_NAME	CONSTANT VARCHAR2(32) := 'LINK_ITUNES_RECEIPT';
14:34:44 224  var_current_date	    DATE;
14:34:44 225  BEGIN
14:34:44 226  
14:34:44 227  	      SELECT
14:34:44 228  	  sysdate
14:34:44 229  	      INTO
14:34:44 230  	  var_current_date
14:34:44 231  	      FROM
14:34:44 232  	  dual
14:34:44 233  	      ;
14:34:44 234  
14:34:44 235  	      FOR REC IN (SELECT * FROM CORE_OWNER.ITUNES_RECEIPT WHERE ID = in_id) LOOP
14:34:44 236  	      CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_ITUNES_RECEIPT_HISTORY
14:34:44 237  	      (
14:34:44 238  	    rec.id,
14:34:44 239  	    rec.subscription_id,
14:34:44 240  	    rec.receipt,
14:34:44 241  	    rec.status,
14:34:44 242  	    rec.quantity,
14:34:44 243  	    rec.product_id,
14:34:44 244  	    rec.transaction_id,
14:34:44 245  	    rec.purchase_date,
14:34:44 246  	    rec.original_transaction_id,
14:34:44 247  	    rec.original_purchase_date,
14:34:44 248  	    rec.app_item_id,
14:34:44 249  	    rec.version_external_id,
14:34:44 250  	    rec.bid,
14:34:44 251  	    rec.bvrs,
14:34:44 252  	    rec.expires_date,
14:34:44 253  	    rec.create_date,
14:34:44 254  	    rec.created_by,
14:34:44 255  	    rec.update_date,
14:34:44 256  	    rec.updated_by,
14:34:44 257  	    rec.last_check_date,
14:34:44 258  	    rec.cancel_date
14:34:44 259  	      );
14:34:44 260  	      END LOOP;
14:34:44 261  
14:34:44 262  	      UPDATE CORE_OWNER.ITUNES_RECEIPT
14:34:44 263  		SET
14:34:44 264  		      subscription_id = in_subscription_id,
14:34:44 265  		      update_date = var_current_date,
14:34:44 266  	      updated_by = in_updated_by,
14:34:44 267  	      last_check_date = var_current_date
14:34:44 268  	      WHERE
14:34:44 269  		  id = in_id
14:34:44 270  	      ;
14:34:44 271  
14:34:44 272  	      EXCEPTION
14:34:44 273  	      WHEN DUP_VAL_ON_INDEX THEN
14:34:44 274  		PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:44 275  		  SPROC_NAME, 'Duplicate value', SQLERRM);
14:34:44 276  	      WHEN OTHERS THEN
14:34:44 277  		PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 278  		  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:44 279  END LINK_ITUNES_RECEIPT;
14:34:44 280  
14:34:44 281  
14:34:44 282  PROCEDURE MARK_RECEIPT_CHECKED(
14:34:44 283  /*
14:34:44 284  Throws exceptions:
14:34:44 285  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:44 286  */
14:34:44 287  	  in_id       IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE
14:34:44 288  ) AS
14:34:44 289  SPROC_NAME	CONSTANT VARCHAR2(32) := 'MARK_RECEIPT_CHECKED';
14:34:44 290  BEGIN
14:34:44 291  	UPDATE
14:34:44 292  	  CORE_OWNER.ITUNES_RECEIPT
14:34:44 293  	SET
14:34:44 294  	  last_check_date = sysdate
14:34:44 295  	WHERE
14:34:44 296  	  id = in_id
14:34:44 297  	;
14:34:44 298  EXCEPTION
14:34:44 299  WHEN OTHERS THEN
14:34:44 300  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:44 301  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:44 302  END MARK_RECEIPT_CHECKED;
14:34:44 303  
14:34:44 304  END PROCS_ITUNES_RECEIPT_CRU_V18;
14:34:44 305  .
14:34:44 SQL> /

Package body created.

Elapsed: 00:00:00.08
14:34:44 SQL> 
14:34:44 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LICENSE_CRU_V18" AS
14:34:44   2  
14:34:44   3  PROCEDURE CREATE_LICENSE(
14:34:44   4  	out_license_id		    OUT LICENSE.ID%TYPE,
14:34:44   5  	in_license_id		    IN LICENSE.ID%TYPE DEFAULT NULL,
14:34:44   6  	in_license_status_id	    IN LICENSE.LICENSE_STATUS_ID%TYPE,
14:34:44   7  	in_needs_entitlements	    IN LICENSE.NEEDS_ENTITLEMENTS%TYPE,
14:34:44   8  	in_start_date		    IN LICENSE.START_DATE%TYPE,
14:34:44   9  	in_offer_id		    IN LICENSE.OFFER_ID%TYPE,
14:34:44  10  	in_subscription_id	    IN LICENSE.SUBSCRIPTION_ID%TYPE,
14:34:44  11  	in_invoice_id		    IN LICENSE.INVOICE_ID%TYPE,
14:34:44  12  	in_end_date		    IN LICENSE.END_DATE%TYPE,
14:34:44  13  	in_created_by		    IN LICENSE.CREATED_BY%TYPE,
14:34:44  14  	in_is_extension 	    IN LICENSE.IS_EXTENSION%TYPE,
14:34:44  15  	in_current_offer_index	    IN LICENSE.CURRENT_OFFER_INDEX%TYPE,
14:34:44  16  	in_current_offer_recurr_num IN LICENSE.CURRENT_OFFER_RECURR_NUM%TYPE
14:34:44  17  ) AS
14:34:44  18  -- VARIABLES
14:34:44  19  var_license_id LICENSE.ID%TYPE;
14:34:44  20  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:44  21  var_date DATE := SYSDATE;
14:34:44  22  BEGIN
14:34:44  23  	IF in_license_id IS NULL THEN
14:34:44  24  	  SELECT
14:34:44  25  	    LCN_ID_SEQ.nextVal into var_license_id
14:34:44  26  	  FROM DUAL;
14:34:44  27  	ELSE
14:34:44  28  	  var_license_id := in_license_id;
14:34:44  29  	END IF;
14:34:44  30  	INSERT INTO
14:34:44  31  	  LICENSE (
14:34:44  32  	    ID,
14:34:44  33  	    LICENSE_STATUS_ID,
14:34:44  34  	    NEEDS_ENTITLEMENTS,
14:34:44  35  	    START_DATE,
14:34:44  36  	    OFFER_ID,
14:34:44  37  	    SUBSCRIPTION_ID,
14:34:44  38  	    INVOICE_ID,
14:34:44  39  	    END_DATE,
14:34:44  40  	    CREATE_DATE,
14:34:44  41  	    CREATED_BY,
14:34:44  42  	    UPDATE_DATE,
14:34:44  43  	    UPDATED_BY,
14:34:44  44  	    IS_EXTENSION,
14:34:44  45  	    CURRENT_OFFER_INDEX,
14:34:44  46  	    CURRENT_OFFER_RECURR_NUM,
14:34:44  47  	    ENTITLEMENT_END_DATE
14:34:44  48  	  ) VALUES (
14:34:44  49  	    var_license_id,
14:34:44  50  	    in_license_status_id,
14:34:44  51  	    in_needs_entitlements,
14:34:44  52  	    in_start_date,
14:34:44  53  	    in_offer_id,
14:34:44  54  	    in_subscription_id,
14:34:44  55  	    in_invoice_id,
14:34:44  56  	    in_end_date,
14:34:44  57  	    var_date,
14:34:44  58  	    in_created_by,
14:34:44  59  	    var_date,
14:34:44  60  	    in_created_by,
14:34:44  61  	    in_is_extension,
14:34:44  62  	    in_current_offer_index,
14:34:44  63  	    in_current_offer_recurr_num,
14:34:44  64  	    in_end_date
14:34:44  65  	  );
14:34:44  66  
14:34:44  67  	out_license_id := var_license_id;
14:34:44  68  END CREATE_LICENSE;
14:34:44  69  
14:34:44  70  /********************************************************************/
14:34:44  71  
14:34:44  72  PROCEDURE UPDATE_LICENSE (
14:34:44  73  	in_license_id		    IN LICENSE.ID%TYPE,
14:34:44  74  	in_license_status_id	    IN LICENSE.LICENSE_STATUS_ID%TYPE DEFAULT NULL,
14:34:44  75  	in_needs_entitlements	    IN LICENSE.NEEDS_ENTITLEMENTS%TYPE DEFAULT NULL,
14:34:44  76  	in_start_date		    IN LICENSE.START_DATE%TYPE DEFAULT NULL,
14:34:44  77  	in_end_date		    IN LICENSE.END_DATE%TYPE DEFAULT NULL,
14:34:44  78  	in_updated_by		    IN LICENSE.CREATED_BY%TYPE,
14:34:44  79  	in_is_extension 	    IN LICENSE.IS_EXTENSION%TYPE DEFAULT NULL,
14:34:44  80  	in_current_offer_index	    IN LICENSE.CURRENT_OFFER_INDEX%TYPE DEFAULT NULL,
14:34:44  81  	in_current_offer_recurr_num IN LICENSE.CURRENT_OFFER_RECURR_NUM%TYPE DEFAULT NULL,
14:34:44  82  	in_entitlement_end_date     IN LICENSE.ENTITLEMENT_END_DATE%TYPE DEFAULT NULL,
14:34:44  83  	in_grace_start_date	    IN LICENSE.GRACE_START_DATE%TYPE DEFAULT NULL,
14:34:44  84  	in_grace_end_date	    IN LICENSE.GRACE_END_DATE%TYPE DEFAULT NULL
14:34:44  85  ) AS
14:34:44  86  BEGIN
14:34:44  87  	-- Create history
14:34:44  88  	PROCS_HISTORY_V18.CREATE_LICENSE_HISTORY(
14:34:44  89  	  in_license_id 	       => in_license_id,
14:34:44  90  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:44  91  	);
14:34:44  92  
14:34:44  93  	UPDATE
14:34:44  94  	  LICENSE
14:34:44  95  	SET
14:34:44  96  	  LICENSE_STATUS_ID	   = NVL(in_license_status_id, LICENSE_STATUS_ID),
14:34:44  97  	  NEEDS_ENTITLEMENTS	   = NVL(in_needs_entitlements, NEEDS_ENTITLEMENTS),
14:34:44  98  	  START_DATE		   = NVL(in_start_date, START_DATE),
14:34:44  99  	  END_DATE		   = NVL(in_end_date, END_DATE),
14:34:44 100  	  UPDATE_DATE		   = SYSDATE,
14:34:44 101  	  UPDATED_BY		   = in_updated_by,
14:34:44 102  	  IS_EXTENSION		   = NVL(in_is_extension, IS_EXTENSION),
14:34:44 103  	  CURRENT_OFFER_INDEX	   = NVL(in_current_offer_index, CURRENT_OFFER_INDEX),
14:34:44 104  	  CURRENT_OFFER_RECURR_NUM = NVL(in_current_offer_recurr_num, CURRENT_OFFER_RECURR_NUM),
14:34:44 105  	  ENTITLEMENT_END_DATE	   = NVL(in_entitlement_end_date, ENTITLEMENT_END_DATE),
14:34:44 106  	  GRACE_START_DATE	   = NVL(in_grace_start_date, GRACE_START_DATE),
14:34:44 107  	  GRACE_END_DATE	   = NVL(in_grace_end_date, GRACE_END_DATE)
14:34:44 108  	WHERE
14:34:44 109  	  LICENSE.ID = in_license_id;
14:34:44 110  END UPDATE_LICENSE;
14:34:44 111  
14:34:44 112  END PROCS_LICENSE_CRU_V18;
14:34:44 113  .
14:34:44 SQL> /

Package body created.

Elapsed: 00:00:00.02
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LINE_ITEMS_CRU_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE CREATE_LINE_ITEM (
14:34:45   4  	inout_line_item_id  IN OUT LINE_ITEM.ID%TYPE,
14:34:45   5  	in_product_offer_id IN LINE_ITEM.PRODUCT_OFFER_ID%TYPE,
14:34:45   6  	in_invoice_id	    IN LINE_ITEM.INVOICE_ID%TYPE,
14:34:45   7  	in_amount	    IN LINE_ITEM.AMOUNT%TYPE,
14:34:45   8  	in_created_by	    IN LINE_ITEM.CREATED_BY%TYPE,
14:34:45   9  	in_discount_amount  IN LINE_ITEM.DISCOUNT_AMOUNT%TYPE,
14:34:45  10  	in_taxes_amount     IN LINE_ITEM.TAXES_AMOUNT%TYPE
14:34:45  11  ) AS
14:34:45  12  BEGIN
14:34:45  13  	IF inout_line_item_id IS NULL THEN
14:34:45  14  	  SELECT
14:34:45  15  	    LI_ID_SEQ.nextVal into inout_line_item_id
14:34:45  16  	  FROM DUAL;
14:34:45  17  	END IF;
14:34:45  18  	INSERT INTO LINE_ITEM (
14:34:45  19  	  ID,
14:34:45  20  	  PRODUCT_OFFER_ID,
14:34:45  21  	  INVOICE_ID,
14:34:45  22  	  AMOUNT,
14:34:45  23  	  QUANTITY,
14:34:45  24  	  CREATE_DATE,
14:34:45  25  	  CREATED_BY,
14:34:45  26  	  DISCOUNT_AMOUNT,
14:34:45  27  	  TAXES_AMOUNT
14:34:45  28  	) VALUES (
14:34:45  29  	  inout_line_item_id,
14:34:45  30  	  in_product_offer_id,
14:34:45  31  	  in_invoice_id,
14:34:45  32  	  in_amount,
14:34:45  33  	  1, -- [REVU]: Deprecated. Ignore this field
14:34:45  34  	  SYSDATE,
14:34:45  35  	  in_created_by,
14:34:45  36  	  in_discount_amount,
14:34:45  37  	  in_taxes_amount
14:34:45  38  	);
14:34:45  39  END CREATE_LINE_ITEM;
14:34:45  40  
14:34:45  41  /******************************************************************************/
14:34:45  42  
14:34:45  43  PROCEDURE UPDATE_LINE_ITEM (
14:34:45  44  	in_line_item_id     IN LINE_ITEM.ID%TYPE,
14:34:45  45  	in_amount	    IN LINE_ITEM.AMOUNT%TYPE DEFAULT NULL,
14:34:45  46  	in_discount_amount  IN LINE_ITEM.DISCOUNT_AMOUNT%TYPE  DEFAULT NULL,
14:34:45  47  	in_taxes_amount     IN LINE_ITEM.TAXES_AMOUNT%TYPE DEFAULT NULL
14:34:45  48  ) AS
14:34:45  49  BEGIN
14:34:45  50  	UPDATE
14:34:45  51  	  LINE_ITEM
14:34:45  52  	SET
14:34:45  53  	  LINE_ITEM.AMOUNT	    = NVL(in_amount, LINE_ITEM.AMOUNT),
14:34:45  54  	  LINE_ITEM.DISCOUNT_AMOUNT = NVL(in_discount_amount, LINE_ITEM.DISCOUNT_AMOUNT),
14:34:45  55  	  LINE_ITEM.TAXES_AMOUNT    = NVL(in_taxes_amount, LINE_ITEM.TAXES_AMOUNT)
14:34:45  56  	WHERE
14:34:45  57  	  LINE_ITEM.ID = in_line_item_id;
14:34:45  58  END UPDATE_LINE_ITEM;
14:34:45  59  
14:34:45  60  /******************************************************************************/
14:34:45  61  
14:34:45  62  PROCEDURE CREATE_DISCOUNT_LINE_ITEM (
14:34:45  63  	in_discount_id	IN DISCOUNT.ID%TYPE,
14:34:45  64  	in_line_item_id IN LINE_ITEM.ID%TYPE
14:34:45  65  ) AS
14:34:45  66  BEGIN
14:34:45  67  	INSERT INTO DISCOUNT_LINE_ITEM(
14:34:45  68  	  DISCOUNT_ID,
14:34:45  69  	  LINE_ITEM_ID
14:34:45  70  	) VALUES (
14:34:45  71  	  in_discount_id,
14:34:45  72  	  in_line_item_id
14:34:45  73  	);
14:34:45  74  END CREATE_DISCOUNT_LINE_ITEM;
14:34:45  75  
14:34:45  76  END PROCS_LINE_ITEMS_CRU_V18;
14:34:45  77  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.04
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_RECONCILIATION_CRU_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE CREATE_CPT_CHARGEBACK_ACT (
14:34:45   4  	out_cpt_chargeback_act_id   OUT RCN_CPT_CHARGEBACK_ACT_DETAIL.ID%TYPE,
14:34:45   5  	in_cpt_chargeback_act_id    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ID%TYPE DEFAULT NULL,
14:34:45   6  	in_ext_source_log_id	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:45   7  	in_record_type		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.RECORD_TYPE%TYPE,
14:34:45   8  	in_entity_type		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ENTITY_TYPE%TYPE,
14:34:45   9  	in_entity_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ENTITY_NUMBER%TYPE,
14:34:45  10  	in_chargeback_amount_issuer IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_AMOUNT_ISSUER%TYPE,
14:34:45  11  	in_prev_partial_repres	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.PREV_PARTIAL_REPRESENTMENT%TYPE,
14:34:45  12  	in_presentment_currency     IN RCN_CPT_CHARGEBACK_ACT_DETAIL.PRESENTMENT_CURRENCY%TYPE,
14:34:45  13  	in_chargeback_category	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_CATEGORY%TYPE,
14:34:45  14  	in_status_flag		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.STATUS_FLAG%TYPE,
14:34:45  15  	in_sequence_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.SEQUENCE_NUMBER%TYPE,
14:34:45  16  	in_merchant_order_number    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
14:34:45  17  	in_account_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ACCOUNT_NUMBER%TYPE,
14:34:45  18  	in_reason_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.REASON_CODE%TYPE,
14:34:45  19  	in_transaction_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.TRANSACTION_DATE%TYPE,
14:34:45  20  	in_chargeback_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_DATE%TYPE,
14:34:45  21  	in_activity_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ACTIVITY_DATE%TYPE,
14:34:45  22  	in_chargeback_amount_action IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_AMOUNT_ACTION%TYPE,
14:34:45  23  	in_fee_amount		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.FEE_AMOUNT%TYPE,
14:34:45  24  	in_usage_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.USAGE_CODE%TYPE,
14:34:45  25  	in_mop_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.MOP_CODE%TYPE,
14:34:45  26  	in_authorization_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.AUTHORIZATION_DATE%TYPE,
14:34:45  27  	in_chargeback_due_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_DUE_DATE%TYPE,
14:34:45  28  	in_created_by		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CREATED_BY%TYPE
14:34:45  29  ) AS
14:34:45  30  -- VARIABLES
14:34:45  31  var_cpt_chargeback_act_id RCN_CPT_CHARGEBACK_ACT_DETAIL.ID%TYPE;
14:34:45  32  var_date DATE := SYSDATE;
14:34:45  33  BEGIN
14:34:45  34  	IF in_cpt_chargeback_act_id IS NULL THEN
14:34:45  35  	  SELECT
14:34:45  36  	    RCN_CPT_CHRGBK_ACT_DETAIL_SEQ.nextVal into var_cpt_chargeback_act_id
14:34:45  37  	  FROM DUAL;
14:34:45  38  	ELSE
14:34:45  39  	  var_cpt_chargeback_act_id := in_cpt_chargeback_act_id;
14:34:45  40  	END IF;
14:34:45  41  	INSERT INTO
14:34:45  42  	  RCN_CPT_CHARGEBACK_ACT_DETAIL (
14:34:45  43  	    id,
14:34:45  44  	    rcn_ext_source_log_id,
14:34:45  45  	    record_type,
14:34:45  46  	    entity_type,
14:34:45  47  	    entity_number,
14:34:45  48  	    chargeback_amount_issuer,
14:34:45  49  	    prev_partial_representment,
14:34:45  50  	    presentment_currency,
14:34:45  51  	    chargeback_category,
14:34:45  52  	    status_flag,
14:34:45  53  	    sequence_number,
14:34:45  54  	    merchant_order_number,
14:34:45  55  	    account_number,
14:34:45  56  	    reason_code,
14:34:45  57  	    transaction_date,
14:34:45  58  	    chargeback_date,
14:34:45  59  	    activity_date,
14:34:45  60  	    chargeback_amount_action,
14:34:45  61  	    fee_amount,
14:34:45  62  	    usage_code,
14:34:45  63  	    mop_code,
14:34:45  64  	    authorization_date,
14:34:45  65  	    chargeback_due_date,
14:34:45  66  	    create_date,
14:34:45  67  	    created_by
14:34:45  68  	  ) VALUES (
14:34:45  69  	    var_cpt_chargeback_act_id,
14:34:45  70  	    in_ext_source_log_id,
14:34:45  71  	    in_record_type,
14:34:45  72  	    in_entity_type,
14:34:45  73  	    in_entity_number,
14:34:45  74  	    in_chargeback_amount_issuer,
14:34:45  75  	    in_prev_partial_repres,
14:34:45  76  	    in_presentment_currency,
14:34:45  77  	    in_chargeback_category,
14:34:45  78  	    in_status_flag,
14:34:45  79  	    in_sequence_number,
14:34:45  80  	    in_merchant_order_number,
14:34:45  81  	    in_account_number,
14:34:45  82  	    in_reason_code,
14:34:45  83  	    in_transaction_date,
14:34:45  84  	    in_chargeback_date,
14:34:45  85  	    in_activity_date,
14:34:45  86  	    in_chargeback_amount_action,
14:34:45  87  	    in_fee_amount,
14:34:45  88  	    in_usage_code,
14:34:45  89  	    in_mop_code,
14:34:45  90  	    in_authorization_date,
14:34:45  91  	    in_chargeback_due_date,
14:34:45  92  	    var_date,
14:34:45  93  	    in_created_by
14:34:45  94  	  );
14:34:45  95  
14:34:45  96  	out_cpt_chargeback_act_id := var_cpt_chargeback_act_id;
14:34:45  97  END CREATE_CPT_CHARGEBACK_ACT;
14:34:45  98  
14:34:45  99  PROCEDURE CREATE_EXT_SOURCE_LOG (
14:34:45 100  	out_ext_source_log_id	    OUT RCN_EXT_SOURCE_LOG.ID%TYPE,
14:34:45 101  	in_ext_source_log_id	    IN RCN_EXT_SOURCE_LOG.ID%TYPE DEFAULT NULL,
14:34:45 102  	in_extraction_timestamp     IN RCN_EXT_SOURCE_LOG.EXTRACTION_TIMESTAMP%TYPE,
14:34:45 103  	in_report_date		    IN RCN_EXT_SOURCE_LOG.REPORT_DATE%TYPE,
14:34:45 104  	in_report_gen_datetime	    IN RCN_EXT_SOURCE_LOG.REPORT_GENERATION_DATETIME%TYPE,
14:34:45 105  	in_record_type		    IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
14:34:45 106  	in_report_file_name	    IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE,
14:34:45 107  	in_created_by		    IN RCN_EXT_SOURCE_LOG.CREATED_BY%TYPE
14:34:45 108  ) AS
14:34:45 109  -- VARIABLES
14:34:45 110  var_ext_source_log_id RCN_EXT_SOURCE_LOG.ID%TYPE;
14:34:45 111  var_date DATE := SYSDATE;
14:34:45 112  BEGIN
14:34:45 113  	IF in_ext_source_log_id IS NULL THEN
14:34:45 114  	  SELECT
14:34:45 115  	    RCN_EXT_SOURCE_LOG_SEQ.nextVal into var_ext_source_log_id
14:34:45 116  	  FROM DUAL;
14:34:45 117  	ELSE
14:34:45 118  	  var_ext_source_log_id := in_ext_source_log_id;
14:34:45 119  	END IF;
14:34:45 120  	INSERT INTO
14:34:45 121  	  RCN_EXT_SOURCE_LOG (
14:34:45 122  	    id,
14:34:45 123  	    extraction_timestamp,
14:34:45 124  	    report_date,
14:34:45 125  	    report_generation_datetime,
14:34:45 126  	    record_type,
14:34:45 127  	    report_file_name,
14:34:45 128  	    create_date,
14:34:45 129  	    created_by
14:34:45 130  	  ) VALUES (
14:34:45 131  	    var_ext_source_log_id,
14:34:45 132  	    in_extraction_timestamp,
14:34:45 133  	    in_report_date,
14:34:45 134  	    in_report_gen_datetime,
14:34:45 135  	    in_record_type,
14:34:45 136  	    in_report_file_name,
14:34:45 137  	    var_date,
14:34:45 138  	    in_created_by
14:34:45 139  	  );
14:34:45 140  
14:34:45 141  	out_ext_source_log_id := var_ext_source_log_id;
14:34:45 142  END CREATE_EXT_SOURCE_LOG;
14:34:45 143  
14:34:45 144  PROCEDURE CREATE_CPT_SERVICE_CHARGE (
14:34:45 145  	out_cpt_service_charge_id   OUT RCN_CPT_SERVICE_CHARGE_DETAIL.ID%TYPE,
14:34:45 146  	in_cpt_service_charge_id    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ID%TYPE DEFAULT NULL,
14:34:45 147  	in_ext_source_log_id	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:45 148  	in_record_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.RECORD_TYPE%TYPE,
14:34:45 149  	in_category		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.CATEGORY%TYPE,
14:34:45 150  	in_sub_category 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SUB_CATEGORY%TYPE,
14:34:45 151  	in_entity_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ENTITY_TYPE%TYPE,
14:34:45 152  	in_entity_number	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ENTITY_NUMBER%TYPE,
14:34:45 153  	in_funds_trans_inst_number  IN RCN_CPT_SERVICE_CHARGE_DETAIL.FUNDS_TRANSFER_INST_NUMBER%TYPE,
14:34:45 154  	in_secure_ba_number	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SECURE_BA_NUMBER%TYPE,
14:34:45 155  	in_settlement_currency	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SETTLEMENT_CURRENCY%TYPE,
14:34:45 156  	in_fee_schedule 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.FEE_SCHEDULE%TYPE,
14:34:45 157  	in_mop			    IN RCN_CPT_SERVICE_CHARGE_DETAIL.MOP%TYPE,
14:34:45 158  	in_interchange_qual	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.INTERCHANGE_QUALIFICATION%TYPE,
14:34:45 159  	in_fee_type_description     IN RCN_CPT_SERVICE_CHARGE_DETAIL.FEE_TYPE_DESCRIPTION%TYPE,
14:34:45 160  	in_action_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ACTION_TYPE%TYPE,
14:34:45 161  	in_unit_quantity	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.UNIT_QUANTITY%TYPE,
14:34:45 162  	in_unit_fee		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.UNIT_FEE%TYPE,
14:34:45 163  	in_amount		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.AMOUNT%TYPE,
14:34:45 164  	in_percentage_rate	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.PERCENTAGE_RATE%TYPE,
14:34:45 165  	in_total_charge 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.TOTAL_CHARGE%TYPE,
14:34:45 166  	in_created_by		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.CREATED_BY%TYPE
14:34:45 167  ) AS
14:34:45 168  -- VARIABLES
14:34:45 169  var_cpt_service_charge_id RCN_CPT_SERVICE_CHARGE_DETAIL.ID%TYPE;
14:34:45 170  var_date DATE := SYSDATE;
14:34:45 171  BEGIN
14:34:45 172  	IF in_cpt_service_charge_id IS NULL THEN
14:34:45 173  	  SELECT
14:34:45 174  	    RCN_CPT_SERV_CHARGE_DETAIL_SEQ.nextVal into var_cpt_service_charge_id
14:34:45 175  	  FROM DUAL;
14:34:45 176  	ELSE
14:34:45 177  	  var_cpt_service_charge_id := in_cpt_service_charge_id;
14:34:45 178  	END IF;
14:34:45 179  	INSERT INTO
14:34:45 180  	  RCN_CPT_SERVICE_CHARGE_DETAIL (
14:34:45 181  	    id,
14:34:45 182  	    rcn_ext_source_log_id,
14:34:45 183  	    record_type,
14:34:45 184  	    category,
14:34:45 185  	    sub_category,
14:34:45 186  	    entity_type,
14:34:45 187  	    entity_number,
14:34:45 188  	    funds_transfer_inst_number,
14:34:45 189  	    secure_ba_number,
14:34:45 190  	    settlement_currency,
14:34:45 191  	    fee_schedule,
14:34:45 192  	    mop,
14:34:45 193  	    interchange_qualification,
14:34:45 194  	    fee_type_description,
14:34:45 195  	    action_type,
14:34:45 196  	    unit_quantity,
14:34:45 197  	    unit_fee,
14:34:45 198  	    amount,
14:34:45 199  	    percentage_rate,
14:34:45 200  	    total_charge,
14:34:45 201  	    create_date,
14:34:45 202  	    created_by
14:34:45 203  	  ) VALUES (
14:34:45 204  	    var_cpt_service_charge_id,
14:34:45 205  	    in_ext_source_log_id,
14:34:45 206  	    in_record_type,
14:34:45 207  	    in_category,
14:34:45 208  	    in_sub_category,
14:34:45 209  	    in_entity_type,
14:34:45 210  	    in_entity_number,
14:34:45 211  	    in_funds_trans_inst_number,
14:34:45 212  	    in_secure_ba_number,
14:34:45 213  	    in_settlement_currency,
14:34:45 214  	    in_fee_schedule,
14:34:45 215  	    in_mop,
14:34:45 216  	    in_interchange_qual,
14:34:45 217  	    in_fee_type_description,
14:34:45 218  	    in_action_type,
14:34:45 219  	    in_unit_quantity,
14:34:45 220  	    in_unit_fee,
14:34:45 221  	    in_amount,
14:34:45 222  	    in_percentage_rate,
14:34:45 223  	    in_total_charge,
14:34:45 224  	    var_date,
14:34:45 225  	    in_created_by
14:34:45 226  	  );
14:34:45 227  
14:34:45 228  	out_cpt_service_charge_id := var_cpt_service_charge_id;
14:34:45 229  END CREATE_CPT_SERVICE_CHARGE;
14:34:45 230  
14:34:45 231  PROCEDURE CREATE_CPT_EXCEPTION (
14:34:45 232  	out_cpt_exception_id	 OUT RCN_CPT_EXCEPTION_DETAIL.ID%TYPE,
14:34:45 233  	in_cpt_exception_id	 IN RCN_CPT_EXCEPTION_DETAIL.ID%TYPE DEFAULT NULL,
14:34:45 234  	in_ext_source_log_id	 IN RCN_CPT_EXCEPTION_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:45 235  	in_record_type		 IN RCN_CPT_EXCEPTION_DETAIL.RECORD_TYPE%TYPE,
14:34:45 236  	in_submission_date	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_DATE%TYPE,
14:34:45 237  	in_pid_number		 IN RCN_CPT_EXCEPTION_DETAIL.PID_NUMBER%TYPE,
14:34:45 238  	in_pid_short_name	 IN RCN_CPT_EXCEPTION_DETAIL.PID_SHORT_NAME%TYPE,
14:34:45 239  	in_submission_number	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_NUMBER%TYPE,
14:34:45 240  	in_record_number	 IN RCN_CPT_EXCEPTION_DETAIL.RECORD_NUMBER%TYPE,
14:34:45 241  	in_entity_type		 IN RCN_CPT_EXCEPTION_DETAIL.ENTITY_TYPE%TYPE,
14:34:45 242  	in_entity_number	 IN RCN_CPT_EXCEPTION_DETAIL.ENTITY_NUMBER%TYPE,
14:34:45 243  	in_presentment_currency  IN RCN_CPT_EXCEPTION_DETAIL.PRESENTMENT_CURRENCY%TYPE,
14:34:45 244  	in_merchant_order_number IN RCN_CPT_EXCEPTION_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
14:34:45 245  	in_rdfi_number		 IN RCN_CPT_EXCEPTION_DETAIL.RDFI_NUMBER%TYPE,
14:34:45 246  	in_account_number	 IN RCN_CPT_EXCEPTION_DETAIL.ACCOUNT_NUMBER%TYPE,
14:34:45 247  	in_expiration_date	 IN RCN_CPT_EXCEPTION_DETAIL.EXPIRATION_DATE%TYPE,
14:34:45 248  	in_amount		 IN RCN_CPT_EXCEPTION_DETAIL.AMOUNT%TYPE,
14:34:45 249  	in_mop			 IN RCN_CPT_EXCEPTION_DETAIL.MOP%TYPE,
14:34:45 250  	in_action_code		 IN RCN_CPT_EXCEPTION_DETAIL.ACTION_CODE%TYPE,
14:34:45 251  	in_auth_date		 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_DATE%TYPE,
14:34:45 252  	in_auth_code		 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_CODE%TYPE,
14:34:45 253  	in_auth_response_code	 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_RESPONSE_CODE%TYPE,
14:34:45 254  	in_trace_number 	 IN RCN_CPT_EXCEPTION_DETAIL.TRACE_NUMBER%TYPE,
14:34:45 255  	in_consumer_country_code IN RCN_CPT_EXCEPTION_DETAIL.CONSUMER_COUNTRY_CODE%TYPE,
14:34:45 256  	in_category		 IN RCN_CPT_EXCEPTION_DETAIL.CATEGORY%TYPE,
14:34:45 257  	in_mcc			 IN RCN_CPT_EXCEPTION_DETAIL.MCC%TYPE,
14:34:45 258  	in_reject_code		 IN RCN_CPT_EXCEPTION_DETAIL.REJECT_CODE%TYPE,
14:34:45 259  	in_submission_status	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_STATUS%TYPE,
14:34:45 260  	in_created_by		 IN RCN_CPT_EXCEPTION_DETAIL.CREATED_BY%TYPE
14:34:45 261  ) AS
14:34:45 262  -- VARIABLES
14:34:45 263  var_cpt_exception_id RCN_CPT_EXCEPTION_DETAIL.ID%TYPE;
14:34:45 264  var_date DATE := SYSDATE;
14:34:45 265  BEGIN
14:34:45 266  	IF in_cpt_exception_id IS NULL THEN
14:34:45 267  	  SELECT
14:34:45 268  	    RCN_CPT_EXCEPTION_DETAIL_SEQ.nextVal into var_cpt_exception_id
14:34:45 269  	  FROM DUAL;
14:34:45 270  	ELSE
14:34:45 271  	  var_cpt_exception_id := in_cpt_exception_id;
14:34:45 272  	END IF;
14:34:45 273  	INSERT INTO
14:34:45 274  	  RCN_CPT_EXCEPTION_DETAIL (
14:34:45 275  	    id,
14:34:45 276  	    rcn_ext_source_log_id,
14:34:45 277  	    record_type,
14:34:45 278  	    submission_date,
14:34:45 279  	    pid_number,
14:34:45 280  	    pid_short_name,
14:34:45 281  	    submission_number,
14:34:45 282  	    record_number,
14:34:45 283  	    entity_type,
14:34:45 284  	    entity_number,
14:34:45 285  	    presentment_currency,
14:34:45 286  	    merchant_order_number,
14:34:45 287  	    rdfi_number,
14:34:45 288  	    account_number,
14:34:45 289  	    expiration_date,
14:34:45 290  	    amount,
14:34:45 291  	    mop,
14:34:45 292  	    action_code,
14:34:45 293  	    auth_date,
14:34:45 294  	    auth_code,
14:34:45 295  	    auth_response_code,
14:34:45 296  	    trace_number,
14:34:45 297  	    consumer_country_code,
14:34:45 298  	    category,
14:34:45 299  	    mcc,
14:34:45 300  	    reject_code,
14:34:45 301  	    submission_status,
14:34:45 302  	    create_date,
14:34:45 303  	    created_by
14:34:45 304  	  ) VALUES (
14:34:45 305  	    var_cpt_exception_id,
14:34:45 306  	    in_ext_source_log_id,
14:34:45 307  	    in_record_type,
14:34:45 308  	    in_submission_date,
14:34:45 309  	    in_pid_number,
14:34:45 310  	    in_pid_short_name,
14:34:45 311  	    in_submission_number,
14:34:45 312  	    in_record_number,
14:34:45 313  	    in_entity_type,
14:34:45 314  	    in_entity_number,
14:34:45 315  	    in_presentment_currency,
14:34:45 316  	    in_merchant_order_number,
14:34:45 317  	    in_rdfi_number,
14:34:45 318  	    in_account_number,
14:34:45 319  	    in_expiration_date,
14:34:45 320  	    in_amount,
14:34:45 321  	    in_mop,
14:34:45 322  	    in_action_code,
14:34:45 323  	    in_auth_date,
14:34:45 324  	    in_auth_code,
14:34:45 325  	    in_auth_response_code,
14:34:45 326  	    in_trace_number,
14:34:45 327  	    in_consumer_country_code,
14:34:45 328  	    in_category,
14:34:45 329  	    in_mcc,
14:34:45 330  	    in_reject_code,
14:34:45 331  	    in_submission_status,
14:34:45 332  	    var_date,
14:34:45 333  	    in_created_by
14:34:45 334  	  );
14:34:45 335  
14:34:45 336  	out_cpt_exception_id := var_cpt_exception_id;
14:34:45 337  END CREATE_CPT_EXCEPTION;
14:34:45 338  
14:34:45 339  PROCEDURE CREATE_CPT_DEPOSIT (
14:34:45 340  	out_cpt_deposit_id	  OUT RCN_CPT_DEPOSIT_DETAIL.ID%TYPE,
14:34:45 341  	in_cpt_deposit_id	  IN RCN_CPT_DEPOSIT_DETAIL.ID%TYPE DEFAULT NULL,
14:34:45 342  	in_ext_source_log_id	  IN RCN_CPT_DEPOSIT_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:45 343  	in_record_type		  IN RCN_CPT_DEPOSIT_DETAIL.RECORD_TYPE%TYPE,
14:34:45 344  	in_submission_date	  IN RCN_CPT_DEPOSIT_DETAIL.SUBMISSION_DATE%TYPE,
14:34:45 345  	in_pid_number		  IN RCN_CPT_DEPOSIT_DETAIL.PID_NUMBER%TYPE,
14:34:45 346  	in_pid_short_name	  IN RCN_CPT_DEPOSIT_DETAIL.PID_SHORT_NAME%TYPE,
14:34:45 347  	in_submission_number	  IN RCN_CPT_DEPOSIT_DETAIL.SUBMISSION_NUMBER%TYPE,
14:34:45 348  	in_record_number	  IN RCN_CPT_DEPOSIT_DETAIL.RECORD_NUMBER%TYPE,
14:34:45 349  	in_entity_type		  IN RCN_CPT_DEPOSIT_DETAIL.ENTITY_TYPE%TYPE,
14:34:45 350  	in_entity_number	  IN RCN_CPT_DEPOSIT_DETAIL.ENTITY_NUMBER%TYPE,
14:34:45 351  	in_presentment_currency   IN RCN_CPT_DEPOSIT_DETAIL.PRESENTMENT_CURRENCY%TYPE,
14:34:45 352  	in_merchant_order_number  IN RCN_CPT_DEPOSIT_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
14:34:45 353  	in_rdfi_number		  IN RCN_CPT_DEPOSIT_DETAIL.RDFI_NUMBER%TYPE,
14:34:45 354  	in_account_number	  IN RCN_CPT_DEPOSIT_DETAIL.ACCOUNT_NUMBER%TYPE,
14:34:45 355  	in_expiration_date	  IN RCN_CPT_DEPOSIT_DETAIL.EXPIRATION_DATE%TYPE,
14:34:45 356  	in_amount		  IN RCN_CPT_DEPOSIT_DETAIL.AMOUNT%TYPE,
14:34:45 357  	in_mop			  IN RCN_CPT_DEPOSIT_DETAIL.MOP%TYPE,
14:34:45 358  	in_action_code		  IN RCN_CPT_DEPOSIT_DETAIL.ACTION_CODE%TYPE,
14:34:45 359  	in_auth_date		  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_DATE%TYPE,
14:34:45 360  	in_auth_code		  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_CODE%TYPE,
14:34:45 361  	in_auth_response_code	  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_RESPONSE_CODE%TYPE,
14:34:45 362  	in_trace_number 	  IN RCN_CPT_DEPOSIT_DETAIL.TRACE_NUMBER%TYPE,
14:34:45 363  	in_consumer_country_code  IN RCN_CPT_DEPOSIT_DETAIL.CONSUMER_COUNTRY_CODE%TYPE,
14:34:45 364  	in_mcc			  IN RCN_CPT_DEPOSIT_DETAIL.MCC%TYPE,
14:34:45 365  	in_fee_code		  IN RCN_CPT_DEPOSIT_DETAIL.FEE_CODE%TYPE,
14:34:45 366  	in_unit_fee		  IN RCN_CPT_DEPOSIT_DETAIL.UNIT_FEE%TYPE,
14:34:45 367  	in_percent_fee		  IN RCN_CPT_DEPOSIT_DETAIL.PERCENT_FEE%TYPE,
14:34:45 368  	in_total_interchange_fee  IN RCN_CPT_DEPOSIT_DETAIL.TOTAL_INTERCHANGE_FEE%TYPE,
14:34:45 369  	in_total_assessment_fee   IN RCN_CPT_DEPOSIT_DETAIL.TOTAL_ASSESSMENT_FEE%TYPE,
14:34:45 370  	in_other_fee		  IN RCN_CPT_DEPOSIT_DETAIL.OTHER_FEE%TYPE,
14:34:45 371  	in_created_by		  IN RCN_CPT_DEPOSIT_DETAIL.CREATED_BY%TYPE
14:34:45 372  ) AS
14:34:45 373  -- VARIABLES
14:34:45 374  var_cpt_deposit_id RCN_CPT_DEPOSIT_DETAIL.ID%TYPE;
14:34:45 375  var_date DATE := SYSDATE;
14:34:45 376  BEGIN
14:34:45 377  	IF in_cpt_deposit_id IS NULL THEN
14:34:45 378  	  SELECT
14:34:45 379  	    RCN_CPT_DEPOSIT_DETAIL_SEQ.nextVal into var_cpt_deposit_id
14:34:45 380  	  FROM DUAL;
14:34:45 381  	ELSE
14:34:45 382  	  var_cpt_deposit_id := in_cpt_deposit_id;
14:34:45 383  	END IF;
14:34:45 384  	INSERT INTO
14:34:45 385  	  RCN_CPT_DEPOSIT_DETAIL (
14:34:45 386  	    id,
14:34:45 387  	    rcn_ext_source_log_id,
14:34:45 388  	    record_type,
14:34:45 389  	    submission_date,
14:34:45 390  	    pid_number,
14:34:45 391  	    pid_short_name,
14:34:45 392  	    submission_number,
14:34:45 393  	    record_number,
14:34:45 394  	    entity_type,
14:34:45 395  	    entity_number,
14:34:45 396  	    presentment_currency,
14:34:45 397  	    merchant_order_number,
14:34:45 398  	    rdfi_number,
14:34:45 399  	    account_number,
14:34:45 400  	    expiration_date,
14:34:45 401  	    amount,
14:34:45 402  	    mop,
14:34:45 403  	    action_code,
14:34:45 404  	    auth_date,
14:34:45 405  	    auth_code,
14:34:45 406  	    auth_response_code,
14:34:45 407  	    trace_number,
14:34:45 408  	    consumer_country_code,
14:34:45 409  	    mcc,
14:34:45 410  	    fee_code,
14:34:45 411  	    unit_fee,
14:34:45 412  	    percent_fee,
14:34:45 413  	    total_interchange_fee,
14:34:45 414  	    total_assessment_fee,
14:34:45 415  	    other_fee,
14:34:45 416  	    create_date,
14:34:45 417  	    created_by
14:34:45 418  	  ) VALUES (
14:34:45 419  	    var_cpt_deposit_id,
14:34:45 420  	    in_ext_source_log_id,
14:34:45 421  	    in_record_type,
14:34:45 422  	    in_submission_date,
14:34:45 423  	    in_pid_number,
14:34:45 424  	    in_pid_short_name,
14:34:45 425  	    in_submission_number,
14:34:45 426  	    in_record_number,
14:34:45 427  	    in_entity_type,
14:34:45 428  	    in_entity_number,
14:34:45 429  	    in_presentment_currency,
14:34:45 430  	    in_merchant_order_number,
14:34:45 431  	    in_rdfi_number,
14:34:45 432  	    in_account_number,
14:34:45 433  	    in_expiration_date,
14:34:45 434  	    in_amount,
14:34:45 435  	    in_mop,
14:34:45 436  	    in_action_code,
14:34:45 437  	    in_auth_date,
14:34:45 438  	    in_auth_code,
14:34:45 439  	    in_auth_response_code,
14:34:45 440  	    in_trace_number,
14:34:45 441  	    in_consumer_country_code,
14:34:45 442  	    in_mcc,
14:34:45 443  	    in_fee_code,
14:34:45 444  	    in_unit_fee,
14:34:45 445  	    in_percent_fee,
14:34:45 446  	    in_total_interchange_fee,
14:34:45 447  	    in_total_assessment_fee,
14:34:45 448  	    in_other_fee,
14:34:45 449  	    var_date,
14:34:45 450  	    in_created_by
14:34:45 451  	  );
14:34:45 452  
14:34:45 453  	out_cpt_deposit_id := var_cpt_deposit_id;
14:34:45 454  END CREATE_CPT_DEPOSIT;
14:34:45 455  
14:34:45 456  PROCEDURE CREATE_PP_SETTLEMENT (
14:34:45 457  	out_pp_settlement_id	   OUT RCN_PP_SETTLEMENT.ID%TYPE,
14:34:45 458  	in_pp_settlement_id	   IN RCN_PP_SETTLEMENT.ID%TYPE DEFAULT NULL,
14:34:45 459  	in_ext_source_log_id	   IN RCN_PP_SETTLEMENT.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:45 460  	in_transaction_id	   IN RCN_PP_SETTLEMENT.TRANSACTION_ID%TYPE,
14:34:45 461  	in_invoice_id		   IN RCN_PP_SETTLEMENT.INVOICE_ID%TYPE,
14:34:45 462  	in_pp_ref_id		   IN RCN_PP_SETTLEMENT.PP_REF_ID%TYPE,
14:34:45 463  	in_pp_ref_id_type	   IN RCN_PP_SETTLEMENT.PP_REF_ID_TYPE%TYPE,
14:34:45 464  	in_trans_event_code	   IN RCN_PP_SETTLEMENT.TRANS_EVENT_CODE%TYPE,
14:34:45 465  	in_trans_init_date	   IN RCN_PP_SETTLEMENT.TRANS_INIT_DATE%TYPE,
14:34:45 466  	in_trans_comp_date	   IN RCN_PP_SETTLEMENT.TRANS_COMP_DATE%TYPE,
14:34:45 467  	in_trans_deb_or_cred	   IN RCN_PP_SETTLEMENT.TRANS_DEB_OR_CRED%TYPE,
14:34:45 468  	in_gross_trans_amount	   IN RCN_PP_SETTLEMENT.GROSS_TRANS_AMOUNT%TYPE,
14:34:45 469  	in_gross_trans_currency    IN RCN_PP_SETTLEMENT.GROSS_TRANS_CURRENCY%TYPE,
14:34:45 470  	in_fee_deb_or_cred	   IN RCN_PP_SETTLEMENT.FEE_DEB_OR_CRED%TYPE,
14:34:45 471  	in_fee_amount		   IN RCN_PP_SETTLEMENT.FEE_AMOUNT%TYPE,
14:34:45 472  	in_fee_currency 	   IN RCN_PP_SETTLEMENT.FEE_CURRENCY%TYPE,
14:34:45 473  	in_custom_field 	   IN RCN_PP_SETTLEMENT.CUSTOM_FIELD%TYPE,
14:34:45 474  	in_created_by		   IN RCN_PP_SETTLEMENT.CREATED_BY%TYPE
14:34:45 475  ) AS
14:34:45 476  -- VARIABLES
14:34:45 477  var_pp_settlement_id RCN_PP_SETTLEMENT.ID%TYPE;
14:34:45 478  var_date DATE := SYSDATE;
14:34:45 479  BEGIN
14:34:45 480  	IF in_pp_settlement_id IS NULL THEN
14:34:45 481  	  SELECT
14:34:45 482  	    RCN_PP_SETTLEMENT_SEQ.nextVal into var_pp_settlement_id
14:34:45 483  	  FROM DUAL;
14:34:45 484  	ELSE
14:34:45 485  	  var_pp_settlement_id := in_pp_settlement_id;
14:34:45 486  	END IF;
14:34:45 487  	INSERT INTO
14:34:45 488  	  RCN_PP_SETTLEMENT (
14:34:45 489  	    id,
14:34:45 490  	    rcn_ext_source_log_id,
14:34:45 491  	    transaction_id,
14:34:45 492  	    invoice_id,
14:34:45 493  	    pp_ref_id,
14:34:45 494  	    pp_ref_id_type,
14:34:45 495  	    trans_event_code,
14:34:45 496  	    trans_init_date,
14:34:45 497  	    trans_comp_date,
14:34:45 498  	    trans_deb_or_cred,
14:34:45 499  	    gross_trans_amount,
14:34:45 500  	    gross_trans_currency,
14:34:45 501  	    fee_deb_or_cred,
14:34:45 502  	    fee_amount,
14:34:45 503  	    fee_currency,
14:34:45 504  	    custom_field,
14:34:45 505  	    create_date,
14:34:45 506  	    created_by
14:34:45 507  	  ) VALUES (
14:34:45 508  	    var_pp_settlement_id,
14:34:45 509  	    in_ext_source_log_id,
14:34:45 510  	    in_transaction_id,
14:34:45 511  	    in_invoice_id,
14:34:45 512  	    in_pp_ref_id,
14:34:45 513  	    in_pp_ref_id_type,
14:34:45 514  	    in_trans_event_code,
14:34:45 515  	    in_trans_init_date,
14:34:45 516  	    in_trans_comp_date,
14:34:45 517  	    in_trans_deb_or_cred,
14:34:45 518  	    in_gross_trans_amount,
14:34:45 519  	    in_gross_trans_currency,
14:34:45 520  	    in_fee_deb_or_cred,
14:34:45 521  	    in_fee_amount,
14:34:45 522  	    in_fee_currency,
14:34:45 523  	    in_custom_field,
14:34:45 524  	    var_date,
14:34:45 525  	    in_created_by
14:34:45 526  	  );
14:34:45 527  
14:34:45 528  	out_pp_settlement_id := var_pp_settlement_id;
14:34:45 529  END CREATE_PP_SETTLEMENT;
14:34:45 530  
14:34:45 531  PROCEDURE CREATE_PP_DISPUTE (
14:34:45 532  	out_pp_dispute_id	     OUT RCN_PP_DISPUTE.ID%TYPE,
14:34:45 533  	in_pp_dispute_id	     IN RCN_PP_DISPUTE.ID%TYPE DEFAULT NULL,
14:34:45 534  	in_ext_source_log_id	     IN RCN_PP_DISPUTE.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:45 535  	in_dispute_type 	     IN RCN_PP_DISPUTE.DISPUTE_TYPE%TYPE,
14:34:45 536  	in_claimant_name	     IN RCN_PP_DISPUTE.CLAIMANT_NAME%TYPE,
14:34:45 537  	in_claimant_email	     IN RCN_PP_DISPUTE.CLAIMANT_EMAIL%TYPE,
14:34:45 538  	in_transaction_id	     IN RCN_PP_DISPUTE.TRANSACTION_ID%TYPE,
14:34:45 539  	in_trans_date		     IN RCN_PP_DISPUTE.TRANS_DATE%TYPE,
14:34:45 540  	in_disputed_amount	     IN RCN_PP_DISPUTE.DISPUTED_AMOUNT%TYPE,
14:34:45 541  	in_disputed_amount_currency  IN RCN_PP_DISPUTE.DISPUTED_AMOUNT_CURRENCY%TYPE,
14:34:45 542  	in_dispute_reason	     IN RCN_PP_DISPUTE.DISPUTE_REASON%TYPE,
14:34:45 543  	in_dispute_filing_date	     IN RCN_PP_DISPUTE.DISPUTE_FILING_DATE%TYPE,
14:34:45 544  	in_dispute_status	     IN RCN_PP_DISPUTE.DISPUTE_STATUS%TYPE,
14:34:45 545  	in_dispute_case_id	     IN RCN_PP_DISPUTE.DISPUTE_CASE_ID%TYPE,
14:34:45 546  	in_invoice_id		     IN RCN_PP_DISPUTE.INVOICE_ID%TYPE,
14:34:45 547  	in_created_by		     IN RCN_PP_DISPUTE.CREATED_BY%TYPE
14:34:45 548  ) AS
14:34:45 549  -- VARIABLES
14:34:45 550  var_pp_dispute_id RCN_PP_DISPUTE.ID%TYPE;
14:34:45 551  var_date DATE := SYSDATE;
14:34:45 552  BEGIN
14:34:45 553  	IF in_pp_dispute_id IS NULL THEN
14:34:45 554  	  SELECT
14:34:45 555  	    RCN_PP_DISPUTE_SEQ.nextVal into var_pp_dispute_id
14:34:45 556  	  FROM DUAL;
14:34:45 557  	ELSE
14:34:45 558  	  var_pp_dispute_id := in_pp_dispute_id;
14:34:45 559  	END IF;
14:34:45 560  	INSERT INTO
14:34:45 561  	  RCN_PP_DISPUTE (
14:34:45 562  	    id,
14:34:45 563  	    rcn_ext_source_log_id,
14:34:45 564  	    dispute_type,
14:34:45 565  	    claimant_name,
14:34:45 566  	    claimant_email,
14:34:45 567  	    transaction_id,
14:34:45 568  	    trans_date,
14:34:45 569  	    disputed_amount,
14:34:45 570  	    disputed_amount_currency,
14:34:45 571  	    dispute_reason,
14:34:45 572  	    dispute_filing_date,
14:34:45 573  	    dispute_status,
14:34:45 574  	    dispute_case_id,
14:34:45 575  	    invoice_id,
14:34:45 576  	    create_date,
14:34:45 577  	    created_by
14:34:45 578  	  ) VALUES (
14:34:45 579  	    var_pp_dispute_id,
14:34:45 580  	    in_ext_source_log_id,
14:34:45 581  	    in_dispute_type,
14:34:45 582  	    in_claimant_name,
14:34:45 583  	    in_claimant_email,
14:34:45 584  	    in_transaction_id,
14:34:45 585  	    in_trans_date,
14:34:45 586  	    in_disputed_amount,
14:34:45 587  	    in_disputed_amount_currency,
14:34:45 588  	    in_dispute_reason,
14:34:45 589  	    in_dispute_filing_date,
14:34:45 590  	    in_dispute_status,
14:34:45 591  	    in_dispute_case_id,
14:34:45 592  	    in_invoice_id,
14:34:45 593  	    var_date,
14:34:45 594  	    in_created_by
14:34:45 595  	  );
14:34:45 596  
14:34:45 597  	out_pp_dispute_id := var_pp_dispute_id;
14:34:45 598  END CREATE_PP_DISPUTE;
14:34:45 599  
14:34:45 600  PROCEDURE CREATE_PP_TRANS_DETAIL (
14:34:45 601  	out_pp_trans_detail_id	     OUT RCN_PP_TRANS_DETAIL.ID%TYPE,
14:34:45 602  	in_pp_trans_detail_id	     IN RCN_PP_TRANS_DETAIL.ID%TYPE DEFAULT NULL,
14:34:45 603  	in_ext_source_log_id	     IN RCN_PP_TRANS_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
14:34:45 604  	in_invoice_id		     IN RCN_PP_TRANS_DETAIL.INVOICE_ID%TYPE,
14:34:45 605  	in_transaction_id	     IN RCN_PP_TRANS_DETAIL.TRANSACTION_ID%TYPE,
14:34:45 606  	in_pp_ref_id		     IN RCN_PP_TRANS_DETAIL.PP_REF_ID%TYPE,
14:34:45 607  	in_trans_deb_or_cred	     IN RCN_PP_TRANS_DETAIL.TRANS_DEB_OR_CRED%TYPE,
14:34:45 608  	in_trans_init_date	     IN RCN_PP_TRANS_DETAIL.TRANS_INIT_DATE%TYPE,
14:34:45 609  	in_trans_comp_date	     IN RCN_PP_TRANS_DETAIL.TRANS_COMP_DATE%TYPE,
14:34:45 610  	in_gross_trans_amount	     IN RCN_PP_TRANS_DETAIL.GROSS_TRANS_AMOUNT%TYPE,
14:34:45 611  	in_gross_trans_currency      IN RCN_PP_TRANS_DETAIL.GROSS_TRANS_CURRENCY%TYPE,
14:34:45 612  	in_fee_amount		     IN RCN_PP_TRANS_DETAIL.FEE_AMOUNT%TYPE,
14:34:45 613  	in_fee_currency 	     IN RCN_PP_TRANS_DETAIL.FEE_CURRENCY%TYPE,
14:34:45 614  	in_fee_deb_or_cred	     IN RCN_PP_TRANS_DETAIL.FEE_DEB_OR_CRED%TYPE,
14:34:45 615  	in_trans_event_code	     IN RCN_PP_TRANS_DETAIL.TRANS_EVENT_CODE%TYPE,
14:34:45 616  	in_trans_status 	     IN RCN_PP_TRANS_DETAIL.TRANS_STATUS%TYPE,
14:34:45 617  	in_insurance_amount	     IN RCN_PP_TRANS_DETAIL.INSURANCE_AMOUNT%TYPE,
14:34:45 618  	in_sales_tax_amount	     IN RCN_PP_TRANS_DETAIL.SALES_TAX_AMOUNT%TYPE,
14:34:45 619  	in_shipping_amount	     IN RCN_PP_TRANS_DETAIL.SHIPPING_AMOUNT%TYPE,
14:34:45 620  	in_trans_subject	     IN RCN_PP_TRANS_DETAIL.TRANS_SUBJECT%TYPE,
14:34:45 621  	in_trans_note		     IN RCN_PP_TRANS_DETAIL.TRANS_NOTE%TYPE,
14:34:45 622  	in_payer_acct_id	     IN RCN_PP_TRANS_DETAIL.PAYER_ACCT_ID%TYPE,
14:34:45 623  	in_payer_addr_status	     IN RCN_PP_TRANS_DETAIL.PAYER_ADDR_STATUS%TYPE,
14:34:45 624  	in_item_name		     IN RCN_PP_TRANS_DETAIL.ITEM_NAME%TYPE,
14:34:45 625  	in_item_id		     IN RCN_PP_TRANS_DETAIL.ITEM_ID%TYPE,
14:34:45 626  	in_option_1_name	     IN RCN_PP_TRANS_DETAIL.OPTION_1_NAME%TYPE,
14:34:45 627  	in_option_1_value	     IN RCN_PP_TRANS_DETAIL.OPTION_1_VALUE%TYPE,
14:34:45 628  	in_option_2_name	     IN RCN_PP_TRANS_DETAIL.OPTION_2_NAME%TYPE,
14:34:45 629  	in_option_2_value	     IN RCN_PP_TRANS_DETAIL.OPTION_2_VALUE%TYPE,
14:34:45 630  	in_auction_site 	     IN RCN_PP_TRANS_DETAIL.AUCTION_SITE%TYPE,
14:34:45 631  	in_auction_buyer_id	     IN RCN_PP_TRANS_DETAIL.AUCTION_BUYER_ID%TYPE,
14:34:45 632  	in_auction_closing_date      IN RCN_PP_TRANS_DETAIL.AUCTION_CLOSING_DATE%TYPE,
14:34:45 633  	in_shipping_addr_line_1      IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_LINE_1%TYPE,
14:34:45 634  	in_shipping_addr_line_2      IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_LINE_2%TYPE,
14:34:45 635  	in_shipping_addr_city	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_CITY%TYPE,
14:34:45 636  	in_shipping_addr_state	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_STATE%TYPE,
14:34:45 637  	in_shipping_addr_zip	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_ZIP%TYPE,
14:34:45 638  	in_shipping_addr_country     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_COUNTRY%TYPE,
14:34:45 639  	in_custom_field 	     IN RCN_PP_TRANS_DETAIL.CUSTOM_FIELD%TYPE,
14:34:45 640  	in_created_by		     IN RCN_PP_TRANS_DETAIL.CREATED_BY%TYPE
14:34:45 641  ) AS
14:34:45 642  -- VARIABLES
14:34:45 643  var_pp_trans_detail_id RCN_PP_TRANS_DETAIL.ID%TYPE;
14:34:45 644  var_date DATE := SYSDATE;
14:34:45 645  BEGIN
14:34:45 646  	IF in_pp_trans_detail_id IS NULL THEN
14:34:45 647  	  SELECT
14:34:45 648  	    RCN_PP_TRANS_DETAIL_SEQ.nextVal into var_pp_trans_detail_id
14:34:45 649  	  FROM DUAL;
14:34:45 650  	ELSE
14:34:45 651  	  var_pp_trans_detail_id := in_pp_trans_detail_id;
14:34:45 652  	END IF;
14:34:45 653  	INSERT INTO
14:34:45 654  	  RCN_PP_TRANS_DETAIL (
14:34:45 655  	    id,
14:34:45 656  	    rcn_ext_source_log_id,
14:34:45 657  	    transaction_id,
14:34:45 658  	    invoice_id,
14:34:45 659  	    pp_ref_id,
14:34:45 660  	    trans_event_code,
14:34:45 661  	    trans_init_date,
14:34:45 662  	    trans_comp_date,
14:34:45 663  	    trans_deb_or_cred,
14:34:45 664  	    gross_trans_amount,
14:34:45 665  	    gross_trans_currency,
14:34:45 666  	    fee_deb_or_cred,
14:34:45 667  	    fee_amount,
14:34:45 668  	    fee_currency,
14:34:45 669  	    trans_status,
14:34:45 670  	    insurance_amount,
14:34:45 671  	    sales_tax_amount,
14:34:45 672  	    shipping_amount,
14:34:45 673  	    trans_subject,
14:34:45 674  	    trans_note,
14:34:45 675  	    payer_acct_id,
14:34:45 676  	    payer_addr_status,
14:34:45 677  	    item_name,
14:34:45 678  	    item_id,
14:34:45 679  	    option_1_name,
14:34:45 680  	    option_1_value,
14:34:45 681  	    option_2_name,
14:34:45 682  	    option_2_value,
14:34:45 683  	    auction_site,
14:34:45 684  	    auction_buyer_id,
14:34:45 685  	    auction_closing_date,
14:34:45 686  	    shipping_addr_line_1,
14:34:45 687  	    shipping_addr_line_2,
14:34:45 688  	    shipping_addr_city,
14:34:45 689  	    shipping_addr_state,
14:34:45 690  	    shipping_addr_zip,
14:34:45 691  	    shipping_addr_country,
14:34:45 692  	    custom_field,
14:34:45 693  	    create_date,
14:34:45 694  	    created_by
14:34:45 695  	  ) VALUES (
14:34:45 696  	    var_pp_trans_detail_id,
14:34:45 697  	    in_ext_source_log_id,
14:34:45 698  	    in_transaction_id,
14:34:45 699  	    in_invoice_id,
14:34:45 700  	    in_pp_ref_id,
14:34:45 701  	    in_trans_event_code,
14:34:45 702  	    in_trans_init_date,
14:34:45 703  	    in_trans_comp_date,
14:34:45 704  	    in_trans_deb_or_cred,
14:34:45 705  	    in_gross_trans_amount,
14:34:45 706  	    in_gross_trans_currency,
14:34:45 707  	    in_fee_deb_or_cred,
14:34:45 708  	    in_fee_amount,
14:34:45 709  	    in_fee_currency,
14:34:45 710  	    in_trans_status,
14:34:45 711  	    in_insurance_amount,
14:34:45 712  	    in_sales_tax_amount,
14:34:45 713  	    in_shipping_amount,
14:34:45 714  	    in_trans_subject,
14:34:45 715  	    in_trans_note,
14:34:45 716  	    in_payer_acct_id,
14:34:45 717  	    in_payer_addr_status,
14:34:45 718  	    in_item_name,
14:34:45 719  	    in_item_id,
14:34:45 720  	    in_option_1_name,
14:34:45 721  	    in_option_1_value,
14:34:45 722  	    in_option_2_name,
14:34:45 723  	    in_option_2_value,
14:34:45 724  	    in_auction_site,
14:34:45 725  	    in_auction_buyer_id,
14:34:45 726  	    in_auction_closing_date,
14:34:45 727  	    in_shipping_addr_line_1,
14:34:45 728  	    in_shipping_addr_line_2,
14:34:45 729  	    in_shipping_addr_city,
14:34:45 730  	    in_shipping_addr_state,
14:34:45 731  	    in_shipping_addr_zip,
14:34:45 732  	    in_shipping_addr_country,
14:34:45 733  	    in_custom_field,
14:34:45 734  	    var_date,
14:34:45 735  	    in_created_by
14:34:45 736  	  );
14:34:45 737  
14:34:45 738  	out_pp_trans_detail_id := var_pp_trans_detail_id;
14:34:45 739  END CREATE_PP_TRANS_DETAIL;
14:34:45 740  
14:34:45 741  PROCEDURE DELETE_EXT_SOURCE_LOG (
14:34:45 742  	in_record_type		 IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
14:34:45 743  	in_report_file_name	 IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE
14:34:45 744  ) AS
14:34:45 745  BEGIN
14:34:45 746  	DELETE FROM
14:34:45 747  	  RCN_EXT_SOURCE_LOG
14:34:45 748  	WHERE
14:34:45 749  	  RCN_EXT_SOURCE_LOG.RECORD_TYPE = in_record_type AND
14:34:45 750  	  RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME = in_report_file_name;
14:34:45 751  END DELETE_EXT_SOURCE_LOG;
14:34:45 752  
14:34:45 753  PROCEDURE GET_EXT_SOURCE_LOG (
14:34:45 754  	in_record_type		 IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
14:34:45 755  	in_report_file_name	 IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE,
14:34:45 756  	out_result_set		 OUT SYS_REFCURSOR
14:34:45 757  ) AS
14:34:45 758  BEGIN
14:34:45 759  	OPEN out_result_set FOR
14:34:45 760  	SELECT * FROM
14:34:45 761  	  RCN_EXT_SOURCE_LOG
14:34:45 762  	WHERE
14:34:45 763  	  RCN_EXT_SOURCE_LOG.RECORD_TYPE = in_record_type AND
14:34:45 764  	  RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME = in_report_file_name;
14:34:45 765  END GET_EXT_SOURCE_LOG;
14:34:45 766  
14:34:45 767  FUNCTION CHECK_EXT_SOURCE_LOG (
14:34:45 768  	in_record_type		 IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
14:34:45 769  	in_report_file_name	 IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE
14:34:45 770  ) RETURN NUMBER AS
14:34:45 771  var_exists NUMBER;
14:34:45 772  BEGIN
14:34:45 773  	SELECT count(1) INTO var_exists
14:34:45 774  	FROM
14:34:45 775  	  RCN_EXT_SOURCE_LOG
14:34:45 776  	WHERE
14:34:45 777  	  RCN_EXT_SOURCE_LOG.RECORD_TYPE = in_record_type AND
14:34:45 778  	  RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME = in_report_file_name;
14:34:45 779  
14:34:45 780  	IF var_exists > 1 THEN
14:34:45 781  	  var_exists := 1;
14:34:45 782  	END IF;
14:34:45 783  
14:34:45 784  	RETURN var_exists;
14:34:45 785  END;
14:34:45 786  
14:34:45 787  PROCEDURE CREATE_AMEX_CHARGEBACK (
14:34:45 788  	  in_rcn_ext_source_log_id IN RCN_EXT_SOURCE_LOG.ID%TYPE,
14:34:45 789  	  in_resolution IN RCN_AMEX_CHARGEBACK.RESOLUTION%TYPE,
14:34:45 790  	  in_from_system IN RCN_AMEX_CHARGEBACK.FROM_SYSTEM%TYPE,
14:34:45 791  	  in_rejects_to_system IN RCN_AMEX_CHARGEBACK.REJECTS_TO_SYSTEM%TYPE,
14:34:45 792  	  in_disputes_to_system IN RCN_AMEX_CHARGEBACK.DISPUTES_TO_SYSTEM%TYPE,
14:34:45 793  	  in_date_of_adjustment IN RCN_AMEX_CHARGEBACK.DATE_OF_ADJUSTMENT%TYPE,
14:34:45 794  	  in_date_of_charge IN RCN_AMEX_CHARGEBACK.DATE_OF_CHARGE%TYPE,
14:34:45 795  	  in_case_type IN RCN_AMEX_CHARGEBACK.CASE_TYPE%TYPE,
14:34:45 796  	  in_cb_reas_code IN RCN_AMEX_CHARGEBACK.CB_REAS_CODE%TYPE,
14:34:45 797  	  in_cb_amount IN RCN_AMEX_CHARGEBACK.CB_AMOUNT%TYPE,
14:34:45 798  	  in_cb_adjustment_number IN RCN_AMEX_CHARGEBACK.CB_ADJUSTMENT_NUMBER%TYPE,
14:34:45 799  	  in_billed_amount IN RCN_AMEX_CHARGEBACK.BILLED_AMOUNT%TYPE,
14:34:45 800  	  in_soc_amount IN RCN_AMEX_CHARGEBACK.SOC_AMOUNT%TYPE,
14:34:45 801  	  in_foreign_amount IN RCN_AMEX_CHARGEBACK.FOREIGN_AMOUNT%TYPE,
14:34:45 802  	  in_currency IN RCN_AMEX_CHARGEBACK.CURRENCY%TYPE,
14:34:45 803  	  in_note1 IN RCN_AMEX_CHARGEBACK.NOTE1%TYPE,
14:34:45 804  	  in_note2 IN RCN_AMEX_CHARGEBACK.NOTE2%TYPE,
14:34:45 805  	  in_note3 IN RCN_AMEX_CHARGEBACK.NOTE3%TYPE,
14:34:45 806  	  in_note4 IN RCN_AMEX_CHARGEBACK.NOTE4%TYPE,
14:34:45 807  	  in_note5 IN RCN_AMEX_CHARGEBACK.NOTE5%TYPE,
14:34:45 808  	  in_note6 IN RCN_AMEX_CHARGEBACK.NOTE6%TYPE,
14:34:45 809  	  in_note7 IN RCN_AMEX_CHARGEBACK.NOTE7%TYPE,
14:34:45 810  	  in_ind_ref_number IN RCN_AMEX_CHARGEBACK.IND_REF_NUMBER%TYPE,
14:34:45 811  	  in_created_by IN RCN_AMEX_CHARGEBACK.CREATED_BY%TYPE
14:34:45 812  ) AS
14:34:45 813  var_amex_chargeback_id RCN_AMEX_CHARGEBACK.ID%TYPE;
14:34:45 814  var_date DATE := SYSDATE;
14:34:45 815  BEGIN
14:34:45 816  	SELECT
14:34:45 817  	  RCNAMEXCB_ID_SEQ.nextVal into var_amex_chargeback_id
14:34:45 818  	FROM DUAL;
14:34:45 819  
14:34:45 820  	INSERT INTO
14:34:45 821  	  RCN_AMEX_CHARGEBACK (
14:34:45 822  	    id,
14:34:45 823  	    rcn_ext_source_log_id,
14:34:45 824  	    resolution,
14:34:45 825  	    from_system,
14:34:45 826  	    rejects_to_system,
14:34:45 827  	    disputes_to_system,
14:34:45 828  	    date_of_adjustment,
14:34:45 829  	    date_of_charge,
14:34:45 830  	    case_type,
14:34:45 831  	    cb_reas_code,
14:34:45 832  	    cb_amount,
14:34:45 833  	    cb_adjustment_number,
14:34:45 834  	    billed_amount,
14:34:45 835  	    soc_amount,
14:34:45 836  	    foreign_amount,
14:34:45 837  	    currency,
14:34:45 838  	    note1,
14:34:45 839  	    note2,
14:34:45 840  	    note3,
14:34:45 841  	    note4,
14:34:45 842  	    note5,
14:34:45 843  	    note6,
14:34:45 844  	    note7,
14:34:45 845  	    ind_ref_number,
14:34:45 846  	    create_date,
14:34:45 847  	    created_by,
14:34:45 848  	    update_date,
14:34:45 849  	    updated_by
14:34:45 850  	  ) VALUES (
14:34:45 851  	    var_amex_chargeback_id,
14:34:45 852  	    in_rcn_ext_source_log_id,
14:34:45 853  	    in_resolution,
14:34:45 854  	    in_from_system,
14:34:45 855  	    in_rejects_to_system,
14:34:45 856  	    in_disputes_to_system,
14:34:45 857  	    in_date_of_adjustment,
14:34:45 858  	    in_date_of_charge,
14:34:45 859  	    in_case_type,
14:34:45 860  	    in_cb_reas_code,
14:34:45 861  	    in_cb_amount,
14:34:45 862  	    in_cb_adjustment_number,
14:34:45 863  	    in_billed_amount,
14:34:45 864  	    in_soc_amount,
14:34:45 865  	    in_foreign_amount,
14:34:45 866  	    in_currency,
14:34:45 867  	    in_note1,
14:34:45 868  	    in_note2,
14:34:45 869  	    in_note3,
14:34:45 870  	    in_note4,
14:34:45 871  	    in_note5,
14:34:45 872  	    in_note6,
14:34:45 873  	    in_note7,
14:34:45 874  	    in_ind_ref_number,
14:34:45 875  	    var_date,
14:34:45 876  	    in_created_by,
14:34:45 877  	    var_date,
14:34:45 878  	    in_created_by
14:34:45 879  	  );
14:34:45 880  
14:34:45 881  END CREATE_AMEX_CHARGEBACK;
14:34:45 882  
14:34:45 883  END PROCS_RECONCILIATION_CRU_V18;
14:34:45 884  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.12
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SUBSCRIPTION_CRU_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE CREATE_SUBSCRIPTION(
14:34:45   4  	out_subscription_id	     OUT SUBSCRIPTION.ID%TYPE,
14:34:45   5  	in_subscription_id	     IN SUBSCRIPTION.ID%TYPE DEFAULT NULL,
14:34:45   6  	in_suspend_date 	     IN SUBSCRIPTION.SUSPEND_DATE%TYPE DEFAULT NULL,
14:34:45   7  	in_account_id		     IN SUBSCRIPTION.ACCOUNT_ID%TYPE,
14:34:45   8  	in_purchase_date	     IN SUBSCRIPTION.PURCHASE_DATE%TYPE,
14:34:45   9  	in_offer_chain_id	     IN SUBSCRIPTION.OFFER_CHAIN_ID%TYPE,
14:34:45  10  	in_termination_date	     IN SUBSCRIPTION.TERMINATION_DATE%TYPE DEFAULT NULL,
14:34:45  11  	in_days_remainning_ajustment IN SUBSCRIPTION.DAYS_REMAINING_ADJUSTMENT%TYPE DEFAULT NULL,
14:34:45  12  	in_sct_id		     IN SUBSCRIPTION.SCT_ID%TYPE DEFAULT NULL,
14:34:45  13  	in_created_by		     IN SUBSCRIPTION.CREATED_BY%TYPE,
14:34:45  14  	in_instrument_type_id	     IN SUBSCRIPTION.INSTRUMENT_TYPE_ID%TYPE,
14:34:45  15  	in_instrument_id	     IN SUBSCRIPTION.INSTRUMENT_ID%TYPE,
14:34:45  16  	in_subscription_status_id    IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE,
14:34:45  17  	in_cancelation_date	     IN SUBSCRIPTION.CANCELLATION_DATE%TYPE DEFAULT NULL,
14:34:45  18  	in_reactivation_date	     IN SUBSCRIPTION.REACTIVATION_DATE%TYPE DEFAULT NULL
14:34:45  19  ) AS
14:34:45  20  -- VARIABLES
14:34:45  21  var_new_subscription_id SUBSCRIPTION.ID%TYPE;
14:34:45  22  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:45  23  var_date DATE := SYSDATE;
14:34:45  24  BEGIN
14:34:45  25  	IF in_subscription_id IS NULL THEN
14:34:45  26  	  SELECT
14:34:45  27  	    SUB_ID_SEQ.nextVal into var_new_subscription_id
14:34:45  28  	  FROM DUAL;
14:34:45  29  	ELSE
14:34:45  30  	  var_new_subscription_id := in_subscription_id;
14:34:45  31  	END IF;
14:34:45  32  	INSERT INTO SUBSCRIPTION (
14:34:45  33  	  ID,
14:34:45  34  	  SUSPEND_DATE,
14:34:45  35  	  ACCOUNT_ID,
14:34:45  36  	  PURCHASE_DATE,
14:34:45  37  	  OFFER_CHAIN_ID,
14:34:45  38  	  TERMINATION_DATE,
14:34:45  39  	  DAYS_REMAINING_ADJUSTMENT,
14:34:45  40  	  SCT_ID,
14:34:45  41  	  CREATE_DATE,
14:34:45  42  	  CREATED_BY,
14:34:45  43  	  UPDATE_DATE,
14:34:45  44  	  UPDATED_BY,
14:34:45  45  	  INSTRUMENT_TYPE_ID,
14:34:45  46  	  INSTRUMENT_ID,
14:34:45  47  	  SUBSCRIPTION_STATUS_ID,
14:34:45  48  	  CANCELLATION_DATE,
14:34:45  49  	  REACTIVATION_DATE
14:34:45  50  	) VALUES (
14:34:45  51  	  var_new_subscription_id,
14:34:45  52  	  in_suspend_date,
14:34:45  53  	  in_account_id,
14:34:45  54  	  in_purchase_date,
14:34:45  55  	  in_offer_chain_id,
14:34:45  56  	  in_termination_date,
14:34:45  57  	  in_days_remainning_ajustment,
14:34:45  58  	  in_sct_id,
14:34:45  59  	  var_date,
14:34:45  60  	  in_created_by,
14:34:45  61  	  var_date,
14:34:45  62  	  in_created_by,
14:34:45  63  	  in_instrument_type_id,
14:34:45  64  	  in_instrument_id,
14:34:45  65  	  in_subscription_status_id,
14:34:45  66  	  in_cancelation_date,
14:34:45  67  	  in_reactivation_date
14:34:45  68  	);
14:34:45  69  
14:34:45  70  	out_subscription_id := var_new_subscription_id;
14:34:45  71  END CREATE_SUBSCRIPTION;
14:34:45  72  
14:34:45  73  /******************************************************************************/
14:34:45  74  
14:34:45  75  PROCEDURE UPDATE_SUBSCRIPTION(
14:34:45  76  	in_subscription_id	     IN SUBSCRIPTION.ID%TYPE,
14:34:45  77  	in_suspend_date 	     IN SUBSCRIPTION.SUSPEND_DATE%TYPE DEFAULT NULL,
14:34:45  78  	in_purchase_date	     IN SUBSCRIPTION.PURCHASE_DATE%TYPE DEFAULT NULL,
14:34:45  79  	in_termination_date	     IN SUBSCRIPTION.TERMINATION_DATE%TYPE DEFAULT NULL,
14:34:45  80  	in_days_remainning_ajustment IN SUBSCRIPTION.DAYS_REMAINING_ADJUSTMENT%TYPE DEFAULT NULL,
14:34:45  81  	in_sct_id		     IN SUBSCRIPTION.SCT_ID%TYPE DEFAULT NULL,
14:34:45  82  	in_updated_by		     IN SUBSCRIPTION.CREATED_BY%TYPE,
14:34:45  83  	in_instrument_type_id	     IN SUBSCRIPTION.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
14:34:45  84  	in_instrument_id	     IN SUBSCRIPTION.INSTRUMENT_ID%TYPE DEFAULT NULL,
14:34:45  85  	in_subscription_status_id    IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE DEFAULT NULL,
14:34:45  86  	in_cancelation_date	     IN SUBSCRIPTION.CANCELLATION_DATE%TYPE DEFAULT NULL,
14:34:45  87  	in_reactivation_date	     IN SUBSCRIPTION.REACTIVATION_DATE%TYPE DEFAULT NULL
14:34:45  88  ) AS
14:34:45  89  BEGIN
14:34:45  90  	-- Create history
14:34:45  91  	PROCS_HISTORY_V18.CREATE_SUBSCRIPTION_HISTORY(
14:34:45  92  	  in_subscription_id	       => in_subscription_id,
14:34:45  93  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:45  94  	);
14:34:45  95  
14:34:45  96  	UPDATE SUBSCRIPTION SET
14:34:45  97  	  SUSPEND_DATE		    = NVL(in_suspend_date, SUSPEND_DATE),
14:34:45  98  	  PURCHASE_DATE 	    = NVL(in_purchase_date, PURCHASE_DATE),
14:34:45  99  	  TERMINATION_DATE	    = NVL(in_termination_date, TERMINATION_DATE),
14:34:45 100  	  DAYS_REMAINING_ADJUSTMENT = NVL(days_remaining_adjustment, DAYS_REMAINING_ADJUSTMENT),
14:34:45 101  	  SCT_ID		    = NVL(in_sct_id, SCT_ID),
14:34:45 102  	  UPDATE_DATE		    = SYSDATE,
14:34:45 103  	  UPDATED_BY		    = in_updated_by,
14:34:45 104  	  INSTRUMENT_TYPE_ID	    = NVL(in_instrument_type_id, INSTRUMENT_TYPE_ID),
14:34:45 105  	  INSTRUMENT_ID 	    = NVL(in_instrument_id, INSTRUMENT_ID),
14:34:45 106  	  SUBSCRIPTION_STATUS_ID    = NVL(in_subscription_status_id, SUBSCRIPTION_STATUS_ID),
14:34:45 107  	  CANCELLATION_DATE	    = NVL(in_cancelation_date, CANCELLATION_DATE),
14:34:45 108  	  REACTIVATION_DATE	    = NVL(in_reactivation_date, REACTIVATION_DATE)
14:34:45 109  	WHERE
14:34:45 110  	  ID = in_subscription_id;
14:34:45 111  END UPDATE_SUBSCRIPTION;
14:34:45 112  
14:34:45 113  /******************************************************************************/
14:34:45 114  
14:34:45 115  PROCEDURE CREATE_SUBSCRIPTION_NOTE (
14:34:45 116  	inout_subscription_note_id IN OUT SUBSCRIPTION_NOTE.ID%TYPE,
14:34:45 117  	in_agent_id		   IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
14:34:45 118  	in_subscription_id	   IN SUBSCRIPTION_NOTE.ID%TYPE,
14:34:45 119  	in_note 		   IN SUBSCRIPTION_NOTE.NOTE%TYPE,
14:34:45 120  	in_created_by		   IN SUBSCRIPTION_NOTE.CREATED_BY%TYPE
14:34:45 121  ) AS
14:34:45 122  BEGIN
14:34:45 123  	IF inout_subscription_note_id IS NULL THEN
14:34:45 124  	  SELECT
14:34:45 125  	    SUBN_ID_SEQ.nextVal into inout_subscription_note_id
14:34:45 126  	  FROM DUAL;
14:34:45 127  	END IF;
14:34:45 128  	INSERT INTO SUBSCRIPTION_NOTE (
14:34:45 129  	  ID,
14:34:45 130  	  AGENT_ID,
14:34:45 131  	  SUBSCRIPTION_ID,
14:34:45 132  	  NOTE,
14:34:45 133  	  CREATE_DATE,
14:34:45 134  	  CREATED_BY
14:34:45 135  	) VALUES (
14:34:45 136  	  inout_subscription_note_id,
14:34:45 137  	  in_agent_id,
14:34:45 138  	  in_subscription_id,
14:34:45 139  	  in_note,
14:34:45 140  	  SYSDATE,
14:34:45 141  	  in_created_by
14:34:45 142  	);
14:34:45 143  END CREATE_SUBSCRIPTION_NOTE;
14:34:45 144  
14:34:45 145  END PROCS_SUBSCRIPTION_CRU_V18;
14:34:45 146  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.02
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_TAXES_CRU_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE CREATE_TAX (
14:34:45   4  	inout_tax_id		 IN OUT NUMBER,
14:34:45   5  	in_tax_type_id		 IN NUMBER,
14:34:45   6  	in_calculated_amount	 IN NUMBER,
14:34:45   7  	in_created_by		 IN VARCHAR2,
14:34:45   8  	in_line_item_id 	 IN NUMBER,
14:34:45   9  	in_effective_rate	 IN VARCHAR2,
14:34:45  10  	in_taxable_amount	 IN NUMBER,
14:34:45  11  	in_tax_rule_id		 IN NUMBER,
14:34:45  12  	in_jurisdiction_level_id IN NUMBER,
14:34:45  13  	in_jurisdiction_name	 IN VARCHAR2,
14:34:45  14  	in_jurisdiction_id	 IN VARCHAR2,
14:34:45  15  	in_ext_tax_type 	 IN VARCHAR2,
14:34:45  16  	in_ext_result		 IN VARCHAR2,
14:34:45  17  	in_imposition_type	 IN VARCHAR2,
14:34:45  18  	in_imposition		 IN VARCHAR2
14:34:45  19  ) AS
14:34:45  20  var_date DATE := SYSDATE;
14:34:45  21  BEGIN
14:34:45  22  
14:34:45  23  	IF inout_tax_id IS NULL THEN
14:34:45  24  	  SELECT
14:34:45  25  	    TAX_ID_SEQ.nextVal into inout_tax_id
14:34:45  26  	  FROM DUAL;
14:34:45  27  	END IF;
14:34:45  28  
14:34:45  29  	INSERT INTO TAX (
14:34:45  30  	  ID,
14:34:45  31  	  TAX_TYPE_ID,
14:34:45  32  	  CALCULATED_AMOUNT,
14:34:45  33  	  CREATE_DATE,
14:34:45  34  	  CREATED_BY,
14:34:45  35  	  LINE_ITEM_ID,
14:34:45  36  	  EFFECTIVE_RATE,
14:34:45  37  	  TAXABLE_AMOUNT,
14:34:45  38  	  TAX_RULE_ID,
14:34:45  39  	  JURISDICTION_LEVEL_ID,
14:34:45  40  	  JURISDICTION_NAME,
14:34:45  41  	  JURISDICTION_ID,
14:34:45  42  	  EXT_TAX_TYPE,
14:34:45  43  	  EXT_RESULT,
14:34:45  44  	  IMPOSITION_TYPE,
14:34:45  45  	  IMPOSITION
14:34:45  46  	) VALUES (
14:34:45  47  	  inout_tax_id,
14:34:45  48  	  in_tax_type_id,
14:34:45  49  	  in_calculated_amount,
14:34:45  50  	  var_date,
14:34:45  51  	  in_created_by,
14:34:45  52  	  in_line_item_id,
14:34:45  53  	  in_effective_rate,
14:34:45  54  	  in_taxable_amount,
14:34:45  55  	  in_tax_rule_id,
14:34:45  56  	  in_jurisdiction_level_id,
14:34:45  57  	  in_jurisdiction_name,
14:34:45  58  	  in_jurisdiction_id,
14:34:45  59  	  in_ext_tax_type,
14:34:45  60  	  in_ext_result,
14:34:45  61  	  in_imposition_type,
14:34:45  62  	  in_imposition
14:34:45  63  	);
14:34:45  64  
14:34:45  65  END CREATE_TAX;
14:34:45  66  
14:34:45  67  END PROCS_TAXES_CRU_V18;
14:34:45  68  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.05
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_TRANSACTION_CRU_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE CREATE_TRANSACTION (
14:34:45   4  	out_transaction_id	 OUT TRANSACTION.ID%TYPE,
14:34:45   5  	in_transaction_id	 IN TRANSACTION.ID%TYPE DEFAULT NULL,
14:34:45   6  	in_transaction_status_id IN TRANSACTION.TRANSACTION_STATUS_ID%TYPE,
14:34:45   7  	in_transaction_amount	 IN TRANSACTION.TRANSACTION_AMOUNT%TYPE,
14:34:45   8  	in_created_by		 IN TRANSACTION.CREATED_BY%TYPE,
14:34:45   9  	in_order_id		 IN TRANSACTION.ORDER_ID%TYPE,
14:34:45  10  	in_is_refund		 IN TRANSACTION.IS_REFUND%TYPE DEFAULT GLOBAL_CONSTANTS_V18.FALSE,
14:34:45  11  	in_transaction_type_code IN TRANSACTION.TRANSACTION_TYPE_CODE%TYPE DEFAULT NULL
14:34:45  12  ) AS
14:34:45  13  -- VARIABLES
14:34:45  14  var_transaction_id TRANSACTION.ID%TYPE;
14:34:45  15  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:45  16  var_date DATE := SYSDATE;
14:34:45  17  BEGIN
14:34:45  18  	IF in_transaction_id IS NULL THEN
14:34:45  19  	  SELECT
14:34:45  20  	    TRN_ID_SEQ.nextVal into var_transaction_id
14:34:45  21  	  FROM DUAL;
14:34:45  22  	ELSE
14:34:45  23  	  var_transaction_id := in_transaction_id;
14:34:45  24  	END IF;
14:34:45  25  	INSERT INTO
14:34:45  26  	  TRANSACTION (
14:34:45  27  	    ID,
14:34:45  28  	    TRANSACTION_STATUS_ID,
14:34:45  29  	    TRANSACTION_AMOUNT,
14:34:45  30  	    CREATE_DATE,
14:34:45  31  	    CREATED_BY,
14:34:45  32  	    UPDATE_DATE,
14:34:45  33  	    UPDATED_BY,
14:34:45  34  	    ORDER_ID,
14:34:45  35  	    IS_REFUND,
14:34:45  36  	    TRANSACTION_TYPE_CODE
14:34:45  37  	  ) VALUES (
14:34:45  38  	    var_transaction_id,
14:34:45  39  	    in_transaction_status_id,
14:34:45  40  	    in_transaction_amount,
14:34:45  41  	    var_date,
14:34:45  42  	    in_created_by,
14:34:45  43  	    var_date,
14:34:45  44  	    in_created_by,
14:34:45  45  	    in_order_id,
14:34:45  46  	    in_is_refund,
14:34:45  47  	    in_transaction_type_code
14:34:45  48  	  );
14:34:45  49  
14:34:45  50  	out_transaction_id := var_transaction_id;
14:34:45  51  END CREATE_TRANSACTION;
14:34:45  52  
14:34:45  53  /*******************************************************************/
14:34:45  54  
14:34:45  55  PROCEDURE UPDATE_TRANSACTION (
14:34:45  56  	in_transaction_id	 IN TRANSACTION.ID%TYPE,
14:34:45  57  	in_transaction_status_id IN TRANSACTION.TRANSACTION_STATUS_ID%TYPE DEFAULT NULL,
14:34:45  58  	in_transaction_amount	 IN TRANSACTION.TRANSACTION_AMOUNT%TYPE DEFAULT NULL,
14:34:45  59  	in_updated_by		 IN TRANSACTION.CREATED_BY%TYPE,
14:34:45  60  	in_order_id		 IN TRANSACTION.ORDER_ID%TYPE DEFAULT NULL,
14:34:45  61  	in_is_settled		 IN TRANSACTION.IS_SETTLED%TYPE DEFAULT NULL
14:34:45  62  ) AS
14:34:45  63  BEGIN
14:34:45  64  	-- Create history
14:34:45  65  	PROCS_HISTORY_V18.CREATE_TRANSACTION_HISTORY(
14:34:45  66  	  in_transaction_id	       => in_transaction_id,
14:34:45  67  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:45  68  	);
14:34:45  69  	UPDATE
14:34:45  70  	  TRANSACTION
14:34:45  71  	SET
14:34:45  72  	  TRANSACTION_STATUS_ID = NVL(in_transaction_status_id, TRANSACTION_STATUS_ID),
14:34:45  73  	  TRANSACTION_AMOUNT	= NVL(in_transaction_amount, TRANSACTION_AMOUNT),
14:34:45  74  	  UPDATE_DATE		= SYSDATE,
14:34:45  75  	  UPDATED_BY		= in_updated_by,
14:34:45  76  	  ORDER_ID		= NVL(in_order_id, ORDER_ID),
14:34:45  77  	  IS_SETTLED		= NVL(in_is_settled, IS_SETTLED)
14:34:45  78  	WHERE
14:34:45  79  	  ID = in_transaction_id;
14:34:45  80  END UPDATE_TRANSACTION;
14:34:45  81  
14:34:45  82  /*******************************************************************/
14:34:45  83  
14:34:45  84  PROCEDURE READ_TRANSACTION (
14:34:45  85  	in_transaction_id IN TRANSACTION.ID%TYPE,
14:34:45  86  	out_result_set	  OUT SYS_REFCURSOR
14:34:45  87  ) AS
14:34:45  88  BEGIN
14:34:45  89  	OPEN out_result_set FOR
14:34:45  90  	SELECT
14:34:45  91  	  ID,
14:34:45  92  	  TRANSACTION_STATUS_ID,
14:34:45  93  	  TRANSACTION_TYPE_CODE,
14:34:45  94  	  TRANSACTION_AMOUNT,
14:34:45  95  	  CREATE_DATE,
14:34:45  96  	  CREATED_BY,
14:34:45  97  	  UPDATE_DATE,
14:34:45  98  	  UPDATED_BY,
14:34:45  99  	  ORDER_ID,
14:34:45 100  	  IS_REFUND,
14:34:45 101  	  IS_SETTLED,
14:34:45 102  	  TRANSACTION_TYPE_CODE
14:34:45 103  	FROM
14:34:45 104  	  TRANSACTION
14:34:45 105  	WHERE
14:34:45 106  	  ID = in_transaction_id;
14:34:45 107  END READ_TRANSACTION;
14:34:45 108  
14:34:45 109  /*******************************************************************/
14:34:45 110  
14:34:45 111  PROCEDURE CREATE_TRANSACTION_ATTEMPT(
14:34:45 112  	inout_transaction_attempt_id IN OUT TRANSACTION_ATTEMPT.ID%TYPE,
14:34:45 113  	in_transaction_id	     IN TRANSACTION_ATTEMPT.TRANSACTION_ID%TYPE,
14:34:45 114  	in_external_status_code      IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE%TYPE DEFAULT NULL,
14:34:45 115  	in_external_status_message   IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE%TYPE DEFAULT NULL,
14:34:45 116  	in_created_by		     IN TRANSACTION_ATTEMPT.CREATED_BY%TYPE,
14:34:45 117  	in_external_transaction_id   IN TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID%TYPE DEFAULT NULL,
14:34:45 118  	in_transaction_start_time    IN TRANSACTION_ATTEMPT.TRANSACTION_START_TIME%TYPE DEFAULT NULL,
14:34:45 119  	in_status_id		     IN TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID%TYPE
14:34:45 120  ) AS
14:34:45 121  BEGIN
14:34:45 122  	IF inout_transaction_attempt_id IS NULL THEN
14:34:45 123  	  SELECT
14:34:45 124  	    TRNA_ID_SEQ.nextVal into inout_transaction_attempt_id
14:34:45 125  	  FROM DUAL;
14:34:45 126  	END IF;
14:34:45 127  	INSERT INTO TRANSACTION_ATTEMPT (
14:34:45 128  	  ID,
14:34:45 129  	  TRANSACTION_ID,
14:34:45 130  	  EXTERNAL_STATUS_CODE,
14:34:45 131  	  EXTERNAL_STATUS_MESSAGE,
14:34:45 132  	  CREATE_DATE,
14:34:45 133  	  CREATED_BY,
14:34:45 134  	  EXTERNAL_TRANSACTION_ID,
14:34:45 135  	  TRANSACTION_START_TIME,
14:34:45 136  	  TRANSACTION_ATTEMPT_STATUS_ID
14:34:45 137  	) VALUES (
14:34:45 138  	  inout_transaction_attempt_id,
14:34:45 139  	  in_transaction_id,
14:34:45 140  	  in_external_status_code,
14:34:45 141  	  in_external_status_message,
14:34:45 142  	  SYSDATE,
14:34:45 143  	  in_created_by,
14:34:45 144  	  in_external_transaction_id,
14:34:45 145  	  in_transaction_start_time,
14:34:45 146  	  in_status_id
14:34:45 147  	);
14:34:45 148  END;
14:34:45 149  
14:34:45 150  /*******************************************************************/
14:34:45 151  
14:34:45 152  PROCEDURE UPDATE_TRANSACTION_ATTEMPT (
14:34:45 153  	in_transaction_attempt_id  IN TRANSACTION_ATTEMPT.ID%TYPE,
14:34:45 154  	in_external_status_code    IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE%TYPE DEFAULT NULL,
14:34:45 155  	in_external_status_message IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE%TYPE DEFAULT NULL,
14:34:45 156  	in_external_transaction_id IN TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID%TYPE DEFAULT NULL,
14:34:45 157  	in_transaction_start_time  IN TRANSACTION_ATTEMPT.TRANSACTION_START_TIME%TYPE DEFAULT NULL,
14:34:45 158  	in_status_id		   IN TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID%TYPE
14:34:45 159  ) AS
14:34:45 160  BEGIN
14:34:45 161  	UPDATE
14:34:45 162  	  TRANSACTION_ATTEMPT
14:34:45 163  	SET
14:34:45 164  	  EXTERNAL_STATUS_CODE		= NVL(in_external_status_code, EXTERNAL_STATUS_CODE),
14:34:45 165  	  EXTERNAL_STATUS_MESSAGE	= NVL(in_external_status_message, EXTERNAL_STATUS_MESSAGE),
14:34:45 166  	  EXTERNAL_TRANSACTION_ID	= NVL(in_external_transaction_id, EXTERNAL_TRANSACTION_ID),
14:34:45 167  	  TRANSACTION_START_TIME	= NVL(in_transaction_start_time, TRANSACTION_START_TIME),
14:34:45 168  	  TRANSACTION_ATTEMPT_STATUS_ID = NVL(in_status_id, TRANSACTION_ATTEMPT_STATUS_ID)
14:34:45 169  	WHERE
14:34:45 170  	  ID = in_transaction_attempt_id;
14:34:45 171  END;
14:34:45 172  
14:34:45 173  /*******************************************************************/
14:34:45 174  
14:34:45 175  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
14:34:45 176  /*
14:34:45 177  Throws exceptions:
14:34:45 178  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:45 179  APP_EXCEPTION_CODES_V18.INTRNAL_ERROR
14:34:45 180  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 181  */
14:34:45 182  	in_transaction_id IN TRANSACTION.ID%TYPE,
14:34:45 183  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
14:34:45 184  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
14:34:45 185  ) AS
14:34:45 186  SPROC_NAME CONSTANT VARCHAR2(27) := 'UPDATE_TRANSACTION_ORDER_ID';
14:34:45 187  -- EXCEPTIONS
14:34:45 188  BAD_TRANSACTION_ID EXCEPTION;
14:34:45 189  BEGIN
14:34:45 190  
14:34:45 191  	PROCS_HISTORY_V18.CREATE_TRANSACTION_HISTORY(
14:34:45 192  	  in_transaction_id	       => in_transaction_id,
14:34:45 193  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:45 194  	);
14:34:45 195  
14:34:45 196  	UPDATE
14:34:45 197  	  TRANSACTION
14:34:45 198  	SET
14:34:45 199  	  TRANSACTION.ORDER_ID	 = in_order_id,
14:34:45 200  	  TRANSACTION.UPDATED_BY = in_updated_by,
14:34:45 201  	  TRANSACTION.UPDATE_DATE= SYSDATE
14:34:45 202  	WHERE
14:34:45 203  	  TRANSACTION.ID = in_transaction_id
14:34:45 204  	  AND TRANSACTION.ORDER_ID IS NULL;
14:34:45 205  
14:34:45 206  	IF SQL%ROWCOUNT = 0 THEN
14:34:45 207  	  RAISE BAD_TRANSACTION_ID;
14:34:45 208  	END IF;
14:34:45 209  EXCEPTION
14:34:45 210  WHEN BAD_TRANSACTION_ID THEN
14:34:45 211  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 212  	  SPROC_NAME, 'No such transaction');
14:34:45 213  END UPDATE_TRANSACTION_ORDER_ID;
14:34:45 214  
14:34:45 215  END PROCS_TRANSACTION_CRU_V18;
14:34:45 216  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.03
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ADDRESS_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE CREATE_ADDRESS(
14:34:45   4  /*
14:34:45   5  Throws exceptions:
14:34:45   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45   7  */
14:34:45   8  	  out_address_id	OUT NUMBER,
14:34:45   9  	  in_address1		IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
14:34:45  10  	  in_address2		IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
14:34:45  11  	  in_city		IN ADDRESS.CITY%TYPE DEFAULT NULL,
14:34:45  12  	  in_state		IN ADDRESS.STATE%TYPE DEFAULT NULL,
14:34:45  13  	  in_postal_code	IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:45  14  	  in_country		IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
14:34:45  15  	  in_created_by 	IN ADDRESS.CREATED_BY%TYPE
14:34:45  16  ) AS
14:34:45  17  -- VARIABLES
14:34:45  18  SPROC_NAME	 CONSTANT VARCHAR2(14) := 'CREATE_ADDRESS';
14:34:45  19  -- EXCEPTIONS
14:34:45  20  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45  21  BEGIN
14:34:45  22  
14:34:45  23  	CORE_OWNER.PROCS_ADDRESS_CRU_V18.CREATE_ADDRESS(
14:34:45  24  	  out_address_id      => out_address_id,
14:34:45  25  	  in_address_id       => null,
14:34:45  26  	  in_address1	      => in_address1,
14:34:45  27  	  in_address2	      => in_address2,
14:34:45  28  	  in_city	      => in_city,
14:34:45  29  	  in_state	      => in_state,
14:34:45  30  	  in_postal_code      => in_postal_code,
14:34:45  31  	  in_country	      => in_country,
14:34:45  32  	  in_created_by       => in_created_by
14:34:45  33  	);
14:34:45  34  
14:34:45  35  END CREATE_ADDRESS;
14:34:45  36  
14:34:45  37  PROCEDURE UPDATE_ADDRESS(
14:34:45  38  /*
14:34:45  39  Throws exceptions:
14:34:45  40  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45  41  */
14:34:45  42  	  in_address_id 	IN ADDRESS.ID%TYPE,
14:34:45  43  	  in_address1		IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
14:34:45  44  	  in_address2		IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
14:34:45  45  	  in_city		IN ADDRESS.CITY%TYPE DEFAULT NULL,
14:34:45  46  	  in_state		IN ADDRESS.STATE%TYPE DEFAULT NULL,
14:34:45  47  	  in_postal_code	IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:45  48  	  in_country		IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
14:34:45  49  	  in_updated_by 	IN ADDRESS.UPDATED_BY%TYPE
14:34:45  50  ) AS
14:34:45  51  BEGIN
14:34:45  52  	CORE_OWNER.PROCS_ADDRESS_CRU_V18.UPDATE_ADDRESS(
14:34:45  53  	  in_address_id 	=> in_address_id,
14:34:45  54  	  in_address1		=> in_address1,
14:34:45  55  	  in_address2		=> in_address2,
14:34:45  56  	  in_city		=> in_city,
14:34:45  57  	  in_state		=> in_state,
14:34:45  58  	  in_postal_code	=> in_postal_code,
14:34:45  59  	  in_country		=> in_country,
14:34:45  60  	  in_updated_by 	=> in_updated_by
14:34:45  61  	);
14:34:45  62  END UPDATE_ADDRESS;
14:34:45  63  
14:34:45  64  PROCEDURE GET_ADDRESS (
14:34:45  65  /*
14:34:45  66  Throws exceptions:
14:34:45  67  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45  68  */
14:34:45  69  	  in_id 		IN ADDRESS.ID%TYPE,
14:34:45  70  	  out_result_set	OUT SYS_REFCURSOR
14:34:45  71  ) AS
14:34:45  72  SPROC_NAME CONSTANT VARCHAR2(11) := 'GET_ADDRESS';
14:34:45  73  BEGIN
14:34:45  74  
14:34:45  75  OPEN out_result_set FOR
14:34:45  76  SELECT * FROM ADDRESS WHERE ADDRESS.ID = in_id;
14:34:45  77  
14:34:45  78  END GET_ADDRESS;
14:34:45  79  
14:34:45  80  END PROCS_ADDRESS_V18;
14:34:45  81  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.04
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ADJUSTMENTS_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE CREATE_INVOICE_ADJUSTMENT (
14:34:45   4  	in_invoice_id		  IN NUMBER,
14:34:45   5  	in_adjustment_reason	  IN VARCHAR2,
14:34:45   6  	in_is_credit		  IN NUMBER,
14:34:45   7  	in_charge_id		  IN NUMBER,
14:34:45   8  	in_business_date	  IN DATE,
14:34:45   9  	in_created_by		  IN VARCHAR2,
14:34:45  10  	out_invoice_adjustment_id OUT NUMBER
14:34:45  11  ) AS
14:34:45  12  SPROC_NAME CONSTANT VARCHAR2(25) := 'CREATE_INVOICE_ADJUSTMENT';
14:34:45  13  -- VARIABLES
14:34:45  14  var_current_date	    DATE := SYSDATE;
14:34:45  15  var_new_entity_id     NUMBER;
14:34:45  16  var_inv_adj_reason_id NUMBER;
14:34:45  17  -- EXCEPTIONS
14:34:45  18  BAD_IN_IS_CREDIT_VALUE EXCEPTION;
14:34:45  19  DAB_ADJUSTMENT_REASON  EXCEPTION;
14:34:45  20  BEGIN
14:34:45  21  
14:34:45  22  	IF in_is_credit != GLOBAL_CONSTANTS_V18.TRUE AND in_is_credit != GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:45  23  	  RAISE BAD_IN_IS_CREDIT_VALUE;
14:34:45  24  	END IF;
14:34:45  25  
14:34:45  26  	BEGIN
14:34:45  27  	  SELECT
14:34:45  28  	    ID into var_inv_adj_reason_id
14:34:45  29  	  FROM
14:34:45  30  	    INVOICE_ADJUSTMENT_REASON
14:34:45  31  	  WHERE
14:34:45  32  	    UPPER(VALUE) = UPPER(in_adjustment_reason);
14:34:45  33  	  EXCEPTION
14:34:45  34  	    WHEN NO_DATA_FOUND THEN
14:34:45  35  	      RAISE DAB_ADJUSTMENT_REASON;
14:34:45  36  	END;
14:34:45  37  
14:34:45  38  	SELECT
14:34:45  39  	  INV_ADJ_ID_SEQ.nextVal into var_new_entity_id
14:34:45  40  	FROM
14:34:45  41  	  DUAL;
14:34:45  42  
14:34:45  43  	INSERT INTO INVOICE_ADJUSTMENT (
14:34:45  44  	  ID,
14:34:45  45  	  INVOICE_ID,
14:34:45  46  	  INVOICE_ADJUSTMENT_REASON_ID,
14:34:45  47  	  IS_CREDIT,
14:34:45  48  	  CHARGE_ID,
14:34:45  49  	  ADJUSTMENT_DATE,
14:34:45  50  	  CREATE_DATE,
14:34:45  51  	  CREATED_BY,
14:34:45  52  	  UPDATE_DATE,
14:34:45  53  	  UPDATED_BY
14:34:45  54  	)
14:34:45  55  	VALUES (
14:34:45  56  	  var_new_entity_id,
14:34:45  57  	  in_invoice_id,
14:34:45  58  	  var_inv_adj_reason_id,
14:34:45  59  	  in_is_credit,
14:34:45  60  	  in_charge_id,
14:34:45  61  	  in_business_date,
14:34:45  62  	  var_current_date,
14:34:45  63  	  in_created_by,
14:34:45  64  	  var_current_date,
14:34:45  65  	  in_created_by
14:34:45  66  	);
14:34:45  67  
14:34:45  68  	out_invoice_adjustment_id := var_new_entity_id;
14:34:45  69  
14:34:45  70  EXCEPTION
14:34:45  71  WHEN BAD_IN_IS_CREDIT_VALUE THEN
14:34:45  72  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:45  73  	  SPROC_NAME, 'Bad in_is_credit value');
14:34:45  74  WHEN DAB_ADJUSTMENT_REASON THEN
14:34:45  75  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:45  76  	  SPROC_NAME, 'Bad adjustment reason');
14:34:45  77  WHEN OTHERS THEN
14:34:45  78  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45  79  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45  80  END CREATE_INVOICE_ADJUSTMENT;
14:34:45  81  
14:34:45  82  /******************************************************************************/
14:34:45  83  
14:34:45  84  PROCEDURE UPDATE_INVOICE_ADJUSTMENT (
14:34:45  85  	  in_invoice_id 	    IN NUMBER,
14:34:45  86  	  in_original_charge_id     IN NUMBER,
14:34:45  87  	  in_charge_id		    IN NUMBER,
14:34:45  88  	  in_updated_by 	    IN VARCHAR2
14:34:45  89  ) AS
14:34:45  90  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_INVOICE_ADJUSTMENT';
14:34:45  91  var_invoice_adjustment_id NUMBER;
14:34:45  92  BEGIN
14:34:45  93  	SELECT
14:34:45  94  	  id into var_invoice_adjustment_id
14:34:45  95  	FROM
14:34:45  96  	  INVOICE_ADJUSTMENT
14:34:45  97  	WHERE INVOICE_ID = in_invoice_id
14:34:45  98  	      AND CHARGE_ID = in_original_charge_id;
14:34:45  99  
14:34:45 100  	--create history
14:34:45 101  	PROCS_HISTORY_V18.CREATE_INVOICE_ADJ_HISTORY(
14:34:45 102  	  in_invoice_adjustment_id    => var_invoice_adjustment_id,
14:34:45 103  	  in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:45 104  	);
14:34:45 105  
14:34:45 106  	UPDATE INVOICE_ADJUSTMENT
14:34:45 107  	SET CHARGE_ID = in_charge_id, UPDATE_DATE=sysdate, UPDATED_BY=in_updated_by
14:34:45 108  	WHERE ID = var_invoice_adjustment_id;
14:34:45 109  
14:34:45 110  EXCEPTION
14:34:45 111  WHEN NO_DATA_FOUND THEN
14:34:45 112  	    NULL;
14:34:45 113  END UPDATE_INVOICE_ADJUSTMENT;
14:34:45 114  
14:34:45 115  /******************************************************************************/
14:34:45 116  
14:34:45 117  PROCEDURE CREATE_LINE_ITEM_ADJUSTMENT (
14:34:45 118  	in_line_item_id 	    IN NUMBER,
14:34:45 119  	in_invoice_adjustment_id    IN NUMBER,
14:34:45 120  	in_amount		    IN NUMBER,
14:34:45 121  	in_tax			    IN NUMBER,
14:34:45 122  	in_discount		    IN NUMBER,
14:34:45 123  	in_created_by		    IN VARCHAR2,
14:34:45 124  	out_line_item_adjustment_id OUT NUMBER
14:34:45 125  ) AS
14:34:45 126  SPROC_NAME CONSTANT VARCHAR2(30) := 'CREATE_LINE_ITEM_ADJUSTMENT';
14:34:45 127  -- VARIABLES
14:34:45 128  var_current_date DATE := SYSDATE;
14:34:45 129  var_new_entity_id NUMBER;
14:34:45 130  BEGIN
14:34:45 131  
14:34:45 132  	SELECT
14:34:45 133  	  LI_ADJ_ID_SEQ.nextVal into var_new_entity_id
14:34:45 134  	FROM
14:34:45 135  	  DUAL;
14:34:45 136  
14:34:45 137  	INSERT INTO LINE_ITEM_ADJUSTMENT (
14:34:45 138  	  ID,
14:34:45 139  	  LINE_ITEM_ID,
14:34:45 140  	  INVOICE_ADJUSTMENT_ID,
14:34:45 141  	  AMOUNT,
14:34:45 142  	  TAX,
14:34:45 143  	  DISCOUNT,
14:34:45 144  	  CREATE_DATE,
14:34:45 145  	  CREATED_BY
14:34:45 146  	)
14:34:45 147  	VALUES (
14:34:45 148  	  var_new_entity_id,
14:34:45 149  	  in_line_item_id,
14:34:45 150  	  in_invoice_adjustment_id,
14:34:45 151  	  in_amount,
14:34:45 152  	  in_tax,
14:34:45 153  	  in_discount,
14:34:45 154  	  var_current_date,
14:34:45 155  	  in_created_by
14:34:45 156  	);
14:34:45 157  
14:34:45 158  	out_line_item_adjustment_id := var_new_entity_id;
14:34:45 159  
14:34:45 160  EXCEPTION
14:34:45 161  WHEN OTHERS THEN
14:34:45 162  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 163  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 164  END CREATE_LINE_ITEM_ADJUSTMENT;
14:34:45 165  
14:34:45 166  /******************************************************************************/
14:34:45 167  
14:34:45 168  PROCEDURE CREATE_TAX_ADJUSTMENT (
14:34:45 169  	in_tax_id		   IN NUMBER,
14:34:45 170  	in_line_item_adjustment_id IN NUMBER,
14:34:45 171  	in_amount		   IN NUMBER,
14:34:45 172  	in_created_by		   IN VARCHAR2,
14:34:45 173  	out_tax_adjustment_id	   OUT NUMBER
14:34:45 174  ) AS
14:34:45 175  SPROC_NAME CONSTANT VARCHAR2(30) := 'CREATE_TAX_ADJUSTMENT';
14:34:45 176  -- VARIABLES
14:34:45 177  var_current_date DATE := SYSDATE;
14:34:45 178  var_new_entity_id NUMBER;
14:34:45 179  BEGIN
14:34:45 180  
14:34:45 181  	SELECT
14:34:45 182  	  TAXADJ_ID_SEQ.nextVal into var_new_entity_id
14:34:45 183  	FROM
14:34:45 184  	  DUAL;
14:34:45 185  
14:34:45 186  	INSERT INTO TAX_ADJUSTMENT (
14:34:45 187  	  ID,
14:34:45 188  	  TAX_ID,
14:34:45 189  	  LINE_ITEM_ADJUSTMENT_ID,
14:34:45 190  	  AMOUNT,
14:34:45 191  	  CREATE_DATE,
14:34:45 192  	  CREATED_BY
14:34:45 193  	)
14:34:45 194  	VALUES (
14:34:45 195  	  var_new_entity_id,
14:34:45 196  	  in_tax_id,
14:34:45 197  	  in_line_item_adjustment_id,
14:34:45 198  	  in_amount,
14:34:45 199  	  var_current_date,
14:34:45 200  	  in_created_by
14:34:45 201  	);
14:34:45 202  
14:34:45 203  	out_tax_adjustment_id := var_new_entity_id;
14:34:45 204  
14:34:45 205  EXCEPTION
14:34:45 206  WHEN OTHERS THEN
14:34:45 207  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 208  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 209  END CREATE_TAX_ADJUSTMENT;
14:34:45 210  
14:34:45 211  /******************************************************************************/
14:34:45 212  
14:34:45 213  PROCEDURE CREATE_DISCOUNT_LI_ADJUSTMENT (
14:34:45 214  	in_discount_id		   NUMBER,
14:34:45 215  	in_line_item_id 	   NUMBER,
14:34:45 216  	in_line_item_adjustment_id IN NUMBER,
14:34:45 217  	in_amount		   IN NUMBER,
14:34:45 218  	in_created_by		   IN VARCHAR2,
14:34:45 219  	out_discount_li_id	   OUT NUMBER
14:34:45 220  ) AS
14:34:45 221  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_DISCOUNT_LI_ADJUSTMENT';
14:34:45 222  -- VARIABLES
14:34:45 223  var_current_date DATE := SYSDATE;
14:34:45 224  var_new_entity_id NUMBER;
14:34:45 225  BEGIN
14:34:45 226  
14:34:45 227  	SELECT
14:34:45 228  	  DLIADJ_ID_SEQ.nextVal into var_new_entity_id
14:34:45 229  	FROM
14:34:45 230  	  DUAL;
14:34:45 231  
14:34:45 232  	INSERT INTO DISCOUNT_LINEITEM_ADJUSTMENT (
14:34:45 233  	  ID,
14:34:45 234  	  DISCOUNT_ID,
14:34:45 235  	  LINE_ITEM_ID,
14:34:45 236  	  LINE_ITEM_ADJUSTMENT_ID,
14:34:45 237  	  AMOUNT,
14:34:45 238  	  CREATE_DATE,
14:34:45 239  	  CREATED_BY
14:34:45 240  	)
14:34:45 241  	VALUES (
14:34:45 242  	  var_new_entity_id,
14:34:45 243  	  in_discount_id,
14:34:45 244  	  in_line_item_id,
14:34:45 245  	  in_line_item_adjustment_id,
14:34:45 246  	  in_amount,
14:34:45 247  	  var_current_date,
14:34:45 248  	  in_created_by
14:34:45 249  	);
14:34:45 250  
14:34:45 251  	out_discount_li_id := var_new_entity_id;
14:34:45 252  
14:34:45 253  EXCEPTION
14:34:45 254  WHEN OTHERS THEN
14:34:45 255  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 256  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 257  END CREATE_DISCOUNT_LI_ADJUSTMENT;
14:34:45 258  
14:34:45 259  END PROCS_ADJUSTMENTS_V18;
14:34:45 260  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.08
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ADX_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE GET_SUB_ADX_INFO (
14:34:45   4  /*
14:34:45   5  Throws exceptions:
14:34:45   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45   7  */
14:34:45   8  	out_result_set	    OUT SYS_REFCURSOR,
14:34:45   9  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE
14:34:45  10  ) AS
14:34:45  11  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_SUB_ADX_INFO';
14:34:45  12  BEGIN
14:34:45  13  OPEN out_result_set FOR
14:34:45  14  SELECT /*+ FIRST_ROWS(5) */
14:34:45  15  	s.offer_chain_id,
14:34:45  16  	s.create_date,
14:34:45  17  	decode(s.subscription_status_id, 1, 'a', 'c') status,
14:34:45  18  	ocmd.value,
14:34:45  19  	a.group_id,
14:34:45  20  	s.id subscription_id
14:34:45  21  FROM
14:34:45  22  	account a,
14:34:45  23  	subscription s,
14:34:45  24  	offer_chain_meta_data ocmd,
14:34:45  25  	group_account g,
14:34:45  26  	subscription_share ss,
14:34:45  27  	account a2
14:34:45  28  WHERE
14:34:45  29  	s.account_id = a.id and
14:34:45  30  	s.offer_chain_id = ocmd.offer_chain_id and
14:34:45  31  	g.id = ss.group_account_id and
14:34:45  32  	ss.borrower_account_id = a2.id and
14:34:45  33  	s.id = g.subscription_id and
14:34:45  34  	ocmd.name = 'ADX_BUNDLE' and
14:34:45  35  	a2.group_id = in_group_id and
14:34:45  36  	rownum < 5
14:34:45  37  union all
14:34:45  38  SELECT /*+ FIRST_ROWS(5) */
14:34:45  39  	s.offer_chain_id,
14:34:45  40  	s.create_date,
14:34:45  41  	decode(s.subscription_status_id, 1, 'a', 'c') status,
14:34:45  42  	ocmd.value,
14:34:45  43  	a.group_id,
14:34:45  44  	s.id subscription_id
14:34:45  45  FROM
14:34:45  46  	account a,
14:34:45  47  	subscription s,
14:34:45  48  	offer_chain_meta_data ocmd
14:34:45  49  WHERE
14:34:45  50  	s.account_id = a.id and
14:34:45  51  	s.offer_chain_id = ocmd.offer_chain_id and
14:34:45  52  	ocmd.name = 'ADX_BUNDLE' and
14:34:45  53  	a.group_id = in_group_id and
14:34:45  54  	rownum < 5
14:34:45  55  ;
14:34:45  56  
14:34:45  57  END GET_SUB_ADX_INFO;
14:34:45  58  
14:34:45  59  END PROCS_ADX_V18;
14:34:45  60  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.05
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_AMAZON_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE CREATE_AMAZON_SUB(
14:34:45   4  /*
14:34:45   5  Throws exceptions:
14:34:45   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45   7  */
14:34:45   8  	  out_id	      OUT NUMBER,
14:34:45   9  	  in_subscription_id  IN AMAZON_SUB.SUBSCRIPTION_ID%TYPE,
14:34:45  10  	  in_amazon_id	      IN AMAZON_SUB.AMAZON_ID%TYPE,
14:34:45  11  	  in_created_by       IN AMAZON_SUB.CREATED_BY%TYPE
14:34:45  12  ) AS
14:34:45  13  -- VARIABLES
14:34:45  14  SPROC_NAME	 CONSTANT VARCHAR2(32) := 'CREATE_AMAZON_SUB';
14:34:45  15  -- EXCEPTIONS
14:34:45  16  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45  17  BEGIN
14:34:45  18  
14:34:45  19  	CORE_OWNER.PROCS_AMAZON_CRU_V18.CREATE_AMAZON_SUB(
14:34:45  20  	  out_id	      =>  out_id,
14:34:45  21  	  in_subscription_id  =>  in_subscription_id,
14:34:45  22  	  in_amazon_id	      =>  in_amazon_id,
14:34:45  23  	  in_created_by       =>  in_created_by
14:34:45  24  	);
14:34:45  25  
14:34:45  26  END CREATE_AMAZON_SUB;
14:34:45  27  
14:34:45  28  PROCEDURE GET_ACTIVE_SUB_IDS (
14:34:45  29  /*
14:34:45  30  Throws exceptions:
14:34:45  31  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45  32  */
14:34:45  33  	out_result_set	    OUT SYS_REFCURSOR,
14:34:45  34  	in_amazon_id	IN AMAZON_SUB.AMAZON_ID%TYPE
14:34:45  35  ) AS
14:34:45  36  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ACTIVE_SUB_IDS';
14:34:45  37  BEGIN
14:34:45  38  OPEN out_result_set FOR
14:34:45  39  SELECT s.id
14:34:45  40  FROM subscription s, amazon_sub am
14:34:45  41  WHERE
14:34:45  42  	s.id = am.subscription_id
14:34:45  43  	and s.subscription_status_id = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:45  44  	and am.amazon_id = in_amazon_id
14:34:45  45  ;
14:34:45  46  
14:34:45  47  END GET_ACTIVE_SUB_IDS;
14:34:45  48  
14:34:45  49  PROCEDURE GET_ACTIVE_GROUP_IDS (
14:34:45  50  /*
14:34:45  51  Throws exceptions:
14:34:45  52  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45  53  */
14:34:45  54  	out_result_set	    OUT SYS_REFCURSOR,
14:34:45  55  	in_amazon_id	IN AMAZON_SUB.AMAZON_ID%TYPE
14:34:45  56  ) AS
14:34:45  57  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ACTIVE_GROUP_IDS';
14:34:45  58  BEGIN
14:34:45  59  OPEN out_result_set FOR
14:34:45  60  SELECT distinct a.group_id id
14:34:45  61  FROM subscription s, amazon_sub am, account a
14:34:45  62  WHERE
14:34:45  63  	s.id = am.subscription_id
14:34:45  64  	and a.id = s.account_id
14:34:45  65  	and s.subscription_status_id = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:45  66  	and am.amazon_id = in_amazon_id
14:34:45  67  ;
14:34:45  68  
14:34:45  69  END GET_ACTIVE_GROUP_IDS;
14:34:45  70  
14:34:45  71  END PROCS_AMAZON_V18;
14:34:45  72  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.04
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_CUPY" AS
14:34:45   2  
14:34:45   3  	/****************************************************************************/
14:34:45   4  
14:34:45   5  	PROCEDURE POPULATE_REQUEST_INFO(
14:34:45   6  	  in_hours_prior    IN	NUMBER,
14:34:45   7  	  in_filename	    IN	CC_REQUEST_FILE.FILE_NAME%TYPE,
14:34:45   8  	  in_creator	    IN	CC_REQUEST_FILE.UPDATED_BY%TYPE
14:34:45   9  	) AS
14:34:45  10  	SPROC_NAME CONSTANT VARCHAR2(32) := 'POPULATE_REQUEST_INFO';
14:34:45  11  	var_start_date	    DATE := SYSDATE;
14:34:45  12  	var_end_date	    DATE := var_start_date + (in_hours_prior/24);
14:34:45  13  	var_request_file_id NUMBER := 0;
14:34:45  14  	var_license_count   NUMBER := 0;
14:34:45  15  	var_cc_update_count NUMBER := 0;
14:34:45  16  	BEGIN
14:34:45  17  	    SELECT CC_REQUEST_FILE_ID_SEQ.NEXTVAL INTO var_request_file_id  FROM DUAL;
14:34:45  18  	    INSERT INTO CC_REQUEST_FILE (ID,
14:34:45  19  					 FILE_NAME,
14:34:45  20  					 CC_REQUEST_FILE_STATUS,
14:34:45  21  					 CREATE_DATE,
14:34:45  22  					 CREATED_BY,
14:34:45  23  					 UPDATE_DATE,
14:34:45  24  					 UPDATED_BY)
14:34:45  25  					 VALUES (
14:34:45  26  					 var_request_file_id,
14:34:45  27  					 in_filename,
14:34:45  28  					 'NOT_CREATED',
14:34:45  29  					 var_start_date,
14:34:45  30  					 in_creator,
14:34:45  31  					 var_start_date,
14:34:45  32  					 in_creator);
14:34:45  33  
14:34:45  34  	   FOR record IN (SELECT
14:34:45  35  			    l.ID LICENSE_ID, cc.ID CREDIT_CARD_ID
14:34:45  36  			  FROM
14:34:45  37  			    LICENSE l INNER JOIN SUBSCRIPTION s ON L.SUBSCRIPTION_ID = s.ID
14:34:45  38  				      INNER JOIN CREDIT_CARD cc ON S.INSTRUMENT_ID   = cc.ID
14:34:45  39  			  WHERE
14:34:45  40  			    s.INSTRUMENT_TYPE_ID	 = 1
14:34:45  41  			    AND cc.CREDIT_CARD_STATUS_ID = 1
14:34:45  42  			    AND s.SUBSCRIPTION_STATUS_ID = 1
14:34:45  43  			    AND l.LICENSE_STATUS_ID	 = 2
14:34:45  44  			    AND cc.CREDIT_CARD_TYPE_ID IN (2,3)
14:34:45  45  			    AND l.END_DATE BETWEEN var_start_date AND var_end_date
14:34:45  46  			    AND l.ID NOT IN (SELECT LICENSE_ID FROM CC_UPDATE))
14:34:45  47  	   LOOP
14:34:45  48  	     var_license_count := 0;
14:34:45  49  	     SELECT COUNT(1) INTO  var_license_count FROM CC_UPDATE WHERE LICENSE_ID = record.LICENSE_ID;
14:34:45  50  
14:34:45  51  	     IF var_license_count = 0 THEN
14:34:45  52  		INSERT INTO CC_UPDATE (ID,
14:34:45  53  				       CREDIT_CARD_ID,
14:34:45  54  				       LICENSE_ID,
14:34:45  55  				       CC_UPDATE_STATUS,
14:34:45  56  				       CC_REQUEST_FILE_ID,
14:34:45  57  				       CREATE_DATE,
14:34:45  58  				       UPDATE_DATE,
14:34:45  59  				       CREATED_BY,
14:34:45  60  				       UPDATED_BY
14:34:45  61  				       ) VALUES (
14:34:45  62  				       CC_UPDATE_SEQ.NEXTVAL,
14:34:45  63  				       record.CREDIT_CARD_ID,
14:34:45  64  				       record.LICENSE_ID,
14:34:45  65  				       'NOT_ADDED_TO_FILE',
14:34:45  66  				       var_request_file_id,
14:34:45  67  				       var_start_date,
14:34:45  68  				       var_start_date,
14:34:45  69  				       in_creator,
14:34:45  70  				       in_creator
14:34:45  71  				       );
14:34:45  72  	     END IF;
14:34:45  73  	   END LOOP;
14:34:45  74  
14:34:45  75  	   SELECT COUNT(1) INTO var_cc_update_count
14:34:45  76  	   FROM CC_UPDATE
14:34:45  77  	   WHERE CC_REQUEST_FILE_ID = var_request_file_id;
14:34:45  78  	   IF var_cc_update_count <= 0 THEN
14:34:45  79  	     UPDATE CC_REQUEST_FILE
14:34:45  80  	     SET CC_REQUEST_FILE_STATUS = 'EMPTY'
14:34:45  81  	     WHERE ID = var_request_file_id;
14:34:45  82  	   END IF;
14:34:45  83  
14:34:45  84  	END POPULATE_REQUEST_INFO;
14:34:45  85  
14:34:45  86  	/****************************************************************************/
14:34:45  87  
14:34:45  88  	PROCEDURE CHASE_PROFILE_BY_REQ_FILE_ID(
14:34:45  89  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
14:34:45  90  	  in_start	     IN NUMBER,
14:34:45  91  	  in_end	     IN NUMBER,
14:34:45  92  	  out_result_set     OUT SYS_REFCURSOR
14:34:45  93  	) AS
14:34:45  94  	SPROC_NAME CONSTANT VARCHAR2(32) := 'CHASE_PROFILE_BY_REQ_FILE_ID';
14:34:45  95  	var_range_diff	    NUMBER := 0;
14:34:45  96  	var_upper_bond_diff NUMBER := 0;
14:34:45  97  	var_l_start	    NUMBER := 0;
14:34:45  98  	var_l_end	    NUMBER := 0;
14:34:45  99  	BEGIN
14:34:45 100  	  --Normalize the end points [START]
14:34:45 101  	  IF (in_start IS NULL OR in_start < 0) Then
14:34:45 102  	    var_l_start := 0;
14:34:45 103  	  ELSE
14:34:45 104  	    var_l_start := in_start;
14:34:45 105  	  END IF;
14:34:45 106  
14:34:45 107  	  IF (in_end IS NULL) Then
14:34:45 108  	    var_l_end := 500;
14:34:45 109  	  ELSE
14:34:45 110  	    var_l_end := in_end;
14:34:45 111  	  END IF;
14:34:45 112  
14:34:45 113  	  var_l_start := var_l_start + 1;
14:34:45 114  	  var_l_end   := var_l_end   + 1;
14:34:45 115  
14:34:45 116  	  var_range_diff  := var_l_end - var_l_start;
14:34:45 117  	  var_upper_bond_diff :=  var_range_diff - 1000;
14:34:45 118  
14:34:45 119  	  IF (var_upper_bond_diff > 0) Then
14:34:45 120  	    var_l_end := var_l_end - var_upper_bond_diff;
14:34:45 121  	  END IF;
14:34:45 122  	  --Normalize the end points [END]
14:34:45 123  
14:34:45 124  	  OPEN out_result_set FOR
14:34:45 125  	    SELECT CHASE_PROFILE_ID FROM
14:34:45 126  	      (SELECT rownum rnum, q.* FROM
14:34:45 127  		 (SELECT
14:34:45 128  		    cc.CHASE_PROFILE_ID
14:34:45 129  		  FROM
14:34:45 130  		    CREDIT_CARD cc,
14:34:45 131  		    CC_UPDATE ccu
14:34:45 132  		  WHERE
14:34:45 133  		    ccu.CC_REQUEST_FILE_ID = in_request_file_id
14:34:45 134  		    AND ccu.CREDIT_CARD_ID = cc.id
14:34:45 135  		) Q
14:34:45 136  	      WHERE rownum <= var_l_end)
14:34:45 137  	    WHERE rnum >= var_l_Start;
14:34:45 138  	END CHASE_PROFILE_BY_REQ_FILE_ID;
14:34:45 139  
14:34:45 140  	/****************************************************************************/
14:34:45 141  
14:34:45 142  	PROCEDURE UPDATE_REQUEST_FILE_STATUS(
14:34:45 143  	  in_request_file_id IN CC_REQUEST_FILE.ID%TYPE,
14:34:45 144  	  in_status	     IN CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
14:34:45 145  	  in_updated_by      IN CC_REQUEST_FILE.UPDATED_BY%TYPE
14:34:45 146  	)AS
14:34:45 147  	SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_REQUEST_FILE_STATUS';
14:34:45 148  	BEGIN
14:34:45 149  	  UPDATE CC_REQUEST_FILE
14:34:45 150  	  SET CC_REQUEST_FILE_STATUS = in_status,
14:34:45 151  	      UPDATE_DATE = SYSDATE,
14:34:45 152  	      UPDATED_BY  = in_updated_by
14:34:45 153  	  WHERE ID = in_request_file_id;
14:34:45 154  	END UPDATE_REQUEST_FILE_STATUS;
14:34:45 155  
14:34:45 156  	/****************************************************************************/
14:34:45 157  
14:34:45 158  	PROCEDURE UPDATE_CC_REQUEST_STATUS(
14:34:45 159  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
14:34:45 160  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
14:34:45 161  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
14:34:45 162  	) AS
14:34:45 163  	SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_CC_REQUEST_STATUS';
14:34:45 164  	BEGIN
14:34:45 165  	  UPDATE CC_UPDATE
14:34:45 166  	  SET CC_UPDATE_STATUS = in_status,
14:34:45 167  	      UPDATE_DATE      = SYSDATE,
14:34:45 168  	      UPDATED_BY       = in_updated_by
14:34:45 169  	  WHERE
14:34:45 170  	    CC_REQUEST_FILE_ID = in_request_file_id;
14:34:45 171  	END UPDATE_CC_REQUEST_STATUS;
14:34:45 172  
14:34:45 173  	/****************************************************************************/
14:34:45 174  
14:34:45 175  	PROCEDURE REQUEST_FILES_BY_STATUS (
14:34:45 176  	  in_status	      IN  CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
14:34:45 177  	  in_older_than_hours IN  NUMBER DEFAULT -288,
14:34:45 178  	  out_request_files   OUT SYS_REFCURSOR
14:34:45 179  	) AS
14:34:45 180  	var_older_than_hours NUMBER := in_older_than_hours;
14:34:45 181  	BEGIN
14:34:45 182  	 IF (var_older_than_hours IS NULL) THEN
14:34:45 183  	   var_older_than_hours := -288;
14:34:45 184  	 END IF;
14:34:45 185  
14:34:45 186  	 OPEN out_request_files FOR
14:34:45 187  	 SELECT
14:34:45 188  	   ID,
14:34:45 189  	   FILE_NAME
14:34:45 190  	 FROM
14:34:45 191  	   CC_REQUEST_FILE
14:34:45 192  	 WHERE
14:34:45 193  	   CC_REQUEST_FILE_STATUS = in_status
14:34:45 194  	 AND
14:34:45 195  	   UPDATE_DATE < SYSDATE - (var_older_than_hours / 24);
14:34:45 196  	END REQUEST_FILES_BY_STATUS;
14:34:45 197  
14:34:45 198  	/****************************************************************************/
14:34:45 199  
14:34:45 200  	PROCEDURE COUNT_BY_REQUEST_FILE_ID (
14:34:45 201  	  in_id     IN	CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
14:34:45 202  	  out_count OUT NUMBER
14:34:45 203  	) AS
14:34:45 204  	SPROC_NAME CONSTANT VARCHAR2(32) := 'COUNT_BY_REQUEST_FILE_ID';
14:34:45 205  	BEGIN
14:34:45 206  	  SELECT COUNT(1) INTO out_count
14:34:45 207  	  FROM CC_UPDATE
14:34:45 208  	  WHERE CC_REQUEST_FILE_ID = in_id;
14:34:45 209  	END COUNT_BY_REQUEST_FILE_ID;
14:34:45 210  
14:34:45 211  	/****************************************************************************/
14:34:45 212  
14:34:45 213  	PROCEDURE GET_CREDIT_CARD_LICENSE (
14:34:45 214  	  in_chase_profile_id  IN  CREDIT_CARD.CHASE_PROFILE_ID%TYPE,
14:34:45 215  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE DEFAULT NULL,
14:34:45 216  	  out_card_license     OUT SYS_REFCURSOR
14:34:45 217  	) AS
14:34:45 218  	BEGIN
14:34:45 219  	  OPEN out_card_license FOR
14:34:45 220  	  SELECT
14:34:45 221  	    cc.ID CREDIT_CARD_ID,
14:34:45 222  	    cc.CHASE_PROFILE_ID,
14:34:45 223  	    cc.LAST_FOUR_CC CREDIT_CARD_LAST_DIGITS,
14:34:45 224  	    cc.UPDATE_DATE CREDIT_CARD_UPDATE_DATE,
14:34:45 225  	    cc.EXPIRATION_DATE CREDIT_CARD_EXPIRATION_DATE,
14:34:45 226  	    cc.UPDATED_BY CREDIT_CARD_UPDATED_BY,
14:34:45 227  	    a.GROUP_ID,
14:34:45 228  	    u.LICENSE_ID,
14:34:45 229  	    u.ID CC_UPDATE_ID,
14:34:45 230  	    l.END_DATE LICENSE_END_DATE,
14:34:45 231  	    DECODE(cc.CREDIT_CARD_STATUS_ID, 1, 1, 0) ACTIVE
14:34:45 232  	  FROM CREDIT_CARD cc, CC_UPDATE u, CC_REQUEST_FILE rf, ACCOUNT a, LICENSE l
14:34:45 233  	  WHERE cc.ID = u.CREDIT_CARD_ID
14:34:45 234  	  AND u.CC_REQUEST_FILE_ID = rf.ID
14:34:45 235  	  AND rf.CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE', 'NO_RESPONSE')
14:34:45 236  	  AND rf.FILE_NAME = NVL(in_request_filename, rf.FILE_NAME)
14:34:45 237  	  AND upper(cc.CHASE_PROFILE_ID) = in_chase_profile_id
14:34:45 238  	  AND cc.ACCOUNT_ID = a.ID
14:34:45 239  	  AND u.LICENSE_ID = l.ID
14:34:45 240  	  AND u.CC_UPDATE_STATUS NOT IN ('NO_UPDATE', 'UPDATED')
14:34:45 241  	  AND SYSDATE BETWEEN l.START_DATE and l.END_DATE
14:34:45 242  	  ORDER BY cc.UPDATE_DATE DESC;
14:34:45 243  	END GET_CREDIT_CARD_LICENSE;
14:34:45 244  
14:34:45 245  	/****************************************************************************/
14:34:45 246  
14:34:45 247  	PROCEDURE UPDATE_CC_UPDATE(
14:34:45 248  	  in_id 	     IN CC_UPDATE.ID%TYPE,
14:34:45 249  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
14:34:45 250  	  in_action	     IN CC_UPDATE.CC_UPDATE_ACTION%TYPE DEFAULT NULL,
14:34:45 251  	  in_reason	     IN CC_UPDATE.CC_UPDATE_REASON%TYPE DEFAULT NULL,
14:34:45 252  	  in_response_proc_status_code IN CC_UPDATE.RESPONSE_PROC_STATUS_CODE%TYPE DEFAULT NULL,
14:34:45 253  	  in_response_proc_status_msg  IN CC_UPDATE.RESPONSE_PROC_STATUS_MESSAGE%TYPE DEFAULT NULL,
14:34:45 254  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
14:34:45 255  	) AS
14:34:45 256  	BEGIN
14:34:45 257  	  UPDATE CC_UPDATE
14:34:45 258  	  SET CC_UPDATE_STATUS = in_status,
14:34:45 259  	  CC_UPDATE_ACTION = NVL(in_action, CC_UPDATE_ACTION),
14:34:45 260  	  CC_UPDATE_REASON = NVL(in_reason, CC_UPDATE_REASON),
14:34:45 261  	  RESPONSE_PROC_STATUS_CODE = NVL(RESPONSE_PROC_STATUS_CODE, in_response_proc_status_code),
14:34:45 262  	  RESPONSE_PROC_STATUS_MESSAGE = NVL(RESPONSE_PROC_STATUS_MESSAGE, in_response_proc_status_msg),
14:34:45 263  	  UPDATE_DATE = SYSDATE,
14:34:45 264  	  UPDATED_BY = in_updated_by
14:34:45 265  	  WHERE ID = in_id;
14:34:45 266  	END UPDATE_CC_UPDATE;
14:34:45 267  
14:34:45 268  	/****************************************************************************/
14:34:45 269  
14:34:45 270  	PROCEDURE UPDATE_CC_UPDATE_STATUS(
14:34:45 271  	  in_id 	IN CC_UPDATE.ID%TYPE,
14:34:45 272  	  in_status	IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
14:34:45 273  	  in_updated_by IN CC_UPDATE.UPDATED_BY%TYPE
14:34:45 274  	) AS
14:34:45 275  	BEGIN
14:34:45 276  	  UPDATE CC_UPDATE
14:34:45 277  	  SET CC_UPDATE_STATUS = in_status,
14:34:45 278  	  UPDATE_DATE = SYSDATE,
14:34:45 279  	  UPDATED_BY = in_updated_by
14:34:45 280  	  WHERE ID = in_id;
14:34:45 281  	END UPDATE_CC_UPDATE_STATUS;
14:34:45 282  
14:34:45 283  	/****************************************************************************/
14:34:45 284  
14:34:45 285  	PROCEDURE GET_REQUEST_FILE_BY_FILENAME (
14:34:45 286  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE,
14:34:45 287  	  out_request_file     OUT SYS_REFCURSOR
14:34:45 288  	) AS
14:34:45 289  	BEGIN
14:34:45 290  	  OPEN out_request_file FOR
14:34:45 291  	  SELECT ID, FILE_NAME
14:34:45 292  	  FROM CC_REQUEST_FILE
14:34:45 293  	  WHERE FILE_NAME = in_request_filename;
14:34:45 294  	END GET_REQUEST_FILE_BY_FILENAME;
14:34:45 295  
14:34:45 296  	/****************************************************************************/
14:34:45 297  
14:34:45 298  	PROCEDURE SUSPEND_CREDIT_CARD (
14:34:45 299  	  in_credit_card_id  IN CREDIT_CARD.ID%TYPE,
14:34:45 300  	  in_updated_by      IN CREDIT_CARD.UPDATED_BY%TYPE
14:34:45 301  	) AS
14:34:45 302  	BEGIN
14:34:45 303  	  -- Create history
14:34:45 304  	  PROCS_HISTORY_V18.CREATE_CREDIT_CARD_HISTORY(
14:34:45 305  	      in_credit_card_id 	   => in_credit_card_id,
14:34:45 306  	      in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:45 307  	  );
14:34:45 308  
14:34:45 309  	  UPDATE CREDIT_CARD
14:34:45 310  	  SET UPDATE_DATE = SYSDATE,
14:34:45 311  	  UPDATED_BY = in_updated_by,
14:34:45 312  	  CREDIT_CARD_STATUS_ID = GLOBAL_STATUSES_V18.CREDIT_CARD_DISABLED
14:34:45 313  	  WHERE ID = in_credit_card_id;
14:34:45 314  	END SUSPEND_CREDIT_CARD;
14:34:45 315  
14:34:45 316  	/****************************************************************************/
14:34:45 317  
14:34:45 318  	PROCEDURE UPDATE_CREDIT_CARD (
14:34:45 319  	  in_credit_card_id   IN CREDIT_CARD.ID%TYPE,
14:34:45 320  	  in_last_four_cc     IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
14:34:45 321  	  in_expiration_date  IN CREDIT_CARD.EXPIRATION_DATE%TYPE,
14:34:45 322  	  in_updated_by       IN CREDIT_CARD.UPDATED_BY%TYPE
14:34:45 323  	) AS
14:34:45 324  	BEGIN
14:34:45 325  	  -- Create history
14:34:45 326  	  PROCS_HISTORY_V18.CREATE_CREDIT_CARD_HISTORY(
14:34:45 327  	      in_credit_card_id 	   => in_credit_card_id,
14:34:45 328  	      in_system_activity_reason_id => GLOBAL_ENUMS_V18.SAC_SYSTEM_APPLIED_RULE
14:34:45 329  	  );
14:34:45 330  
14:34:45 331  	  UPDATE CREDIT_CARD
14:34:45 332  	  SET UPDATE_DATE = SYSDATE,
14:34:45 333  	  UPDATED_BY = in_updated_by,
14:34:45 334  	  LAST_FOUR_CC = NVL(in_last_four_cc, LAST_FOUR_CC),
14:34:45 335  	  EXPIRATION_DATE = NVL(in_expiration_date, EXPIRATION_DATE)
14:34:45 336  	  WHERE ID = in_credit_card_id;
14:34:45 337  	END UPDATE_CREDIT_CARD;
14:34:45 338  
14:34:45 339  	/****************************************************************************/
14:34:45 340  
14:34:45 341  	PROCEDURE COMPLETABLE_REQUESTS (
14:34:45 342  	  out_request_files OUT SYS_REFCURSOR
14:34:45 343  	) AS
14:34:45 344  	BEGIN
14:34:45 345  	  OPEN out_request_files FOR
14:34:45 346  	  SELECT DISTINCT rf.ID, rf.FILE_NAME
14:34:45 347  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
14:34:45 348  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
14:34:45 349  	  AND rf.ID = u.CC_REQUEST_FILE_ID
14:34:45 350  	  AND u.CC_UPDATE_STATUS IN ('UPDATED', 'NO_UPDATE')
14:34:45 351  	  MINUS
14:34:45 352  	  SELECT rf.ID, rf.FILE_NAME
14:34:45 353  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
14:34:45 354  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
14:34:45 355  	  AND rf.ID = u.CC_REQUEST_FILE_ID
14:34:45 356  	  AND u.CC_UPDATE_STATUS NOT IN ('UPDATED', 'NO_UPDATE');
14:34:45 357  	END COMPLETABLE_REQUESTS;
14:34:45 358  
14:34:45 359  	/****************************************************************************/
14:34:45 360  
14:34:45 361  	PROCEDURE COMPLETABLE_REQUESTS_W_FAILS (
14:34:45 362  	  in_max_hours_before_report IN  NUMBER,
14:34:45 363  	  out_request_files	     OUT SYS_REFCURSOR
14:34:45 364  	) AS
14:34:45 365  	BEGIN
14:34:45 366  	  OPEN out_request_files FOR
14:34:45 367  	  SELECT DISTINCT rf.ID, rf.FILE_NAME
14:34:45 368  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
14:34:45 369  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
14:34:45 370  	  AND rf.ID = u.CC_REQUEST_FILE_ID
14:34:45 371  	  AND u.CC_UPDATE_STATUS  = 'REQUEST_FAILED'
14:34:45 372  	  AND u.UPDATE_DATE < SYSDATE - (in_max_hours_before_report / 24)
14:34:45 373  	  MINUS
14:34:45 374  	  SELECT rf.ID, rf.FILE_NAME
14:34:45 375  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
14:34:45 376  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
14:34:45 377  	  AND rf.ID = u.CC_REQUEST_FILE_ID
14:34:45 378  	  AND u.UPDATE_DATE < SYSDATE - (in_max_hours_before_report / 24)
14:34:45 379  	  AND u.CC_UPDATE_STATUS NOT IN ('UPDATED', 'NO_UPDATE', 'REQUEST_FAILED');
14:34:45 380  	END COMPLETABLE_REQUESTS_W_FAILS;
14:34:45 381  
14:34:45 382  END PROCS_CUPY;
14:34:45 383  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.25
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE
14:34:45   2  PACKAGE BODY PROCS_ENTITLEMENT_V18 AS
14:34:45   3  
14:34:45   4  	PROCEDURE GET_ARCHIVE_ENTITLEMENT_URI(
14:34:45   5  	  in_subscription_id IN NUMBER,
14:34:45   6  	  out_uri OUT VARCHAR2)
14:34:45   7  	AS
14:34:45   8  	  SPROC_NAME	  CONSTANT VARCHAR2(30) := 'GET_ARCHIVE_ENTITLEMENT_URI';
14:34:45   9  	  UNKNOWN_ERROR   EXCEPTION;
14:34:45  10  	BEGIN
14:34:45  11  	  SELECT
14:34:45  12  	    POMD.VALUE INTO out_uri
14:34:45  13  	  FROM
14:34:45  14  	     OFFER_PRODUCT_OFFERING OPO,
14:34:45  15  	     PRODUCT_OFFERING PO,
14:34:45  16  	     OFFER_OFFER_CHAIN OOC,
14:34:45  17  	     SUBSCRIPTION S,
14:34:45  18  	     LICENSE LL,
14:34:45  19  	     PRODUCT_OFFERING_META_DATA POMD
14:34:45  20  	  WHERE
14:34:45  21  	     OPO.OFFER_ID = OOC.OFFER_ID AND
14:34:45  22  	     OOC.OFFER_CHAIN_ID = S.OFFER_CHAIN_ID AND
14:34:45  23  	     S.ID = in_subscription_id AND
14:34:45  24  	     PO.ID = OPO.PRODUCT_OFFERING_ID AND
14:34:45  25  	     PO.ID = POMD.PRODUCT_OFFERING_ID AND
14:34:45  26  	     PO.CAPABILITY_ID = 1 AND
14:34:45  27  	     S.ID = LL.SUBSCRIPTION_ID AND
14:34:45  28  	     SYSDATE BETWEEN LL.START_DATE AND LL.ENTITLEMENT_END_DATE AND
14:34:45  29  	     NAME = 'entitlement_uri' AND
14:34:45  30  	     rownum < 2;
14:34:45  31  	EXCEPTION
14:34:45  32  	  WHEN OTHERS THEN
14:34:45  33  	    PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45  34  	      SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45  35  	END GET_ARCHIVE_ENTITLEMENT_URI;
14:34:45  36  
14:34:45  37  	PROCEDURE GET_ALL_ENTITLEMENTS(
14:34:45  38  	  in_group_id	 IN  NUMBER,
14:34:45  39  	  out_result_set OUT SYS_REFCURSOR)
14:34:45  40  	AS
14:34:45  41  	  -- CONSTANTS
14:34:45  42  	  SPROC_NAME	  CONSTANT VARCHAR2(20) := 'GET_ALL_ENTITLEMENTS';
14:34:45  43  	  -- EXCEPTIONS
14:34:45  44  	  NOT_FOUND	  EXCEPTION;
14:34:45  45  	  UNKNOWN_ERROR   EXCEPTION;
14:34:45  46  	  -- VARIABLES
14:34:45  47  	  var_subs	  SYS_REFCURSOR;
14:34:45  48  	BEGIN
14:34:45  49  	  OPEN out_result_set FOR
14:34:45  50  
14:34:45  51  	SELECT
14:34:45  52  	  C.CODE NAME,
14:34:45  53  	  C.DESCRIPTION,
14:34:45  54  	  0 INHERITED,
14:34:45  55  	  C.SHAREABLE,
14:34:45  56  	  MAX(LIC.ENTITLEMENT_END_DATE) EXPIRES
14:34:45  57  	FROM
14:34:45  58  	  SUBSCRIPTION SB
14:34:45  59  	  INNER JOIN ACCOUNT AC ON AC.ID = SB.ACCOUNT_ID
14:34:45  60  	  INNER JOIN LICENSE LIC ON LIC.SUBSCRIPTION_ID = SB.ID
14:34:45  61  	  INNER JOIN OFFER_PRODUCT_OFFERING OPO ON OPO.OFFER_ID = LIC.OFFER_ID
14:34:45  62  	  INNER JOIN PRODUCT_OFFERING PO ON PO.ID = OPO.PRODUCT_OFFERING_ID
14:34:45  63  	  INNER JOIN CAPABILITY C ON PO.CAPABILITY_ID = C.ID
14:34:45  64  	WHERE
14:34:45  65  	  LIC.ENTITLEMENT_END_DATE >= TRUNC(SYSDATE)
14:34:45  66  	  AND LIC.START_DATE <= SYSDATE
14:34:45  67  	  AND AC.GROUP_ID = in_group_id
14:34:45  68  	GROUP BY
14:34:45  69  	  C.CODE, 0, C.SHAREABLE, C.DESCRIPTION
14:34:45  70  UNION ALL
14:34:45  71  	SELECT
14:34:45  72  	  C.CODE NAME,
14:34:45  73  	  C.DESCRIPTION,
14:34:45  74  	  1 INHERITED,
14:34:45  75  	  C.SHAREABLE,
14:34:45  76  	  MAX(LEAST(SS.END_DATE, LIC.ENTITLEMENT_END_DATE)) EXPIRES
14:34:45  77  	FROM
14:34:45  78  	  ACCOUNT BORROWER,
14:34:45  79  	  SUBSCRIPTION S,
14:34:45  80  	  LICENSE LIC,
14:34:45  81  	  OFFER_PRODUCT_OFFERING OPO,
14:34:45  82  	  PRODUCT_OFFERING PO,
14:34:45  83  	  CAPABILITY C,
14:34:45  84  	  GROUP_ACCOUNT GA,
14:34:45  85  	  SUBSCRIPTION_SHARE SS
14:34:45  86  	WHERE
14:34:45  87  	  BORROWER.GROUP_ID = in_group_id
14:34:45  88  	  AND LIC.SUBSCRIPTION_ID = S.ID
14:34:45  89  	  AND OPO.OFFER_ID = LIC.OFFER_ID
14:34:45  90  	  AND PO.ID = OPO.PRODUCT_OFFERING_ID
14:34:45  91  	  AND PO.CAPABILITY_ID = C.ID
14:34:45  92  	  AND GA.SUBSCRIPTION_ID = S.ID
14:34:45  93  	  AND SS.BORROWER_ACCOUNT_ID = BORROWER.ID
14:34:45  94  	  AND SS.GROUP_ACCOUNT_ID = GA.ID
14:34:45  95  	  AND SYSDATE BETWEEN SS.START_DATE AND SS.END_DATE
14:34:45  96  	  AND SYSDATE BETWEEN LIC.START_DATE AND LIC.ENTITLEMENT_END_DATE
14:34:45  97  	  AND C.SHAREABLE = 1
14:34:45  98  	GROUP BY
14:34:45  99  	  C.CODE, 0, C.SHAREABLE, C.DESCRIPTION;
14:34:45 100  
14:34:45 101  	EXCEPTION
14:34:45 102  	  WHEN OTHERS THEN
14:34:45 103  	    PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 104  	      SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 105  	END GET_ALL_ENTITLEMENTS;
14:34:45 106  
14:34:45 107  	PROCEDURE GET_ITUNES_ENTITLEMENTS(
14:34:45 108  	  in_product_id IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
14:34:45 109  	  out_result_set OUT SYS_REFCURSOR)
14:34:45 110  	AS
14:34:45 111  	  -- CONSTANTS
14:34:45 112  	  SPROC_NAME	  CONSTANT VARCHAR2(25) := 'GET_ITUNES_ENTITLEMENTS';
14:34:45 113  	  -- EXCEPTIONS
14:34:45 114  	  NOT_FOUND	  EXCEPTION;
14:34:45 115  	  UNKNOWN_ERROR   EXCEPTION;
14:34:45 116  	  -- VARIABLES
14:34:45 117  	  var_subs	  SYS_REFCURSOR;
14:34:45 118  	BEGIN
14:34:45 119  	  OPEN out_result_set FOR
14:34:45 120  
14:34:45 121  	      SELECT
14:34:45 122  		c.code NAME,
14:34:45 123  		C.DESCRIPTION,
14:34:45 124  		0 INHERITED,
14:34:45 125  		C.SHAREABLE,
14:34:45 126  		sysdate as EXPIRES
14:34:45 127  	      FROM
14:34:45 128  		offer_offer_chain ooc,
14:34:45 129  		offer o,
14:34:45 130  		offer_product_offering opo,
14:34:45 131  		product_offering po,
14:34:45 132  		capability c
14:34:45 133  	      WHERE
14:34:45 134  		o.id = ooc.offer_id AND
14:34:45 135  		opo.offer_id = o.id AND
14:34:45 136  		po.id = opo.product_offering_id AND
14:34:45 137  		c.id = po.capability_id AND
14:34:45 138  		c.id !=0 AND
14:34:45 139  		ooc.offer_chain_id =
14:34:45 140  		(SELECT
14:34:45 141  		    ocmd.offer_chain_id
14:34:45 142  		  FROM
14:34:45 143  		      offer_chain_meta_data ocmd
14:34:45 144  		  WHERE
14:34:45 145  			      ocmd.name = 'ITUNES_PRODUCT_ID' AND
14:34:45 146  		      ocmd.value = in_product_id AND
14:34:45 147  		      rownum < 2
14:34:45 148  		)
14:34:45 149  	      ;
14:34:45 150  
14:34:45 151  	EXCEPTION
14:34:45 152  	  WHEN OTHERS THEN
14:34:45 153  	    PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 154  	      SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 155  	END GET_ITUNES_ENTITLEMENTS;
14:34:45 156  
14:34:45 157  END PROCS_ENTITLEMENT_V18;
14:34:45 158  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.07
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_HISTORY_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE CREATE_ADDRESS_HISTORY(
14:34:45   4  	in_address_id		     IN NUMBER,
14:34:45   5  	in_system_activity_reason_id IN NUMBER
14:34:45   6  ) AS
14:34:45   7  SPROC_NAME CONSTANT VARCHAR2(22) := 'CREATE_ADDRESS_HISTORY';
14:34:45   8  -- VARIABLES
14:34:45   9  var_address1    ADDRESS.ADDRESS1%TYPE;
14:34:45  10  var_address2    ADDRESS.ADDRESS2%TYPE;
14:34:45  11  var_city	      ADDRESS.CITY%TYPE;
14:34:45  12  var_state       ADDRESS.STATE%TYPE;
14:34:45  13  var_postal_code ADDRESS.POSTAL_CODE%TYPE;
14:34:45  14  var_country     ADDRESS.COUNTRY%TYPE;
14:34:45  15  var_created_by  ADDRESS.CREATED_BY%TYPE;
14:34:45  16  var_create_date ADDRESS.CREATE_DATE%TYPE;
14:34:45  17  var_updated_by  ADDRESS.UPDATED_BY%TYPE;
14:34:45  18  var_update_date ADDRESS.UPDATE_DATE%TYPE;
14:34:45  19  -- EXCEPTIONS
14:34:45  20  BAD_ADDRESS_ID	     EXCEPTION;
14:34:45  21  CAN_NOT_CREATE_HISTORY EXCEPTION;
14:34:45  22  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45  23  BEGIN
14:34:45  24  
14:34:45  25  	BEGIN
14:34:45  26  	  SELECT
14:34:45  27  	    ADDRESS.ADDRESS1,
14:34:45  28  	    ADDRESS.ADDRESS2,
14:34:45  29  	    ADDRESS.CITY,
14:34:45  30  	    ADDRESS.STATE,
14:34:45  31  	    ADDRESS.POSTAL_CODE,
14:34:45  32  	    ADDRESS.COUNTRY,
14:34:45  33  	    ADDRESS.CREATED_BY,
14:34:45  34  	    ADDRESS.CREATE_DATE,
14:34:45  35  	    ADDRESS.UPDATED_BY,
14:34:45  36  	    ADDRESS.UPDATE_DATE
14:34:45  37  	    into
14:34:45  38  	    var_address1,
14:34:45  39  	    var_address2,
14:34:45  40  	    var_city,
14:34:45  41  	    var_state,
14:34:45  42  	    var_postal_code,
14:34:45  43  	    var_country,
14:34:45  44  	    var_created_by,
14:34:45  45  	    var_create_date,
14:34:45  46  	    var_updated_by,
14:34:45  47  	    var_update_date
14:34:45  48  	  FROM
14:34:45  49  	    ADDRESS
14:34:45  50  	  WHERE
14:34:45  51  	    ADDRESS.ID = in_address_id;
14:34:45  52  	  EXCEPTION
14:34:45  53  	    WHEN NO_DATA_FOUND THEN
14:34:45  54  	      RAISE BAD_ADDRESS_ID;
14:34:45  55  	END;
14:34:45  56  
14:34:45  57  	BEGIN
14:34:45  58  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_ADDRESS_HISTORY(
14:34:45  59  	    in_address_id,
14:34:45  60  	    in_system_activity_reason_id,
14:34:45  61  	    var_address1,
14:34:45  62  	    var_address2,
14:34:45  63  	    var_city,
14:34:45  64  	    var_state,
14:34:45  65  	    var_postal_code,
14:34:45  66  	    var_country,
14:34:45  67  	    var_created_by,
14:34:45  68  	    var_create_date,
14:34:45  69  	    var_updated_by,
14:34:45  70  	    var_update_date
14:34:45  71  	  );
14:34:45  72  	  EXCEPTION
14:34:45  73  	    WHEN OTHERS THEN
14:34:45  74  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:45  75  	      RAISE CAN_NOT_CREATE_HISTORY;
14:34:45  76  	END;
14:34:45  77  
14:34:45  78  EXCEPTION
14:34:45  79  WHEN BAD_ADDRESS_ID THEN
14:34:45  80  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45  81  	  SPROC_NAME, 'Bad recipientAddress id');
14:34:45  82  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:45  83  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45  84  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:45  85  WHEN OTHERS THEN
14:34:45  86  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45  87  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45  88  END CREATE_ADDRESS_HISTORY;
14:34:45  89  
14:34:45  90  /********************************************************************/
14:34:45  91  
14:34:45  92  PROCEDURE CREATE_ACCOUNT_HISTORY(
14:34:45  93  	in_account_id		     IN NUMBER,
14:34:45  94  	in_system_activity_reason_id IN NUMBER
14:34:45  95  ) AS
14:34:45  96  SPROC_NAME CONSTANT VARCHAR2(22) := 'CREATE_ACCOUNT_HISTORY';
14:34:45  97  -- VARIABLES
14:34:45  98  var_account_status_id  NUMBER;
14:34:45  99  var_suspend_date	     DATE;
14:34:45 100  var_group_id	     NUMBER;
14:34:45 101  var_instrument_type_id NUMBER;
14:34:45 102  var_instrument_id      NUMBER;
14:34:45 103  var_updated_by	     VARCHAR2(255);
14:34:45 104  var_update_date	     DATE;
14:34:45 105  -- EXCEPTIONS
14:34:45 106  BAD_ACCOUNT_ID	     EXCEPTION;
14:34:45 107  CAN_NOT_CREATE_HISTORY EXCEPTION;
14:34:45 108  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45 109  BEGIN
14:34:45 110  
14:34:45 111  	BEGIN
14:34:45 112  	  SELECT
14:34:45 113  	    ACCOUNT.ACCOUNT_STATUS_ID,
14:34:45 114  	    ACCOUNT.GROUP_ID,
14:34:45 115  	    ACCOUNT.INSTRUMENT_TYPE_ID,
14:34:45 116  	    ACCOUNT.INSTRUMENT_ID,
14:34:45 117  	    ACCOUNT.UPDATED_BY,
14:34:45 118  	    ACCOUNT.UPDATE_DATE
14:34:45 119  	    into
14:34:45 120  	    var_account_status_id,
14:34:45 121  	    var_group_id,
14:34:45 122  	    var_instrument_type_id,
14:34:45 123  	    var_instrument_id,
14:34:45 124  	    var_updated_by,
14:34:45 125  	    var_update_date
14:34:45 126  	  FROM
14:34:45 127  	    ACCOUNT
14:34:45 128  	  WHERE
14:34:45 129  	    ACCOUNT.ID = in_account_id;
14:34:45 130  	  EXCEPTION
14:34:45 131  	    WHEN NO_DATA_FOUND THEN
14:34:45 132  	      RAISE BAD_ACCOUNT_ID;
14:34:45 133  	END;
14:34:45 134  
14:34:45 135  	BEGIN
14:34:45 136  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_ACCOUNT_HISTORY(
14:34:45 137  	    in_account_id,
14:34:45 138  	    var_suspend_date,
14:34:45 139  	    var_group_id,
14:34:45 140  	    var_updated_by,
14:34:45 141  	    var_update_date,
14:34:45 142  	    in_system_activity_reason_id,
14:34:45 143  	    var_account_status_id,
14:34:45 144  	    var_instrument_type_id,
14:34:45 145  	    var_instrument_id
14:34:45 146  	  );
14:34:45 147  	  EXCEPTION
14:34:45 148  	    WHEN OTHERS THEN
14:34:45 149  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:45 150  	      RAISE CAN_NOT_CREATE_HISTORY;
14:34:45 151  	END;
14:34:45 152  
14:34:45 153  EXCEPTION
14:34:45 154  WHEN BAD_ACCOUNT_ID THEN
14:34:45 155  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 156  	  SPROC_NAME, 'Bad account id');
14:34:45 157  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:45 158  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45 159  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:45 160  WHEN OTHERS THEN
14:34:45 161  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 162  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 163  END CREATE_ACCOUNT_HISTORY;
14:34:45 164  
14:34:45 165  /********************************************************************/
14:34:45 166  
14:34:45 167  PROCEDURE CREATE_SUBSCRIPTION_HISTORY (
14:34:45 168  /*
14:34:45 169  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:45 170  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 171  */
14:34:45 172  	in_subscription_id	     IN NUMBER,
14:34:45 173  	in_system_activity_reason_id IN NUMBER
14:34:45 174  ) AS
14:34:45 175  SPROC_NAME CONSTANT VARCHAR2(27) := 'CREATE_SUBSCRIPTION_HISTORY';
14:34:45 176  -- VARIABLES
14:34:45 177  var_account_id		    NUMBER;
14:34:45 178  var_purchase_date 	    DATE;
14:34:45 179  var_offer_chain_id	    NUMBER;
14:34:45 180  var_suspend_date		    DATE;
14:34:45 181  var_termination_date	    DATE;
14:34:45 182  var_days_ramaining_adjustment NUMBER;
14:34:45 183  var_sct_id		    NUMBER;
14:34:45 184  var_updated_by		    VARCHAR2(255);
14:34:45 185  var_update_date		    DATE;
14:34:45 186  -- EXCEPTIONS
14:34:45 187  BAD_SUBSCRIPTION_ID    EXCEPTION;
14:34:45 188  CAN_NOT_CREATE_HISTORY EXCEPTION;
14:34:45 189  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45 190  BEGIN
14:34:45 191  
14:34:45 192  	BEGIN
14:34:45 193  	  SELECT
14:34:45 194  	    SUBSCRIPTION.account_id,
14:34:45 195  	    SUBSCRIPTION.PURCHASE_DATE,
14:34:45 196  	    SUBSCRIPTION.OFFER_CHAIN_ID,
14:34:45 197  	    SUBSCRIPTION.SUSPEND_DATE,
14:34:45 198  	    SUBSCRIPTION.TERMINATION_DATE,
14:34:45 199  	    SUBSCRIPTION.DAYS_REMAINING_ADJUSTMENT,
14:34:45 200  	    SUBSCRIPTION.SCT_ID,
14:34:45 201  	    SUBSCRIPTION.UPDATED_BY,
14:34:45 202  	    SUBSCRIPTION.UPDATE_DATE
14:34:45 203  	    into
14:34:45 204  	    var_account_id,
14:34:45 205  	    var_purchase_date,
14:34:45 206  	    var_offer_chain_id,
14:34:45 207  	    var_suspend_date,
14:34:45 208  	    var_termination_date,
14:34:45 209  	    var_days_ramaining_adjustment,
14:34:45 210  	    var_sct_id,
14:34:45 211  	    var_updated_by,
14:34:45 212  	    var_update_date
14:34:45 213  	  FROM
14:34:45 214  	    SUBSCRIPTION
14:34:45 215  	  WHERE
14:34:45 216  	    SUBSCRIPTION.ID = in_subscription_id;
14:34:45 217  	  EXCEPTION
14:34:45 218  	    WHEN NO_DATA_FOUND THEN
14:34:45 219  	      RAISE BAD_SUBSCRIPTION_ID;
14:34:45 220  	END;
14:34:45 221  
14:34:45 222  	BEGIN
14:34:45 223  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_SUBSCRIPTION_HISTORY(
14:34:45 224  	    in_subscription_id,
14:34:45 225  	    var_account_id,
14:34:45 226  	    var_purchase_date,
14:34:45 227  	    var_offer_chain_id,
14:34:45 228  	    var_suspend_date,
14:34:45 229  	    var_termination_date,
14:34:45 230  	    var_days_ramaining_adjustment,
14:34:45 231  	    var_sct_id,
14:34:45 232  	    var_updated_by,
14:34:45 233  	    var_update_date,
14:34:45 234  	    in_system_activity_reason_id
14:34:45 235  	  );
14:34:45 236  	  EXCEPTION
14:34:45 237  	    WHEN OTHERS THEN
14:34:45 238  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:45 239  	      RAISE CAN_NOT_CREATE_HISTORY;
14:34:45 240  	END;
14:34:45 241  
14:34:45 242  EXCEPTION
14:34:45 243  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:45 244  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 245  	  SPROC_NAME, 'No such subscription');
14:34:45 246  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:45 247  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45 248  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:45 249  WHEN OTHERS THEN
14:34:45 250  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 251  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 252  END CREATE_SUBSCRIPTION_HISTORY;
14:34:45 253  
14:34:45 254  /********************************************************************/
14:34:45 255  
14:34:45 256  PROCEDURE CREATE_CREDIT_CARD_HISTORY(
14:34:45 257  	in_credit_card_id	      IN NUMBER,
14:34:45 258  	in_system_activity_reason_id  IN NUMBER
14:34:45 259  ) AS
14:34:45 260  SPROC_NAME CONSTANT VARCHAR2(26) := 'CREATE_CREDIT_CARD_HISTORY';
14:34:45 261  -- VARIABLES
14:34:45 262  var_account_id		     NUMBER;
14:34:45 263  var_instrument_name	     VARCHAR2(255);
14:34:45 264  var_private_card_holder_name   VARCHAR2(256);
14:34:45 265  var_private_street_address     VARCHAR2(256);
14:34:45 266  var_private_street_address2    VARCHAR2(256);
14:34:45 267  var_state 		     VARCHAR2(50);
14:34:45 268  var_city			     VARCHAR2(50);
14:34:45 269  var_postal_code		     VARCHAR2(20);
14:34:45 270  var_country		     CHAR(2);
14:34:45 271  var_last_four_cc		     VARCHAR2(4);
14:34:45 272  var_expiration_date	     DATE;
14:34:45 273  var_credit_card_type_id	     NUMBER;
14:34:45 274  var_secret_token		     VARCHAR2(255);
14:34:45 275  var_chase_profile_id	     VARCHAR2(255);
14:34:45 276  var_credit_card_status_id      NUMBER;
14:34:45 277  var_updated_by		     VARCHAR2(255);
14:34:45 278  var_update_date		     DATE;
14:34:45 279  -- EXCEPTIONS
14:34:45 280  BAD_CREDIT_CARD_ID     EXCEPTION;
14:34:45 281  CAN_NOT_CREATE_HISTORY EXCEPTION;
14:34:45 282  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45 283  BEGIN
14:34:45 284  
14:34:45 285  	BEGIN
14:34:45 286  	  SELECT
14:34:45 287  	    ACCOUNT_ID,
14:34:45 288  	    INSTRUMENT_NAME,
14:34:45 289  	    PRIVATE_CARD_HOLDER_NAME,
14:34:45 290  	    PRIVATE_STREET_ADDRESS,
14:34:45 291  	    PRIVATE_STREET_ADDRESS2,
14:34:45 292  	    STATE,
14:34:45 293  	    CITY,
14:34:45 294  	    POSTAL_CODE,
14:34:45 295  	    COUNTRY,
14:34:45 296  	    LAST_FOUR_CC,
14:34:45 297  	    EXPIRATION_DATE,
14:34:45 298  	    CREDIT_CARD_TYPE_ID,
14:34:45 299  	    SECRET_TOKEN,
14:34:45 300  	    CHASE_PROFILE_ID,
14:34:45 301  	    CREDIT_CARD_STATUS_ID,
14:34:45 302  	    UPDATED_BY,
14:34:45 303  	    UPDATE_DATE
14:34:45 304  	    into
14:34:45 305  	    var_account_id,
14:34:45 306  	    var_instrument_name,
14:34:45 307  	    var_private_card_holder_name,
14:34:45 308  	    var_private_street_address,
14:34:45 309  	    var_private_street_address2,
14:34:45 310  	    var_state,
14:34:45 311  	    var_city,
14:34:45 312  	    var_postal_code,
14:34:45 313  	    var_country,
14:34:45 314  	    var_last_four_cc,
14:34:45 315  	    var_expiration_date,
14:34:45 316  	    var_credit_card_type_id,
14:34:45 317  	    var_secret_token,
14:34:45 318  	    var_chase_profile_id,
14:34:45 319  	    var_credit_card_status_id,
14:34:45 320  	    var_updated_by,
14:34:45 321  	    var_update_date
14:34:45 322  	  FROM
14:34:45 323  	    CREDIT_CARD
14:34:45 324  	  WHERE
14:34:45 325  	    CREDIT_CARD.ID = in_credit_card_id;
14:34:45 326  	  EXCEPTION
14:34:45 327  	    WHEN NO_DATA_FOUND THEN
14:34:45 328  	      RAISE BAD_CREDIT_CARD_ID;
14:34:45 329  	END;
14:34:45 330  
14:34:45 331  	BEGIN
14:34:45 332  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_CREDIT_CARD_HISTORY(
14:34:45 333  	    in_credit_card_id,
14:34:45 334  	    var_account_id,
14:34:45 335  	    var_instrument_name,
14:34:45 336  	    var_private_card_holder_name,
14:34:45 337  	    var_private_street_address,
14:34:45 338  	    var_private_street_address2,
14:34:45 339  	    var_state,
14:34:45 340  	    var_city,
14:34:45 341  	    var_postal_code,
14:34:45 342  	    var_country,
14:34:45 343  	    var_last_four_cc,
14:34:45 344  	    var_expiration_date,
14:34:45 345  	    var_credit_card_type_id,
14:34:45 346  	    var_secret_token,
14:34:45 347  	    var_chase_profile_id,
14:34:45 348  	    var_credit_card_status_id,
14:34:45 349  	    var_updated_by,
14:34:45 350  	    var_update_date,
14:34:45 351  	    in_system_activity_reason_id
14:34:45 352  	  );
14:34:45 353  	  EXCEPTION
14:34:45 354  	    WHEN OTHERS THEN
14:34:45 355  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:45 356  	      RAISE CAN_NOT_CREATE_HISTORY;
14:34:45 357  	END;
14:34:45 358  
14:34:45 359  EXCEPTION
14:34:45 360  WHEN BAD_CREDIT_CARD_ID THEN
14:34:45 361  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 362  	  SPROC_NAME, 'No such credit card');
14:34:45 363  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:45 364  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45 365  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:45 366  WHEN OTHERS THEN
14:34:45 367  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 368  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 369  END CREATE_CREDIT_CARD_HISTORY;
14:34:45 370  
14:34:45 371  /********************************************************************/
14:34:45 372  
14:34:45 373  PROCEDURE CREATE_PAYPAL_HISTORY(
14:34:45 374  /*
14:34:45 375  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:45 376  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 377  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:45 378  */
14:34:45 379  	in_paypal_id		      IN NUMBER,
14:34:45 380  	in_system_activity_reason_id  IN NUMBER
14:34:45 381  ) AS
14:34:45 382  SPROC_NAME CONSTANT VARCHAR(21) := 'CREATE_PAYPAL_HISTORY';
14:34:45 383  -- VARIABLES
14:34:45 384  var_account_id		   PAYPAL.ACCOUNT_ID%TYPE;
14:34:45 385  var_instrument_name	   PAYPAL.INSTRUMENT_NAME%TYPE DEFAULT NULL;
14:34:45 386  var_private_email_address    PAYPAL.PRIVATE_EMAIL_ADDRESS%TYPE DEFAULT NULL;
14:34:45 387  var_created_by		   PAYPAL.CREATED_BY%TYPE;
14:34:45 388  var_paypal_status_id	   PAYPAL.PAYPAL_STATUS_ID%TYPE;
14:34:45 389  var_paypal_prvt_street_addr  PAYPAL.PRIVATE_STREET_ADDRESS%TYPE;
14:34:45 390  var_paypal_prvt_street_addr2 PAYPAL.PRIVATE_STREET_ADDRESS2%TYPE;
14:34:45 391  var_state 		   PAYPAL.STATE%TYPE;
14:34:45 392  var_city			   PAYPAL.CITY%TYPE;
14:34:45 393  var_postal_code		   PAYPAL.POSTAL_CODE%TYPE;
14:34:45 394  var_country		   PAYPAL.COUNTRY%TYPE;
14:34:45 395  var_expiration_date	   PAYPAL.EXPIRATION_DATE%TYPE;
14:34:45 396  var_update_date		   PAYPAL.UPDATE_DATE%TYPE;
14:34:45 397  var_updated_by		   PAYPAL.UPDATED_BY%TYPE;
14:34:45 398  var_secret_token		   PAYPAL.SECRET_TOKEN%TYPE;
14:34:45 399  -- EXCEPTION
14:34:45 400  BAD_PAYPAL_ID	  EXCEPTION;
14:34:45 401  CAN_NOT_ADD_HISTORY EXCEPTION;
14:34:45 402  EXCEPTION_MESSAGE   VARCHAR2(1024);
14:34:45 403  BEGIN
14:34:45 404  
14:34:45 405  	BEGIN
14:34:45 406  	  SELECT
14:34:45 407  	    ACCOUNT_ID,
14:34:45 408  	    INSTRUMENT_NAME,
14:34:45 409  	    PRIVATE_EMAIL_ADDRESS,
14:34:45 410  	    UPDATE_DATE,
14:34:45 411  	    UPDATED_BY,
14:34:45 412  	    PAYPAL_STATUS_ID,
14:34:45 413  	    PRIVATE_STREET_ADDRESS,
14:34:45 414  	    PRIVATE_STREET_ADDRESS2,
14:34:45 415  	    STATE,
14:34:45 416  	    CITY,
14:34:45 417  	    POSTAL_CODE,
14:34:45 418  	    COUNTRY,
14:34:45 419  	    EXPIRATION_DATE,
14:34:45 420  	    SECRET_TOKEN
14:34:45 421  	  INTO
14:34:45 422  	    var_account_id,
14:34:45 423  	    var_instrument_name,
14:34:45 424  	    var_private_email_address,
14:34:45 425  	    var_update_date,
14:34:45 426  	    var_updated_by,
14:34:45 427  	    var_paypal_status_id,
14:34:45 428  	    var_paypal_prvt_street_addr,
14:34:45 429  	    var_paypal_prvt_street_addr2,
14:34:45 430  	    var_state,
14:34:45 431  	    var_city,
14:34:45 432  	    var_postal_code,
14:34:45 433  	    var_country,
14:34:45 434  	    var_expiration_date,
14:34:45 435  	    var_secret_token
14:34:45 436  	  FROM
14:34:45 437  	    PAYPAL
14:34:45 438  	  WHERE
14:34:45 439  	    ID = in_paypal_id;
14:34:45 440  	  EXCEPTION
14:34:45 441  	    WHEN NO_DATA_FOUND THEN
14:34:45 442  	      RAISE BAD_PAYPAL_ID;
14:34:45 443  	END;
14:34:45 444  
14:34:45 445  	BEGIN
14:34:45 446  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_PAYPAL_HISTORY(
14:34:45 447  	    in_paypal_id,
14:34:45 448  	    var_account_id,
14:34:45 449  	    var_instrument_name,
14:34:45 450  	    var_private_email_address,
14:34:45 451  	    var_updated_by,
14:34:45 452  	    var_update_date,
14:34:45 453  	    var_paypal_status_id,
14:34:45 454  	    var_paypal_prvt_street_addr,
14:34:45 455  	    var_paypal_prvt_street_addr2,
14:34:45 456  	    var_state,
14:34:45 457  	    var_city,
14:34:45 458  	    var_postal_code,
14:34:45 459  	    var_country,
14:34:45 460  	    var_expiration_date,
14:34:45 461  	    in_system_activity_reason_id,
14:34:45 462  	    var_secret_token
14:34:45 463  	  );
14:34:45 464  	  EXCEPTION
14:34:45 465  	    WHEN OTHERS THEN
14:34:45 466  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:45 467  	      RAISE CAN_NOT_ADD_HISTORY;
14:34:45 468  	END;
14:34:45 469  
14:34:45 470  EXCEPTION
14:34:45 471  WHEN BAD_PAYPAL_ID THEN
14:34:45 472  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 473  	  SPROC_NAME, 'No such paypal');
14:34:45 474  WHEN CAN_NOT_ADD_HISTORY THEN
14:34:45 475  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45 476  	  SPROC_NAME, 'Could not add history', EXCEPTION_MESSAGE);
14:34:45 477  WHEN OTHERS THEN
14:34:45 478  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 479  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 480  END CREATE_PAYPAL_HISTORY;
14:34:45 481  
14:34:45 482  /********************************************************************/
14:34:45 483  
14:34:45 484  PROCEDURE CREATE_GIFT_CERT_HISTORY(
14:34:45 485  	in_gift_certificate_id	      IN NUMBER,
14:34:45 486  	in_system_activity_reason_id  IN NUMBER
14:34:45 487  ) AS
14:34:45 488  SPROC_NAME CONSTANT VARCHAR2(24) := 'CREATE_GIFT_CERT_HISTORY';
14:34:45 489  -- VARIABLES
14:34:45 490  var_purchaser_group_id	     NUMBER;
14:34:45 491  var_purchase_invoice_id	     NUMBER;
14:34:45 492  var_offer_chain_id	     NUMBER;
14:34:45 493  var_expiration_date	     DATE;
14:34:45 494  var_purchase_date 	     DATE;
14:34:45 495  var_gift_certificate_status_id NUMBER;
14:34:45 496  var_code			     VARCHAR2(255);
14:34:45 497  var_recipient_name	     VARCHAR2(255);
14:34:45 498  var_gift_message		     VARCHAR2(500);
14:34:45 499  var_recipient_email	     VARCHAR2(255);
14:34:45 500  var_finalized_invoice_id	     NUMBER;
14:34:45 501  var_sender_email		     VARCHAR2(50);
14:34:45 502  var_sender_name		     VARCHAR2(50);
14:34:45 503  var_redemption_date	     DATE;
14:34:45 504  var_redeemer_group_id	     NUMBER;
14:34:45 505  var_cancelation_date	     DATE;
14:34:45 506  var_updated_by		     VARCHAR2(255);
14:34:45 507  var_update_date		     DATE;
14:34:45 508  var_recipient_address_id	     NUMBER;
14:34:45 509  var_redeemer_address_id	     NUMBER;
14:34:45 510  var_recipient_notify_date      DATE;
14:34:45 511  -- EXCEPTIONS
14:34:45 512  BAD_GIFT_CERTIFICATE_ID EXCEPTION;
14:34:45 513  CAN_NOT_CREATE_HISTORY  EXCEPTION;
14:34:45 514  EXCEPTION_MESSAGE       VARCHAR2(1024);
14:34:45 515  BEGIN
14:34:45 516  
14:34:45 517  	BEGIN
14:34:45 518  	  SELECT
14:34:45 519  	    GIFT_CERTIFICATE.PURCHASER_GROUP_ID,
14:34:45 520  	    GIFT_CERTIFICATE.PURCHASE_INVOICE_ID,
14:34:45 521  	    GIFT_CERTIFICATE.OFFER_CHAIN_ID,
14:34:45 522  	    GIFT_CERTIFICATE.EXPIRATION_DATE,
14:34:45 523  	    GIFT_CERTIFICATE.PURCHASE_DATE,
14:34:45 524  	    GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID,
14:34:45 525  	    GIFT_CERTIFICATE.CODE,
14:34:45 526  	    GIFT_CERTIFICATE.RECIPIENT_NAME,
14:34:45 527  	    GIFT_CERTIFICATE.GIFT_MESSAGE,
14:34:45 528  	    GIFT_CERTIFICATE.RECIPIENT_EMAIL,
14:34:45 529  	    GIFT_CERTIFICATE.FINALIZED_INVOICE_ID,
14:34:45 530  	    GIFT_CERTIFICATE.SENDER_EMAIL,
14:34:45 531  	    GIFT_CERTIFICATE.SENDER_NAME,
14:34:45 532  	    GIFT_CERTIFICATE.REDEMPTION_DATE,
14:34:45 533  	    GIFT_CERTIFICATE.REDEEMER_GROUP_ID,
14:34:45 534  	    GIFT_CERTIFICATE.CANCELATION_DATE,
14:34:45 535  	    GIFT_CERTIFICATE.UPDATED_BY,
14:34:45 536  	    GIFT_CERTIFICATE.UPDATE_DATE,
14:34:45 537  	    GIFT_CERTIFICATE.RECIPIENT_ADDRESS_ID,
14:34:45 538  	    GIFT_CERTIFICATE.REDEEMER_ADDRESS_ID,
14:34:45 539  	    GIFT_CERTIFICATE.RECIPIENT_NOTIFY_DATE
14:34:45 540  	    into
14:34:45 541  	    var_purchaser_group_id,
14:34:45 542  	    var_purchase_invoice_id,
14:34:45 543  	    var_offer_chain_id,
14:34:45 544  	    var_expiration_date,
14:34:45 545  	    var_purchase_date,
14:34:45 546  	    var_gift_certificate_status_id,
14:34:45 547  	    var_code,
14:34:45 548  	    var_recipient_name,
14:34:45 549  	    var_gift_message,
14:34:45 550  	    var_recipient_email,
14:34:45 551  	    var_finalized_invoice_id,
14:34:45 552  	    var_sender_email,
14:34:45 553  	    var_sender_name,
14:34:45 554  	    var_redemption_date,
14:34:45 555  	    var_redeemer_group_id,
14:34:45 556  	    var_cancelation_date,
14:34:45 557  	    var_updated_by,
14:34:45 558  	    var_update_date,
14:34:45 559  	    var_recipient_address_id,
14:34:45 560  	    var_redeemer_address_id,
14:34:45 561  	    var_recipient_notify_date
14:34:45 562  	  FROM
14:34:45 563  	    GIFT_CERTIFICATE
14:34:45 564  	  WHERE
14:34:45 565  	    GIFT_CERTIFICATE.ID = in_gift_certificate_id;
14:34:45 566  	END;
14:34:45 567  
14:34:45 568  	BEGIN
14:34:45 569  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_GIFT_CERT_HISTORY(
14:34:45 570  	    in_gift_certificate_id,
14:34:45 571  	    var_purchaser_group_id,
14:34:45 572  	    var_purchase_invoice_id,
14:34:45 573  	    var_offer_chain_id,
14:34:45 574  	    var_expiration_date,
14:34:45 575  	    var_purchase_date,
14:34:45 576  	    var_gift_certificate_status_id,
14:34:45 577  	    var_code,
14:34:45 578  	    var_updated_by,
14:34:45 579  	    var_update_date,
14:34:45 580  	    in_system_activity_reason_id,
14:34:45 581  	    var_recipient_name,
14:34:45 582  	    var_gift_message,
14:34:45 583  	    var_recipient_email,
14:34:45 584  	    var_finalized_invoice_id,
14:34:45 585  	    var_sender_email,
14:34:45 586  	    var_sender_name,
14:34:45 587  	    var_redemption_date,
14:34:45 588  	    var_redeemer_group_id,
14:34:45 589  	    var_cancelation_date,
14:34:45 590  	    var_recipient_address_id,
14:34:45 591  	    var_redeemer_address_id,
14:34:45 592  	    var_recipient_notify_date
14:34:45 593  	  );
14:34:45 594  	  EXCEPTION
14:34:45 595  	    WHEN OTHERS THEN
14:34:45 596  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:45 597  	      RAISE CAN_NOT_CREATE_HISTORY;
14:34:45 598  	END;
14:34:45 599  
14:34:45 600  EXCEPTION
14:34:45 601  WHEN BAD_GIFT_CERTIFICATE_ID THEN
14:34:45 602  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 603  	  SPROC_NAME, 'No such gift certificate');
14:34:45 604  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:45 605  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45 606  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:45 607  WHEN OTHERS THEN
14:34:45 608  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 609  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 610  END CREATE_GIFT_CERT_HISTORY;
14:34:45 611  
14:34:45 612  /********************************************************************/
14:34:45 613  
14:34:45 614  PROCEDURE CREATE_TRANSACTION_HISTORY (
14:34:45 615  	in_transaction_id	     IN NUMBER,
14:34:45 616  	in_system_activity_reason_id IN NUMBER
14:34:45 617  ) AS
14:34:45 618  SPROC_NAME CONSTANT VARCHAR2(26) := 'CREATE_TRANSACTION_HISTORY';
14:34:45 619  -- VARIABLES
14:34:45 620  var_transaction_status_id  TRANSACTION.TRANSACTION_STATUS_ID%TYPE;
14:34:45 621  var_transaction_amount	 TRANSACTION.TRANSACTION_AMOUNT%TYPE;
14:34:45 622  var_updated_by		 TRANSACTION.UPDATED_BY%TYPE;
14:34:45 623  var_update_date		 TRANSACTION.UPDATE_DATE%TYPE;
14:34:45 624  var_order_id		 TRANSACTION.ORDER_ID%TYPE;
14:34:45 625  var_charge_id		 TRANSACTION.CHARGE_ID%TYPE;
14:34:45 626  var_is_refund		 TRANSACTION.IS_REFUND%TYPE;
14:34:45 627  var_is_settled		 TRANSACTION.IS_SETTLED%TYPE;
14:34:45 628  var_transaction_type_code  TRANSACTION.TRANSACTION_TYPE_CODE%TYPE;
14:34:45 629  -- EXCEPTIONS
14:34:45 630  BAD_TRANSACTION_ID     EXCEPTION;
14:34:45 631  CAN_NOT_CREATE_HISTORY EXCEPTION;
14:34:45 632  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45 633  BEGIN
14:34:45 634  
14:34:45 635  	BEGIN
14:34:45 636  	  SELECT
14:34:45 637  	    TRANSACTION.TRANSACTION_STATUS_ID,
14:34:45 638  	    TRANSACTION.TRANSACTION_AMOUNT,
14:34:45 639  	    TRANSACTION.UPDATED_BY,
14:34:45 640  	    TRANSACTION.UPDATE_DATE,
14:34:45 641  	    TRANSACTION.ORDER_ID,
14:34:45 642  	    TRANSACTION.CHARGE_ID,
14:34:45 643  	    TRANSACTION.IS_REFUND,
14:34:45 644  	    TRANSACTION.IS_SETTLED,
14:34:45 645  	    TRANSACTION.TRANSACTION_TYPE_CODE
14:34:45 646  	    into
14:34:45 647  	    var_transaction_status_id,
14:34:45 648  	    var_transaction_amount,
14:34:45 649  	    var_updated_by,
14:34:45 650  	    var_update_date,
14:34:45 651  	    var_order_id,
14:34:45 652  	    var_charge_id,
14:34:45 653  	    var_is_refund,
14:34:45 654  	    var_is_settled,
14:34:45 655  	    var_transaction_type_code
14:34:45 656  	  FROM
14:34:45 657  	    TRANSACTION
14:34:45 658  	  WHERE
14:34:45 659  	    TRANSACTION.ID = in_transaction_id;
14:34:45 660  	  EXCEPTION
14:34:45 661  	    WHEN NO_DATA_FOUND THEN
14:34:45 662  	      RAISE BAD_TRANSACTION_ID;
14:34:45 663  	END;
14:34:45 664  
14:34:45 665  	BEGIN
14:34:45 666  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_TRANSACTION_HISTORY(
14:34:45 667  	    in_transaction_id,
14:34:45 668  	    var_transaction_status_id,
14:34:45 669  	    var_transaction_amount,
14:34:45 670  	    var_updated_by,
14:34:45 671  	    var_update_date,
14:34:45 672  	    var_order_id,
14:34:45 673  	    var_charge_id,
14:34:45 674  	    var_is_refund,
14:34:45 675  	    var_is_settled,
14:34:45 676  	    var_transaction_type_code,
14:34:45 677  	    in_system_activity_reason_id
14:34:45 678  	  );
14:34:45 679  	  EXCEPTION
14:34:45 680  	    WHEN OTHERS THEN
14:34:45 681  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:45 682  	      RAISE CAN_NOT_CREATE_HISTORY;
14:34:45 683  	END;
14:34:45 684  
14:34:45 685  EXCEPTION
14:34:45 686  WHEN BAD_TRANSACTION_ID THEN
14:34:45 687  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 688  	  SPROC_NAME, 'No such transaction');
14:34:45 689  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:45 690  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45 691  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:45 692  WHEN OTHERS THEN
14:34:45 693  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 694  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 695  END CREATE_TRANSACTION_HISTORY;
14:34:45 696  
14:34:45 697  /********************************************************************/
14:34:45 698  
14:34:45 699  PROCEDURE CREATE_INVOICE_HISTORY (
14:34:45 700  /*
14:34:45 701  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:45 702  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 703  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:45 704  */
14:34:45 705  	in_invoice_id		     IN NUMBER,
14:34:45 706  	in_system_activity_reason_id IN NUMBER
14:34:45 707  ) AS
14:34:45 708  SPROC_NAME CONSTANT VARCHAR2(22) := 'CREATE_INVOICE_HISTORY';
14:34:45 709  -- VARIABLES
14:34:45 710  var_invoice_status_id NUMBER;
14:34:45 711  var_updated_by	    VARCHAR2(255);
14:34:45 712  var_update_date	    DATE;
14:34:45 713  -- EXCEPTIONS
14:34:45 714  BAD_INVOICE_ID	     EXCEPTION;
14:34:45 715  CAN_NOT_CREATE_HISTORY EXCEPTION;
14:34:45 716  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45 717  BEGIN
14:34:45 718  
14:34:45 719  	BEGIN
14:34:45 720  	  SELECT
14:34:45 721  	    INVOICE.INVOICE_STATUS_ID,
14:34:45 722  	    INVOICE.UPDATED_BY,
14:34:45 723  	    INVOICE.UPDATE_DATE
14:34:45 724  	    into
14:34:45 725  	    var_invoice_status_id,
14:34:45 726  	    var_updated_by,
14:34:45 727  	    var_update_date
14:34:45 728  	  FROM
14:34:45 729  	    INVOICE
14:34:45 730  	  WHERE
14:34:45 731  	    INVOICE.ID = in_invoice_id;
14:34:45 732  	  EXCEPTION
14:34:45 733  	    WHEN NO_DATA_FOUND THEN
14:34:45 734  	      RAISE BAD_INVOICE_ID;
14:34:45 735  	END;
14:34:45 736  
14:34:45 737  	BEGIN
14:34:45 738  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_INVOICE_HISTORY(
14:34:45 739  	    in_invoice_id,
14:34:45 740  	    var_invoice_status_id,
14:34:45 741  	    var_updated_by,
14:34:45 742  	    var_update_date,
14:34:45 743  	    in_system_activity_reason_id
14:34:45 744  	  );
14:34:45 745  	  EXCEPTION
14:34:45 746  	    WHEN OTHERS THEN
14:34:45 747  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:45 748  	      RAISE CAN_NOT_CREATE_HISTORY;
14:34:45 749  	END;
14:34:45 750  
14:34:45 751  EXCEPTION
14:34:45 752  WHEN BAD_INVOICE_ID THEN
14:34:45 753  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 754  	  SPROC_NAME, 'No such invoice');
14:34:45 755  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:45 756  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45 757  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:45 758  WHEN OTHERS THEN
14:34:45 759  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 760  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 761  END CREATE_INVOICE_HISTORY;
14:34:45 762  
14:34:45 763  /********************************************************************/
14:34:45 764  
14:34:45 765  PROCEDURE CREATE_LICENSE_HISTORY (
14:34:45 766  /*
14:34:45 767  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:45 768  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 769  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:45 770  */
14:34:45 771  	in_license_id		     IN NUMBER,
14:34:45 772  	in_system_activity_reason_id IN NUMBER
14:34:45 773  ) AS
14:34:45 774  SPROC_NAME CONSTANT VARCHAR2(22) := 'CREATE_LICENSE_HISTORY';
14:34:45 775  -- VARIABLES
14:34:45 776  var_license_status_id	    NUMBER;
14:34:45 777  var_needs_entitlements	    NUMBER;
14:34:45 778  var_start_date		    DATE;
14:34:45 779  var_offer_id		    NUMBER;
14:34:45 780  var_subscription_id	    NUMBER;
14:34:45 781  var_invoice_id		    NUMBER;
14:34:45 782  var_end_date		    DATE;
14:34:45 783  var_is_extension		    NUMBER;
14:34:45 784  var_current_offer_index	    NUMBER;
14:34:45 785  var_current_offer_recurr_num  NUMBER;
14:34:45 786  var_updated_by		    VARCHAR2(255);
14:34:45 787  var_update_date		    DATE;
14:34:45 788  var_entitlement_end_date	    DATE;
14:34:45 789  var_grace_start_date	    DATE;
14:34:45 790  var_grace_end_date	    DATE;
14:34:45 791  -- EXCEPTIONS
14:34:45 792  BAD_LICENSE_ID	     EXCEPTION;
14:34:45 793  CAN_NOT_CREATE_HISTORY EXCEPTION;
14:34:45 794  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45 795  BEGIN
14:34:45 796  
14:34:45 797  	BEGIN
14:34:45 798  	  SELECT
14:34:45 799  	    LICENSE.LICENSE_STATUS_ID,
14:34:45 800  	    LICENSE.NEEDS_ENTITLEMENTS,
14:34:45 801  	    LICENSE.START_DATE,
14:34:45 802  	    LICENSE.OFFER_ID,
14:34:45 803  	    LICENSE.SUBSCRIPTION_ID,
14:34:45 804  	    LICENSE.INVOICE_ID,
14:34:45 805  	    LICENSE.END_DATE,
14:34:45 806  	    LICENSE.IS_EXTENSION,
14:34:45 807  	    LICENSE.CURRENT_OFFER_INDEX,
14:34:45 808  	    LICENSE.CURRENT_OFFER_RECURR_NUM,
14:34:45 809  	    LICENSE.UPDATED_BY,
14:34:45 810  	    LICENSE.UPDATE_DATE,
14:34:45 811  	    LICENSE.ENTITLEMENT_END_DATE,
14:34:45 812  	    LICENSE.GRACE_START_DATE,
14:34:45 813  	    LICENSE.GRACE_END_DATE
14:34:45 814  	    into
14:34:45 815  	    var_license_status_id,
14:34:45 816  	    var_needs_entitlements,
14:34:45 817  	    var_start_date,
14:34:45 818  	    var_offer_id,
14:34:45 819  	    var_subscription_id,
14:34:45 820  	    var_invoice_id,
14:34:45 821  	    var_end_date,
14:34:45 822  	    var_is_extension,
14:34:45 823  	    var_current_offer_index,
14:34:45 824  	    var_current_offer_recurr_num,
14:34:45 825  	    var_updated_by,
14:34:45 826  	    var_update_date,
14:34:45 827  	    var_entitlement_end_date,
14:34:45 828  	    var_grace_start_date,
14:34:45 829  	    var_grace_end_date
14:34:45 830  	  FROM
14:34:45 831  	    LICENSE
14:34:45 832  	  WHERE
14:34:45 833  	    LICENSE.ID = in_license_id;
14:34:45 834  	  EXCEPTION
14:34:45 835  	    WHEN NO_DATA_FOUND THEN
14:34:45 836  	      RAISE BAD_LICENSE_ID;
14:34:45 837  	END;
14:34:45 838  
14:34:45 839  	BEGIN
14:34:45 840  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_LICENSE_HISTORY(
14:34:45 841  	    in_license_id,
14:34:45 842  	    var_license_status_id,
14:34:45 843  	    var_needs_entitlements,
14:34:45 844  	    var_start_date,
14:34:45 845  	    var_offer_id,
14:34:45 846  	    var_subscription_id,
14:34:45 847  	    var_invoice_id,
14:34:45 848  	    var_end_date,
14:34:45 849  	    var_updated_by,
14:34:45 850  	    var_update_date,
14:34:45 851  	    var_is_extension,
14:34:45 852  	    var_current_offer_index,
14:34:45 853  	    var_current_offer_recurr_num,
14:34:45 854  	    in_system_activity_reason_id,
14:34:45 855  	    var_entitlement_end_date,
14:34:45 856  	    var_grace_start_date,
14:34:45 857  	    var_grace_end_date
14:34:45 858  	  );
14:34:45 859  	  EXCEPTION
14:34:45 860  	    WHEN OTHERS THEN
14:34:45 861  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:45 862  	      RAISE CAN_NOT_CREATE_HISTORY;
14:34:45 863  	END;
14:34:45 864  
14:34:45 865  EXCEPTION
14:34:45 866  WHEN BAD_LICENSE_ID THEN
14:34:45 867  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 868  	  SPROC_NAME, 'No such license');
14:34:45 869  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:45 870  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45 871  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:45 872  WHEN OTHERS THEN
14:34:45 873  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 874  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 875  END CREATE_LICENSE_HISTORY;
14:34:45 876  
14:34:45 877  /********************************************************************/
14:34:45 878  
14:34:45 879  PROCEDURE CREATE_CHARGE_HISTORY (
14:34:45 880  /*
14:34:45 881  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:45 882  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 883  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:45 884  */
14:34:45 885  	in_charge_id		    IN NUMBER,
14:34:45 886  	in_system_activity_reason_id IN NUMBER
14:34:45 887  ) AS
14:34:45 888  SPROC_NAME CONSTANT VARCHAR2(21) := 'CREATE_CHARGE_HISTORY';
14:34:45 889  -- VARIABLES
14:34:45 890  var_invoice_id	     NUMBER;
14:34:45 891  var_transaction_id     NUMBER;
14:34:45 892  var_instrument_type_id NUMBER;
14:34:45 893  var_instrument_id      NUMBER;
14:34:45 894  var_charge_amount      NUMBER;
14:34:45 895  var_charge_status_id   NUMBER;
14:34:45 896  var_updated_by	     VARCHAR2(255);
14:34:45 897  var_update_date	     DATE;
14:34:45 898  -- EXCEPTIONS
14:34:45 899  BAD_CHARGE_ID	     EXCEPTION;
14:34:45 900  CAN_NOT_CREATE_HISTORY EXCEPTION;
14:34:45 901  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45 902  BEGIN
14:34:45 903  
14:34:45 904  	BEGIN
14:34:45 905  	  SELECT
14:34:45 906  	    CHARGE.INVOICE_ID,
14:34:45 907  	    CHARGE.TRANSACTION_ID,
14:34:45 908  	    CHARGE.INSTRUMENT_TYPE_ID,
14:34:45 909  	    CHARGE.INSTRUMENT_ID,
14:34:45 910  	    CHARGE.CHARGE_AMOUNT,
14:34:45 911  	    CHARGE.CHARGE_STATUS_ID,
14:34:45 912  	    CHARGE.UPDATED_BY,
14:34:45 913  	    CHARGE.UPDATE_DATE
14:34:45 914  	    into
14:34:45 915  	    var_invoice_id,
14:34:45 916  	    var_transaction_id,
14:34:45 917  	    var_instrument_type_id,
14:34:45 918  	    var_instrument_id,
14:34:45 919  	    var_charge_amount,
14:34:45 920  	    var_charge_status_id,
14:34:45 921  	    var_updated_by,
14:34:45 922  	    var_update_date
14:34:45 923  	  FROM
14:34:45 924  	    CHARGE
14:34:45 925  	  WHERE
14:34:45 926  	    CHARGE.ID = in_charge_id;
14:34:45 927  	  EXCEPTION
14:34:45 928  	    WHEN NO_DATA_FOUND THEN
14:34:45 929  	      RAISE BAD_CHARGE_ID;
14:34:45 930  	END;
14:34:45 931  
14:34:45 932  	BEGIN
14:34:45 933  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_CHARGE_HISTORY (
14:34:45 934  	    in_charge_id,
14:34:45 935  	    var_invoice_id,
14:34:45 936  	    var_transaction_id,
14:34:45 937  	    var_instrument_type_id,
14:34:45 938  	    var_instrument_id,
14:34:45 939  	    var_charge_amount,
14:34:45 940  	    var_updated_by,
14:34:45 941  	    var_update_date,
14:34:45 942  	    var_charge_status_id,
14:34:45 943  	    in_system_activity_reason_id
14:34:45 944  	  );
14:34:45 945  	  EXCEPTION
14:34:45 946  	    WHEN OTHERS THEN
14:34:45 947  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:45 948  	      RAISE CAN_NOT_CREATE_HISTORY;
14:34:45 949  	END;
14:34:45 950  
14:34:45 951  EXCEPTION
14:34:45 952  WHEN BAD_CHARGE_ID THEN
14:34:45 953  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 954  	  SPROC_NAME, 'No such license');
14:34:45 955  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:45 956  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45 957  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:45 958  WHEN OTHERS THEN
14:34:45 959  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 960  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 961  END CREATE_CHARGE_HISTORY;
14:34:45 962  
14:34:45 963  PROCEDURE CREATE_INVOICE_ADJ_HISTORY (
14:34:45 964  /*
14:34:45 965  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:45 966  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 967  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:45 968  */
14:34:45 969  	in_invoice_adjustment_id  IN NUMBER,
14:34:45 970  	in_system_activity_reason_id IN NUMBER
14:34:45 971  ) AS
14:34:45 972  SPROC_NAME CONSTANT VARCHAR(32) := 'CREATE_INVOICE_ADJ_HISTORY';
14:34:45 973  --VARIABLED
14:34:45 974  var_invoice_adj_id	  INVOICE_ADJUSTMENT.ID%TYPE;
14:34:45 975  var_invoice_id		  INVOICE_ADJUSTMENT.INVOICE_ID%TYPE;
14:34:45 976  var_is_credit		  INVOICE_ADJUSTMENT.IS_CREDIT%TYPE;
14:34:45 977  var_charge_id		  INVOICE_ADJUSTMENT.CHARGE_ID%TYPE;
14:34:45 978  var_adjustment_date	  INVOICE_ADJUSTMENT.ADJUSTMENT_DATE%TYPE;
14:34:45 979  var_create_date		  INVOICE_ADJUSTMENT.CREATE_DATE%TYPE;
14:34:45 980  var_created_by		  INVOICE_ADJUSTMENT.CREATED_BY%TYPE;
14:34:45 981  var_invoice_adj_reason_id INVOICE_ADJUSTMENT.INVOICE_ADJUSTMENT_REASON_ID%TYPE;
14:34:45 982  var_update_date		  INVOICE_ADJUSTMENT.UPDATE_DATE%TYPE;
14:34:45 983  var_updated_by		  INVOICE_ADJUSTMENT.UPDATED_BY%TYPE;
14:34:45 984  BAD_INVOICE_ADJ_ID	  EXCEPTION;
14:34:45 985  CAN_NOT_CREATE_HISTORY	  EXCEPTION;
14:34:45 986  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45 987  BEGIN
14:34:45 988  
14:34:45 989  	BEGIN
14:34:45 990  	  SELECT
14:34:45 991  	    INVOICE_ADJUSTMENT.ID,
14:34:45 992  	    INVOICE_ADJUSTMENT.INVOICE_ID,
14:34:45 993  	    INVOICE_ADJUSTMENT.IS_CREDIT,
14:34:45 994  	    INVOICE_ADJUSTMENT.CHARGE_ID,
14:34:45 995  	    INVOICE_ADJUSTMENT.ADJUSTMENT_DATE,
14:34:45 996  	    INVOICE_ADJUSTMENT.CREATE_DATE,
14:34:45 997  	    INVOICE_ADJUSTMENT.CREATED_BY,
14:34:45 998  	    INVOICE_ADJUSTMENT.INVOICE_ADJUSTMENT_REASON_ID,
14:34:45 999  	    INVOICE_ADJUSTMENT.UPDATE_DATE,
14:34:45 1000  	     INVOICE_ADJUSTMENT.UPDATED_BY
14:34:45 1001  	     into
14:34:45 1002  	     var_invoice_adj_id,
14:34:45 1003  	     var_invoice_id,
14:34:45 1004  	     var_is_credit,
14:34:45 1005  	     var_charge_id,
14:34:45 1006  	     var_adjustment_date,
14:34:45 1007  	     var_create_date,
14:34:45 1008  	     var_created_by,
14:34:45 1009  	     var_invoice_adj_reason_id,
14:34:45 1010  	     var_update_date,
14:34:45 1011  	     var_updated_by
14:34:45 1012  	   FROM
14:34:45 1013  	     INVOICE_ADJUSTMENT
14:34:45 1014  	   WHERE
14:34:45 1015  	     INVOICE_ADJUSTMENT.ID = in_invoice_adjustment_id;
14:34:45 1016  	   EXCEPTION
14:34:45 1017  	     WHEN NO_DATA_FOUND THEN
14:34:45 1018  	       RAISE BAD_INVOICE_ADJ_ID;
14:34:45 1019  	 END;
14:34:45 1020  
14:34:45 1021  	 BEGIN
14:34:45 1022  	   CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_INVOICE_ADJ_HISTORY (
14:34:45 1023  	     var_invoice_adj_id,
14:34:45 1024  	     var_invoice_id,
14:34:45 1025  	     var_is_credit,
14:34:45 1026  	     var_charge_id,
14:34:45 1027  	     var_adjustment_date,
14:34:45 1028  	     var_create_date,
14:34:45 1029  	     var_created_by,
14:34:45 1030  	     var_invoice_adj_reason_id,
14:34:45 1031  	     var_update_date,
14:34:45 1032  	     var_updated_by
14:34:45 1033  	   );
14:34:45 1034  	   EXCEPTION
14:34:45 1035  	     WHEN OTHERS THEN
14:34:45 1036  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:45 1037  	       RAISE CAN_NOT_CREATE_HISTORY;
14:34:45 1038  	 END;
14:34:45 1039  
14:34:45 1040  EXCEPTION
14:34:45 1041  WHEN BAD_INVOICE_ADJ_ID THEN
14:34:45 1042  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:45 1043  	   SPROC_NAME, 'No such invoice adjustment');
14:34:45 1044  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:45 1045  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:45 1046  	   SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:45 1047  WHEN OTHERS THEN
14:34:45 1048  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:45 1049  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:45 1050  END CREATE_INVOICE_ADJ_HISTORY;
14:34:45 1051  
14:34:45 1052  END PROCS_HISTORY_V18;
14:34:45 1053  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.17
14:34:45 SQL> 
14:34:45 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ITUNES_RECEIPT_V18" AS
14:34:45   2  
14:34:45   3  PROCEDURE ITUNES_RECEIPT_SUBSCRIPTION (
14:34:45   4  /*
14:34:45   5  Throws exceptions:
14:34:45   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45   7  */
14:34:45   8  	in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
14:34:45   9  	out_result_set	    OUT SYS_REFCURSOR
14:34:45  10  ) AS
14:34:45  11  SPROC_NAME CONSTANT VARCHAR2(28) := 'ITUNES_RECEIPT_SUBSCRIPTION';
14:34:45  12  BEGIN
14:34:45  13  OPEN out_result_set FOR
14:34:45  14  	      SELECT
14:34:45  15  	      i.id as ITUNES_RECEIPT_ID,
14:34:45  16  	      s.id as SUBSCRIPTION_ID,
14:34:45  17  	      s.SUBSCRIPTION_STATUS_ID,
14:34:45  18  	      i.STATUS,
14:34:45  19  	      a.GROUP_ID
14:34:45  20  	      FROM ITUNES_RECEIPT i, SUBSCRIPTION s, ACCOUNT a
14:34:45  21  	      WHERE i.ORIGINAL_TRANSACTION_ID = in_original_transaction_id
14:34:45  22  	      AND s.ID(+) = i.SUBSCRIPTION_ID
14:34:45  23  	      AND a.ID(+) = s.ACCOUNT_ID;
14:34:45  24  END ITUNES_RECEIPT_SUBSCRIPTION;
14:34:45  25  
14:34:45  26  
14:34:45  27  PROCEDURE CREATE_RECEIPT(
14:34:45  28  /*
14:34:45  29  Throws exceptions:
14:34:45  30  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45  31  */
14:34:45  32  	  out_id      OUT NUMBER,
14:34:45  33  	  in_subscription_id  IN ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
14:34:45  34  	  in_receipt	      IN ITUNES_RECEIPT.RECEIPT%TYPE,
14:34:45  35  	  in_status	      IN ITUNES_RECEIPT.STATUS%TYPE,
14:34:45  36  	  in_quantity	      IN ITUNES_RECEIPT.QUANTITY%TYPE,
14:34:45  37  	  in_product_id       IN ITUNES_RECEIPT.PRODUCT_ID%TYPE,
14:34:45  38  	  in_transaction_id   IN ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
14:34:45  39  	  in_purchase_date    IN ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
14:34:45  40  	  in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
14:34:45  41  	  in_original_purchase_date IN ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
14:34:45  42  	  in_app_item_id      IN ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
14:34:45  43  	  in_version_external_id IN ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
14:34:45  44  	  in_bid	      IN ITUNES_RECEIPT.BID%TYPE,
14:34:45  45  	  in_bvrs	      IN ITUNES_RECEIPT.BVRS%TYPE,
14:34:45  46  	  in_expires_date     IN ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
14:34:45  47  	  in_created_by       IN ITUNES_RECEIPT.CREATED_BY%TYPE
14:34:45  48  ) AS
14:34:45  49  -- VARIABLES
14:34:45  50  SPROC_NAME	 CONSTANT VARCHAR2(14) := 'CREATE_RECEIPT';
14:34:45  51  -- EXCEPTIONS
14:34:45  52  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:45  53  BEGIN
14:34:45  54  
14:34:45  55  	CORE_OWNER.PROCS_ITUNES_RECEIPT_CRU_V18.CREATE_RECEIPT(
14:34:45  56  	  out_id	      =>  out_id,
14:34:45  57  	  in_subscription_id  =>  in_subscription_id,
14:34:45  58  	  in_receipt	      =>  in_receipt,
14:34:45  59  	  in_status	      =>  in_status,
14:34:45  60  	  in_quantity	      =>  in_quantity,
14:34:45  61  	  in_product_id       =>  in_product_id,
14:34:45  62  	  in_transaction_id   =>  in_transaction_id,
14:34:45  63  	  in_purchase_date    =>  in_purchase_date,
14:34:45  64  	  in_original_transaction_id  =>  in_original_transaction_id,
14:34:45  65  	  in_original_purchase_date => in_original_purchase_date,
14:34:45  66  	  in_app_item_id      =>  in_app_item_id,
14:34:45  67  	  in_version_external_id  =>  in_version_external_id,
14:34:45  68  	  in_bid	      =>  in_bid,
14:34:45  69  	  in_bvrs	      =>  in_bvrs,
14:34:45  70  	  in_expires_date     =>  in_expires_date,
14:34:45  71  	  in_created_by       =>  in_created_by
14:34:45  72  	);
14:34:45  73  
14:34:45  74  END CREATE_RECEIPT;
14:34:45  75  
14:34:45  76  PROCEDURE UPDATE_RECEIPT(
14:34:45  77  /*
14:34:45  78  Throws exceptions:
14:34:45  79  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45  80  */
14:34:45  81  	  in_id 	      IN ITUNES_RECEIPT.ID%TYPE,
14:34:45  82  	  in_receipt	      IN ITUNES_RECEIPT.RECEIPT%TYPE,
14:34:45  83  	  in_status	      IN ITUNES_RECEIPT.STATUS%TYPE,
14:34:45  84  	  in_quantity	      IN ITUNES_RECEIPT.QUANTITY%TYPE,
14:34:45  85  	  in_product_id       IN ITUNES_RECEIPT.PRODUCT_ID%TYPE,
14:34:45  86  	  in_transaction_id   IN ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
14:34:45  87  	  in_purchase_date    IN ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
14:34:45  88  	  in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
14:34:45  89  	  in_original_purchase_date IN ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
14:34:45  90  	  in_app_item_id      IN ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
14:34:45  91  	  in_version_external_id IN ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
14:34:45  92  	  in_bid	      IN ITUNES_RECEIPT.BID%TYPE,
14:34:45  93  	  in_bvrs	      IN ITUNES_RECEIPT.BVRS%TYPE,
14:34:45  94  	  in_expires_date     IN ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
14:34:45  95  	  in_updated_by       IN ITUNES_RECEIPT.UPDATED_BY%TYPE,
14:34:45  96  	  in_is_expired       IN NUMBER
14:34:45  97  ) AS
14:34:45  98  CANCEL_DATE DATE;
14:34:45  99  BEGIN
14:34:45 100  	-- see if cancel date is already set
14:34:45 101  	BEGIN
14:34:45 102  	  SELECT
14:34:45 103  	    IR.CANCEL_DATE INTO CANCEL_DATE
14:34:45 104  	  FROM
14:34:45 105  	    ITUNES_RECEIPT IR
14:34:45 106  	  WHERE
14:34:45 107  	    IR.ID = in_id;
14:34:45 108  	EXCEPTION
14:34:45 109  	  WHEN NO_DATA_FOUND THEN
14:34:45 110  	    CANCEL_DATE := NULL;
14:34:45 111  	END;
14:34:45 112  
14:34:45 113  	-- only update cancel date if it isn't already set and the receipt is expired
14:34:45 114  	IF in_is_expired = 1 THEN
14:34:45 115  	  IF CANCEL_DATE IS NULL THEN
14:34:45 116  	    CANCEL_DATE := SYSDATE;
14:34:45 117  	  END IF;
14:34:45 118  	ELSE
14:34:45 119  	  CANCEL_DATE := NULL;
14:34:45 120  	END IF;
14:34:45 121  
14:34:45 122  	CORE_OWNER.PROCS_ITUNES_RECEIPT_CRU_V18.UPDATE_RECEIPT(
14:34:45 123  	  in_id => in_id,
14:34:45 124  	  in_receipt => in_receipt,
14:34:45 125  	  in_status => in_status,
14:34:45 126  	  in_quantity => in_quantity,
14:34:45 127  	  in_product_id => in_product_id,
14:34:45 128  	  in_transaction_id => in_transaction_id,
14:34:45 129  	  in_purchase_date => in_purchase_date,
14:34:45 130  	  in_original_transaction_id => in_original_transaction_id,
14:34:45 131  	  in_original_purchase_date => in_original_purchase_date,
14:34:45 132  	  in_app_item_id => in_app_item_id,
14:34:45 133  	  in_version_external_id => in_version_external_id,
14:34:45 134  	  in_bid => in_bid,
14:34:45 135  	  in_bvrs => in_bvrs,
14:34:45 136  	  in_expires_date => in_expires_date,
14:34:45 137  	  in_updated_by => in_updated_by,
14:34:45 138  	  in_cancel_date => CANCEL_DATE
14:34:45 139  	);
14:34:45 140  END UPDATE_RECEIPT;
14:34:45 141  
14:34:45 142  PROCEDURE LINK_ITUNES_RECEIPT(
14:34:45 143  /*
14:34:45 144  Throws exceptions:
14:34:45 145  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 146  */
14:34:45 147  	  in_id 	      IN ITUNES_RECEIPT.ID%TYPE,
14:34:45 148  	  in_subscription_id  IN ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
14:34:45 149  	  in_updated_by       IN ITUNES_RECEIPT.UPDATED_BY%TYPE
14:34:45 150  ) AS
14:34:45 151  BEGIN
14:34:45 152  	      CORE_OWNER.PROCS_ITUNES_RECEIPT_CRU_V18.LINK_ITUNES_RECEIPT(
14:34:45 153  		      in_id => in_id,
14:34:45 154  		      in_subscription_id => in_subscription_id,
14:34:45 155  		      in_updated_by => in_updated_by
14:34:45 156  		      );
14:34:45 157  END LINK_ITUNES_RECEIPT;
14:34:45 158  
14:34:45 159  PROCEDURE MARK_RECEIPT_CHECKED(
14:34:45 160  /*
14:34:45 161  Throws exceptions:
14:34:45 162  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 163  */
14:34:45 164  	  in_id       IN ITUNES_RECEIPT.ID%TYPE
14:34:45 165  ) AS
14:34:45 166  BEGIN
14:34:45 167  	CORE_OWNER.PROCS_ITUNES_RECEIPT_CRU_V18.MARK_RECEIPT_CHECKED(
14:34:45 168  	  in_id => in_id
14:34:45 169  	);
14:34:45 170  END MARK_RECEIPT_CHECKED;
14:34:45 171  
14:34:45 172  PROCEDURE GET_ITUNES_RECEIPTS (
14:34:45 173  /*
14:34:45 174  Throws exceptions:
14:34:45 175  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 176  */
14:34:45 177  	out_result_set	    OUT SYS_REFCURSOR,
14:34:45 178  	in_row_number	    IN NUMBER DEFAULT 500
14:34:45 179  ) AS
14:34:45 180  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_ITUNES_RECEIPTS';
14:34:45 181  BEGIN
14:34:45 182  OPEN out_result_set FOR
14:34:45 183  SELECT * FROM
14:34:45 184  (
14:34:45 185  	SELECT * FROM
14:34:45 186  	(
14:34:45 187  	  SELECT
14:34:45 188  	    IR.ID,
14:34:45 189  	    IR.SUBSCRIPTION_ID,
14:34:45 190  	    IR.RECEIPT,
14:34:45 191  	    IR.STATUS,
14:34:45 192  	    IR.QUANTITY,
14:34:45 193  	    IR.PRODUCT_ID,
14:34:45 194  	    IR.TRANSACTION_ID,
14:34:45 195  	    IR.PURCHASE_DATE,
14:34:45 196  	    IR.ORIGINAL_TRANSACTION_ID,
14:34:45 197  	    IR.ORIGINAL_PURCHASE_DATE,
14:34:45 198  	    IR.APP_ITEM_ID,
14:34:45 199  	    IR.VERSION_EXTERNAL_ID,
14:34:45 200  	    IR.BID,
14:34:45 201  	    IR.BVRS,
14:34:45 202  	    IR.EXPIRES_DATE,
14:34:45 203  	    IR.CREATE_DATe,
14:34:45 204  	    IR.CREATED_BY,
14:34:45 205  	    IR.UPDATE_DATE,
14:34:45 206  	    IR.UPDATED_BY,
14:34:45 207  	    IR.LAST_CHECK_DATE,
14:34:45 208  	    OC.VENDOR_SOURCE_ID
14:34:45 209  	  FROM
14:34:45 210  	    CORE_OWNER.ITUNES_RECEIPT IR
14:34:45 211  	    LEFT JOIN CORE_OWNER.SUBSCRIPTION S ON IR.subscription_id = S.id
14:34:45 212  	    LEFT JOIN CORE_OWNER.OFFER_CHAIN OC ON S.offer_chain_id = OC.id
14:34:45 213  	  WHERE
14:34:45 214  	    NOT EXISTS
14:34:45 215  	    (
14:34:45 216  	      SELECT NULL
14:34:45 217  	      FROM PROCESS_RETRY_THROTTLE
14:34:45 218  	      WHERE PROCESS_NAME = SPROC_NAME
14:34:45 219  		AND GENERIC_ID = IR.ID
14:34:45 220  	    ) AND
14:34:45 221  	    (S.subscription_status_id in (GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED, GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE) or (S.subscription_status_id is null and IR.status != 21006)) AND
14:34:45 222  	    ROWNUM <= in_row_number*10
14:34:45 223  	)
14:34:45 224  	ORDER BY dbms_random.value
14:34:45 225  )
14:34:45 226  WHERE
14:34:45 227  	ROWNUM <= in_row_number;
14:34:45 228  
14:34:45 229  END GET_ITUNES_RECEIPTS;
14:34:45 230  
14:34:45 231  PROCEDURE GET_VENDOR_FROM_ITUNES_PID(
14:34:45 232  /*
14:34:45 233  Throws exceptions:
14:34:45 234  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:45 235  */
14:34:45 236  	  out_vendor_source_id OUT OFFER_CHAIN.VENDOR_SOURCE_ID%TYPE,
14:34:45 237  	  in_itunes_pid        IN ITUNES_RECEIPT.PRODUCT_ID%TYPE
14:34:45 238  ) AS
14:34:45 239  BEGIN
14:34:45 240  
14:34:45 241  SELECT
14:34:45 242  	  oc.vendor_source_id
14:34:45 243  INTO
14:34:45 244  	  out_vendor_source_id
14:34:45 245  FROM
14:34:45 246  	  offer_chain_meta_data ocmd
14:34:45 247  JOIN
14:34:45 248  	  offer_chain oc
14:34:45 249  ON
14:34:45 250  	  ocmd.offer_chain_id = oc.id
14:34:45 251  WHERE
14:34:45 252  	  ocmd.name = 'ITUNES_PRODUCT_ID'
14:34:45 253  AND ocmd.value = in_itunes_pid
14:34:45 254  AND rownum <= 1;
14:34:45 255  
14:34:45 256  END GET_VENDOR_FROM_ITUNES_PID;
14:34:45 257  
14:34:45 258  END PROCS_ITUNES_RECEIPT_V18;
14:34:45 259  .
14:34:45 SQL> /

Package body created.

Elapsed: 00:00:00.04
14:34:46 SQL> 
14:34:46 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LINE_ITEMS_V18" AS
14:34:46   2  
14:34:46   3  PROCEDURE ADD_LINE_ITEMS(
14:34:46   4  /*
14:34:46   5  Throws exceptions:
14:34:46   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46   8  */
14:34:46   9  	in_invoice_id IN NUMBER,
14:34:46  10  	in_offer_id   IN NUMBER,
14:34:46  11  	in_created_by IN VARCHAR2
14:34:46  12  ) AS
14:34:46  13  -- VARIABLES
14:34:46  14  SPROC_NAME      CONSTANT VARCHAR2(14) := 'ADD_LINE_ITEMS';
14:34:46  15  temp_invoice_id NUMBER;
14:34:46  16  temp_offer_id   NUMBER;
14:34:46  17  
14:34:46  18  var_line_item_data SYS_REFCURSOR;
14:34:46  19  var_new_line_item_id NUMBER;
14:34:46  20  var_product_unit_price NUMBER (10,6);
14:34:46  21  var_product_offering_price NUMBER(10,6);
14:34:46  22  var_product_offering_oprice NUMBER(10,6);
14:34:46  23  var_product_quantity NUMBER;
14:34:46  24  var_product_offering_id NUMBER;
14:34:46  25  
14:34:46  26  var_line_item_price	  NUMBER(10,2);
14:34:46  27  var_discount_fixed_amount   NUMBER(10,6);
14:34:46  28  var_discount_percent_amount NUMBER(10,2);
14:34:46  29  
14:34:46  30  
14:34:46  31  -- EXCEPTIONS
14:34:46  32  BAD_INVOICE_ID EXCEPTION;
14:34:46  33  BAD_OFFER_ID EXCEPTION;
14:34:46  34  BAD_DISCOUNT EXCEPTION;
14:34:46  35  BEGIN
14:34:46  36  
14:34:46  37  	-- Check that given invoice exists
14:34:46  38  	BEGIN
14:34:46  39  	  SELECT
14:34:46  40  	    INVOICE.ID into temp_invoice_id
14:34:46  41  	  FROM
14:34:46  42  	    INVOICE
14:34:46  43  	  WHERE
14:34:46  44  	    INVOICE.ID = in_invoice_id;
14:34:46  45  
14:34:46  46  	  EXCEPTION
14:34:46  47  	    WHEN NO_DATA_FOUND THEN
14:34:46  48  	      RAISE BAD_INVOICE_ID;
14:34:46  49  	END;
14:34:46  50  
14:34:46  51  	-- Check that given offer exists
14:34:46  52  	BEGIN
14:34:46  53  	  SELECT
14:34:46  54  	    OFFER.ID into temp_offer_id
14:34:46  55  	  FROM
14:34:46  56  	    OFFER
14:34:46  57  	  WHERE
14:34:46  58  	    OFFER.ID = in_offer_id;
14:34:46  59  
14:34:46  60  	  EXCEPTION
14:34:46  61  	    WHEN NO_DATA_FOUND THEN
14:34:46  62  	      RAISE BAD_OFFER_ID;
14:34:46  63  	END;
14:34:46  64  
14:34:46  65  	-- Get product_offering data
14:34:46  66  	OPEN var_line_item_data FOR
14:34:46  67  	SELECT
14:34:46  68  	  PRODUCT_OFFERING.ID,
14:34:46  69  	  PRODUCT_OFFERING.UNIT_PRICE,
14:34:46  70  	  PRODUCT_OFFERING.QUANTITY
14:34:46  71  	FROM
14:34:46  72  	  OFFER_PRODUCT_OFFERING
14:34:46  73  	  INNER JOIN PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
14:34:46  74  	WHERE
14:34:46  75  	  OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id;
14:34:46  76  
14:34:46  77  	-- insert line items
14:34:46  78  	-- add discounts to line items
14:34:46  79  	LOOP
14:34:46  80  	  FETCH var_line_item_data INTO
14:34:46  81  	    var_product_offering_id,
14:34:46  82  	    var_product_unit_price,
14:34:46  83  	    var_product_quantity;
14:34:46  84  	  EXIT WHEN var_line_item_data%NOTFOUND;
14:34:46  85  
14:34:46  86  	  var_product_offering_oprice := var_product_unit_price * var_product_quantity;
14:34:46  87  	  var_product_offering_price := var_product_offering_oprice;
14:34:46  88  
14:34:46  89  	  -- Apply discounts to line_item
14:34:46  90  	  BEGIN
14:34:46  91  	    SELECT
14:34:46  92  	      SUM (DISCOUNT.FIXED_AMOUNT) into var_discount_fixed_amount
14:34:46  93  	    FROM
14:34:46  94  	      DISCOUNT_PRODUCT_OFFERING
14:34:46  95  	      INNER JOIN DISCOUNT ON DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID = DISCOUNT.ID
14:34:46  96  	    WHERE
14:34:46  97  	      DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = var_product_offering_id
14:34:46  98  	      AND DISCOUNT.FIXED_AMOUNT IS NOT NULL;
14:34:46  99  	    EXCEPTION
14:34:46 100  	    WHEN NO_DATA_FOUND THEN
14:34:46 101  	      var_discount_fixed_amount := NULL;
14:34:46 102  	  END;
14:34:46 103  
14:34:46 104  	  BEGIN
14:34:46 105  	    SELECT
14:34:46 106  	      SUM (DISCOUNT.PERCENT_AMOUNT) into var_discount_percent_amount
14:34:46 107  	    FROM
14:34:46 108  	      DISCOUNT_PRODUCT_OFFERING
14:34:46 109  	      INNER JOIN DISCOUNT ON DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID = DISCOUNT.ID
14:34:46 110  	    WHERE
14:34:46 111  	      DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = var_product_offering_id
14:34:46 112  	      AND DISCOUNT.PERCENT_AMOUNT IS NOT NULL;
14:34:46 113  	    EXCEPTION
14:34:46 114  	    WHEN NO_DATA_FOUND THEN
14:34:46 115  	      var_discount_percent_amount := NULL;
14:34:46 116  	  END;
14:34:46 117  
14:34:46 118  	  IF (var_discount_percent_amount IS NOT NULL) THEN
14:34:46 119  	    var_product_offering_price := var_product_offering_price * ( 1 - var_discount_percent_amount / 100 );
14:34:46 120  	  END IF;
14:34:46 121  
14:34:46 122  	  IF (var_discount_fixed_amount IS NOT NULL) THEN
14:34:46 123  	    var_product_offering_price := var_product_offering_price - var_discount_fixed_amount;
14:34:46 124  	  END IF;
14:34:46 125  
14:34:46 126  	  var_line_item_price := PROCS_COMMON_V18.ROUND_10_6_TO_10_2(var_product_offering_price);
14:34:46 127  
14:34:46 128  	  IF (var_line_item_price < 0) THEN
14:34:46 129  	      RAISE BAD_DISCOUNT;
14:34:46 130  	  END IF;
14:34:46 131  
14:34:46 132  	  var_new_line_item_id := NULL;
14:34:46 133  	  PROCS_LINE_ITEMS_CRU_V18.CREATE_LINE_ITEM(
14:34:46 134  	    inout_line_item_id	=> var_new_line_item_id,
14:34:46 135  	    in_product_offer_id => var_product_offering_id,
14:34:46 136  	    in_invoice_id	=> in_invoice_id,
14:34:46 137  	    in_amount		=> var_line_item_price,
14:34:46 138  	    in_created_by	=> in_created_by,
14:34:46 139  	    in_discount_amount	=> var_product_offering_oprice - var_line_item_price,
14:34:46 140  	    in_taxes_amount	=> NULL
14:34:46 141  	  );
14:34:46 142  
14:34:46 143  	  FOR f_discount IN (
14:34:46 144  	    SELECT
14:34:46 145  	      DISCOUNT.ID
14:34:46 146  	    FROM
14:34:46 147  	      DISCOUNT_PRODUCT_OFFERING
14:34:46 148  	      INNER JOIN DISCOUNT ON DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID = DISCOUNT.ID
14:34:46 149  	    WHERE
14:34:46 150  	      DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = var_product_offering_id
14:34:46 151  	  )
14:34:46 152  	  LOOP
14:34:46 153  	    PROCS_LINE_ITEMS_CRU_V18.CREATE_DISCOUNT_LINE_ITEM(
14:34:46 154  	      in_discount_id =>  f_discount.ID,
14:34:46 155  	      in_line_item_id => var_new_line_item_id
14:34:46 156  	    );
14:34:46 157  	  END LOOP;
14:34:46 158  	END LOOP;
14:34:46 159  
14:34:46 160  EXCEPTION
14:34:46 161  WHEN BAD_INVOICE_ID THEN
14:34:46 162  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 163  	  SPROC_NAME, 'No such license');
14:34:46 164  WHEN BAD_OFFER_ID THEN
14:34:46 165  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 166  	  SPROC_NAME, 'No such offer');
14:34:46 167  WHEN BAD_DISCOUNT THEN
14:34:46 168  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 169  	  SPROC_NAME, 'Bad Discount');
14:34:46 170  WHEN OTHERS THEN
14:34:46 171  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 172  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 173  END ADD_LINE_ITEMS;
14:34:46 174  
14:34:46 175  /******************************************************************************/
14:34:46 176  
14:34:46 177  PROCEDURE UPDATE_LINE_ITEM_AMOUNT (
14:34:46 178  	in_line_item_id    IN NUMBER,
14:34:46 179  	in_amount	   IN NUMBER,
14:34:46 180  	in_discount_amount IN NUMBER,
14:34:46 181  	in_taxes_amount    IN NUMBER
14:34:46 182  ) AS
14:34:46 183  SPROC_NAME CONSTANT VARCHAR2(24) := 'UPDATE_LINE_ITEM_AMOUNTS';
14:34:46 184  -- VARIABLES
14:34:46 185  temp_line_item_id NUMBER;
14:34:46 186  -- EXCEPTIONS
14:34:46 187  BAD_LINE_ITEM_ID EXCEPTION;
14:34:46 188  BEGIN
14:34:46 189  
14:34:46 190  	-- Check that line item exists
14:34:46 191  	BEGIN
14:34:46 192  	  SELECT
14:34:46 193  	    LINE_ITEM.ID into temp_line_item_id
14:34:46 194  	  FROM
14:34:46 195  	    LINE_ITEM
14:34:46 196  	  WHERE
14:34:46 197  	    LINE_ITEM.ID = in_line_item_id;
14:34:46 198  	  EXCEPTION
14:34:46 199  	    WHEN NO_DATA_FOUND THEN
14:34:46 200  	      RAISE BAD_LINE_ITEM_ID;
14:34:46 201  	END;
14:34:46 202  
14:34:46 203  	-- Update line item
14:34:46 204  	PROCS_LINE_ITEMS_CRU_V18.UPDATE_LINE_ITEM(
14:34:46 205  	  in_line_item_id    => in_line_item_id,
14:34:46 206  	  in_amount	     => in_amount,
14:34:46 207  	  in_discount_amount => in_discount_amount,
14:34:46 208  	  in_taxes_amount    => in_taxes_amount
14:34:46 209  	);
14:34:46 210  
14:34:46 211  EXCEPTION
14:34:46 212  WHEN BAD_LINE_ITEM_ID THEN
14:34:46 213  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 214  	  SPROC_NAME, 'No such line item');
14:34:46 215  WHEN OTHERS THEN
14:34:46 216  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 217  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 218  END UPDATE_LINE_ITEM_AMOUNT;
14:34:46 219  
14:34:46 220  /******************************************************************************/
14:34:46 221  
14:34:46 222  PROCEDURE GET_INVOICE_LINE_ITEMS (
14:34:46 223  /*
14:34:46 224  Throws exceptions:
14:34:46 225  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 226  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 227  */
14:34:46 228  	in_invoice_id  IN NUMBER,
14:34:46 229  	out_result_set OUT SYS_REFCURSOR
14:34:46 230  ) AS
14:34:46 231  -- VARIABLES
14:34:46 232  SPROC_NAME      CONSTANT VARCHAR2(22) := 'GET_INVOICE_LINE_ITEMS';
14:34:46 233  temp_invoice_id NUMBER;
14:34:46 234  
14:34:46 235  -- EXCEPTIONS
14:34:46 236  BAD_INVOICE_ID EXCEPTION;
14:34:46 237  BEGIN
14:34:46 238  
14:34:46 239  	-- Check that given invoice exists
14:34:46 240  	BEGIN
14:34:46 241  	  SELECT
14:34:46 242  	    INVOICE.ID into temp_invoice_id
14:34:46 243  	  FROM
14:34:46 244  	    INVOICE
14:34:46 245  	  WHERE
14:34:46 246  	    INVOICE.ID = in_invoice_id;
14:34:46 247  	  EXCEPTION
14:34:46 248  	    WHEN NO_DATA_FOUND THEN
14:34:46 249  	      RAISE BAD_INVOICE_ID;
14:34:46 250  	END;
14:34:46 251  
14:34:46 252  	-- Select line items
14:34:46 253  	OPEN out_result_set FOR
14:34:46 254  	SELECT
14:34:46 255  	  LINE_ITEM.ID,
14:34:46 256  	  LINE_ITEM.AMOUNT,
14:34:46 257  	  LINE_ITEM.CREATE_DATE,
14:34:46 258  	  LINE_ITEM.CREATED_BY,
14:34:46 259  	  LINE_ITEM.INVOICE_ID,
14:34:46 260  	  LINE_ITEM.DISCOUNT_AMOUNT,
14:34:46 261  	  LINE_ITEM.TAXES_AMOUNT,
14:34:46 262  	  LINE_ITEM.PRODUCT_OFFER_ID
14:34:46 263  	FROM
14:34:46 264  	  LINE_ITEM
14:34:46 265  	WHERE
14:34:46 266  	  LINE_ITEM.INVOICE_ID = in_invoice_id;
14:34:46 267  
14:34:46 268  EXCEPTION
14:34:46 269  WHEN BAD_INVOICE_ID THEN
14:34:46 270  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 271  	  SPROC_NAME, 'No such invoice');
14:34:46 272  WHEN OTHERS THEN
14:34:46 273  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 274  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 275  END GET_INVOICE_LINE_ITEMS;
14:34:46 276  
14:34:46 277  /******************************************************************************/
14:34:46 278  
14:34:46 279  PROCEDURE GET_LINE_ITEM_TAXES (
14:34:46 280  /*
14:34:46 281  Throws exceptions:
14:34:46 282  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 283  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 284  */
14:34:46 285  	in_line_item_id IN  NUMBER,
14:34:46 286  	out_result_set	OUT SYS_REFCURSOR
14:34:46 287  ) AS
14:34:46 288  -- VARIABLES
14:34:46 289  SPROC_NAME	CONSTANT VARCHAR2(19) := 'GET_LINE_ITEM_TAXES';
14:34:46 290  temp_line_item_id NUMBER;
14:34:46 291  -- EXCEPTIONS
14:34:46 292  BAD_LINE_ITEM_ID EXCEPTION;
14:34:46 293  BEGIN
14:34:46 294  
14:34:46 295  	-- Check that line item exists
14:34:46 296  	BEGIN
14:34:46 297  	  SELECT
14:34:46 298  	    LINE_ITEM.ID into temp_line_item_id
14:34:46 299  	  FROM
14:34:46 300  	    LINE_ITEM
14:34:46 301  	  WHERE
14:34:46 302  	    LINE_ITEM.ID = in_line_item_id;
14:34:46 303  	  EXCEPTION
14:34:46 304  	    WHEN NO_DATA_FOUND THEN
14:34:46 305  	      RAISE BAD_LINE_ITEM_ID;
14:34:46 306  	END;
14:34:46 307  
14:34:46 308  	-- Get all taxes for given line item
14:34:46 309  	OPEN out_result_set FOR
14:34:46 310  	SELECT
14:34:46 311  	  TAX.ID,
14:34:46 312  	  TAX.CALCULATED_AMOUNT,
14:34:46 313  	  TAX.CREATE_DATE,
14:34:46 314  	  TAX.CREATED_BY,
14:34:46 315  	  TAX.EFFECTIVE_RATE,
14:34:46 316  	  TAX.EXT_RESULT,
14:34:46 317  	  TAX.EXT_TAX_TYPE,
14:34:46 318  	  TAX.IMPOSITION,
14:34:46 319  	  TAX.IMPOSITION_TYPE,
14:34:46 320  	  TAX.JURISDICTION_ID,
14:34:46 321  	  TAX.JURISDICTION_LEVEL_ID,
14:34:46 322  	  TAX.JURISDICTION_NAME,
14:34:46 323  	  TAX.LINE_ITEM_ID,
14:34:46 324  	  TAX.TAX_RULE_ID,
14:34:46 325  	  TAX.TAX_TYPE_ID,
14:34:46 326  	  TAX.TAXABLE_AMOUNT
14:34:46 327  	FROM
14:34:46 328  	  TAX
14:34:46 329  	WHERE
14:34:46 330  	  TAX.LINE_ITEM_ID = in_line_item_id;
14:34:46 331  
14:34:46 332  EXCEPTION
14:34:46 333  WHEN BAD_LINE_ITEM_ID THEN
14:34:46 334  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 335  	  SPROC_NAME, 'No such line item');
14:34:46 336  WHEN OTHERS THEN
14:34:46 337  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 338  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 339  END GET_LINE_ITEM_TAXES;
14:34:46 340  
14:34:46 341  -- norlov: #38770
14:34:46 342  PROCEDURE GET_LINE_ITEM_DISCOUNTS (
14:34:46 343  /*
14:34:46 344  Throws exceptions:
14:34:46 345  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 346  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 347  */
14:34:46 348  	in_line_item_id IN  NUMBER,
14:34:46 349  	out_result_set	OUT SYS_REFCURSOR
14:34:46 350  ) AS
14:34:46 351  -- VARIABLES
14:34:46 352  SPROC_NAME	CONSTANT VARCHAR2(23) := 'GET_LINE_ITEM_DISCOUNTS';
14:34:46 353  temp_line_item_id NUMBER;
14:34:46 354  -- EXCEPTIONS
14:34:46 355  BAD_LINE_ITEM_ID EXCEPTION;
14:34:46 356  BEGIN
14:34:46 357  
14:34:46 358  	-- Check that line item exists
14:34:46 359  	BEGIN
14:34:46 360  	  SELECT
14:34:46 361  	    LINE_ITEM.ID into temp_line_item_id
14:34:46 362  	  FROM
14:34:46 363  	    LINE_ITEM
14:34:46 364  	  WHERE
14:34:46 365  	    LINE_ITEM.ID = in_line_item_id;
14:34:46 366  	  EXCEPTION
14:34:46 367  	    WHEN NO_DATA_FOUND THEN
14:34:46 368  	      RAISE BAD_LINE_ITEM_ID;
14:34:46 369  	END;
14:34:46 370  
14:34:46 371  	-- Get all discounts for given line item
14:34:46 372  	OPEN out_result_set FOR
14:34:46 373  	SELECT
14:34:46 374  	  DISCOUNT.FIXED_AMOUNT,
14:34:46 375  	  DISCOUNT.NAME,
14:34:46 376  	  DISCOUNT.ID,
14:34:46 377  	  DISCOUNT.PERCENT_AMOUNT
14:34:46 378  	FROM
14:34:46 379  	  DISCOUNT_LINE_ITEM
14:34:46 380  	  INNER JOIN DISCOUNT ON DISCOUNT_LINE_ITEM.DISCOUNT_ID = DISCOUNT.ID
14:34:46 381  	WHERE
14:34:46 382  	  DISCOUNT_LINE_ITEM.LINE_ITEM_ID = in_line_item_id;
14:34:46 383  
14:34:46 384  EXCEPTION
14:34:46 385  WHEN BAD_LINE_ITEM_ID THEN
14:34:46 386  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 387  	  SPROC_NAME, 'No such line item');
14:34:46 388  WHEN OTHERS THEN
14:34:46 389  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 390  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 391  END GET_LINE_ITEM_DISCOUNTS;
14:34:46 392  /******************************************************************************/
14:34:46 393  
14:34:46 394  PROCEDURE CALCULATE_LINE_ITEM_AMOUNT (
14:34:46 395  /*
14:34:46 396  Throws exceptions:
14:34:46 397  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 398  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 399  */
14:34:46 400  	in_line_item_id     IN	NUMBER,
14:34:46 401  	out_amount	    OUT NUMBER
14:34:46 402  ) AS
14:34:46 403  -- VARIABLES
14:34:46 404  SPROC_NAME CONSTANT VARCHAR2(26) := 'CALCULATE_LINE_ITEM_AMOUNT';
14:34:46 405  -- EXCEPTIONS
14:34:46 406  BAD_LINE_ITEM_ID EXCEPTION;
14:34:46 407  BEGIN
14:34:46 408  
14:34:46 409  	BEGIN
14:34:46 410  	  SELECT
14:34:46 411  	    LINE_ITEM.AMOUNT into out_amount
14:34:46 412  	  FROM
14:34:46 413  	    LINE_ITEM
14:34:46 414  	  WHERE
14:34:46 415  	    LINE_ITEM.ID = in_line_item_id;
14:34:46 416  	  EXCEPTION
14:34:46 417  	    WHEN NO_DATA_FOUND THEN
14:34:46 418  	      RAISE BAD_LINE_ITEM_ID;
14:34:46 419  	END;
14:34:46 420  
14:34:46 421  EXCEPTION
14:34:46 422  WHEN BAD_LINE_ITEM_ID THEN
14:34:46 423  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 424  	  SPROC_NAME, 'No such line item');
14:34:46 425  WHEN OTHERS THEN
14:34:46 426  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 427  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 428  END CALCULATE_LINE_ITEM_AMOUNT;
14:34:46 429  
14:34:46 430  /******************************************************************************/
14:34:46 431  
14:34:46 432  FUNCTION F_CALCULATE_LINE_ITEM_AMOUNT (
14:34:46 433  /*
14:34:46 434  Throws exceptions:
14:34:46 435  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 436  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 437  */
14:34:46 438  	in_line_item_id     IN	NUMBER
14:34:46 439  ) RETURN NUMBER AS
14:34:46 440  var_invoice_amount NUMBER(10, 2);
14:34:46 441  BEGIN
14:34:46 442  	PROCS_LINE_ITEMS_V18.CALCULATE_LINE_ITEM_AMOUNT(in_line_item_id, var_invoice_amount);
14:34:46 443  	RETURN var_invoice_amount;
14:34:46 444  END F_CALCULATE_LINE_ITEM_AMOUNT;
14:34:46 445  
14:34:46 446  END PROCS_LINE_ITEMS_V18;
14:34:46 447  .
14:34:46 SQL> /

Package body created.

Elapsed: 00:00:00.07
14:34:46 SQL> 
14:34:46 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LOCKING_V18" AS
14:34:46   2  
14:34:46   3  /*
14:34:46   4  PROCEDURE INITIALIZE_SYSTEM AS
14:34:46   5  SPROC_NAME CONSTANT VARCHAR2(17) := 'INITIALIZE_SYSTEM';
14:34:46   6  -- VARIABLES
14:34:46   7  var_account_ids SYS_REFCURSOR;
14:34:46   8  var_account_id  NUMBER;
14:34:46   9  BEGIN
14:34:46  10  
14:34:46  11  	OPEN var_account_ids FOR
14:34:46  12  	SELECT
14:34:46  13  	  ACCOUNT.ID
14:34:46  14  	FROM
14:34:46  15  	  ACCOUNT;
14:34:46  16  
14:34:46  17  	LOOP
14:34:46  18  	  FETCH var_account_ids into var_account_id;
14:34:46  19  	  EXIT WHEN var_account_ids%NOTFOUND;
14:34:46  20  	  BEGIN
14:34:46  21  	    INITIALIZE_ACCOUNT(var_account_id);
14:34:46  22  	    EXCEPTION
14:34:46  23  	      WHEN OTHERS THEN
14:34:46  24  		NULL;
14:34:46  25  	  END;
14:34:46  26  	END LOOP;
14:34:46  27  
14:34:46  28  END INITIALIZE_SYSTEM;
14:34:46  29  
14:34:46  30  PROCEDURE INITIALIZE_ACCOUNT (
14:34:46  31  	in_account_id IN NUMBER
14:34:46  32  ) AS
14:34:46  33  SPROC_NAME CONSTANT VARCHAR2(18) := 'INITIALIZE_ACCOUNT';
14:34:46  34  -- EXCEPTIONS
14:34:46  35  ACCOUNT_ALREADY_INITIALIZED EXCEPTION;
14:34:46  36  BEGIN
14:34:46  37  
14:34:46  38  	BEGIN
14:34:46  39  	  INSERT INTO ACCOUNT_LOCK(
14:34:46  40  	    ACCOUNT_ID,
14:34:46  41  	    LOCK_KEY,
14:34:46  42  	    END_DATE,
14:34:46  43  	    CREATED_BY,
14:34:46  44  	    REASON
14:34:46  45  	  ) VALUES (
14:34:46  46  	    in_account_id,
14:34:46  47  	    'initialization key',
14:34:46  48  	    SYSDATE,
14:34:46  49  	    'system',
14:34:46  50  	    'initialization'
14:34:46  51  	  );
14:34:46  52  	  EXCEPTION
14:34:46  53  	    WHEN DUP_VAL_ON_INDEX THEN
14:34:46  54  	      RAISE ACCOUNT_ALREADY_INITIALIZED;
14:34:46  55  	END;
14:34:46  56  
14:34:46  57  EXCEPTION
14:34:46  58  WHEN ACCOUNT_ALREADY_INITIALIZED THEN
14:34:46  59  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:46  60  	  SPROC_NAME, 'Account already initialized');
14:34:46  61  WHEN OTHERS THEN
14:34:46  62  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46  63  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46  64  END;
14:34:46  65  
14:34:46  66  PROCEDURE INITIALIZE_GROUP (
14:34:46  67  	in_group_id IN NUMBER
14:34:46  68  ) AS
14:34:46  69  SPROC_NAME CONSTANT VARCHAR2(16) := 'INITIALIZE_GROUP';
14:34:46  70  -- VARIABLES
14:34:46  71  var_account_id NUMBER;
14:34:46  72  -- EXCEPTIONS
14:34:46  73  BAD_GROUP_ID		EXCEPTION;
14:34:46  74  GROUP_ALREADY_INITIALIZED EXCEPTION;
14:34:46  75  BEGIN
14:34:46  76  
14:34:46  77  	BEGIN
14:34:46  78  	  SELECT
14:34:46  79  	    ACCOUNT.ID into var_account_id
14:34:46  80  	  FROM
14:34:46  81  	    ACCOUNT
14:34:46  82  	  WHERE
14:34:46  83  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:46  84  	  EXCEPTION
14:34:46  85  	    WHEN NO_DATA_FOUND THEN
14:34:46  86  	     RAISE BAD_GROUP_ID;
14:34:46  87  	END;
14:34:46  88  
14:34:46  89  	BEGIN
14:34:46  90  	  INSERT INTO ACCOUNT_LOCK (
14:34:46  91  	    ACCOUNT_ID,
14:34:46  92  	    LOCK_KEY,
14:34:46  93  	    END_DATE,
14:34:46  94  	    CREATED_BY,
14:34:46  95  	    REASON
14:34:46  96  	  ) VALUES (
14:34:46  97  	    var_account_id,
14:34:46  98  	    'initialization key',
14:34:46  99  	    SYSDATE,
14:34:46 100  	    'system',
14:34:46 101  	    'initialization'
14:34:46 102  	  );
14:34:46 103  	  EXCEPTION
14:34:46 104  	    WHEN DUP_VAL_ON_INDEX THEN
14:34:46 105  	      RAISE GROUP_ALREADY_INITIALIZED;
14:34:46 106  	END;
14:34:46 107  
14:34:46 108  EXCEPTION
14:34:46 109  WHEN BAD_GROUP_ID THEN
14:34:46 110  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 111  	  SPROC_NAME, 'No such account with given group id');
14:34:46 112  WHEN GROUP_ALREADY_INITIALIZED THEN
14:34:46 113  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:46 114  	  SPROC_NAME, 'Group already initialized');
14:34:46 115  WHEN OTHERS THEN
14:34:46 116  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 117  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 118  END INITIALIZE_GROUP;
14:34:46 119  */
14:34:46 120  
14:34:46 121  PROCEDURE LOCK_ACCOUNT (
14:34:46 122  	in_group_id    IN NUMBER,
14:34:46 123  	in_lock_key    IN VARCHAR2,
14:34:46 124  	in_seconds_num IN NUMBER,
14:34:46 125  	in_created_by  IN VARCHAR2,
14:34:46 126  	in_reason      IN VARCHAR2
14:34:46 127  ) AS
14:34:46 128  SPROC_NAME CONSTANT VARCHAR2(12) := 'LOCK_ACCOUNT';
14:34:46 129  -- CONSTANTS
14:34:46 130  one_second_interval CONSTANT INTERVAL DAY TO SECOND := INTERVAL '0 00:00:01' DAY TO SECOND;
14:34:46 131  -- VARIABLES
14:34:46 132  var_account_id NUMBER;
14:34:46 133  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:46 134  var_date		DATE := SYSDATE;
14:34:46 135  var_lock_end_date DATE;
14:34:46 136  -- EXCEPTIONS
14:34:46 137  BAD_GROUP_ID   EXCEPTION;
14:34:46 138  ALREADY_LOCKED EXCEPTION;
14:34:46 139  BEGIN
14:34:46 140  
14:34:46 141  	BEGIN
14:34:46 142  	  SELECT
14:34:46 143  	    ACCOUNT.ID into var_account_id
14:34:46 144  	  FROM
14:34:46 145  	    ACCOUNT
14:34:46 146  	  WHERE
14:34:46 147  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:46 148  	  EXCEPTION
14:34:46 149  	    WHEN NO_DATA_FOUND THEN
14:34:46 150  	      RAISE BAD_GROUP_ID;
14:34:46 151  	END;
14:34:46 152  
14:34:46 153  	var_lock_end_date := var_date + ( in_seconds_num * one_second_interval );
14:34:46 154  
14:34:46 155  	BEGIN
14:34:46 156  
14:34:46 157  	  INSERT INTO ACCOUNT_LOCK (
14:34:46 158  	    ACCOUNT_ID,
14:34:46 159  	    LOCK_KEY,
14:34:46 160  	    END_DATE,
14:34:46 161  	    CREATED_BY,
14:34:46 162  	    REASON
14:34:46 163  	  ) VALUES (
14:34:46 164  	    var_account_id,
14:34:46 165  	    in_lock_key,
14:34:46 166  	    var_lock_end_date,
14:34:46 167  	    in_created_by,
14:34:46 168  	    in_reason
14:34:46 169  	  );
14:34:46 170  
14:34:46 171  	  EXCEPTION
14:34:46 172  	    WHEN DUP_VAL_ON_INDEX THEN
14:34:46 173  	      -- This rows was created before... I will try to update it
14:34:46 174  	      BEGIN
14:34:46 175  
14:34:46 176  		UPDATE
14:34:46 177  		  ACCOUNT_LOCK
14:34:46 178  		SET
14:34:46 179  		  ACCOUNT_LOCK.LOCK_KEY = in_lock_key,
14:34:46 180  		  ACCOUNT_LOCK.END_DATE = var_lock_end_date,
14:34:46 181  		  ACCOUNT_LOCK.CREATED_BY = in_created_by,
14:34:46 182  		  ACCOUNT_LOCK.REASON = in_reason
14:34:46 183  		WHERE
14:34:46 184  		  ACCOUNT_LOCK.ACCOUNT_ID = var_account_id
14:34:46 185  		  AND ACCOUNT_LOCK.END_DATE <= var_date;
14:34:46 186  
14:34:46 187  		IF SQL%ROWCOUNT = 0 THEN
14:34:46 188  		  RAISE ALREADY_LOCKED;
14:34:46 189  		END IF;
14:34:46 190  
14:34:46 191  	      END;
14:34:46 192  	END;
14:34:46 193  
14:34:46 194  EXCEPTION
14:34:46 195  WHEN BAD_GROUP_ID THEN
14:34:46 196  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 197  	  SPROC_NAME, 'No such group id');
14:34:46 198  WHEN ALREADY_LOCKED THEN
14:34:46 199  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:46 200  	  SPROC_NAME, 'Account already locked');
14:34:46 201  WHEN OTHERS THEN
14:34:46 202  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 203  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 204  END LOCK_ACCOUNT;
14:34:46 205  
14:34:46 206  /******************************************************************************/
14:34:46 207  
14:34:46 208  PROCEDURE RELEASE_LOCK (
14:34:46 209  	in_group_id IN NUMBER,
14:34:46 210  	in_lock_key IN VARCHAR2
14:34:46 211  ) AS
14:34:46 212  SPROC_NAME CONSTANT VARCHAR2(12) := 'RELEASE_LOCK';
14:34:46 213  -- VARIABLES
14:34:46 214  var_account_id NUMBER;
14:34:46 215  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
14:34:46 216  var_date DATE := SYSDATE;
14:34:46 217  -- EXCEPTIONS
14:34:46 218  BAD_GROUP_ID		EXCEPTION;
14:34:46 219  COULD_NOT_RELEASE_ACCOUNT EXCEPTION;
14:34:46 220  BEGIN
14:34:46 221  
14:34:46 222  	BEGIN
14:34:46 223  	  SELECT
14:34:46 224  	    ACCOUNT.ID into var_account_id
14:34:46 225  	  FROM
14:34:46 226  	    ACCOUNT
14:34:46 227  	  WHERE
14:34:46 228  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:46 229  	  EXCEPTION
14:34:46 230  	    WHEN NO_DATA_FOUND THEN
14:34:46 231  	      RAISE BAD_GROUP_ID;
14:34:46 232  	END;
14:34:46 233  
14:34:46 234  	UPDATE
14:34:46 235  	  ACCOUNT_LOCK
14:34:46 236  	SET
14:34:46 237  	  ACCOUNT_LOCK.END_DATE = var_date
14:34:46 238  	WHERE
14:34:46 239  	  ACCOUNT_LOCK.ACCOUNT_ID = var_account_id
14:34:46 240  	  -- AND ACCOUNT_LOCK.END_DATE > var_date
14:34:46 241  	  AND ACCOUNT_LOCK.LOCK_KEY = in_lock_key;
14:34:46 242  
14:34:46 243  	IF SQL%ROWCOUNT = 0 THEN
14:34:46 244  	  RAISE COULD_NOT_RELEASE_ACCOUNT;
14:34:46 245  	END IF;
14:34:46 246  
14:34:46 247  EXCEPTION
14:34:46 248  WHEN BAD_GROUP_ID THEN
14:34:46 249  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 250  	  SPROC_NAME, 'No such group id');
14:34:46 251  WHEN COULD_NOT_RELEASE_ACCOUNT THEN
14:34:46 252  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:46 253  	  SPROC_NAME, 'Could not release account. Maybe you are not owner of this lock, or lock is expired');
14:34:46 254  WHEN OTHERS THEN
14:34:46 255  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 256  	  SPROC_NAME, 'Unknown error');
14:34:46 257  END RELEASE_LOCK;
14:34:46 258  
14:34:46 259  END PROCS_LOCKING_V18;
14:34:46 260  .
14:34:46 SQL> /

Package body created.

Elapsed: 00:00:00.03
14:34:46 SQL> 
14:34:46 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_OFFER_CHAIN_V18" AS
14:34:46   2  
14:34:46   3  PROCEDURE GET_OFFER_CHAIN_BY_ID (
14:34:46   4  /*
14:34:46   5  Throws exceptions:
14:34:46   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46   8  */
14:34:46   9  	  in_offer_chain_id IN	 NUMBER,
14:34:46  10  	  out_result_set    OUT  SYS_REFCURSOR
14:34:46  11  ) AS
14:34:46  12  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_OFFER_CHAIN_BY_ID';
14:34:46  13  BEGIN
14:34:46  14  
14:34:46  15  	-- Get offer chain informations
14:34:46  16  	OPEN out_result_set FOR
14:34:46  17  	  SELECT
14:34:46  18  	    OC.ID,
14:34:46  19  	    OC.NAME,
14:34:46  20  	    OC.ADOPTABILITY_WINDOW_START_DATE,
14:34:46  21  	    OC.ADOPTABILITY_WINDOW_END_DATE,
14:34:46  22  	    OC.DESCRIPTION,
14:34:46  23  	    OC.IS_GIFT_CERTIFICATE,
14:34:46  24  	    OC.OFFER_CHAIN_STATUS_ID,
14:34:46  25  	    OC.PRODUCT_URI,
14:34:46  26  	    OC.BILLING_SOURCE_ID,
14:34:46  27  	    OC.VENDOR_SOURCE_ID,
14:34:46  28  	    OC.GROUP_ACCOUNT_TYPE_ID,
14:34:46  29  	    DECODE(OC.IS_ADDRESS_REQUIRED,1,'true','false') IS_ADDRESS_REQUIRED
14:34:46  30  	  FROM
14:34:46  31  	    OFFER_CHAIN OC
14:34:46  32  	  WHERE
14:34:46  33  	    OC.ID = in_offer_chain_id
14:34:46  34  	    AND ROWNUM <= 1;
14:34:46  35  
14:34:46  36  EXCEPTION
14:34:46  37  WHEN OTHERS THEN
14:34:46  38  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46  39  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46  40  END GET_OFFER_CHAIN_BY_ID;
14:34:46  41  
14:34:46  42  /******************************************************************************/
14:34:46  43  
14:34:46  44  PROCEDURE GET_OFFER_CHAINS_BY_IDS (
14:34:46  45  /*
14:34:46  46  Throws exceptions:
14:34:46  47  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46  48  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:46  49  */
14:34:46  50  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
14:34:46  51  	out_result_set	   OUT SYS_REFCURSOR
14:34:46  52  ) AS
14:34:46  53  SPROC_NAME CONSTANT VARCHAR2(23) := 'GET_OFFER_CHAINS_BY_IDS';
14:34:46  54  -- EXCEPTIONS
14:34:46  55  BAD_OFFER_CHAINS_IDS EXCEPTION;
14:34:46  56  BEGIN
14:34:46  57  
14:34:46  58  	IF (in_offer_chain_ids IS NULL) THEN
14:34:46  59  	  RAISE BAD_OFFER_CHAINS_IDS;
14:34:46  60  	END IF;
14:34:46  61  
14:34:46  62  	OPEN out_result_set FOR
14:34:46  63  	SELECT
14:34:46  64  	  OCH.ID,
14:34:46  65  	  OCH.NAME,
14:34:46  66  	  OCH.DESCRIPTION,
14:34:46  67  	  OCH.OFFER_CHAIN_STATUS_ID,
14:34:46  68  	  OCH.ADOPTABILITY_WINDOW_START_DATE,
14:34:46  69  	  OCH.ADOPTABILITY_WINDOW_END_DATE,
14:34:46  70  	  OCH.IS_GIFT_CERTIFICATE,
14:34:46  71  	  PROCS_OFFER_CHAIN_V18.CALCULATE_OFFER_CHAIN_AMOUNT(OCH.ID) AS PRICE,
14:34:46  72  	  PROCS_OFFER_CHAIN_V18.IS_OFFER_CHAIN_CANCELABLE(OCH.ID) AS IS_CANCELABLE,
14:34:46  73  	  OCH.VENDOR_SOURCE_ID,
14:34:46  74  	  DECODE(OCH.IS_ADDRESS_REQUIRED,1,'true','false') IS_ADDRESS_REQUIRED
14:34:46  75  	FROM
14:34:46  76  	  OFFER_CHAIN OCH
14:34:46  77  	WHERE
14:34:46  78  	  OCH.ID IN (SELECT * FROM TABLE(in_offer_chain_ids));
14:34:46  79  
14:34:46  80  EXCEPTION
14:34:46  81  WHEN BAD_OFFER_CHAINS_IDS THEN
14:34:46  82  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:46  83  	  SPROC_NAME, 'Invalid offer chains ids');
14:34:46  84  WHEN OTHERS THEN
14:34:46  85  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46  86  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46  87  END GET_OFFER_CHAINS_BY_IDS;
14:34:46  88  
14:34:46  89  /******************************************************************************/
14:34:46  90  
14:34:46  91  PROCEDURE GET_OFFER_CHAINS_PRODUCTS (
14:34:46  92  /*
14:34:46  93  Throws exceptions:
14:34:46  94  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46  95  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:46  96  */
14:34:46  97  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
14:34:46  98  	out_result_set	   OUT SYS_REFCURSOR
14:34:46  99  ) AS
14:34:46 100  SPROC_NAME CONSTANT VARCHAR2(25) := 'GET_OFFER_CHAINS_PRODUCTS';
14:34:46 101  -- EXCEPTIONS
14:34:46 102  BAD_OFFER_CHAINS_IDS EXCEPTION;
14:34:46 103  BEGIN
14:34:46 104  
14:34:46 105  	IF (in_offer_chain_ids IS NULL) THEN
14:34:46 106  	  RAISE BAD_OFFER_CHAINS_IDS;
14:34:46 107  	END IF;
14:34:46 108  
14:34:46 109  	OPEN out_result_set FOR
14:34:46 110  	SELECT
14:34:46 111  	  OOCH.OFFER_CHAIN_ID,
14:34:46 112  	  PO.PRODUCT_ID
14:34:46 113  	FROM
14:34:46 114  	  PRODUCT_OFFERING PO
14:34:46 115  	  INNER JOIN OFFER_PRODUCT_OFFERING OPO ON OPO.PRODUCT_OFFERING_ID = PO.ID
14:34:46 116  	  INNER JOIN OFFER_OFFER_CHAIN OOCH ON OOCH.OFFER_ID = OPO.OFFER_ID
14:34:46 117  	WHERE
14:34:46 118  	  OOCH.OFFER_CHAIN_ID IN (SELECT * FROM TABLE (in_offer_chain_ids));
14:34:46 119  
14:34:46 120  EXCEPTION
14:34:46 121  WHEN BAD_OFFER_CHAINS_IDS THEN
14:34:46 122  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:46 123  	  SPROC_NAME, 'Invalid offer chains ids');
14:34:46 124  WHEN OTHERS THEN
14:34:46 125  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 126  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 127  END GET_OFFER_CHAINS_PRODUCTS;
14:34:46 128  
14:34:46 129  /******************************************************************************/
14:34:46 130  
14:34:46 131  PROCEDURE GET_OFFER_CHAINS_OFFERS (
14:34:46 132  /*
14:34:46 133  Throws exceptions:
14:34:46 134  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 135  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:46 136  */
14:34:46 137  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
14:34:46 138  	out_result_set	   OUT SYS_REFCURSOR
14:34:46 139  ) AS
14:34:46 140  SPROC_NAME CONSTANT VARCHAR2(23) := 'GET_OFFER_CHAINS_OFFERS';
14:34:46 141  -- EXCEPTIONS
14:34:46 142  BAD_OFFER_CHAINS_IDS EXCEPTION;
14:34:46 143  BEGIN
14:34:46 144  
14:34:46 145  	IF (in_offer_chain_ids IS NULL) THEN
14:34:46 146  	  RAISE BAD_OFFER_CHAINS_IDS;
14:34:46 147  	END IF;
14:34:46 148  
14:34:46 149  	OPEN out_result_set FOR
14:34:46 150  	SELECT
14:34:46 151  	  OOCH.OFFER_CHAIN_ID,
14:34:46 152  	  OOCH.OFFER_ID,
14:34:46 153  	  OOCH.INDEX_VALUE,
14:34:46 154  	  OOCH.NUM_RECURRENCES,
14:34:46 155  	  O.ENTITLEMENT_DURATION,
14:34:46 156  	  PROCS_OFFER_CHAIN_V18.CALCULATE_OFFER_AMOUNT(OOCH.OFFER_ID) AS PRICE
14:34:46 157  	FROM
14:34:46 158  	  OFFER O
14:34:46 159  	  INNER JOIN OFFER_OFFER_CHAIN OOCH ON OOCH.OFFER_ID = O.ID
14:34:46 160  	WHERE
14:34:46 161  	  OOCH.OFFER_CHAIN_ID IN (SELECT * FROM TABLE (in_offer_chain_ids));
14:34:46 162  
14:34:46 163  EXCEPTION
14:34:46 164  WHEN BAD_OFFER_CHAINS_IDS THEN
14:34:46 165  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:46 166  	  SPROC_NAME, 'Invalid offer chains ids');
14:34:46 167  WHEN OTHERS THEN
14:34:46 168  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 169  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 170  END GET_OFFER_CHAINS_OFFERS;
14:34:46 171  
14:34:46 172  /******************************************************************************/
14:34:46 173  
14:34:46 174  PROCEDURE GET_OFFER_CHAINS_BY_PRODUCT (
14:34:46 175  /*
14:34:46 176  Throws exceptions (codes):
14:34:46 177  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 178  */
14:34:46 179  	in_product_id  IN  NUMBER,
14:34:46 180  	out_result_set OUT SYS_REFCURSOR
14:34:46 181  )AS
14:34:46 182  -- VARIBLES
14:34:46 183  SPROC_NAME      CONSTANT VARCHAR2(27) := 'GET_OFFER_CHAINS_BY_PRODUCT';
14:34:46 184  temp_product_id NUMBER;
14:34:46 185  
14:34:46 186  -- EXCEPTIONS
14:34:46 187  BAD_PRODUCT_ID EXCEPTION;
14:34:46 188  BEGIN
14:34:46 189  
14:34:46 190  	-- Check that given product exists
14:34:46 191  	BEGIN
14:34:46 192  	  SELECT
14:34:46 193  	    PRODUCT.ID into temp_product_id
14:34:46 194  	  FROM
14:34:46 195  	    PRODUCT
14:34:46 196  	  WHERE
14:34:46 197  	    PRODUCT.ID = in_product_id;
14:34:46 198  	  EXCEPTION
14:34:46 199  	    WHEN NO_DATA_FOUND THEN
14:34:46 200  	      RAISE BAD_PRODUCT_ID;
14:34:46 201  	END;
14:34:46 202  
14:34:46 203  	-- Select all offer chains that contains given product
14:34:46 204  	OPEN out_result_set FOR
14:34:46 205  	SELECT
14:34:46 206  	  OFFER_CHAIN.ID,
14:34:46 207  	  OFFER_CHAIN.NAME,
14:34:46 208  	  OFFER_CHAIN.DESCRIPTION,
14:34:46 209  	  OFFER_CHAIN.ADOPTABILITY_WINDOW_START_DATE,
14:34:46 210  	  OFFER_CHAIN.ADOPTABILITY_WINDOW_END_DATE,
14:34:46 211  	  OFFER_CHAIN.OFFER_CHAIN_STATUS_ID,
14:34:46 212  	  OFFER_CHAIN.IS_GIFT_CERTIFICATE
14:34:46 213  	FROM
14:34:46 214  	  OFFER_CHAIN
14:34:46 215  	WHERE
14:34:46 216  	  OFFER_CHAIN.ID IN (
14:34:46 217  	    SELECT DISTINCT
14:34:46 218  	      OFFER_OFFER_CHAIN.OFFER_CHAIN_ID
14:34:46 219  	    FROM
14:34:46 220  	      OFFER_OFFER_CHAIN
14:34:46 221  	    WHERE
14:34:46 222  	      OFFER_OFFER_CHAIN.OFFER_ID IN (
14:34:46 223  		SELECT DISTINCT
14:34:46 224  		  OFFER_PRODUCT_OFFERING.OFFER_ID
14:34:46 225  		FROM
14:34:46 226  		  OFFER_PRODUCT_OFFERING
14:34:46 227  		WHERE
14:34:46 228  		  OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = in_product_id
14:34:46 229  	      )
14:34:46 230  	  );
14:34:46 231  
14:34:46 232  EXCEPTION
14:34:46 233  WHEN BAD_PRODUCT_ID THEN
14:34:46 234  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 235  	  SPROC_NAME, 'No such product');
14:34:46 236  WHEN OTHERS THEN
14:34:46 237  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 238  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 239  END GET_OFFER_CHAINS_BY_PRODUCT;
14:34:46 240  
14:34:46 241  /******************************************************************************/
14:34:46 242  
14:34:46 243  PROCEDURE GET_OFFER_CHAIN_PRICE (
14:34:46 244  /*
14:34:46 245  Throws exceptions (codes):
14:34:46 246  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 247  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 248  */
14:34:46 249  	in_offer_chain_id IN NUMBER,
14:34:46 250  	out_price	  OUT NUMBER
14:34:46 251  ) AS
14:34:46 252  -- VARIABLES
14:34:46 253  SPROC_NAME	  CONSTANT VARCHAR2(21) := 'GET_OFFER_CHAIN_PRICE';
14:34:46 254  temp_offer_chain_id NUMBER;
14:34:46 255  
14:34:46 256  -- EXCEPTION
14:34:46 257  BAD_OFFER_CHAIN_ID       EXCEPTION;
14:34:46 258  CAN_NOT_CALCULATE_AMOUNT EXCEPTION;
14:34:46 259  EXCEPTION_MESSAGE        VARCHAR2(1024);
14:34:46 260  BEGIN
14:34:46 261  
14:34:46 262  	-- Check that given offer chain exists
14:34:46 263  	BEGIN
14:34:46 264  	  SELECT
14:34:46 265  	    OFFER_CHAIN.ID into temp_offer_chain_id
14:34:46 266  	  FROM
14:34:46 267  	    OFFER_CHAIN
14:34:46 268  	  WHERE
14:34:46 269  	    OFFER_CHAIN.ID = in_offer_chain_id;
14:34:46 270  
14:34:46 271  	  EXCEPTION
14:34:46 272  	  WHEN NO_DATA_FOUND THEN
14:34:46 273  	    RAISE BAD_OFFER_CHAIN_ID;
14:34:46 274  	END;
14:34:46 275  
14:34:46 276  	BEGIN
14:34:46 277  	  out_price := CALCULATE_OFFER_CHAIN_AMOUNT(in_offer_chain_id);
14:34:46 278  	  EXCEPTION
14:34:46 279  	    WHEN OTHERS THEN
14:34:46 280  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:46 281  	      RAISE CAN_NOT_CALCULATE_AMOUNT;
14:34:46 282  	END;
14:34:46 283  
14:34:46 284  EXCEPTION
14:34:46 285  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:46 286  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 287  	  SPROC_NAME, 'Bad offer chain id');
14:34:46 288  WHEN CAN_NOT_CALCULATE_AMOUNT THEN
14:34:46 289  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:46 290  	  SPROC_NAME, 'Caould not calculate offer chain amount', EXCEPTION_MESSAGE);
14:34:46 291  WHEN OTHERS THEN
14:34:46 292  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 293  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 294  END GET_OFFER_CHAIN_PRICE;
14:34:46 295  
14:34:46 296  /******************************************************************************/
14:34:46 297  
14:34:46 298  PROCEDURE GET_FIRST_OFFER(
14:34:46 299  /*
14:34:46 300  Throws exceptions (codes):
14:34:46 301  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 302  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 303  */
14:34:46 304  	in_offer_chain_id IN  NUMBER,
14:34:46 305  	out_offer_id	  OUT NUMBER
14:34:46 306  ) AS
14:34:46 307  SPROC_NAME CONSTANT VARCHAR2(15) := 'GET_FIRST_OFFER';
14:34:46 308  BEGIN
14:34:46 309  	-- Seect first offer in offer chain
14:34:46 310  	SELECT
14:34:46 311  	  OFFER_ID into out_offer_id
14:34:46 312  	FROM (
14:34:46 313  	  SELECT
14:34:46 314  	    OFFER_OFFER_CHAIN.OFFER_ID
14:34:46 315  	  FROM
14:34:46 316  	    OFFER_OFFER_CHAIN
14:34:46 317  	  WHERE
14:34:46 318  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 319  	  ORDER BY
14:34:46 320  	    OFFER_OFFER_CHAIN.INDEX_VALUE ASC
14:34:46 321  	)
14:34:46 322  	WHERE
14:34:46 323  	  ROWNUM <= 1;
14:34:46 324  
14:34:46 325  EXCEPTION
14:34:46 326  WHEN NO_DATA_FOUND THEN
14:34:46 327  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 328  	  SPROC_NAME, 'No such offer chain');
14:34:46 329  WHEN OTHERS THEN
14:34:46 330  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 331  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 332  END GET_FIRST_OFFER;
14:34:46 333  
14:34:46 334  /******************************************************************************/
14:34:46 335  
14:34:46 336  PROCEDURE GET_ACTIVE_OFFER_CHAINS (
14:34:46 337  /*
14:34:46 338  Throws exceptions (codes):
14:34:46 339  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 340  */
14:34:46 341  	out_result_set OUT SYS_REFCURSOR
14:34:46 342  ) AS
14:34:46 343  SPROC_NAME CONSTANT VARCHAR2(23) := 'GET_ACTIVE_OFFER_CHAINS';
14:34:46 344  BEGIN
14:34:46 345  	OPEN out_result_set FOR
14:34:46 346  	SELECT
14:34:46 347  	  OFFER_CHAIN.ID,
14:34:46 348  	  OFFER_CHAIN.NAME,
14:34:46 349  	  OFFER_CHAIN.DESCRIPTION,
14:34:46 350  	  OFFER_CHAIN.ADOPTABILITY_WINDOW_START_DATE,
14:34:46 351  	  OFFER_CHAIN.ADOPTABILITY_WINDOW_END_DATE,
14:34:46 352  	  OFFER_CHAIN.OFFER_CHAIN_STATUS_ID,
14:34:46 353  	  OFFER_CHAIN.IS_GIFT_CERTIFICATE,
14:34:46 354  	  PROCS_OFFER_CHAIN_V18.IS_OFFER_CHAIN_CANCELABLE(OFFER_CHAIN.ID) AS "IS_CANCELABLE",
14:34:46 355  	  PRODUCT_OFFERING.PRODUCT_ID
14:34:46 356  	FROM
14:34:46 357  	  OFFER_CHAIN,
14:34:46 358  	  OFFER_OFFER_CHAIN,
14:34:46 359  	  OFFER_PRODUCT_OFFERING,
14:34:46 360  	  PRODUCT_OFFERING
14:34:46 361  	WHERE
14:34:46 362  	  OFFER_CHAIN.ID = OFFER_OFFER_CHAIN.OFFER_CHAIN_ID
14:34:46 363  	  and OFFER_OFFER_CHAIN.OFFER_ID = OFFER_PRODUCT_OFFERING.OFFER_ID
14:34:46 364  	  and OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
14:34:46 365  	  and OFFER_CHAIN.OFFER_CHAIN_STATUS_ID = GLOBAL_STATUSES_V18.OFFER_CHAIN_ACTIVE;
14:34:46 366  
14:34:46 367  EXCEPTION
14:34:46 368  WHEN OTHERS THEN
14:34:46 369  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 370  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 371  END GET_ACTIVE_OFFER_CHAINS;
14:34:46 372  
14:34:46 373  /******************************************************************************/
14:34:46 374  
14:34:46 375  PROCEDURE GET_OFFER_CHAIN_PRODUCTS (
14:34:46 376  /*
14:34:46 377  Throws exceptions (codes):
14:34:46 378  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 379  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 380  */
14:34:46 381  	in_offer_chain_id IN NUMBER,
14:34:46 382  	out_result_set	  OUT SYS_REFCURSOR
14:34:46 383  ) AS
14:34:46 384  -- VARIABLES
14:34:46 385  SPROC_NAME	  CONSTANT VARCHAR2(24) := 'GET_OFFER_CHAIN_PRODUCTS';
14:34:46 386  temp_offer_chain_id NUMBER;
14:34:46 387  
14:34:46 388  -- EXCEPTIONS
14:34:46 389  BAD_OFFER_CHAIN EXCEPTION;
14:34:46 390  BEGIN
14:34:46 391  
14:34:46 392  	-- Check that offer chain exists
14:34:46 393  	BEGIN
14:34:46 394  	  SELECT
14:34:46 395  	    OFFER_CHAIN.ID into temp_offer_chain_id
14:34:46 396  	  FROM
14:34:46 397  	    OFFER_CHAIN
14:34:46 398  	  WHERE
14:34:46 399  	    OFFER_CHAIN.ID = in_offer_chain_id
14:34:46 400  	    AND ROWNUM <= 1;
14:34:46 401  
14:34:46 402  	  EXCEPTION
14:34:46 403  	    WHEN OTHERS THEN
14:34:46 404  	      RAISE BAD_OFFER_CHAIN;
14:34:46 405  	END;
14:34:46 406  
14:34:46 407  	-- Select all products for given offer chain
14:34:46 408  	OPEN out_result_set FOR
14:34:46 409  	SELECT DISTINCT
14:34:46 410  	  PRODUCT_OFFERING.PRODUCT_ID
14:34:46 411  	FROM
14:34:46 412  	  PRODUCT_OFFERING
14:34:46 413  	WHERE
14:34:46 414  	  PRODUCT_OFFERING.ID IN (
14:34:46 415  	    SELECT DISTINCT
14:34:46 416  	      OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
14:34:46 417  	    FROM
14:34:46 418  	      OFFER_PRODUCT_OFFERING
14:34:46 419  	    WHERE
14:34:46 420  	      OFFER_PRODUCT_OFFERING.OFFER_ID IN (
14:34:46 421  		SELECT
14:34:46 422  		  OFFER_OFFER_CHAIN.OFFER_ID
14:34:46 423  		FROM
14:34:46 424  		  OFFER_OFFER_CHAIN
14:34:46 425  		WHERE
14:34:46 426  		  OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 427  	      )
14:34:46 428  	  );
14:34:46 429  
14:34:46 430  EXCEPTION
14:34:46 431  WHEN BAD_OFFER_CHAIN THEN
14:34:46 432  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 433  	  SPROC_NAME, 'No such offer chain');
14:34:46 434  WHEN OTHERS THEN
14:34:46 435  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 436  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 437  END GET_OFFER_CHAIN_PRODUCTS;
14:34:46 438  
14:34:46 439  /******************************************************************************/
14:34:46 440  
14:34:46 441  FUNCTION CALCULATE_OFFER_CHAIN_END_DATE (
14:34:46 442  /*
14:34:46 443  Throws exceptions (codes):
14:34:46 444  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 445  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 446  */
14:34:46 447  	in_offer_chain_id	  IN NUMBER,
14:34:46 448  	in_offer_chain_start_date IN DATE
14:34:46 449  ) RETURN DATE AS
14:34:46 450  -- VARIABLES
14:34:46 451  SPROC_NAME	     CONSTANT VARCHAR2(30) := 'CALCULATE_OFFER_CHAIN_END_DATE';
14:34:46 452  temp_offer_chain_id    NUMBER;
14:34:46 453  var_offer_chain_length NUMBER;
14:34:46 454  var_offer_duration     VARCHAR2(30);
14:34:46 455  var_offer_recurrences  NUMBER;
14:34:46 456  var_end_date	     DATE;
14:34:46 457  
14:34:46 458  var_offer_ym_interval INTERVAL YEAR TO MONTH;
14:34:46 459  var_offer_ds_interval INTERVAL DAY(3) TO SECOND;
14:34:46 460  var_offer_years	    NUMBER;
14:34:46 461  var_offer_months	    NUMBER;
14:34:46 462  var_offer_days	    NUMBER;
14:34:46 463  var_infinity_offers_count NUMBER;
14:34:46 464  
14:34:46 465  var_offers_set SYS_REFCURSOR;
14:34:46 466  
14:34:46 467  -- EXCEPTIONS
14:34:46 468  BAD_OFFER_CHAIN_ID EXCEPTION;
14:34:46 469  BEGIN
14:34:46 470  
14:34:46 471  	var_end_date := in_offer_chain_start_date;
14:34:46 472  
14:34:46 473  	-- Check that offer chain exists
14:34:46 474  	BEGIN
14:34:46 475  	  SELECT
14:34:46 476  	    OFFER_CHAIN.ID into temp_offer_chain_id
14:34:46 477  	  FROM
14:34:46 478  	    OFFER_CHAIN
14:34:46 479  	  WHERE
14:34:46 480  	    OFFER_CHAIN.ID = in_offer_chain_id;
14:34:46 481  	  EXCEPTION
14:34:46 482  	    WHEN NO_DATA_FOUND
14:34:46 483  	      THEN RAISE BAD_OFFER_CHAIN_ID;
14:34:46 484  	END;
14:34:46 485  
14:34:46 486  	SELECT
14:34:46 487  	  COUNT(*) into var_infinity_offers_count
14:34:46 488  	FROM
14:34:46 489  	  OFFER_OFFER_CHAIN
14:34:46 490  	WHERE
14:34:46 491  	  OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 492  	  AND OFFER_OFFER_CHAIN.NUM_RECURRENCES = GLOBAL_ENUMS_V18.OFFER_REC_INFINITY;
14:34:46 493  
14:34:46 494  	IF var_infinity_offers_count > 0 THEN
14:34:46 495  	  -- Offer chain contains offers with infinity num of recurrences
14:34:46 496  	  RETURN NULL;
14:34:46 497  	END IF;
14:34:46 498  
14:34:46 499  	-- Select offers durations
14:34:46 500  	OPEN var_offers_set FOR
14:34:46 501  	SELECT
14:34:46 502  	  OFFER.ENTITLEMENT_DURATION,
14:34:46 503  	  OFFER_OFFER_CHAIN.NUM_RECURRENCES
14:34:46 504  	FROM
14:34:46 505  	  OFFER_OFFER_CHAIN
14:34:46 506  	  INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
14:34:46 507  	WHERE
14:34:46 508  	  OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id;
14:34:46 509  
14:34:46 510  	-- Calculate sum of offers durations
14:34:46 511  	LOOP
14:34:46 512  	  FETCH var_offers_set INTO var_offer_duration, var_offer_recurrences;
14:34:46 513  	  EXIT WHEN var_offers_set%NOTFOUND;
14:34:46 514  	  PROCS_COMMON_V18.ISO8601DURATION_TO_INTERVALS(var_offer_duration, var_offer_years, var_offer_months, var_offer_days);
14:34:46 515  	  var_offer_ym_interval := var_offer_years||'-'||var_offer_months;
14:34:46 516  	  var_offer_ds_interval := var_offer_days||' 0:0:0';
14:34:46 517  	  var_end_date := var_end_date + ( var_offer_ym_interval * ( var_offer_recurrences + 1) ) + ( var_offer_ds_interval * ( var_offer_recurrences + 1) );
14:34:46 518  	END LOOP;
14:34:46 519  
14:34:46 520  	RETURN var_end_date;
14:34:46 521  
14:34:46 522  EXCEPTION
14:34:46 523  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:46 524  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 525  	  SPROC_NAME, 'No such offer chain');
14:34:46 526  WHEN OTHERS THEN
14:34:46 527  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 528  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 529  END CALCULATE_OFFER_CHAIN_END_DATE;
14:34:46 530  
14:34:46 531  /******************************************************************************/
14:34:46 532  
14:34:46 533  FUNCTION CALCULATE_OFFER_AMOUNT (
14:34:46 534  	in_offer_id IN NUMBER
14:34:46 535  ) RETURN NUMBER AS
14:34:46 536  -- VARIABLES
14:34:46 537  SPROC_NAME    CONSTANT VARCHAR2(22) := 'CALCULATE_OFFER_AMOUNT';
14:34:46 538  temp_offer_id NUMBER;
14:34:46 539  
14:34:46 540  var_product_offering_set	    SYS_REFCURSOR;
14:34:46 541  var_product_offering_id	    NUMBER;
14:34:46 542  var_product_offering_price    NUMBER(10,6);
14:34:46 543  var_product_offering_t_amount NUMBER(10,6);
14:34:46 544  var_product_offering_quantity NUMBER;
14:34:46 545  
14:34:46 546  var_total_amount NUMBER(10,6);
14:34:46 547  var_final_amount NUMBER(10,2);
14:34:46 548  
14:34:46 549  var_percent_discount NUMBER(10,2);
14:34:46 550  var_fixed_discount NUMBER(10,6);
14:34:46 551  
14:34:46 552  -- EXCEPTIONS
14:34:46 553  BAD_OFFER_ID EXCEPTION;
14:34:46 554  BEGIN
14:34:46 555  
14:34:46 556  	BEGIN
14:34:46 557  	  SELECT
14:34:46 558  	    OFFER.ID into temp_offer_id
14:34:46 559  	  FROM
14:34:46 560  	    OFFER
14:34:46 561  	  WHERE
14:34:46 562  	    OFFER.ID = in_offer_id;
14:34:46 563  	  EXCEPTION
14:34:46 564  	    WHEN NO_DATA_FOUND THEN
14:34:46 565  	      RAISE BAD_OFFER_ID;
14:34:46 566  	END;
14:34:46 567  
14:34:46 568  	OPEN var_product_offering_set FOR
14:34:46 569  	SELECT
14:34:46 570  	  OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID,
14:34:46 571  	  PRODUCT_OFFERING.UNIT_PRICE,
14:34:46 572  	  PRODUCT_OFFERING.QUANTITY
14:34:46 573  	FROM
14:34:46 574  	  OFFER_PRODUCT_OFFERING
14:34:46 575  	  INNER JOIN PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
14:34:46 576  	WHERE
14:34:46 577  	  OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id;
14:34:46 578  
14:34:46 579  	var_total_amount := 0;
14:34:46 580  
14:34:46 581  	LOOP
14:34:46 582  	  FETCH var_product_offering_set into
14:34:46 583  	    var_product_offering_id,
14:34:46 584  	    var_product_offering_price,
14:34:46 585  	    var_product_offering_quantity;
14:34:46 586  	  EXIT WHEN var_product_offering_set%NOTFOUND;
14:34:46 587  
14:34:46 588  	  SELECT
14:34:46 589  	    SUM(DISCOUNT.FIXED_AMOUNT) into var_fixed_discount
14:34:46 590  	  FROM
14:34:46 591  	    DISCOUNT_PRODUCT_OFFERING
14:34:46 592  	    INNER JOIN DISCOUNT ON DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID = DISCOUNT.ID
14:34:46 593  	  WHERE
14:34:46 594  	    DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = var_product_offering_id
14:34:46 595  	    AND DISCOUNT.FIXED_AMOUNT IS NOT NULL;
14:34:46 596  
14:34:46 597  	  SELECT
14:34:46 598  	    SUM(DISCOUNT.PERCENT_AMOUNT) into var_percent_discount
14:34:46 599  	  FROM
14:34:46 600  	    DISCOUNT_PRODUCT_OFFERING
14:34:46 601  	    INNER JOIN DISCOUNT ON DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID = DISCOUNT.ID
14:34:46 602  	  WHERE
14:34:46 603  	    DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = var_product_offering_id
14:34:46 604  	    AND DISCOUNT.PERCENT_AMOUNT IS NOT NULL;
14:34:46 605  
14:34:46 606  	  var_product_offering_t_amount := var_product_offering_price * var_product_offering_quantity;
14:34:46 607  
14:34:46 608  	  IF var_percent_discount IS NOT NULL THEN
14:34:46 609  	    var_product_offering_t_amount := var_product_offering_t_amount - ( var_product_offering_t_amount * var_percent_discount / 100 );
14:34:46 610  	  END IF;
14:34:46 611  
14:34:46 612  	  IF var_fixed_discount IS NOT NULL THEN
14:34:46 613  	    var_product_offering_t_amount := var_product_offering_t_amount - var_fixed_discount;
14:34:46 614  	  END IF;
14:34:46 615  
14:34:46 616  	  var_total_amount := var_total_amount + var_product_offering_t_amount;
14:34:46 617  	END LOOP;
14:34:46 618  	var_final_amount := var_total_amount;
14:34:46 619  	RETURN var_final_amount;
14:34:46 620  
14:34:46 621  EXCEPTION
14:34:46 622  WHEN BAD_OFFER_ID THEN
14:34:46 623  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 624  	  SPROC_NAME, 'No such offer');
14:34:46 625  WHEN OTHERS THEN
14:34:46 626  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 627  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 628  END CALCULATE_OFFER_AMOUNT;
14:34:46 629  
14:34:46 630  /******************************************************************************/
14:34:46 631  
14:34:46 632  FUNCTION CALCULATE_OFFER_CHAIN_AMOUNT (
14:34:46 633  	in_offer_chain_id IN NUMBER
14:34:46 634  ) RETURN NUMBER AS
14:34:46 635  -- VARIABLES
14:34:46 636  SPROC_NAME	     CONSTANT VARCHAR2(28) := 'CALCULATE_OFFER_CHAIN_AMOUNT';
14:34:46 637  temp_offer_chain_id    NUMBER;
14:34:46 638  var_first_offer_id     NUMBER;
14:34:46 639  -- EXCEPTIONS
14:34:46 640  BAD_OFFER_CHAIN_ID      EXCEPTION;
14:34:46 641  CAN_NOT_GET_FIRST_OFFER EXCEPTION;
14:34:46 642  EXCEPTION_MESSAGE       VARCHAR2(1024);
14:34:46 643  BEGIN
14:34:46 644  
14:34:46 645  	BEGIN
14:34:46 646  	  SELECT
14:34:46 647  	    OFFER_CHAIN.ID into temp_offer_chain_id
14:34:46 648  	  FROM
14:34:46 649  	    OFFER_CHAIN
14:34:46 650  	  WHERE
14:34:46 651  	    OFFER_CHAIN.ID = in_offer_chain_id;
14:34:46 652  	  EXCEPTION
14:34:46 653  	    WHEN NO_DATA_FOUND THEN
14:34:46 654  	      RAISE BAD_OFFER_CHAIN_ID;
14:34:46 655  	END;
14:34:46 656  
14:34:46 657  	BEGIN
14:34:46 658  	  PROCS_OFFER_CHAIN_V18.GET_FIRST_OFFER(
14:34:46 659  	    in_offer_chain_id => in_offer_chain_id,
14:34:46 660  	    out_offer_id      => var_first_offer_id
14:34:46 661  	  );
14:34:46 662  	  EXCEPTION
14:34:46 663  	    WHEN OTHERS THEN
14:34:46 664  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:46 665  	      RAISE CAN_NOT_GET_FIRST_OFFER;
14:34:46 666  	END;
14:34:46 667  
14:34:46 668  	RETURN CALCULATE_OFFER_AMOUNT(var_first_offer_id);
14:34:46 669  
14:34:46 670  EXCEPTION
14:34:46 671  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:46 672  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 673  	  SPROC_NAME, 'No such offer chain');
14:34:46 674  WHEN CAN_NOT_GET_FIRST_OFFER THEN
14:34:46 675  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 676  	  SPROC_NAME, 'Could not find first offer', EXCEPTION_MESSAGE);
14:34:46 677  WHEN OTHERS THEN
14:34:46 678  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 679  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 680  END CALCULATE_OFFER_CHAIN_AMOUNT;
14:34:46 681  
14:34:46 682  /******************************************************************************/
14:34:46 683  
14:34:46 684  FUNCTION GET_FIRST_OFFER_INDEX (
14:34:46 685  	in_offer_chain_id IN NUMBER
14:34:46 686  ) RETURN NUMBER AS
14:34:46 687  -- VARIABLES
14:34:46 688  SPROC_NAME	    CONSTANT VARCHAR2(21) := 'GET_FIRST_OFFER_INDEX';
14:34:46 689  var_first_offer_index NUMBER;
14:34:46 690  BEGIN
14:34:46 691  
14:34:46 692  	SELECT
14:34:46 693  	  INDEX_VALUE into var_first_offer_index
14:34:46 694  	FROM (
14:34:46 695  	  SELECT
14:34:46 696  	    OFFER_OFFER_CHAIN.INDEX_VALUE
14:34:46 697  	  FROM
14:34:46 698  	    OFFER_OFFER_CHAIN
14:34:46 699  	  WHERE
14:34:46 700  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 701  	  ORDER BY
14:34:46 702  	    OFFER_OFFER_CHAIN.INDEX_VALUE ASC
14:34:46 703  	)
14:34:46 704  	WHERE
14:34:46 705  	  ROWNUM <= 1;
14:34:46 706  
14:34:46 707  	RETURN var_first_offer_index;
14:34:46 708  
14:34:46 709  EXCEPTION
14:34:46 710  WHEN NO_DATA_FOUND THEN
14:34:46 711  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 712  	  SPROC_NAME, 'No such offer chain');
14:34:46 713  WHEN OTHERS THEN
14:34:46 714  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 715  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 716  END GET_FIRST_OFFER_INDEX;
14:34:46 717  
14:34:46 718  /******************************************************************************/
14:34:46 719  
14:34:46 720  FUNCTION GET_NEXT_OFFER_INDEX (
14:34:46 721  /*
14:34:46 722  NULL, if not exists
14:34:46 723  */
14:34:46 724  	in_offer_chain_id	     IN NUMBER,
14:34:46 725  	in_offer_chain_current_index IN NUMBER
14:34:46 726  ) RETURN NUMBER AS
14:34:46 727  -- VARIABLES
14:34:46 728  SPROC_NAME		     CONSTANT VARCHAR2(20) := 'GET_NEXT_OFFER_INDEX';
14:34:46 729  temp_offer_chain_id	     NUMBER;
14:34:46 730  temp_offer_chain_current_index NUMBER;
14:34:46 731  var_result		     NUMBER;
14:34:46 732  -- EXCEPTIONS
14:34:46 733  BAD_OFFER_CHAIN_ID      EXCEPTION;
14:34:46 734  BAD_CURRENT_INDEX_VALUE EXCEPTION;
14:34:46 735  BEGIN
14:34:46 736  
14:34:46 737  	-- Check that offer chain exists
14:34:46 738  	BEGIN
14:34:46 739  	  SELECT
14:34:46 740  	    OFFER_CHAIN.ID into temp_offer_chain_id
14:34:46 741  	  FROM
14:34:46 742  	    OFFER_CHAIN
14:34:46 743  	  WHERE
14:34:46 744  	    OFFER_CHAIN.ID = in_offer_chain_id;
14:34:46 745  	  EXCEPTION
14:34:46 746  	    WHEN NO_DATA_FOUND THEN
14:34:46 747  	      RAISE BAD_OFFER_CHAIN_ID;
14:34:46 748  	END;
14:34:46 749  
14:34:46 750  	-- Check that current offer index exists
14:34:46 751  	BEGIN
14:34:46 752  	  SELECT
14:34:46 753  	    OFFER_OFFER_CHAIN.INDEX_VALUE into temp_offer_chain_current_index
14:34:46 754  	  FROM
14:34:46 755  	    OFFER_OFFER_CHAIN
14:34:46 756  	  WHERE
14:34:46 757  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 758  	    AND OFFER_OFFER_CHAIN.INDEX_VALUE = in_offer_chain_current_index
14:34:46 759  	    -- TODO: delete next line
14:34:46 760  	    AND ROWNUM <= 1;
14:34:46 761  	  EXCEPTION
14:34:46 762  	    WHEN NO_DATA_FOUND THEN
14:34:46 763  	      RAISE BAD_CURRENT_INDEX_VALUE;
14:34:46 764  	END;
14:34:46 765  
14:34:46 766  	-- Get next offer index
14:34:46 767  	BEGIN
14:34:46 768  	  SELECT
14:34:46 769  	    INDEX_VALUE into var_result
14:34:46 770  	  FROM (
14:34:46 771  	    SELECT
14:34:46 772  	      OFFER_OFFER_CHAIN.INDEX_VALUE
14:34:46 773  	    FROM
14:34:46 774  	      OFFER_OFFER_CHAIN
14:34:46 775  	    WHERE
14:34:46 776  	      OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 777  	      AND OFFER_OFFER_CHAIN.INDEX_VALUE > in_offer_chain_current_index
14:34:46 778  	    ORDER BY
14:34:46 779  	      OFFER_OFFER_CHAIN.INDEX_VALUE ASC
14:34:46 780  	  )
14:34:46 781  	  WHERE
14:34:46 782  	    ROWNUM <= 1;
14:34:46 783  	  EXCEPTION
14:34:46 784  	    WHEN NO_DATA_FOUND THEN
14:34:46 785  	      var_result := NULL;
14:34:46 786  	END;
14:34:46 787  
14:34:46 788  	RETURN var_result;
14:34:46 789  
14:34:46 790  EXCEPTION
14:34:46 791  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:46 792  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 793  	  SPROC_NAME, 'No such offer chain');
14:34:46 794  WHEN BAD_CURRENT_INDEX_VALUE THEN
14:34:46 795  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:46 796  	  SPROC_NAME, 'Bad current index value');
14:34:46 797  WHEN OTHERS THEN
14:34:46 798  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 799  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 800  END GET_NEXT_OFFER_INDEX;
14:34:46 801  
14:34:46 802  /******************************************************************************/
14:34:46 803  
14:34:46 804  PROCEDURE P_GET_NEXT_OFFER_INDEX (
14:34:46 805  	in_offer_chain_id	     IN NUMBER,
14:34:46 806  	in_offer_chain_current_index IN NUMBER,
14:34:46 807  	out_next_offer_index	     OUT NUMBER
14:34:46 808  ) AS
14:34:46 809  BEGIN
14:34:46 810  	out_next_offer_index := GET_NEXT_OFFER_INDEX(
14:34:46 811  	  in_offer_chain_id,
14:34:46 812  	  in_offer_chain_current_index
14:34:46 813  	);
14:34:46 814  END P_GET_NEXT_OFFER_INDEX;
14:34:46 815  
14:34:46 816  /******************************************************************************/
14:34:46 817  
14:34:46 818  PROCEDURE GET_NEXT_OFFER_INDEX_BY_LCNS (
14:34:46 819  	in_license_id		     IN NUMBER,
14:34:46 820  	in_offer_chain_current_index IN NUMBER,
14:34:46 821  	out_next_offer_index	     OUT NUMBER
14:34:46 822  ) AS
14:34:46 823  -- VARIABLES
14:34:46 824  SPROC_NAME	 CONSTANT VARCHAR2(28) := 'GET_NEXT_OFFER_INDEX_BY_LCNS';
14:34:46 825  var_offer_chain_id NUMBER;
14:34:46 826  -- EXCEPTIONS
14:34:46 827  BAD_LICENSE_ID		   EXCEPTION;
14:34:46 828  CAN_NOT_GET_NEXT_OFFER_INDEX EXCEPTION;
14:34:46 829  EXCEPTION_MESSAGE 	   VARCHAR2(1024);
14:34:46 830  BEGIN
14:34:46 831  
14:34:46 832  	BEGIN
14:34:46 833  	  SELECT
14:34:46 834  	    SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain_id
14:34:46 835  	  FROM
14:34:46 836  	    SUBSCRIPTION
14:34:46 837  	  WHERE
14:34:46 838  	    SUBSCRIPTION.ID = (
14:34:46 839  	      SELECT
14:34:46 840  		LICENSE.SUBSCRIPTION_ID
14:34:46 841  	      FROM
14:34:46 842  		LICENSE
14:34:46 843  	      WHERE
14:34:46 844  		LICENSE.ID = in_license_id
14:34:46 845  	    );
14:34:46 846  	  EXCEPTION
14:34:46 847  	    WHEN NO_DATA_FOUND THEN
14:34:46 848  	      RAISE BAD_LICENSE_ID;
14:34:46 849  	END;
14:34:46 850  
14:34:46 851  	BEGIN
14:34:46 852  	  out_next_offer_index := GET_NEXT_OFFER_INDEX(
14:34:46 853  	    var_offer_chain_id,
14:34:46 854  	    in_offer_chain_current_index
14:34:46 855  	  );
14:34:46 856  	  EXCEPTION
14:34:46 857  	    WHEN OTHERS THEN
14:34:46 858  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:46 859  	      RAISE CAN_NOT_GET_NEXT_OFFER_INDEX;
14:34:46 860  	END;
14:34:46 861  
14:34:46 862  EXCEPTION
14:34:46 863  WHEN BAD_LICENSE_ID THEN
14:34:46 864  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 865  	  SPROC_NAME, 'No such license');
14:34:46 866  WHEN CAN_NOT_GET_NEXT_OFFER_INDEX THEN
14:34:46 867  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:46 868  	  SPROC_NAME, 'Could not get next offer index', EXCEPTION_MESSAGE);
14:34:46 869  WHEN OTHERS THEN
14:34:46 870  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 871  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 872  END GET_NEXT_OFFER_INDEX_BY_LCNS;
14:34:46 873  
14:34:46 874  /******************************************************************************/
14:34:46 875  
14:34:46 876  FUNCTION IS_OFFER_INDEX_EXISTS (
14:34:46 877  /*
14:34:46 878  GLOBAL_CONSTANTS_V18.TRUE - exists
14:34:46 879  GLOBAL_CONSTANTS_V18.FALSE - not exists
14:34:46 880  */
14:34:46 881  	in_offer_chain_id	   IN NUMBER,
14:34:46 882  	in_offer_chain_offer_index IN NUMBER
14:34:46 883  ) RETURN NUMBER AS
14:34:46 884  -- VARIABLES
14:34:46 885  SPROC_NAME CONSTANT VARCHAR2(21) := 'IS_OFFER_INDEX_EXISTS';
14:34:46 886  temp_count NUMBER;
14:34:46 887  BEGIN
14:34:46 888  
14:34:46 889  	SELECT
14:34:46 890  	  COUNT(*) into temp_count
14:34:46 891  	FROM
14:34:46 892  	  OFFER_OFFER_CHAIN
14:34:46 893  	WHERE
14:34:46 894  	  OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 895  	  AND OFFER_OFFER_CHAIN.INDEX_VALUE = in_offer_chain_offer_index;
14:34:46 896  
14:34:46 897  	IF temp_count > 0 THEN
14:34:46 898  	  RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:46 899  	ELSE
14:34:46 900  	  RETURN GLOBAL_CONSTANTS_V18.FALSE;
14:34:46 901  	END IF;
14:34:46 902  
14:34:46 903  EXCEPTION
14:34:46 904  WHEN OTHERS THEN
14:34:46 905  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 906  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 907  END IS_OFFER_INDEX_EXISTS;
14:34:46 908  
14:34:46 909  /******************************************************************************/
14:34:46 910  
14:34:46 911  PROCEDURE GET_OFFER_LENGTH (
14:34:46 912  	in_offer_id IN NUMBER,
14:34:46 913  	out_years   OUT NUMBER,
14:34:46 914  	out_months  OUT NUMBER,
14:34:46 915  	out_days    OUT NUMBER
14:34:46 916  ) AS
14:34:46 917  -- VARIABLES
14:34:46 918  var_offer_duration VARCHAR2(30);
14:34:46 919  SPROC_NAME	 CONSTANT VARCHAR2(16) := 'GET_OFFER_LENGTH';
14:34:46 920  -- EXCEPTIONS
14:34:46 921  BAD_OFFER_ID	     EXCEPTION;
14:34:46 922  CAN_NOT_PARSE_DURATION EXCEPTION;
14:34:46 923  EXCEPTION_MESSAGE       VARCHAR2(1024);
14:34:46 924  BEGIN
14:34:46 925  
14:34:46 926  	BEGIN
14:34:46 927  	  SELECT
14:34:46 928  	    OFFER.ENTITLEMENT_DURATION into var_offer_duration
14:34:46 929  	  FROM
14:34:46 930  	    OFFER
14:34:46 931  	  WHERE
14:34:46 932  	    OFFER.ID = in_offer_id;
14:34:46 933  	  EXCEPTION
14:34:46 934  	    WHEN NO_DATA_FOUND THEN
14:34:46 935  	      RAISE BAD_OFFER_ID;
14:34:46 936  	END;
14:34:46 937  
14:34:46 938  	BEGIN
14:34:46 939  	  PROCS_COMMON_V18.ISO8601DURATION_TO_INTERVALS(
14:34:46 940  	    var_offer_duration,
14:34:46 941  	    out_years,
14:34:46 942  	    out_months,
14:34:46 943  	    out_days
14:34:46 944  	  );
14:34:46 945  	  EXCEPTION
14:34:46 946  	    WHEN OTHERS THEN
14:34:46 947  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:46 948  	      RAISE CAN_NOT_PARSE_DURATION;
14:34:46 949  	END;
14:34:46 950  
14:34:46 951  EXCEPTION
14:34:46 952  WHEN BAD_OFFER_ID THEN
14:34:46 953  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 954  	  SPROC_NAME, 'No such offer');
14:34:46 955  WHEN CAN_NOT_PARSE_DURATION THEN
14:34:46 956  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:46 957  	  SPROC_NAME, 'Can not parse offer duration', EXCEPTION_MESSAGE);
14:34:46 958  WHEN OTHERS THEN
14:34:46 959  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 960  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 961  END GET_OFFER_LENGTH;
14:34:46 962  
14:34:46 963  /******************************************************************************/
14:34:46 964  
14:34:46 965  PROCEDURE GET_OFFER_LENGTH_IN_DAYS (
14:34:46 966  	in_offer_id   IN NUMBER,
14:34:46 967  	in_start_date IN DATE DEFAULT SYSDATE,
14:34:46 968  	out_days      OUT NUMBER
14:34:46 969  ) AS
14:34:46 970  SPROC_NAME CONSTANT VARCHAR2(24) := 'GET_OFFER_LENGTH_IN_DAYS';
14:34:46 971  -- VARIABLES
14:34:46 972  var_offer_duration VARCHAR2(30);
14:34:46 973  var_offer_years	 NUMBER;
14:34:46 974  var_offer_months	 NUMBER;
14:34:46 975  var_offer_days	 NUMBER;
14:34:46 976  var_offer_end_date DATE;
14:34:46 977  -- EXCEPTIONS
14:34:46 978  BAD_OFFER_ID EXCEPTION;
14:34:46 979  BEGIN
14:34:46 980  
14:34:46 981  	BEGIN
14:34:46 982  	  SELECT
14:34:46 983  	    OFFER.ENTITLEMENT_DURATION into var_offer_duration
14:34:46 984  	  FROM
14:34:46 985  	    OFFER
14:34:46 986  	  WHERE
14:34:46 987  	    OFFER.ID = in_offer_id;
14:34:46 988  	  EXCEPTION
14:34:46 989  	    WHEN NO_DATA_FOUND THEN
14:34:46 990  	      RAISE BAD_OFFER_ID;
14:34:46 991  	END;
14:34:46 992  
14:34:46 993  	PROCS_COMMON_V18.ISO8601DURATION_TO_INTERVALS (
14:34:46 994  	  var_offer_duration,
14:34:46 995  	  var_offer_years,
14:34:46 996  	  var_offer_months,
14:34:46 997  	  var_offer_days
14:34:46 998  	);
14:34:46 999  
14:34:46 1000  	 var_offer_end_date := ( ( in_start_date
14:34:46 1001  	   + GLOBAL_CONSTANTS_V18.ONE_DAY_INTERVAL * var_offer_days )
14:34:46 1002  	   + GLOBAL_CONSTANTS_V18.ONE_MONTH_INTERVAL * var_offer_months )
14:34:46 1003  	   + GLOBAL_CONSTANTS_V18.ONE_YEAR_INTERVAL * var_offer_years;
14:34:46 1004  
14:34:46 1005  	 out_days := var_offer_end_date - in_start_date;
14:34:46 1006  
14:34:46 1007  EXCEPTION
14:34:46 1008  WHEN BAD_OFFER_ID THEN
14:34:46 1009  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1010  	   SPROC_NAME, 'No such offer');
14:34:46 1011  WHEN OTHERS THEN
14:34:46 1012  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1013  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1014  END GET_OFFER_LENGTH_IN_DAYS;
14:34:46 1015  
14:34:46 1016  /******************************************************************************/
14:34:46 1017  
14:34:46 1018  PROCEDURE GET_OFFER_PRODUCTS (
14:34:46 1019  /*
14:34:46 1020  Throws exceptions (codes):
14:34:46 1021  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 1022  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1023  */
14:34:46 1024  	 in_offer_id	IN NUMBER,
14:34:46 1025  	 out_result_set OUT SYS_REFCURSOR
14:34:46 1026  ) AS
14:34:46 1027  -- VARIABLES
14:34:46 1028  SPROC_NAME     CONSTANT VARCHAR2(18) := 'GET_OFFER_PRODUCTS';
14:34:46 1029  temp_offerr_id NUMBER;
14:34:46 1030  -- EXCEPTIONS
14:34:46 1031  BAD_OFFER_ID EXCEPTION;
14:34:46 1032  BEGIN
14:34:46 1033  
14:34:46 1034  	 BEGIN
14:34:46 1035  	   SELECT
14:34:46 1036  	     OFFER.ID into temp_offerr_id
14:34:46 1037  	   FROM
14:34:46 1038  	     OFFER
14:34:46 1039  	   WHERE
14:34:46 1040  	     OFFER.ID = in_offer_id;
14:34:46 1041  	   EXCEPTION
14:34:46 1042  	     WHEN NO_DATA_FOUND THEN
14:34:46 1043  	       RAISE BAD_OFFER_ID;
14:34:46 1044  	 END;
14:34:46 1045  
14:34:46 1046  	 OPEN out_result_set FOR
14:34:46 1047  	 SELECT DISTINCT
14:34:46 1048  	   PRODUCT.ID,
14:34:46 1049  	   PRODUCT.NAME
14:34:46 1050  	 FROM
14:34:46 1051  	   PRODUCT
14:34:46 1052  	 WHERE
14:34:46 1053  	   PRODUCT.ID IN (
14:34:46 1054  	       SELECT
14:34:46 1055  		 PRODUCT_OFFERING.PRODUCT_ID
14:34:46 1056  	       FROM
14:34:46 1057  		 OFFER_PRODUCT_OFFERING
14:34:46 1058  		 INNER JOIN PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
14:34:46 1059  	       WHERE
14:34:46 1060  		 OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id
14:34:46 1061  	     );
14:34:46 1062  
14:34:46 1063  EXCEPTION
14:34:46 1064  WHEN BAD_OFFER_ID THEN
14:34:46 1065  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1066  	   SPROC_NAME, 'No such offer');
14:34:46 1067  WHEN OTHERS THEN
14:34:46 1068  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1069  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1070  END GET_OFFER_PRODUCTS;
14:34:46 1071  
14:34:46 1072  /******************************************************************************/
14:34:46 1073  
14:34:46 1074  PROCEDURE GET_OFFER_CHAIN_PROD_OFFERINGS (
14:34:46 1075  /*
14:34:46 1076  Throws exceptions (codes):
14:34:46 1077  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 1078  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1079  */
14:34:46 1080  	 in_offer_chain_id IN NUMBER,
14:34:46 1081  	 out_result_set    OUT SYS_REFCURSOR
14:34:46 1082  ) AS
14:34:46 1083  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_OFFER_CHAIN_PROD_OFFERINGS';
14:34:46 1084  -- VARIABLES
14:34:46 1085  temp_offer_chain_id NUMBER;
14:34:46 1086  -- EXCEPTIONS
14:34:46 1087  BAD_OFFER_CHAIN_ID EXCEPTION;
14:34:46 1088  BEGIN
14:34:46 1089  
14:34:46 1090  	 BEGIN
14:34:46 1091  	   SELECT
14:34:46 1092  	     OFFER_CHAIN.ID into temp_offer_chain_id
14:34:46 1093  	   FROM
14:34:46 1094  	     OFFER_CHAIN
14:34:46 1095  	   WHERE
14:34:46 1096  	     OFFER_CHAIN.ID = in_offer_chain_id;
14:34:46 1097  	   EXCEPTION
14:34:46 1098  	     WHEN NO_DATA_FOUND THEN
14:34:46 1099  	       RAISE BAD_OFFER_CHAIN_ID;
14:34:46 1100  	 END;
14:34:46 1101  
14:34:46 1102  	 OPEN out_result_set FOR
14:34:46 1103  	 SELECT
14:34:46 1104  	   PRODUCT_OFFERING.ID,
14:34:46 1105  	   PRODUCT_OFFERING.PRODUCT_ID,
14:34:46 1106  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
14:34:46 1107  	   PRODUCT_OFFERING.UNIT_PRICE,
14:34:46 1108  	   PRODUCT_OFFERING.QUANTITY,
14:34:46 1109  	   PRODUCT_OFFERING.CREATE_DATE,
14:34:46 1110  	   PRODUCT_OFFERING.CREATED_BY,
14:34:46 1111  	   PRODUCT.NAME,
14:34:46 1112  	   PRODUCT.PRODUCT_URI,
14:34:46 1113  	   CAPABILITY.ID CAP_ID,
14:34:46 1114  	   CAPABILITY.CODE CAP_CODE,
14:34:46 1115  	   CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
14:34:46 1116  	   CAPABILITY.SHAREABLE CAP_SHAREABLE
14:34:46 1117  	 FROM
14:34:46 1118  	   PRODUCT_OFFERING
14:34:46 1119  	   INNER JOIN PRODUCT ON PRODUCT_OFFERING.PRODUCT_ID = PRODUCT.ID
14:34:46 1120  	   INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
14:34:46 1121  	 WHERE
14:34:46 1122  	   PRODUCT_OFFERING.ID IN (
14:34:46 1123  	     SELECT DISTINCT
14:34:46 1124  	       PRODUCT_OFFERING_ID
14:34:46 1125  	     FROM
14:34:46 1126  	       OFFER_PRODUCT_OFFERING
14:34:46 1127  	     WHERE
14:34:46 1128  	       OFFER_PRODUCT_OFFERING.OFFER_ID IN (
14:34:46 1129  		 SELECT DISTINCT
14:34:46 1130  		   OFFER_ID
14:34:46 1131  		 FROM
14:34:46 1132  		   OFFER_OFFER_CHAIN
14:34:46 1133  		 WHERE
14:34:46 1134  		   OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 1135  	       )
14:34:46 1136  	   );
14:34:46 1137  
14:34:46 1138  EXCEPTION
14:34:46 1139  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:46 1140  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1141  	   SPROC_NAME, 'Bad offer chain id');
14:34:46 1142  WHEN OTHERS THEN
14:34:46 1143  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1144  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1145  END GET_OFFER_CHAIN_PROD_OFFERINGS;
14:34:46 1146  
14:34:46 1147  /******************************************************************************/
14:34:46 1148  
14:34:46 1149  FUNCTION CHECK_FOR_SAME_PRODUCTS (
14:34:46 1150  /*
14:34:46 1151  Throws exceptions (codes):
14:34:46 1152  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 1153  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1154  Returns:
14:34:46 1155  GLOBAL_CONSTANTS_V18.TRUE if there are at least one same product
14:34:46 1156  GLOBAL_CONSTANTS_V18.FALSE else
14:34:46 1157  */
14:34:46 1158  	 in_offer_chain_1	  IN OFFER_CHAIN.ID%TYPE,
14:34:46 1159  	 in_offer_chain_2	  IN OFFER_CHAIN.ID%TYPE,
14:34:46 1160  	 in_use_eligibility_rules IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.FALSE
14:34:46 1161  ) RETURN NUMBER AS
14:34:46 1162  SPROC_NAME CONSTANT VARCHAR2(23) := 'CHECK_FOR_SAME_PRODUCTS';
14:34:46 1163  -- CONSTANTS
14:34:46 1164  PRODUCT_ELIGIBILITY_NAME CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
14:34:46 1165  -- VARIABLES
14:34:46 1166  temp_offer_chain_id	OFFER_CHAIN.ID%TYPE;
14:34:46 1167  var_same_products	SYS_REFCURSOR;
14:34:46 1168  var_same_product_id	NUMBER;
14:34:46 1169  same_product_count	NUMBER;
14:34:46 1170  var_product_eligibility_limit NUMBER;
14:34:46 1171  s_product_eligibility_limit   VARCHAR2(100);
14:34:46 1172  -- EXCEPTIONS
14:34:46 1173  BAD_FIRST_OFFER_CHAIN	      EXCEPTION;
14:34:46 1174  BAD_SECOND_OFFER_CHAIN	      EXCEPTION;
14:34:46 1175  BEGIN
14:34:46 1176  
14:34:46 1177  	 -- Check that first offer chain exists
14:34:46 1178  	 BEGIN
14:34:46 1179  	   SELECT
14:34:46 1180  	     OFFER_CHAIN.ID into temp_offer_chain_id
14:34:46 1181  	   FROM
14:34:46 1182  	     OFFER_CHAIN
14:34:46 1183  	   WHERE
14:34:46 1184  	     OFFER_CHAIN.ID = in_offer_chain_1;
14:34:46 1185  	   EXCEPTION
14:34:46 1186  	     WHEN NO_DATA_FOUND THEN
14:34:46 1187  	       RAISE BAD_FIRST_OFFER_CHAIN;
14:34:46 1188  	 END;
14:34:46 1189  
14:34:46 1190  	 -- Check that second offer chain exists
14:34:46 1191  	 BEGIN
14:34:46 1192  	   SELECT
14:34:46 1193  	     OFFER_CHAIN.ID into temp_offer_chain_id
14:34:46 1194  	   FROM
14:34:46 1195  	     OFFER_CHAIN
14:34:46 1196  	   WHERE
14:34:46 1197  	     OFFER_CHAIN.ID = in_offer_chain_2;
14:34:46 1198  	   EXCEPTION
14:34:46 1199  	     WHEN NO_DATA_FOUND THEN
14:34:46 1200  	       RAISE BAD_SECOND_OFFER_CHAIN;
14:34:46 1201  	 END;
14:34:46 1202  
14:34:46 1203  	 PROCS_OFFER_CHAIN_V18.GET_OFF_CHAINS_SAME_PRODUCTS(
14:34:46 1204  	   in_offer_chain_1 => in_offer_chain_1,
14:34:46 1205  	   in_offer_chain_2 => in_offer_chain_2,
14:34:46 1206  	   out_result_set   => var_same_products
14:34:46 1207  	 );
14:34:46 1208  
14:34:46 1209  	 LOOP
14:34:46 1210  	   FETCH var_same_products INTO var_same_product_id, same_product_count;
14:34:46 1211  	   EXIT WHEN var_same_products%NOTFOUND;
14:34:46 1212  
14:34:46 1213  	   IF in_use_eligibility_rules = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:46 1214  	     -- Return false because this offer chains having same products
14:34:46 1215  	     RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:46 1216  	   ELSE
14:34:46 1217  
14:34:46 1218  	     -- Get eligibility rule for given product
14:34:46 1219  	     BEGIN
14:34:46 1220  	       SELECT
14:34:46 1221  		 PRODUCT_ELIGIBILITY.VALUE into s_product_eligibility_limit
14:34:46 1222  	       FROM
14:34:46 1223  		 PRODUCT_ELIGIBILITY
14:34:46 1224  	       WHERE
14:34:46 1225  		 PRODUCT_ELIGIBILITY.PRODUCT_ID = var_same_product_id
14:34:46 1226  		 AND PRODUCT_ELIGIBILITY.NAME = PRODUCT_ELIGIBILITY_NAME;
14:34:46 1227  
14:34:46 1228  	       -- REVU: What should to be here? 1?
14:34:46 1229  	       EXCEPTION
14:34:46 1230  		 WHEN NO_DATA_FOUND THEN
14:34:46 1231  		   s_product_eligibility_limit := '1';
14:34:46 1232  	     END;
14:34:46 1233  
14:34:46 1234  	     IF UPPER(s_product_eligibility_limit) = GLOBAL_CONSTANTS_V18.MAX_CONSURRENT_PRD_UNLIM THEN
14:34:46 1235  	       RETURN GLOBAL_CONSTANTS_V18.FALSE;
14:34:46 1236  	     END IF;
14:34:46 1237  
14:34:46 1238  	     var_product_eligibility_limit := TO_NUMBER(s_product_eligibility_limit);
14:34:46 1239  
14:34:46 1240  	     -- Check for limit
14:34:46 1241  	     IF var_product_eligibility_limit < same_product_count THEN
14:34:46 1242  	       RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:46 1243  	     END IF;
14:34:46 1244  
14:34:46 1245  	   END IF;
14:34:46 1246  	 END LOOP;
14:34:46 1247  
14:34:46 1248  	 RETURN GLOBAL_CONSTANTS_V18.FALSE;
14:34:46 1249  
14:34:46 1250  EXCEPTION
14:34:46 1251  WHEN BAD_FIRST_OFFER_CHAIN THEN
14:34:46 1252  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1253  	   SPROC_NAME, 'First offer chain not found');
14:34:46 1254  WHEN BAD_SECOND_OFFER_CHAIN THEN
14:34:46 1255  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1256  	   SPROC_NAME, 'Second offer chain not found');
14:34:46 1257  WHEN OTHERS THEN
14:34:46 1258  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1259  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1260  END CHECK_FOR_SAME_PRODUCTS;
14:34:46 1261  
14:34:46 1262  /******************************************************************************/
14:34:46 1263  
14:34:46 1264  FUNCTION IS_OFFER_CHAIN_CANCELABLE (
14:34:46 1265  /*
14:34:46 1266  Throws exceptions (codes):
14:34:46 1267  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1268  Returns:
14:34:46 1269  GLOBAL_CONSTANTS_V18.TRUE cancelation key is 1 (in OFFER_CHAIN_META_DATA)
14:34:46 1270  GLOBAL_CONSTANTS_V18.FALSE else
14:34:46 1271  */
14:34:46 1272  	 in_offer_chain_id IN NUMBER
14:34:46 1273  ) RETURN NUMBER AS
14:34:46 1274  SPROC_NAME CONSTANT VARCHAR2(25) := 'IS_OFFER_CHAIN_CANCELABLE';
14:34:46 1275  -- VARIABLES
14:34:46 1276  var_is_cancelable_str VARCHAR2(1);
14:34:46 1277  var_is_cancelable     NUMBER;
14:34:46 1278  BEGIN
14:34:46 1279  
14:34:46 1280  	 BEGIN
14:34:46 1281  	   SELECT
14:34:46 1282  	     VALUE INTO var_is_cancelable_str
14:34:46 1283  	   FROM (
14:34:46 1284  	     SELECT
14:34:46 1285  	       VALUE, NAME
14:34:46 1286  	     FROM
14:34:46 1287  	       OFFER_CHAIN_META_DATA
14:34:46 1288  	     WHERE
14:34:46 1289  	       OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 1290  	     )
14:34:46 1291  	   WHERE
14:34:46 1292  	     UPPER(NAME) = 'CANCELABLE';
14:34:46 1293  	   var_is_cancelable := TO_NUMBER(var_is_cancelable_str);
14:34:46 1294  	   EXCEPTION
14:34:46 1295  	     WHEN NO_DATA_FOUND THEN
14:34:46 1296  	       var_is_cancelable := GLOBAL_CONSTANTS_V18.FALSE;
14:34:46 1297  	 END;
14:34:46 1298  
14:34:46 1299  	 IF var_is_cancelable = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:46 1300  	   RETURN GLOBAL_CONSTANTS_V18.FALSE;
14:34:46 1301  	 END IF;
14:34:46 1302  
14:34:46 1303  	 RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:46 1304  
14:34:46 1305  EXCEPTION
14:34:46 1306  WHEN OTHERS THEN
14:34:46 1307  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1308  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1309  END IS_OFFER_CHAIN_CANCELABLE;
14:34:46 1310  
14:34:46 1311  /******************************************************************************/
14:34:46 1312  
14:34:46 1313  FUNCTION GET_OFFER_CHAIN_MAX_CONC_SUBSC (
14:34:46 1314  /*
14:34:46 1315  Throws exceptions (codes):
14:34:46 1316  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1317  */
14:34:46 1318  	 in_offer_chain_id IN NUMBER
14:34:46 1319  ) RETURN NUMBER AS
14:34:46 1320  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_OFFER_CHAIN_MAX_CONC_SUBSC';
14:34:46 1321  -- VARIABLES
14:34:46 1322  var_max_concurrent_subs_str VARCHAR2(100);
14:34:46 1323  var_max_concurrent_subs	   NUMBER;
14:34:46 1324  BEGIN
14:34:46 1325  
14:34:46 1326  	 BEGIN
14:34:46 1327  	   SELECT
14:34:46 1328  	     VALUE into var_max_concurrent_subs_str
14:34:46 1329  	   FROM
14:34:46 1330  	     (
14:34:46 1331  	       SELECT
14:34:46 1332  		 NAME,
14:34:46 1333  		 VALUE
14:34:46 1334  	       FROM
14:34:46 1335  		 OFFER_CHAIN_ELIGIBILITY
14:34:46 1336  	       WHERE
14:34:46 1337  		 OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 1338  	     )
14:34:46 1339  	   WHERE
14:34:46 1340  	     NAME LIKE GLOBAL_CONSTANTS_V18.MAX_CONCURRENT_SUBS;
14:34:46 1341  
14:34:46 1342  	   IF var_max_concurrent_subs_str = GLOBAL_CONSTANTS_V18.MAX_CONCURRENT_SUBS_UNLIM THEN
14:34:46 1343  	     var_max_concurrent_subs := GLOBAL_CONSTANTS_V18.INFINITY;
14:34:46 1344  	   ELSE
14:34:46 1345  	     var_max_concurrent_subs := TO_NUMBER(var_max_concurrent_subs_str);
14:34:46 1346  	   END IF;
14:34:46 1347  
14:34:46 1348  	   EXCEPTION
14:34:46 1349  	     WHEN NO_DATA_FOUND THEN
14:34:46 1350  	       var_max_concurrent_subs := 1;
14:34:46 1351  	 END;
14:34:46 1352  
14:34:46 1353  	 RETURN var_max_concurrent_subs;
14:34:46 1354  
14:34:46 1355  EXCEPTION
14:34:46 1356  WHEN OTHERS THEN
14:34:46 1357  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1358  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1359  END GET_OFFER_CHAIN_MAX_CONC_SUBSC;
14:34:46 1360  
14:34:46 1361  /******************************************************************************/
14:34:46 1362  
14:34:46 1363  PROCEDURE GET_OFFER_CHAIN_ELIGIBILITY (
14:34:46 1364  /*
14:34:46 1365  Throws exceptions (codes):
14:34:46 1366  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 1367  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1368  */
14:34:46 1369  	 in_offer_chain_id   IN NUMBER,
14:34:46 1370  	 in_eligibility_name IN VARCHAR2,
14:34:46 1371  	 out_result_set      OUT SYS_REFCURSOR
14:34:46 1372  ) AS
14:34:46 1373  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_OFFER_CHAIN_ELIGIBILITY';
14:34:46 1374  -- VARIABLES
14:34:46 1375  temp_offer_chain_id NUMBER;
14:34:46 1376  var_eligibility_name OFFER_CHAIN_ELIGIBILITY.NAME%TYPE;
14:34:46 1377  -- EXCEPTIONS
14:34:46 1378  BAD_OFFER_CHAIN_ID EXCEPTION;
14:34:46 1379  BEGIN
14:34:46 1380  
14:34:46 1381  	 BEGIN
14:34:46 1382  	   SELECT
14:34:46 1383  	     OFFER_CHAIN.ID into temp_offer_chain_id
14:34:46 1384  	   FROM
14:34:46 1385  	     OFFER_CHAIN
14:34:46 1386  	   WHERE
14:34:46 1387  	     OFFER_CHAIN.ID = in_offer_chain_id;
14:34:46 1388  	   EXCEPTION
14:34:46 1389  	     WHEN NO_DATA_FOUND THEN
14:34:46 1390  	       RAISE BAD_OFFER_CHAIN_ID;
14:34:46 1391  	 END;
14:34:46 1392  
14:34:46 1393  	 var_eligibility_name := UPPER(in_eligibility_name);
14:34:46 1394  
14:34:46 1395  	 OPEN out_result_set FOR
14:34:46 1396  	 SELECT
14:34:46 1397  	   OFFER_CHAIN_ELIGIBILITY.ID,
14:34:46 1398  	   OFFER_CHAIN_ELIGIBILITY.NAME,
14:34:46 1399  	   OFFER_CHAIN_ELIGIBILITY.VALUE,
14:34:46 1400  	   OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID,
14:34:46 1401  	   OFFER_CHAIN_ELIGIBILITY.CREATE_DATE,
14:34:46 1402  	   OFFER_CHAIN_ELIGIBILITY.CREATED_BY
14:34:46 1403  	 FROM
14:34:46 1404  	   OFFER_CHAIN_ELIGIBILITY
14:34:46 1405  	 WHERE
14:34:46 1406  	   OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 1407  	   AND UPPER(OFFER_CHAIN_ELIGIBILITY.NAME) = var_eligibility_name;
14:34:46 1408  
14:34:46 1409  EXCEPTION
14:34:46 1410  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:46 1411  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1412  	   SPROC_NAME, 'No such offer chain');
14:34:46 1413  WHEN OTHERS THEN
14:34:46 1414  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1415  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1416  END GET_OFFER_CHAIN_ELIGIBILITY;
14:34:46 1417  
14:34:46 1418  /******************************************************************************/
14:34:46 1419  
14:34:46 1420  PROCEDURE GET_OFFER_CHAINS_ELIGIBILITY (
14:34:46 1421  /*
14:34:46 1422  Throws exceptions (codes):
14:34:46 1423  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1424  */
14:34:46 1425  	 in_offer_chain_ids  IN VARCHAR2,
14:34:46 1426  	 in_eligibility_name IN VARCHAR2,
14:34:46 1427  	 out_result_set      OUT SYS_REFCURSOR
14:34:46 1428  ) AS
14:34:46 1429  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_OFFER_CHAINS_ELIGIBILITY';
14:34:46 1430  -- VARIABLES
14:34:46 1431  var_eligibility_name OFFER_CHAIN_ELIGIBILITY.NAME%TYPE;
14:34:46 1432  BEGIN
14:34:46 1433  
14:34:46 1434  	 var_eligibility_name := UPPER(in_eligibility_name);
14:34:46 1435  
14:34:46 1436  	 -- TODO: Reveiw this procedure and fine a normal way to implement this feature
14:34:46 1437  
14:34:46 1438  	 open out_result_set for
14:34:46 1439  	 'SELECT
14:34:46 1440  	   ID,
14:34:46 1441  	   NAME,
14:34:46 1442  	   VALUE,
14:34:46 1443  	   OFFER_CHAIN_ID,
14:34:46 1444  	   CREATE_DATE,
14:34:46 1445  	   CREATED_BY
14:34:46 1446  	 FROM
14:34:46 1447  	   OFFER_CHAIN_ELIGIBILITY
14:34:46 1448  	 WHERE
14:34:46 1449  	   OFFER_CHAIN_ID in ( '|| in_offer_chain_ids ||' )
14:34:46 1450  	   AND UPPER(NAME) = :1'
14:34:46 1451  	 using var_eligibility_name;
14:34:46 1452  
14:34:46 1453  EXCEPTION
14:34:46 1454  WHEN OTHERS THEN
14:34:46 1455  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1456  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1457  END GET_OFFER_CHAINS_ELIGIBILITY;
14:34:46 1458  
14:34:46 1459  /******************************************************************************/
14:34:46 1460  
14:34:46 1461  PROCEDURE GET_OFFER_CHAINS_META_DATA (
14:34:46 1462  	 in_offer_chain_ids IN VARCHAR2,
14:34:46 1463  	 in_meta_data_name  IN VARCHAR2,
14:34:46 1464  	 out_result_set     OUT SYS_REFCURSOR
14:34:46 1465  ) AS
14:34:46 1466  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_OFFER_CHAINS_META_DATA';
14:34:46 1467  -- VARIABLES
14:34:46 1468  var_meta_data_name  OFFER_CHAIN_META_DATA.NAME%TYPE;
14:34:46 1469  BEGIN
14:34:46 1470  
14:34:46 1471  	 var_meta_data_name := UPPER(in_meta_data_name);
14:34:46 1472  
14:34:46 1473  	 open out_result_set for
14:34:46 1474  	 'select
14:34:46 1475  	   ID,
14:34:46 1476  	   NAME,
14:34:46 1477  	   VALUE,
14:34:46 1478  	   OFFER_CHAIN_ID,
14:34:46 1479  	   CREATED_BY,
14:34:46 1480  	   CREATE_DATE
14:34:46 1481  	 from
14:34:46 1482  	   OFFER_CHAIN_META_DATA
14:34:46 1483  	 where
14:34:46 1484  	   OFFER_CHAIN_ID in ( '||in_offer_chain_ids||' )
14:34:46 1485  	   and UPPER(OFFER_CHAIN_META_DATA.NAME) = :1'
14:34:46 1486  	 using var_meta_data_name;
14:34:46 1487  
14:34:46 1488  EXCEPTION
14:34:46 1489  WHEN OTHERS THEN
14:34:46 1490  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1491  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1492  END GET_OFFER_CHAINS_META_DATA;
14:34:46 1493  
14:34:46 1494  PROCEDURE GET_OFFER_CHAIN_META_DATA (
14:34:46 1495  /*
14:34:46 1496  Throws exceptions (codes):
14:34:46 1497  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 1498  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1499  */
14:34:46 1500  	 in_offer_chain_id IN NUMBER,
14:34:46 1501  	 in_meta_data_name IN VARCHAR2,
14:34:46 1502  	 out_result_set    OUT SYS_REFCURSOR
14:34:46 1503  ) AS
14:34:46 1504  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_OFFER_CHAIN_META_DATA';
14:34:46 1505  -- VARIABLES
14:34:46 1506  temp_offer_chain_id NUMBER;
14:34:46 1507  var_meta_data_name  OFFER_CHAIN_META_DATA.NAME%TYPE;
14:34:46 1508  -- EXCEPTIONS
14:34:46 1509  BAD_OFFER_CHAIN_ID EXCEPTION;
14:34:46 1510  BEGIN
14:34:46 1511  
14:34:46 1512  	 BEGIN
14:34:46 1513  	   SELECT
14:34:46 1514  	     OFFER_CHAIN.ID into temp_offer_chain_id
14:34:46 1515  	   FROM
14:34:46 1516  	     OFFER_CHAIN
14:34:46 1517  	   WHERE
14:34:46 1518  	     OFFER_CHAIN.ID = in_offer_chain_id;
14:34:46 1519  	   EXCEPTION
14:34:46 1520  	     WHEN NO_DATA_FOUND THEN
14:34:46 1521  	       RAISE BAD_OFFER_CHAIN_ID;
14:34:46 1522  	 END;
14:34:46 1523  
14:34:46 1524  	 var_meta_data_name := UPPER(in_meta_data_name);
14:34:46 1525  
14:34:46 1526  	 OPEN out_result_set FOR
14:34:46 1527  	 SELECT
14:34:46 1528  	   OFFER_CHAIN_META_DATA.ID,
14:34:46 1529  	   OFFER_CHAIN_META_DATA.NAME,
14:34:46 1530  	   OFFER_CHAIN_META_DATA.VALUE,
14:34:46 1531  	   OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID,
14:34:46 1532  	   OFFER_CHAIN_META_DATA.CREATED_BY,
14:34:46 1533  	   OFFER_CHAIN_META_DATA.CREATE_DATE
14:34:46 1534  	 FROM
14:34:46 1535  	   OFFER_CHAIN_META_DATA
14:34:46 1536  	 WHERE
14:34:46 1537  	   OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 1538  	   AND UPPER(OFFER_CHAIN_META_DATA.NAME) = var_meta_data_name;
14:34:46 1539  
14:34:46 1540  EXCEPTION
14:34:46 1541  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:46 1542  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1543  	   SPROC_NAME, 'No such offer chain');
14:34:46 1544  WHEN OTHERS THEN
14:34:46 1545  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1546  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1547  END GET_OFFER_CHAIN_META_DATA;
14:34:46 1548  
14:34:46 1549  PROCEDURE GET_PROD_OFFERINGS_BY_OFFER_ID (
14:34:46 1550  /*
14:34:46 1551  Throws exceptions (codes):
14:34:46 1552  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 1553  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1554  */
14:34:46 1555  	 in_offer_id	IN NUMBER,
14:34:46 1556  	 out_result_set OUT SYS_REFCURSOR
14:34:46 1557  ) AS
14:34:46 1558  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PROD_OFFERINGS_BY_OFFER_ID';
14:34:46 1559  -- VARIABLES
14:34:46 1560  temp_offer_id NUMBER;
14:34:46 1561  -- EXCEPTIONS
14:34:46 1562  BAD_OFFER_ID EXCEPTION;
14:34:46 1563  BEGIN
14:34:46 1564  
14:34:46 1565  	 BEGIN
14:34:46 1566  	   SELECT
14:34:46 1567  	     OFFER.ID into temp_offer_id
14:34:46 1568  	   FROM
14:34:46 1569  	     OFFER
14:34:46 1570  	   WHERE
14:34:46 1571  	     OFFER.ID = in_offer_id;
14:34:46 1572  	   EXCEPTION
14:34:46 1573  	     WHEN NO_DATA_FOUND THEN
14:34:46 1574  	       RAISE BAD_OFFER_ID;
14:34:46 1575  	 END;
14:34:46 1576  
14:34:46 1577  	 OPEN out_result_set FOR
14:34:46 1578  	 SELECT DISTINCT
14:34:46 1579  	   PRODUCT_OFFERING.ID,
14:34:46 1580  	   PRODUCT_OFFERING.PRODUCT_ID,
14:34:46 1581  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
14:34:46 1582  	   PRODUCT_OFFERING.UNIT_PRICE,
14:34:46 1583  	   PRODUCT_OFFERING.QUANTITY,
14:34:46 1584  	   PRODUCT_OFFERING.CREATE_DATE,
14:34:46 1585  	   PRODUCT_OFFERING.CREATED_BY,
14:34:46 1586  	   CAPABILITY.ID CAP_ID,
14:34:46 1587  	   CAPABILITY.CODE CAP_CODE,
14:34:46 1588  	   CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
14:34:46 1589  	   CAPABILITY.SHAREABLE CAP_SHAREABLE
14:34:46 1590  	 FROM
14:34:46 1591  	   OFFER_PRODUCT_OFFERING
14:34:46 1592  	   INNER JOIN PRODUCT_OFFERING ON PRODUCT_OFFERING.ID = OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
14:34:46 1593  	   INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
14:34:46 1594  	 WHERE
14:34:46 1595  	   OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id;
14:34:46 1596  
14:34:46 1597  EXCEPTION
14:34:46 1598  WHEN BAD_OFFER_ID THEN
14:34:46 1599  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1600  	   SPROC_NAME, 'No such offer');
14:34:46 1601  WHEN OTHERS THEN
14:34:46 1602  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1603  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1604  END GET_PROD_OFFERINGS_BY_OFFER_ID;
14:34:46 1605  
14:34:46 1606  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
14:34:46 1607  /*
14:34:46 1608  Throws exceptions (codes):
14:34:46 1609  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46 1610  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1611  */
14:34:46 1612  	 in_product_offering_id IN NUMBER,
14:34:46 1613  	 in_meta_data_name	IN VARCHAR2 DEFAULT NULL,
14:34:46 1614  	 out_result_set 	OUT SYS_REFCURSOR
14:34:46 1615  ) AS
14:34:46 1616  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PRODUCT_OFFERING_META_DATA';
14:34:46 1617  -- VARIABLES
14:34:46 1618  temp_product_offering_id NUMBER;
14:34:46 1619  -- EXCEPTIONS
14:34:46 1620  BAD_PRODUCT_OFFERING_ID EXCEPTION;
14:34:46 1621  BEGIN
14:34:46 1622  
14:34:46 1623  	 BEGIN
14:34:46 1624  	   SELECT
14:34:46 1625  	     PRODUCT_OFFERING.ID into temp_product_offering_id
14:34:46 1626  	   FROM
14:34:46 1627  	     PRODUCT_OFFERING
14:34:46 1628  	   WHERE
14:34:46 1629  	     PRODUCT_OFFERING.ID = in_product_offering_id;
14:34:46 1630  	   EXCEPTION
14:34:46 1631  	     WHEN NO_DATA_FOUND THEN
14:34:46 1632  	       RAISE BAD_PRODUCT_OFFERING_ID;
14:34:46 1633  	 END;
14:34:46 1634  
14:34:46 1635  	 OPEN out_result_set FOR
14:34:46 1636  	 SELECT
14:34:46 1637  	   PRODUCT_OFFERING_META_DATA.ID,
14:34:46 1638  	   PRODUCT_OFFERING_META_DATA.NAME,
14:34:46 1639  	   PRODUCT_OFFERING_META_DATA.VALUE,
14:34:46 1640  	   PRODUCT_OFFERING_META_DATA.PRODUCT_OFFERING_ID,
14:34:46 1641  	   PRODUCT_OFFERING_META_DATA.CREATE_DATE,
14:34:46 1642  	   PRODUCT_OFFERING_META_DATA.CREATED_BY
14:34:46 1643  	 FROM
14:34:46 1644  	   PRODUCT_OFFERING_META_DATA
14:34:46 1645  	 WHERE
14:34:46 1646  	   PRODUCT_OFFERING_META_DATA.PRODUCT_OFFERING_ID = in_product_offering_id
14:34:46 1647  	   AND UPPER(PRODUCT_OFFERING_META_DATA.NAME) = UPPER(NVL(in_meta_data_name, PRODUCT_OFFERING_META_DATA.NAME));
14:34:46 1648  
14:34:46 1649  EXCEPTION
14:34:46 1650  WHEN BAD_PRODUCT_OFFERING_ID THEN
14:34:46 1651  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1652  	   SPROC_NAME, 'No such product offering');
14:34:46 1653  END GET_PRODUCT_OFFERING_META_DATA;
14:34:46 1654  
14:34:46 1655  /******************************************************************************/
14:34:46 1656  
14:34:46 1657  PROCEDURE GET_OFF_CHAINS_SAME_PRODUCTS (
14:34:46 1658  /*
14:34:46 1659  Throws exceptions (codes):
14:34:46 1660  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46 1661  */
14:34:46 1662  	 in_offer_chain_1 IN NUMBER,
14:34:46 1663  	 in_offer_chain_2 IN NUMBER,
14:34:46 1664  	 out_result_set   OUT SYS_REFCURSOR
14:34:46 1665  ) AS
14:34:46 1666  BEGIN
14:34:46 1667  
14:34:46 1668  	 OPEN out_result_set FOR
14:34:46 1669  	 SELECT
14:34:46 1670  	   PRODUCT_ID_IN_OFFER_CH_1 AS "PRODUCT_ID",
14:34:46 1671  	   COUNT_1 + COUNT_2	    AS "COUNT"
14:34:46 1672  	 FROM
14:34:46 1673  	   (
14:34:46 1674  	     SELECT
14:34:46 1675  	       PRODUCT_OFFERING.PRODUCT_ID as "PRODUCT_ID_IN_OFFER_CH_1",
14:34:46 1676  	       COUNT(*) 		   as "COUNT_1"
14:34:46 1677  	     FROM
14:34:46 1678  	       (
14:34:46 1679  		 SELECT OFFER_ID as "OFFER_OFFER_CHAIN_OFFER_ID" FROM OFFER_OFFER_CHAIN WHERE OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_1
14:34:46 1680  	       )
14:34:46 1681  	       INNER JOIN OFFER_PRODUCT_OFFERING ON OFFER_OFFER_CHAIN_OFFER_ID = OFFER_PRODUCT_OFFERING.OFFER_ID
14:34:46 1682  	       INNER JOIN PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
14:34:46 1683  	     GROUP BY
14:34:46 1684  	       PRODUCT_OFFERING.PRODUCT_ID
14:34:46 1685  	   )
14:34:46 1686  	   INNER JOIN
14:34:46 1687  	   (
14:34:46 1688  	     SELECT
14:34:46 1689  	       PRODUCT_OFFERING.PRODUCT_ID as "PRODUCT_ID_IN_OFFER_CH_2",
14:34:46 1690  	       COUNT(*) 		   as "COUNT_2"
14:34:46 1691  	     FROM
14:34:46 1692  	       (
14:34:46 1693  		 SELECT OFFER_ID as "OFFER_OFFER_CHAIN_OFFER_ID" FROM OFFER_OFFER_CHAIN WHERE OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_2
14:34:46 1694  	       )
14:34:46 1695  	       INNER JOIN OFFER_PRODUCT_OFFERING ON OFFER_OFFER_CHAIN_OFFER_ID = OFFER_PRODUCT_OFFERING.OFFER_ID
14:34:46 1696  	       INNER JOIN PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
14:34:46 1697  	     GROUP BY
14:34:46 1698  	       PRODUCT_OFFERING.PRODUCT_ID
14:34:46 1699  	   ) ON PRODUCT_ID_IN_OFFER_CH_1 = PRODUCT_ID_IN_OFFER_CH_2;
14:34:46 1700  
14:34:46 1701  END GET_OFF_CHAINS_SAME_PRODUCTS;
14:34:46 1702  
14:34:46 1703  /******************************************************************************/
14:34:46 1704  
14:34:46 1705  PROCEDURE GET_OFFER_CHAIN_MD_VALUE (
14:34:46 1706  	 in_offer_chain_id IN NUMBER,
14:34:46 1707  	 in_meta_data_name IN VARCHAR2,
14:34:46 1708  	 out_value	   OUT VARCHAR2
14:34:46 1709  ) AS
14:34:46 1710  BEGIN
14:34:46 1711  	 BEGIN
14:34:46 1712  	   SELECT
14:34:46 1713  	     OFFER_CHAIN_META_DATA.VALUE into out_value
14:34:46 1714  	   FROM
14:34:46 1715  	     OFFER_CHAIN_META_DATA
14:34:46 1716  	   WHERE
14:34:46 1717  	     OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 1718  	     AND UPPER(OFFER_CHAIN_META_DATA.NAME) = UPPER(in_meta_data_name);
14:34:46 1719  
14:34:46 1720  	   EXCEPTION
14:34:46 1721  	     WHEN NO_DATA_FOUND THEN
14:34:46 1722  	       out_value := NULL;
14:34:46 1723  	 END;
14:34:46 1724  END GET_OFFER_CHAIN_MD_VALUE;
14:34:46 1725  
14:34:46 1726  /******************************************************************************/
14:34:46 1727  
14:34:46 1728  PROCEDURE GET_OFFER_CHAIN_EL_VALUE (
14:34:46 1729  	 in_offer_chain_id   IN NUMBER,
14:34:46 1730  	 in_eligibility_name IN VARCHAR2,
14:34:46 1731  	 out_value	     OUT VARCHAR2
14:34:46 1732  ) AS
14:34:46 1733  BEGIN
14:34:46 1734  	 BEGIN
14:34:46 1735  	   SELECT
14:34:46 1736  	     OFFER_CHAIN_ELIGIBILITY.VALUE into out_value
14:34:46 1737  	   FROM
14:34:46 1738  	     OFFER_CHAIN_ELIGIBILITY
14:34:46 1739  	   WHERE
14:34:46 1740  	     OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 1741  	     AND UPPER(OFFER_CHAIN_ELIGIBILITY.NAME) = UPPER(in_eligibility_name);
14:34:46 1742  
14:34:46 1743  	   EXCEPTION
14:34:46 1744  	     WHEN NO_DATA_FOUND THEN
14:34:46 1745  	       out_value := NULL;
14:34:46 1746  	 END;
14:34:46 1747  END GET_OFFER_CHAIN_EL_VALUE;
14:34:46 1748  
14:34:46 1749  PROCEDURE GET_OFFER_PRODUCT_OFFERINGS (
14:34:46 1750  	 in_offer_id	IN NUMBER,
14:34:46 1751  	 out_result_set OUT SYS_REFCURSOR
14:34:46 1752  ) AS
14:34:46 1753  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_OFFER_PRODUCT_OFFERINGS';
14:34:46 1754  -- VARIABLES
14:34:46 1755  temp_offer_id NUMBER;
14:34:46 1756  -- EXCEPTIONS
14:34:46 1757  BAD_OFFER_ID EXCEPTION;
14:34:46 1758  BEGIN
14:34:46 1759  
14:34:46 1760  	 BEGIN
14:34:46 1761  	   SELECT
14:34:46 1762  	     OFFER.ID into temp_offer_id
14:34:46 1763  	   FROM
14:34:46 1764  	     OFFER
14:34:46 1765  	   WHERE
14:34:46 1766  	     OFFER.ID = in_offer_id;
14:34:46 1767  	   EXCEPTION
14:34:46 1768  	     WHEN NO_DATA_FOUND THEN
14:34:46 1769  	       RAISE BAD_OFFER_ID;
14:34:46 1770  	 END;
14:34:46 1771  
14:34:46 1772  	 OPEN out_result_set FOR
14:34:46 1773  	 SELECT
14:34:46 1774  	   PRODUCT_OFFERING.ID,
14:34:46 1775  	   PRODUCT_OFFERING.PRODUCT_ID,
14:34:46 1776  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
14:34:46 1777  	   PRODUCT_OFFERING.UNIT_PRICE,
14:34:46 1778  	   PRODUCT_OFFERING.QUANTITY,
14:34:46 1779  	   PRODUCT_OFFERING.CREATE_DATE,
14:34:46 1780  	   PRODUCT_OFFERING.CREATED_BY,
14:34:46 1781  	   PRODUCT_OFFERING.TAX_POLICY_TYPE_ID
14:34:46 1782  	 FROM
14:34:46 1783  	   PRODUCT_OFFERING
14:34:46 1784  	   INNER JOIN OFFER_PRODUCT_OFFERING ON PRODUCT_OFFERING.ID = OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
14:34:46 1785  	 WHERE
14:34:46 1786  	   OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id;
14:34:46 1787  
14:34:46 1788  EXCEPTION
14:34:46 1789  WHEN BAD_OFFER_ID THEN
14:34:46 1790  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1791  	   SPROC_NAME, 'No such offer');
14:34:46 1792  WHEN OTHERS THEN
14:34:46 1793  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1794  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1795  END GET_OFFER_PRODUCT_OFFERINGS;
14:34:46 1796  
14:34:46 1797  /******************************************************************************/
14:34:46 1798  
14:34:46 1799  PROCEDURE GET_OFFER_CHAINS_BY_META_DATA (
14:34:46 1800  	 in_meta_data_name  IN VARCHAR2,
14:34:46 1801  	 in_meta_data_value IN VARCHAR2,
14:34:46 1802  	 out_result_set     OUT SYS_REFCURSOR
14:34:46 1803  ) AS
14:34:46 1804  SPROC_NAME CONSTANT VARCHAR2(29) := 'GET_OFFER_CHAINS_BY_META_DATA';
14:34:46 1805  -- VARIABLES
14:34:46 1806  v_meta_data_name  CONSTANT OFFER_CHAIN_META_DATA.NAME%TYPE  := UPPER(in_meta_data_name);
14:34:46 1807  v_meta_data_value CONSTANT OFFER_CHAIN_META_DATA.VALUE%TYPE := UPPER(in_meta_data_value);
14:34:46 1808  BEGIN
14:34:46 1809  
14:34:46 1810  	 OPEN out_result_set FOR
14:34:46 1811  	 SELECT
14:34:46 1812  	   och.ID,
14:34:46 1813  	   och.NAME,
14:34:46 1814  	   och.DESCRIPTION,
14:34:46 1815  	   och.OFFER_CHAIN_STATUS_ID,
14:34:46 1816  	   PROCS_OFFER_CHAIN_V18.CALCULATE_OFFER_CHAIN_AMOUNT(och.id) as amount,
14:34:46 1817  	   och.ADOPTABILITY_WINDOW_START_DATE,
14:34:46 1818  	   och.ADOPTABILITY_WINDOW_END_DATE,
14:34:46 1819  	   PROCS_OFFER_CHAIN_V18.IS_OFFER_CHAIN_CANCELABLE(och.id) as is_cancelable,
14:34:46 1820  	   och.IS_GIFT_CERTIFICATE,
14:34:46 1821  	   'false' as comf_offer_chain, -- TODO
14:34:46 1822  	   po.PRODUCT_ID,
14:34:46 1823  	   och.GROUP_ACCOUNT_TYPE_ID
14:34:46 1824  	 FROM
14:34:46 1825  	   OFFER_CHAIN och,
14:34:46 1826  	   OFFER_OFFER_CHAIN ooch,
14:34:46 1827  	   OFFER_PRODUCT_OFFERING opo,
14:34:46 1828  	   PRODUCT_OFFERING po
14:34:46 1829  	 WHERE
14:34:46 1830  	   och.ID = ooch.OFFER_CHAIN_ID
14:34:46 1831  	   and ooch.OFFER_ID = opo.OFFER_ID
14:34:46 1832  	   and opo.PRODUCT_OFFERING_ID = po.ID
14:34:46 1833  	   and och.OFFER_CHAIN_STATUS_ID = GLOBAL_STATUSES_V18.OFFER_CHAIN_ACTIVE
14:34:46 1834  	   and och.id in (
14:34:46 1835  	     SELECT DISTINCT
14:34:46 1836  	       och2.id
14:34:46 1837  	     from
14:34:46 1838  	       offer_chain och2
14:34:46 1839  	       inner join offer_chain_meta_data ochmd on och2.id = ochmd.offer_chain_id
14:34:46 1840  	     where
14:34:46 1841  	       UPPER(ochmd.name) = v_meta_data_name
14:34:46 1842  	       AND UPPER(ochmd.value) = v_meta_data_value
14:34:46 1843  	   );
14:34:46 1844  
14:34:46 1845  EXCEPTION
14:34:46 1846  WHEN OTHERS THEN
14:34:46 1847  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1848  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1849  END GET_OFFER_CHAINS_BY_META_DATA;
14:34:46 1850  
14:34:46 1851  /******************************************************************************/
14:34:46 1852  
14:34:46 1853  PROCEDURE GET_ALL_META_DATA (
14:34:46 1854  	 in_offer_chain_id IN NUMBER,
14:34:46 1855  	 out_result_set    OUT SYS_REFCURSOR
14:34:46 1856  ) AS
14:34:46 1857  SPROC_NAME CONSTANT VARCHAR2(17) := 'GET_ALL_META_DATA';
14:34:46 1858  -- Variables
14:34:46 1859  temp_offer_chain_id NUMBER;
14:34:46 1860  -- Exceptions
14:34:46 1861  BAD_OFFER_CHAIN_ID EXCEPTION;
14:34:46 1862  BEGIN
14:34:46 1863  
14:34:46 1864  	 BEGIN
14:34:46 1865  	   SELECT
14:34:46 1866  	     OCH.ID into temp_offer_chain_id
14:34:46 1867  	   FROM
14:34:46 1868  	     OFFER_CHAIN OCH
14:34:46 1869  	   WHERE
14:34:46 1870  	     OCH.ID = in_offer_chain_id;
14:34:46 1871  	   EXCEPTION
14:34:46 1872  	     WHEN NO_DATA_FOUND THEN
14:34:46 1873  	       RAISE BAD_OFFER_CHAIN_ID;
14:34:46 1874  	 END;
14:34:46 1875  
14:34:46 1876  	 OPEN out_result_set FOR
14:34:46 1877  	 SELECT
14:34:46 1878  	   OCHMD.ID,
14:34:46 1879  	   OCHMD.OFFER_CHAIN_ID,
14:34:46 1880  	   OCHMD.NAME,
14:34:46 1881  	   OCHMD.VALUE,
14:34:46 1882  	   OCHMD.CREATE_DATE,
14:34:46 1883  	   OCHMD.CREATED_BY
14:34:46 1884  	 FROM
14:34:46 1885  	   OFFER_CHAIN_META_DATA OCHMD
14:34:46 1886  	 WHERE
14:34:46 1887  	   OCHMD.OFFER_CHAIN_ID = in_offer_chain_id;
14:34:46 1888  
14:34:46 1889  EXCEPTION
14:34:46 1890  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:46 1891  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1892  	   SPROC_NAME, 'No such offer chain', SQLERRM);
14:34:46 1893  WHEN OTHERS THEN
14:34:46 1894  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1895  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1896  END GET_ALL_META_DATA;
14:34:46 1897  
14:34:46 1898  PROCEDURE CHECK_PRODUCT_ELIGIBILITY (
14:34:46 1899  	 in_group_id	   IN NUMBER,
14:34:46 1900  	 in_offer_chain_id IN NUMBER,
14:34:46 1901  	 out_is_eligible   OUT NUMBER,
14:34:46 1902  	 out_concurrent_subscription_id OUT NUMBER
14:34:46 1903  ) AS
14:34:46 1904  SPROC_NAME CONSTANT VARCHAR2(25) := 'CHECK_PRODUCT_ELIGIBILITY';
14:34:46 1905  -- Variables
14:34:46 1906  var_account_id  NUMBER;
14:34:46 1907  var_is_eligible NUMBER;
14:34:46 1908  var_is_gc       NUMBER;
14:34:46 1909  -- Exceptions
14:34:46 1910  BAD_GROUP_ID		   EXCEPTION;
14:34:46 1911  CAN_NOT_CHECK_SAME_PRODUCTS EXCEPTION;
14:34:46 1912  BAD_OC_ID		   EXCEPTION;
14:34:46 1913  EXCEPTION_MESSAGE	   VARCHAR(1024);
14:34:46 1914  BEGIN
14:34:46 1915  
14:34:46 1916  	 var_is_eligible := GLOBAL_CONSTANTS_V18.TRUE;
14:34:46 1917  
14:34:46 1918  	 out_concurrent_subscription_id := NULL;
14:34:46 1919  
14:34:46 1920  	 BEGIN
14:34:46 1921  	   SELECT
14:34:46 1922  	     OC.IS_GIFT_CERTIFICATE into var_is_gc
14:34:46 1923  	   FROM
14:34:46 1924  	     OFFER_CHAIN OC
14:34:46 1925  	   WHERE
14:34:46 1926  	     OC.ID = in_offer_chain_id;
14:34:46 1927  	   EXCEPTION
14:34:46 1928  	     WHEN NO_DATA_FOUND THEN
14:34:46 1929  	       RAISE BAD_OC_ID;
14:34:46 1930  	 END;
14:34:46 1931  
14:34:46 1932  	 -- only check eligibility if this is not a gift certificate
14:34:46 1933  	 IF (var_is_gc IS NULL OR var_is_gc != 1) THEN
14:34:46 1934  	   BEGIN
14:34:46 1935  	     SELECT
14:34:46 1936  	       A.ID into var_account_id
14:34:46 1937  	     FROM
14:34:46 1938  	       ACCOUNT A
14:34:46 1939  	     WHERE
14:34:46 1940  	       A.GROUP_ID = in_group_id;
14:34:46 1941  	     EXCEPTION
14:34:46 1942  	       WHEN NO_DATA_FOUND THEN
14:34:46 1943  		 RAISE BAD_GROUP_ID;
14:34:46 1944  	   END;
14:34:46 1945  
14:34:46 1946  
14:34:46 1947  	   FOR f_offer_chain IN (
14:34:46 1948  	       SELECT
14:34:46 1949  		 S.ID as SUBSCRIPTION_ID,
14:34:46 1950  		 S.OFFER_CHAIN_ID
14:34:46 1951  	       FROM
14:34:46 1952  		 SUBSCRIPTION S
14:34:46 1953  	       WHERE
14:34:46 1954  		 S.ACCOUNT_ID = var_account_id
14:34:46 1955  		 AND (S.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:46 1956  		      OR S.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD)
14:34:46 1957  	   )
14:34:46 1958  	   LOOP
14:34:46 1959  	     BEGIN
14:34:46 1960  	       IF (
14:34:46 1961  		 PROCS_OFFER_CHAIN_V18.CHECK_FOR_SAME_PRODUCTS(
14:34:46 1962  		   in_offer_chain_id,
14:34:46 1963  		   f_offer_chain.offer_chain_id,
14:34:46 1964  		   GLOBAL_CONSTANTS_V18.TRUE
14:34:46 1965  		 ) = GLOBAL_CONSTANTS_V18.TRUE
14:34:46 1966  	       ) THEN
14:34:46 1967  		 var_is_eligible := GLOBAL_CONSTANTS_V18.FALSE;
14:34:46 1968  		 out_concurrent_subscription_id := f_offer_chain.SUBSCRIPTION_ID;
14:34:46 1969  	       END IF;
14:34:46 1970  	       EXCEPTION
14:34:46 1971  		 WHEN OTHERS THEN
14:34:46 1972  		   EXCEPTION_MESSAGE := SQLERRM;
14:34:46 1973  		   RAISE CAN_NOT_CHECK_SAME_PRODUCTS;
14:34:46 1974  	     END;
14:34:46 1975  	   END LOOP;
14:34:46 1976  	 END IF;
14:34:46 1977  	 out_is_eligible := var_is_eligible;
14:34:46 1978  
14:34:46 1979  EXCEPTION
14:34:46 1980  WHEN BAD_GROUP_ID THEN
14:34:46 1981  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1982  	   SPROC_NAME, 'No such offer chain', SQLERRM);
14:34:46 1983  WHEN BAD_OC_ID THEN
14:34:46 1984  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 1985  	   SPROC_NAME, 'No such offer chain', SQLERRM);
14:34:46 1986  WHEN CAN_NOT_CHECK_SAME_PRODUCTS THEN
14:34:46 1987  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:46 1988  	   SPROC_NAME, 'Could not check offers for same products', EXCEPTION_MESSAGE);
14:34:46 1989  WHEN OTHERS THEN
14:34:46 1990  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 1991  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 1992  END CHECK_PRODUCT_ELIGIBILITY;
14:34:46 1993  
14:34:46 1994  PROCEDURE GET_NOTIFICATION_TYPE_ID (
14:34:46 1995  	 in_offer_chain_id	  IN NUMBER,
14:34:46 1996  	 in_action_name 	  IN VARCHAR2,
14:34:46 1997  	 out_notification_type_id OUT NUMBER
14:34:46 1998  ) AS
14:34:46 1999  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_NOTIFICATION_TEMPLATE_ID';
14:34:46 2000  -- Variables
14:34:46 2001  var_action_id NUMBER;
14:34:46 2002  -- Exceptions
14:34:46 2003  BAD_ACTION_NAME	      EXCEPTION;
14:34:46 2004  MULTIPLY_ACTIONS_FOUND EXCEPTION;
14:34:46 2005  BEGIN
14:34:46 2006  
14:34:46 2007  	 BEGIN
14:34:46 2008  	   SELECT
14:34:46 2009  	     A.ID into var_action_id
14:34:46 2010  	   FROM
14:34:46 2011  	     ACTION A
14:34:46 2012  	   WHERE
14:34:46 2013  	     UPPER(A.NAME) = UPPER(in_action_name);
14:34:46 2014  	   EXCEPTION
14:34:46 2015  	     WHEN NO_DATA_FOUND THEN
14:34:46 2016  	       RAISE BAD_ACTION_NAME;
14:34:46 2017  	     WHEN TOO_MANY_ROWS THEN
14:34:46 2018  	       RAISE MULTIPLY_ACTIONS_FOUND;
14:34:46 2019  	 END;
14:34:46 2020  
14:34:46 2021  	 SELECT
14:34:46 2022  	   OCNT.NOTIFICATION_TYPE_ID into out_notification_type_id
14:34:46 2023  	 FROM
14:34:46 2024  	   OFFER_CHAIN_NOTIFICATION_TYPE OCNT
14:34:46 2025  	 WHERE
14:34:46 2026  	   OCNT.OFFER_CHAIN_ID = in_offer_chain_id
14:34:46 2027  	   AND OCNT.ACTION_ID = var_action_id;
14:34:46 2028  
14:34:46 2029  EXCEPTION
14:34:46 2030  WHEN NO_DATA_FOUND THEN
14:34:46 2031  	 out_notification_type_id := NULL;
14:34:46 2032  WHEN BAD_ACTION_NAME THEN
14:34:46 2033  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:46 2034  	   SPROC_NAME, 'Bad action name', SQLERRM);
14:34:46 2035  WHEN MULTIPLY_ACTIONS_FOUND THEN
14:34:46 2036  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:46 2037  	   SPROC_NAME, 'Found more then one action with given name', SQLERRM);
14:34:46 2038  WHEN OTHERS THEN
14:34:46 2039  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 2040  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 2041  END GET_NOTIFICATION_TYPE_ID;
14:34:46 2042  
14:34:46 2043  END PROCS_OFFER_CHAIN_V18;
14:34:46 2044  .
14:34:46 SQL> /

Package body created.

Elapsed: 00:00:00.26
14:34:46 SQL> 
14:34:46 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_POLLING_SYNC"
14:34:46   2  AS
14:34:46   3  	  --------------------------------------------------------------------------------
14:34:46   4  PROCEDURE GATHER_SYNC_EVENTS
14:34:46   5  	  (
14:34:46   6  	      in_last_timestamp TIMESTAMP,
14:34:46   7  	      out_new_timestamp OUT TIMESTAMP)
14:34:46   8  IS
14:34:46   9  BEGIN
14:34:46  10  	  out_new_timestamp := systimestamp;
14:34:46  11  	  GATHER_SYNC_EVENTS_RANGE(in_last_timestamp, out_new_timestamp, (3 / 24 / 60));
14:34:46  12  END;
14:34:46  13  	  --------------------------------------------------------------------------------
14:34:46  14  PROCEDURE GATHER_SYNC_EVENTS_RANGE(in_start_ts timestamp, in_end_ts timestamp, in_offset number)
14:34:46  15  IS
14:34:46  16  BEGIN
14:34:46  17  	  INSERT
14:34:46  18  	  INTO
14:34:46  19  	      core_owner.polling_sync
14:34:46  20  	      (
14:34:46  21  		  account_id,
14:34:46  22  		  group_id,
14:34:46  23  		  event_type,
14:34:46  24  		  event_date
14:34:46  25  	      )
14:34:46  26  	  select id, group_id, event_type, event_date from (
14:34:46  27  	      SELECT
14:34:46  28  		  a.id,
14:34:46  29  		  a.group_id,
14:34:46  30  		  'I' event_type,
14:34:46  31  		  in_end_ts event_date,
14:34:46  32  		  max(cl.change_time) last_change_time
14:34:46  33  	      FROM
14:34:46  34  		  core_hist_owner.change_log cl,
14:34:46  35  		  core_owner.credit_card cc,
14:34:46  36  		  core_owner.account a
14:34:46  37  	      WHERE
14:34:46  38  		  cl.change_time between in_start_ts-in_offset and in_end_ts
14:34:46  39  	      AND cl.item = 'CREDIT_CARD'
14:34:46  40  	      AND cl.id = cc.id
14:34:46  41  	      AND cc.account_id = a.id
14:34:46  42  	      GROUP BY a.id, a.group_id
14:34:46  43  	      UNION ALL
14:34:46  44  	      SELECT
14:34:46  45  		  a.id,
14:34:46  46  		  a.group_id,
14:34:46  47  		  'I',
14:34:46  48  		  in_end_ts,
14:34:46  49  		  max(cl.change_time) last_change_time
14:34:46  50  	      FROM
14:34:46  51  		  core_hist_owner.change_log cl,
14:34:46  52  		  core_owner.paypal p,
14:34:46  53  		  core_owner.account a
14:34:46  54  	      WHERE
14:34:46  55  		  cl.change_time between in_start_ts-in_offset and in_end_ts
14:34:46  56  	      AND cl.item = 'PAYPAL'
14:34:46  57  	      AND cl.id = p.id
14:34:46  58  	      AND p.account_id = a.id
14:34:46  59  	      GROUP BY a.id, a.group_id
14:34:46  60  	      UNION ALL
14:34:46  61  	      SELECT
14:34:46  62  		  a.id,
14:34:46  63  		  a.group_id,
14:34:46  64  		  'S',
14:34:46  65  		  in_end_ts,
14:34:46  66  		  max(cl.change_time) last_change_time
14:34:46  67  	      FROM
14:34:46  68  		  core_hist_owner.change_log cl,
14:34:46  69  		  core_owner.subscription s,
14:34:46  70  		  core_owner.account a
14:34:46  71  	      WHERE
14:34:46  72  		  cl.change_time between in_start_ts-in_offset and in_end_ts
14:34:46  73  	      AND cl.item = 'SUBSCRIPTION'
14:34:46  74  	      AND cl.id = s.id
14:34:46  75  	      AND s.account_id = a.id
14:34:46  76  	      GROUP BY a.id, a.group_id
14:34:46  77  	      UNION ALL
14:34:46  78  	      SELECT
14:34:46  79  		  a.id,
14:34:46  80  		  a.group_id,
14:34:46  81  		  'G',
14:34:46  82  		  in_end_ts,
14:34:46  83  		  max(cl.change_time) last_change_time
14:34:46  84  	      FROM
14:34:46  85  		  core_hist_owner.change_log cl,
14:34:46  86  		  core_owner.gift_certificate gc,
14:34:46  87  		  core_owner.account a
14:34:46  88  	      WHERE
14:34:46  89  		  cl.change_time between in_start_ts-in_offset and in_end_ts
14:34:46  90  	      AND cl.item = 'GIFT_CERTIFICATE'
14:34:46  91  	      AND cl.id = gc.id
14:34:46  92  	      AND gc.purchaser_group_id = a.group_id
14:34:46  93  	      GROUP BY a.id, a.group_id
14:34:46  94  	  ) t
14:34:46  95  	  where not exists (
14:34:46  96  	      select 1 --ps.account_id, ps.group_id, ps.event_type
14:34:46  97  	      from polling_sync ps
14:34:46  98  	      where ps.account_id = t.id
14:34:46  99  		and ps.group_id = t.group_id
14:34:46 100  		and ps.event_type = t.event_type
14:34:46 101  		and ps.event_date >= t.last_change_time
14:34:46 102  	  )
14:34:46 103  	  ;
14:34:46 104  END;
14:34:46 105  --------------------------------------------------------------------------------
14:34:46 106  FUNCTION CREATE_NEW_TRANSFER_SET
14:34:46 107  	  (
14:34:46 108  	      in_set_maximum NUMBER)
14:34:46 109  	  RETURN core_owner.polling_sync.set_id%type
14:34:46 110  IS
14:34:46 111  	  pragma autonomous_transaction;
14:34:46 112  	  v_set_id core_owner.polling_sync.set_id%type;
14:34:46 113  BEGIN
14:34:46 114  	  SELECT
14:34:46 115  	      pollsync_setid_seq.nextval
14:34:46 116  	  INTO
14:34:46 117  	      v_set_id
14:34:46 118  	  FROM
14:34:46 119  	      dual;
14:34:46 120  	  update
14:34:46 121  	    core_owner.polling_sync ps
14:34:46 122  	  set
14:34:46 123  	    ps.set_id = v_set_id
14:34:46 124  	  where
14:34:46 125  	    ps.set_id IS NULL and
14:34:46 126  	    rownum <= in_set_maximum
14:34:46 127  	  ;
14:34:46 128  	  COMMIT;
14:34:46 129  	  RETURN v_set_id;
14:34:46 130  END;
14:34:46 131  --------------------------------------------------------------------------------
14:34:46 132  FUNCTION RETREIVE_TRANSFER_SET
14:34:46 133  	  (
14:34:46 134  	      in_set_id core_owner.polling_sync.set_id%type)
14:34:46 135  	  RETURN sys_refcursor
14:34:46 136  IS
14:34:46 137  	  v_refcursor sys_refcursor;
14:34:46 138  BEGIN
14:34:46 139  	  UPDATE
14:34:46 140  	      core_owner.polling_sync ps
14:34:46 141  	  SET
14:34:46 142  	      ps.last_send_date = sysdate,
14:34:46 143  	      ps.num_calls = ps.num_calls + 1
14:34:46 144  	  WHERE
14:34:46 145  	      ps.set_id = in_set_id ;
14:34:46 146  	  OPEN v_refcursor FOR
14:34:46 147  	  SELECT
14:34:46 148  	      ps.set_id,
14:34:46 149  	      ps.group_id,
14:34:46 150  	      ps.event_type,
14:34:46 151  	      ps.event_date
14:34:46 152  	  FROM
14:34:46 153  	      core_owner.polling_sync ps
14:34:46 154  	  WHERE
14:34:46 155  	      ps.set_id = in_set_id
14:34:46 156  	  AND ps.group_id IS NOT NULL ;
14:34:46 157  	  RETURN v_refcursor;
14:34:46 158  END;
14:34:46 159  --------------------------------------------------------------------------------
14:34:46 160  PROCEDURE GET_TRANSFER_SET
14:34:46 161  	  (
14:34:46 162  	      in_set_maximum NUMBER,
14:34:46 163  	      in_max_retries NUMBER,
14:34:46 164  	      out_refcursor OUT sys_refcursor)
14:34:46 165  IS
14:34:46 166  	  v_set_id core_owner.polling_sync.set_id%type;
14:34:46 167  BEGIN
14:34:46 168  	  /* Look for previously sent but unconfirmed sets and
14:34:46 169  	  send again until max_retries calls */
14:34:46 170  	  FOR x IN
14:34:46 171  	  (
14:34:46 172  	      SELECT
14:34:46 173  		  ps.set_id,
14:34:46 174  		  COUNT( *) set_size
14:34:46 175  	      FROM
14:34:46 176  		  core_owner.polling_sync ps
14:34:46 177  	      WHERE
14:34:46 178  		  ps.event_date > sysdate - 14
14:34:46 179  	      AND ps.confirm_date IS NULL
14:34:46 180  	      AND ps.last_send_date IS NOT NULL
14:34:46 181  	      AND ps.num_calls < in_max_retries
14:34:46 182  	      GROUP BY
14:34:46 183  		  ps.set_id
14:34:46 184  	      ORDER BY
14:34:46 185  		  ps.set_id
14:34:46 186  	  )
14:34:46 187  	  LOOP
14:34:46 188  	      out_refcursor := Retreive_Transfer_Set(x.set_id) ;
14:34:46 189  	      RETURN;
14:34:46 190  	  END LOOP;
14:34:46 191  	  v_set_id := Create_New_Transfer_Set(in_set_maximum) ;
14:34:46 192  	  out_refcursor := Retreive_Transfer_Set(v_set_id) ;
14:34:46 193  	  RETURN;
14:34:46 194  END;
14:34:46 195  --------------------------------------------------------------------------------
14:34:46 196  PROCEDURE CONFIRM_TRANSFER_SET
14:34:46 197  	  (
14:34:46 198  	      in_set_id core_owner.polling_sync.set_id%type)
14:34:46 199  IS
14:34:46 200  	  v_unconfirmable EXCEPTION;
14:34:46 201  BEGIN
14:34:46 202  	  UPDATE
14:34:46 203  	      core_owner.polling_sync ps
14:34:46 204  	  SET
14:34:46 205  	      ps.confirm_date = systimestamp
14:34:46 206  	  WHERE
14:34:46 207  	      ps.set_id = in_set_id
14:34:46 208  	  AND ps.confirm_date IS NULL ;
14:34:46 209  	  IF(sql%rowcount < 1) THEN
14:34:46 210  	      raise v_unconfirmable;
14:34:46 211  	  END IF;
14:34:46 212  END;
14:34:46 213  PROCEDURE SET_LAST_RUN(ts in timestamp)
14:34:46 214  IS
14:34:46 215  BEGIN
14:34:46 216  	  UPDATE POLLING_SYNC_LASTRUN
14:34:46 217  	  SET last_run = current_timestamp;
14:34:46 218  	  IF ( sql%rowcount = 0 )
14:34:46 219  	  THEN
14:34:46 220  	    INSERT INTO POLLING_SYNC_LASTRUN VALUES (ts);
14:34:46 221  	  END if;
14:34:46 222  	  COMMIT;
14:34:46 223  END;
14:34:46 224  PROCEDURE GET_LAST_RUN(ts out timestamp)
14:34:46 225  IS
14:34:46 226  BEGIN
14:34:46 227  	  SELECT LAST_RUN INTO ts
14:34:46 228  	  FROM POLLING_SYNC_LASTRUN
14:34:46 229  	  WHERE ROWNUM < 2;
14:34:46 230  EXCEPTION
14:34:46 231  	WHEN NO_DATA_FOUND
14:34:46 232  	THEN
14:34:46 233  	  ts := current_timestamp;
14:34:46 234  END;
14:34:46 235  END PROCS_POLLING_SYNC;
14:34:46 236  .
14:34:46 SQL> /

Package body created.

Elapsed: 00:00:00.11
14:34:46 SQL> 
14:34:46 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_PRODUCT_V18" AS
14:34:46   2  
14:34:46   3  PROCEDURE GET_PRODUCTS (
14:34:46   4  /*
14:34:46   5  Throws exceptions:
14:34:46   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46   7  */
14:34:46   8  	in_status_id   IN  NUMBER,
14:34:46   9  	out_result_set OUT SYS_REFCURSOR
14:34:46  10  ) AS
14:34:46  11  SPROC_NAME CONSTANT VARCHAR2(12) := 'GET_PRODUCTS';
14:34:46  12  BEGIN
14:34:46  13  	OPEN out_result_set FOR
14:34:46  14  	SELECT
14:34:46  15  	  PRODUCT.ID,
14:34:46  16  	  PRODUCT.NAME,
14:34:46  17  	  PRODUCT.UNIT_PRICE,
14:34:46  18  	  PRODUCT.PRODUCTION_COST,
14:34:46  19  	  PRODUCT.CREATE_DATE,
14:34:46  20  	  PRODUCT.CREATED_BY,
14:34:46  21  	  PRODUCT.PRODUCT_STATUS_ID,
14:34:46  22  	  PRODUCT.PRODUCT_URI
14:34:46  23  	FROM
14:34:46  24  	  PRODUCT
14:34:46  25   WHERE
14:34:46  26  	  PRODUCT.PRODUCT_STATUS_ID = NVL(in_status_id, PRODUCT.PRODUCT_STATUS_ID);
14:34:46  27  EXCEPTION
14:34:46  28  WHEN OTHERS THEN
14:34:46  29  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46  30  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46  31  END GET_PRODUCTS;
14:34:46  32  
14:34:46  33  /******************************************************************************/
14:34:46  34  
14:34:46  35  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
14:34:46  36  	in_product_offering_id	IN NUMBER,
14:34:46  37  	out_result_set OUT SYS_REFCURSOR
14:34:46  38  ) AS
14:34:46  39  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PRODUCT_OFFERING_META_DATA';
14:34:46  40  -- VARIABLES
14:34:46  41  temp_product_offering_id NUMBER;
14:34:46  42  -- EXCEPTIONS
14:34:46  43  BAD_PRODUCT_OFFERING_ID EXCEPTION;
14:34:46  44  BEGIN
14:34:46  45  
14:34:46  46  	-- Check that product offering exists
14:34:46  47  	BEGIN
14:34:46  48  	  SELECT
14:34:46  49  	    PRODUCT_OFFERING.ID into temp_product_offering_id
14:34:46  50  	  FROM
14:34:46  51  	    PRODUCT_OFFERING
14:34:46  52  	  WHERE
14:34:46  53  	    PRODUCT_OFFERING.ID = in_product_offering_id;
14:34:46  54  	  EXCEPTION
14:34:46  55  	    WHEN NO_DATA_FOUND THEN
14:34:46  56  	      RAISE BAD_PRODUCT_OFFERING_ID;
14:34:46  57  	END;
14:34:46  58  
14:34:46  59  	OPEN out_result_set FOR
14:34:46  60  	SELECT
14:34:46  61  	  PRODUCT_OFFERING_META_DATA.ID,
14:34:46  62  	  PRODUCT_OFFERING_META_DATA.NAME,
14:34:46  63  	  PRODUCT_OFFERING_META_DATA.VALUE,
14:34:46  64  	  PRODUCT_OFFERING_META_DATA.CREATED_BY,
14:34:46  65  	  PRODUCT_OFFERING_META_DATA.CREATE_DATE
14:34:46  66  	FROM
14:34:46  67  	  PRODUCT_OFFERING_META_DATA
14:34:46  68  	WHERE
14:34:46  69  	  PRODUCT_OFFERING_META_DATA.PRODUCT_OFFERING_ID = in_product_offering_id;
14:34:46  70  
14:34:46  71  EXCEPTION
14:34:46  72  WHEN BAD_PRODUCT_OFFERING_ID THEN
14:34:46  73  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46  74  	  SPROC_NAME, 'No such product offering id');
14:34:46  75  WHEN OTHERS THEN
14:34:46  76  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46  77  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46  78  END GET_PRODUCT_OFFERING_META_DATA;
14:34:46  79  
14:34:46  80  /******************************************************************************/
14:34:46  81  
14:34:46  82  PROCEDURE GET_PRODUCT_ELIGIBIL_BY_NAME (
14:34:46  83  /*
14:34:46  84  Throws exceptions:
14:34:46  85  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:46  86  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:46  87  */
14:34:46  88  	in_product_id	    IN NUMBER,
14:34:46  89  	in_eligibility_name IN VARCHAR2 DEFAULT NULL,
14:34:46  90  	out_result_set	    OUT SYS_REFCURSOR
14:34:46  91  ) AS
14:34:46  92  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_PRODUCT_ELIGIBIL_BY_NAME';
14:34:46  93  -- VARIABLES
14:34:46  94  temp_product_id NUMBER;
14:34:46  95  -- EXCEPTIONS
14:34:46  96  BAD_PRODUCT_ID EXCEPTION;
14:34:46  97  BEGIN
14:34:46  98  
14:34:46  99  	BEGIN
14:34:46 100  	  SELECT
14:34:46 101  	    PRODUCT.ID into temp_product_id
14:34:46 102  	  FROM
14:34:46 103  	    PRODUCT
14:34:46 104  	  WHERE
14:34:46 105  	    PRODUCT.ID = in_product_id;
14:34:46 106  	  EXCEPTION
14:34:46 107  	    WHEN NO_DATA_FOUND THEN
14:34:46 108  	      RAISE BAD_PRODUCT_ID;
14:34:46 109  	END;
14:34:46 110  
14:34:46 111  	OPEN out_result_set FOR
14:34:46 112  	SELECT
14:34:46 113  	  PRODUCT_ELIGIBILITY.ID
14:34:46 114  	FROM
14:34:46 115  	  PRODUCT_ELIGIBILITY
14:34:46 116  	WHERE
14:34:46 117  	  PRODUCT_ELIGIBILITY.ID = in_product_id
14:34:46 118  	  AND UPPER(PRODUCT_ELIGIBILITY.NAME) = UPPER(NVL(in_eligibility_name, PRODUCT_ELIGIBILITY.NAME));
14:34:46 119  
14:34:46 120  EXCEPTION
14:34:46 121  WHEN BAD_PRODUCT_ID THEN
14:34:46 122  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 123  	  SPROC_NAME, 'No such product');
14:34:46 124  WHEN OTHERS THEN
14:34:46 125  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 126  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 127  END GET_PRODUCT_ELIGIBIL_BY_NAME;
14:34:46 128  
14:34:46 129  /******************************************************************************/
14:34:46 130  
14:34:46 131  PROCEDURE GET_PRODUCT_BY_ID (
14:34:46 132  	in_product_id  IN NUMBER,
14:34:46 133  	out_result_set OUT SYS_REFCURSOR
14:34:46 134  ) AS
14:34:46 135  SPROC_NAME CONSTANT VARCHAR2(17) := 'GET_PRODUCT_BY_ID';
14:34:46 136  -- VARIABLES
14:34:46 137  temp_product_id NUMBER;
14:34:46 138  -- EXCEPTIONS
14:34:46 139  BAD_PRODUCT_ID EXCEPTION;
14:34:46 140  BEGIN
14:34:46 141  
14:34:46 142  	BEGIN
14:34:46 143  	  SELECT
14:34:46 144  	    PRODUCT.ID into temp_product_id
14:34:46 145  	  FROM
14:34:46 146  	    PRODUCT
14:34:46 147  	  WHERE
14:34:46 148  	    PRODUCT.ID = in_product_id;
14:34:46 149  	  EXCEPTION
14:34:46 150  	    WHEN NO_DATA_FOUND THEN
14:34:46 151  	      RAISE BAD_PRODUCT_ID;
14:34:46 152  	END;
14:34:46 153  
14:34:46 154  	OPEN out_result_set FOR
14:34:46 155  	SELECT
14:34:46 156  	  PRODUCT.ID,
14:34:46 157  	  PRODUCT.NAME,
14:34:46 158  	  PRODUCT.PRODUCT_STATUS_ID,
14:34:46 159  	  PRODUCT.PRODUCT_URI,
14:34:46 160  	  PRODUCT.PRODUCTION_COST,
14:34:46 161  	  PRODUCT.UNIT_PRICE,
14:34:46 162  	  PRODUCT.CREATE_DATE,
14:34:46 163  	  PRODUCT.CREATED_BY
14:34:46 164  	FROM
14:34:46 165  	  PRODUCT
14:34:46 166  	WHERE
14:34:46 167  	  PRODUCT.ID = in_product_id;
14:34:46 168  
14:34:46 169  EXCEPTION
14:34:46 170  WHEN BAD_PRODUCT_ID THEN
14:34:46 171  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 172  	  SPROC_NAME, 'No such product');
14:34:46 173  WHEN OTHERS THEN
14:34:46 174  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 175  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 176  END GET_PRODUCT_BY_ID;
14:34:46 177  
14:34:46 178  /******************************************************************************/
14:34:46 179  
14:34:46 180  PROCEDURE GET_PRD_OFFERING_BY_LINE_IT_ID (
14:34:46 181  	in_line_item_id IN NUMBER,
14:34:46 182  	out_result_set	OUT SYS_REFCURSOR
14:34:46 183  ) AS
14:34:46 184  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PRD_OFFERING_BY_LINE_IT_ID';
14:34:46 185  -- VARIABLES
14:34:46 186  temp_line_item_id NUMBER;
14:34:46 187  -- EXCEPTIONS
14:34:46 188  BAD_LINE_ITEM_ID EXCEPTION;
14:34:46 189  BEGIN
14:34:46 190  
14:34:46 191  	BEGIN
14:34:46 192  	  SELECT
14:34:46 193  	    LINE_ITEM.ID into temp_line_item_id
14:34:46 194  	  FROM
14:34:46 195  	    LINE_ITEM
14:34:46 196  	  WHERE
14:34:46 197  	    LINE_ITEM.ID = in_line_item_id;
14:34:46 198  	  EXCEPTION
14:34:46 199  	    WHEN NO_DATA_FOUND THEN
14:34:46 200  	      RAISE BAD_LINE_ITEM_ID;
14:34:46 201  	END;
14:34:46 202  
14:34:46 203  	OPEN out_result_set FOR
14:34:46 204  	SELECT
14:34:46 205  	  PRODUCT_OFFERING.ID,
14:34:46 206  	  PRODUCT_OFFERING.PRODUCT_ID,
14:34:46 207  	  PRODUCT_OFFERING.QUANTITY,
14:34:46 208  	  PRODUCT_OFFERING.UNIT_PRICE,
14:34:46 209  	  PRODUCT_OFFERING.TAX_CATEGORY_ID,
14:34:46 210  	  PRODUCT_OFFERING.CREATE_DATE,
14:34:46 211  	  PRODUCT_OFFERING.CREATED_BY,
14:34:46 212  	  PRODUCT_OFFERING.TAX_POLICY_TYPE_ID,
14:34:46 213  	  CAPABILITY.ID CAP_ID,
14:34:46 214  	  CAPABILITY.CODE CAP_CODE,
14:34:46 215  	  CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
14:34:46 216  	  CAPABILITY.SHAREABLE CAP_SHAREABLE
14:34:46 217  	FROM
14:34:46 218  	  PRODUCT_OFFERING
14:34:46 219  	  INNER JOIN LINE_ITEM ON LINE_ITEM.PRODUCT_OFFER_ID = PRODUCT_OFFERING.ID
14:34:46 220  	  INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
14:34:46 221  	WHERE
14:34:46 222  	  LINE_ITEM.ID = in_line_item_id;
14:34:46 223  
14:34:46 224  EXCEPTION
14:34:46 225  WHEN BAD_LINE_ITEM_ID THEN
14:34:46 226  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 227  	  SPROC_NAME, 'No such line item');
14:34:46 228  WHEN OTHERS THEN
14:34:46 229  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 230  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 231  END GET_PRD_OFFERING_BY_LINE_IT_ID;
14:34:46 232  
14:34:46 233  /******************************************************************************/
14:34:46 234  
14:34:46 235  PROCEDURE GET_PRD_OFFERING_BY_ID (
14:34:46 236  	in_product_offering_id IN NUMBER,
14:34:46 237  	out_result_set	OUT SYS_REFCURSOR
14:34:46 238  ) AS
14:34:46 239  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PRD_OFFERING_BY_ID';
14:34:46 240  BEGIN
14:34:46 241  	OPEN out_result_set FOR
14:34:46 242  	SELECT
14:34:46 243  	  PRODUCT_OFFERING.ID,
14:34:46 244  	  PRODUCT_OFFERING.PRODUCT_ID,
14:34:46 245  	  PRODUCT_OFFERING.QUANTITY,
14:34:46 246  	  PRODUCT_OFFERING.UNIT_PRICE,
14:34:46 247  	  PRODUCT_OFFERING.TAX_CATEGORY_ID,
14:34:46 248  	  PRODUCT_OFFERING.CREATE_DATE,
14:34:46 249  	  PRODUCT_OFFERING.CREATED_BY,
14:34:46 250  	  CAPABILITY.ID CAP_ID,
14:34:46 251  	  CAPABILITY.CODE CAP_CODE,
14:34:46 252  	  CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
14:34:46 253  	  CAPABILITY.SHAREABLE CAP_SHAREABLE
14:34:46 254  	FROM
14:34:46 255  	  PRODUCT_OFFERING
14:34:46 256  	  INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
14:34:46 257  	WHERE
14:34:46 258  	  PRODUCT_OFFERING.ID = in_product_offering_id;
14:34:46 259  
14:34:46 260  EXCEPTION
14:34:46 261  WHEN OTHERS THEN
14:34:46 262  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 263  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 264  END GET_PRD_OFFERING_BY_ID;
14:34:46 265  
14:34:46 266  /******************************************************************************/
14:34:46 267  
14:34:46 268  PROCEDURE GET_PRODUCT_OFFERING_DISCOUNTS(
14:34:46 269  	in_product_offering_id IN NUMBER,
14:34:46 270  	out_result_set	       OUT SYS_REFCURSOR
14:34:46 271  ) AS
14:34:46 272  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PRODUCT_OFFERING_DISCOUNTS';
14:34:46 273  -- VARIABLES
14:34:46 274  temp_product_offering_id NUMBER;
14:34:46 275  -- EXCEPTIONS
14:34:46 276  BAD_PRODUCT_OFFERING_ID EXCEPTION;
14:34:46 277  BEGIN
14:34:46 278  
14:34:46 279  	BEGIN
14:34:46 280  	  SELECT
14:34:46 281  	    PRODUCT_OFFERING.ID into temp_product_offering_id
14:34:46 282  	  FROM
14:34:46 283  	    PRODUCT_OFFERING
14:34:46 284  	  WHERE
14:34:46 285  	    PRODUCT_OFFERING.ID = in_product_offering_id;
14:34:46 286  	  EXCEPTION
14:34:46 287  	    WHEN NO_DATA_FOUND THEN
14:34:46 288  	      RAISE BAD_PRODUCT_OFFERING_ID;
14:34:46 289  	END;
14:34:46 290  
14:34:46 291  	OPEN out_result_set FOR
14:34:46 292  	SELECT
14:34:46 293  	  DISCOUNT.ID,
14:34:46 294  	  DISCOUNT.NAME,
14:34:46 295  	  DISCOUNT.FIXED_AMOUNT,
14:34:46 296  	  DISCOUNT.PERCENT_AMOUNT,
14:34:46 297  	  DISCOUNT.DISCOUNT_TYPE_ID,
14:34:46 298  	  DISCOUNT.CREATE_DATE,
14:34:46 299  	  DISCOUNT.CREATED_BY,
14:34:46 300  	  DISCOUNT.DESCRIPTION
14:34:46 301  	FROM
14:34:46 302  	  DISCOUNT
14:34:46 303  	  INNER JOIN DISCOUNT_PRODUCT_OFFERING on DISCOUNT.ID = DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID
14:34:46 304  	WHERE
14:34:46 305  	  DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = in_product_offering_id;
14:34:46 306  
14:34:46 307  EXCEPTION
14:34:46 308  WHEN BAD_PRODUCT_OFFERING_ID THEN
14:34:46 309  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:46 310  	  SPROC_NAME, 'No such product offering');
14:34:46 311  WHEN OTHERS THEN
14:34:46 312  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:46 313  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:46 314  END GET_PRODUCT_OFFERING_DISCOUNTS;
14:34:46 315  
14:34:46 316  END PROCS_PRODUCT_V18;
14:34:46 317  .
14:34:46 SQL> /

Package body created.

Elapsed: 00:00:00.04
14:34:46 SQL> 
14:34:46 SQL> CREATE OR REPLACE
14:34:46   2  PACKAGE BODY PROCS_REPORTING AS
14:34:46   3  
14:34:46   4  ----
14:34:46   5  --------------------------------------------------------------------------------
14:34:46   6  ----
14:34:46   7  	  procedure ext_charge(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46   8  	  is
14:34:46   9  	  begin
14:34:46  10  	      open out_cursor for
14:34:46  11  		  with ids as ( select id from change_log cl where cl.item = 'CHARGE' and cl.change_time between in_start_date and in_end_date group by id )
14:34:46  12  		  select c.id charge_id, c.invoice_id, c.transaction_id, c.instrument_type_id, it.value instrument_type
14:34:46  13  			,c.instrument_id, c.charge_amount, c.charge_status_id, cs.value charge_status
14:34:46  14  			,c.create_date, c.update_date
14:34:46  15  		  from charge c
14:34:46  16  		      ,charge_status cs
14:34:46  17  		      ,instrument_type it
14:34:46  18  		      ,ids
14:34:46  19  		  where c.id = ids.id
14:34:46  20  		    and c.charge_status_id = cs.id
14:34:46  21  		    and c.instrument_type_id = it.id
14:34:46  22  	      ;
14:34:46  23  	  end;
14:34:46  24  ----
14:34:46  25  --------------------------------------------------------------------------------
14:34:46  26  ----
14:34:46  27  	  procedure ext_license(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46  28  	  is
14:34:46  29  	  begin
14:34:46  30  	      open out_cursor for
14:34:46  31  		  with ids as (select id from change_log cl where cl.item = 'LICENSE' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46  32  		  select l.id license_id, l.start_date, l.end_date, l.offer_id, l.subscription_id, l.invoice_id
14:34:46  33  			,l.license_status_id, ls.value license_status ,l.create_date, l.update_date
14:34:46  34  			,l.current_offer_index, l.current_offer_recurr_num, l.entitlement_end_date, l.grace_start_date, l.grace_end_date
14:34:46  35  		  from license l
14:34:46  36  		      ,license_status ls
14:34:46  37  		      ,ids
14:34:46  38  		  where l.id = ids.id
14:34:46  39  		    and l.license_status_id = ls.id
14:34:46  40  	      ;
14:34:46  41  	  end;
14:34:46  42  ----
14:34:46  43  --------------------------------------------------------------------------------
14:34:46  44  ----
14:34:46  45  	  procedure ext_invoice(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46  46  	  is
14:34:46  47  	  begin
14:34:46  48  	      open out_cursor for
14:34:46  49  		  with ids as ( select id from change_log cl where cl.item = 'INVOICE' and cl.change_time between in_start_date and in_end_date group by id )
14:34:46  50  		  select
14:34:46  51  		    i.id invoice_id,
14:34:46  52  		    i.create_date,
14:34:46  53  		    i.update_date,
14:34:46  54  		    i.invoice_status_id,
14:34:46  55  		    istat.value invoice_status,
14:34:46  56  		    NVL(
14:34:46  57  		       (select offer_chain_id from gift_certificate g where g.purchase_invoice_id = i.id and rownum <= 1),
14:34:46  58  		       (select offer_chain_id from subscription s, license l where l.subscription_id = s.id and l.invoice_id = i.id and rownum <= 1)
14:34:46  59  		    ) offer_chain_id
14:34:46  60  		  from	   invoice i
14:34:46  61  		      join invoice_status istat ON istat.id = i.invoice_status_id
14:34:46  62  		      join ids			on ids.id = i.id
14:34:46  63  		  where 1 = 1
14:34:46  64  	      ;
14:34:46  65  	  end;
14:34:46  66  ----
14:34:46  67  --------------------------------------------------------------------------------
14:34:46  68  ----
14:34:46  69  	  procedure ext_line_item(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46  70  	  is
14:34:46  71  	  begin
14:34:46  72  	      open out_cursor for
14:34:46  73  		  with ids as ( select id from change_log cl where cl.item = 'LINE_ITEM' and cl.change_time between in_start_date and in_end_date group by id )
14:34:46  74  		  select li.id line_item_id, li.invoice_id, li.product_offer_id, li.amount, li.quantity
14:34:46  75  		    ,li.discount_amount, li.taxes_amount, li.create_date
14:34:46  76  		  from line_item li
14:34:46  77  		    , ids
14:34:46  78  		  where li.id = ids.id
14:34:46  79  	      ;
14:34:46  80  	  end;
14:34:46  81  ----
14:34:46  82  --------------------------------------------------------------------------------
14:34:46  83  ----
14:34:46  84  	  procedure ext_account(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46  85  	  is
14:34:46  86  	  begin
14:34:46  87  	      open out_cursor for
14:34:46  88  		  with ids as (select id from change_log cl where cl.item = 'ACCOUNT' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46  89  		  select a.id account_id, a.account_status_id, astat.value account_status, a.group_id, a.suspend_date
14:34:46  90  			,a.create_date, a.update_date, a.instrument_type_id, it.value instrument_type
14:34:46  91  			,a.instrument_id, a.tax_exempt_id
14:34:46  92  			-- need system category??
14:34:46  93  		  from account a
14:34:46  94  		      ,account_status astat
14:34:46  95  		      ,instrument_type it
14:34:46  96  		      , ids
14:34:46  97  		  where a.id = ids.id
14:34:46  98  		    and astat.id = a.account_status_id
14:34:46  99  		    and a.instrument_type_id = it.id(+)
14:34:46 100  	      ;
14:34:46 101  	  end;
14:34:46 102  ----
14:34:46 103  --------------------------------------------------------------------------------
14:34:46 104  ----
14:34:46 105  	  procedure ext_subscription(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 106  	  is
14:34:46 107  	  begin
14:34:46 108  	      open out_cursor for
14:34:46 109  		  with ids as (select id from change_log cl where cl.item = 'SUBSCRIPTION' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 110  		  select s.id subscription_id, s.account_id, s.purchase_date, s.offer_chain_id
14:34:46 111  			,s.cancellation_date, sct.value cancellation_reason,0 cancellation_is_credit
14:34:46 112  			,s.create_date, s.update_date, s.subscription_status_id, ss.value subscription_status
14:34:46 113  			,s.instrument_type_id, it.value instrument_type, s.instrument_id, s.updated_by
14:34:46 114  		  from subscription s
14:34:46 115  		      ,subscription_status ss
14:34:46 116  		      ,subscription_cancel_reason sct
14:34:46 117  		      ,instrument_type it
14:34:46 118  		      , ids
14:34:46 119  		  where s.id = ids.id
14:34:46 120  		    and ss.id = s.subscription_status_id
14:34:46 121  		    and s.instrument_type_id = it.id
14:34:46 122  		    and sct.id(+) = s.sct_id
14:34:46 123  	      ;
14:34:46 124  	  end;
14:34:46 125  ----
14:34:46 126  --------------------------------------------------------------------------------
14:34:46 127  ----
14:34:46 128  	  procedure ext_transaction(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 129  	  is
14:34:46 130  	  begin
14:34:46 131  	      open out_cursor for
14:34:46 132  		  with ids as (select id from change_log cl where cl.item = 'TRANSACTION' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 133  		  select t.id transaction_id, t.transaction_amount
14:34:46 134  			,t.transaction_status_id, ts.value transaction_status, t.order_id
14:34:46 135  			,t.create_date, t.update_date, t.is_settled
14:34:46 136  		  from transaction t
14:34:46 137  		      ,transaction_status ts
14:34:46 138  		      , ids
14:34:46 139  		  where t.id = ids.id
14:34:46 140  		    and t.transaction_status_id = ts.id
14:34:46 141  	      ;
14:34:46 142  	  end;
14:34:46 143  ----
14:34:46 144  --------------------------------------------------------------------------------
14:34:46 145  ----
14:34:46 146  	  procedure ext_offer_chain(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 147  	  is
14:34:46 148  	  begin
14:34:46 149  	      open out_cursor for
14:34:46 150  		  with ids as (select id from change_log cl where cl.item = 'OFFER_CHAIN' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 151  		  select oc.id offer_chain_id, oc.name, oc.description, oc.offer_chain_status_id, ocs.value offer_chain_status
14:34:46 152  			,oc.adoptability_window_start_date adoptability_start_date, oc.adoptability_window_end_date adoptability_end_date
14:34:46 153  			,oc.is_gift_certificate, oc.product_uri, oc.create_date, oc.update_date, oc.vendor_source_id, vs.name vendor_source_name
14:34:46 154  			,oc.billing_source_id, bs.name billing_source_name
14:34:46 155  			,oc.is_seat_license,oc.group_account_type_id
14:34:46 156  		  from offer_chain oc
14:34:46 157  		      , offer_chain_status ocs
14:34:46 158  		      , ids
14:34:46 159  		      , vendor_source vs
14:34:46 160  		      , billing_source bs
14:34:46 161  		  where oc.id = ids.id
14:34:46 162  		    and oc.offer_chain_status_id = ocs.id
14:34:46 163  		    and oc.vendor_source_id = vs.id
14:34:46 164  		    and oc.billing_source_id = bs.id
14:34:46 165  	      ;
14:34:46 166  	  end;
14:34:46 167  ----
14:34:46 168  --------------------------------------------------------------------------------
14:34:46 169  ----
14:34:46 170  	  procedure ext_offer_offer_chain(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 171  	  is
14:34:46 172  	  begin
14:34:46 173  	      open out_cursor for
14:34:46 174  		  with ids as (select combined_id id from change_log cl where cl.item = 'OFFER_OFFER_CHAIN' and cl.change_time between in_start_date and in_end_date group by combined_id)
14:34:46 175  		  select ooc.offer_id||'~'||ooc.offer_chain_id offer_offer_chain_id, ooc.offer_id, ooc.offer_chain_id
14:34:46 176  			,ooc.index_value, ooc.num_recurrences, ooc.create_date, ooc.update_date
14:34:46 177  		  from offer_offer_chain ooc
14:34:46 178  		  , ids
14:34:46 179  		  where ooc.offer_id||'~'||ooc.offer_chain_id = ids.id
14:34:46 180  	      ;
14:34:46 181  	  end;
14:34:46 182  ----
14:34:46 183  --------------------------------------------------------------------------------
14:34:46 184  ----
14:34:46 185  	  procedure ext_offer(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 186  	  is
14:34:46 187  	  begin
14:34:46 188  	      open out_cursor for
14:34:46 189  		  with ids as (select id from change_log cl where cl.item = 'OFFER' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 190  		  select o.id offer_id, o.offer_status_id, os.value offer_status, o.entitlement_duration, o.create_date, o.update_date
14:34:46 191  		  from offer o
14:34:46 192  		      ,offer_status os
14:34:46 193  		      , ids
14:34:46 194  		  where o.id = ids.id
14:34:46 195  		    and o.offer_status_id = os.id
14:34:46 196  	      ;
14:34:46 197  	  end;
14:34:46 198  ----
14:34:46 199  --------------------------------------------------------------------------------
14:34:46 200  ----
14:34:46 201  	  procedure ext_gift_certificate(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 202  	  is
14:34:46 203  	  begin
14:34:46 204  	      open out_cursor for
14:34:46 205  		  with ids as (select id from change_log cl where cl.item = 'GIFT_CERTIFICATE' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 206  		  select  gc.id gift_certificate_id, gc.purchaser_group_id, gc.purchase_invoice_id, gc.offer_chain_id
14:34:46 207  			 ,gc.expiration_date, gc.purchase_date
14:34:46 208  			 ,gc.gift_certificate_status_id, gcs.value gift_certificate_status, gc.redeemer_group_id
14:34:46 209  			 ,gc.finalized_invoice_id, gc.create_date, gc.update_date
14:34:46 210  			 ,recipient_address_id
14:34:46 211  			 ,redeemer_address_id
14:34:46 212  			 ,recipient_notify_date
14:34:46 213  			 ,recipient_name
14:34:46 214  			 ,redemption_date
14:34:46 215  			 ,recipient_email
14:34:46 216  		  from gift_certificate gc
14:34:46 217  		      ,gift_certificate_status gcs
14:34:46 218  		      , ids
14:34:46 219  		  where gc.id = ids.id
14:34:46 220  		    and gc.gift_certificate_status_id = gcs.id
14:34:46 221  	      ;
14:34:46 222  	  end;
14:34:46 223  ----
14:34:46 224  --------------------------------------------------------------------------------
14:34:46 225  ----
14:34:46 226  	  procedure ext_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 227  	  is
14:34:46 228  	  begin
14:34:46 229  	      open out_cursor for
14:34:46 230  		  with ids as (select id from change_log cl where cl.item = 'PRODUCT_OFFERING' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 231  		  select po.id product_offering_id, po.product_id, po.unit_price, po.quantity, po.create_date
14:34:46 232  		  from product_offering po
14:34:46 233  		  , ids
14:34:46 234  		  where po.id = ids.id
14:34:46 235  	      ;
14:34:46 236  	  end;
14:34:46 237  ----
14:34:46 238  --------------------------------------------------------------------------------
14:34:46 239  ----
14:34:46 240  	  procedure ext_product(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 241  	  is
14:34:46 242  	  begin
14:34:46 243  	      open out_cursor for
14:34:46 244  		  with ids as (select id from change_log cl where cl.item = 'PRODUCT' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 245  		  select p.id product_id, p.name, p.unit_price, p.production_cost, p.product_status_id, ps.value product_status
14:34:46 246  			,product_uri, p.create_date
14:34:46 247  		  from product p
14:34:46 248  		      ,product_status ps
14:34:46 249  		      , ids
14:34:46 250  		  where p.id = ids.id
14:34:46 251  		    and p.product_status_id = ps.id
14:34:46 252  	      ;
14:34:46 253  	  end;
14:34:46 254  ----
14:34:46 255  --------------------------------------------------------------------------------
14:34:46 256  ----
14:34:46 257  	  procedure ext_offer_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 258  	  is
14:34:46 259  	  begin
14:34:46 260  	      open out_cursor for
14:34:46 261  		  with ids as (select combined_id id from change_log cl where cl.item = 'OFFER_PRODUCT_OFFERING' and cl.change_time between in_start_date and in_end_date group by combined_id)
14:34:46 262  		  select opo.product_offering_id||'~'||opo.offer_id, opo.product_offering_id, opo.offer_id, opo.create_date
14:34:46 263  		  from offer_product_offering opo
14:34:46 264  		  , ids
14:34:46 265  		  where opo.product_offering_id||'~'||opo.offer_id = ids.id
14:34:46 266  	      ;
14:34:46 267  	  end;
14:34:46 268  ----
14:34:46 269  --------------------------------------------------------------------------------
14:34:46 270  ----
14:34:46 271  	  procedure ext_discount_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 272  	  is
14:34:46 273  	  begin
14:34:46 274  	      open out_cursor for
14:34:46 275  		  with ids as (select combined_id id from change_log cl where cl.item = 'DISCOUNT_PRODUCT_OFFERING' and cl.change_time between in_start_date and in_end_date group by combined_id)
14:34:46 276  		  select dpo.discount_id||'~'||dpo.product_offering_id, dpo.discount_id, dpo.product_offering_id, dpo.create_date
14:34:46 277  		  from discount_product_offering dpo
14:34:46 278  		  , ids
14:34:46 279  		  where dpo.discount_id||'~'||dpo.product_offering_id = ids.id
14:34:46 280  	      ;
14:34:46 281  	  end;
14:34:46 282  ----
14:34:46 283  --------------------------------------------------------------------------------
14:34:46 284  ----
14:34:46 285  	  procedure ext_discount(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 286  	  is
14:34:46 287  	  begin
14:34:46 288  	      open out_cursor for
14:34:46 289  		  with ids as (select id from change_log cl where cl.item = 'DISCOUNT' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 290  		  select d.id discount_id, d.name, d.description, d.fixed_amount, d.percent_amount
14:34:46 291  			,d.discount_type_id, dt.value discount_type, d.create_date
14:34:46 292  		  from discount d
14:34:46 293  		      ,discount_type dt
14:34:46 294  		      , ids
14:34:46 295  		  where d.id = ids.id
14:34:46 296  		    and d.discount_type_id = dt.id
14:34:46 297  	      ;
14:34:46 298  	  end;
14:34:46 299  ----
14:34:46 300  --------------------------------------------------------------------------------
14:34:46 301  ----
14:34:46 302  	  procedure ext_product_eligibility(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 303  	  is
14:34:46 304  	  begin
14:34:46 305  	      open out_cursor for
14:34:46 306  		  with ids as (select id from change_log cl where cl.item = 'PRODUCT_ELIGIBILITY' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 307  		  select pg.id product_eligibility_id, pg.product_id, pg.name, pg.value, pg.create_date
14:34:46 308  		  from product_eligibility pg
14:34:46 309  		  , ids
14:34:46 310  		  where pg.id = ids.id
14:34:46 311  	      ;
14:34:46 312  	  end;
14:34:46 313  ----
14:34:46 314  --------------------------------------------------------------------------------
14:34:46 315  ----
14:34:46 316  	  procedure ext_offer_chain_eligibility(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 317  	  is
14:34:46 318  	  begin
14:34:46 319  	      open out_cursor for
14:34:46 320  		  with ids as (select id from change_log cl where cl.item = 'OFFER_CHAIN_ELIGIBILITY' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 321  		  select oce.id offer_chain_eligibility_id, oce.offer_chain_id, oce.name, oce.value, oce.create_date
14:34:46 322  		  from offer_chain_eligibility oce
14:34:46 323  		  , ids
14:34:46 324  		  where oce.id = ids.id
14:34:46 325  	      ;
14:34:46 326  	  end;
14:34:46 327  ----
14:34:46 328  --------------------------------------------------------------------------------
14:34:46 329  ----
14:34:46 330  	  procedure ext_offer_chain_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 331  	  is
14:34:46 332  	  begin
14:34:46 333  	      open out_cursor for
14:34:46 334  		  with ids as (select id from change_log cl where cl.item = 'OFFER_CHAIN_META_DATA' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 335  		  select ocm.id offer_chain_meta_data_id, ocm.offer_chain_id, ocm.name, ocm.value, ocm.create_date
14:34:46 336  		  from offer_chain_meta_data ocm
14:34:46 337  		  , ids
14:34:46 338  		  where ocm.id = ids.id
14:34:46 339  	      ;
14:34:46 340  	  end;
14:34:46 341  ----
14:34:46 342  --------------------------------------------------------------------------------
14:34:46 343  ----
14:34:46 344  	  procedure ext_product_offering_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 345  	  is
14:34:46 346  	  begin
14:34:46 347  	      open out_cursor for
14:34:46 348  		  with ids as (select id from change_log cl where cl.item = 'PRODUCT_OFFERING_META_DATA' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 349  		  select pom.id prod_offer_meta_data_id, pom.product_offering_id, pom.name, pom.value, pom.create_date
14:34:46 350  		  from product_offering_meta_data pom
14:34:46 351  		  , ids
14:34:46 352  		  where pom.id = ids.id
14:34:46 353  	      ;
14:34:46 354  	  end;
14:34:46 355  ----
14:34:46 356  --------------------------------------------------------------------------------
14:34:46 357  ----
14:34:46 358  	  procedure ext_subscription_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 359  	  is
14:34:46 360  	  begin
14:34:46 361  	      open out_cursor for
14:34:46 362  		  with ids as (select id from change_log cl where cl.item = 'SUBSCRIPTION_META_DATA' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 363  		  select sm.id subscription_meta_data_id, sm.subscription_id, sm.name, sm.value, sm.create_date
14:34:46 364  		  from subscription_meta_data sm
14:34:46 365  		  , ids
14:34:46 366  		  where sm.id = ids.id
14:34:46 367  	      ;
14:34:46 368  	  end;
14:34:46 369  ----
14:34:46 370  --------------------------------------------------------------------------------
14:34:46 371  ----
14:34:46 372  	  procedure ext_credit_card(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 373  	  is
14:34:46 374  	  begin
14:34:46 375  	      open out_cursor for
14:34:46 376  		  with ids as (select id from change_log cl where cl.item = 'CREDIT_CARD' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 377  		  select cc.id credit_card_id, cc.account_id, cc.instrument_name, cc.state, cc.city, cc.postal_code
14:34:46 378  			,cc.country, cc.expiration_date, cc.credit_card_type_id, cct.value credit_card_type
14:34:46 379  			,cc.credit_card_status_id, ccs.value credit_card_status, cc.create_date, cc.update_date
14:34:46 380  		  from credit_card cc
14:34:46 381  		      ,credit_card_type cct
14:34:46 382  		      ,credit_card_status ccs
14:34:46 383  		      , ids
14:34:46 384  		  where cc.id = ids.id
14:34:46 385  		    and cc.credit_card_type_id = cct.id(+)
14:34:46 386  		    and cc.credit_card_status_id = ccs.id
14:34:46 387  	      ;
14:34:46 388  	  end;
14:34:46 389  ----
14:34:46 390  --------------------------------------------------------------------------------
14:34:46 391  ----
14:34:46 392  	  procedure ext_transaction_attempt(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 393  	  is
14:34:46 394  	  begin
14:34:46 395  	      open out_cursor for
14:34:46 396  		  with ids as (select id from change_log cl where cl.item = 'TRANSACTION_ATTEMPT' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 397  		  select ta.id transaction_attempt_id, ta.transaction_id, ta.external_transaction_id
14:34:46 398  			,ta.transaction_start_time, ta.external_status_code, ta.external_status_message
14:34:46 399  			,ta.transaction_attempt_status_id trans_attempt_status_id, tas.value transaction_attempt_status
14:34:46 400  			,ta.create_date
14:34:46 401  		  from transaction_attempt ta
14:34:46 402  		      ,transaction_attempt_status tas
14:34:46 403  		      , ids
14:34:46 404  		  where ta.id = ids.id
14:34:46 405  		    and ta.transaction_attempt_status_id = tas.id
14:34:46 406  	      ;
14:34:46 407  	  end;
14:34:46 408  ----
14:34:46 409  --------------------------------------------------------------------------------
14:34:46 410  ----
14:34:46 411  	  procedure ext_invoice_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 412  	  is
14:34:46 413  	  begin
14:34:46 414  	      open out_cursor for
14:34:46 415  		  with ids as (select id from change_log cl where cl.item = 'INVOICE_ADJUSTMENT' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 416  		  select ia.id invoice_adjustment_id, ia.invoice_id, ia.is_credit, ir.value adjustment_reason, ia.charge_id
14:34:46 417  			,ia.adjustment_date, ia.create_date
14:34:46 418  		  from invoice_adjustment ia, invoice_adjustment_reason ir
14:34:46 419  		  , ids
14:34:46 420  		  where ia.id = ids.id
14:34:46 421  		  and ir.id = ia.invoice_adjustment_reason_id
14:34:46 422  	      ;
14:34:46 423  	  end;
14:34:46 424  ----
14:34:46 425  --------------------------------------------------------------------------------
14:34:46 426  ----
14:34:46 427  
14:34:46 428  	  procedure ext_line_item_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 429  	  is
14:34:46 430  	  begin
14:34:46 431  	      open out_cursor for
14:34:46 432  		  with ids as (select id from change_log cl where cl.item = 'LINE_ITEM_ADJUSTMENT' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 433  		  select lia.id line_item_adjustment_id, lia.line_item_id, lia.invoice_adjustment_id, lia.amount, lia.tax, lia.discount, lia.create_date
14:34:46 434  		  from line_item_adjustment lia
14:34:46 435  		  , ids
14:34:46 436  		  where lia.id = ids.id
14:34:46 437  	      ;
14:34:46 438  	  end;
14:34:46 439  ----
14:34:46 440  --------------------------------------------------------------------------------
14:34:46 441  ----
14:34:46 442  
14:34:46 443  	  procedure ext_tax(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 444  	  is
14:34:46 445  	  begin
14:34:46 446  	      open out_cursor for
14:34:46 447  		  with ids as (select id from change_log cl where cl.item = 'TAX' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 448  		  select
14:34:46 449  		    tax.id tax_id,
14:34:46 450  		    ttype.code tax_type,
14:34:46 451  		    tax.calculated_amount,
14:34:46 452  		    tax.create_date,
14:34:46 453  		    tax.line_item_id,
14:34:46 454  		    tax.effective_rate,
14:34:46 455  		    tax.taxable_amount,
14:34:46 456  		    tax.tax_rule_id,
14:34:46 457  		    j.name jurisdiction_level,
14:34:46 458  		    tax.jurisdiction_name,
14:34:46 459  		    tax.jurisdiction_id,
14:34:46 460  		    tax.ext_tax_type,
14:34:46 461  		    tax.ext_result,
14:34:46 462  		    tax.imposition_type,
14:34:46 463  		    tax.imposition
14:34:46 464  		  from tax
14:34:46 465  		  , tax_type ttype
14:34:46 466  		  , jurisdiction_level j
14:34:46 467  		  , ids
14:34:46 468  		  where tax.id = ids.id and ttype.id = tax.tax_type_id and j.id = tax.jurisdiction_level_id
14:34:46 469  	      ;
14:34:46 470  	  end;
14:34:46 471  ----
14:34:46 472  --------------------------------------------------------------------------------
14:34:46 473  ----
14:34:46 474  	  procedure ext_tax_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
14:34:46 475  	  is
14:34:46 476  	  begin
14:34:46 477  	      open out_cursor for
14:34:46 478  		  with ids as (select id from change_log cl where cl.item = 'TAX_ADJUSTMENT' and cl.change_time between in_start_date and in_end_date group by id)
14:34:46 479  		  select
14:34:46 480  		    tax.id tad_adjustment_id,
14:34:46 481  		    tax.tax_id tax_id,
14:34:46 482  		    tax.line_item_adjustment_id line_item_adjustment_id,
14:34:46 483  		    tax.amount tax_amount,
14:34:46 484  		    tax.create_date create_date
14:34:46 485  		  from tax_adjustment tax
14:34:46 486  		  , ids
14:34:46 487  		  where tax.id = ids.id
14:34:46 488  	      ;
14:34:46 489  	  end;
14:34:46 490  ----
14:34:46 491  --------------------------------------------------------------------------------
14:34:46 492  ----
14:34:46 493  /**/
14:34:46 494  	  procedure ext_rcn_ext_source_log(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 495  	  BEGIN
14:34:46 496  	    OPEN OUT_CURSOR FOR
14:34:46 497  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_EXT_SOURCE_LOG' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 498  	    SELECT
14:34:46 499  		t.id rcn_ext_source_log_id
14:34:46 500  	      , t.extraction_timestamp
14:34:46 501  	      , t.report_date
14:34:46 502  	      , t.report_generation_datetime
14:34:46 503  	      , t.record_type
14:34:46 504  	      , t.report_file_name
14:34:46 505  	      , t.create_date
14:34:46 506  	      , t.created_by
14:34:46 507  	    FROM rcn_ext_source_log t, ids
14:34:46 508  	    WHERE ids.id = t.id;
14:34:46 509  	  END;
14:34:46 510  
14:34:46 511  	  procedure ext_rcn_cpt_svc_chg_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 512  	  BEGIN
14:34:46 513  	    OPEN OUT_CURSOR FOR
14:34:46 514  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_CPT_SERVICE_CHARGE_DETAIL' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 515  	    SELECT
14:34:46 516  		t.id rcn_cpt_svc_chg_dtl_id
14:34:46 517  	      , t.rcn_ext_source_log_id
14:34:46 518  	      , t.record_type
14:34:46 519  	      , t.category
14:34:46 520  	      , t.sub_category
14:34:46 521  	      , t.entity_type
14:34:46 522  	      , t.entity_number
14:34:46 523  	      , t.funds_transfer_inst_number
14:34:46 524  	      , t.secure_ba_number
14:34:46 525  	      , t.settlement_currency
14:34:46 526  	      , t.fee_schedule
14:34:46 527  	      , t.mop
14:34:46 528  	      , t.interchange_qualification
14:34:46 529  	      , t.fee_type_description
14:34:46 530  	      , t.action_type
14:34:46 531  	      , t.unit_quantity
14:34:46 532  	      , t.unit_fee
14:34:46 533  	      , t.amount
14:34:46 534  	      , t.percentage_rate
14:34:46 535  	      , t.total_charge
14:34:46 536  	      , t.create_date
14:34:46 537  	      , t.created_by
14:34:46 538  	    FROM rcn_cpt_service_charge_detail t, ids
14:34:46 539  	    WHERE ids.id = t.id;
14:34:46 540  	  END;
14:34:46 541  ----
14:34:46 542  --------------------------------------------------------------------------------
14:34:46 543  ----
14:34:46 544  
14:34:46 545  	  procedure ext_rcn_cpt_excpt_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 546  	  BEGIN
14:34:46 547  	    OPEN OUT_CURSOR FOR
14:34:46 548  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_CPT_EXCEPTION_DETAIL' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 549  	    SELECT
14:34:46 550  		t.id rcn_cpt_excp_dtl_id
14:34:46 551  	      , t.rcn_ext_source_log_id
14:34:46 552  	      , t.record_type
14:34:46 553  	      , t.submission_date
14:34:46 554  	      , t.pid_number
14:34:46 555  	      , t.pid_short_name
14:34:46 556  	      , t.submission_number
14:34:46 557  	      , t.record_number
14:34:46 558  	      , t.entity_type
14:34:46 559  	      , t.entity_number
14:34:46 560  	      , t.presentment_currency
14:34:46 561  	      , t.merchant_order_number
14:34:46 562  	      , t.rdfi_number
14:34:46 563  	      , t.account_number
14:34:46 564  	      , t.expiration_date
14:34:46 565  	      , t.amount
14:34:46 566  	      , t.mop
14:34:46 567  	      , t.action_code
14:34:46 568  	      , t.auth_date
14:34:46 569  	      , t.auth_code
14:34:46 570  	      , t.auth_response_code
14:34:46 571  	      , t.trace_number
14:34:46 572  	      , t.consumer_country_code
14:34:46 573  	      , t.category
14:34:46 574  	      , t.mcc
14:34:46 575  	      , t.reject_code
14:34:46 576  	      , t.submission_status
14:34:46 577  	      , t.create_date
14:34:46 578  	      , t.created_by
14:34:46 579  	    FROM rcn_cpt_exception_detail t, ids
14:34:46 580  	    WHERE ids.id = t.id;
14:34:46 581  	  END;
14:34:46 582  ----
14:34:46 583  --------------------------------------------------------------------------------
14:34:46 584  ----
14:34:46 585  
14:34:46 586  	  procedure ext_rcn_cpt_dpst_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 587  	  BEGIN
14:34:46 588  	    OPEN OUT_CURSOR FOR
14:34:46 589  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_CPT_DEPOSIT_DETAIL' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 590  	      SELECT
14:34:46 591  		t.id rcn_cpt_deposit_dtl_id
14:34:46 592  	      , t.rcn_ext_source_log_id
14:34:46 593  	      , t.record_type
14:34:46 594  	      , t.submission_date
14:34:46 595  	      , t.pid_number
14:34:46 596  	      , t.pid_short_name
14:34:46 597  	      , t.submission_number
14:34:46 598  	      , t.record_number
14:34:46 599  	      , t.entity_type
14:34:46 600  	      , t.entity_number
14:34:46 601  	      , t.presentment_currency
14:34:46 602  	      , t.merchant_order_number
14:34:46 603  	      , t.rdfi_number
14:34:46 604  	      , t.account_number
14:34:46 605  	      , t.expiration_date
14:34:46 606  	      , t.amount
14:34:46 607  	      , t.mop
14:34:46 608  	      , t.action_code
14:34:46 609  	      , t.auth_date
14:34:46 610  	      , t.auth_code
14:34:46 611  	      , t.auth_response_code
14:34:46 612  	      , t.trace_number
14:34:46 613  	      , t.consumer_country_code
14:34:46 614  	      , t.mcc
14:34:46 615  	      , t.create_date
14:34:46 616  	      , t.created_by
14:34:46 617  	      , t.fee_code
14:34:46 618  	      , t.unit_fee
14:34:46 619  	      , t.percent_fee
14:34:46 620  	      , t.total_interchange_fee
14:34:46 621  	      , t.total_assessment_fee
14:34:46 622  	      , t.other_fee
14:34:46 623  	    FROM rcn_cpt_deposit_detail t, ids
14:34:46 624  	    WHERE ids.id = t.id;
14:34:46 625  	  END;
14:34:46 626  ----
14:34:46 627  --------------------------------------------------------------------------------
14:34:46 628  ----
14:34:46 629  
14:34:46 630  	  procedure ext_rcn_cpt_chgbk_act_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 631  	  BEGIN
14:34:46 632  	    OPEN OUT_CURSOR FOR
14:34:46 633  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_CPT_CHARGEBACK_ACT_DETAIL' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 634  	    SELECT
14:34:46 635  		t.id rcn_cpt_chgbk_act_dtl_id
14:34:46 636  	      , t.rcn_ext_source_log_id
14:34:46 637  	      , t.record_type
14:34:46 638  	      , t.entity_type
14:34:46 639  	      , t.entity_number
14:34:46 640  	      , t.chargeback_amount_issuer
14:34:46 641  	      , t.prev_partial_representment
14:34:46 642  	      , t.presentment_currency
14:34:46 643  	      , t.chargeback_category
14:34:46 644  	      , t.status_flag
14:34:46 645  	      , t.sequence_number
14:34:46 646  	      , t.merchant_order_number
14:34:46 647  	      , t.account_number
14:34:46 648  	      , t.reason_code
14:34:46 649  	      , t.transaction_date
14:34:46 650  	      , t.chargeback_date
14:34:46 651  	      , t.activity_date
14:34:46 652  	      , t.chargeback_amount_action
14:34:46 653  	      , t.fee_amount
14:34:46 654  	      , t.usage_code
14:34:46 655  	      , t.mop_code
14:34:46 656  	      , t.authorization_date
14:34:46 657  	      , t.chargeback_due_date
14:34:46 658  	      , t.create_date
14:34:46 659  	      , t.created_by
14:34:46 660  	    FROM rcn_cpt_chargeback_act_detail t, ids
14:34:46 661  	    WHERE ids.id = t.id;
14:34:46 662  	  END;
14:34:46 663  ----
14:34:46 664  --------------------------------------------------------------------------------
14:34:46 665  ----
14:34:46 666  
14:34:46 667  	  procedure ext_rcn_pp_sttlmnt(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 668  	  BEGIN
14:34:46 669  	    OPEN OUT_CURSOR FOR
14:34:46 670  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_PP_SETTLEMENT' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 671  	    SELECT
14:34:46 672  		t.id rcn_pp_settlement_id
14:34:46 673  	      , t.rcn_ext_source_log_id
14:34:46 674  	      , t.transaction_id
14:34:46 675  	      , t.invoice_id
14:34:46 676  	      , t.pp_ref_id
14:34:46 677  	      , t.pp_ref_id_type
14:34:46 678  	      , t.trans_event_code
14:34:46 679  	      , t.trans_init_date
14:34:46 680  	      , t.trans_comp_date
14:34:46 681  	      , t.trans_deb_or_cred
14:34:46 682  	      , t.gross_trans_amount
14:34:46 683  	      , t.gross_trans_currency
14:34:46 684  	      , t.fee_deb_or_cred
14:34:46 685  	      , t.fee_amount
14:34:46 686  	      , t.fee_currency
14:34:46 687  	      , t.custom_field
14:34:46 688  	      , t.create_date
14:34:46 689  	      , t.created_by
14:34:46 690  	    FROM rcn_pp_settlement t, ids
14:34:46 691  	    WHERE ids.id = t.id;
14:34:46 692  	  END;
14:34:46 693  ----
14:34:46 694  --------------------------------------------------------------------------------
14:34:46 695  ----
14:34:46 696  
14:34:46 697  	  procedure ext_rcn_pp_dispute(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 698  	  BEGIN
14:34:46 699  	    OPEN OUT_CURSOR FOR
14:34:46 700  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_PP_DISPUTE' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 701  	    SELECT
14:34:46 702  		t.id rcn_pp_dispute_id
14:34:46 703  	      , t.rcn_ext_source_log_id
14:34:46 704  	      , t.dispute_type
14:34:46 705  	      , t.claimant_name
14:34:46 706  	      , t.claimant_email
14:34:46 707  	      , t.transaction_id
14:34:46 708  	      , t.trans_date
14:34:46 709  	      , t.disputed_amount
14:34:46 710  	      , t.disputed_amount_currency
14:34:46 711  	      , t.dispute_reason
14:34:46 712  	      , t.dispute_filing_date
14:34:46 713  	      , t.dispute_status
14:34:46 714  	      , t.dispute_case_id
14:34:46 715  	      , t.invoice_id
14:34:46 716  	      , t.create_date
14:34:46 717  	      , t.created_by
14:34:46 718  	    FROM
14:34:46 719  	    rcn_pp_dispute t, ids
14:34:46 720  	    WHERE ids.id = t.id;
14:34:46 721  	  END;
14:34:46 722  ----
14:34:46 723  --------------------------------------------------------------------------------
14:34:46 724  ----
14:34:46 725  
14:34:46 726  	  procedure ext_rcn_pp_trns_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 727  	  BEGIN
14:34:46 728  	    OPEN OUT_CURSOR FOR
14:34:46 729  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_PP_TRANS_DETAIL' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 730  	    SELECT
14:34:46 731  		t.id rcn_pp_trans_dtl_id
14:34:46 732  	      , t.rcn_ext_source_log_id
14:34:46 733  	      , t.transaction_id
14:34:46 734  	      , t.invoice_id
14:34:46 735  	      , t.pp_ref_id
14:34:46 736  	      , t.trans_event_code
14:34:46 737  	      , t.trans_init_date
14:34:46 738  	      , t.trans_comp_date
14:34:46 739  	      , t.trans_deb_or_cred
14:34:46 740  	      , t.gross_trans_amount
14:34:46 741  	      , t.gross_trans_currency
14:34:46 742  	      , t.fee_deb_or_cred
14:34:46 743  	      , t.fee_amount
14:34:46 744  	      , t.fee_currency
14:34:46 745  	      , t.trans_status
14:34:46 746  	      , t.insurance_amount
14:34:46 747  	      , t.sales_tax_amount
14:34:46 748  	      , t.shipping_amount
14:34:46 749  	      , t.trans_subject
14:34:46 750  	      , t.trans_note
14:34:46 751  	      , t.payer_acct_id
14:34:46 752  	      , t.payer_addr_status
14:34:46 753  	      , t.item_name
14:34:46 754  	      , t.item_id
14:34:46 755  	      , t.option_1_name
14:34:46 756  	      , t.option_1_value
14:34:46 757  	      , t.option_2_name
14:34:46 758  	      , t.option_2_value
14:34:46 759  	      , t.auction_site
14:34:46 760  	      , t.auction_buyer_id
14:34:46 761  	      , t.auction_closing_date
14:34:46 762  	      , t.shipping_addr_line_1
14:34:46 763  	      , t.shipping_addr_line_2
14:34:46 764  	      , t.shipping_addr_city
14:34:46 765  	      , t.shipping_addr_state
14:34:46 766  	      , t.shipping_addr_zip
14:34:46 767  	      , t.shipping_addr_country
14:34:46 768  	      , t.custom_field
14:34:46 769  	      , t.create_date
14:34:46 770  	      , t.created_by
14:34:46 771  	    FROM rcn_pp_trans_detail t, ids
14:34:46 772  	    WHERE ids.id = t.id;
14:34:46 773  	  END;
14:34:46 774  ----
14:34:46 775  --------------------------------------------------------------------------------
14:34:46 776  ----
14:34:46 777  	  procedure ext_rcn_amex_chargeback(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 778  	  BEGIN
14:34:46 779  	    OPEN OUT_CURSOR FOR
14:34:46 780  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_AMEX_CHARGEBACK' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 781  	    SELECT
14:34:46 782  	      rac.id
14:34:46 783  	    , rac.rcn_ext_source_log_id
14:34:46 784  	    , rac.resolution
14:34:46 785  	    , rac.from_system
14:34:46 786  	    , rac.rejects_to_system
14:34:46 787  	    , rac.disputes_to_system
14:34:46 788  	    , rac.date_of_adjustment
14:34:46 789  	    , rac.date_of_charge
14:34:46 790  	    , rac.case_type
14:34:46 791  	    , rac.cb_reas_code
14:34:46 792  	    , rac.cb_amount
14:34:46 793  	    , rac.cb_adjustment_number
14:34:46 794  	    , rac.billed_amount
14:34:46 795  	    , rac.soc_amount
14:34:46 796  	    , rac.foreign_amount
14:34:46 797  	    , rac.currency
14:34:46 798  	    , rac.note1
14:34:46 799  	    , rac.note2
14:34:46 800  	    , rac.note3
14:34:46 801  	    , rac.note4
14:34:46 802  	    , rac.note5
14:34:46 803  	    , rac.note6
14:34:46 804  	    , rac.note7
14:34:46 805  	    , rac.ind_ref_number
14:34:46 806  	    , rac.create_date
14:34:46 807  	    , rac.created_by
14:34:46 808  	    , rac.update_date
14:34:46 809  	    , rac.updated_by
14:34:46 810  	    FROM rcn_amex_chargeback rac, ids
14:34:46 811  	    WHERE ids.id = rac.id;
14:34:46 812  	  END;
14:34:46 813  ----
14:34:46 814  --------------------------------------------------------------------------------
14:34:46 815  ----
14:34:46 816  	  procedure ext_paypal(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 817  	  BEGIN
14:34:46 818  	    OPEN OUT_CURSOR FOR
14:34:46 819  	    with ids as ( SELECT cl.id FROM change_log cl where cl.item = 'PAYPAL' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 820  	    SELECT
14:34:46 821  		t.ID PAYPAL_ID
14:34:46 822  	      , ACCOUNT_ID
14:34:46 823  	      , INSTRUMENT_NAME
14:34:46 824  	      , CREATE_DATE
14:34:46 825  	      , CREATED_BY
14:34:46 826  	      , UPDATE_DATE
14:34:46 827  	      , UPDATED_BY
14:34:46 828  	      , s.value PAYPAL_STATUS
14:34:46 829  	      , STATE
14:34:46 830  	      , CITY
14:34:46 831  	      , POSTAL_CODE
14:34:46 832  	      , COUNTRY
14:34:46 833  	      , EXPIRATION_DATE
14:34:46 834  	    FROM paypal t, paypal_status s, ids
14:34:46 835  	    WHERE ids.id = t.id and t.paypal_status_id = s.id;
14:34:46 836  	  END;
14:34:46 837  ----
14:34:46 838  --------------------------------------------------------------------------------
14:34:46 839  ----
14:34:46 840  	  procedure ext_address(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
14:34:46 841  	  BEGIN
14:34:46 842  	    OPEN OUT_CURSOR FOR
14:34:46 843  	    with ids as ( SELECT cl.id FROM change_log cl where cl.item = 'ADDRESS' and change_time between in_start_date and in_end_date group by cl.id )
14:34:46 844  	    SELECT
14:34:46 845  	      a.id ADDRESS_ID,
14:34:46 846  	      address1,
14:34:46 847  	      address2,
14:34:46 848  	      city,
14:34:46 849  	      state,
14:34:46 850  	      postal_code,
14:34:46 851  	      country,
14:34:46 852  	      create_date,
14:34:46 853  	      created_by,
14:34:46 854  	      update_date,
14:34:46 855  	      updated_by
14:34:46 856  	    FROM address a, ids
14:34:46 857  	    WHERE ids.id = a.id;
14:34:46 858  	  END;
14:34:46 859  ----
14:34:46 860  --------------------------------------------------------------------------------
14:34:46 861  ----
14:34:46 862  /**/
14:34:46 863  END PROCS_REPORTING;
14:34:46 864  .
14:34:46 SQL> /

Package body created.

Elapsed: 00:00:00.44
14:34:47 SQL> 
14:34:47 SQL> create or replace PACKAGE BODY		  "PROCS_REPORTING_1A" AS
14:34:47   2  
14:34:47   3  ----
14:34:47   4  --------------------------------------------------------------------------------
14:34:47   5  ----
14:34:47   6  	  function getDiscountAmount(in_line_item_id line_item.id%type)
14:34:47   7  	      return line_item.amount%type
14:34:47   8  	  is
14:34:47   9  	      v_discount  line_item.amount%type := 0;
14:34:47  10  	  begin
14:34:47  11  	      for x in (
14:34:47  12  		  select d.id discount_id
14:34:47  13  			,nvl(d.fixed_amount, d.percent_amount * (po.quantity * po.unit_price)) discount_amount
14:34:47  14  		  from discount d
14:34:47  15  		      join discount_line_item dli	      on dli.discount_id = d.id
14:34:47  16  		      join discount_product_offering dop      on dop.discount_id = d.id
14:34:47  17  		      join product_offering po		      on po.id = dop.product_offering_id
14:34:47  18  		      join line_item li 		      on li.id = dli.line_item_id and li.product_offer_id = po.id
14:34:47  19  		  where dli.line_item_id = in_line_item_id
14:34:47  20  	      )
14:34:47  21  	      loop
14:34:47  22  		  v_discount := v_discount + x.discount_amount;
14:34:47  23  	      end loop;
14:34:47  24  
14:34:47  25  	      return v_discount;
14:34:47  26  	  end;
14:34:47  27  ----
14:34:47  28  --------------------------------------------------------------------------------
14:34:47  29  ----
14:34:47  30  	  function getRefundAmount(in_line_item_id line_item.id%type)
14:34:47  31  	      return line_item.amount%type
14:34:47  32  	  is
14:34:47  33  	      v_li_total  line_item.amount%type;
14:34:47  34  	      v_inv_total line_item.amount%type;
14:34:47  35  	      v_ref_total line_item.amount%type;
14:34:47  36  	  begin
14:34:47  37  
14:34:47  38  	      for li in (
14:34:47  39  		  select li.invoice_id, po.*
14:34:47  40  		  from line_item li
14:34:47  41  			  join core_owner.product_offering po on li.product_offer_id = po.id
14:34:47  42  		  where li.id = in_line_item_id
14:34:47  43  	      )
14:34:47  44  	      loop
14:34:47  45  		  v_li_total := (li.quantity * li.unit_price) - getDiscountAmount(in_line_item_id);
14:34:47  46  
14:34:47  47  		  v_inv_total := 0;
14:34:47  48  		  v_ref_total := 0;
14:34:47  49  		  for x in (
14:34:47  50  		      select case when c.charge_amount < 0 then -1 else 1 end type, sum(c.charge_amount) total
14:34:47  51  		      from charge c
14:34:47  52  		      where c.invoice_id = li.invoice_id
14:34:47  53  		      group by case when c.charge_amount < 0 then -1 else 1 end
14:34:47  54  		  )
14:34:47  55  		  loop
14:34:47  56  		      if (x.type = 1) then
14:34:47  57  			  v_inv_total := x.total;
14:34:47  58  		      else
14:34:47  59  			  v_ref_total := x.total;
14:34:47  60  		      end if;
14:34:47  61  		  end loop;
14:34:47  62  
14:34:47  63  		  if (v_inv_total > 0) then
14:34:47  64  		      return (v_ref_total / v_inv_total) * v_li_total;
14:34:47  65  		  else
14:34:47  66  		      return 0;
14:34:47  67  		  end if;
14:34:47  68  
14:34:47  69  	      end loop;
14:34:47  70  
14:34:47  71  	      return 0;
14:34:47  72  	  end;
14:34:47  73  ----
14:34:47  74  --------------------------------------------------------------------------------
14:34:47  75  ----
14:34:47  76  	PROCEDURE EXTRACT_LINE_ITEMS(
14:34:47  77  	  in_lower_date_bound DATE,
14:34:47  78  	  in_upper_date_bound DATE,
14:34:47  79  	  out_lic_cur OUT sys_refcursor
14:34:47  80  	) AS
14:34:47  81  	BEGIN
14:34:47  82  	  OPEN out_lic_cur FOR
14:34:47  83  	  with liq as (
14:34:47  84  		SELECT li2.id
14:34:47  85  		      FROM
14:34:47  86  			   line_item li2
14:34:47  87  		      WHERE
14:34:47  88  		      TRUNC(li2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
14:34:47  89  		UNION
14:34:47  90  		SELECT li2.id
14:34:47  91  		      FROM
14:34:47  92  			   line_item li2
14:34:47  93  		      JOIN invoice i2 ON i2.id = li2.invoice_id
14:34:47  94  		      WHERE
14:34:47  95  		      TRUNC(i2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
14:34:47  96  		UNION
14:34:47  97  		SELECT li2.id
14:34:47  98  		      FROM
14:34:47  99  			   line_item li2
14:34:47 100  		      JOIN license l2 ON li2.invoice_id = l2.invoice_id
14:34:47 101  		      WHERE
14:34:47 102  		      TRUNC(l2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
14:34:47 103  		UNION
14:34:47 104  		SELECT li2.id
14:34:47 105  		      FROM
14:34:47 106  			   line_item li2
14:34:47 107  		      JOIN license l2 ON li2.invoice_id = l2.invoice_id
14:34:47 108  		      JOIN subscription s2 ON s2.id = l2.subscription_id
14:34:47 109  		      WHERE
14:34:47 110  		      TRUNC(s2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
14:34:47 111  		UNION
14:34:47 112  		SELECT li2.id
14:34:47 113  		      FROM
14:34:47 114  			   line_item li2
14:34:47 115  		      JOIN invoice i2 ON i2.id = li2.invoice_id
14:34:47 116  		      JOIN charge c2 ON i2.id = c2.invoice_id
14:34:47 117  		      WHERE
14:34:47 118  		      TRUNC(c2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
14:34:47 119  		UNION
14:34:47 120  		SELECT li2.id
14:34:47 121  		      FROM
14:34:47 122  			   line_item li2
14:34:47 123  		      JOIN invoice i2 ON i2.id = li2.invoice_id
14:34:47 124  		      JOIN charge c2 ON i2.id = c2.invoice_id
14:34:47 125  		      JOIN transaction t2 ON t2.id = c2.transaction_id
14:34:47 126  		      WHERE
14:34:47 127  		      TRUNC(t2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
14:34:47 128  	  )
14:34:47 129  	  SELECT distinct
14:34:47 130  	    line_item.id				 line_item_id
14:34:47 131  	  , product.name				 product_name
14:34:47 132  	  , product.unit_price				 product_unit_price
14:34:47 133  	  , product.production_cost			 product_production_cost
14:34:47 134  	  , offer_chain.name				 offer_chain_name
14:34:47 135  	  , offer_chain_meta_data.value 		 offer_chain_metadata
14:34:47 136  	  , gclicense.purchase_date			 subscription_start_date
14:34:47 137  	  , gclicense.start_date			 license_start_date
14:34:47 138  	  , gclicense.end_date				 license_end_date
14:34:47 139  	  , credit_card.city				 cc_city
14:34:47 140  	  , credit_card.state				 cc_state
14:34:47 141  	  , credit_card.postal_code			 cc_postal_code
14:34:47 142  	  , line_item.create_date			 line_item_purchase_date
14:34:47 143  	  , gclicense.account_regi_id
14:34:47 144  	  , product_offering.quantity			 purchase_quantity
14:34:47 145  	  , case when charge.charge_amount > 0 then charge.charge_amount else 0 end purchase_amount
14:34:47 146  	  , PROCS_REPORTING_1A.getDiscountAmount(line_item.id) discount_amount
14:34:47 147  	  , PROCS_REPORTING_1A.getRefundAmount(line_item.id) refund_amount
14:34:47 148  	  , decode(gclicense.sct_id,null,0, 1)		 is_refund_cancel
14:34:47 149  	  , 0						 purchase_tax_amount
14:34:47 150  	  , transaction_attempt.external_transaction_id  external_transaction_id
14:34:47 151  	  , invoice.id					 invoice_number
14:34:47 152  	  , NVL2(transaction.id, 1, 0)			 has_transaction
14:34:47 153  	  , NVL2(credit_card.id, 1, 0)			 is_cc_transaction
14:34:47 154  	  , NVL2(gift_certificate.id, 1, 0)		 is_gc_transaction
14:34:47 155  	  FROM
14:34:47 156  	       line_item
14:34:47 157  	  JOIN invoice				ON invoice.id	       = line_item.invoice_id
14:34:47 158  	  JOIN product_offering 		ON product_offering.id = line_item.product_offer_id
14:34:47 159  	  JOIN product				ON product.id	       = product_offering.product_id
14:34:47 160  	  join (
14:34:47 161  		select license.invoice_id, subscription.offer_chain_id, subscription.purchase_date
14:34:47 162  		      ,subscription.sct_id, license.start_date, license.end_date
14:34:47 163  		      ,account.group_id account_regi_id
14:34:47 164  		from	 license
14:34:47 165  		    join subscription ON subscription.id = license.subscription_id
14:34:47 166  		    join account      ON account.id	 = subscription.account_id
14:34:47 167  		union all
14:34:47 168  		select gc.purchase_invoice_id invoice_id, gc.offer_chain_id, gc.purchase_date
14:34:47 169  		      ,null sct_id, gc.purchase_date start_date, gc.expiration_date end_date
14:34:47 170  		      ,gc.purchaser_group_id account_regi_id
14:34:47 171  		from	 gift_certificate gc
14:34:47 172  		where
14:34:47 173  		      TRUNC(gc.create_date, 'HH') between TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
14:34:47 174  
14:34:47 175  	  ) gclicense
14:34:47 176  						on gclicense.invoice_id = invoice.id
14:34:47 177  	  JOIN offer_chain			ON offer_chain.id      = gclicense.offer_chain_id
14:34:47 178  	  JOIN charge				ON invoice.id	       = charge.invoice_id and charge.charge_status_id = 2
14:34:47 179  	  JOIN transaction			ON transaction.id      = charge.transaction_id and transaction.transaction_status_id = 2
14:34:47 180  	  JOIN transaction_attempt		ON transaction.id	= transaction_attempt.transaction_id AND transaction_attempt.transaction_attempt_status_id = 2
14:34:47 181  	  LEFT OUTER JOIN credit_card		ON charge.instrument_id = credit_card.id AND charge.instrument_type_id = 1
14:34:47 182  	  LEFT OUTER JOIN gift_certificate	ON charge.instrument_id = gift_certificate.id AND charge.instrument_type_id = 3
14:34:47 183  	  LEFT OUTER JOIN offer_chain_meta_data ON offer_chain.id	= offer_chain_meta_data.offer_chain_id
14:34:47 184  	  join liq				on line_item.id 	= liq.id
14:34:47 185  	    ;
14:34:47 186  	END EXTRACT_LINE_ITEMS;
14:34:47 187  ----
14:34:47 188  --------------------------------------------------------------------------------
14:34:47 189  ----
14:34:47 190  END PROCS_REPORTING_1A;
14:34:47 191  .
14:34:47 SQL> /

Package body created.

Elapsed: 00:00:00.09
14:34:47 SQL> 
14:34:47 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_REPORTS_V5" AS
14:34:47   2  
14:34:47   3  FUNCTION GET_PRODUCT_NAMES(
14:34:47   4  	in_offer_id IN NUMBER
14:34:47   5  ) RETURN VARCHAR2 AS
14:34:47   6  var_result_names VARCHAR2(1024);
14:34:47   7  BEGIN
14:34:47   8  
14:34:47   9  	var_result_names := NULL;
14:34:47  10  
14:34:47  11  	FOR f_product IN (
14:34:47  12  	  SELECT
14:34:47  13  	    PRODUCT.NAME
14:34:47  14  	  FROM
14:34:47  15  	    PRODUCT
14:34:47  16  	    INNER JOIN PRODUCT_OFFERING ON PRODUCT_OFFERING.PRODUCT_ID = PRODUCT.ID
14:34:47  17  	    INNER JOIN OFFER_PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
14:34:47  18  	  WHERE
14:34:47  19  	    OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id
14:34:47  20  	)
14:34:47  21  	LOOP
14:34:47  22  
14:34:47  23  	  IF var_result_names IS NULL THEN
14:34:47  24  	    var_result_names := f_product.NAME;
14:34:47  25  	  ELSE
14:34:47  26  	    var_result_names := var_result_names || ',' || CHR(13) || f_product.NAME;
14:34:47  27  	  END IF;
14:34:47  28  
14:34:47  29  	END LOOP;
14:34:47  30  
14:34:47  31  	RETURN var_result_names;
14:34:47  32  
14:34:47  33  END GET_PRODUCT_NAMES;
14:34:47  34  
14:34:47  35  /******************************************************************************/
14:34:47  36  
14:34:47  37  PROCEDURE GET_FULL_FLASH_REPORT_PURCH (
14:34:47  38  	in_start_date  IN DATE,
14:34:47  39  	in_end_date    IN DATE,
14:34:47  40  	out_result_set OUT SYS_REFCURSOR
14:34:47  41  ) AS
14:34:47  42  -- CONSTANTS
14:34:47  43  const_license_process_name CONSTANT VARCHAR2(9) := 'LICENSING';
14:34:47  44  BEGIN
14:34:47  45  
14:34:47  46  	OPEN out_result_set FOR
14:34:47  47  	SELECT
14:34:47  48  	  GET_PRODUCT_NAMES("Offer_Id") as "Product_Names",
14:34:47  49  	  "Offer_Id",
14:34:47  50  	  "New_Purchases_Num",
14:34:47  51  	  "Number_Of_renewals",
14:34:47  52  	  FLR_TOTAL_DOLLAR_VALUE("Offer_Id", in_start_date, in_end_date) as "Total_Dollar_Value",
14:34:47  53  	  FLR_UNIQUE_PURCHASERS("Offer_Id", in_start_date, in_end_date) as "Unique_Purchasers_num"
14:34:47  54  	FROM (
14:34:47  55  	  SELECT
14:34:47  56  	    "Offer_Id",
14:34:47  57  	    "Number_Of_renewals",
14:34:47  58  	    "New_Purchases_Num"
14:34:47  59  	  FROM (
14:34:47  60  	    SELECT
14:34:47  61  	      OFFER.ID as "Offer_Id",
14:34:47  62  	      FLR_RENEWALS_NUM(offer.id, in_start_date, in_end_date) as "Number_Of_renewals",
14:34:47  63  	      FLR_NEW_PURCHASERS_NUM(offer.id, in_start_date, in_end_date) as "New_Purchases_Num"
14:34:47  64  	    FROM
14:34:47  65  	      OFFER
14:34:47  66  	  )
14:34:47  67  	  WHERE
14:34:47  68  	    "New_Purchases_Num" > 0
14:34:47  69  	    OR "Number_Of_renewals" > 0
14:34:47  70  	);
14:34:47  71  
14:34:47  72  	/*
14:34:47  73  	OPEN out_result_set FOR
14:34:47  74  	SELECT
14:34:47  75  	  "Product_Names",
14:34:47  76  	  "Offer_Id",
14:34:47  77  	  "New_Purchases_Num",
14:34:47  78  	  "Number_Of_renewals",
14:34:47  79  	  "Total_Dollar_Value",
14:34:47  80  	  "Unique_Purchasers_num"
14:34:47  81  	FROM (
14:34:47  82  	  SELECT
14:34:47  83  	    GET_PRODUCT_NAMES(offer.id) as "Product_Names",
14:34:47  84  	    offer.id as "Offer_Id",
14:34:47  85  	    FLR_NEW_PURCHASERS_NUM(offer.id, in_start_date, in_end_date) as "New_Purchases_Num",
14:34:47  86  	    FLR_RENEWALS_NUM(offer.id, in_start_date, in_end_date) as "Number_Of_renewals",
14:34:47  87  	    FLR_TOTAL_DOLLAR_VALUE(offer.id, in_start_date, in_end_date) as "Total_Dollar_Value",
14:34:47  88  	    FLR_UNIQUE_PURCHASERS(offer.id, in_start_date, in_end_date) as "Unique_Purchasers_num"
14:34:47  89  	  FROM
14:34:47  90  	    OFFER
14:34:47  91  	)
14:34:47  92  	WHERE
14:34:47  93  	  "New_Purchases_Num" > 0
14:34:47  94  	  OR "Number_Of_renewals" > 0
14:34:47  95  	  OR "Total_Dollar_Value" > 0
14:34:47  96  	  OR "Unique_Purchasers_num" > 0;
14:34:47  97  	*/
14:34:47  98  
14:34:47  99  END GET_FULL_FLASH_REPORT_PURCH;
14:34:47 100  
14:34:47 101  /******************************************************************************/
14:34:47 102  
14:34:47 103  PROCEDURE GET_FLASH_REPORT_PURCHASES (
14:34:47 104  	in_offer_id	       IN NUMBER,
14:34:47 105  	in_start_date	       IN DATE,
14:34:47 106  	in_end_date	       IN DATE,
14:34:47 107  	out_new_purchasers_num OUT NUMBER,
14:34:47 108  	out_renewals_num       OUT NUMBER,
14:34:47 109  	out_product_names      OUT VARCHAR2,
14:34:47 110  	out_total_dollar_value OUT NUMBER,
14:34:47 111  	out_unique_purchasers  OUT NUMBER
14:34:47 112  ) AS
14:34:47 113  -- CONSTANTS
14:34:47 114  const_license_process_name CONSTANT VARCHAR2(9) := 'LICENSING';
14:34:47 115  BEGIN
14:34:47 116  
14:34:47 117  	out_product_names := GET_PRODUCT_NAMES(in_offer_id);
14:34:47 118  
14:34:47 119  	out_total_dollar_value := FLR_TOTAL_DOLLAR_VALUE(
14:34:47 120  	  in_offer_id,
14:34:47 121  	  in_start_date,
14:34:47 122  	  in_end_date
14:34:47 123  	);
14:34:47 124  
14:34:47 125  	out_new_purchasers_num := FLR_NEW_PURCHASERS_NUM(
14:34:47 126  	  in_offer_id,
14:34:47 127  	  in_start_date,
14:34:47 128  	  in_end_date
14:34:47 129  	);
14:34:47 130  
14:34:47 131  	out_renewals_num := FLR_RENEWALS_NUM(
14:34:47 132  	  in_offer_id,
14:34:47 133  	  in_start_date,
14:34:47 134  	  in_end_date
14:34:47 135  	);
14:34:47 136  
14:34:47 137  	out_unique_purchasers := FLR_UNIQUE_PURCHASERS(
14:34:47 138  	  in_offer_id,
14:34:47 139  	  in_start_date,
14:34:47 140  	  in_end_date
14:34:47 141  	);
14:34:47 142  
14:34:47 143  END GET_FLASH_REPORT_PURCHASES;
14:34:47 144  
14:34:47 145  /******************************************************************************/
14:34:47 146  
14:34:47 147  FUNCTION FLR_NEW_PURCHASERS_NUM (
14:34:47 148  	in_offer_id	       IN NUMBER,
14:34:47 149  	in_start_date	       IN DATE,
14:34:47 150  	in_end_date	       IN DATE
14:34:47 151  ) RETURN NUMBER AS
14:34:47 152  -- CONSTANTS
14:34:47 153  const_license_process_name CONSTANT VARCHAR2(9) := 'LICENSING';
14:34:47 154  -- VARIABLES
14:34:47 155  var_new_purchases_num NUMBER;
14:34:47 156  BEGIN
14:34:47 157  	SELECT
14:34:47 158  	  COUNT(LICENSE.ID)
14:34:47 159  	  into
14:34:47 160  	  var_new_purchases_num
14:34:47 161  	FROM
14:34:47 162  	  LICENSE
14:34:47 163  	  INNER JOIN CHARGE ON LICENSE.INVOICE_ID = CHARGE.INVOICE_ID
14:34:47 164  	WHERE
14:34:47 165  	  LICENSE.CREATED_BY NOT LIKE const_license_process_name
14:34:47 166  	  AND LICENSE.OFFER_ID = in_offer_id
14:34:47 167  	  AND CHARGE.CHARGE_AMOUNT > 0
14:34:47 168  	  AND PROCS_CHARGE_V5.IS_CHARGE_COLLECTED(CHARGE.ID) = 1 -- GLOBAL_CONSTANTS_V5.TRUE
14:34:47 169  	  AND LICENSE.START_DATE BETWEEN in_start_date AND in_end_date;
14:34:47 170  
14:34:47 171  	RETURN var_new_purchases_num;
14:34:47 172  END FLR_NEW_PURCHASERS_NUM;
14:34:47 173  
14:34:47 174  /******************************************************************************/
14:34:47 175  
14:34:47 176  FUNCTION FLR_RENEWALS_NUM (
14:34:47 177  	in_offer_id	       IN NUMBER,
14:34:47 178  	in_start_date	       IN DATE,
14:34:47 179  	in_end_date	       IN DATE
14:34:47 180  ) RETURN NUMBER AS
14:34:47 181  -- CONSTANTS
14:34:47 182  const_license_process_name CONSTANT VARCHAR2(9) := 'LICENSING';
14:34:47 183  -- VARIABLES
14:34:47 184  var_renewals_num NUMBER;
14:34:47 185  BEGIN
14:34:47 186  	SELECT
14:34:47 187  	  COUNT(LICENSE.ID)
14:34:47 188  	  into
14:34:47 189  	  var_renewals_num
14:34:47 190  	FROM
14:34:47 191  	  LICENSE
14:34:47 192  	  INNER JOIN CHARGE ON LICENSE.INVOICE_ID = CHARGE.INVOICE_ID
14:34:47 193  	WHERE
14:34:47 194  	  LICENSE.CREATED_BY LIKE const_license_process_name
14:34:47 195  	  AND LICENSE.OFFER_ID = in_offer_id
14:34:47 196  	  AND CHARGE.CHARGE_AMOUNT > 0
14:34:47 197  	  AND PROCS_CHARGE_V5.IS_CHARGE_COLLECTED(CHARGE.ID) = 1 -- GLOBAL_CONSTANTS_V5.TRUE
14:34:47 198  	  AND LICENSE.START_DATE BETWEEN in_start_date AND in_end_date;
14:34:47 199  
14:34:47 200  	RETURN var_renewals_num;
14:34:47 201  END FLR_RENEWALS_NUM;
14:34:47 202  
14:34:47 203  /******************************************************************************/
14:34:47 204  
14:34:47 205  FUNCTION FLR_TOTAL_DOLLAR_VALUE (
14:34:47 206  	in_offer_id	       IN NUMBER,
14:34:47 207  	in_start_date	       IN DATE,
14:34:47 208  	in_end_date	       IN DATE
14:34:47 209  ) RETURN NUMBER AS
14:34:47 210  var_dollar_value NUMBER(10,2);
14:34:47 211  BEGIN
14:34:47 212  	SELECT
14:34:47 213  	  SUM(CHARGE.CHARGE_AMOUNT)
14:34:47 214  	  into
14:34:47 215  	  var_dollar_value
14:34:47 216  	FROM
14:34:47 217  	  LICENSE
14:34:47 218  	  INNER JOIN CHARGE ON LICENSE.INVOICE_ID = CHARGE.INVOICE_ID
14:34:47 219  	WHERE
14:34:47 220  	  LICENSE.OFFER_ID = in_offer_id
14:34:47 221  	  AND CHARGE.CHARGE_AMOUNT > 0
14:34:47 222  	  AND PROCS_CHARGE_V5.IS_CHARGE_COLLECTED(CHARGE.ID) = 1 -- GLOBAL_CONSTANTS_V5.TRUE
14:34:47 223  	  AND LICENSE.START_DATE BETWEEN in_start_date AND in_end_date;
14:34:47 224  
14:34:47 225  	RETURN var_dollar_value;
14:34:47 226  END FLR_TOTAL_DOLLAR_VALUE;
14:34:47 227  
14:34:47 228  /******************************************************************************/
14:34:47 229  
14:34:47 230  FUNCTION FLR_UNIQUE_PURCHASERS (
14:34:47 231  	in_offer_id	       IN NUMBER,
14:34:47 232  	in_start_date	       IN DATE,
14:34:47 233  	in_end_date	       IN DATE
14:34:47 234  ) RETURN NUMBER AS
14:34:47 235  -- CONSTANTS
14:34:47 236  const_license_process_name CONSTANT VARCHAR2(9) := 'LICENSING';
14:34:47 237  -- VARIABLES
14:34:47 238  var_unique_purchasers NUMBER;
14:34:47 239  BEGIN
14:34:47 240  	SELECT
14:34:47 241  	  COUNT(DISTINCT SUBSCRIPTION.ACCOUNT_ID) into var_unique_purchasers
14:34:47 242  	FROM
14:34:47 243  	  LICENSE
14:34:47 244  	  INNER JOIN CHARGE ON LICENSE.INVOICE_ID = CHARGE.INVOICE_ID
14:34:47 245  	  INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:47 246  	WHERE
14:34:47 247  	  LICENSE.CREATED_BY NOT LIKE const_license_process_name
14:34:47 248  	  AND LICENSE.OFFER_ID = in_offer_id
14:34:47 249  	  AND CHARGE.CHARGE_AMOUNT > 0
14:34:47 250  	  AND PROCS_CHARGE_V5.IS_CHARGE_COLLECTED(CHARGE.ID) = 1 -- GLOBAL_CONSTANTS_V5.TRUE
14:34:47 251  	  AND LICENSE.START_DATE BETWEEN in_start_date AND in_end_date;
14:34:47 252  
14:34:47 253  	RETURN var_unique_purchasers;
14:34:47 254  END;
14:34:47 255  
14:34:47 256  END PROCS_REPORTS_V5;
14:34:47 257  .
14:34:47 SQL> /

Package body created.

Elapsed: 00:00:00.06
14:34:47 SQL> 
14:34:47 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SYSTEM_V18" AS
14:34:47   2  
14:34:47   3  PROCEDURE INCREMENT_VERSION
14:34:47   4  /*
14:34:47   5  Throws exceptions:
14:34:47   6  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47   7  */
14:34:47   8  AS
14:34:47   9  BEGIN
14:34:47  10  
14:34:47  11  	UPDATE SYS_VERSION SET version=version+1;
14:34:47  12  
14:34:47  13  END INCREMENT_VERSION;
14:34:47  14  
14:34:47  15  /*************************************************************/
14:34:47  16  
14:34:47  17  PROCEDURE CHECK_VERSION(
14:34:47  18  	  in_vers    IN NUMBER,
14:34:47  19  	  out_result OUT NUMBER
14:34:47  20  ) AS
14:34:47  21  	current_version NUMBER;
14:34:47  22  BEGIN
14:34:47  23  	SELECT version INTO current_version FROM SYS_VERSION;
14:34:47  24  	IF(current_version != in_vers) THEN
14:34:47  25  	  out_result := 1;
14:34:47  26  	ELSE
14:34:47  27  	  out_result := 0;
14:34:47  28  	END IF;
14:34:47  29  END CHECK_VERSION;
14:34:47  30  
14:34:47  31  END PROCS_SYSTEM_V18;
14:34:47  32  .
14:34:47 SQL> /

Package body created.

Elapsed: 00:00:00.05
14:34:47 SQL> 
14:34:47 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_TAXES_V18" AS
14:34:47   2  
14:34:47   3  PROCEDURE ADD_TAX (
14:34:47   4  	in_tax_type_id		 IN NUMBER,
14:34:47   5  	in_calculated_amount	 IN NUMBER,
14:34:47   6  	in_created_by		 IN VARCHAR2,
14:34:47   7  	in_line_item_id 	 IN NUMBER,
14:34:47   8  	in_effective_rate	 IN VARCHAR2,
14:34:47   9  	in_taxable_amount	 IN NUMBER,
14:34:47  10  	in_tax_rule_id		 IN NUMBER,
14:34:47  11  	in_jurisdiction_level_id IN NUMBER,
14:34:47  12  	in_jurisdiction_name	 IN VARCHAR2,
14:34:47  13  	in_jurisdiction_id	 IN VARCHAR2,
14:34:47  14  	in_ext_tax_type 	 IN VARCHAR2,
14:34:47  15  	in_ext_result		 IN VARCHAR2,
14:34:47  16  	in_imposition_type	 IN VARCHAR2,
14:34:47  17  	in_imposition		 IN VARCHAR2
14:34:47  18  ) AS
14:34:47  19  SPROC_NAME CONSTANT VARCHAR2(7) := 'ADD_TAX';
14:34:47  20  -- VARIABLES
14:34:47  21  var_new_tax_id	NUMBER;
14:34:47  22  temp_line_item_id NUMBER;
14:34:47  23  -- EXCEPTIONS
14:34:47  24  BAD_LINE_ITEM_ID EXCEPTION;
14:34:47  25  BEGIN
14:34:47  26  
14:34:47  27  	BEGIN
14:34:47  28  	  SELECT
14:34:47  29  	    LINE_ITEM.ID into temp_line_item_id
14:34:47  30  	  FROM
14:34:47  31  	    LINE_ITEM
14:34:47  32  	  WHERE
14:34:47  33  	    LINE_ITEM.ID = in_line_item_id;
14:34:47  34  	  EXCEPTION
14:34:47  35  	    WHEN NO_DATA_FOUND THEN
14:34:47  36  	      RAISE BAD_LINE_ITEM_ID;
14:34:47  37  	END;
14:34:47  38  
14:34:47  39  	var_new_tax_id := NULL;
14:34:47  40  
14:34:47  41  	PROCS_TAXES_CRU_V18.CREATE_TAX(
14:34:47  42  	  var_new_tax_id,
14:34:47  43  	  in_tax_type_id,
14:34:47  44  	  in_calculated_amount,
14:34:47  45  	  in_created_by,
14:34:47  46  	  in_line_item_id,
14:34:47  47  	  in_effective_rate,
14:34:47  48  	  in_taxable_amount,
14:34:47  49  	  in_tax_rule_id,
14:34:47  50  	  in_jurisdiction_level_id,
14:34:47  51  	  in_jurisdiction_name,
14:34:47  52  	  in_jurisdiction_id,
14:34:47  53  	  in_ext_tax_type,
14:34:47  54  	  in_ext_result,
14:34:47  55  	  in_imposition_type,
14:34:47  56  	  in_imposition
14:34:47  57  	);
14:34:47  58  
14:34:47  59  EXCEPTION
14:34:47  60  WHEN BAD_LINE_ITEM_ID THEN
14:34:47  61  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47  62  	  SPROC_NAME, 'No such line item');
14:34:47  63  WHEN OTHERS THEN
14:34:47  64  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47  65  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47  66  END ADD_TAX;
14:34:47  67  
14:34:47  68  /******************************************************************************/
14:34:47  69  
14:34:47  70  PROCEDURE CHECK_COUNTRY_FOR_EXCLUSION (
14:34:47  71  	in_country_code IN CHAR,
14:34:47  72  	in_check_date IN DATE,
14:34:47  73  	out_is_founded	OUT NUMBER -- GLOBAL_CONSTANT.TRUE of GLOBAL_CONSTANTS_V18.FALSE
14:34:47  74  ) AS
14:34:47  75  SPROC_NAME CONSTANT VARCHAR2(27) := 'CHECK_COUNTRY_FOR_EXCLUSION';
14:34:47  76  -- VARIABLES
14:34:47  77  var_countries_count NUMBER;
14:34:47  78  var_result	  NUMBER;
14:34:47  79  BEGIN
14:34:47  80  
14:34:47  81  	SELECT
14:34:47  82  	  COUNT(1) into var_countries_count
14:34:47  83  	FROM
14:34:47  84  	  TAX_COUNTRY_EXCLUSION_LIST
14:34:47  85  	WHERE
14:34:47  86  	  country_code = in_country_code
14:34:47  87  	  AND TRUNC(EFFECTIVE_DATE) <= TRUNC(in_check_date)
14:34:47  88  	  AND (
14:34:47  89  	    end_date is null
14:34:47  90  	    OR TRUNC(END_DATE) >= TRUNC(in_check_date)
14:34:47  91  	  );
14:34:47  92  
14:34:47  93  	IF var_countries_count > 1 THEN
14:34:47  94  	  -- [REVU] Should not happen. DB structure error
14:34:47  95  	  var_result := GLOBAL_CONSTANTS_V18.TRUE;
14:34:47  96  	ELSIF var_countries_count = 1 THEN
14:34:47  97  	  var_result := GLOBAL_CONSTANTS_V18.TRUE;
14:34:47  98  	ELSE
14:34:47  99  	  var_result := GLOBAL_CONSTANTS_V18.FALSE;
14:34:47 100  	END IF;
14:34:47 101  
14:34:47 102  	out_is_founded := var_result;
14:34:47 103  
14:34:47 104  EXCEPTION
14:34:47 105  WHEN OTHERS THEN
14:34:47 106  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 107  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 108  END CHECK_COUNTRY_FOR_EXCLUSION;
14:34:47 109  
14:34:47 110  /******************************************************************************/
14:34:47 111  
14:34:47 112  PROCEDURE GET_TAX_CATEGORY (
14:34:47 113  	in_tax_category_id IN NUMBER,
14:34:47 114  	out_result_set	   OUT SYS_REFCURSOR
14:34:47 115  ) AS
14:34:47 116  SPROC_NAME CONSTANT VARCHAR2(16) := 'GET_TAX_CATEGORY';
14:34:47 117  BEGIN
14:34:47 118  
14:34:47 119  	OPEN out_result_set FOR
14:34:47 120  	SELECT
14:34:47 121  	  ID,
14:34:47 122  	  CODE,
14:34:47 123  	  DESCRIPTION
14:34:47 124  	FROM
14:34:47 125  	  TAX_CATEGORY
14:34:47 126  	WHERE
14:34:47 127  	  ID = in_tax_category_id;
14:34:47 128  
14:34:47 129  EXCEPTION
14:34:47 130  WHEN OTHERS THEN
14:34:47 131  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 132  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 133  END GET_TAX_CATEGORY;
14:34:47 134  
14:34:47 135  END PROCS_TAXES_V18;
14:34:47 136  .
14:34:47 SQL> /

Package body created.

Elapsed: 00:00:00.04
14:34:47 SQL> 
14:34:47 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_TRANSACTION_V18" AS
14:34:47   2  
14:34:47   3  PROCEDURE CREATE_TRANSACTION (
14:34:47   4  /*
14:34:47   5  Throws exceptions:
14:34:47   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47   8  */
14:34:47   9  	in_transaction_id	  IN NUMBER,
14:34:47  10  	in_status_id		  IN NUMBER,
14:34:47  11  	in_amount		  IN NUMBER,
14:34:47  12  	in_created_by		  IN VARCHAR2,
14:34:47  13  	in_order_id		  IN VARCHAR2,
14:34:47  14  	in_is_refund		  IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.FALSE,
14:34:47  15  	in_transaction_type_code  IN VARCHAR2 DEFAULT NULL,
14:34:47  16  	out_transaction_id	  OUT NUMBER
14:34:47  17  ) AS
14:34:47  18  -- VARIABLES
14:34:47  19  SPROC_NAME	     CONSTANT VARCHAR2(18) := 'CREATE_TRANSACTION';
14:34:47  20  var_transaction_count  NUMBER;
14:34:47  21  -- EXCEPTIONS
14:34:47  22  BAD_TRANSACTION_ID     EXCEPTION;
14:34:47  23  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:47  24  BEGIN
14:34:47  25  
14:34:47  26  	IF in_transaction_id IS NOT NULL THEN
14:34:47  27  	  SELECT
14:34:47  28  	    COUNT(*) into var_transaction_count
14:34:47  29  	  FROM
14:34:47  30  	    TRANSACTION
14:34:47  31  	  WHERE
14:34:47  32  	    TRANSACTION.ID = in_transaction_id;
14:34:47  33  	  IF var_transaction_count > 0 THEN
14:34:47  34  	    RAISE BAD_TRANSACTION_ID;
14:34:47  35  	  END IF;
14:34:47  36  	END IF;
14:34:47  37  
14:34:47  38  	PROCS_TRANSACTION_CRU_V18.CREATE_TRANSACTION(
14:34:47  39  	  out_transaction_id	   => out_transaction_id,
14:34:47  40  	  in_transaction_id	   => in_transaction_id,
14:34:47  41  	  in_transaction_status_id => in_status_id,
14:34:47  42  	  in_transaction_amount    => in_amount,
14:34:47  43  	  in_created_by 	   => in_created_by,
14:34:47  44  	  in_order_id		   => in_order_id,
14:34:47  45  	  in_is_refund		   => in_is_refund,
14:34:47  46  	  in_transaction_type_code => in_transaction_type_code
14:34:47  47  	);
14:34:47  48  
14:34:47  49  EXCEPTION
14:34:47  50  WHEN BAD_TRANSACTION_ID THEN
14:34:47  51  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:47  52  	  SPROC_NAME, 'Transaction with given id already exists');
14:34:47  53  WHEN OTHERS THEN
14:34:47  54  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47  55  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47  56  END CREATE_TRANSACTION;
14:34:47  57  
14:34:47  58  /******************************************************************************/
14:34:47  59  
14:34:47  60  PROCEDURE CREATE_TRANSACTION_ATTEMPT (
14:34:47  61  /*
14:34:47  62  Throws exceptions:
14:34:47  63  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47  64  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47  65  */
14:34:47  66  	in_transaction_id	   IN NUMBER,
14:34:47  67  	in_trans_attempt_status    IN NUMBER,
14:34:47  68  	in_external_status_code    IN VARCHAR2,
14:34:47  69  	in_external_status_message IN VARCHAR2,
14:34:47  70  	in_created_by		   IN VARCHAR2,
14:34:47  71  	in_ext_transaction_id	   IN VARCHAR2,
14:34:47  72  	out_transaction_attempt_id OUT NUMBER
14:34:47  73  ) AS
14:34:47  74  -- VARIABLES
14:34:47  75  SPROC_NAME		 CONSTANT VARCHAR2(26) := 'CREATE_TRANSACTION_ATTEMPT';
14:34:47  76  var_transaction_create_date DATE;
14:34:47  77  var_transaction_attempt_id  NUMBER;
14:34:47  78  
14:34:47  79  -- EXCEPTIONS
14:34:47  80  BAD_TRANS_ATTEMPT_STATUS EXCEPTION;
14:34:47  81  BAD_TRANSACTION_ID       EXCEPTION;
14:34:47  82  BEGIN
14:34:47  83  
14:34:47  84  	-- Check that transaction exists
14:34:47  85  	BEGIN
14:34:47  86  	  SELECT
14:34:47  87  	    TRANSACTION.CREATE_DATE into var_transaction_create_date
14:34:47  88  	  FROM
14:34:47  89  	    TRANSACTION
14:34:47  90  	  WHERE
14:34:47  91  	    TRANSACTION.ID = in_transaction_id;
14:34:47  92  	  EXCEPTION
14:34:47  93  	    WHEN OTHERS THEN
14:34:47  94  	      RAISE BAD_TRANSACTION_ID;
14:34:47  95  	END;
14:34:47  96  
14:34:47  97  	-- Check that transaction status is correct
14:34:47  98  	IF in_trans_attempt_status != GLOBAL_STATUSES_V18.TRANS_ATTEMPT_IN_PROGRESS
14:34:47  99  	  AND in_trans_attempt_status != GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS
14:34:47 100  	  AND in_trans_attempt_status != GLOBAL_STATUSES_V18.TRANS_ATTEMPT_FAILED THEN
14:34:47 101  	  RAISE BAD_TRANS_ATTEMPT_STATUS;
14:34:47 102  	END IF;
14:34:47 103  
14:34:47 104  	var_transaction_attempt_id := NULL;
14:34:47 105  	PROCS_TRANSACTION_CRU_V18.CREATE_TRANSACTION_ATTEMPT(
14:34:47 106  	  inout_transaction_attempt_id => var_transaction_attempt_id,
14:34:47 107  	  in_transaction_id	       => in_transaction_id,
14:34:47 108  	  in_external_status_code      => in_external_status_code,
14:34:47 109  	  in_external_status_message   => in_external_status_message,
14:34:47 110  	  in_created_by 	       => in_created_by,
14:34:47 111  	  in_external_transaction_id   => in_ext_transaction_id,
14:34:47 112  	  in_transaction_start_time    => var_transaction_create_date,
14:34:47 113  	  in_status_id		       => in_trans_attempt_status
14:34:47 114  	);
14:34:47 115  
14:34:47 116  	PROCS_TRANSACTION_CRU_V18.UPDATE_TRANSACTION(
14:34:47 117  	  in_transaction_id => in_transaction_id,
14:34:47 118  	  in_updated_by     => in_created_by
14:34:47 119  	);
14:34:47 120  
14:34:47 121  	out_transaction_attempt_id := var_transaction_attempt_id;
14:34:47 122  
14:34:47 123  EXCEPTION
14:34:47 124  WHEN BAD_TRANSACTION_ID THEN
14:34:47 125  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 126  	  SPROC_NAME, 'No such transaction');
14:34:47 127  WHEN BAD_TRANS_ATTEMPT_STATUS THEN
14:34:47 128  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 129  	  SPROC_NAME, 'Bad transaction attempt status');
14:34:47 130  WHEN OTHERS THEN
14:34:47 131  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 132  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 133  END CREATE_TRANSACTION_ATTEMPT;
14:34:47 134  
14:34:47 135  /******************************************************************************/
14:34:47 136  
14:34:47 137  PROCEDURE UPDATE_TRANSACTION_STATUS (
14:34:47 138  /*
14:34:47 139  Throws exceptions:
14:34:47 140  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 141  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 142  */
14:34:47 143  	in_transaction_id	 IN NUMBER,
14:34:47 144  	in_updated_by		 IN VARCHAR2,
14:34:47 145  	in_transaction_status_id IN NUMBER
14:34:47 146  ) AS
14:34:47 147  -- VARIABLES
14:34:47 148  SPROC_NAME	  CONSTANT VARCHAR2(25) := 'UPDATE_TRANSACTION_STATUS';
14:34:47 149  temp_transaction_id NUMBER;
14:34:47 150  
14:34:47 151  -- EXCEPTIONS
14:34:47 152  BAD_TRANSACTION_ID     EXCEPTION;
14:34:47 153  BAD_TRANSACTION_STATUS EXCEPTION;
14:34:47 154  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:47 155  BEGIN
14:34:47 156  
14:34:47 157  	-- Check that transaction exists
14:34:47 158  	BEGIN
14:34:47 159  	  SELECT
14:34:47 160  	    TRANSACTION.ID into temp_transaction_id
14:34:47 161  	  FROM
14:34:47 162  	    TRANSACTION
14:34:47 163  	  WHERE
14:34:47 164  	    TRANSACTION.ID = in_transaction_id;
14:34:47 165  	  EXCEPTION
14:34:47 166  	    WHEN OTHERS THEN
14:34:47 167  	      RAISE BAD_TRANSACTION_ID;
14:34:47 168  	END;
14:34:47 169  
14:34:47 170  	-- Check that transaction status is correct
14:34:47 171  	IF    in_transaction_status_id != GLOBAL_STATUSES_V18.TRANSACTION_PENDING
14:34:47 172  	  AND in_transaction_status_id != GLOBAL_STATUSES_V18.TRANSACTION_CLOSED
14:34:47 173  	  AND in_transaction_status_id != GLOBAL_STATUSES_V18.TRANSACTION_CHARGEBACK
14:34:47 174  	  AND in_transaction_status_id != GLOBAL_STATUSES_V18.TRANSACTION_DECLINED THEN
14:34:47 175  	  RAISE BAD_TRANSACTION_STATUS;
14:34:47 176  	END IF;
14:34:47 177  
14:34:47 178  	PROCS_TRANSACTION_CRU_V18.UPDATE_TRANSACTION(
14:34:47 179  	  in_transaction_id	   => in_transaction_id,
14:34:47 180  	  in_updated_by 	   => in_updated_by,
14:34:47 181  	  in_transaction_status_id => in_transaction_status_id
14:34:47 182  	);
14:34:47 183  
14:34:47 184  EXCEPTION
14:34:47 185  WHEN BAD_TRANSACTION_ID THEN
14:34:47 186  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 187  	  SPROC_NAME, 'No such transaction');
14:34:47 188  WHEN BAD_TRANSACTION_STATUS THEN
14:34:47 189  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 190  	  SPROC_NAME, 'Bad transaction status');
14:34:47 191  WHEN OTHERS THEN
14:34:47 192  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 193  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 194  END UPDATE_TRANSACTION_STATUS;
14:34:47 195  
14:34:47 196  /******************************************************************************/
14:34:47 197  
14:34:47 198  PROCEDURE UPDATE_TRANSACTION_SETTLED (
14:34:47 199  /*
14:34:47 200  Throws exceptions:
14:34:47 201  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 202  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 203  */
14:34:47 204  	in_transaction_id	 IN NUMBER,
14:34:47 205  	in_updated_by		 IN VARCHAR2,
14:34:47 206  	in_is_settled		 IN NUMBER
14:34:47 207  ) AS
14:34:47 208  -- VARIABLES
14:34:47 209  SPROC_NAME	  CONSTANT VARCHAR2(26) := 'UPDATE_TRANSACTION_SETTLED';
14:34:47 210  temp_transaction_id NUMBER;
14:34:47 211  
14:34:47 212  -- EXCEPTIONS
14:34:47 213  BAD_TRANSACTION_ID     EXCEPTION;
14:34:47 214  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:47 215  BEGIN
14:34:47 216  
14:34:47 217  	-- Check that transaction exists
14:34:47 218  	BEGIN
14:34:47 219  	  SELECT
14:34:47 220  	    TRANSACTION.ID into temp_transaction_id
14:34:47 221  	  FROM
14:34:47 222  	    TRANSACTION
14:34:47 223  	  WHERE
14:34:47 224  	    TRANSACTION.ID = in_transaction_id;
14:34:47 225  	  EXCEPTION
14:34:47 226  	    WHEN OTHERS THEN
14:34:47 227  	      RAISE BAD_TRANSACTION_ID;
14:34:47 228  	END;
14:34:47 229  
14:34:47 230  	PROCS_TRANSACTION_CRU_V18.UPDATE_TRANSACTION(
14:34:47 231  	  in_transaction_id	   => in_transaction_id,
14:34:47 232  	  in_updated_by 	   => in_updated_by,
14:34:47 233  	  in_is_settled 	   => in_is_settled
14:34:47 234  	);
14:34:47 235  
14:34:47 236  EXCEPTION
14:34:47 237  WHEN BAD_TRANSACTION_ID THEN
14:34:47 238  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 239  	  SPROC_NAME, 'No such transaction');
14:34:47 240  WHEN OTHERS THEN
14:34:47 241  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 242  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 243  END UPDATE_TRANSACTION_SETTLED;
14:34:47 244  
14:34:47 245  /******************************************************************************/
14:34:47 246  
14:34:47 247  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_TIME (
14:34:47 248  /*
14:34:47 249  Throws exceptions:
14:34:47 250  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 251  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 252  */
14:34:47 253  	in_transaction_attempt_id IN NUMBER,
14:34:47 254  	in_updated_by		  IN VARCHAR2
14:34:47 255  ) AS
14:34:47 256  SPROC_NAME CONSTANT VARCHAR2(27) := 'UPDATE_TRNSCTN_ATTEMPT_TIME';
14:34:47 257  -- VARIABLES
14:34:47 258  var_transaction_id NUMBER;
14:34:47 259  -- EXCEPTION
14:34:47 260  BAD_TRANSACTION_ATTEMPT_ID EXCEPTION;
14:34:47 261  BEGIN
14:34:47 262  
14:34:47 263  	BEGIN
14:34:47 264  	  SELECT
14:34:47 265  	    TRANSACTION_ATTEMPT.TRANSACTION_ID into var_transaction_id
14:34:47 266  	  FROM
14:34:47 267  	    TRANSACTION_ATTEMPT
14:34:47 268  	  WHERE
14:34:47 269  	    TRANSACTION_ATTEMPT.ID = in_transaction_attempt_id;
14:34:47 270  	  EXCEPTION
14:34:47 271  	    WHEN NO_DATA_FOUND THEN
14:34:47 272  	      RAISE BAD_TRANSACTION_ATTEMPT_ID;
14:34:47 273  	END;
14:34:47 274  
14:34:47 275  	PROCS_TRANSACTION_CRU_V18.UPDATE_TRANSACTION(
14:34:47 276  	  in_transaction_id => var_transaction_id,
14:34:47 277  	  in_updated_by     => in_updated_by
14:34:47 278  	);
14:34:47 279  
14:34:47 280  EXCEPTION
14:34:47 281  WHEN BAD_TRANSACTION_ATTEMPT_ID THEN
14:34:47 282  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 283  	  SPROC_NAME, 'No such transaction attempt');
14:34:47 284  WHEN OTHERS THEN
14:34:47 285  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 286  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 287  END UPDATE_TRNSCTN_ATTEMPT_TIME;
14:34:47 288  
14:34:47 289  /******************************************************************************/
14:34:47 290  
14:34:47 291  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_STATUS (
14:34:47 292  /*
14:34:47 293  Throws exceptions:
14:34:47 294  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 295  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 296  */
14:34:47 297  	in_transaction_attempt_id     IN NUMBER,
14:34:47 298  	in_transaction_attempt_status IN NUMBER
14:34:47 299  ) AS
14:34:47 300  -- VARIABLES
14:34:47 301  SPROC_NAME		  CONSTANT VARCHAR2(29) := 'UPDATE_TRNSCTN_ATTEMPT_STATUS';
14:34:47 302  temp_transaction_attempt_id NUMBER;
14:34:47 303  
14:34:47 304  -- EXCEPTION
14:34:47 305  BAD_TRANSACTION_ATTEMPT_ID EXCEPTION;
14:34:47 306  BAD_TRANS_ATTEMPT_STATUS	 EXCEPTION;
14:34:47 307  BEGIN
14:34:47 308  
14:34:47 309  	-- Check that transaction attempt exists
14:34:47 310  	BEGIN
14:34:47 311  	  SELECT
14:34:47 312  	    TRANSACTION_ATTEMPT.ID into temp_transaction_attempt_id
14:34:47 313  	  FROM
14:34:47 314  	    TRANSACTION_ATTEMPT
14:34:47 315  	  WHERE
14:34:47 316  	    TRANSACTION_ATTEMPT.ID = in_transaction_attempt_id;
14:34:47 317  	  EXCEPTION
14:34:47 318  	    WHEN NO_DATA_FOUND THEN
14:34:47 319  	      RAISE BAD_TRANSACTION_ATTEMPT_ID;
14:34:47 320  	END;
14:34:47 321  
14:34:47 322  	-- Check that transaction attempt is correct
14:34:47 323  	IF in_transaction_attempt_status != GLOBAL_STATUSES_V18.TRANS_ATTEMPT_IN_PROGRESS
14:34:47 324  	  AND in_transaction_attempt_status != GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS
14:34:47 325  	  AND in_transaction_attempt_status != GLOBAL_STATUSES_V18.TRANS_ATTEMPT_FAILED THEN
14:34:47 326  	  RAISE BAD_TRANS_ATTEMPT_STATUS;
14:34:47 327  	END IF;
14:34:47 328  
14:34:47 329  	PROCS_TRANSACTION_CRU_V18.UPDATE_TRANSACTION_ATTEMPT(
14:34:47 330  	  in_transaction_attempt_id => in_transaction_attempt_id,
14:34:47 331  	  in_status_id		    => in_transaction_attempt_status
14:34:47 332  	);
14:34:47 333  
14:34:47 334  EXCEPTION
14:34:47 335  WHEN BAD_TRANSACTION_ATTEMPT_ID THEN
14:34:47 336  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 337  	  SPROC_NAME, 'No such transaction attempt');
14:34:47 338  WHEN BAD_TRANS_ATTEMPT_STATUS THEN
14:34:47 339  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 340  	  SPROC_NAME, 'Bad transaction attempt status');
14:34:47 341  WHEN OTHERS THEN
14:34:47 342  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 343  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 344  END UPDATE_TRNSCTN_ATTEMPT_STATUS;
14:34:47 345  
14:34:47 346  /******************************************************************************/
14:34:47 347  
14:34:47 348  PROCEDURE GET_TRNSCTN_ATTEMPTS_BY_STATUS (
14:34:47 349  /*
14:34:47 350  Throws exceptions:
14:34:47 351  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 352  */
14:34:47 353  	in_transaction_id	      IN NUMBER,
14:34:47 354  	in_transaction_attempt_status IN NUMBER,
14:34:47 355  	out_result_set		      OUT SYS_REFCURSOR
14:34:47 356  ) AS
14:34:47 357  -- VARIABLES
14:34:47 358  SPROC_NAME	  CONSTANT VARCHAR2(30) := 'GET_TRNSCTN_ATTEMPTS_BY_STATUS';
14:34:47 359  temp_transaction_id NUMBER;
14:34:47 360  -- EXCEPTIONS
14:34:47 361  BAD_TRANSACTION_ID       EXCEPTION;
14:34:47 362  BAD_TRANS_ATTEMPT_STATUS EXCEPTION;
14:34:47 363  BEGIN
14:34:47 364  
14:34:47 365  	-- Check that transaction exists
14:34:47 366  	BEGIN
14:34:47 367  	  SELECT
14:34:47 368  	    TRANSACTION.ID into temp_transaction_id
14:34:47 369  	  FROM
14:34:47 370  	    TRANSACTION
14:34:47 371  	  WHERE
14:34:47 372  	    TRANSACTION.ID = in_transaction_id;
14:34:47 373  	  EXCEPTION
14:34:47 374  	    WHEN OTHERS THEN
14:34:47 375  	      RAISE BAD_TRANSACTION_ID;
14:34:47 376  	END;
14:34:47 377  
14:34:47 378  	-- Check that transaction attempt status is correct
14:34:47 379  	IF in_transaction_attempt_status != GLOBAL_STATUSES_V18.TRANS_ATTEMPT_IN_PROGRESS
14:34:47 380  	  AND in_transaction_attempt_status != GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS
14:34:47 381  	  AND in_transaction_attempt_status != GLOBAL_STATUSES_V18.TRANS_ATTEMPT_FAILED THEN
14:34:47 382  	  RAISE BAD_TRANS_ATTEMPT_STATUS;
14:34:47 383  	END IF;
14:34:47 384  
14:34:47 385  	OPEN out_result_set FOR
14:34:47 386  	SELECT
14:34:47 387  	  TRANSACTION_ATTEMPT.ID,
14:34:47 388  	  TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE,
14:34:47 389  	  TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE,
14:34:47 390  	  TRANSACTION_ATTEMPT.CREATE_DATE,
14:34:47 391  	  TRANSACTION_ATTEMPT.CREATED_BY,
14:34:47 392  	  TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID,
14:34:47 393  	  TRANSACTION_ATTEMPT.TRANSACTION_START_TIME,
14:34:47 394  	  TRANSACTION.TRANSACTION_AMOUNT,
14:34:47 395  	  TRANSACTION.ID as "TRANSACTION_ID",
14:34:47 396  	  TRANSACTION.UPDATE_DATE as "TRANSACTION_UPDATE_TIME"
14:34:47 397  	FROM
14:34:47 398  	  TRANSACTION_ATTEMPT
14:34:47 399  	  INNER JOIN TRANSACTION ON TRANSACTION_ATTEMPT.TRANSACTION_ID = TRANSACTION.ID
14:34:47 400  	WHERE
14:34:47 401  	  TRANSACTION_ATTEMPT.TRANSACTION_ID = in_transaction_id
14:34:47 402  	  AND TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID = in_transaction_attempt_status;
14:34:47 403  
14:34:47 404  EXCEPTION
14:34:47 405  WHEN BAD_TRANSACTION_ID THEN
14:34:47 406  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 407  	  SPROC_NAME, 'No such transaction');
14:34:47 408  WHEN BAD_TRANS_ATTEMPT_STATUS THEN
14:34:47 409  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 410  	  SPROC_NAME, 'Bad transaction attempt status');
14:34:47 411  WHEN OTHERS THEN
14:34:47 412  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 413  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 414  END GET_TRNSCTN_ATTEMPTS_BY_STATUS;
14:34:47 415  
14:34:47 416  /******************************************************************************/
14:34:47 417  
14:34:47 418  PROCEDURE UPDATE_TRANSACTION_ATTEMPT_INF (
14:34:47 419  /*
14:34:47 420  Throws exceptions:
14:34:47 421  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 422  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 423  */
14:34:47 424  	in_transaction_attempt_id IN NUMBER,
14:34:47 425  	in_ext_status_code	  IN VARCHAR2,
14:34:47 426  	in_ext_status_message	  IN VARCHAR2,
14:34:47 427  	in_ext_transaction_id	  IN VARCHAR2
14:34:47 428  ) AS
14:34:47 429  -- VARIABLES
14:34:47 430  SPROC_NAME	       CONSTANT VARCHAR2(30) := 'UPDATE_TRANSACTION_ATTEMPT_INF';
14:34:47 431  temp_trans_attempt_count NUMBER;
14:34:47 432  -- EXCEPTIONS
14:34:47 433  BAD_ATTEMPT_ID EXCEPTION;
14:34:47 434  BEGIN
14:34:47 435  
14:34:47 436  	SELECT
14:34:47 437  	  COUNT(*) into temp_trans_attempt_count
14:34:47 438  	FROM
14:34:47 439  	  TRANSACTION_ATTEMPT
14:34:47 440  	WHERE
14:34:47 441  	  TRANSACTION_ATTEMPT.ID = in_transaction_attempt_id;
14:34:47 442  
14:34:47 443  	IF temp_trans_attempt_count = 0 THEN
14:34:47 444  	  RAISE BAD_ATTEMPT_ID;
14:34:47 445  	END IF;
14:34:47 446  
14:34:47 447  	PROCS_TRANSACTION_CRU_V18.UPDATE_TRANSACTION_ATTEMPT(
14:34:47 448  	  in_transaction_attempt_id  => in_transaction_attempt_id,
14:34:47 449  	  in_external_status_code    => in_ext_status_code,
14:34:47 450  	  in_external_status_message => in_ext_status_message,
14:34:47 451  	  in_external_transaction_id => in_ext_transaction_id
14:34:47 452  	);
14:34:47 453  
14:34:47 454  EXCEPTION
14:34:47 455  WHEN BAD_ATTEMPT_ID THEN
14:34:47 456  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 457  	  SPROC_NAME, 'No such attempt');
14:34:47 458  WHEN OTHERS THEN
14:34:47 459  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 460  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 461  END UPDATE_TRANSACTION_ATTEMPT_INF;
14:34:47 462  
14:34:47 463  /******************************************************************************/
14:34:47 464  
14:34:47 465  PROCEDURE GET_FAILED_ATTEMPTS_NUMBER (
14:34:47 466  /*
14:34:47 467  Throws exceptions:
14:34:47 468  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 469  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 470  */
14:34:47 471  	in_transaction_id IN  NUMBER,
14:34:47 472  	out_attempts_num  OUT NUMBER
14:34:47 473  ) AS
14:34:47 474  -- VARIABLES
14:34:47 475  SPROC_NAME	     CONSTANT VARCHAR2(26) := 'GET_FAILED_ATTEMPTS_NUMBER';
14:34:47 476  temp_transaction_count NUMBER;
14:34:47 477  
14:34:47 478  -- EXCEPTIONS
14:34:47 479  BAD_TRANSACTION_ID EXCEPTION;
14:34:47 480  BEGIN
14:34:47 481  
14:34:47 482  	SELECT
14:34:47 483  	  COUNT(*) into temp_transaction_count
14:34:47 484  	FROM
14:34:47 485  	  TRANSACTION
14:34:47 486  	WHERE
14:34:47 487  	  TRANSACTION.ID = in_transaction_id;
14:34:47 488  
14:34:47 489  	IF temp_transaction_count = 0 THEN
14:34:47 490  	  RAISE BAD_TRANSACTION_ID;
14:34:47 491  	END IF;
14:34:47 492  
14:34:47 493  	SELECT
14:34:47 494  	  COUNT(*) into out_attempts_num
14:34:47 495  	FROM
14:34:47 496  	  TRANSACTION_ATTEMPT
14:34:47 497  	WHERE
14:34:47 498  	  TRANSACTION_ATTEMPT.TRANSACTION_ID = in_transaction_id
14:34:47 499  	  AND TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID = GLOBAL_STATUSES_V18.TRANS_ATTEMPT_FAILED;
14:34:47 500  
14:34:47 501  EXCEPTION
14:34:47 502  WHEN BAD_TRANSACTION_ID THEN
14:34:47 503  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 504  	  SPROC_NAME, 'No such transaction');
14:34:47 505  WHEN OTHERS THEN
14:34:47 506  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 507  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 508  END GET_FAILED_ATTEMPTS_NUMBER;
14:34:47 509  /******************************************************************************/
14:34:47 510  
14:34:47 511  PROCEDURE IS_TRANSACTION_SUCCESSFULL (
14:34:47 512  /*
14:34:47 513  Throws exceptions:
14:34:47 514  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 515  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 516  */
14:34:47 517  	in_transaction_id IN  NUMBER,
14:34:47 518  	out_is_successfull  OUT NUMBER
14:34:47 519  ) AS
14:34:47 520  -- VARIABLES
14:34:47 521  SPROC_NAME	     CONSTANT VARCHAR2(26) := 'IS_TRANSACTION_SUCCESSFULL';
14:34:47 522  temp_transaction_count NUMBER;
14:34:47 523  
14:34:47 524  -- EXCEPTIONS
14:34:47 525  BAD_TRANSACTION_ID EXCEPTION;
14:34:47 526  BEGIN
14:34:47 527  
14:34:47 528  	SELECT
14:34:47 529  	  COUNT(*) into temp_transaction_count
14:34:47 530  	FROM
14:34:47 531  	  TRANSACTION
14:34:47 532  	WHERE
14:34:47 533  	  TRANSACTION.ID = in_transaction_id;
14:34:47 534  
14:34:47 535  	IF temp_transaction_count = 0 THEN
14:34:47 536  	  RAISE BAD_TRANSACTION_ID;
14:34:47 537  	END IF;
14:34:47 538  
14:34:47 539  	SELECT
14:34:47 540  	  COUNT(*) into out_is_successfull
14:34:47 541  	FROM
14:34:47 542  	  TRANSACTION_ATTEMPT
14:34:47 543  	WHERE
14:34:47 544  	  TRANSACTION_ATTEMPT.TRANSACTION_ID = in_transaction_id
14:34:47 545  	  AND TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID = GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS;
14:34:47 546  
14:34:47 547  EXCEPTION
14:34:47 548  WHEN BAD_TRANSACTION_ID THEN
14:34:47 549  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 550  	  SPROC_NAME, 'No such transaction');
14:34:47 551  WHEN OTHERS THEN
14:34:47 552  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 553  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 554  END IS_TRANSACTION_SUCCESSFULL;
14:34:47 555  /******************************************************************************/
14:34:47 556  
14:34:47 557  PROCEDURE GET_TRANSACTION_AMOUNT (
14:34:47 558  /*
14:34:47 559  Throws exceptions:
14:34:47 560  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 561  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 562  */
14:34:47 563  	in_transaction_id      IN  NUMBER,
14:34:47 564  	out_transaction_amount OUT NUMBER
14:34:47 565  ) AS
14:34:47 566  SPROC_NAME CONSTANT VARCHAR2(22) := 'GET_TRANSACTION_AMOUNT';
14:34:47 567  BEGIN
14:34:47 568  
14:34:47 569  	SELECT
14:34:47 570  	  TRANSACTION.TRANSACTION_AMOUNT into out_transaction_amount
14:34:47 571  	FROM
14:34:47 572  	  TRANSACTION
14:34:47 573  	WHERE
14:34:47 574  	  TRANSACTION.ID = in_transaction_id;
14:34:47 575  
14:34:47 576  EXCEPTION
14:34:47 577  WHEN NO_DATA_FOUND THEN
14:34:47 578  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 579  	  SPROC_NAME, 'No such transaction');
14:34:47 580  WHEN OTHERS THEN
14:34:47 581  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 582  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 583  END GET_TRANSACTION_AMOUNT;
14:34:47 584  
14:34:47 585  /******************************************************************************/
14:34:47 586  
14:34:47 587  PROCEDURE GET_TRANSACTIONS_BY_CHARGE_ID (
14:34:47 588  /*
14:34:47 589  Throws exceptions:
14:34:47 590  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 591  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 592  */
14:34:47 593  	in_charge_id   IN  NUMBER,
14:34:47 594  	out_result_set OUT SYS_REFCURSOR
14:34:47 595  ) AS
14:34:47 596  -- VARIABLES
14:34:47 597  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_TRANSACTIONS_BY_CHARGE_ID';
14:34:47 598  temp_charge_id NUMBER;
14:34:47 599  -- EXCEPTIONS
14:34:47 600  BAD_CHARGE_ID EXCEPTION;
14:34:47 601  BEGIN
14:34:47 602  
14:34:47 603  	BEGIN
14:34:47 604  	  SELECT
14:34:47 605  	    CHARGE.ID into temp_charge_id
14:34:47 606  	  FROM
14:34:47 607  	    CHARGE
14:34:47 608  	  WHERE
14:34:47 609  	    CHARGE.ID = in_charge_id;
14:34:47 610  	  EXCEPTION
14:34:47 611  	    WHEN NO_DATA_FOUND THEN
14:34:47 612  	      RAISE BAD_CHARGE_ID;
14:34:47 613  	END;
14:34:47 614  
14:34:47 615  	OPEN out_result_set FOR
14:34:47 616  	SELECT DISTINCT
14:34:47 617  	  TRANSACTION.ID,
14:34:47 618  	  TRANSACTION.TRANSACTION_STATUS_ID,
14:34:47 619  	  TRANSACTION.CREATE_DATE,
14:34:47 620  	  TRANSACTION.TRANSACTION_AMOUNT,
14:34:47 621  	  TRANSACTION.IS_REFUND,
14:34:47 622  	  TRANSACTION.ORDER_ID
14:34:47 623  	FROM
14:34:47 624  	  CHARGE INNER JOIN TRANSACTION ON
14:34:47 625  	      CHARGE.TRANSACTION_ID = TRANSACTION.ID
14:34:47 626  	WHERE
14:34:47 627  	  CHARGE.ID = in_charge_id;
14:34:47 628  
14:34:47 629  EXCEPTION
14:34:47 630  WHEN BAD_CHARGE_ID THEN
14:34:47 631  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 632  	  SPROC_NAME, 'No such charge');
14:34:47 633  WHEN OTHERS THEN
14:34:47 634  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 635  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 636  END GET_TRANSACTIONS_BY_CHARGE_ID;
14:34:47 637  /******************************************************************************/
14:34:47 638  
14:34:47 639  PROCEDURE GET_TRANSACTION_BY_ORDER_ID (
14:34:47 640  /*
14:34:47 641  Throws exceptions:
14:34:47 642  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 643  */
14:34:47 644  	in_order_id   IN  TRANSACTION.ORDER_ID%TYPE,
14:34:47 645  	out_result_set OUT SYS_REFCURSOR
14:34:47 646  ) AS
14:34:47 647  -- VARIABLES
14:34:47 648  SPROC_NAME     CONSTANT VARCHAR2(27) := 'GET_TRANSACTION_BY_ORDER_ID';
14:34:47 649  BEGIN
14:34:47 650  	OPEN out_result_set FOR
14:34:47 651  	SELECT DISTINCT
14:34:47 652  	  TRANSACTION.ID
14:34:47 653  	FROM
14:34:47 654  	  TRANSACTION
14:34:47 655  	WHERE
14:34:47 656  	  TRANSACTION.ORDER_ID = in_order_id;
14:34:47 657  
14:34:47 658  EXCEPTION
14:34:47 659  WHEN OTHERS THEN
14:34:47 660  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 661  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 662  END GET_TRANSACTION_BY_ORDER_ID;
14:34:47 663  /******************************************************************************/
14:34:47 664  
14:34:47 665  PROCEDURE GET_TRANSACTIONS_BY_ORDER_ID (
14:34:47 666  /*
14:34:47 667  Throws exceptions:
14:34:47 668  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 669  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 670  */
14:34:47 671  	in_order_id   IN  TRANSACTION.ORDER_ID%TYPE,
14:34:47 672  	out_result_set OUT SYS_REFCURSOR
14:34:47 673  ) AS
14:34:47 674  -- VARIABLES
14:34:47 675  SPROC_NAME     CONSTANT VARCHAR2(28) := 'GET_TRANSACTIONS_BY_ORDER_ID';
14:34:47 676  temp_order_id TRANSACTION.ORDER_ID%TYPE;
14:34:47 677  -- EXCEPTIONS
14:34:47 678  BAD_ORDER_ID EXCEPTION;
14:34:47 679  BEGIN
14:34:47 680  
14:34:47 681  	--TODO BOO, REMOVE ME
14:34:47 682  	BEGIN
14:34:47 683  	  SELECT
14:34:47 684  	    distinct TRANSACTION.ORDER_ID INTO temp_order_id
14:34:47 685  	  FROM
14:34:47 686  	    TRANSACTION
14:34:47 687  	  WHERE
14:34:47 688  	    TRANSACTION.ORDER_ID = in_order_id;
14:34:47 689  	  EXCEPTION
14:34:47 690  	    WHEN NO_DATA_FOUND THEN
14:34:47 691  	      RAISE BAD_ORDER_ID;
14:34:47 692  	END;
14:34:47 693  
14:34:47 694  	OPEN out_result_set FOR
14:34:47 695  	SELECT c.ID CHARGE_ID,
14:34:47 696  	  c.CHARGE_AMOUNT,
14:34:47 697  	  c.CHARGE_STATUS_ID,
14:34:47 698  	  c.INSTRUMENT_ID,
14:34:47 699  	  c.INSTRUMENT_TYPE_ID,
14:34:47 700  	  c.INVOICE_ID,
14:34:47 701  	  t.ID TRANSACTION_ID,
14:34:47 702  	  t.IS_REFUND,
14:34:47 703  	  t.IS_SETTLED,
14:34:47 704  	  t.ORDER_ID,
14:34:47 705  	  t.TRANSACTION_AMOUNT,
14:34:47 706  	  t.TRANSACTION_STATUS_ID,
14:34:47 707  	  t.CREATE_DATE TRANSACTION_CREATE_DATE,
14:34:47 708  	  t.CREATED_BY TRANSACTION_CREATED_BY,
14:34:47 709  	  t.UPDATE_DATE TRANSACTION_UPDATE_DATE,
14:34:47 710  	  t.UPDATED_BY TRANSACTION_UPDATED_BY
14:34:47 711  	FROM CHARGE c
14:34:47 712  	JOIN TRANSACTION t ON c.TRANSACTION_ID = t.ID
14:34:47 713  	WHERE TRANSACTION_ID IN (
14:34:47 714  	  SELECT ID FROM TRANSACTION WHERE ORDER_ID = in_order_id
14:34:47 715  	);
14:34:47 716  
14:34:47 717  EXCEPTION
14:34:47 718  WHEN BAD_ORDER_ID THEN
14:34:47 719  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 720  	  SPROC_NAME, 'No such order');
14:34:47 721  WHEN OTHERS THEN
14:34:47 722  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 723  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 724  END GET_TRANSACTIONS_BY_ORDER_ID;
14:34:47 725  /******************************************************************************/
14:34:47 726  
14:34:47 727  PROCEDURE GET_CLOSED_REFUNDS_BY_INVOICE (
14:34:47 728  /*
14:34:47 729  Throws exceptions:
14:34:47 730  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 731  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 732  */
14:34:47 733  	in_invoice_id	IN  NUMBER,
14:34:47 734  	out_result_set OUT SYS_REFCURSOR
14:34:47 735  ) AS
14:34:47 736  -- VARIABLES
14:34:47 737  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_CLOSED_REFUNDS_BY_INVOICE';
14:34:47 738  temp_invoice_id NUMBER;
14:34:47 739  -- EXCEPTIONS
14:34:47 740  BAD_INVOICE_ID EXCEPTION;
14:34:47 741  BEGIN
14:34:47 742  
14:34:47 743  	BEGIN
14:34:47 744  	  SELECT
14:34:47 745  	    INVOICE.ID into temp_invoice_id
14:34:47 746  	  FROM
14:34:47 747  	    INVOICE
14:34:47 748  	  WHERE
14:34:47 749  	    INVOICE.ID = in_invoice_id;
14:34:47 750  	  EXCEPTION
14:34:47 751  	    WHEN NO_DATA_FOUND THEN
14:34:47 752  	      RAISE BAD_INVOICE_ID;
14:34:47 753  	END;
14:34:47 754  
14:34:47 755  	OPEN out_result_set FOR
14:34:47 756  	SELECT DISTINCT
14:34:47 757  	  TRANSACTION.ID,
14:34:47 758  	  TRANSACTION.TRANSACTION_STATUS_ID,
14:34:47 759  	  TRANSACTION.CREATE_DATE,
14:34:47 760  	  TRANSACTION.UPDATE_DATE,
14:34:47 761  	  TRANSACTION.ORDER_ID,
14:34:47 762  	  TRANSACTION.TRANSACTION_AMOUNT
14:34:47 763  	FROM
14:34:47 764  	  INVOICE INNER JOIN CHARGE ON	(INVOICE.ID = CHARGE.INVOICE_ID)
14:34:47 765  	  INNER JOIN TRANSACTION ON (CHARGE.TRANSACTION_ID = TRANSACTION.ID)
14:34:47 766  	WHERE
14:34:47 767  	  INVOICE.ID = in_invoice_id
14:34:47 768  	  AND TRANSACTION.IS_REFUND = GLOBAL_CONSTANTS_V18.TRUE
14:34:47 769  	  AND TRANSACTION.TRANSACTION_AMOUNT <= 0
14:34:47 770  	  AND TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V18.TRANSACTION_CLOSED;
14:34:47 771  
14:34:47 772  EXCEPTION
14:34:47 773  WHEN BAD_INVOICE_ID THEN
14:34:47 774  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 775  	  SPROC_NAME, 'No such invoice');
14:34:47 776  WHEN OTHERS THEN
14:34:47 777  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 778  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 779  END GET_CLOSED_REFUNDS_BY_INVOICE;
14:34:47 780  
14:34:47 781  /******************************************************************************/
14:34:47 782  
14:34:47 783  PROCEDURE GET_TRANSACTION_ATTEMPTS (
14:34:47 784  /*
14:34:47 785  Throws exceptions:
14:34:47 786  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 787  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 788  */
14:34:47 789  	in_transaction_id IN  NUMBER,
14:34:47 790  	out_result_set	  OUT SYS_REFCURSOR
14:34:47 791  ) AS
14:34:47 792  -- VARIABLES
14:34:47 793  SPROC_NAME	  CONSTANT VARCHAR2(24) := 'GET_TRANSACTION_ATTEMPTS';
14:34:47 794  temp_transaction_id NUMBER;
14:34:47 795  -- EXCEPTIONS
14:34:47 796  BAD_TRANSACTION_ID EXCEPTION;
14:34:47 797  BEGIN
14:34:47 798  
14:34:47 799  	BEGIN
14:34:47 800  	  SELECT
14:34:47 801  	    TRANSACTION.ID into temp_transaction_id
14:34:47 802  	  FROM
14:34:47 803  	    TRANSACTION
14:34:47 804  	  WHERE
14:34:47 805  	    TRANSACTION.ID = in_transaction_id;
14:34:47 806  	  EXCEPTION
14:34:47 807  	    WHEN NO_DATA_FOUND THEN
14:34:47 808  	      RAISE BAD_TRANSACTION_ID;
14:34:47 809  	END;
14:34:47 810  
14:34:47 811  	OPEN out_result_set FOR
14:34:47 812  	SELECT
14:34:47 813  	  TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID,
14:34:47 814  	  TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE,
14:34:47 815  	  TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE,
14:34:47 816  	  TRANSACTION_ATTEMPT.CREATE_DATE,
14:34:47 817  	  TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID
14:34:47 818  	FROM
14:34:47 819  	  TRANSACTION_ATTEMPT
14:34:47 820  	WHERE
14:34:47 821  	  TRANSACTION_ATTEMPT.TRANSACTION_ID = in_transaction_id;
14:34:47 822  
14:34:47 823  EXCEPTION
14:34:47 824  WHEN BAD_TRANSACTION_ID THEN
14:34:47 825  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 826  	  SPROC_NAME, 'No such transaction');
14:34:47 827  WHEN OTHERS THEN
14:34:47 828  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 829  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 830  END GET_TRANSACTION_ATTEMPTS;
14:34:47 831  
14:34:47 832  /******************************************************************************/
14:34:47 833  
14:34:47 834  PROCEDURE RESERVE_TRANSACTION_ID (
14:34:47 835  /*
14:34:47 836  Throws exceptions:
14:34:47 837  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 838  */
14:34:47 839  	out_transaction_id OUT NUMBER
14:34:47 840  ) AS
14:34:47 841  SPROC_NAME CONSTANT VARCHAR2(22) := 'RESERVE_TRANSACTION_ID';
14:34:47 842  BEGIN
14:34:47 843  	SELECT
14:34:47 844  	  TRN_ID_SEQ.nextVal into out_transaction_id
14:34:47 845  	FROM DUAL;
14:34:47 846  EXCEPTION
14:34:47 847  WHEN OTHERS THEN
14:34:47 848  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 849  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 850  END RESERVE_TRANSACTION_ID;
14:34:47 851  
14:34:47 852  /******************************************************************************/
14:34:47 853  
14:34:47 854  PROCEDURE GET_TRANSACTION_BY_ID (
14:34:47 855  /*
14:34:47 856  Throws exceptions:
14:34:47 857  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 858  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 859  */
14:34:47 860  	in_transaction_id IN NUMBER,
14:34:47 861  	out_result_set	  OUT SYS_REFCURSOR
14:34:47 862  ) AS
14:34:47 863  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_TRANSACTION_BY_ID';
14:34:47 864  -- VARIABLES
14:34:47 865  temp_transaction_id NUMBER;
14:34:47 866  -- EXCPTIONS
14:34:47 867  BAD_TRANSACTION_ID EXCEPTION;
14:34:47 868  BEGIN
14:34:47 869  	BEGIN
14:34:47 870  	  SELECT
14:34:47 871  	    TRANSACTION.ID into temp_transaction_id
14:34:47 872  	  FROM
14:34:47 873  	    TRANSACTION
14:34:47 874  	  WHERE
14:34:47 875  	    TRANSACTION.ID = in_transaction_id;
14:34:47 876  	  EXCEPTION
14:34:47 877  	    WHEN NO_DATA_FOUND THEN
14:34:47 878  	      RAISE BAD_TRANSACTION_ID;
14:34:47 879  	END;
14:34:47 880  
14:34:47 881  	PROCS_TRANSACTION_CRU_V18.READ_TRANSACTION(
14:34:47 882  	  in_transaction_id => in_transaction_id,
14:34:47 883  	  out_result_set    => out_result_set
14:34:47 884  	);
14:34:47 885  
14:34:47 886  EXCEPTION
14:34:47 887  WHEN NO_DATA_FOUND THEN
14:34:47 888  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 889  	  SPROC_NAME, 'No such transaction');
14:34:47 890  WHEN OTHERS THEN
14:34:47 891  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 892  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 893  END GET_TRANSACTION_BY_ID;
14:34:47 894  
14:34:47 895  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
14:34:47 896  /*
14:34:47 897  Throws exceptions:
14:34:47 898  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 899  APP_EXCEPTION_CODES_V18.INTRNAL_ERROR
14:34:47 900  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 901  */
14:34:47 902  	in_transaction_id IN TRANSACTION.ID%TYPE,
14:34:47 903  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
14:34:47 904  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
14:34:47 905  ) AS
14:34:47 906  SPROC_NAME CONSTANT VARCHAR2(27) := 'UPDATE_TRANSACTION_ORDER_ID';
14:34:47 907  -- VARIABLES
14:34:47 908  temp_transaction_id TRANSACTION.ID%TYPE;
14:34:47 909  -- EXCEPTIONS
14:34:47 910  BAD_TRANSACTION_ID   EXCEPTION;
14:34:47 911  ORDER_ID_IS_NOT_NULL EXCEPTION;
14:34:47 912  CRU_UNKNOWN_ERROR    EXCEPTION;
14:34:47 913  EXCEPTION_MESSAGE VARCHAR2(1024);
14:34:47 914  BEGIN
14:34:47 915  	BEGIN
14:34:47 916  	  SELECT
14:34:47 917  	    TRANSACTION.ID into temp_transaction_id
14:34:47 918  	  FROM
14:34:47 919  	    TRANSACTION
14:34:47 920  	  WHERE
14:34:47 921  	    TRANSACTION.ID = in_transaction_id;
14:34:47 922  	  EXCEPTION
14:34:47 923  	    WHEN NO_DATA_FOUND THEN
14:34:47 924  	      RAISE BAD_TRANSACTION_ID;
14:34:47 925  	END;
14:34:47 926  
14:34:47 927  	BEGIN
14:34:47 928  	  PROCS_TRANSACTION_CRU_V18.UPDATE_TRANSACTION_ORDER_ID(
14:34:47 929  	    in_transaction_id => in_transaction_id,
14:34:47 930  	    in_order_id       => in_order_id,
14:34:47 931  	    in_updated_by     => in_updated_by
14:34:47 932  	  );
14:34:47 933  	  EXCEPTION
14:34:47 934  	    WHEN OTHERS THEN
14:34:47 935  	      IF SQLCODE = APP_EXCEPTION_CODES_V18.NOT_FOUND THEN
14:34:47 936  		RAISE ORDER_ID_IS_NOT_NULL;
14:34:47 937  	      ELSE
14:34:47 938  		EXCEPTION_MESSAGE := SQLERRM;
14:34:47 939  		RAISE CRU_UNKNOWN_ERROR;
14:34:47 940  	      END IF;
14:34:47 941  	END;
14:34:47 942  
14:34:47 943  EXCEPTION
14:34:47 944  WHEN BAD_TRANSACTION_ID THEN
14:34:47 945  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 946  	  SPROC_NAME, 'No such transaction');
14:34:47 947  WHEN ORDER_ID_IS_NOT_NULL THEN
14:34:47 948  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 949  	  SPROC_NAME, 'Order id is not null');
14:34:47 950  WHEN CRU_UNKNOWN_ERROR THEN
14:34:47 951  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 952  	  SPROC_NAME, 'Unknown error while updating order id', EXCEPTION_MESSAGE);
14:34:47 953  WHEN OTHERS THEN
14:34:47 954  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 955  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 956  END UPDATE_TRANSACTION_ORDER_ID;
14:34:47 957  
14:34:47 958  /******************************************************************************/
14:34:47 959  
14:34:47 960  FUNCTION GET_TRANSACTION_TAX_AMOUNT (
14:34:47 961  	in_transaction_id IN NUMBER
14:34:47 962  ) RETURN NUMBER AS
14:34:47 963  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_TRANSACTION_TAX_AMOUNT';
14:34:47 964  -- Variables
14:34:47 965  var_tax_amount NUMBER(10,2);
14:34:47 966  BEGIN
14:34:47 967  
14:34:47 968  	SELECT
14:34:47 969  	  SUM(LI.TAXES_AMOUNT) into var_tax_amount
14:34:47 970  	FROM
14:34:47 971  	  LINE_ITEM LI
14:34:47 972  	  INNER JOIN INVOICE I ON LI.INVOICE_ID = I.ID
14:34:47 973  	  INNER JOIN CHARGE CH ON CH.INVOICE_ID = I.ID
14:34:47 974  	WHERE
14:34:47 975  	  CH.TRANSACTION_ID = in_transaction_id;
14:34:47 976  
14:34:47 977  	IF var_tax_amount IS NULL THEN
14:34:47 978  	  var_tax_amount := 0;
14:34:47 979  	END IF;
14:34:47 980  
14:34:47 981  	RETURN var_tax_amount;
14:34:47 982  
14:34:47 983  END GET_TRANSACTION_TAX_AMOUNT;
14:34:47 984  
14:34:47 985  /******************************************************************************/
14:34:47 986  
14:34:47 987  FUNCTION GET_TRANSACTION_INTRL_TAXES (
14:34:47 988  	in_transaction_id IN NUMBER
14:34:47 989  ) RETURN NUMBER AS
14:34:47 990  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_TRANSACTION_INTRL_TAXES';
14:34:47 991  -- Variables
14:34:47 992  var_intrl_tax_amount NUMBER(10, 2);
14:34:47 993  BEGIN
14:34:47 994  
14:34:47 995  	SELECT SUM(T.CALCULATED_AMOUNT) into var_intrl_tax_amount
14:34:47 996  	FROM
14:34:47 997  	  LINE_ITEM LI
14:34:47 998  	  INNER JOIN INVOICE I ON LI.INVOICE_ID = I.ID
14:34:47 999  	  INNER JOIN CHARGE CH ON CH.INVOICE_ID=  I.ID
14:34:47 1000  	   INNER JOIN TAX T ON T.LINE_ITEM_ID = LI.ID
14:34:47 1001  	 WHERE
14:34:47 1002  	   CH.TRANSACTION_ID = in_transaction_id
14:34:47 1003  	   AND T.TAX_TYPE_ID IN (
14:34:47 1004  	     SELECT GLOBAL_ENUMS_V18.TAX_TYPE_VAT FROM DUAL
14:34:47 1005  	   );
14:34:47 1006  
14:34:47 1007  	 IF var_intrl_tax_amount IS NULL THEN
14:34:47 1008  	   var_intrl_tax_amount := 0;
14:34:47 1009  	 END IF;
14:34:47 1010  
14:34:47 1011  	 RETURN var_intrl_tax_amount;
14:34:47 1012  
14:34:47 1013  END GET_TRANSACTION_INTRL_TAXES;
14:34:47 1014  
14:34:47 1015  /******************************************************************************/
14:34:47 1016  -- norlov: #38796
14:34:47 1017  PROCEDURE GET_TRANSACTIONS (
14:34:47 1018  /*
14:34:47 1019  Throws exceptions:
14:34:47 1020  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 1021  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 1022  */
14:34:47 1023  	 in_group_id	       IN  NUMBER,
14:34:47 1024  	 in_invoice_id	       IN NUMBER DEFAULT NULL,
14:34:47 1025  	 in_subscription_id    IN NUMBER DEFAULT NULL,
14:34:47 1026  	 in_start_date	       IN TRANSACTION.CREATE_DATE%TYPE DEFAULT NULL,
14:34:47 1027  	 in_end_date	       IN TRANSACTION.CREATE_DATE%TYPE DEFAULT NULL,
14:34:47 1028  	 in_transaction_status IN NUMBER DEFAULT NULL,
14:34:47 1029  	 out_result_set        OUT SYS_REFCURSOR
14:34:47 1030  ) AS
14:34:47 1031  SPROC_NAME CONSTANT VARCHAR2(16) := 'GET_TRANSACTIONS';
14:34:47 1032  -- VARIABLES
14:34:47 1033  var_account_id ACCOUNT.ID%TYPE;
14:34:47 1034  statement VARCHAR2(2000);
14:34:47 1035  -- EXCEPTIONS
14:34:47 1036  BAD_GROUP_ID   EXCEPTION;
14:34:47 1037  BEGIN
14:34:47 1038  	-- check group id
14:34:47 1039  	BEGIN
14:34:47 1040  	   SELECT
14:34:47 1041  	     ACCOUNT.ID into var_account_id
14:34:47 1042  	   FROM
14:34:47 1043  	     ACCOUNT
14:34:47 1044  	   WHERE
14:34:47 1045  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:47 1046  	   EXCEPTION
14:34:47 1047  	     WHEN NO_DATA_FOUND THEN
14:34:47 1048  	       RAISE BAD_GROUP_ID;
14:34:47 1049  	 END;
14:34:47 1050  
14:34:47 1051  	 OPEN out_result_set FOR
14:34:47 1052  	 SELECT
14:34:47 1053  	   TRANSACTION.ID,
14:34:47 1054  	   TRANSACTION.TRANSACTION_STATUS_ID,
14:34:47 1055  	   TRANSACTION.TRANSACTION_AMOUNT,
14:34:47 1056  	   TRANSACTION.CREATE_DATE,
14:34:47 1057  	   TRANSACTION.CREATED_BY,
14:34:47 1058  	   TRANSACTION.IS_REFUND,
14:34:47 1059  	   GET_TRANSACTION_TAX_AMOUNT(TRANSACTION.ID) as TRANSACTION_TAX_AMOUNT,
14:34:47 1060  	   GET_TRANSACTION_INTRL_TAXES(TRANSACTION.ID) as INTERNATIONAL_TOTAL
14:34:47 1061  	 FROM
14:34:47 1062  	   TRANSACTION
14:34:47 1063  	   INNER JOIN CHARGE ON TRANSACTION.ID = CHARGE.TRANSACTION_ID
14:34:47 1064  	   INNER JOIN INVOICE ON INVOICE.ID = CHARGE.INVOICE_ID
14:34:47 1065  	 WHERE
14:34:47 1066  	   -- Filter by invoice ID
14:34:47 1067  	   (
14:34:47 1068  	     INVOICE.ID IN (
14:34:47 1069  	       -- Gift certificate invoices
14:34:47 1070  	       SELECT
14:34:47 1071  		 GIFT_CERTIFICATE.PURCHASE_INVOICE_ID
14:34:47 1072  	       FROM
14:34:47 1073  		 GIFT_CERTIFICATE
14:34:47 1074  	       WHERE
14:34:47 1075  		 GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id
14:34:47 1076  		 -- If subscription_id is set then return nothing
14:34:47 1077  		 AND EXISTS (SELECT 1 FROM DUAL WHERE in_subscription_id IS NULL)
14:34:47 1078  	     )
14:34:47 1079  	     OR
14:34:47 1080  	     INVOICE.ID IN (
14:34:47 1081  	       SELECT
14:34:47 1082  		 LICENSE.INVOICE_ID
14:34:47 1083  	       FROM
14:34:47 1084  		 LICENSE
14:34:47 1085  		 INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:47 1086  	       WHERE
14:34:47 1087  		 SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:47 1088  		 -- Filter by subscription id
14:34:47 1089  		 AND SUBSCRIPTION.ID = NVL(in_subscription_id, SUBSCRIPTION.ID)
14:34:47 1090  	     )
14:34:47 1091  	   )
14:34:47 1092  	   -- Filter by invoice id
14:34:47 1093  	   AND INVOICE.ID = NVL(in_invoice_id, INVOICE.ID)
14:34:47 1094  	   -- Filter by start date
14:34:47 1095  	   AND TRANSACTION.CREATE_DATE >= NVL(in_start_date, TRANSACTION.CREATE_DATE)
14:34:47 1096  	   -- Filter by end date
14:34:47 1097  	   AND TRANSACTION.CREATE_DATE <= NVL(in_end_date, TRANSACTION.CREATE_DATE)
14:34:47 1098  	   -- Filter by transaction status
14:34:47 1099  	   AND TRANSACTION.TRANSACTION_STATUS_ID IN ( SELECT NVL(in_transaction_status, TRANSACTION.TRANSACTION_STATUS_ID) FROM DUAL);
14:34:47 1100  
14:34:47 1101  /*
14:34:47 1102  
14:34:47 1103  statement :=  'select distinct '||CHR(10)
14:34:47 1104  || ' TRANSACTION.ID,'||CHR(10)
14:34:47 1105  || ' TRANSACTION.TRANSACTION_STATUS_ID, '||CHR(10)
14:34:47 1106  || ' TRANSACTION.TRANSACTION_AMOUNT, '||CHR(10)
14:34:47 1107  || ' TRANSACTION.CREATE_DATE, '||CHR(10)
14:34:47 1108  || ' TRANSACTION.CREATED_BY, '||CHR(10)
14:34:47 1109  || ' TRANSACTION.IS_REFUND from TRANSACTION '||CHR(10)
14:34:47 1110  || ' inner join CHARGE on (CHARGE.TRANSACTION_ID = TRANSACTION.ID)'||CHR(10)
14:34:47 1111  || ' inner join INVOICE on (INVOICE.ID = CHARGE.INVOICE_ID)'||CHR(10)
14:34:47 1112  || ' inner join LICENSE on (LICENSE.INVOICE_ID = INVOICE.ID)'||CHR(10)
14:34:47 1113  || ' inner join SUBSCRIPTION on (SUBSCRIPTION.ID = LICENSE.SUBSCRIPTION_ID)'||CHR(10)
14:34:47 1114  || ' inner join ACCOUNT on (ACCOUNT.ID = SUBSCRIPTION.ACCOUNT_ID)'||CHR(10)
14:34:47 1115  || ' where ACCOUNT.GROUP_ID = '||in_group_id;
14:34:47 1116  
14:34:47 1117  IF (in_transaction_status IS NOT NULL) THEN
14:34:47 1118  	 statement := statement || CHR(10) || 'AND TRANSACTION.TRANSACTION_STATUS_ID=' || in_transaction_status;
14:34:47 1119  END IF;
14:34:47 1120  
14:34:47 1121  IF (in_invoice_id IS NOT NULL) THEN
14:34:47 1122  	 statement := statement || CHR(10) || 'AND INVOICE.ID=' || in_invoice_id;
14:34:47 1123  END IF;
14:34:47 1124  
14:34:47 1125  IF (in_subscription_id IS NOT NULL) THEN
14:34:47 1126  	 statement := statement || CHR(10) || 'AND SUBSCRIPTION.ID=' || in_subscription_id;
14:34:47 1127  END IF;
14:34:47 1128  
14:34:47 1129  IF (in_start_date IS NOT NULL) THEN
14:34:47 1130  	 statement := statement || CHR(10) || 'AND TRANSACTION.CREATE_DATE>= TO_DATE(''' || TO_CHAR(in_start_date,'yyyy/mm/dd:hh:mi:ss') || ''',''yyyy/mm/dd:hh:mi:ss'')';  -- norlov: ??
14:34:47 1131  END IF;
14:34:47 1132  
14:34:47 1133  IF (in_end_date IS NOT NULL) THEN
14:34:47 1134  	 statement := statement || CHR(10) || 'AND TRANSACTION.CREATE_DATE<= TO_DATE(''' || TO_CHAR(in_end_date,'yyyy/mm/dd:hh:mi:ss') || ''',''yyyy/mm/dd:hh:mi:ss'')'; -- norlov: ??
14:34:47 1135  END IF;
14:34:47 1136  dbms_output.put_line(statement);
14:34:47 1137  OPEN out_result_set FOR statement;
14:34:47 1138  
14:34:47 1139  */
14:34:47 1140  
14:34:47 1141  EXCEPTION
14:34:47 1142  WHEN BAD_GROUP_ID THEN
14:34:47 1143  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1144  	   SPROC_NAME, 'No such group');
14:34:47 1145  WHEN OTHERS THEN
14:34:47 1146  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1147  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1148  END GET_TRANSACTIONS;
14:34:47 1149  
14:34:47 1150  FUNCTION IS_TRANSACTION_COLLECTED (
14:34:47 1151  /*
14:34:47 1152  Throws:
14:34:47 1153  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 1154  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 1155  Returns:
14:34:47 1156  GLOBAL_CONST.TRUE if transaction collected,
14:34:47 1157  GLOBAL_CONST.FALSE else
14:34:47 1158  */
14:34:47 1159  	 in_transaction_id IN NUMBER
14:34:47 1160  ) RETURN NUMBER AS
14:34:47 1161  SPROC_NAME CONSTANT VARCHAR2(24) := 'IS_TRANSACTION_COLLECTED';
14:34:47 1162  -- VARIABLES
14:34:47 1163  temp_transaction_id     NUMBER;
14:34:47 1164  var_success_attemps_num NUMBER;
14:34:47 1165  -- EXCEPTIONS
14:34:47 1166  BAD_TRANSACTION_ID EXCEPTION;
14:34:47 1167  BEGIN
14:34:47 1168  
14:34:47 1169  	 BEGIN
14:34:47 1170  	   SELECT
14:34:47 1171  	     TRANSACTION.ID into temp_transaction_id
14:34:47 1172  	   FROM
14:34:47 1173  	     TRANSACTION
14:34:47 1174  	   WHERE
14:34:47 1175  	     TRANSACTION.ID = in_transaction_id;
14:34:47 1176  	   EXCEPTION
14:34:47 1177  	     WHEN NO_DATA_FOUND THEN
14:34:47 1178  	       RAISE BAD_TRANSACTION_ID;
14:34:47 1179  	 END;
14:34:47 1180  
14:34:47 1181  	 SELECT
14:34:47 1182  	   COUNT(*) into var_success_attemps_num
14:34:47 1183  	 FROM
14:34:47 1184  	   TRANSACTION_ATTEMPT
14:34:47 1185  	 WHERE
14:34:47 1186  	   TRANSACTION_ATTEMPT.TRANSACTION_ID = in_transaction_id
14:34:47 1187  	   AND TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID IN ( SELECT GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS FROM DUAL );
14:34:47 1188  
14:34:47 1189  	 IF var_success_attemps_num > 0 THEN
14:34:47 1190  	   RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:47 1191  	 ELSE
14:34:47 1192  	   RETURN GLOBAL_CONSTANTS_V18.FALSE;
14:34:47 1193  	 END IF;
14:34:47 1194  
14:34:47 1195  EXCEPTION
14:34:47 1196  WHEN BAD_TRANSACTION_ID THEN
14:34:47 1197  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1198  	   SPROC_NAME, 'No such transaction');
14:34:47 1199  WHEN OTHERS THEN
14:34:47 1200  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1201  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1202  END IS_TRANSACTION_COLLECTED;
14:34:47 1203  
14:34:47 1204  
14:34:47 1205  /******************************************************************************/
14:34:47 1206  PROCEDURE GET_NEXT_ATTEMPT_NUMBER (
14:34:47 1207  /*
14:34:47 1208  Throws exceptions:
14:34:47 1209  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 1210  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 1211  */
14:34:47 1212  	 in_charge_id	in  number,
14:34:47 1213  	 out_attempt_count OUT NUMBER
14:34:47 1214  ) AS
14:34:47 1215  -- VARIABLES
14:34:47 1216  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_NEXT_ATTEMPT_NUMBER';
14:34:47 1217  temp_transaction_id NUMBER;
14:34:47 1218  -- EXCEPTIONS
14:34:47 1219  BAD_CHARGE_ID EXCEPTION;
14:34:47 1220  BEGIN
14:34:47 1221  
14:34:47 1222  	 BEGIN
14:34:47 1223  	   SELECT
14:34:47 1224  	     TRANSACTION_ID into temp_transaction_id
14:34:47 1225  	   FROM
14:34:47 1226  	     CHARGE
14:34:47 1227  	   WHERE
14:34:47 1228  	     CHARGE.ID = in_charge_id;
14:34:47 1229  	   EXCEPTION
14:34:47 1230  	     WHEN NO_DATA_FOUND THEN
14:34:47 1231  	       RAISE BAD_CHARGE_ID;
14:34:47 1232  	 END;
14:34:47 1233  
14:34:47 1234  	 select
14:34:47 1235  	   count(1)
14:34:47 1236  	 into
14:34:47 1237  	   out_attempt_count
14:34:47 1238  	 from
14:34:47 1239  	   transaction tr
14:34:47 1240  	 inner join
14:34:47 1241  	   transaction_attempt ta
14:34:47 1242  	 on (tr.id = ta.transaction_id)
14:34:47 1243  	 where
14:34:47 1244  	   tr.ID = temp_transaction_id;
14:34:47 1245  
14:34:47 1246  	 out_attempt_count := out_attempt_count + 1;
14:34:47 1247  
14:34:47 1248  EXCEPTION
14:34:47 1249  WHEN BAD_CHARGE_ID THEN
14:34:47 1250  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1251  	   SPROC_NAME, 'No such charge');
14:34:47 1252  WHEN OTHERS THEN
14:34:47 1253  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1254  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1255  end GET_NEXT_ATTEMPT_NUMBER;
14:34:47 1256  /******************************************************************************/
14:34:47 1257  
14:34:47 1258  END PROCS_TRANSACTION_V18;
14:34:47 1259  .
14:34:47 SQL> /

Package body created.

Elapsed: 00:00:00.19
14:34:47 SQL> 
14:34:47 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LICENSE_V18" AS
14:34:47   2  
14:34:47   3  PROCEDURE CREATE_LICENSE(
14:34:47   4  /*
14:34:47   5  Throws exceptions:
14:34:47   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47   8  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:47   9  */
14:34:47  10  	in_status_id		    IN NUMBER,
14:34:47  11  	in_needs_entitlements	    IN NUMBER,
14:34:47  12  	in_start_date		    IN DATE,
14:34:47  13  	in_end_date		    IN DATE,
14:34:47  14  	in_offer_id		    IN NUMBER,
14:34:47  15  	in_subscription_id	    IN NUMBER,
14:34:47  16  	in_invoice_id		    IN NUMBER,
14:34:47  17  	in_created_by		    IN VARCHAR2,
14:34:47  18  	in_is_extension 	    IN NUMBER,
14:34:47  19  	in_current_offer_index	    IN NUMBER,
14:34:47  20  	in_current_offer_recurr_num IN NUMBER,
14:34:47  21  	out_license_id		    OUT NUMBER
14:34:47  22  ) AS
14:34:47  23  -- VARIABLES
14:34:47  24  SPROC_NAME	   CONSTANT VARCHAR2(14) := 'CREATE_LICENSE';
14:34:47  25  temp_offer_id	   NUMBER;
14:34:47  26  temp_subscription_id NUMBER;
14:34:47  27  temp_invoice_id	   NUMBER;
14:34:47  28  
14:34:47  29  var_new_license_id NUMBER;
14:34:47  30  var_offer_duration VARCHAR2(30);
14:34:47  31  
14:34:47  32  var_offer_ym_interval INTERVAL YEAR TO MONTH;
14:34:47  33  var_offer_ds_interval INTERVAL DAY(3) TO SECOND;
14:34:47  34  var_offer_years	    NUMBER;
14:34:47  35  var_offer_months	    NUMBER;
14:34:47  36  var_offer_days	    NUMBER;
14:34:47  37  
14:34:47  38  -- EXCEPTIONS
14:34:47  39  BAD_OFFER_ID	     EXCEPTION;
14:34:47  40  BAD_SUBSCRIPTION_ID    EXCEPTION;
14:34:47  41  BAD_INVOICE_ID	     EXCEPTION;
14:34:47  42  BAD_OFFER_DURATION     EXCEPTION;
14:34:47  43  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:47  44  BEGIN
14:34:47  45  
14:34:47  46  	-- TODO:
14:34:47  47  	---- check incoming data: in_current_offer_index, in_current_offer_recurr_num, in_is_extension
14:34:47  48  
14:34:47  49  	out_license_id := NULL;
14:34:47  50  
14:34:47  51  	-- get offer id and offer entitlement duration
14:34:47  52  	BEGIN
14:34:47  53  	  SELECT
14:34:47  54  	    OFFER.ID,
14:34:47  55  	    OFFER.ENTITLEMENT_DURATION
14:34:47  56  	    into
14:34:47  57  	    temp_offer_id,
14:34:47  58  	    var_offer_duration
14:34:47  59  	  FROM
14:34:47  60  	    OFFER
14:34:47  61  	  WHERE
14:34:47  62  	    OFFER.ID = in_offer_id;
14:34:47  63  	  EXCEPTION
14:34:47  64  	  WHEN NO_DATA_FOUND THEN
14:34:47  65  	    RAISE BAD_OFFER_ID;
14:34:47  66  	END;
14:34:47  67  
14:34:47  68  	-- Check that subscription exists
14:34:47  69  	BEGIN
14:34:47  70  	  SELECT
14:34:47  71  	    SUBSCRIPTION.ID into temp_subscription_id
14:34:47  72  	  FROM
14:34:47  73  	    SUBSCRIPTION
14:34:47  74  	  WHERE
14:34:47  75  	    SUBSCRIPTION.ID = in_subscription_id;
14:34:47  76  	  EXCEPTION
14:34:47  77  	  WHEN NO_DATA_FOUND THEN
14:34:47  78  	    RAISE BAD_SUBSCRIPTION_ID;
14:34:47  79  	END;
14:34:47  80  
14:34:47  81  	-- Check that invoice exists
14:34:47  82  	BEGIN
14:34:47  83  	  SELECT
14:34:47  84  	    INVOICE.ID into temp_invoice_id
14:34:47  85  	  FROM
14:34:47  86  	    INVOICE
14:34:47  87  	  WHERE
14:34:47  88  	    INVOICE.ID = in_invoice_id;
14:34:47  89  	  EXCEPTION
14:34:47  90  	  WHEN NO_DATA_FOUND THEN
14:34:47  91  	    RAISE BAD_INVOICE_ID;
14:34:47  92  	END;
14:34:47  93  
14:34:47  94  	-- convert offer duration into intervals
14:34:47  95  	BEGIN
14:34:47  96  	  PROCS_COMMON_V18.ISO8601DURATION_TO_INTERVALS(
14:34:47  97  	    var_offer_duration,
14:34:47  98  	    var_offer_years,
14:34:47  99  	    var_offer_months,
14:34:47 100  	    var_offer_days);
14:34:47 101  	  var_offer_ym_interval := var_offer_years||'-'||var_offer_months;
14:34:47 102  	  var_offer_ds_interval := var_offer_days||' 0:0:0';
14:34:47 103  	  EXCEPTION
14:34:47 104  	    WHEN OTHERS THEN
14:34:47 105  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:47 106  	      RAISE BAD_OFFER_DURATION;
14:34:47 107  	END;
14:34:47 108  
14:34:47 109  	-- insert new row into license table
14:34:47 110  	PROCS_LICENSE_CRU_V18.CREATE_LICENSE(
14:34:47 111  	  out_license_id	      => var_new_license_id,
14:34:47 112  	  in_license_status_id	      => in_status_id,
14:34:47 113  	  in_needs_entitlements       => in_needs_entitlements,
14:34:47 114  	  in_start_date 	      => in_start_date,
14:34:47 115  	  in_offer_id		      => in_offer_id,
14:34:47 116  	  in_subscription_id	      => in_subscription_id,
14:34:47 117  	  in_invoice_id 	      => in_invoice_id,
14:34:47 118  	  in_end_date		      => NVL(in_end_date, in_start_date + var_offer_ym_interval + var_offer_ds_interval),
14:34:47 119  	  in_created_by 	      => in_created_by,
14:34:47 120  	  in_is_extension	      => in_is_extension,
14:34:47 121  	  in_current_offer_index      => in_current_offer_index,
14:34:47 122  	  in_current_offer_recurr_num => in_current_offer_recurr_num
14:34:47 123  	);
14:34:47 124  
14:34:47 125  	out_license_id := var_new_license_id;
14:34:47 126  
14:34:47 127  EXCEPTION
14:34:47 128  WHEN BAD_OFFER_DURATION THEN
14:34:47 129  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 130  	  SPROC_NAME, 'Bad offer duration format', EXCEPTION_MESSAGE);
14:34:47 131  WHEN BAD_OFFER_ID THEN
14:34:47 132  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 133  	  SPROC_NAME, 'No such offer');
14:34:47 134  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 135  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 136  	  SPROC_NAME, 'No such subscription');
14:34:47 137  WHEN BAD_INVOICE_ID THEN
14:34:47 138  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 139  	  SPROC_NAME, 'No such invoice');
14:34:47 140  WHEN OTHERS THEN
14:34:47 141  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 142  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 143  END;
14:34:47 144  
14:34:47 145  /******************************************************************************/
14:34:47 146  
14:34:47 147  PROCEDURE UPDATE_LICENSE_STATUS(
14:34:47 148  	  in_license_id     IN NUMBER,
14:34:47 149  	  in_license_status IN NUMBER,
14:34:47 150  	  in_updated_by     IN VARCHAR2,
14:34:47 151  	  in_ent_end	    IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.FALSE
14:34:47 152  ) AS
14:34:47 153  SPROC_NAME CONSTANT VARCHAR2(21) := 'UPDATE_LICENSE_STATUS';
14:34:47 154  -- VARIABLES
14:34:47 155  temp_license_id NUMBER;
14:34:47 156  -- EXCEPTIONS
14:34:47 157  BAD_LICENSE_ID	     EXCEPTION;
14:34:47 158  BAD_LICENSE_STATUS     EXCEPTION;
14:34:47 159  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:47 160  BEGIN
14:34:47 161  
14:34:47 162  	BEGIN
14:34:47 163  	  SELECT
14:34:47 164  	    ID into temp_license_id
14:34:47 165  	  FROM
14:34:47 166  	    LICENSE
14:34:47 167  	  WHERE
14:34:47 168  	    LICENSE.ID = in_license_id;
14:34:47 169  	  EXCEPTION
14:34:47 170  	    WHEN NO_DATA_FOUND THEN
14:34:47 171  	      RAISE BAD_LICENSE_ID;
14:34:47 172  	END;
14:34:47 173  
14:34:47 174  	IF in_license_status != GLOBAL_STATUSES_V18.LICENSE_CLOSED
14:34:47 175  	   AND in_license_status != GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 176  	   AND in_license_status != GLOBAL_STATUSES_V18.LICENSE_IN_GRACE_PERIOD THEN
14:34:47 177  	  RAISE BAD_LICENSE_STATUS;
14:34:47 178  	END IF;
14:34:47 179  
14:34:47 180  	IF (in_ent_end is not null and in_ent_end = GLOBAL_CONSTANTS_V18.TRUE) then
14:34:47 181  	  PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47 182  	    in_license_id	 => in_license_id,
14:34:47 183  	    in_updated_by	 => in_updated_by,
14:34:47 184  	    in_license_status_id => in_license_status,
14:34:47 185  	    in_entitlement_end_date	 => sysdate
14:34:47 186  	  );
14:34:47 187  	ELSE
14:34:47 188  	  PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47 189  	    in_license_id	 => in_license_id,
14:34:47 190  	    in_updated_by	 => in_updated_by,
14:34:47 191  	    in_license_status_id => in_license_status
14:34:47 192  	  );
14:34:47 193  	END IF;
14:34:47 194  
14:34:47 195  EXCEPTION
14:34:47 196  WHEN BAD_LICENSE_STATUS THEN
14:34:47 197  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 198  	  SPROC_NAME, 'Bad status id');
14:34:47 199  WHEN BAD_LICENSE_ID THEN
14:34:47 200  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 201  	  SPROC_NAME, 'No such license');
14:34:47 202  WHEN OTHERS THEN
14:34:47 203  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 204  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 205  END UPDATE_LICENSE_STATUS;
14:34:47 206  
14:34:47 207  /******************************************************************************/
14:34:47 208  
14:34:47 209  PROCEDURE GET_ENDING_LICENSES (
14:34:47 210  	in_hours_number IN NUMBER,
14:34:47 211  	out_result_set	OUT SYS_REFCURSOR
14:34:47 212  ) AS
14:34:47 213  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDING_LICENSES';
14:34:47 214  -- VARIABLES
14:34:47 215  var_days		NUMBER;
14:34:47 216  var_hours 	NUMBER;
14:34:47 217  var_time_interval INTERVAL DAY (3) TO SECOND;
14:34:47 218  BEGIN
14:34:47 219  
14:34:47 220  	var_hours := mod(in_hours_number,24);
14:34:47 221  	var_days := (in_hours_number - var_hours) / 24;
14:34:47 222  	var_time_interval := var_days||' '||var_hours||':0:0';
14:34:47 223  
14:34:47 224  	OPEN out_result_set FOR
14:34:47 225  SELECT * FROM
14:34:47 226  (
14:34:47 227  	SELECT
14:34:47 228  	  LICENSE.ID,
14:34:47 229  	  LICENSE.CREATE_DATE,
14:34:47 230  	  LICENSE.CREATED_BY,
14:34:47 231  	  LICENSE.CURRENT_OFFER_INDEX,
14:34:47 232  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
14:34:47 233  	  LICENSE.END_DATE,
14:34:47 234  	  LICENSE.ENTITLEMENT_END_DATE,
14:34:47 235  	  LICENSE.INVOICE_ID,
14:34:47 236  	  LICENSE.IS_EXTENSION,
14:34:47 237  	  LICENSE.LICENSE_STATUS_ID,
14:34:47 238  	  LICENSE.OFFER_ID,
14:34:47 239  	  LICENSE.START_DATE,
14:34:47 240  	  LICENSE.SUBSCRIPTION_ID,
14:34:47 241  	  LICENSE.UPDATE_DATE,
14:34:47 242  	  LICENSE.UPDATED_BY
14:34:47 243  	FROM
14:34:47 244  	  LICENSE
14:34:47 245  	WHERE
14:34:47 246  	  TO_DATE(LICENSE.END_DATE) <= (current_timestamp + var_time_interval)
14:34:47 247  	  AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 248  	  AND NOT EXISTS
14:34:47 249  	  (
14:34:47 250  	    SELECT NULL
14:34:47 251  	    FROM PROCESS_RETRY_THROTTLE
14:34:47 252  	    WHERE PROCESS_NAME = SPROC_NAME
14:34:47 253  	      AND GENERIC_ID = LICENSE.ID
14:34:47 254  	  )
14:34:47 255  	  AND ROWNUM <= 10000
14:34:47 256  	  ORDER BY dbms_random.value
14:34:47 257  ) WHERE
14:34:47 258  	  ROWNUM <= 1000
14:34:47 259  	  ;
14:34:47 260  EXCEPTION
14:34:47 261  WHEN OTHERS THEN
14:34:47 262  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 263  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 264  END GET_ENDING_LICENSES;
14:34:47 265  
14:34:47 266  
14:34:47 267  /******************************************************************************/
14:34:47 268  
14:34:47 269  PROCEDURE GET_ENDING_LICENSES_CC (
14:34:47 270  	in_hours_number IN NUMBER,
14:34:47 271  	out_result_set	OUT SYS_REFCURSOR,
14:34:47 272  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
14:34:47 273  ) AS
14:34:47 274  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDING_LICENSES_CC';
14:34:47 275  -- VARIABLES
14:34:47 276  var_days		NUMBER;
14:34:47 277  var_hours 	NUMBER;
14:34:47 278  var_time_interval INTERVAL DAY (3) TO SECOND;
14:34:47 279  BEGIN
14:34:47 280  
14:34:47 281  	var_hours := mod(in_hours_number,24);
14:34:47 282  	var_days := (in_hours_number - var_hours) / 24;
14:34:47 283  	var_time_interval := var_days||' '||var_hours||':0:0';
14:34:47 284  
14:34:47 285  	OPEN out_result_set FOR
14:34:47 286  SELECT * FROM
14:34:47 287  (
14:34:47 288  	SELECT
14:34:47 289  	  LICENSE.ID,
14:34:47 290  	  LICENSE.CREATE_DATE,
14:34:47 291  	  LICENSE.CREATED_BY,
14:34:47 292  	  LICENSE.CURRENT_OFFER_INDEX,
14:34:47 293  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
14:34:47 294  	  LICENSE.END_DATE,
14:34:47 295  	  LICENSE.ENTITLEMENT_END_DATE,
14:34:47 296  	  LICENSE.INVOICE_ID,
14:34:47 297  	  LICENSE.IS_EXTENSION,
14:34:47 298  	  LICENSE.LICENSE_STATUS_ID,
14:34:47 299  	  LICENSE.OFFER_ID,
14:34:47 300  	  LICENSE.START_DATE,
14:34:47 301  	  LICENSE.SUBSCRIPTION_ID,
14:34:47 302  	  LICENSE.UPDATE_DATE,
14:34:47 303  	  LICENSE.UPDATED_BY
14:34:47 304  	FROM
14:34:47 305  	  LICENSE
14:34:47 306  	WHERE
14:34:47 307  	  TO_DATE(LICENSE.END_DATE) <= (current_timestamp + var_time_interval)
14:34:47 308  	  AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 309  	  AND NOT EXISTS
14:34:47 310  	  (
14:34:47 311  	    SELECT NULL
14:34:47 312  	    FROM PROCESS_RETRY_THROTTLE
14:34:47 313  	    WHERE PROCESS_NAME = in_process_name
14:34:47 314  	      AND GENERIC_ID = LICENSE.INVOICE_ID
14:34:47 315  	  )
14:34:47 316  	  AND ROWNUM <= 10000
14:34:47 317  	  ORDER BY dbms_random.value
14:34:47 318  ) WHERE
14:34:47 319  	  ROWNUM <= 1000
14:34:47 320  	  ;
14:34:47 321  EXCEPTION
14:34:47 322  WHEN OTHERS THEN
14:34:47 323  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 324  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 325  END GET_ENDING_LICENSES_CC;
14:34:47 326  
14:34:47 327  /******************************************************************************/
14:34:47 328  
14:34:47 329  PROCEDURE GET_RECURRING_OFFER (
14:34:47 330  	in_license_id  IN NUMBER,
14:34:47 331  	out_result_set OUT SYS_REFCURSOR
14:34:47 332  ) AS
14:34:47 333  -- VARIABLES
14:34:47 334  SPROC_NAME		    CONSTANT VARCHAR2(19) := 'GET_RECURRING_OFFER';
14:34:47 335  var_offer_chain_id	    NUMBER;
14:34:47 336  var_offer_id		    NUMBER;
14:34:47 337  var_offer_num_recurrences     NUMBER;
14:34:47 338  var_license_cur_offer_rec_num NUMBER;
14:34:47 339  var_offer_index		    NUMBER;
14:34:47 340  -- EXCEPTIONS
14:34:47 341  BAD_LICENSE_ID	     EXCEPTION;
14:34:47 342  CAN_NOT_GET_OFFER_INFO EXCEPTION;
14:34:47 343  BEGIN
14:34:47 344  
14:34:47 345  	BEGIN
14:34:47 346  	  SELECT
14:34:47 347  	    SUBSCRIPTION.OFFER_CHAIN_ID,
14:34:47 348  	    LICENSE.OFFER_ID,
14:34:47 349  	    LICENSE.CURRENT_OFFER_RECURR_NUM
14:34:47 350  	    into
14:34:47 351  	    var_offer_chain_id,
14:34:47 352  	    var_offer_id,
14:34:47 353  	    var_license_cur_offer_rec_num
14:34:47 354  	  FROM
14:34:47 355  	    LICENSE
14:34:47 356  	    INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:47 357  	  WHERE
14:34:47 358  	    LICENSE.ID = in_license_id;
14:34:47 359  	  EXCEPTION
14:34:47 360  	    WHEN NO_DATA_FOUND THEN
14:34:47 361  	      RAISE BAD_LICENSE_ID;
14:34:47 362  	END;
14:34:47 363  
14:34:47 364  	BEGIN
14:34:47 365  	  SELECT
14:34:47 366  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES,
14:34:47 367  	    OFFER_OFFER_CHAIN.INDEX_VALUE
14:34:47 368  	    into
14:34:47 369  	    var_offer_num_recurrences,
14:34:47 370  	    var_offer_index
14:34:47 371  	  FROM
14:34:47 372  	    OFFER_OFFER_CHAIN
14:34:47 373  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
14:34:47 374  	  WHERE
14:34:47 375  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
14:34:47 376  	    AND OFFER_OFFER_CHAIN.OFFER_ID = var_offer_id;
14:34:47 377  	  EXCEPTION
14:34:47 378  	    WHEN NO_DATA_FOUND THEN
14:34:47 379  	      RAISE CAN_NOT_GET_OFFER_INFO;
14:34:47 380  	END;
14:34:47 381  
14:34:47 382  	IF var_offer_num_recurrences = 0 THEN
14:34:47 383  	  --out_result_set := NULL;
14:34:47 384  	  -- TODO: Remove this hardcode
14:34:47 385  	  OPEN out_result_set FOR
14:34:47 386  	  SELECT
14:34:47 387  	    OFFER.ID,
14:34:47 388  	    OFFER.OFFER_STATUS_ID,
14:34:47 389  	    OFFER.ENTITLEMENT_DURATION,
14:34:47 390  	    OFFER.CREATED_BY,
14:34:47 391  	    OFFER.CREATE_DATE,
14:34:47 392  	    OFFER.UPDATED_BY,
14:34:47 393  	    OFFER.UPDATE_DATE,
14:34:47 394  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
14:34:47 395  	    var_offer_index as "OFFER_INDEX"
14:34:47 396  	  FROM
14:34:47 397  	    OFFER_OFFER_CHAIN
14:34:47 398  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
14:34:47 399  	  WHERE ROWNUM = 0;
14:34:47 400  	ELSIF var_license_cur_offer_rec_num = var_offer_num_recurrences THEN
14:34:47 401  	  --out_result_set := NULL;
14:34:47 402  	  -- TODO: Remove this hardcode
14:34:47 403  	  OPEN out_result_set FOR
14:34:47 404  	  SELECT
14:34:47 405  	    OFFER.ID,
14:34:47 406  	    OFFER.OFFER_STATUS_ID,
14:34:47 407  	    OFFER.ENTITLEMENT_DURATION,
14:34:47 408  	    OFFER.CREATED_BY,
14:34:47 409  	    OFFER.CREATE_DATE,
14:34:47 410  	    OFFER.UPDATED_BY,
14:34:47 411  	    OFFER.UPDATE_DATE,
14:34:47 412  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
14:34:47 413  	    var_offer_index as "OFFER_INDEX"
14:34:47 414  	  FROM
14:34:47 415  	    OFFER_OFFER_CHAIN
14:34:47 416  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
14:34:47 417  	  WHERE ROWNUM = 0;
14:34:47 418  	ELSE
14:34:47 419  	  OPEN out_result_set FOR
14:34:47 420  	  SELECT
14:34:47 421  	    OFFER.ID,
14:34:47 422  	    OFFER.OFFER_STATUS_ID,
14:34:47 423  	    OFFER.ENTITLEMENT_DURATION,
14:34:47 424  	    OFFER.CREATED_BY,
14:34:47 425  	    OFFER.CREATE_DATE,
14:34:47 426  	    OFFER.UPDATED_BY,
14:34:47 427  	    OFFER.UPDATE_DATE,
14:34:47 428  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
14:34:47 429  	    var_offer_index as "OFFER_INDEX"
14:34:47 430  	  FROM
14:34:47 431  	    OFFER
14:34:47 432  	  WHERE
14:34:47 433  	    OFFER.ID = var_offer_id;
14:34:47 434  	END IF;
14:34:47 435  
14:34:47 436  EXCEPTION
14:34:47 437  WHEN BAD_LICENSE_ID THEN
14:34:47 438  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 439  	  SPROC_NAME, 'No such license');
14:34:47 440  WHEN CAN_NOT_GET_OFFER_INFO THEN
14:34:47 441  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 442  	  SPROC_NAME, 'Could not get offer information. Offer id = '||var_offer_id||', Offer chain id = '||var_offer_chain_id);
14:34:47 443  WHEN OTHERS THEN
14:34:47 444  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 445  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 446  END GET_RECURRING_OFFER;
14:34:47 447  
14:34:47 448  /******************************************************************************/
14:34:47 449  
14:34:47 450  PROCEDURE GET_NEXT_OFFER (
14:34:47 451  /*
14:34:47 452  Throws exceptions:
14:34:47 453  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 454  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 455  */
14:34:47 456  	in_license_id  IN NUMBER,
14:34:47 457  	out_result_set OUT SYS_REFCURSOR
14:34:47 458  ) AS
14:34:47 459  -- VARIABLES
14:34:47 460  SPROC_NAME		CONSTANT VARCHAR2(14) := 'GET_NEXT_OFFER';
14:34:47 461  var_offer_chain_id	NUMBER;
14:34:47 462  var_offer_id		NUMBER;
14:34:47 463  var_license_current_index NUMBER;
14:34:47 464  var_next_offer_index	NUMBER;
14:34:47 465  -- EXCEPTIONS
14:34:47 466  BAD_LICENSE_ID	      EXCEPTION;
14:34:47 467  CAN_NOT_FIND_NEXT_OFFER EXCEPTION;
14:34:47 468  EXCEPTION_MESSAGE       VARCHAR2(1024);
14:34:47 469  BEGIN
14:34:47 470  
14:34:47 471  	BEGIN
14:34:47 472  	  SELECT
14:34:47 473  	    SUBSCRIPTION.OFFER_CHAIN_ID,
14:34:47 474  	    LICENSE.OFFER_ID,
14:34:47 475  	    LICENSE.CURRENT_OFFER_INDEX
14:34:47 476  	    into
14:34:47 477  	    var_offer_chain_id,
14:34:47 478  	    var_offer_id,
14:34:47 479  	    var_license_current_index
14:34:47 480  	  FROM
14:34:47 481  	    LICENSE
14:34:47 482  	    INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:47 483  	  WHERE
14:34:47 484  	    LICENSE.ID = in_license_id;
14:34:47 485  	  EXCEPTION
14:34:47 486  	    WHEN NO_DATA_FOUND THEN
14:34:47 487  	      RAISE BAD_LICENSE_ID;
14:34:47 488  	END;
14:34:47 489  
14:34:47 490  	BEGIN
14:34:47 491  	  var_next_offer_index := PROCS_OFFER_CHAIN_V18.GET_NEXT_OFFER_INDEX(
14:34:47 492  	    var_offer_chain_id,
14:34:47 493  	    var_license_current_index
14:34:47 494  	  );
14:34:47 495  	  EXCEPTION
14:34:47 496  	    WHEN OTHERS THEN
14:34:47 497  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:47 498  	      RAISE CAN_NOT_FIND_NEXT_OFFER;
14:34:47 499  	END;
14:34:47 500  
14:34:47 501  	IF var_next_offer_index IS NULL THEN
14:34:47 502  	  -- RETURN NULL;
14:34:47 503  	  -- TODO: Remove this hardcode
14:34:47 504  	  OPEN out_result_set FOR
14:34:47 505  	  SELECT
14:34:47 506  	    OFFER.ID,
14:34:47 507  	    OFFER.OFFER_STATUS_ID,
14:34:47 508  	    OFFER.ENTITLEMENT_DURATION,
14:34:47 509  	    OFFER.CREATED_BY,
14:34:47 510  	    OFFER.CREATE_DATE,
14:34:47 511  	    OFFER.UPDATED_BY,
14:34:47 512  	    OFFER.UPDATE_DATE,
14:34:47 513  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES as "RECURRENCE_NUMBER"
14:34:47 514  	  FROM
14:34:47 515  	    OFFER_OFFER_CHAIN
14:34:47 516  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
14:34:47 517  	  WHERE
14:34:47 518  	    1=2;
14:34:47 519  	ELSE
14:34:47 520  	  OPEN out_result_set FOR
14:34:47 521  	  SELECT
14:34:47 522  	    OFFER.ID,
14:34:47 523  	    OFFER.OFFER_STATUS_ID,
14:34:47 524  	    OFFER.ENTITLEMENT_DURATION,
14:34:47 525  	    OFFER.CREATED_BY,
14:34:47 526  	    OFFER.CREATE_DATE,
14:34:47 527  	    OFFER.UPDATED_BY,
14:34:47 528  	    OFFER.UPDATE_DATE,
14:34:47 529  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES as "RECURRENCE_NUMBER"
14:34:47 530  	  FROM
14:34:47 531  	    OFFER_OFFER_CHAIN
14:34:47 532  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
14:34:47 533  	  WHERE
14:34:47 534  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
14:34:47 535  	    AND OFFER_OFFER_CHAIN.INDEX_VALUE = var_next_offer_index;
14:34:47 536  	END IF;
14:34:47 537  
14:34:47 538  EXCEPTION
14:34:47 539  WHEN BAD_LICENSE_ID THEN
14:34:47 540  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 541  	  SPROC_NAME, 'No such license');
14:34:47 542  WHEN CAN_NOT_FIND_NEXT_OFFER THEN
14:34:47 543  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 544  	  SPROC_NAME, 'Could not find next offer', EXCEPTION_MESSAGE);
14:34:47 545  WHEN OTHERS THEN
14:34:47 546  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 547  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 548  END GET_NEXT_OFFER;
14:34:47 549  
14:34:47 550  /******************************************************************************/
14:34:47 551  
14:34:47 552  PROCEDURE GET_GROUP_ID_BY_LICENSE_ID (
14:34:47 553  	in_license_id IN NUMBER,
14:34:47 554  	out_group_id  OUT NUMBER
14:34:47 555  ) AS
14:34:47 556  -- VARIABLES
14:34:47 557  SPROC_NAME	  CONSTANT VARCHAR2(26) := 'GET_GROUP_ID_BY_LICENSE_ID';
14:34:47 558  var_subscription_id NUMBER;
14:34:47 559  var_group_id	  NUMBER;
14:34:47 560  -- EXCEPTIONS
14:34:47 561  BAD_LICENSE_ID	   EXCEPTION;
14:34:47 562  CAN_NOT_GET_GROUP_ID EXCEPTION;
14:34:47 563  BEGIN
14:34:47 564  
14:34:47 565  	-- Get subscription id
14:34:47 566  	BEGIN
14:34:47 567  	  SELECT
14:34:47 568  	    LICENSE.SUBSCRIPTION_ID into var_subscription_id
14:34:47 569  	  FROM
14:34:47 570  	    LICENSE
14:34:47 571  	  WHERE
14:34:47 572  	    LICENSE.ID = in_license_id;
14:34:47 573  	  EXCEPTION
14:34:47 574  	    WHEN NO_DATA_FOUND THEN
14:34:47 575  	      RAISE BAD_LICENSE_ID;
14:34:47 576  	END;
14:34:47 577  
14:34:47 578  	-- Get group id
14:34:47 579  	BEGIN
14:34:47 580  	  SELECT
14:34:47 581  	    ACCOUNT.GROUP_ID into var_group_id
14:34:47 582  	  FROM
14:34:47 583  	    SUBSCRIPTION
14:34:47 584  	    INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
14:34:47 585  	  WHERE
14:34:47 586  	    SUBSCRIPTION.ID = var_subscription_id;
14:34:47 587  	  EXCEPTION
14:34:47 588  	    WHEN NO_DATA_FOUND THEN
14:34:47 589  	      RAISE CAN_NOT_GET_GROUP_ID;
14:34:47 590  	END;
14:34:47 591  
14:34:47 592  	out_group_id := var_group_id;
14:34:47 593  
14:34:47 594  EXCEPTION
14:34:47 595  WHEN BAD_LICENSE_ID THEN
14:34:47 596  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 597  	  SPROC_NAME, 'No such license');
14:34:47 598  WHEN CAN_NOT_GET_GROUP_ID THEN
14:34:47 599  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 600  	  SPROC_NAME, 'Could not get group id');
14:34:47 601  WHEN OTHERS THEN
14:34:47 602  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 603  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 604  END GET_GROUP_ID_BY_LICENSE_ID;
14:34:47 605  
14:34:47 606  /******************************************************************************/
14:34:47 607  
14:34:47 608  PROCEDURE GET_NEED_ENTITLEMENTS_LICENSES (
14:34:47 609  	out_result_set OUT SYS_REFCURSOR
14:34:47 610  ) AS
14:34:47 611  BEGIN
14:34:47 612  	OPEN out_result_set FOR
14:34:47 613  SELECT * FROM
14:34:47 614  (
14:34:47 615  	SELECT
14:34:47 616  	  LICENSE.ID,
14:34:47 617  	  LICENSE.INVOICE_ID,
14:34:47 618  	  LICENSE.IS_EXTENSION,
14:34:47 619  	  LICENSE.START_DATE,
14:34:47 620  	  LICENSE.END_DATE,
14:34:47 621  	  LICENSE.ENTITLEMENT_END_DATE,
14:34:47 622  	  LICENSE.CURRENT_OFFER_INDEX,
14:34:47 623  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
14:34:47 624  	  LICENSE.CREATE_DATE,
14:34:47 625  	  LICENSE.CREATED_BY,
14:34:47 626  	  LICENSE.LICENSE_STATUS_ID,
14:34:47 627  	  LICENSE.OFFER_ID,
14:34:47 628  	  LICENSE.SUBSCRIPTION_ID,
14:34:47 629  	  LICENSE.UPDATE_DATE,
14:34:47 630  	  LICENSE.UPDATED_BY,
14:34:47 631  	  LICENSE.NEEDS_ENTITLEMENTS
14:34:47 632  	FROM
14:34:47 633  	  LICENSE
14:34:47 634  	WHERE
14:34:47 635  	  LICENSE.NEEDS_ENTITLEMENTS = GLOBAL_CONSTANTS_V18.TRUE
14:34:47 636  	AND ROWNUM <= 5000
14:34:47 637  	ORDER BY dbms_random.value
14:34:47 638  ) WHERE
14:34:47 639  	ROWNUM <= 500;
14:34:47 640  
14:34:47 641  END GET_NEED_ENTITLEMENTS_LICENSES;
14:34:47 642  
14:34:47 643  /******************************************************************************/
14:34:47 644  
14:34:47 645  PROCEDURE UPDATE_NEED_ENTITLEMENTS_FLAG (
14:34:47 646  	in_license_id	      IN NUMBER,
14:34:47 647  	in_needs_entitlements IN NUMBER,
14:34:47 648  	in_updated_by	      IN VARCHAR2
14:34:47 649  ) AS
14:34:47 650  SPROC_NAME CONSTANT VARCHAR2(29) := 'UPDATE_NEED_ENTITLEMENTS_FLAG';
14:34:47 651  -- VARIABLES
14:34:47 652  temp_license_id NUMBER;
14:34:47 653  -- EXCEPTIONS
14:34:47 654  BAD_LICENSE_ID	     EXCEPTION;
14:34:47 655  BAD_ENTITLEMENTS_FLAG  EXCEPTION;
14:34:47 656  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:47 657  BEGIN
14:34:47 658  
14:34:47 659  	IF in_needs_entitlements != GLOBAL_CONSTANTS_V18.TRUE
14:34:47 660  	  AND in_needs_entitlements != GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:47 661  	  RAISE BAD_ENTITLEMENTS_FLAG;
14:34:47 662  	END IF;
14:34:47 663  
14:34:47 664  	BEGIN
14:34:47 665  	  SELECT
14:34:47 666  	    LICENSE.ID into temp_license_id
14:34:47 667  	  FROM
14:34:47 668  	    LICENSE
14:34:47 669  	  WHERE
14:34:47 670  	    LICENSE.ID = in_license_id;
14:34:47 671  	  EXCEPTION
14:34:47 672  	    WHEN NO_DATA_FOUND THEN
14:34:47 673  	      RAISE BAD_LICENSE_ID;
14:34:47 674  	END;
14:34:47 675  
14:34:47 676  	PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47 677  	  in_license_id 	=> in_license_id,
14:34:47 678  	  in_needs_entitlements => in_needs_entitlements,
14:34:47 679  	  in_updated_by 	=> in_updated_by
14:34:47 680  	);
14:34:47 681  
14:34:47 682  EXCEPTION
14:34:47 683  WHEN BAD_ENTITLEMENTS_FLAG THEN
14:34:47 684  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 685  	  SPROC_NAME, 'Bad entitlements flag value');
14:34:47 686  WHEN BAD_LICENSE_ID THEN
14:34:47 687  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 688  	  SPROC_NAME, 'No such license');
14:34:47 689  WHEN OTHERS THEN
14:34:47 690  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 691  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 692  END UPDATE_NEED_ENTITLEMENTS_FLAG;
14:34:47 693  
14:34:47 694  
14:34:47 695  /******************************************************************************/
14:34:47 696  
14:34:47 697  PROCEDURE GET_ENDED_GC_LICENSES (
14:34:47 698  	out_result_set		OUT SYS_REFCURSOR,
14:34:47 699  	in_hours_number 	IN NUMBER DEFAULT 14*24,
14:34:47 700  	in_num_rows		IN NUMBER DEFAULT 10000,
14:34:47 701  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
14:34:47 702  ) AS
14:34:47 703  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDED_GC_INVOICES';
14:34:47 704  var_days		NUMBER;
14:34:47 705  var_hours 	NUMBER;
14:34:47 706  var_time_interval INTERVAL DAY (3) TO SECOND;
14:34:47 707  BEGIN
14:34:47 708  	var_hours := mod(in_hours_number,24);
14:34:47 709  	var_days := (in_hours_number - var_hours) / 24;
14:34:47 710  	var_time_interval := var_days||' '||var_hours||':0:0';
14:34:47 711  	OPEN out_result_set FOR
14:34:47 712  SELECT * FROM
14:34:47 713  (
14:34:47 714  	SELECT
14:34:47 715  	  l.ID,
14:34:47 716  	  l.CREATE_DATE,
14:34:47 717  	  l.CREATED_BY,
14:34:47 718  	  l.CURRENT_OFFER_INDEX,
14:34:47 719  	  l.CURRENT_OFFER_RECURR_NUM,
14:34:47 720  	  l.END_DATE,
14:34:47 721  	  l.ENTITLEMENT_END_DATE,
14:34:47 722  	  l.INVOICE_ID,
14:34:47 723  	  l.IS_EXTENSION,
14:34:47 724  	  l.LICENSE_STATUS_ID,
14:34:47 725  	  l.OFFER_ID,
14:34:47 726  	  l.START_DATE,
14:34:47 727  	  l.SUBSCRIPTION_ID,
14:34:47 728  	  l.UPDATE_DATE,
14:34:47 729  	  l.UPDATED_BY
14:34:47 730  	FROM
14:34:47 731  	  GIFT_CERTIFICATE gc
14:34:47 732  	  INNER JOIN INVOICE i ON i.id = gc.PURCHASE_INVOICE_ID
14:34:47 733  	  INNER JOIN LICENSE l ON l.invoice_id = i.id
14:34:47 734  	  LEFT JOIN SUBSCRIPTION s ON s.id = l.subscription_id
14:34:47 735  	WHERE
14:34:47 736  	  l.LICENSE_STATUS_ID != GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 737  	  AND l.ENTITLEMENT_END_DATE <= (current_timestamp)
14:34:47 738  	  AND l.ENTITLEMENT_END_DATE > (current_timestamp - var_time_interval)
14:34:47 739  	  AND s.subscription_status_id = GLOBAL_STATUSES_V18.SUBSCRIPTION_CLOSED
14:34:47 740  	  AND NOT EXISTS (
14:34:47 741  	    SELECT NULL
14:34:47 742  	    FROM PROCESS_RETRY_THROTTLE
14:34:47 743  	    WHERE PROCESS_NAME = in_process_name
14:34:47 744  	      AND GENERIC_ID = l.ID
14:34:47 745  	  )
14:34:47 746  	  AND ROWNUM <= in_num_rows*10
14:34:47 747  	  ORDER BY dbms_random.value
14:34:47 748  ) WHERE
14:34:47 749  	  ROWNUM <= in_num_rows
14:34:47 750  	  GROUP BY SUBSCRIPTION_ID;
14:34:47 751  EXCEPTION
14:34:47 752  WHEN OTHERS THEN
14:34:47 753  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 754  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 755  END GET_ENDED_GC_LICENSES;
14:34:47 756  
14:34:47 757  PROCEDURE GET_LICENSE_BY_ID (
14:34:47 758  	in_license_id  IN NUMBER,
14:34:47 759  	out_result_set OUT SYS_REFCURSOR
14:34:47 760  ) AS
14:34:47 761  SPROC_NAME CONSTANT VARCHAR2(17) := 'GET_LICENSE_BY_ID';
14:34:47 762  -- VARIABLES
14:34:47 763  temp_license_id NUMBER;
14:34:47 764  -- EXCEPTIONS
14:34:47 765  BAD_LICENSE_ID EXCEPTION;
14:34:47 766  BEGIN
14:34:47 767  
14:34:47 768  	BEGIN
14:34:47 769  	  SELECT
14:34:47 770  	    l.id into temp_license_id
14:34:47 771  	  FROM
14:34:47 772  	    license l
14:34:47 773  	  WHERE
14:34:47 774  	    l.id = in_license_id;
14:34:47 775  	  EXCEPTION
14:34:47 776  	    WHEN NO_DATA_FOUND THEN
14:34:47 777  	      RAISE BAD_LICENSE_ID;
14:34:47 778  	END;
14:34:47 779  
14:34:47 780  	OPEN out_result_set FOR
14:34:47 781  	SELECT
14:34:47 782  	  l.id,
14:34:47 783  	  l.license_status_id,
14:34:47 784  	  l.subscription_id,
14:34:47 785  	  l.invoice_id,
14:34:47 786  	  l.offer_id,
14:34:47 787  	  l.start_date,
14:34:47 788  	  l.end_date,
14:34:47 789  	  l.entitlement_end_date,
14:34:47 790  	  l.is_extension,
14:34:47 791  	  l.create_date,
14:34:47 792  	  l.created_by,
14:34:47 793  	  l.update_date,
14:34:47 794  	  l.updated_by,
14:34:47 795  	  l.current_offer_index,
14:34:47 796  	  l.current_offer_recurr_num,
14:34:47 797  	  l.needs_entitlements
14:34:47 798  	FROM
14:34:47 799  	  LICENSE l
14:34:47 800  	WHERE
14:34:47 801  	  l.id = in_license_id;
14:34:47 802  
14:34:47 803  EXCEPTION
14:34:47 804  WHEN BAD_LICENSE_ID THEN
14:34:47 805  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 806  	  SPROC_NAME, 'No such license');
14:34:47 807  WHEN OTHERS THEN
14:34:47 808  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 809  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 810  END GET_LICENSE_BY_ID;
14:34:47 811  
14:34:47 812  PROCEDURE UP_LATEST_LICE_END_BY_SUBID (
14:34:47 813  	in_subscription_id IN NUMBER,
14:34:47 814  	in_end_date IN DATE,
14:34:47 815  	in_updated_by IN VARCHAR2
14:34:47 816  ) AS
14:34:47 817  SPROC_NAME CONSTANT VARCHAR2(32) := 'UP_LATEST_LICE_END_BY_SUBID';
14:34:47 818  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:47 819  var_latest_lice NUMBER;
14:34:47 820  BEGIN
14:34:47 821  	SELECT max(id)
14:34:47 822  	INTO  var_latest_lice
14:34:47 823  	FROM LICENSE
14:34:47 824  	WHERE
14:34:47 825  	  subscription_id = in_subscription_id
14:34:47 826  	;
14:34:47 827  
14:34:47 828  	PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47 829  	  in_license_id        => var_latest_lice,
14:34:47 830  	  in_updated_by        => in_updated_by,
14:34:47 831  	  in_needs_entitlements => GLOBAL_CONSTANTS_V18.TRUE,
14:34:47 832  	  in_end_date	       => in_end_date,
14:34:47 833  	  in_entitlement_end_date => in_end_date
14:34:47 834  	);
14:34:47 835  
14:34:47 836  EXCEPTION
14:34:47 837  WHEN NO_DATA_FOUND THEN
14:34:47 838  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 839  	  SPROC_NAME, 'No licenses from subscription', SQLERRM);
14:34:47 840  WHEN OTHERS THEN
14:34:47 841  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 842  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 843  END UP_LATEST_LICE_END_BY_SUBID;
14:34:47 844  
14:34:47 845  PROCEDURE GET_GRACE_LICE_FOR_FINAL_TRANS (
14:34:47 846  	in_days_before_close	 IN NUMBER,
14:34:47 847  	in_num_licenses_to_fetch IN NUMBER,
14:34:47 848  	out_result_set		 OUT SYS_REFCURSOR
14:34:47 849  ) AS
14:34:47 850  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRACE_LICE_FOR_FINAL_TRANS';
14:34:47 851  BEGIN
14:34:47 852  	OPEN out_result_set FOR
14:34:47 853  	SELECT
14:34:47 854  	    *
14:34:47 855  	FROM
14:34:47 856  	    (
14:34:47 857  		SELECT
14:34:47 858  		    l.id
14:34:47 859  		FROM
14:34:47 860  		    license l
14:34:47 861  		JOIN
14:34:47 862  		    invoice i
14:34:47 863  		ON
14:34:47 864  		    l.invoice_id = i.id
14:34:47 865  		WHERE
14:34:47 866  		    i.invoice_status_id = GLOBAL_STATUSES_V18.INVOICE_OPEN
14:34:47 867  		AND l.license_status_id = GLOBAL_STATUSES_V18.LICENSE_IN_GRACE_PERIOD
14:34:47 868  		AND SYSDATE + in_days_before_close >= l.grace_end_date
14:34:47 869  		AND NOT EXISTS
14:34:47 870  		    (
14:34:47 871  			SELECT
14:34:47 872  			    1
14:34:47 873  			FROM
14:34:47 874  			    charge c
14:34:47 875  			WHERE
14:34:47 876  			    c.invoice_id = i.id
14:34:47 877  			AND c.charge_status_id = GLOBAL_STATUSES_V18.CHARGE_OPENED)
14:34:47 878  		AND rownum <= in_num_licenses_to_fetch * 10
14:34:47 879  		ORDER BY
14:34:47 880  		    dbms_random.value)
14:34:47 881  	WHERE
14:34:47 882  	    rownum <= in_num_licenses_to_fetch;
14:34:47 883  END GET_GRACE_LICE_FOR_FINAL_TRANS;
14:34:47 884  
14:34:47 885  END PROCS_LICENSE_V18;
14:34:47 886  .
14:34:47 SQL> /

Package body created.

Elapsed: 00:00:00.12
14:34:47 SQL> 
14:34:47 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_CHARGE_V18" AS
14:34:47   2  
14:34:47   3  PROCEDURE CREATE_CHARGE(
14:34:47   4  /*
14:34:47   5  Throws exceptions:
14:34:47   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47   8  */
14:34:47   9  	in_invoice_id	      IN NUMBER,
14:34:47  10  	in_transaction_id     IN NUMBER,
14:34:47  11  	in_instrument_type_id IN NUMBER,
14:34:47  12  	in_instrument_id      IN NUMBER,
14:34:47  13  	in_charge_amount      IN NUMBER,
14:34:47  14  	in_created_by	      IN VARCHAR2,
14:34:47  15  	in_charge_status_id   IN NUMBER,
14:34:47  16  	out_charge_id	      OUT NUMBER
14:34:47  17  ) AS
14:34:47  18  PROCS_NAME	  CONSTANT VARCHAR2(13) := 'CREATE_CHARGE';
14:34:47  19  -- VARIABLES
14:34:47  20  temp_invoice_id	  NUMBER;
14:34:47  21  temp_transaction_id NUMBER;
14:34:47  22  var_new_charge_id   NUMBER;
14:34:47  23  -- EXCEPTIONS
14:34:47  24  BAD_INVOICE_ID	     EXCEPTION;
14:34:47  25  BAD_TRANSACTION_ID     EXCEPTION;
14:34:47  26  BAD_PAYPAL_ID	     EXCEPTION;
14:34:47  27  BAD_CREDIT_CARD_ID     EXCEPTION;
14:34:47  28  BAD_INSTRUMENT_TYPE    EXCEPTION;
14:34:47  29  BAD_CHARGE_STATUS_ID   EXCEPTION;
14:34:47  30  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:47  31  BEGIN
14:34:47  32  	-- Check that incoming data is correct
14:34:47  33  	IF in_instrument_type_id != GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD
14:34:47  34  	  AND in_instrument_type_id != GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL THEN
14:34:47  35  	  RAISE BAD_INSTRUMENT_TYPE;
14:34:47  36  	END IF;
14:34:47  37  
14:34:47  38  	-- Check that status is correct
14:34:47  39  	IF in_charge_status_id != GLOBAL_STATUSES_V18.CHARGE_OPENED
14:34:47  40  	  AND in_charge_status_id != GLOBAL_STATUSES_V18.CHARGE_PROCESSED
14:34:47  41  	  AND in_charge_status_id != GLOBAL_STATUSES_V18.CHARGE_CANCELED THEN
14:34:47  42  	  RAISE BAD_CHARGE_STATUS_ID;
14:34:47  43  	END IF;
14:34:47  44  
14:34:47  45  	-- Check that invoice exists
14:34:47  46  	BEGIN
14:34:47  47  	  SELECT
14:34:47  48  	    INVOICE.ID into temp_invoice_id
14:34:47  49  	  FROM
14:34:47  50  	    INVOICE
14:34:47  51  	  WHERE
14:34:47  52  	    INVOICE.ID = in_invoice_id;
14:34:47  53  	  EXCEPTION
14:34:47  54  	    WHEN NO_DATA_FOUND THEN
14:34:47  55  	      RAISE BAD_INVOICE_ID;
14:34:47  56  	END;
14:34:47  57  
14:34:47  58  	-- Check that transaction exists
14:34:47  59  	BEGIN
14:34:47  60  	  SELECT
14:34:47  61  	    TRANSACTION.ID into temp_transaction_id
14:34:47  62  	  FROM
14:34:47  63  	    TRANSACTION
14:34:47  64  	  WHERE
14:34:47  65  	    TRANSACTION.ID = in_transaction_id;
14:34:47  66  	  EXCEPTION
14:34:47  67  	    WHEN NO_DATA_FOUND THEN
14:34:47  68  	      RAISE BAD_TRANSACTION_ID;
14:34:47  69  	END;
14:34:47  70  
14:34:47  71  	-- Check that instrument exists
14:34:47  72  	IF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD THEN
14:34:47  73  	  IF PROCS_FIN_INSTRUMENTS_V18.IS_CREDIT_CARD_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:47  74  	    RAISE BAD_CREDIT_CARD_ID;
14:34:47  75  	  END IF;
14:34:47  76  	ELSIF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL THEN
14:34:47  77  	  IF PROCS_FIN_INSTRUMENTS_V18.IS_PAYPAL_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:47  78  	    RAISE BAD_PAYPAL_ID;
14:34:47  79  	  END IF;
14:34:47  80  	END IF;
14:34:47  81  
14:34:47  82  	-- Create new charge
14:34:47  83  	PROCS_CHARGE_CRU_V18.CREATE_CHARGE(
14:34:47  84  	  out_charge_id 	=> var_new_charge_id,
14:34:47  85  	  in_invoice_id 	=> in_invoice_id,
14:34:47  86  	  in_transaction_id	=> in_transaction_id,
14:34:47  87  	  in_instrument_type_id => in_instrument_type_id,
14:34:47  88  	  in_instrument_id	=> in_instrument_id,
14:34:47  89  	  in_charge_amount	=> in_charge_amount,
14:34:47  90  	  in_charge_status_id	=> in_charge_status_id,
14:34:47  91  	  in_created_by 	=> in_created_by
14:34:47  92  	);
14:34:47  93  
14:34:47  94  	out_charge_id := var_new_charge_id;
14:34:47  95  
14:34:47  96  EXCEPTION
14:34:47  97  WHEN BAD_CHARGE_STATUS_ID THEN
14:34:47  98  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47  99  	  PROCS_NAME, 'Bad charge status: '||in_charge_status_id);
14:34:47 100  WHEN BAD_INSTRUMENT_TYPE THEN
14:34:47 101  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 102  	  PROCS_NAME, 'Bad instrument type id');
14:34:47 103  WHEN BAD_INVOICE_ID THEN
14:34:47 104  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 105  	  PROCS_NAME, 'No such invoice');
14:34:47 106  WHEN BAD_TRANSACTION_ID THEN
14:34:47 107  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 108  	  PROCS_NAME, 'No such transaction');
14:34:47 109  WHEN BAD_PAYPAL_ID THEN
14:34:47 110  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 111  	  PROCS_NAME, 'No such paypal');
14:34:47 112  WHEN BAD_CREDIT_CARD_ID THEN
14:34:47 113  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 114  	  PROCS_NAME, 'No such credit card');
14:34:47 115  WHEN OTHERS THEN
14:34:47 116  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 117  	  PROCS_NAME, 'Unknown error', SQLERRM);
14:34:47 118  END CREATE_CHARGE;
14:34:47 119  
14:34:47 120  /********************************************************/
14:34:47 121  -- norlov #38562 :
14:34:47 122  PROCEDURE GET_PENDING_REFUND_CHARGES (
14:34:47 123  /*
14:34:47 124  Throws exceptions:
14:34:47 125  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 126  */
14:34:47 127  	out_result_set	    OUT SYS_REFCURSOR,
14:34:47 128  	in_row_number	    IN NUMBER DEFAULT NULL
14:34:47 129  ) AS
14:34:47 130  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_PENDING_REFUND_CHARGES';
14:34:47 131  -- COMSTANTS
14:34:47 132  DEFAULT_ROW_NUMBER CONSTANT NUMBER := 1;
14:34:47 133  -- VARIABLES
14:34:47 134  var_row_number NUMBER;
14:34:47 135  BEGIN
14:34:47 136  	IF in_row_number IS NULL THEN
14:34:47 137  	  var_row_number := DEFAULT_ROW_NUMBER;
14:34:47 138  	ELSE
14:34:47 139  	  var_row_number := in_row_number;
14:34:47 140  	END IF;
14:34:47 141  
14:34:47 142  	-- Select charges
14:34:47 143  	OPEN out_result_set FOR
14:34:47 144  SELECT * FROM
14:34:47 145  (
14:34:47 146  	SELECT
14:34:47 147  	  CHARGE.ID,
14:34:47 148  	  CHARGE.TRANSACTION_ID,
14:34:47 149  	  CHARGE.INSTRUMENT_ID,
14:34:47 150  	  CHARGE.INSTRUMENT_TYPE_ID,
14:34:47 151  	  CHARGE.CHARGE_AMOUNT,
14:34:47 152  	  CHARGE.CREATE_DATE,
14:34:47 153  	  CHARGE.CREATED_BY,
14:34:47 154  	  CHARGE.INVOICE_ID
14:34:47 155  	FROM
14:34:47 156  	  CHARGE
14:34:47 157  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
14:34:47 158  	WHERE
14:34:47 159  	  TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V18.TRANSACTION_PENDING
14:34:47 160  	  AND TRANSACTION.IS_REFUND = GLOBAL_CONSTANTS_V18.TRUE
14:34:47 161  	  AND TRANSACTION.TRANSACTION_AMOUNT < 0
14:34:47 162  	  AND NOT EXISTS
14:34:47 163  	  (
14:34:47 164  	    SELECT NULL
14:34:47 165  	    FROM PROCESS_RETRY_THROTTLE
14:34:47 166  	    WHERE PROCESS_NAME = SPROC_NAME
14:34:47 167  	      AND GENERIC_ID = CHARGE.ID
14:34:47 168  	  )
14:34:47 169  	  AND ROWNUM <= var_row_number*10
14:34:47 170  	  ORDER BY dbms_random.value
14:34:47 171  ) WHERE
14:34:47 172  	  ROWNUM <= var_row_number;
14:34:47 173  
14:34:47 174  END GET_PENDING_REFUND_CHARGES;
14:34:47 175  /******************************************************************************/
14:34:47 176  
14:34:47 177  PROCEDURE GET_UNPROCESSED_CHARGES (
14:34:47 178  /*
14:34:47 179  Throws exceptions:
14:34:47 180  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 181  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 182  */
14:34:47 183  	in_invoice_id  IN NUMBER,
14:34:47 184  	out_result_set OUT SYS_REFCURSOR
14:34:47 185  ) AS
14:34:47 186  SPROC_NAME      CONSTANT VARCHAR2(24) := 'GET_UNPROCESSED_CHARGES';
14:34:47 187  -- VARIABLES
14:34:47 188  temp_invoice_id NUMBER;
14:34:47 189  -- EXCEPTIONS
14:34:47 190  BAD_INVOICE_ID EXCEPTION;
14:34:47 191  BEGIN
14:34:47 192  
14:34:47 193  	-- Check that invoice exists
14:34:47 194  	BEGIN
14:34:47 195  	  SELECT
14:34:47 196  	    INVOICE.ID into temp_invoice_id
14:34:47 197  	  FROM
14:34:47 198  	    INVOICE
14:34:47 199  	  WHERE
14:34:47 200  	    INVOICE.ID = in_invoice_id;
14:34:47 201  	  EXCEPTION
14:34:47 202  	    WHEN NO_DATA_FOUND THEN
14:34:47 203  	      RAISE BAD_INVOICE_ID;
14:34:47 204  	END;
14:34:47 205  
14:34:47 206  	-- Select charges
14:34:47 207  	OPEN out_result_set FOR
14:34:47 208  	SELECT
14:34:47 209  	  CHARGE.ID,
14:34:47 210  	  CHARGE.TRANSACTION_ID,
14:34:47 211  	  CHARGE.INSTRUMENT_ID,
14:34:47 212  	  CHARGE.INSTRUMENT_TYPE_ID,
14:34:47 213  	  CHARGE.CHARGE_AMOUNT,
14:34:47 214  	  CHARGE.CREATE_DATE,
14:34:47 215  	  CHARGE.CREATED_BY,
14:34:47 216  	  CHARGE.INVOICE_ID
14:34:47 217  	FROM
14:34:47 218  	  CHARGE
14:34:47 219  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
14:34:47 220  	WHERE
14:34:47 221  	  CHARGE.INVOICE_ID = in_invoice_id
14:34:47 222  	  AND CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_OPENED
14:34:47 223  	  AND
14:34:47 224  	    TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V18.TRANSACTION_PENDING;
14:34:47 225  
14:34:47 226  EXCEPTION
14:34:47 227  WHEN BAD_INVOICE_ID THEN
14:34:47 228  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 229  	  SPROC_NAME, 'No such invoice');
14:34:47 230  WHEN OTHERS THEN
14:34:47 231  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 232  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 233  END GET_UNPROCESSED_CHARGES;
14:34:47 234  
14:34:47 235  /******************************************************************************/
14:34:47 236  
14:34:47 237  PROCEDURE GET_PROCESSED_CHARGES (
14:34:47 238  /*
14:34:47 239  Throws exceptions:
14:34:47 240  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 241  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 242  */
14:34:47 243  	in_invoice_id  IN NUMBER,
14:34:47 244  	out_result_set OUT SYS_REFCURSOR
14:34:47 245  ) AS
14:34:47 246  SPROC_NAME      CONSTANT VARCHAR2(21) := 'GET_PROCESSED_CHARGES';
14:34:47 247  -- VARIABLES
14:34:47 248  temp_invoice_id NUMBER;
14:34:47 249  -- EXCEPTIONS
14:34:47 250  BAD_INVOICE_ID  EXCEPTION;
14:34:47 251  BEGIN
14:34:47 252  
14:34:47 253  	-- Check that invoice exists
14:34:47 254  	BEGIN
14:34:47 255  	  SELECT
14:34:47 256  	    INVOICE.ID into temp_invoice_id
14:34:47 257  	  FROM
14:34:47 258  	    INVOICE
14:34:47 259  	  WHERE
14:34:47 260  	    INVOICE.ID = in_invoice_id;
14:34:47 261  	  EXCEPTION
14:34:47 262  	    WHEN NO_DATA_FOUND THEN
14:34:47 263  	      RAISE BAD_INVOICE_ID;
14:34:47 264  	END;
14:34:47 265  
14:34:47 266  	-- Select charges
14:34:47 267  	OPEN out_result_set FOR
14:34:47 268  	SELECT /*+ STAR_TRANSFORMATION */
14:34:47 269  	  CHARGE.ID,
14:34:47 270  	  CHARGE.TRANSACTION_ID,
14:34:47 271  	  CHARGE.INSTRUMENT_ID,
14:34:47 272  	  CHARGE.INSTRUMENT_TYPE_ID,
14:34:47 273  	  CHARGE.CHARGE_AMOUNT,
14:34:47 274  	  CHARGE.CREATE_DATE,
14:34:47 275  	  CHARGE.CREATED_BY,
14:34:47 276  	  CHARGE.INVOICE_ID
14:34:47 277  	FROM
14:34:47 278  	  CHARGE
14:34:47 279  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
14:34:47 280  	WHERE
14:34:47 281  	  CHARGE.INVOICE_ID = in_invoice_id
14:34:47 282  	  AND CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_PROCESSED
14:34:47 283  	  AND TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V18.TRANSACTION_CLOSED;
14:34:47 284  
14:34:47 285  EXCEPTION
14:34:47 286  WHEN BAD_INVOICE_ID THEN
14:34:47 287  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 288  	  SPROC_NAME, 'No such invoice');
14:34:47 289  WHEN OTHERS THEN
14:34:47 290  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 291  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 292  END GET_PROCESSED_CHARGES;
14:34:47 293  
14:34:47 294  /******************************************************************************/
14:34:47 295  
14:34:47 296  PROCEDURE GET_SUBSCR_ID_BY_CHARGE_ID (
14:34:47 297  /*
14:34:47 298  Throws exceptions:
14:34:47 299  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 300  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 301  */
14:34:47 302  	in_charge_id	    IN NUMBER,
14:34:47 303  	out_subscription_id OUT NUMBER
14:34:47 304  ) AS
14:34:47 305  SPROC_NAME	  CONSTANT VARCHAR2(26) := 'GET_SUBSCR_ID_BY_CHARGE_ID';
14:34:47 306  -- VARIABLES
14:34:47 307  var_invoice_id	  NUMBER;
14:34:47 308  var_subscription_id NUMBER;
14:34:47 309  -- EXCEPTIONS
14:34:47 310  BAD_CHARGE_ID		EXCEPTION;
14:34:47 311  CAN_NOT_FIND_SUBSCRIPTION EXCEPTION;
14:34:47 312  BEGIN
14:34:47 313  
14:34:47 314  	BEGIN
14:34:47 315  	  SELECT
14:34:47 316  	    CHARGE.INVOICE_ID into var_invoice_id
14:34:47 317  	  FROM
14:34:47 318  	    CHARGE
14:34:47 319  	  WHERE
14:34:47 320  	    CHARGE.ID = in_charge_id;
14:34:47 321  	  EXCEPTION
14:34:47 322  	    WHEN NO_DATA_FOUND THEN
14:34:47 323  	      RAISE BAD_CHARGE_ID;
14:34:47 324  	END;
14:34:47 325  
14:34:47 326  	BEGIN
14:34:47 327  	  SELECT
14:34:47 328  	    LICENSE.SUBSCRIPTION_ID into var_subscription_id
14:34:47 329  	  FROM
14:34:47 330  	    LICENSE
14:34:47 331  	  WHERE
14:34:47 332  	    LICENSE.INVOICE_ID = var_invoice_id
14:34:47 333  	    AND ROWNUM <= 1; -- That's because many licenses could be pointed to the same invoice
14:34:47 334  	  EXCEPTION
14:34:47 335  	    WHEN NO_DATA_FOUND THEN
14:34:47 336  	      RAISE CAN_NOT_FIND_SUBSCRIPTION;
14:34:47 337  	END;
14:34:47 338  
14:34:47 339  	out_subscription_id := var_subscription_id;
14:34:47 340  
14:34:47 341  EXCEPTION
14:34:47 342  WHEN BAD_CHARGE_ID THEN
14:34:47 343  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 344  	  SPROC_NAME, 'No such charge');
14:34:47 345  WHEN CAN_NOT_FIND_SUBSCRIPTION THEN
14:34:47 346  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 347  	  SPROC_NAME, 'Could not find subscription for given charge');
14:34:47 348  WHEN OTHERS THEN
14:34:47 349  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 350  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 351  END GET_SUBSCR_ID_BY_CHARGE_ID;
14:34:47 352  
14:34:47 353  /******************************************************************************/
14:34:47 354  
14:34:47 355  PROCEDURE UPDATE_CHARGE_STATUS (
14:34:47 356  /*
14:34:47 357  Throws exceptions:
14:34:47 358  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 359  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 360  */
14:34:47 361  	in_charge_id	    IN CHARGE.ID%TYPE,
14:34:47 362  	in_charge_status_id IN CHARGE.CHARGE_STATUS_ID%TYPE,
14:34:47 363  	in_updated_by	    IN CHARGE.UPDATED_BY%TYPE
14:34:47 364  ) AS
14:34:47 365  SPROC_NAME CONSTANT VARCHAR2(20) := 'UPDATE_CHARGE_STATUS';
14:34:47 366  -- EXCEPTIONS
14:34:47 367  BAD_CHARGE_ID	     EXCEPTION;
14:34:47 368  BAD_STATUS_ID	     EXCEPTION;
14:34:47 369  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:47 370  BEGIN
14:34:47 371  
14:34:47 372  	IF in_charge_status_id != GLOBAL_STATUSES_V18.CHARGE_OPENED
14:34:47 373  	  AND in_charge_status_id != GLOBAL_STATUSES_V18.CHARGE_PROCESSED
14:34:47 374  	  AND in_charge_status_id != GLOBAL_STATUSES_V18.CHARGE_CANCELED THEN
14:34:47 375  	  RAISE BAD_STATUS_ID;
14:34:47 376  	END IF;
14:34:47 377  
14:34:47 378  	PROCS_CHARGE_CRU_V18.UPDATE_CHARGE(
14:34:47 379  	  in_charge_id	      => in_charge_id,
14:34:47 380  	  in_charge_status_id => in_charge_status_id,
14:34:47 381  	  in_updated_by       => in_updated_by
14:34:47 382  	);
14:34:47 383  
14:34:47 384  	IF SQL%ROWCOUNT = 0 THEN
14:34:47 385  	  RAISE BAD_CHARGE_ID;
14:34:47 386  	END IF;
14:34:47 387  
14:34:47 388  EXCEPTION
14:34:47 389  WHEN BAD_CHARGE_ID THEN
14:34:47 390  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 391  	  SPROC_NAME, 'No such charge');
14:34:47 392  WHEN BAD_STATUS_ID THEN
14:34:47 393  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 394  	  SPROC_NAME, 'Bad status id');
14:34:47 395  WHEN OTHERS THEN
14:34:47 396  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 397  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 398  END UPDATE_CHARGE_STATUS;
14:34:47 399  
14:34:47 400  FUNCTION IS_CHARGE_COLLECTED (
14:34:47 401  /*
14:34:47 402  Throws:
14:34:47 403  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 404  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 405  Returns:
14:34:47 406  GLOBAL_CONST.TRUE if transaction collected,
14:34:47 407  GLOBAL_CONST.FALSE else
14:34:47 408  */
14:34:47 409  	in_charge_id IN NUMBER
14:34:47 410  ) RETURN NUMBER AS
14:34:47 411  SPROC_NAME CONSTANT VARCHAR2(19) := 'IS_CHARGE_COLLECTED';
14:34:47 412  -- VARIABLES
14:34:47 413  var_transaction_id NUMBER;
14:34:47 414  is_transaction_collected NUMBER;
14:34:47 415  -- EXCEPTIONS
14:34:47 416  BAD_CHARGE_ID	       EXCEPTION;
14:34:47 417  CAN_NOT_CHECK_TRANSACTION EXCEPTION;
14:34:47 418  EXCEPTION_MESSAGE        VARCHAR2(1024);
14:34:47 419  BEGIN
14:34:47 420  
14:34:47 421  	BEGIN
14:34:47 422  	  SELECT
14:34:47 423  	    CHARGE.TRANSACTION_ID into var_transaction_id
14:34:47 424  	  FROM
14:34:47 425  	    CHARGE
14:34:47 426  	  WHERE
14:34:47 427  	    CHARGE.ID = in_charge_id;
14:34:47 428  	  EXCEPTION
14:34:47 429  	    WHEN NO_DATA_FOUND THEN
14:34:47 430  	      RAISE BAD_CHARGE_ID;
14:34:47 431  	END;
14:34:47 432  
14:34:47 433  	BEGIN
14:34:47 434  	  is_transaction_collected := PROCS_TRANSACTION_V18.IS_TRANSACTION_COLLECTED(var_transaction_id);
14:34:47 435  	  EXCEPTION
14:34:47 436  	    WHEN OTHERS THEN
14:34:47 437  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:47 438  	      RAISE CAN_NOT_CHECK_TRANSACTION;
14:34:47 439  	END;
14:34:47 440  
14:34:47 441  	RETURN is_transaction_collected;
14:34:47 442  
14:34:47 443  EXCEPTION
14:34:47 444  WHEN BAD_CHARGE_ID THEN
14:34:47 445  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 446  	  SPROC_NAME, 'No such charge');
14:34:47 447  WHEN CAN_NOT_CHECK_TRANSACTION THEN
14:34:47 448  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 449  	  SPROC_NAME, 'Could not check if transaction was collected', EXCEPTION_MESSAGE);
14:34:47 450  WHEN OTHERS THEN
14:34:47 451  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 452  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 453  END;
14:34:47 454  
14:34:47 455  PROCEDURE GET_COLLECTED_CHARGES (
14:34:47 456  /*
14:34:47 457  Throws exceptions:
14:34:47 458  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 459  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 460  */
14:34:47 461  	in_invoice_id  IN NUMBER,
14:34:47 462  	out_result_set OUT SYS_REFCURSOR
14:34:47 463  ) AS
14:34:47 464  SPROC_NAME      CONSTANT VARCHAR2(21) := 'GET_COLLECTED_CHARGES';
14:34:47 465  -- VARIABLES
14:34:47 466  temp_invoice_id NUMBER;
14:34:47 467  -- EXCEPTIONS
14:34:47 468  BAD_INVOICE_ID  EXCEPTION;
14:34:47 469  BEGIN
14:34:47 470  
14:34:47 471  	-- Check that invoice exists
14:34:47 472  	BEGIN
14:34:47 473  	  SELECT
14:34:47 474  	    INVOICE.ID into temp_invoice_id
14:34:47 475  	  FROM
14:34:47 476  	    INVOICE
14:34:47 477  	  WHERE
14:34:47 478  	    INVOICE.ID = in_invoice_id;
14:34:47 479  	  EXCEPTION
14:34:47 480  	    WHEN NO_DATA_FOUND THEN
14:34:47 481  	      RAISE BAD_INVOICE_ID;
14:34:47 482  	END;
14:34:47 483  
14:34:47 484  	-- Select charges
14:34:47 485  	OPEN out_result_set FOR
14:34:47 486  	SELECT
14:34:47 487  	  CHARGE.ID,
14:34:47 488  	  CHARGE.TRANSACTION_ID,
14:34:47 489  	  CHARGE.INSTRUMENT_ID,
14:34:47 490  	  CHARGE.INSTRUMENT_TYPE_ID,
14:34:47 491  	  CHARGE.CHARGE_AMOUNT,
14:34:47 492  	  CHARGE.CREATE_DATE,
14:34:47 493  	  CHARGE.CREATED_BY,
14:34:47 494  	  CHARGE.INVOICE_ID
14:34:47 495  	FROM
14:34:47 496  	  CHARGE
14:34:47 497  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
14:34:47 498  	WHERE
14:34:47 499  	  CHARGE.INVOICE_ID = in_invoice_id
14:34:47 500  	  AND CHARGE.CHARGE_STATUS_ID IN (SELECT GLOBAL_STATUSES_V18.CHARGE_PROCESSED FROM DUAL)
14:34:47 501  	  AND PROCS_CHARGE_V18.IS_CHARGE_COLLECTED(CHARGE.ID) = GLOBAL_CONSTANTS_V18.TRUE;
14:34:47 502  
14:34:47 503  EXCEPTION
14:34:47 504  WHEN BAD_INVOICE_ID THEN
14:34:47 505  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 506  	  SPROC_NAME, 'No such invoice');
14:34:47 507  WHEN OTHERS THEN
14:34:47 508  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 509  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 510  END GET_COLLECTED_CHARGES;
14:34:47 511  
14:34:47 512  END PROCS_CHARGE_V18;
14:34:47 513  .
14:34:47 SQL> /

Package body created.

Elapsed: 00:00:00.07
14:34:47 SQL> 
14:34:47 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SUBSCRIPTION_V18" AS
14:34:47   2  
14:34:47   3  PROCEDURE START_GRACE_BY_INVOICE_ID(
14:34:47   4  	in_invoice_id	     IN LICENSE.INVOICE_ID%TYPE,
14:34:47   5  	in_updater	     IN VARCHAR2,
14:34:47   6  	in_duration_in_hours IN NUMBER
14:34:47   7  ) AS
14:34:47   8  SPROC_NAME CONSTANT VARCHAR2(32) := 'START_GRACE_BY_INVOICE_ID';
14:34:47   9  var_subs_id	  SUBSCRIPTION.ID%TYPE;
14:34:47  10  var_lic_id	  LICENSE.ID%TYPE;
14:34:47  11  var_grace_start	  DATE;
14:34:47  12  var_grace_end	  DATE;
14:34:47  13  BEGIN
14:34:47  14  	SELECT
14:34:47  15  	  ID,
14:34:47  16  	  SUBSCRIPTION_ID,
14:34:47  17  	  START_DATE,
14:34:47  18  	  START_DATE + (in_duration_in_hours / 24)
14:34:47  19  	INTO var_lic_id, var_subs_id, var_grace_start, var_grace_end
14:34:47  20  	FROM
14:34:47  21  	  LICENSE
14:34:47  22  	WHERE
14:34:47  23  	  INVOICE_ID = in_invoice_id
14:34:47  24  	  AND ROWNUM <= 1;
14:34:47  25  
14:34:47  26  	PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47  27  	    in_license_id	    => var_lic_id,
14:34:47  28  	    in_updated_by	    => in_updater,
14:34:47  29  	    in_grace_start_date     => var_grace_start,
14:34:47  30  	    in_grace_end_date	    => var_grace_end,
14:34:47  31  	    in_entitlement_end_date => var_grace_end,
14:34:47  32  	    in_license_status_id    => GLOBAL_STATUSES_V18.LICENSE_IN_GRACE_PERIOD
14:34:47  33  	);
14:34:47  34  
14:34:47  35  	PROCS_SUBSCRIPTION_CRU_V18.UPDATE_SUBSCRIPTION(
14:34:47  36  	    in_subscription_id	      => var_subs_id,
14:34:47  37  	    in_updated_by	      => in_updater,
14:34:47  38  	    in_subscription_status_id => GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD
14:34:47  39  	  );
14:34:47  40  END START_GRACE_BY_INVOICE_ID;
14:34:47  41  
14:34:47  42  PROCEDURE STOP_GRACE_BY_INVOICE_ID(
14:34:47  43  	in_invoice_id IN LICENSE.INVOICE_ID%TYPE,
14:34:47  44  	in_updater    IN VARCHAR2
14:34:47  45  ) AS
14:34:47  46  SPROC_NAME CONSTANT VARCHAR2(32) := 'START_GRACE_BY_INVOICE_ID';
14:34:47  47  var_subs_id	  SUBSCRIPTION.ID%TYPE;
14:34:47  48  var_lic_id	  LICENSE.ID%TYPE;
14:34:47  49  var_lic_end_date	  DATE;
14:34:47  50  BEGIN
14:34:47  51  	SELECT
14:34:47  52  	  ID,
14:34:47  53  	  SUBSCRIPTION_ID,
14:34:47  54  	  END_DATE
14:34:47  55  	INTO var_lic_id, var_subs_id, var_lic_end_date
14:34:47  56  	FROM
14:34:47  57  	  LICENSE
14:34:47  58  	WHERE
14:34:47  59  	  INVOICE_ID = in_invoice_id
14:34:47  60  	  AND ROWNUM <= 1;
14:34:47  61  
14:34:47  62  	PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47  63  	    in_license_id	    => var_lic_id,
14:34:47  64  	    in_updated_by	    => in_updater,
14:34:47  65  	    in_grace_end_date	    => SYSDATE,
14:34:47  66  	    in_entitlement_end_date => var_lic_end_date,
14:34:47  67  	    in_license_status_id    => GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47  68  	);
14:34:47  69  
14:34:47  70  	PROCS_SUBSCRIPTION_CRU_V18.UPDATE_SUBSCRIPTION(
14:34:47  71  	    in_subscription_id	      => var_subs_id,
14:34:47  72  	    in_updated_by	      => in_updater,
14:34:47  73  	    in_subscription_status_id => GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:47  74  	);
14:34:47  75  END STOP_GRACE_BY_INVOICE_ID;
14:34:47  76  
14:34:47  77  
14:34:47  78  PROCEDURE START_SUBSCRIPTION_CREATION (
14:34:47  79  	in_group_id	      IN NUMBER,
14:34:47  80  	in_created_by	      IN VARCHAR2,
14:34:47  81  	in_offer_chain_id     IN NUMBER,
14:34:47  82  	in_instrument_type_id IN NUMBER,
14:34:47  83  	in_instrument_id      IN NUMBER,
14:34:47  84  	in_agent_id	      IN NUMBER,
14:34:47  85  	in_note 	      IN VARCHAR2,
14:34:47  86  	out_subscription_id   OUT NUMBER,
14:34:47  87  	out_invoice_id	      OUT NUMBER,
14:34:47  88  	out_new_license_id    OUT NUMBER,
14:34:47  89  	in_check_dupe_products	 IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.TRUE
14:34:47  90  ) AS
14:34:47  91  SPROC_NAME CONSTANT VARCHAR2(27) := 'START_SUBSCRIPTION_CREATION';
14:34:47  92  -- VARIABLES
14:34:47  93  var_account_id		 NUMBER;
14:34:47  94  var_account_status	 NUMBER;
14:34:47  95  var_offer_chain_status_id  NUMBER;
14:34:47  96  var_is_gift_certificate	 NUMBER;
14:34:47  97  var_is_for_redemption	 NUMBER;
14:34:47  98  var_same_offer_chains_num  NUMBER;
14:34:47  99  var_max_concurrent_subscrs NUMBER;
14:34:47 100  var_first_offer_id	 NUMBER;
14:34:47 101  var_new_invoice_id	 NUMBER;
14:34:47 102  var_new_subscription_id	 NUMBER;
14:34:47 103  var_date			 DATE := SYSDATE;
14:34:47 104  var_account_tax_exempt_id  VARCHAR2(255);
14:34:47 105  var_concur_subscription_id NUMBER;
14:34:47 106  -- EXCEPTIONS
14:34:47 107  BAD_GROUP_ID		    EXCEPTION;
14:34:47 108  CAN_NOT_CREATE_FOR_DISABLE    EXCEPTION;
14:34:47 109  BAD_OFFER_CHAIN		    EXCEPTION;
14:34:47 110  BAD_OFFER_CHAIN_STATUS	    EXCEPTION;
14:34:47 111  CAN_NOT_SUBSCRIBE_TO_GC	    EXCEPTION;
14:34:47 112  CAN_NOT_SUBSCRIBE_TO_RGC	    EXCEPTION;
14:34:47 113  LIMIT_REACHED		    EXCEPTION;
14:34:47 114  PRODUCT_ALREADY_PURCHASED     EXCEPTION;
14:34:47 115  CAN_NOT_GET_FIRST_OFFER_CHAIN EXCEPTION;
14:34:47 116  CAN_NOT_CREATE_INVOICE	    EXCEPTION;
14:34:47 117  CAN_NOT_CREATE_LINE_ITEMS     EXCEPTION;
14:34:47 118  CAN_NOT_CREATE_LICENSE	    EXCEPTION;
14:34:47 119  CAN_NOT_CREATE_NOTE	    EXCEPTION;
14:34:47 120  
14:34:47 121  EXCEPTION_MESSAGE VARCHAR2(1024);
14:34:47 122  BEGIN
14:34:47 123  
14:34:47 124  	-- Get account id and status
14:34:47 125  	BEGIN
14:34:47 126  	  SELECT
14:34:47 127  	    ACCOUNT.ID,
14:34:47 128  	    ACCOUNT.ACCOUNT_STATUS_ID,
14:34:47 129  	    ACCOUNT.TAX_EXEMPT_ID
14:34:47 130  	    into
14:34:47 131  	    var_account_id,
14:34:47 132  	    var_account_status,
14:34:47 133  	    var_account_tax_exempt_id
14:34:47 134  	  FROM
14:34:47 135  	    ACCOUNT
14:34:47 136  	  WHERE
14:34:47 137  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:47 138  	  EXCEPTION
14:34:47 139  	  WHEN NO_DATA_FOUND THEN
14:34:47 140  	    RAISE BAD_GROUP_ID;
14:34:47 141  	END;
14:34:47 142  
14:34:47 143  	-- Could not create subscription for disabled account
14:34:47 144  	IF var_account_status = GLOBAL_STATUSES_V18.ACCOUNT_DISABLED THEN
14:34:47 145  	  RAISE CAN_NOT_CREATE_FOR_DISABLE;
14:34:47 146  	END IF;
14:34:47 147  
14:34:47 148  	-- Get offer chain status
14:34:47 149  	BEGIN
14:34:47 150  	  SELECT
14:34:47 151  	    OFFER_CHAIN.OFFER_CHAIN_STATUS_ID,
14:34:47 152  	    OFFER_CHAIN.IS_GIFT_CERTIFICATE
14:34:47 153  	    into
14:34:47 154  	    var_offer_chain_status_id,
14:34:47 155  	    var_is_gift_certificate
14:34:47 156  	  FROM
14:34:47 157  	    OFFER_CHAIN
14:34:47 158  	  WHERE
14:34:47 159  	    OFFER_CHAIN.ID = in_offer_chain_id;
14:34:47 160  
14:34:47 161  	  EXCEPTION
14:34:47 162  	    WHEN NO_DATA_FOUND THEN
14:34:47 163  	      RAISE BAD_OFFER_CHAIN;
14:34:47 164  	END;
14:34:47 165  
14:34:47 166  	-- Could not subscribe to inactive/disabled offer chain
14:34:47 167  	IF var_offer_chain_status_id != GLOBAL_STATUSES_V18.OFFER_CHAIN_ACTIVE THEN
14:34:47 168  	  RAISE BAD_OFFER_CHAIN_STATUS;
14:34:47 169  	END IF;
14:34:47 170  
14:34:47 171  	-- Can not subscribe to Offer Chain for a Gift Certfiicate
14:34:47 172  	IF var_is_gift_certificate = GLOBAL_CONSTANTS_V18.TRUE THEN
14:34:47 173  	  RAISE CAN_NOT_SUBSCRIBE_TO_GC;
14:34:47 174  	END IF;
14:34:47 175  
14:34:47 176  	-- check if the OC is for Redemption:
14:34:47 177  	SELECT
14:34:47 178  	  COUNT(*) into var_is_for_redemption
14:34:47 179  	FROM
14:34:47 180  	  OFFER_CHAIN_ELIGIBILITY
14:34:47 181  	WHERE
14:34:47 182  	  OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID = in_offer_chain_id
14:34:47 183  	  AND OFFER_CHAIN_ELIGIBILITY.NAME = GLOBAL_CONSTANTS_V18.GIFT_CERTIFICATE_REQUIRED
14:34:47 184  	  AND OFFER_CHAIN_ELIGIBILITY.VALUE = GLOBAL_CONSTANTS_V18.ELIGIBILITY_FLAG_SET;
14:34:47 185  
14:34:47 186  	IF var_is_for_redemption > 0 THEN
14:34:47 187  	  RAISE CAN_NOT_SUBSCRIBE_TO_RGC;
14:34:47 188  	END IF;
14:34:47 189  
14:34:47 190  	SELECT
14:34:47 191  	  COUNT(*) into var_same_offer_chains_num
14:34:47 192  	FROM
14:34:47 193  	  SUBSCRIPTION
14:34:47 194  	WHERE
14:34:47 195  	  SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:47 196  	  AND SUBSCRIPTION.OFFER_CHAIN_ID = in_offer_chain_id
14:34:47 197  	  AND (SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:47 198  	       OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD);
14:34:47 199  
14:34:47 200  	-- ELIGIBILITY LOGIC CHANGED TO:
14:34:47 201  	-- FOR EACH offer chain eligibility rule in OC:
14:34:47 202  	--   IF offer chain eligibility rule fails:
14:34:47 203  	--     deny purchase;
14:34:47 204  	--   END IF
14:34:47 205  	-- END FOR
14:34:47 206  	-- FOR EACH product eligibility rule in OC:
14:34:47 207  	--   IF product eligibilty rule fails:
14:34:47 208  	--     deny purchase;
14:34:47 209  	--   END IF
14:34:47 210  	-- END FOR
14:34:47 211  	-- allow purchase;
14:34:47 212  
14:34:47 213  	-- if user have any active existing subscriptions to the offer chain
14:34:47 214  	-- and if MAX_CONCURRENT_SUBS <= [user's subscription count for the offer chain]
14:34:47 215  	-- then deny purchase
14:34:47 216  	var_max_concurrent_subscrs := PROCS_OFFER_CHAIN_V18.GET_OFFER_CHAIN_MAX_CONC_SUBSC(in_offer_chain_id);
14:34:47 217  	IF var_max_concurrent_subscrs != GLOBAL_CONSTANTS_V18.INFINITY
14:34:47 218  	  AND var_max_concurrent_subscrs <= var_same_offer_chains_num THEN
14:34:47 219  	  -- Find first concurrent subscription id:
14:34:47 220  	  SELECT
14:34:47 221  	    ID into var_concur_subscription_id
14:34:47 222  	  FROM (
14:34:47 223  	    SELECT
14:34:47 224  	      ID
14:34:47 225  	    FROM
14:34:47 226  	      SUBSCRIPTION
14:34:47 227  	    WHERE
14:34:47 228  	      SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:47 229  	      AND SUBSCRIPTION.OFFER_CHAIN_ID = in_offer_chain_id
14:34:47 230  	      AND (SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:47 231  		   OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD)
14:34:47 232  	    ORDER BY
14:34:47 233  	      ID
14:34:47 234  	  )
14:34:47 235  	  WHERE
14:34:47 236  	    ROWNUM <= 1;
14:34:47 237  	  RAISE LIMIT_REACHED;
14:34:47 238  	END IF;
14:34:47 239  
14:34:47 240  	-- if user does not have any active existing subscriptions to the offer chain
14:34:47 241  	-- and if product from the offer chain is already owned from another offer chain
14:34:47 242  	-- then deny purchase
14:34:47 243  	IF (in_check_dupe_products != GLOBAL_CONSTANTS_V18.FALSE) THEN
14:34:47 244  	  FOR f_account_offer_chains IN (
14:34:47 245  	    SELECT DISTINCT
14:34:47 246  	      OFFER_CHAIN_ID
14:34:47 247  	    FROM
14:34:47 248  	      SUBSCRIPTION
14:34:47 249  	    WHERE
14:34:47 250  	      ACCOUNT_ID = var_account_id
14:34:47 251  	      AND (
14:34:47 252  		SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:47 253  		OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED
14:34:47 254  		OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD)
14:34:47 255  	  )
14:34:47 256  	  LOOP
14:34:47 257  	    IF PROCS_OFFER_CHAIN_V18.CHECK_FOR_SAME_PRODUCTS(
14:34:47 258  	      in_offer_chain_1	       => in_offer_chain_id,
14:34:47 259  	      in_offer_chain_2	       => f_account_offer_chains.OFFER_CHAIN_ID,
14:34:47 260  	      in_use_eligibility_rules => GLOBAL_CONSTANTS_V18.TRUE
14:34:47 261  	    ) = GLOBAL_CONSTANTS_V18.TRUE THEN
14:34:47 262  
14:34:47 263  	      -- Find first concurrent subscription id:
14:34:47 264  	      SELECT
14:34:47 265  		ID into var_concur_subscription_id
14:34:47 266  	      FROM (
14:34:47 267  		SELECT
14:34:47 268  		  ID
14:34:47 269  		FROM
14:34:47 270  		  SUBSCRIPTION
14:34:47 271  		WHERE
14:34:47 272  		  SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:47 273  		  AND SUBSCRIPTION.OFFER_CHAIN_ID = f_account_offer_chains.OFFER_CHAIN_ID
14:34:47 274  		  AND (
14:34:47 275  		    SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:47 276  		    OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED
14:34:47 277  		    OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD)
14:34:47 278  		ORDER BY
14:34:47 279  		  ID
14:34:47 280  	      )
14:34:47 281  	      WHERE
14:34:47 282  		ROWNUM <= 1;
14:34:47 283  
14:34:47 284  	      RAISE PRODUCT_ALREADY_PURCHASED;
14:34:47 285  	    END IF;
14:34:47 286  	  END LOOP;
14:34:47 287  	END IF;
14:34:47 288  
14:34:47 289  	BEGIN
14:34:47 290  	  PROCS_OFFER_CHAIN_V18.GET_FIRST_OFFER(in_offer_chain_id, var_first_offer_id);
14:34:47 291  	  EXCEPTION
14:34:47 292  	    WHEN OTHERS THEN
14:34:47 293  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:47 294  	      RAISE CAN_NOT_GET_FIRST_OFFER_CHAIN;
14:34:47 295  	END;
14:34:47 296  
14:34:47 297  	BEGIN
14:34:47 298  	  PROCS_INVOICE_V18.CREATE_INVOICE(
14:34:47 299  	    in_invoice_status => GLOBAL_STATUSES_V18.INVOICE_OPEN,
14:34:47 300  	    in_created_by     => in_created_by,
14:34:47 301  	    in_tax_exempt_id  => var_account_tax_exempt_id,
14:34:47 302  	    out_invoice_id    => var_new_invoice_id
14:34:47 303  	  );
14:34:47 304  	  EXCEPTION
14:34:47 305  	    WHEN OTHERS THEN
14:34:47 306  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:47 307  	      RAISE CAN_NOT_CREATE_INVOICE;
14:34:47 308  	END;
14:34:47 309  
14:34:47 310  	BEGIN
14:34:47 311  	  PROCS_LINE_ITEMS_V18.ADD_LINE_ITEMS(
14:34:47 312  	    in_invoice_id => var_new_invoice_id,
14:34:47 313  	    in_offer_id   => var_first_offer_id,
14:34:47 314  	    in_created_by => in_created_by
14:34:47 315  	  );
14:34:47 316  	  EXCEPTION
14:34:47 317  	    WHEN OTHERS THEN
14:34:47 318  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:47 319  	      RAISE CAN_NOT_CREATE_LINE_ITEMS;
14:34:47 320  	END;
14:34:47 321  
14:34:47 322  	PROCS_SUBSCRIPTION_CRU_V18.CREATE_SUBSCRIPTION(
14:34:47 323  	  out_subscription_id	    => var_new_subscription_id,
14:34:47 324  	  in_account_id 	    => var_account_id,
14:34:47 325  	  in_purchase_date	    => var_date,
14:34:47 326  	  in_offer_chain_id	    => in_offer_chain_id,
14:34:47 327  	  in_created_by 	    => in_created_by,
14:34:47 328  	  in_instrument_type_id     => in_instrument_type_id,
14:34:47 329  	  in_instrument_id	    => in_instrument_id,
14:34:47 330  	  in_subscription_status_id => GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:47 331  	);
14:34:47 332  
14:34:47 333  	BEGIN
14:34:47 334  	  PROCS_SUBSCRIPTION_V18.ANNOTATE_SUBSCRIPTION(
14:34:47 335  	    in_subscription_id => var_new_subscription_id,
14:34:47 336  	    in_agent_id        => in_agent_id,
14:34:47 337  	    in_note	       => in_note,
14:34:47 338  	    in_created_by      => in_created_by
14:34:47 339  	  );
14:34:47 340  	  EXCEPTION
14:34:47 341  	   WHEN OTHERS THEN
14:34:47 342  	     EXCEPTION_MESSAGE := SQLERRM;
14:34:47 343  	     RAISE CAN_NOT_CREATE_NOTE;
14:34:47 344  	END;
14:34:47 345  
14:34:47 346  	BEGIN
14:34:47 347  	  PROCS_LICENSE_V18.CREATE_LICENSE(
14:34:47 348  	    in_status_id		=> GLOBAL_STATUSES_V18.LICENSE_ACTIVE,
14:34:47 349  	    in_needs_entitlements	=> GLOBAL_CONSTANTS_V18.TRUE,
14:34:47 350  	    in_start_date		=> var_date,
14:34:47 351  	    in_end_date 		=> NULL, -- Will be calculated automatically
14:34:47 352  	    in_offer_id 		=> var_first_offer_id,
14:34:47 353  	    in_subscription_id		=> var_new_subscription_id,
14:34:47 354  	    in_invoice_id		=> var_new_invoice_id,
14:34:47 355  	    in_created_by		=> in_created_by,
14:34:47 356  	    in_is_extension		=> GLOBAL_CONSTANTS_V18.FALSE,
14:34:47 357  	    in_current_offer_index	=> PROCS_OFFER_CHAIN_V18.GET_FIRST_OFFER_INDEX(in_offer_chain_id),
14:34:47 358  	    in_current_offer_recurr_num => 1,
14:34:47 359  	    out_license_id		=> out_new_license_id
14:34:47 360  	  );
14:34:47 361  	  EXCEPTION
14:34:47 362  	    WHEN OTHERS THEN
14:34:47 363  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:47 364  	      RAISE CAN_NOT_CREATE_LICENSE;
14:34:47 365  	END;
14:34:47 366  
14:34:47 367  	out_subscription_id := var_new_subscription_id;
14:34:47 368  	out_invoice_id := var_new_invoice_id;
14:34:47 369  
14:34:47 370  EXCEPTION
14:34:47 371  WHEN BAD_OFFER_CHAIN_STATUS THEN
14:34:47 372  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 373  	  SPROC_NAME, 'Offer chain is not active');
14:34:47 374  WHEN LIMIT_REACHED THEN
14:34:47 375  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.CONFLICT_ERROR,
14:34:47 376  	  SPROC_NAME, 'Limit reached for given offer chain. Concurrent subscription id: ' || var_concur_subscription_id);
14:34:47 377  WHEN CAN_NOT_CREATE_FOR_DISABLE THEN
14:34:47 378  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 379  	  SPROC_NAME, 'Can not create subsscription for disabled account');
14:34:47 380  WHEN CAN_NOT_SUBSCRIBE_TO_GC THEN
14:34:47 381  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 382  	  SPROC_NAME, 'Can not subscribe to Offer Chain for Gift Certificate');
14:34:47 383  WHEN CAN_NOT_SUBSCRIBE_TO_RGC THEN
14:34:47 384  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 385  	  SPROC_NAME, 'Can not subscribe to Offer Chain that is for redemption');
14:34:47 386  WHEN BAD_OFFER_CHAIN THEN
14:34:47 387  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 388  	  SPROC_NAME, 'No such offer chain');
14:34:47 389  WHEN PRODUCT_ALREADY_PURCHASED THEN
14:34:47 390  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.CONFLICT_ERROR,
14:34:47 391  	  SPROC_NAME, 'User already subscribed to some product in given offer chain. Concurrent subscription id: ' || var_concur_subscription_id);
14:34:47 392  WHEN CAN_NOT_GET_FIRST_OFFER_CHAIN THEN
14:34:47 393  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 394  	  SPROC_NAME, 'Could not find first offer in offer chain', EXCEPTION_MESSAGE);
14:34:47 395  WHEN CAN_NOT_CREATE_INVOICE THEN
14:34:47 396  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 397  	  SPROC_NAME, 'Could not create invoice', EXCEPTION_MESSAGE);
14:34:47 398  WHEN CAN_NOT_CREATE_LINE_ITEMS THEN
14:34:47 399  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 400  	  SPROC_NAME, 'Could not create line items', EXCEPTION_MESSAGE);
14:34:47 401  WHEN CAN_NOT_CREATE_LICENSE THEN
14:34:47 402  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 403  	  SPROC_NAME, 'Could not create new license', EXCEPTION_MESSAGE);
14:34:47 404  WHEN BAD_GROUP_ID THEN
14:34:47 405  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 406  	  SPROC_NAME, 'Bad group id');
14:34:47 407  WHEN CAN_NOT_CREATE_NOTE THEN
14:34:47 408  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 409  	  SPROC_NAME, 'Could not annotate subscription', EXCEPTION_MESSAGE);
14:34:47 410  WHEN OTHERS THEN
14:34:47 411  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 412  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 413  END START_SUBSCRIPTION_CREATION;
14:34:47 414  
14:34:47 415  /******************************************************************************/
14:34:47 416  
14:34:47 417  PROCEDURE FINALIZE_SUBSCRIPTION_CREATION (
14:34:47 418  	in_subscription_id    IN NUMBER,
14:34:47 419  	in_invoice_id	      IN NUMBER,
14:34:47 420  	in_instrument_type_id IN NUMBER,
14:34:47 421  	in_instrument_id      IN NUMBER,
14:34:47 422  	in_created_by	      IN VARCHAR2
14:34:47 423  ) AS
14:34:47 424  SPROC_NAME CONSTANT VARCHAR2(30) := 'FINALIZE_SUBSCRIPTION_CREATION';
14:34:47 425  -- VARIABLES
14:34:47 426  var_invoice_amount     NUMBER(10, 2);
14:34:47 427  var_new_transaction_id NUMBER;
14:34:47 428  var_new_charge_id      NUMBER;
14:34:47 429  -- EXCEPTIONS
14:34:47 430  CAN_NOT_USE_FCINSTR	  EXCEPTION;
14:34:47 431  CAN_NOT_CALC_INVOICE_AMOUNT EXCEPTION;
14:34:47 432  CAN_NOT_CREATE_TRANSACTION  EXCEPTION;
14:34:47 433  CAN_NOT_CREATE_CHARGE	  EXCEPTION;
14:34:47 434  
14:34:47 435  EXCEPTION_MESSAGE VARCHAR2(1024);
14:34:47 436  BEGIN
14:34:47 437  
14:34:47 438  	-- Calculate invoice amount ( + discounts, taxes)
14:34:47 439  	BEGIN
14:34:47 440  	  PROCS_INVOICE_V18.CALCULATE_INVOICE_AMOUNT(
14:34:47 441  	    in_invoice_id => in_invoice_id,
14:34:47 442  	    out_amount	  => var_invoice_amount
14:34:47 443  	  );
14:34:47 444  	  EXCEPTION
14:34:47 445  	   WHEN OTHERS THEN
14:34:47 446  	     EXCEPTION_MESSAGE := SQLERRM;
14:34:47 447  	     RAISE CAN_NOT_CALC_INVOICE_AMOUNT;
14:34:47 448  	END;
14:34:47 449  
14:34:47 450  	IF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_ZCI_INSTRUMENT
14:34:47 451  	  AND var_invoice_amount > 0 THEN
14:34:47 452  	  RAISE CAN_NOT_USE_FCINSTR;
14:34:47 453  	END IF;
14:34:47 454  
14:34:47 455  	IF var_invoice_amount = 0 THEN
14:34:47 456  	  -- UPDATE INVOICE. SET STATUS TO PROCESSED
14:34:47 457  	  PROCS_INVOICE_CRU_V18.UPDATE_INVOICE(
14:34:47 458  	    in_invoice_id		   => in_invoice_id,
14:34:47 459  	    in_updated_by		   => in_created_by,
14:34:47 460  	    in_invoice_status_id	   => GLOBAL_STATUSES_V18.INVOICE_CLOSED
14:34:47 461  	  );
14:34:47 462  	ELSE
14:34:47 463  	  -- Create transaction and charge
14:34:47 464  	  BEGIN
14:34:47 465  	    PROCS_TRANSACTION_V18.CREATE_TRANSACTION(
14:34:47 466  	      in_transaction_id 	=> NULL,
14:34:47 467  	      in_status_id		=> GLOBAL_STATUSES_V18.TRANSACTION_PENDING,
14:34:47 468  	      in_amount 		=> var_invoice_amount,
14:34:47 469  	      in_created_by		=> in_created_by,
14:34:47 470  	      in_order_id		=> NULL,
14:34:47 471  	      in_transaction_type_code	=> 'START_SUBSCRIPTION',
14:34:47 472  	      out_transaction_id	=> var_new_transaction_id
14:34:47 473  	    );
14:34:47 474  	    EXCEPTION
14:34:47 475  	      WHEN OTHERS THEN
14:34:47 476  		EXCEPTION_MESSAGE := SQLERRM;
14:34:47 477  		RAISE CAN_NOT_CREATE_TRANSACTION;
14:34:47 478  	  END;
14:34:47 479  
14:34:47 480  	  BEGIN
14:34:47 481  	    PROCS_CHARGE_V18.CREATE_CHARGE(
14:34:47 482  	      in_invoice_id	    => in_invoice_id,
14:34:47 483  	      in_transaction_id     => var_new_transaction_id,
14:34:47 484  	      in_instrument_type_id => in_instrument_type_id,
14:34:47 485  	      in_instrument_id	    => in_instrument_id,
14:34:47 486  	      in_charge_amount	    => var_invoice_amount,
14:34:47 487  	      in_created_by	    => in_created_by,
14:34:47 488  	      in_charge_status_id   => GLOBAL_STATUSES_V18.CHARGE_OPENED,
14:34:47 489  	      out_charge_id	    => var_new_charge_id
14:34:47 490  	    );
14:34:47 491  	    EXCEPTION
14:34:47 492  	      WHEN OTHERS THEN
14:34:47 493  		EXCEPTION_MESSAGE := SQLERRM;
14:34:47 494  		RAISE CAN_NOT_CREATE_CHARGE;
14:34:47 495  	  END;
14:34:47 496  	END IF;
14:34:47 497  
14:34:47 498  EXCEPTION
14:34:47 499  WHEN CAN_NOT_USE_FCINSTR THEN
14:34:47 500  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 501  	  SPROC_NAME, 'Could not use "free charge instrument" for non-zero invoice');
14:34:47 502  WHEN CAN_NOT_CALC_INVOICE_AMOUNT THEN
14:34:47 503  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 504  	  SPROC_NAME, 'Could not calculate invoice amount', EXCEPTION_MESSAGE);
14:34:47 505  WHEN CAN_NOT_CREATE_TRANSACTION THEN
14:34:47 506  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 507  	  SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
14:34:47 508  WHEN CAN_NOT_CREATE_CHARGE THEN
14:34:47 509  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 510  	  SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
14:34:47 511  WHEN OTHERS THEN
14:34:47 512  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 513  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 514  END FINALIZE_SUBSCRIPTION_CREATION;
14:34:47 515  
14:34:47 516  /******************************************************************************/
14:34:47 517  
14:34:47 518  PROCEDURE SUSPEND_SUBSCRIPTION(
14:34:47 519  /*
14:34:47 520  Throws exceptions:
14:34:47 521  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 522  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:47 523  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 524  */
14:34:47 525  	  in_subs_id	IN NUMBER,
14:34:47 526  	  in_updated_by IN VARCHAR2
14:34:47 527  ) AS
14:34:47 528  SPROC_NAME		  CONSTANT VARCHAR2(20) := 'SUSPEND_SUBSCRIPTION';
14:34:47 529  var_subscription_status_id  NUMBER;
14:34:47 530  var_license_id		  NUMBER;
14:34:47 531  var_offer_id		  NUMBER;
14:34:47 532  var_license_start_date	  DATE;
14:34:47 533  var_license_end_date	  DATE;
14:34:47 534  
14:34:47 535  var_entitlement_dupration   VARCHAR2(30);
14:34:47 536  var_d_entitlement_dupration NUMBER;
14:34:47 537  
14:34:47 538  var_ym_interval INTERVAL YEAR TO MONTH;
14:34:47 539  var_ds_interval INTERVAL DAY(3) TO SECOND;
14:34:47 540  
14:34:47 541  -- EXCEPTIONS
14:34:47 542  BAD_SUBSCRIPTION_ID     EXCEPTION;
14:34:47 543  BAD_SUBSCRIPTION_STATUS EXCEPTION;
14:34:47 544  NO_LICENSE_FOUND	      EXCEPTION;
14:34:47 545  NO_OFFER_FOUND	      EXCEPTION;
14:34:47 546  EXCEPTION_MESSAGE       VARCHAR2(1024);
14:34:47 547  BEGIN
14:34:47 548  	-- TODO: Finish this prcedure (in Phase II)
14:34:47 549  
14:34:47 550  	-- Get subscription by id. FAULT if no such subscription.
14:34:47 551  	-- begin TX
14:34:47 552  	--   Get for update associated license (subscription.license_id). FAULT if not found.
14:34:47 553  	--   Set status to PROCESSED.
14:34:47 554  	--   updated record.
14:34:47 555  	--   compute days remaining in the subscription: original end_date - today = days_remaining_adjustment
14:34:47 556  	--   new subscription status is SUSPENDED.
14:34:47 557  	--   suspend_date is now.
14:34:47 558  	--   update subscription record.
14:34:47 559  	-- end TX
14:34:47 560  
14:34:47 561  	BEGIN
14:34:47 562  	  SELECT
14:34:47 563  	    SUBSCRIPTION.SUBSCRIPTION_STATUS_ID into var_subscription_status_id
14:34:47 564  	  FROM
14:34:47 565  	    SUBSCRIPTION
14:34:47 566  	  WHERE
14:34:47 567  	    SUBSCRIPTION.ID = in_subs_id;
14:34:47 568  	  EXCEPTION
14:34:47 569  	  WHEN NO_DATA_FOUND THEN
14:34:47 570  	    RAISE BAD_SUBSCRIPTION_ID;
14:34:47 571  	END;
14:34:47 572  
14:34:47 573  	IF var_subscription_status_id != GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE THEN
14:34:47 574  	  RAISE BAD_SUBSCRIPTION_STATUS;
14:34:47 575  	END IF;
14:34:47 576  
14:34:47 577  	BEGIN
14:34:47 578  	  SELECT
14:34:47 579  	    LICENSE.ID,
14:34:47 580  	    LICENSE.OFFER_ID,
14:34:47 581  	    LICENSE.START_DATE
14:34:47 582  	    into
14:34:47 583  	    var_license_id,
14:34:47 584  	    var_offer_id,
14:34:47 585  	    var_license_start_date
14:34:47 586  	  FROM
14:34:47 587  	    LICENSE
14:34:47 588  	  WHERE
14:34:47 589  	    LICENSE.SUBSCRIPTION_ID = in_subs_id
14:34:47 590  	      AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE;
14:34:47 591  	  EXCEPTION
14:34:47 592  	  WHEN NO_DATA_FOUND THEN
14:34:47 593  	    RAISE NO_LICENSE_FOUND;
14:34:47 594  	END;
14:34:47 595  
14:34:47 596  	PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47 597  	  in_license_id        => var_license_id,
14:34:47 598  	  in_updated_by        => in_updated_by,
14:34:47 599  	  in_license_status_id => GLOBAL_STATUSES_V18.LICENSE_CLOSED
14:34:47 600  	);
14:34:47 601  
14:34:47 602  	BEGIN
14:34:47 603  	  SELECT
14:34:47 604  	    OFFER.ENTITLEMENT_DURATION into var_entitlement_dupration
14:34:47 605  	  FROM
14:34:47 606  	    OFFER
14:34:47 607  	  WHERE
14:34:47 608  	    OFFER.ID = var_offer_id;
14:34:47 609  	  EXCEPTION
14:34:47 610  	  WHEN NO_DATA_FOUND THEN
14:34:47 611  	    RAISE NO_OFFER_FOUND;
14:34:47 612  	END;
14:34:47 613  
14:34:47 614  	var_ym_interval := substr(var_entitlement_dupration, 0, 4);
14:34:47 615  	var_ds_interval := substr(var_entitlement_dupration, 4);
14:34:47 616  
14:34:47 617  	var_license_end_date := var_license_start_date + var_ym_interval + var_ds_interval;
14:34:47 618  
14:34:47 619  	var_d_entitlement_dupration := var_license_end_date - current_date;
14:34:47 620  
14:34:47 621  	PROCS_SUBSCRIPTION_CRU_V18.UPDATE_SUBSCRIPTION(
14:34:47 622  	  in_subscription_id	       => in_subs_id,
14:34:47 623  	  in_updated_by 	       => in_updated_by,
14:34:47 624  	  in_suspend_date	       => SYSDATE,
14:34:47 625  	  in_subscription_status_id    => GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED,
14:34:47 626  	  in_days_remainning_ajustment => var_d_entitlement_dupration
14:34:47 627  	);
14:34:47 628  
14:34:47 629  EXCEPTION
14:34:47 630  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 631  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 632  	  SPROC_NAME, 'No such subscription');
14:34:47 633  WHEN BAD_SUBSCRIPTION_STATUS THEN
14:34:47 634  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 635  	  SPROC_NAME, 'Subscription is not active');
14:34:47 636  WHEN NO_LICENSE_FOUND THEN
14:34:47 637  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 638  	  SPROC_NAME, 'Can not find license associated with given subscription ID');
14:34:47 639  WHEN NO_OFFER_FOUND THEN
14:34:47 640  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 641  	  SPROC_NAME, 'Can not find offer associated with given subscription ID');
14:34:47 642  WHEN OTHERS THEN
14:34:47 643  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 644  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 645  END SUSPEND_SUBSCRIPTION;
14:34:47 646  
14:34:47 647  /******************************************************************************/
14:34:47 648  
14:34:47 649  PROCEDURE REACTIVATE_SUBSCRIPTION (
14:34:47 650  	in_subscription_id IN  NUMBER,
14:34:47 651  	in_updated_by	   IN  VARCHAR2
14:34:47 652  ) AS
14:34:47 653  BEGIN
14:34:47 654  	-- TODO: finish this function (in Phase II)
14:34:47 655  	NULL;
14:34:47 656  END REACTIVATE_SUBSCRIPTION;
14:34:47 657  
14:34:47 658  /******************************************************************************/
14:34:47 659  
14:34:47 660  PROCEDURE GET_SUBSCRIPTION_INFO (
14:34:47 661  /*
14:34:47 662  Throws exceptions:
14:34:47 663  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 664  */
14:34:47 665  	  in_subscription_id  IN  NUMBER,
14:34:47 666  	  out_result_set      OUT SYS_REFCURSOR
14:34:47 667  ) AS
14:34:47 668  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_SUBSCRIPTION_INFO';
14:34:47 669  -- VARIABLES
14:34:47 670  temp_subscription_id NUMBER;
14:34:47 671  -- EXCEPTIONS
14:34:47 672  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 673  BEGIN
14:34:47 674  	-- Find subscription by id
14:34:47 675  	-- Return its details
14:34:47 676  
14:34:47 677  	BEGIN
14:34:47 678  	  SELECT
14:34:47 679  	    SUBSCRIPTION.ID into temp_subscription_id
14:34:47 680  	  FROM
14:34:47 681  	    SUBSCRIPTION
14:34:47 682  	  WHERE
14:34:47 683  	    SUBSCRIPTION.ID = in_subscription_id;
14:34:47 684  	  EXCEPTION
14:34:47 685  	    WHEN NO_DATA_FOUND THEN
14:34:47 686  	      RAISE BAD_SUBSCRIPTION_ID;
14:34:47 687  	END;
14:34:47 688  
14:34:47 689  	OPEN out_result_set FOR
14:34:47 690  	SELECT
14:34:47 691  	  SUBSCRIPTION.ID AS "SUBSCRIPTION_ID",
14:34:47 692  	  SUBSCRIPTION.SUBSCRIPTION_STATUS_ID,
14:34:47 693  	  SUBSCRIPTION.PURCHASE_DATE,
14:34:47 694  	  SUBSCRIPTION.SUSPEND_DATE,
14:34:47 695  	  SUBSCRIPTION.REACTIVATION_DATE,
14:34:47 696  	  SUBSCRIPTION.CANCELLATION_DATE,
14:34:47 697  	  SUBSCRIPTION_CANCEL_REASON.VALUE as "CANCEL_TYPE",
14:34:47 698  	  OFFER_CHAIN.ID AS "OFFER_CHAIN_ID",
14:34:47 699  	  OFFER_CHAIN.NAME,
14:34:47 700  	  OFFER_CHAIN.DESCRIPTION,
14:34:47 701  	  OFFER_CHAIN.PRODUCT_URI,
14:34:47 702  	  SUBSCRIPTION.INSTRUMENT_ID,
14:34:47 703  	  SUBSCRIPTION.INSTRUMENT_TYPE_ID,
14:34:47 704  	  PROCS_SUBSCRIPTION_V18.CALC_SUBSCRIPTION_END_DATE(SUBSCRIPTION.ID) as "END_DATE",
14:34:47 705  	  PROCS_SUBSCRIPTION_V18.GET_RECENT_CHARGE(SUBSCRIPTION.ID) AS "RECENT_CHARGE",
14:34:47 706  	  PROCS_SUBSCRIPTION_V18.GET_RENEWAL_DATE(SUBSCRIPTION.ID) AS "RENEWAL_DATE",
14:34:47 707  	  PROCS_SUBSCRIPTION_V18.GET_BILLING_CYCLE(SUBSCRIPTION.ID) AS "BILLING_CYCLE",
14:34:47 708  	  (
14:34:47 709  	    SELECT
14:34:47 710  	      ACCOUNT.GROUP_ID
14:34:47 711  	      FROM ACCOUNT
14:34:47 712  	      WHERE ACCOUNT.ID = SUBSCRIPTION.ACCOUNT_ID
14:34:47 713  	  ) as "GROUP_ID",
14:34:47 714  	  (
14:34:47 715  	    SELECT
14:34:47 716  	      MAX(ENTITLEMENT_END_DATE)
14:34:47 717  	      FROM LICENSE
14:34:47 718  	      WHERE LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:47 719  	  )
14:34:47 720  	  as "ENT_END_DATE",
14:34:47 721  	  (
14:34:47 722  	    SELECT
14:34:47 723  	      MIN(START_DATE)
14:34:47 724  	      FROM LICENSE
14:34:47 725  	      WHERE LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:47 726  	  )
14:34:47 727  	  as "ENT_START_DATE",
14:34:47 728  	  PROCS_SUBSCRIPTION_V18.IS_SUBSCRIPTION_CANCELABLE(SUBSCRIPTION.ID) AS "IS_CANCELABLE",
14:34:47 729  	  ITUNES_RECEIPT.ID AS "ITUNES_RECEIPT_ID",
14:34:47 730  	  GROUP_ACCOUNT.ID GA_ID,
14:34:47 731  	  GROUP_ACCOUNT.SUBSCRIPTION_ID GA_SUBSCRIPTION_ID,
14:34:47 732  	  GROUP_ACCOUNT.GROUP_NAME GA_GROUP_NAME,
14:34:47 733  	  GROUP_ACCOUNT.FIRST_NAME GA_FIRST_NAME,
14:34:47 734  	  GROUP_ACCOUNT.LAST_NAME GA_LAST_NAME,
14:34:47 735  	  GROUP_ACCOUNT.EMAIL GA_EMAIL,
14:34:47 736  	  GROUP_ACCOUNT.PHONE GA_PHONE,
14:34:47 737  	  GROUP_ACCOUNT.ORGANIZATION_TYPE GA_ORGANIZATION_TYPE,
14:34:47 738  	  GROUP_ACCOUNT.SEATS GA_SEATS,
14:34:47 739  	  PROCS_GROUP_ACCOUNT_V18.F_GET_NUM_OCCUPIED_GROUP_SEATS(GROUP_ACCOUNT.ID) GA_SEATS_USED,
14:34:47 740  	  GROUP_ACCOUNT.IP GA_IP,
14:34:47 741  	  PROCS_SUBSCRIPTION_V18.GET_GIFT_CERT_CODE_BY_SUB_ID(SUBSCRIPTION.ID) gift_certificate_code,
14:34:47 742  	  PROCS_ACCOUNT_V18.GET_GRACE_START_DATE(SUBSCRIPTION.ID) GRACE_START_DATE,
14:34:47 743  	  PROCS_ACCOUNT_V18.GET_GRACE_END_DATE(SUBSCRIPTION.ID) GRACE_END_DATE
14:34:47 744  	FROM
14:34:47 745  	  SUBSCRIPTION
14:34:47 746  	  INNER JOIN OFFER_CHAIN ON SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:47 747  	  LEFT JOIN SUBSCRIPTION_CANCEL_REASON ON SUBSCRIPTION.SCT_ID = SUBSCRIPTION_CANCEL_REASON.ID
14:34:47 748  	  LEFT JOIN ITUNES_RECEIPT ON SUBSCRIPTION.ID = ITUNES_RECEIPT.SUBSCRIPTION_ID
14:34:47 749  	  LEFT JOIN GROUP_ACCOUNT ON SUBSCRIPTION.ID = GROUP_ACCOUNT.SUBSCRIPTION_ID
14:34:47 750  	WHERE
14:34:47 751  	  SUBSCRIPTION.ID = in_subscription_id;
14:34:47 752  
14:34:47 753  EXCEPTION
14:34:47 754  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 755  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 756  	  SPROC_NAME, 'No such subscription');
14:34:47 757  WHEN OTHERS THEN
14:34:47 758  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 759  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 760  END GET_SUBSCRIPTION_INFO;
14:34:47 761  
14:34:47 762  /******************************************************************************/
14:34:47 763  
14:34:47 764  PROCEDURE GET_SUBSCRIPTION_INVOICES (
14:34:47 765  /*
14:34:47 766  Throws exceptions:
14:34:47 767  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 768  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 769  */
14:34:47 770  	in_subscription_id  IN	NUMBER,
14:34:47 771  	out_result_set	    OUT SYS_REFCURSOR
14:34:47 772  ) AS
14:34:47 773  SPROC_NAME	   CONSTANT VARCHAR2(25) := 'GET_SUBSCRIPTION_INVOICES';
14:34:47 774  temp_subscription_id NUMBER;
14:34:47 775  BEGIN
14:34:47 776  	-- Note: A subscription has one or more associated licenses, each of which has an associated invoice.
14:34:47 777  	-- Find associated LICENSES for the subscription by "LICENSE.subscription_id"
14:34:47 778  	--   for each license
14:34:47 779  	--     get associated invoice
14:34:47 780  	--     add to results list
14:34:47 781  	--   end loop
14:34:47 782  	-- end
14:34:47 783  
14:34:47 784  	SELECT
14:34:47 785  	  SUBSCRIPTION.ID into temp_subscription_id
14:34:47 786  	FROM
14:34:47 787  	  SUBSCRIPTION
14:34:47 788  	WHERE
14:34:47 789  	  SUBSCRIPTION.ID = in_subscription_id;
14:34:47 790  
14:34:47 791  	OPEN out_result_set FOR
14:34:47 792  	SELECT
14:34:47 793  	  INVOICE.ID,
14:34:47 794  	  INVOICE.INVOICE_STATUS_ID,
14:34:47 795  	  INVOICE.CREATE_DATE,
14:34:47 796  	  INVOICE.CREATED_BY,
14:34:47 797  	  INVOICE.UPDATE_DATE,
14:34:47 798  	  INVOICE.UPDATED_BY,
14:34:47 799  	  INVOICE.TAX_EXEMPT_ID
14:34:47 800  	FROM
14:34:47 801  	  LICENSE
14:34:47 802  	    INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
14:34:47 803  	WHERE
14:34:47 804  	  LICENSE.SUBSCRIPTION_ID = in_subscription_id;
14:34:47 805  
14:34:47 806  EXCEPTION
14:34:47 807  WHEN NO_DATA_FOUND THEN
14:34:47 808  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 809  	  SPROC_NAME, 'Could not find subscription with given ID');
14:34:47 810  WHEN OTHERS THEN
14:34:47 811  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 812  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 813  END GET_SUBSCRIPTION_INVOICES;
14:34:47 814  
14:34:47 815  /******************************************************************************/
14:34:47 816  
14:34:47 817  PROCEDURE GET_SUBSCRIPTION_NOTES (
14:34:47 818  /*
14:34:47 819  Throws exceptions:
14:34:47 820  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 821  */
14:34:47 822  	in_subscription_id  IN	NUMBER,
14:34:47 823  	out_result_set	    OUT SYS_REFCURSOR
14:34:47 824  ) AS
14:34:47 825  -- VARIABLES
14:34:47 826  SPROC_NAME	   CONSTANT VARCHAR2(22) := 'GET_SUBSCRIPTION_NOTES';
14:34:47 827  temp_subscription_id NUMBER;
14:34:47 828  -- EXCEPTIONS
14:34:47 829  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 830  BEGIN
14:34:47 831  
14:34:47 832  	-- Check that subscription exists
14:34:47 833  	BEGIN
14:34:47 834  	  SELECT
14:34:47 835  	    SUBSCRIPTION.ID into temp_subscription_id
14:34:47 836  	  FROM
14:34:47 837  	    SUBSCRIPTION
14:34:47 838  	  WHERE
14:34:47 839  	    SUBSCRIPTION.ID = in_subscription_id;
14:34:47 840  	  EXCEPTION
14:34:47 841  	    WHEN NO_DATA_FOUND THEN
14:34:47 842  	      RAISE BAD_SUBSCRIPTION_ID;
14:34:47 843  	END;
14:34:47 844  
14:34:47 845  	OPEN out_result_set FOR
14:34:47 846  	SELECT
14:34:47 847  	  SUBSCRIPTION_NOTE.NOTE,
14:34:47 848  	  SUBSCRIPTION_NOTE.CREATED_BY,
14:34:47 849  	  SUBSCRIPTION_NOTE.CREATE_DATE
14:34:47 850  	FROM
14:34:47 851  	  SUBSCRIPTION_NOTE
14:34:47 852  	WHERE
14:34:47 853  	  SUBSCRIPTION_NOTE.SUBSCRIPTION_ID = in_subscription_id
14:34:47 854  	ORDER BY
14:34:47 855  	  SUBSCRIPTION_NOTE.CREATE_DATE ASC;
14:34:47 856  
14:34:47 857  EXCEPTION
14:34:47 858  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 859  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 860  	  SPROC_NAME, 'No such subscription');
14:34:47 861  WHEN OTHERS THEN
14:34:47 862  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 863  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 864  END GET_SUBSCRIPTION_NOTES;
14:34:47 865  
14:34:47 866  /******************************************************************************/
14:34:47 867  
14:34:47 868  PROCEDURE ANNOTATE_SUBSCRIPTION (
14:34:47 869  /*
14:34:47 870  Throws exceptions:
14:34:47 871  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 872  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 873  */
14:34:47 874  	in_subscription_id IN  NUMBER,
14:34:47 875  	in_agent_id	   IN  NUMBER,
14:34:47 876  	in_note 	   IN  VARCHAR2,
14:34:47 877  	in_created_by	   IN  VARCHAR2
14:34:47 878  ) AS
14:34:47 879  -- VARIABLES
14:34:47 880  SPROC_NAME	       CONSTANT VARCHAR2(21) := 'ANNOTATE_SUBSCRIPTION';
14:34:47 881  temp_subscription_id     NUMBER;
14:34:47 882  var_subscription_note_id NUMBER;
14:34:47 883  -- EXCEPTIONS
14:34:47 884  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 885  BEGIN
14:34:47 886  
14:34:47 887  	-- Check that subscription exists
14:34:47 888  	BEGIN
14:34:47 889  	  SELECT
14:34:47 890  	    SUBSCRIPTION.ID into temp_subscription_id
14:34:47 891  	  FROM
14:34:47 892  	    SUBSCRIPTION
14:34:47 893  	  WHERE
14:34:47 894  	    SUBSCRIPTION.ID = in_subscription_id;
14:34:47 895  	  EXCEPTION
14:34:47 896  	    WHEN NO_DATA_FOUND THEN
14:34:47 897  	      RAISE BAD_SUBSCRIPTION_ID;
14:34:47 898  	END;
14:34:47 899  
14:34:47 900  	PROCS_SUBSCRIPTION_CRU_V18.CREATE_SUBSCRIPTION_NOTE(
14:34:47 901  	  inout_subscription_note_id => var_subscription_note_id,
14:34:47 902  	  in_agent_id		     => in_agent_id,
14:34:47 903  	  in_subscription_id	     => in_subscription_id,
14:34:47 904  	  in_note		     => in_note,
14:34:47 905  	  in_created_by 	     => in_created_by
14:34:47 906  	);
14:34:47 907  
14:34:47 908  EXCEPTION
14:34:47 909  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 910  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 911  	  SPROC_NAME, 'No such subscription');
14:34:47 912  WHEN OTHERS THEN
14:34:47 913  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 914  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 915  END ANNOTATE_SUBSCRIPTION;
14:34:47 916  
14:34:47 917  /******************************************************************************/
14:34:47 918  
14:34:47 919  PROCEDURE GET_CANCEL_REASONS (
14:34:47 920  	out_result_set	  OUT SYS_REFCURSOR
14:34:47 921  ) AS
14:34:47 922  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_CANCEL_REASONS';
14:34:47 923  BEGIN
14:34:47 924  	OPEN out_result_set FOR
14:34:47 925  	SELECT
14:34:47 926  	  SUBSCRIPTION_CANCEL_REASON.ID,
14:34:47 927  	  SUBSCRIPTION_CANCEL_REASON.VALUE,
14:34:47 928  	  SUBSCRIPTION_CANCEL_REASON.DESCRIPTION,
14:34:47 929  	  SUBSCRIPTION_CANCEL_REASON.CANCELATION_STATUS_ID AS STATUS_ID
14:34:47 930  	FROM
14:34:47 931  	  SUBSCRIPTION_CANCEL_REASON;
14:34:47 932  
14:34:47 933  END GET_CANCEL_REASONS;
14:34:47 934  
14:34:47 935  /******************************************************************************/
14:34:47 936  
14:34:47 937  FUNCTION GET_RENEWAL_DATE (
14:34:47 938  /*
14:34:47 939  Throws exceptions:
14:34:47 940  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 941  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 942  */
14:34:47 943  	in_subscription_id in NUMBER
14:34:47 944  ) RETURN DATE AS
14:34:47 945  -- VARIABLES
14:34:47 946  SPROC_NAME	      CONSTANT VARCHAR2(16) := 'GET_RENEWAL_DATE';
14:34:47 947  var_subscription_status NUMBER;
14:34:47 948  var_licenses_count      NUMBER;
14:34:47 949  var_license_end_date    DATE;
14:34:47 950  var_last_offer_id       NUMBER;
14:34:47 951  var_offer_chain_id      NUMBER;
14:34:47 952  var_last_license_id     NUMBER;
14:34:47 953  var_current_offer_index NUMBER;
14:34:47 954  var_current_offer_recurr_num NUMBER;
14:34:47 955  var_offer_recurr_num    NUMBER;
14:34:47 956  -- EXCEPTIONS
14:34:47 957  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 958  NO_LICENSES_FOUND EXCEPTION;
14:34:47 959  BEGIN
14:34:47 960  
14:34:47 961  	-- Get subscription id and offer chain id
14:34:47 962  	BEGIN
14:34:47 963  	  SELECT
14:34:47 964  	    SUBSCRIPTION.SUBSCRIPTION_STATUS_ID,
14:34:47 965  	    SUBSCRIPTION.OFFER_CHAIN_ID
14:34:47 966  	    into
14:34:47 967  	    var_subscription_status,
14:34:47 968  	    var_offer_chain_id
14:34:47 969  	  FROM
14:34:47 970  	    SUBSCRIPTION
14:34:47 971  	  WHERE
14:34:47 972  	    SUBSCRIPTION.ID = in_subscription_id;
14:34:47 973  	  EXCEPTION
14:34:47 974  	    WHEN NO_DATA_FOUND THEN
14:34:47 975  	      RAISE BAD_SUBSCRIPTION_ID;
14:34:47 976  	END;
14:34:47 977  
14:34:47 978  	IF var_subscription_status != GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE THEN
14:34:47 979  	  -- TODO: Is suspended subscription has renewal date? (For the phase II)
14:34:47 980  	  -- AND var_subscription_status != GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED THEN
14:34:47 981  	  RETURN NULL;
14:34:47 982  	END IF;
14:34:47 983  
14:34:47 984  	BEGIN
14:34:47 985  	  SELECT
14:34:47 986  	    LICENSE_ID,
14:34:47 987  	    END_DATE,
14:34:47 988  	    OFFER_ID,
14:34:47 989  	    CURRENT_OFFER_INDEX,
14:34:47 990  	    CURRENT_OFFER_RECURR_NUM
14:34:47 991  	    into
14:34:47 992  	    var_last_license_id,
14:34:47 993  	    var_license_end_date,
14:34:47 994  	    var_last_offer_id,
14:34:47 995  	    var_current_offer_index,
14:34:47 996  	    var_current_offer_recurr_num
14:34:47 997  	  FROM
14:34:47 998  	    (
14:34:47 999  	      SELECT
14:34:47 1000  		 LICENSE.ID as "LICENSE_ID",
14:34:47 1001  		 LICENSE.END_DATE,
14:34:47 1002  		 LICENSE.OFFER_ID,
14:34:47 1003  		 LICENSE.CURRENT_OFFER_INDEX,
14:34:47 1004  		 LICENSE.CURRENT_OFFER_RECURR_NUM
14:34:47 1005  	       FROM
14:34:47 1006  		 LICENSE
14:34:47 1007  	       WHERE
14:34:47 1008  		 LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 1009  		 AND LICENSE.SUBSCRIPTION_ID = in_subscription_id
14:34:47 1010  	       ORDER BY END_DATE DESC
14:34:47 1011  	     )
14:34:47 1012  	     INNER JOIN OFFER ON OFFER_ID = OFFER.ID
14:34:47 1013  	   WHERE
14:34:47 1014  	     ROWNUM <= 1;
14:34:47 1015  
14:34:47 1016  	   EXCEPTION
14:34:47 1017  	     WHEN NO_DATA_FOUND THEN
14:34:47 1018  	       -- RAISE NO_LICENSES_FOUND;
14:34:47 1019  	       RETURN NULL;
14:34:47 1020  	 END;
14:34:47 1021  
14:34:47 1022  	 SELECT
14:34:47 1023  	   OFFER_OFFER_CHAIN.NUM_RECURRENCES into var_offer_recurr_num
14:34:47 1024  	 FROM
14:34:47 1025  	   OFFER_OFFER_CHAIN
14:34:47 1026  	 WHERE
14:34:47 1027  	   OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
14:34:47 1028  	   AND OFFER_OFFER_CHAIN.OFFER_ID = var_last_offer_id;
14:34:47 1029  
14:34:47 1030  	 IF PROCS_OFFER_CHAIN_V18.GET_NEXT_OFFER_INDEX(var_offer_chain_id, var_current_offer_index) IS NULL
14:34:47 1031  	   AND var_offer_recurr_num = var_current_offer_recurr_num THEN
14:34:47 1032  	   -- There is no next offer for this subscription
14:34:47 1033  	   RETURN NULL;
14:34:47 1034  	 END IF;
14:34:47 1035  
14:34:47 1036  	 RETURN var_license_end_date;
14:34:47 1037  
14:34:47 1038  EXCEPTION
14:34:47 1039  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 1040  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1041  	   SPROC_NAME, 'No such subscription');
14:34:47 1042  WHEN NO_LICENSES_FOUND THEN
14:34:47 1043  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1044  	   SPROC_NAME, 'No licenses found');
14:34:47 1045  WHEN OTHERS THEN
14:34:47 1046  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1047  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1048  END GET_RENEWAL_DATE;
14:34:47 1049  
14:34:47 1050  /******************************************************************************/
14:34:47 1051  
14:34:47 1052  FUNCTION GET_RECENT_CHARGE (
14:34:47 1053  /*
14:34:47 1054  Throws exceptions:
14:34:47 1055  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 1056  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 1057  */
14:34:47 1058  	 in_subscription_id IN NUMBER
14:34:47 1059  ) RETURN NUMBER AS
14:34:47 1060  -- VARIABLES
14:34:47 1061  SPROC_NAME	    CONSTANT VARCHAR2(17) := 'GET_RECENT_CHARGE';
14:34:47 1062  temp_subscription_id NUMBER;
14:34:47 1063  var_recent_charge    NUMBER(10,2);
14:34:47 1064  
14:34:47 1065  -- EXCEPTIONS
14:34:47 1066  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 1067  BEGIN
14:34:47 1068  
14:34:47 1069  	 BEGIN
14:34:47 1070  	   SELECT
14:34:47 1071  	     SUBSCRIPTION.ID into temp_subscription_id
14:34:47 1072  	   FROM
14:34:47 1073  	     SUBSCRIPTION
14:34:47 1074  	   WHERE
14:34:47 1075  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 1076  	   EXCEPTION
14:34:47 1077  	     WHEN NO_DATA_FOUND THEN
14:34:47 1078  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 1079  	 END;
14:34:47 1080  
14:34:47 1081  	 BEGIN
14:34:47 1082  	   SELECT
14:34:47 1083  	     CHARGE.CHARGE_AMOUNT into var_recent_charge
14:34:47 1084  	   FROM
14:34:47 1085  	     LICENSE
14:34:47 1086  	     INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:47 1087  	     INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
14:34:47 1088  	     INNER JOIN CHARGE ON CHARGE.INVOICE_ID = INVOICE.ID
14:34:47 1089  	   WHERE
14:34:47 1090  	     -- TODO: Review
14:34:47 1091  	     -- LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_PROCESSED
14:34:47 1092  	     -- AND
14:34:47 1093  	     SUBSCRIPTION.ID = in_subscription_id
14:34:47 1094  	     AND CHARGE.CHARGE_AMOUNT >= 0
14:34:47 1095  	     AND ROWNUM <= 1
14:34:47 1096  	   ORDER BY
14:34:47 1097  	     LICENSE.ID ASC, CHARGE.ID DESC;
14:34:47 1098  	   EXCEPTION
14:34:47 1099  	     WHEN NO_DATA_FOUND THEN
14:34:47 1100  	       var_recent_charge := 0;
14:34:47 1101  	 END;
14:34:47 1102  
14:34:47 1103  	 RETURN var_recent_charge;
14:34:47 1104  
14:34:47 1105  EXCEPTION
14:34:47 1106  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 1107  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1108  	   SPROC_NAME, 'No such subscription');
14:34:47 1109  WHEN OTHERS THEN
14:34:47 1110  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1111  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1112  END GET_RECENT_CHARGE;
14:34:47 1113  
14:34:47 1114  /******************************************************************************/
14:34:47 1115  
14:34:47 1116  FUNCTION GET_BILLING_CYCLE (
14:34:47 1117  	 in_subscription_id IN NUMBER
14:34:47 1118  ) RETURN VARCHAR2 AS
14:34:47 1119  -- VARIABLES
14:34:47 1120  SPROC_NAME	    CONSTANT VARCHAR2(17) := 'GET_BILLING_CYCLE';
14:34:47 1121  temp_subscription_id NUMBER;
14:34:47 1122  var_offer_duration   VARCHAR2(30);
14:34:47 1123  
14:34:47 1124  -- EXCEPTIONS
14:34:47 1125  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 1126  BEGIN
14:34:47 1127  
14:34:47 1128  	 BEGIN
14:34:47 1129  	   SELECT
14:34:47 1130  	     SUBSCRIPTION.ID into temp_subscription_id
14:34:47 1131  	   FROM
14:34:47 1132  	     SUBSCRIPTION
14:34:47 1133  	   WHERE
14:34:47 1134  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 1135  	   EXCEPTION
14:34:47 1136  	     WHEN NO_DATA_FOUND THEN
14:34:47 1137  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 1138  	 END;
14:34:47 1139  
14:34:47 1140  	 SELECT
14:34:47 1141  	   OFFER.ENTITLEMENT_DURATION into var_offer_duration
14:34:47 1142  	 FROM
14:34:47 1143  	   LICENSE
14:34:47 1144  	   INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:47 1145  	   INNER JOIN OFFER ON LICENSE.OFFER_ID = OFFER.ID
14:34:47 1146  	 WHERE
14:34:47 1147  	   --LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_PROCESSED
14:34:47 1148  	   --AND
14:34:47 1149  	   SUBSCRIPTION.ID = in_subscription_id
14:34:47 1150  	   AND ROWNUM <= 1
14:34:47 1151  	 ORDER BY
14:34:47 1152  	   LICENSE.ID ASC;
14:34:47 1153  
14:34:47 1154  	 RETURN var_offer_duration;
14:34:47 1155  
14:34:47 1156  EXCEPTION
14:34:47 1157  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 1158  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1159  	   SPROC_NAME, 'No such subscription');
14:34:47 1160  WHEN OTHERS THEN
14:34:47 1161  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1162  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1163  END GET_BILLING_CYCLE;
14:34:47 1164  
14:34:47 1165  /******************************************************************************/
14:34:47 1166  
14:34:47 1167  PROCEDURE REFUND_SUBSCRIPTION (
14:34:47 1168  /*
14:34:47 1169  Throws exceptions:
14:34:47 1170  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 1171  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 1172  */
14:34:47 1173  	 in_subscription_id IN NUMBER,
14:34:47 1174  	 in_invoice_id	    IN NUMBER,
14:34:47 1175  	 in_refund_amount   IN NUMBER,
14:34:47 1176  	 in_note	    IN VARCHAR2,
14:34:47 1177  	 in_created_by	    IN VARCHAR2,
14:34:47 1178  	 out_charge_id	    OUT NUMBER
14:34:47 1179  ) AS
14:34:47 1180  -- VARIABLES
14:34:47 1181  SPROC_NAME	      CONSTANT VARCHAR2(19) := 'REFUND_SUBSCRIPTION';
14:34:47 1182  var_invoice_status_id  NUMBER;
14:34:47 1183  var_account_id	      NUMBER;
14:34:47 1184  var_account_status_id  NUMBER;
14:34:47 1185  var_new_transaction_id NUMBER;
14:34:47 1186  var_instrument_type_id NUMBER;
14:34:47 1187  var_instrument_id      NUMBER;
14:34:47 1188  var_new_charge_id      NUMBER;
14:34:47 1189  var_invoice_amount     NUMBER(10,2);
14:34:47 1190  var_refunds_before     NUMBER(10,2);
14:34:47 1191  var_charges_amount     NUMBER(10,2);
14:34:47 1192  -- EXCEPTIONS
14:34:47 1193  BAD_SUBSCRIPTION_ID	     EXCEPTION;
14:34:47 1194  ACCOUNT_IS_FROZEN	     EXCEPTION;
14:34:47 1195  BAD_INVOICE_ID		     EXCEPTION;
14:34:47 1196  CAN_NOT_CREATE_TRANSACTION    EXCEPTION;
14:34:47 1197  CAN_NOT_CREATE_CHARGE	     EXCEPTION;
14:34:47 1198  CAN_NOT_CALC_INVOICE_AMOUNT   EXCEPTION;
14:34:47 1199  REFUND_IS_GREATER_THAN_ANOUNT EXCEPTION;
14:34:47 1200  CAN_NOT_ANNOTATE_SUBSCRIPTION EXCEPTION;
14:34:47 1201  TOT_REF_IS_GREATER_THAN_ANOUNT EXCEPTION;
14:34:47 1202  INVOICE_IS_NOT_CLOSED	     EXCEPTION;
14:34:47 1203  TOT_REF_IS_GRATER_THAN_CHARGES EXCEPTION;
14:34:47 1204  EXCEPTION_MESSAGE	      VARCHAR2(1024);
14:34:47 1205  BEGIN
14:34:47 1206  
14:34:47 1207  	 BEGIN
14:34:47 1208  	   SELECT
14:34:47 1209  	     SUBSCRIPTION.INSTRUMENT_ID,
14:34:47 1210  	     SUBSCRIPTION.INSTRUMENT_TYPE_ID,
14:34:47 1211  	     SUBSCRIPTION.ACCOUNT_ID
14:34:47 1212  	     into
14:34:47 1213  	     var_instrument_id,
14:34:47 1214  	     var_instrument_type_id,
14:34:47 1215  	     var_account_id
14:34:47 1216  	   FROM
14:34:47 1217  	     SUBSCRIPTION
14:34:47 1218  	   WHERE
14:34:47 1219  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 1220  	   EXCEPTION
14:34:47 1221  	     WHEN NO_DATA_FOUND THEN
14:34:47 1222  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 1223  	 END;
14:34:47 1224  
14:34:47 1225  	 -- Check account status. It should not to be frozen
14:34:47 1226  	 SELECT
14:34:47 1227  	   ACCOUNT.ACCOUNT_STATUS_ID into var_account_status_id
14:34:47 1228  	 FROM
14:34:47 1229  	   ACCOUNT
14:34:47 1230  	 WHERE
14:34:47 1231  	   ACCOUNT.ID = var_account_id;
14:34:47 1232  
14:34:47 1233  	 IF var_account_status_id = GLOBAL_STATUSES_V18.ACCOUNT_FROZEN THEN
14:34:47 1234  	   RAISE ACCOUNT_IS_FROZEN;
14:34:47 1235  	 END IF;
14:34:47 1236  
14:34:47 1237  	 BEGIN
14:34:47 1238  	   SELECT
14:34:47 1239  	     INVOICE.INVOICE_STATUS_ID into var_invoice_status_id
14:34:47 1240  	   FROM
14:34:47 1241  	     INVOICE
14:34:47 1242  	   WHERE
14:34:47 1243  	     INVOICE.ID = in_invoice_id;
14:34:47 1244  	   EXCEPTION
14:34:47 1245  	     WHEN NO_DATA_FOUND THEN
14:34:47 1246  	       RAISE BAD_INVOICE_ID;
14:34:47 1247  	 END;
14:34:47 1248  
14:34:47 1249  	 IF var_invoice_status_id != GLOBAL_STATUSES_V18.INVOICE_CLOSED THEN
14:34:47 1250  	   RAISE INVOICE_IS_NOT_CLOSED;
14:34:47 1251  	 END IF;
14:34:47 1252  
14:34:47 1253  	 BEGIN
14:34:47 1254  	   PROCS_INVOICE_V18.CALCULATE_INVOICE_AMOUNT (
14:34:47 1255  	     in_invoice_id => in_invoice_id,
14:34:47 1256  	     out_amount    => var_invoice_amount
14:34:47 1257  	   );
14:34:47 1258  	   EXCEPTION
14:34:47 1259  	     WHEN OTHERS THEN
14:34:47 1260  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1261  	       RAISE CAN_NOT_CALC_INVOICE_AMOUNT;
14:34:47 1262  	 END;
14:34:47 1263  
14:34:47 1264  	 IF ( in_refund_amount > var_invoice_amount ) THEN
14:34:47 1265  	   RAISE REFUND_IS_GREATER_THAN_ANOUNT;
14:34:47 1266  	 END IF;
14:34:47 1267  
14:34:47 1268  	 SELECT /*+ STAR_TRANSFORMATION */
14:34:47 1269  	   SUM(CHARGE.CHARGE_AMOUNT) into var_refunds_before
14:34:47 1270  	 FROM
14:34:47 1271  	   CHARGE
14:34:47 1272  	 WHERE
14:34:47 1273  	   CHARGE.INVOICE_ID = in_invoice_id
14:34:47 1274  	   AND (
14:34:47 1275  	     CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_OPENED
14:34:47 1276  	     OR CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_PROCESSED
14:34:47 1277  	   )
14:34:47 1278  	   AND CHARGE.CHARGE_AMOUNT < 0;
14:34:47 1279  
14:34:47 1280  	 -- Refunds are negative
14:34:47 1281  	 var_refunds_before := -var_refunds_before;
14:34:47 1282  
14:34:47 1283  	 var_charges_amount := 0;
14:34:47 1284  
14:34:47 1285  	 FOR f_processed_charges IN (
14:34:47 1286  	   SELECT
14:34:47 1287  	     CHARGE.CHARGE_AMOUNT
14:34:47 1288  	   FROM
14:34:47 1289  	     CHARGE
14:34:47 1290  	   WHERE
14:34:47 1291  	     CHARGE.INVOICE_ID = in_invoice_id
14:34:47 1292  	     AND CHARGE.CHARGE_STATUS_ID IN (SELECT GLOBAL_STATUSES_V18.CHARGE_PROCESSED FROM DUAL)
14:34:47 1293  	 )
14:34:47 1294  	 LOOP
14:34:47 1295  	   IF f_processed_charges.CHARGE_AMOUNT > 0 THEN
14:34:47 1296  	     var_charges_amount := var_charges_amount + f_processed_charges.CHARGE_AMOUNT;
14:34:47 1297  	   END IF;
14:34:47 1298  	 END LOOP;
14:34:47 1299  
14:34:47 1300  	 IF (in_refund_amount + var_refunds_before > var_invoice_amount) THEN
14:34:47 1301  	   RAISE TOT_REF_IS_GREATER_THAN_ANOUNT;
14:34:47 1302  	 END IF;
14:34:47 1303  
14:34:47 1304  	 IF (in_refund_amount + var_refunds_before > var_charges_amount) THEN
14:34:47 1305  	   RAISE TOT_REF_IS_GRATER_THAN_CHARGES;
14:34:47 1306  	 END IF;
14:34:47 1307  
14:34:47 1308  	 BEGIN
14:34:47 1309  	   PROCS_TRANSACTION_V18.CREATE_TRANSACTION(
14:34:47 1310  	     in_transaction_id	       => NULL,
14:34:47 1311  	     in_status_id	       => GLOBAL_STATUSES_V18.TRANSACTION_PREPARE,
14:34:47 1312  	     in_amount		       => -in_refund_amount,
14:34:47 1313  	     in_created_by	       => in_created_by,
14:34:47 1314  	     in_order_id	       => NULL,
14:34:47 1315  	     in_is_refund	       => GLOBAL_CONSTANTS_V18.TRUE,
14:34:47 1316  	     in_transaction_type_code  => 'REFUND',
14:34:47 1317  	     out_transaction_id        => var_new_transaction_id
14:34:47 1318  	   );
14:34:47 1319  	   EXCEPTION
14:34:47 1320  	     WHEN OTHERS THEN
14:34:47 1321  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1322  	       RAISE CAN_NOT_CREATE_TRANSACTION;
14:34:47 1323  	 END;
14:34:47 1324  
14:34:47 1325  	 BEGIN
14:34:47 1326  	   PROCS_CHARGE_V18.CREATE_CHARGE(
14:34:47 1327  	     in_invoice_id	   => in_invoice_id,
14:34:47 1328  	     in_transaction_id	   => var_new_transaction_id,
14:34:47 1329  	     in_instrument_type_id => var_instrument_type_id,
14:34:47 1330  	     in_instrument_id	   => var_instrument_id,
14:34:47 1331  	     in_charge_amount	   => -in_refund_amount,
14:34:47 1332  	     in_created_by	   => in_created_by,
14:34:47 1333  	     in_charge_status_id   => GLOBAL_STATUSES_V18.CHARGE_OPENED,
14:34:47 1334  	     out_charge_id	   => var_new_charge_id
14:34:47 1335  	   );
14:34:47 1336  	   EXCEPTION
14:34:47 1337  	     WHEN OTHERS THEN
14:34:47 1338  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1339  	       RAISE CAN_NOT_CREATE_CHARGE;
14:34:47 1340  	 END;
14:34:47 1341  
14:34:47 1342  	 IF in_note IS NOT NULL THEN
14:34:47 1343  	   BEGIN
14:34:47 1344  	     PROCS_SUBSCRIPTION_V18.ANNOTATE_SUBSCRIPTION(
14:34:47 1345  	       in_subscription_id => in_subscription_id,
14:34:47 1346  	       in_agent_id	  => 0, -- AGENT_ID??
14:34:47 1347  	       in_note		  => in_note,
14:34:47 1348  	       in_created_by	  => in_created_by
14:34:47 1349  	     );
14:34:47 1350  	     EXCEPTION
14:34:47 1351  	       WHEN OTHERS THEN
14:34:47 1352  		 EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1353  		 RAISE CAN_NOT_ANNOTATE_SUBSCRIPTION;
14:34:47 1354  	   END;
14:34:47 1355  	 END IF;
14:34:47 1356  
14:34:47 1357  	 out_charge_id := var_new_charge_id;
14:34:47 1358  
14:34:47 1359  EXCEPTION
14:34:47 1360  WHEN INVOICE_IS_NOT_CLOSED THEN
14:34:47 1361  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 1362  	   SPROC_NAME, 'Invoice is not closed');
14:34:47 1363  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 1364  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1365  	   SPROC_NAME, 'No such subscription');
14:34:47 1366  WHEN ACCOUNT_IS_FROZEN THEN
14:34:47 1367  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 1368  	   SPROC_NAME, 'Could not refund subscription for frozen account');
14:34:47 1369  WHEN BAD_INVOICE_ID THEN
14:34:47 1370  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1371  	   SPROC_NAME, 'No such invoice');
14:34:47 1372  WHEN CAN_NOT_CALC_INVOICE_AMOUNT THEN
14:34:47 1373  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1374  	   SPROC_NAME, 'Could not calculate invoice amount', EXCEPTION_MESSAGE);
14:34:47 1375  WHEN REFUND_IS_GREATER_THAN_ANOUNT THEN
14:34:47 1376  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 1377  	   SPROC_NAME, 'Refund is greater than amount');
14:34:47 1378  WHEN TOT_REF_IS_GREATER_THAN_ANOUNT THEN
14:34:47 1379  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 1380  	   SPROC_NAME, 'There were refunds before and sum of all refunds and new refund more than invoice amount');
14:34:47 1381  WHEN TOT_REF_IS_GRATER_THAN_CHARGES THEN
14:34:47 1382  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 1383  	   SPROC_NAME, 'Total refund amount is greater than sum of processed charges');
14:34:47 1384  WHEN CAN_NOT_CREATE_TRANSACTION THEN
14:34:47 1385  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1386  	   SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
14:34:47 1387  WHEN CAN_NOT_CREATE_CHARGE THEN
14:34:47 1388  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1389  	   SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
14:34:47 1390  WHEN CAN_NOT_ANNOTATE_SUBSCRIPTION THEN
14:34:47 1391  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1392  	   SPROC_NAME, 'Could not annotate subscription', EXCEPTION_MESSAGE);
14:34:47 1393  WHEN OTHERS THEN
14:34:47 1394  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1395  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1396  END REFUND_SUBSCRIPTION;
14:34:47 1397  
14:34:47 1398  /******************************************************************************/
14:34:47 1399  
14:34:47 1400  PROCEDURE ADD_SUBSCRIPTION_EXTENSION (
14:34:47 1401  /*
14:34:47 1402  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 1403  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:47 1404  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 1405  */
14:34:47 1406  	 in_subscription_id	 IN NUMBER,
14:34:47 1407  	 in_effective_start_date IN DATE,
14:34:47 1408  	 in_effective_end_date	 IN DATE,
14:34:47 1409  	 in_note		 IN VARCHAR2,
14:34:47 1410  	 in_updated_by		 IN VARCHAR2
14:34:47 1411  ) AS
14:34:47 1412  -- VARIABLES
14:34:47 1413  SPROC_NAME		    CONSTANT VARCHAR2(26) := 'ADD_SUBSCRIPTION_EXTENSION';
14:34:47 1414  temp_subscription_id	    NUMBER;
14:34:47 1415  var_current_license_id	    NUMBER;
14:34:47 1416  var_current_license_start_date DATE;
14:34:47 1417  var_current_license_end_date DATE;
14:34:47 1418  var_current_offer_id	    NUMBER;
14:34:47 1419  var_current_invoice_id	    NUMBER;
14:34:47 1420  var_current_date 	    DATE;
14:34:47 1421  var_current_offer_index	    NUMBER;
14:34:47 1422  var_current_offer_recurr_num NUMBER;
14:34:47 1423  var_account_tax_exempt_id    VARCHAR2(255);
14:34:47 1424  
14:34:47 1425  var_free_invoice_id NUMBER;
14:34:47 1426  var_free_license_id NUMBER;
14:34:47 1427  var_new_license_id  NUMBER;
14:34:47 1428  var_ext_license_id  NUMBER;
14:34:47 1429  -- EXCEPTIONS
14:34:47 1430  BAD_SUBSCRIPTION_ID	     EXCEPTION;
14:34:47 1431  CAN_NOT_FIND_OFFER_OR_LICENSE EXCEPTION;
14:34:47 1432  CAN_NOT_CHANGE_LICENSE_STATUS EXCEPTION;
14:34:47 1433  CAN_NOT_CREATE_INVOICE	     EXCEPTION;
14:34:47 1434  CAN_NOT_CREATE_NEW_LICENSE    EXCEPTION;
14:34:47 1435  CAN_NOT_CREATE_END_LICENSE    EXCEPTION;
14:34:47 1436  CAN_NOT_ANNOTATE_SUBSCRIPTION EXCEPTION;
14:34:47 1437  EXTENS_START_DATE_IS_TOO_FAR  EXCEPTION;
14:34:47 1438  EXT_START_DATE_LATER_THEN_END EXCEPTION;
14:34:47 1439  EXTENS_START_DATE_IS_TOO_SMALL EXCEPTION;
14:34:47 1440  EXCEPTION_MESSAGE	     VARCHAR2(1024);
14:34:47 1441  BEGIN
14:34:47 1442  
14:34:47 1443  	 var_current_date := PROCS_COMMON_V18.NORMALIZE_DATE(SYSDATE);
14:34:47 1444  
14:34:47 1445  	 -- Check that subscription exists
14:34:47 1446  	 BEGIN
14:34:47 1447  	   SELECT
14:34:47 1448  	     SUBSCRIPTION.ID into temp_subscription_id
14:34:47 1449  	   FROM
14:34:47 1450  	     SUBSCRIPTION
14:34:47 1451  	   WHERE
14:34:47 1452  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 1453  	   EXCEPTION
14:34:47 1454  	     WHEN NO_DATA_FOUND THEN
14:34:47 1455  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 1456  	 END;
14:34:47 1457  
14:34:47 1458  	 -- Get account tax exempt id
14:34:47 1459  	 SELECT DISTINCT
14:34:47 1460  	   ACCOUNT.TAX_EXEMPT_ID into var_account_tax_exempt_id
14:34:47 1461  	 FROM
14:34:47 1462  	   ACCOUNT
14:34:47 1463  	   INNER JOIN SUBSCRIPTION ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
14:34:47 1464  	 WHERE
14:34:47 1465  	   SUBSCRIPTION.ID = in_subscription_id;
14:34:47 1466  
14:34:47 1467  	 -- Select current data
14:34:47 1468  	 BEGIN
14:34:47 1469  	   SELECT
14:34:47 1470  	     LICENSE.ID,
14:34:47 1471  	     LICENSE.START_DATE,
14:34:47 1472  	     LICENSE.END_DATE,
14:34:47 1473  	     LICENSE.CURRENT_OFFER_INDEX,
14:34:47 1474  	     LICENSE.CURRENT_OFFER_RECURR_NUM,
14:34:47 1475  	     OFFER.ID,
14:34:47 1476  	     INVOICE.ID
14:34:47 1477  	   INTO
14:34:47 1478  	     var_current_license_id,
14:34:47 1479  	     var_current_license_start_date,
14:34:47 1480  	     var_current_license_end_date,
14:34:47 1481  	     var_current_offer_index,
14:34:47 1482  	     var_current_offer_recurr_num,
14:34:47 1483  	     var_current_offer_id,
14:34:47 1484  	     var_current_invoice_id
14:34:47 1485  	   FROM
14:34:47 1486  	     LICENSE
14:34:47 1487  	     INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:47 1488  	     INNER JOIN OFFER ON LICENSE.OFFER_ID = OFFER.ID
14:34:47 1489  	     INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
14:34:47 1490  	   WHERE
14:34:47 1491  	     SUBSCRIPTION.ID = in_subscription_id
14:34:47 1492  	     AND PROCS_COMMON_V18.NORMALIZE_DATE(LICENSE.END_DATE) > var_current_date
14:34:47 1493  	     AND PROCS_COMMON_V18.NORMALIZE_DATE(LICENSE.START_DATE) <= var_current_date
14:34:47 1494  	     AND ROWNUM <= 1
14:34:47 1495  	   ORDER BY
14:34:47 1496  	     LICENSE.ID DESC;
14:34:47 1497  	   EXCEPTION
14:34:47 1498  	     WHEN NO_DATA_FOUND THEN
14:34:47 1499  	       RAISE CAN_NOT_FIND_OFFER_OR_LICENSE;
14:34:47 1500  	 END;
14:34:47 1501  
14:34:47 1502  	 IF var_current_license_end_date < in_effective_start_date THEN
14:34:47 1503  	   RAISE EXTENS_START_DATE_IS_TOO_FAR;
14:34:47 1504  	 END IF;
14:34:47 1505  
14:34:47 1506  	 IF var_current_license_start_date > in_effective_start_date THEN
14:34:47 1507  	   RAISE EXTENS_START_DATE_IS_TOO_SMALL;
14:34:47 1508  	 END IF;
14:34:47 1509  
14:34:47 1510  	 IF in_effective_start_date > in_effective_end_date THEN
14:34:47 1511  	   RAISE EXT_START_DATE_LATER_THEN_END;
14:34:47 1512  	 END IF;
14:34:47 1513  
14:34:47 1514  	 -- Closing curent license
14:34:47 1515  	 BEGIN
14:34:47 1516  	   PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47 1517  	     in_license_id	   => var_current_license_id,
14:34:47 1518  	     in_updated_by	   => in_updated_by,
14:34:47 1519  	     in_license_status_id  => GLOBAL_STATUSES_V18.LICENSE_CLOSED,
14:34:47 1520  	     in_end_date	   => in_effective_start_date,
14:34:47 1521  	     in_needs_entitlements => GLOBAL_CONSTANTS_V18.TRUE
14:34:47 1522  	   );
14:34:47 1523  	   EXCEPTION
14:34:47 1524  	     WHEN OTHERS THEN
14:34:47 1525  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1526  	       RAISE CAN_NOT_CHANGE_LICENSE_STATUS;
14:34:47 1527  	 END;
14:34:47 1528  
14:34:47 1529  	 -- Creating new "free" invoice
14:34:47 1530  	 BEGIN
14:34:47 1531  	   PROCS_INVOICE_V18.CREATE_INVOICE(
14:34:47 1532  	     in_invoice_status => GLOBAL_STATUSES_V18.INVOICE_CLOSED,
14:34:47 1533  	     in_created_by     => in_updated_by,
14:34:47 1534  	     in_tax_exempt_id  => var_account_tax_exempt_id,
14:34:47 1535  	     out_invoice_id    => var_free_invoice_id
14:34:47 1536  	   );
14:34:47 1537  	   EXCEPTION
14:34:47 1538  	     WHEN OTHERS THEN
14:34:47 1539  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1540  	       RAISE CAN_NOT_CREATE_INVOICE;
14:34:47 1541  	 END;
14:34:47 1542  
14:34:47 1543  	 -- Creating new "free" license
14:34:47 1544  	 BEGIN
14:34:47 1545  	   PROCS_LICENSE_V18.CREATE_LICENSE (
14:34:47 1546  	     in_status_id		 => GLOBAL_STATUSES_V18.LICENSE_ACTIVE,
14:34:47 1547  	     in_needs_entitlements	 => GLOBAL_CONSTANTS_V18.TRUE,
14:34:47 1548  	     in_start_date		 => in_effective_start_date,
14:34:47 1549  	     in_end_date		 => in_effective_end_date,
14:34:47 1550  	     in_offer_id		 => var_current_offer_id,
14:34:47 1551  	     in_subscription_id 	 => in_subscription_id,
14:34:47 1552  	     in_invoice_id		 => var_free_invoice_id,
14:34:47 1553  	     in_created_by		 => in_updated_by,
14:34:47 1554  	     in_is_extension		 => GLOBAL_CONSTANTS_V18.TRUE,
14:34:47 1555  	     in_current_offer_index	 => var_current_offer_index,
14:34:47 1556  	     in_current_offer_recurr_num => var_current_offer_recurr_num,
14:34:47 1557  	     out_license_id		 => var_free_license_id
14:34:47 1558  	   );
14:34:47 1559  	   EXCEPTION
14:34:47 1560  	     WHEN OTHERS THEN
14:34:47 1561  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1562  	       RAISE CAN_NOT_CREATE_NEW_LICENSE;
14:34:47 1563  	 END;
14:34:47 1564  
14:34:47 1565  	 -- Creating new license
14:34:47 1566  	 IF PROCS_COMMON_V18.NORMALIZE_DATE(var_current_license_end_date) >
14:34:47 1567  	    PROCS_COMMON_V18.NORMALIZE_DATE(in_effective_start_date) THEN
14:34:47 1568  	   BEGIN
14:34:47 1569  	     PROCS_LICENSE_V18.CREATE_LICENSE (
14:34:47 1570  	       in_status_id		   => GLOBAL_STATUSES_V18.LICENSE_ACTIVE,
14:34:47 1571  	       in_needs_entitlements	   => GLOBAL_CONSTANTS_V18.TRUE,
14:34:47 1572  	       in_start_date		   => in_effective_end_date,
14:34:47 1573  	       in_end_date		   => var_current_license_end_date + (in_effective_end_date - in_effective_start_date),
14:34:47 1574  	       in_offer_id		   => var_current_offer_id,
14:34:47 1575  	       in_subscription_id	   => in_subscription_id,
14:34:47 1576  	       in_invoice_id		   => var_current_invoice_id,
14:34:47 1577  	       in_created_by		   => in_updated_by,
14:34:47 1578  	       in_is_extension		   => GLOBAL_CONSTANTS_V18.FALSE,
14:34:47 1579  	       in_current_offer_index	   => var_current_offer_index,
14:34:47 1580  	       in_current_offer_recurr_num => var_current_offer_recurr_num,
14:34:47 1581  	       out_license_id		   => var_ext_license_id
14:34:47 1582  	     );
14:34:47 1583  	     EXCEPTION
14:34:47 1584  	       WHEN OTHERS THEN
14:34:47 1585  		 EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1586  		 RAISE CAN_NOT_CREATE_END_LICENSE;
14:34:47 1587  	   END;
14:34:47 1588  	 END IF;
14:34:47 1589  
14:34:47 1590  	 -- Create new note for subscription
14:34:47 1591  	 BEGIN
14:34:47 1592  	   PROCS_SUBSCRIPTION_V18.ANNOTATE_SUBSCRIPTION (
14:34:47 1593  	     in_subscription_id => in_subscription_id,
14:34:47 1594  	     in_agent_id	=> 0, -- FIXME: What should to be here (agent id)?
14:34:47 1595  	     in_note		=> in_note,
14:34:47 1596  	     in_created_by	=> in_updated_by
14:34:47 1597  	   );
14:34:47 1598  	   EXCEPTION
14:34:47 1599  	     WHEN OTHERS THEN
14:34:47 1600  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1601  	       RAISE CAN_NOT_ANNOTATE_SUBSCRIPTION;
14:34:47 1602  	 END;
14:34:47 1603  
14:34:47 1604  EXCEPTION
14:34:47 1605  WHEN EXT_START_DATE_LATER_THEN_END THEN
14:34:47 1606  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 1607  	   SPROC_NAME, 'Extension start date is bigger then end date');
14:34:47 1608  WHEN EXTENS_START_DATE_IS_TOO_FAR THEN
14:34:47 1609  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 1610  	   SPROC_NAME, 'Extension start date is too far');
14:34:47 1611  WHEN EXTENS_START_DATE_IS_TOO_SMALL THEN
14:34:47 1612  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 1613  	   SPROC_NAME, 'Extension start date is too small');
14:34:47 1614  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 1615  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1616  	   SPROC_NAME, 'No such subscription');
14:34:47 1617  WHEN CAN_NOT_FIND_OFFER_OR_LICENSE THEN
14:34:47 1618  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1619  	   SPROC_NAME, 'Could not find license and/or offer for given subscription');
14:34:47 1620  WHEN CAN_NOT_CHANGE_LICENSE_STATUS THEN
14:34:47 1621  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1622  	   SPROC_NAME, 'Could not change license status', EXCEPTION_MESSAGE);
14:34:47 1623  WHEN CAN_NOT_CREATE_INVOICE THEN
14:34:47 1624  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1625  	   SPROC_NAME, 'Could not create new invoice', EXCEPTION_MESSAGE);
14:34:47 1626  WHEN CAN_NOT_CREATE_NEW_LICENSE THEN
14:34:47 1627  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1628  	   SPROC_NAME, 'Could not create new license', EXCEPTION_MESSAGE);
14:34:47 1629  WHEN CAN_NOT_CREATE_END_LICENSE THEN
14:34:47 1630  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1631  	   SPROC_NAME, 'Could not create last license', EXCEPTION_MESSAGE);
14:34:47 1632  WHEN CAN_NOT_ANNOTATE_SUBSCRIPTION THEN
14:34:47 1633  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1634  	   SPROC_NAME, 'Could not create new note for subscription', EXCEPTION_MESSAGE);
14:34:47 1635  WHEN OTHERS THEN
14:34:47 1636  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1637  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1638  END ADD_SUBSCRIPTION_EXTENSION;
14:34:47 1639  
14:34:47 1640  /******************************************************************************/
14:34:47 1641  
14:34:47 1642  FUNCTION CALC_SUBSCRIPTION_END_DATE (
14:34:47 1643  /*
14:34:47 1644  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 1645  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:47 1646  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 1647  Returns:
14:34:47 1648  NULL if it is impossible to calculate end date (for example,
14:34:47 1649  	 offer chain includes offer with infinity recurrences number)
14:34:47 1650  DATE else
14:34:47 1651  */
14:34:47 1652  	 in_subscription_id IN NUMBER
14:34:47 1653  ) RETURN DATE AS
14:34:47 1654  -- VARIABLES
14:34:47 1655  SPROC_NAME		     CONSTANT VARCHAR2(26) := 'CALC_SUBSCRIPTION_END_DATE';
14:34:47 1656  last_license_id		     NUMBER;
14:34:47 1657  last_license_end_date	     DATE;
14:34:47 1658  last_license_offer_id	     NUMBER;
14:34:47 1659  last_license_offer_index      NUMBER;
14:34:47 1660  last_license_offer_recurr_num NUMBER;
14:34:47 1661  var_last_license_id	     NUMBER;
14:34:47 1662  var_offer_chain_id	     NUMBER;
14:34:47 1663  var_current_offer_rec_number  NUMBER;
14:34:47 1664  var_next_offers_set	     SYS_REFCURSOR;
14:34:47 1665  var_next_offer_duration	     VARCHAR2(30);
14:34:47 1666  var_next_offer_recur	     NUMBER;
14:34:47 1667  var_infinity_offers_number    NUMBER;
14:34:47 1668  
14:34:47 1669  var_result_date DATE;
14:34:47 1670  
14:34:47 1671  var_ym_interval	INTERVAL YEAR TO MONTH;
14:34:47 1672  var_ds_interval	INTERVAL DAY(3) TO SECOND;
14:34:47 1673  var_offer_years	NUMBER;
14:34:47 1674  var_offer_months NUMBER;
14:34:47 1675  var_offer_days	NUMBER;
14:34:47 1676  
14:34:47 1677  -- EXCEPTIONS
14:34:47 1678  BAD_SUBSCRIPTION_ID	  EXCEPTION;
14:34:47 1679  CAN_NOT_FIND_LAST_LICENSE  EXCEPTION;
14:34:47 1680  CAN_NOT_CALC_OFFER_LENGTH  EXCEPTION;
14:34:47 1681  CAN_NOT_CALC_OFFER_LENGTH2 EXCEPTION;
14:34:47 1682  EXCEPTION_MESSAGE	  VARCHAR2(1024);
14:34:47 1683  BEGIN
14:34:47 1684  
14:34:47 1685  	 BEGIN
14:34:47 1686  	   SELECT
14:34:47 1687  	     SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain_id
14:34:47 1688  	   FROM
14:34:47 1689  	     SUBSCRIPTION
14:34:47 1690  	   WHERE
14:34:47 1691  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 1692  	   EXCEPTION
14:34:47 1693  	     WHEN NO_DATA_FOUND THEN
14:34:47 1694  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 1695  	 END;
14:34:47 1696  
14:34:47 1697  	 BEGIN
14:34:47 1698  	   SELECT
14:34:47 1699  	     ID into var_last_license_id
14:34:47 1700  	   FROM
14:34:47 1701  	     (
14:34:47 1702  	       SELECT
14:34:47 1703  		 LICENSE.ID
14:34:47 1704  	       FROM
14:34:47 1705  		 LICENSE
14:34:47 1706  	       WHERE
14:34:47 1707  		 LICENSE.SUBSCRIPTION_ID = in_subscription_id
14:34:47 1708  	       ORDER BY
14:34:47 1709  		 LICENSE.END_DATE DESC
14:34:47 1710  	     )
14:34:47 1711  	   WHERE
14:34:47 1712  	     ROWNUM <= 1;
14:34:47 1713  	   EXCEPTION
14:34:47 1714  	     WHEN NO_DATA_FOUND THEN
14:34:47 1715  	       RAISE CAN_NOT_FIND_LAST_LICENSE;
14:34:47 1716  	 END;
14:34:47 1717  
14:34:47 1718  	 SELECT
14:34:47 1719  	   COUNT(*) into var_infinity_offers_number
14:34:47 1720  	 FROM
14:34:47 1721  	   OFFER_OFFER_CHAIN
14:34:47 1722  	 WHERE
14:34:47 1723  	   OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
14:34:47 1724  	   AND OFFER_OFFER_CHAIN.NUM_RECURRENCES = GLOBAL_ENUMS_V18.OFFER_REC_INFINITY;
14:34:47 1725  
14:34:47 1726  	 IF var_infinity_offers_number > 0 THEN
14:34:47 1727  	   RETURN NULL;
14:34:47 1728  	 END IF;
14:34:47 1729  
14:34:47 1730  	 BEGIN
14:34:47 1731  	   SELECT
14:34:47 1732  	     LICENSE.ID,
14:34:47 1733  	     LICENSE.END_DATE,
14:34:47 1734  	     LICENSE.CURRENT_OFFER_INDEX,
14:34:47 1735  	     LICENSE.CURRENT_OFFER_RECURR_NUM,
14:34:47 1736  	     LICENSE.OFFER_ID
14:34:47 1737  	     into
14:34:47 1738  	     last_license_id,
14:34:47 1739  	     last_license_end_date,
14:34:47 1740  	     last_license_offer_index,
14:34:47 1741  	     last_license_offer_recurr_num,
14:34:47 1742  	     last_license_offer_id
14:34:47 1743  	   FROM
14:34:47 1744  	     LICENSE
14:34:47 1745  	   WHERE
14:34:47 1746  	     LICENSE.ID = var_last_license_id;
14:34:47 1747  	   EXCEPTION
14:34:47 1748  	     WHEN NO_DATA_FOUND THEN
14:34:47 1749  	       RAISE CAN_NOT_FIND_LAST_LICENSE;
14:34:47 1750  	 END;
14:34:47 1751  
14:34:47 1752  	 var_result_date := last_license_end_date;
14:34:47 1753  
14:34:47 1754  	 -- Find current recurrence number
14:34:47 1755  	 SELECT
14:34:47 1756  	   OFFER_OFFER_CHAIN.NUM_RECURRENCES into var_current_offer_rec_number
14:34:47 1757  	 FROM
14:34:47 1758  	   OFFER_OFFER_CHAIN
14:34:47 1759  	 WHERE
14:34:47 1760  	   OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
14:34:47 1761  	   AND OFFER_OFFER_CHAIN.OFFER_ID = last_license_offer_id
14:34:47 1762  	   AND OFFER_OFFER_CHAIN.INDEX_VALUE = last_license_offer_index;
14:34:47 1763  
14:34:47 1764  	 IF var_current_offer_rec_number > last_license_offer_recurr_num THEN
14:34:47 1765  	   BEGIN
14:34:47 1766  	     PROCS_OFFER_CHAIN_V18.GET_OFFER_LENGTH(
14:34:47 1767  	       last_license_offer_id,
14:34:47 1768  	       var_offer_years,
14:34:47 1769  	       var_offer_months,
14:34:47 1770  	       var_offer_days
14:34:47 1771  	     );
14:34:47 1772  
14:34:47 1773  	     var_ym_interval := var_offer_years||'-'||var_offer_months;
14:34:47 1774  	     var_ds_interval := var_offer_days||' 0:0:0';
14:34:47 1775  
14:34:47 1776  	     var_result_date := var_result_date
14:34:47 1777  	       + ( var_ym_interval * ( var_current_offer_rec_number - last_license_offer_recurr_num ) )
14:34:47 1778  	       + ( var_ds_interval * ( var_current_offer_rec_number - last_license_offer_recurr_num ) );
14:34:47 1779  	     EXCEPTION
14:34:47 1780  	       WHEN OTHERS THEN
14:34:47 1781  		 EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1782  		 RAISE CAN_NOT_CALC_OFFER_LENGTH;
14:34:47 1783  	   END;
14:34:47 1784  	 END IF;
14:34:47 1785  
14:34:47 1786  	 OPEN var_next_offers_set FOR
14:34:47 1787  	 SELECT
14:34:47 1788  	   OFFER.ENTITLEMENT_DURATION,
14:34:47 1789  	   OFFER_OFFER_CHAIN.NUM_RECURRENCES
14:34:47 1790  	 FROM
14:34:47 1791  	   OFFER_OFFER_CHAIN
14:34:47 1792  	   INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
14:34:47 1793  	 WHERE
14:34:47 1794  	   OFFER_OFFER_CHAIN.INDEX_VALUE > last_license_offer_index
14:34:47 1795  	   AND OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id;
14:34:47 1796  
14:34:47 1797  	 LOOP
14:34:47 1798  	   FETCH var_next_offers_set into var_next_offer_duration, var_next_offer_recur;
14:34:47 1799  	   EXIT WHEN var_next_offers_set%NOTFOUND;
14:34:47 1800  	   BEGIN
14:34:47 1801  	     PROCS_COMMON_V18.ISO8601DURATION_TO_INTERVALS(
14:34:47 1802  	       var_next_offer_duration,
14:34:47 1803  	       var_offer_years,
14:34:47 1804  	       var_offer_months,
14:34:47 1805  	       var_offer_days
14:34:47 1806  	     );
14:34:47 1807  
14:34:47 1808  	     var_ym_interval := var_offer_years||'-'||var_offer_months;
14:34:47 1809  	     var_ds_interval := var_offer_days||' 0:0:0';
14:34:47 1810  
14:34:47 1811  	     var_result_date := var_result_date
14:34:47 1812  	       + ( var_ym_interval * var_next_offer_recur )
14:34:47 1813  	       + ( var_ds_interval * var_next_offer_recur );
14:34:47 1814  	     EXCEPTION
14:34:47 1815  	       WHEN OTHERS THEN
14:34:47 1816  		 EXCEPTION_MESSAGE := SQLERRM;
14:34:47 1817  		 RAISE CAN_NOT_CALC_OFFER_LENGTH2;
14:34:47 1818  	   END;
14:34:47 1819  	 END LOOP;
14:34:47 1820  
14:34:47 1821  	 RETURN var_result_date;
14:34:47 1822  
14:34:47 1823  EXCEPTION
14:34:47 1824  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 1825  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1826  	   SPROC_NAME, 'No such subscription');
14:34:47 1827  WHEN CAN_NOT_FIND_LAST_LICENSE THEN
14:34:47 1828  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1829  	   SPROC_NAME, 'Could not find last license for given subscription');
14:34:47 1830  WHEN CAN_NOT_CALC_OFFER_LENGTH THEN
14:34:47 1831  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1832  	   SPROC_NAME, 'Could not calculate offer length', EXCEPTION_MESSAGE);
14:34:47 1833  WHEN CAN_NOT_CALC_OFFER_LENGTH2 THEN
14:34:47 1834  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 1835  	   SPROC_NAME, 'Could not calculate last offer length', EXCEPTION_MESSAGE);
14:34:47 1836  WHEN OTHERS THEN
14:34:47 1837  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1838  	   SPROC_NAME, 'Unkown error', SQLERRM);
14:34:47 1839  END CALC_SUBSCRIPTION_END_DATE;
14:34:47 1840  
14:34:47 1841  /******************************************************************************/
14:34:47 1842  
14:34:47 1843  PROCEDURE HAS_FUTURE_LICENSE (
14:34:47 1844  /*
14:34:47 1845  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 1846  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 1847  --
14:34:47 1848  RETURNS:
14:34:47 1849  GLOBAL_CONSTANTS_V18.TRUE - if has,
14:34:47 1850  GLOBAL_CONSTANTS_V18.FALSE - else
14:34:47 1851  */
14:34:47 1852  	 in_license_id IN  NUMBER,
14:34:47 1853  	 out_result    OUT NUMBER
14:34:47 1854  ) AS
14:34:47 1855  -- VARIABLES
14:34:47 1856  SPROC_NAME		 CONSTANT VARCHAR2(18) := 'HAS_FUTURE_LICENSE';
14:34:47 1857  var_subscription_id	 NUMBER;
14:34:47 1858  var_future_licenses_count NUMBER;
14:34:47 1859  -- EXCEPTIONS
14:34:47 1860  BAD_LICENSE_ID	    EXCEPTION;
14:34:47 1861  BEGIN
14:34:47 1862  
14:34:47 1863  	 BEGIN
14:34:47 1864  	   SELECT
14:34:47 1865  	     LICENSE.SUBSCRIPTION_ID into var_subscription_id
14:34:47 1866  	   FROM
14:34:47 1867  	     LICENSE
14:34:47 1868  	   WHERE
14:34:47 1869  	     LICENSE.ID = in_license_id;
14:34:47 1870  	   EXCEPTION
14:34:47 1871  	     WHEN NO_DATA_FOUND THEN
14:34:47 1872  	       RAISE BAD_LICENSE_ID;
14:34:47 1873  	 END;
14:34:47 1874  
14:34:47 1875  	 SELECT
14:34:47 1876  	   COUNT(*) into var_future_licenses_count
14:34:47 1877  	 FROM
14:34:47 1878  	   LICENSE
14:34:47 1879  	 WHERE
14:34:47 1880  	   LICENSE.ID != in_license_id
14:34:47 1881  	   AND LICENSE.SUBSCRIPTION_ID = var_subscription_id
14:34:47 1882  	   AND LICENSE.END_DATE > sysdate;
14:34:47 1883  
14:34:47 1884  	 IF var_future_licenses_count > 0 THEN
14:34:47 1885  	   out_result := GLOBAL_CONSTANTS_V18.TRUE;
14:34:47 1886  	 ELSE
14:34:47 1887  	   out_result := GLOBAL_CONSTANTS_V18.FALSE;
14:34:47 1888  	 END IF;
14:34:47 1889  
14:34:47 1890  EXCEPTION
14:34:47 1891  WHEN BAD_LICENSE_ID THEN
14:34:47 1892  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1893  	   SPROC_NAME, 'No such license');
14:34:47 1894  WHEN OTHERS THEN
14:34:47 1895  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1896  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1897  END HAS_FUTURE_LICENSE;
14:34:47 1898  
14:34:47 1899  /******************************************************************************/
14:34:47 1900  
14:34:47 1901  PROCEDURE CLOSE_SUBSCRIPTION (
14:34:47 1902  	 in_subscription_id IN NUMBER,
14:34:47 1903  	 in_updated_by	    IN VARCHAR2
14:34:47 1904  ) AS
14:34:47 1905  -- VARIABLES
14:34:47 1906  SPROC_NAME	    CONSTANT VARCHAR2(18) := 'CLOSE_SUBSCRIPTION';
14:34:47 1907  temp_subscription_id NUMBER;
14:34:47 1908  var_licenses_count   NUMBER;
14:34:47 1909  -- EXCEPTIONS
14:34:47 1910  BAD_SUBSCRIPTION_ID    EXCEPTION;
14:34:47 1911  ACTIVE_LICENSES_FOUND  EXCEPTION;
14:34:47 1912  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:47 1913  BEGIN
14:34:47 1914  
14:34:47 1915  	 BEGIN
14:34:47 1916  	   SELECT
14:34:47 1917  	     SUBSCRIPTION.ID into temp_subscription_id
14:34:47 1918  	   FROM
14:34:47 1919  	     SUBSCRIPTION
14:34:47 1920  	   WHERE
14:34:47 1921  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 1922  	   EXCEPTION
14:34:47 1923  	     WHEN NO_DATA_FOUND THEN
14:34:47 1924  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 1925  	 END;
14:34:47 1926  
14:34:47 1927  	 SELECT
14:34:47 1928  	   COUNT(*) into var_licenses_count
14:34:47 1929  	 FROM
14:34:47 1930  	   LICENSE
14:34:47 1931  	 WHERE
14:34:47 1932  	   LICENSE.SUBSCRIPTION_ID = in_subscription_id
14:34:47 1933  	   AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE;
14:34:47 1934  
14:34:47 1935  	 IF var_licenses_count > 0 THEN
14:34:47 1936  	   RAISE ACTIVE_LICENSES_FOUND;
14:34:47 1937  	 END IF;
14:34:47 1938  
14:34:47 1939  	 PROCS_SUBSCRIPTION_V18.UPDATE_SUBSCRIPTION_STATUS(
14:34:47 1940  	   in_subscription_id	     => in_subscription_id,
14:34:47 1941  	   in_updated_by	     => in_updated_by,
14:34:47 1942  	   in_subscription_status_id => GLOBAL_STATUSES_V18.SUBSCRIPTION_CLOSED
14:34:47 1943  	 );
14:34:47 1944  
14:34:47 1945  EXCEPTION
14:34:47 1946  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 1947  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1948  	   SPROC_NAME, 'No such subscription');
14:34:47 1949  WHEN ACTIVE_LICENSES_FOUND THEN
14:34:47 1950  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 1951  	   SPROC_NAME, 'Active licenses found');
14:34:47 1952  WHEN OTHERS THEN
14:34:47 1953  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1954  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1955  END CLOSE_SUBSCRIPTION;
14:34:47 1956  
14:34:47 1957  /******************************************************************************/
14:34:47 1958  
14:34:47 1959  PROCEDURE GET_GROUP_ID_BY_SBSCRPTN_ID (
14:34:47 1960  	 in_subscription_id IN NUMBER,
14:34:47 1961  	 out_group_id	    OUT NUMBER
14:34:47 1962  ) AS
14:34:47 1963  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_GROUP_ID_BY_SBSCRPTN_ID';
14:34:47 1964  BEGIN
14:34:47 1965  	 SELECT
14:34:47 1966  	   ACCOUNT.GROUP_ID into out_group_id
14:34:47 1967  	 FROM
14:34:47 1968  	   SUBSCRIPTION
14:34:47 1969  	   INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
14:34:47 1970  	 WHERE
14:34:47 1971  	   SUBSCRIPTION.ID = in_subscription_id;
14:34:47 1972  EXCEPTION
14:34:47 1973  WHEN NO_DATA_FOUND THEN
14:34:47 1974  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 1975  	   SPROC_NAME, 'No such subscription');
14:34:47 1976  WHEN OTHERS THEN
14:34:47 1977  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 1978  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 1979  END GET_GROUP_ID_BY_SBSCRPTN_ID;
14:34:47 1980  
14:34:47 1981  /******************************************************************************/
14:34:47 1982  
14:34:47 1983  PROCEDURE GET_SUBSCRIPTION_PRODUCTS (
14:34:47 1984  /*
14:34:47 1985  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 1986  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 1987  */
14:34:47 1988  	 in_subscription_id IN NUMBER,
14:34:47 1989  	 out_result_set     OUT SYS_REFCURSOR
14:34:47 1990  ) AS
14:34:47 1991  SPROC_NAME CONSTANT VARCHAR2(25) := 'GET_SUBSCRIPTION_PRODUCTS';
14:34:47 1992  -- VARIABLES
14:34:47 1993  var_offer_chain NUMBER;
14:34:47 1994  -- EXCEPTIONS
14:34:47 1995  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 1996  BEGIN
14:34:47 1997  	 BEGIN
14:34:47 1998  	   SELECT
14:34:47 1999  	     SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain
14:34:47 2000  	   FROM
14:34:47 2001  	     SUBSCRIPTION
14:34:47 2002  	   WHERE
14:34:47 2003  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 2004  	   EXCEPTION
14:34:47 2005  	     WHEN NO_DATA_FOUND THEN
14:34:47 2006  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 2007  	 END;
14:34:47 2008  
14:34:47 2009  	 OPEN out_result_set FOR
14:34:47 2010  	 SELECT DISTINCT
14:34:47 2011  	   PRODUCT.ID,
14:34:47 2012  	   PRODUCT.NAME
14:34:47 2013  	 FROM
14:34:47 2014  	   PRODUCT
14:34:47 2015  	 WHERE
14:34:47 2016  	   PRODUCT.ID IN (
14:34:47 2017  	     SELECT DISTINCT
14:34:47 2018  	       PRODUCT_OFFERING.PRODUCT_ID
14:34:47 2019  	     FROM
14:34:47 2020  	       PRODUCT_OFFERING
14:34:47 2021  	     WHERE
14:34:47 2022  	       PRODUCT_OFFERING.ID IN (
14:34:47 2023  		 SELECT DISTINCT
14:34:47 2024  		   OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
14:34:47 2025  		 FROM
14:34:47 2026  		   OFFER_PRODUCT_OFFERING
14:34:47 2027  		 WHERE
14:34:47 2028  		   OFFER_PRODUCT_OFFERING.OFFER_ID IN (
14:34:47 2029  		     SELECT DISTINCT
14:34:47 2030  		       OFFER_OFFER_CHAIN.OFFER_ID
14:34:47 2031  		     FROM
14:34:47 2032  		       OFFER_OFFER_CHAIN
14:34:47 2033  		     WHERE
14:34:47 2034  		       OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain
14:34:47 2035  		   )
14:34:47 2036  	       )
14:34:47 2037  	   );
14:34:47 2038  
14:34:47 2039  EXCEPTION
14:34:47 2040  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 2041  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2042  	   SPROC_NAME, 'No such subscription');
14:34:47 2043  WHEN OTHERS THEN
14:34:47 2044  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2045  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 2046  END GET_SUBSCRIPTION_PRODUCTS;
14:34:47 2047  
14:34:47 2048  /******************************************************************************/
14:34:47 2049  
14:34:47 2050  PROCEDURE UPDATE_SUBSCRIPTION_STATUS (
14:34:47 2051  	 in_subscription_id	   IN SUBSCRIPTION.ID%TYPE,
14:34:47 2052  	 in_subscription_status_id IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE,
14:34:47 2053  	 in_updated_by		   IN SUBSCRIPTION.UPDATED_BY%TYPE
14:34:47 2054  ) AS
14:34:47 2055  SPROC_NAME CONSTANT VARCHAR2(26) := 'UPDATE_SUBSCRIPTION_STATUS';
14:34:47 2056  BEGIN
14:34:47 2057  	 PROCS_SUBSCRIPTION_CRU_V18.UPDATE_SUBSCRIPTION(
14:34:47 2058  	   in_subscription_id	     => in_subscription_id,
14:34:47 2059  	   in_subscription_status_id => in_subscription_status_id,
14:34:47 2060  	   in_updated_by	     => in_updated_by
14:34:47 2061  	 );
14:34:47 2062  END UPDATE_SUBSCRIPTION_STATUS;
14:34:47 2063  
14:34:47 2064  /******************************************************************************/
14:34:47 2065  
14:34:47 2066  PROCEDURE GET_ACTIVE_INVOICES_IDS (
14:34:47 2067  /*
14:34:47 2068  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 2069  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 2070  */
14:34:47 2071  --  in_subscription_id IN SUBSCRIPTION.ID%TYPE,
14:34:47 2072  	 in_subscription_id IN NUMBER,
14:34:47 2073  	 out_result_set     OUT SYS_REFCURSOR
14:34:47 2074  ) AS
14:34:47 2075  SPROC_NAME CONSTANT VARCHAR2(23) := 'GET_ACTIVE_INVOICES_IDS';
14:34:47 2076  -- VARIABLES
14:34:47 2077  temp_subscription_id SUBSCRIPTION.ID%TYPE;
14:34:47 2078  -- EXCEPTIONS
14:34:47 2079  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 2080  BEGIN
14:34:47 2081  
14:34:47 2082  	 BEGIN
14:34:47 2083  	   SELECT
14:34:47 2084  	     SUBSCRIPTION.ID into temp_subscription_id
14:34:47 2085  	   FROM
14:34:47 2086  	     SUBSCRIPTION
14:34:47 2087  	   WHERE
14:34:47 2088  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 2089  	   EXCEPTION
14:34:47 2090  	     WHEN NO_DATA_FOUND THEN
14:34:47 2091  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 2092  	 END;
14:34:47 2093  
14:34:47 2094  	 OPEN out_result_set FOR
14:34:47 2095  	 SELECT DISTINCT
14:34:47 2096  	   LICENSE.INVOICE_ID as "ID"
14:34:47 2097  	 FROM
14:34:47 2098  	   LICENSE
14:34:47 2099  	 WHERE
14:34:47 2100  	   LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 2101  	   AND LICENSE.SUBSCRIPTION_ID = in_subscription_id;
14:34:47 2102  
14:34:47 2103  EXCEPTION
14:34:47 2104  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 2105  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2106  	   SPROC_NAME, 'No such subscription');
14:34:47 2107  WHEN OTHERS THEN
14:34:47 2108  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2109  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 2110  END GET_ACTIVE_INVOICES_IDS;
14:34:47 2111  
14:34:47 2112  /******************************************************************************/
14:34:47 2113  
14:34:47 2114  PROCEDURE CANCEL_SUBSCRIPTION_INVOICE (
14:34:47 2115  /*
14:34:47 2116  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 2117  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 2118  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:47 2119  */
14:34:47 2120  	 in_invoice_id	      IN NUMBER,
14:34:47 2121  	 in_updated_by	      IN VARCHAR2,
14:34:47 2122  	 in_refundable	      IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.FALSE
14:34:47 2123  ) AS
14:34:47 2124  SPROC_NAME CONSTANT VARCHAR2(27) := 'CANCEL_SUBSCRIPTION_INVOICE';
14:34:47 2125  -- VARIABLES
14:34:47 2126  temp_invoice_id	      INVOICE.ID%TYPE;
14:34:47 2127  var_chargeback_amount  NUMBER(10,2);
14:34:47 2128  ver_refund_charge_id   NUMBER;
14:34:47 2129  -- EXCEPTIONS
14:34:47 2130  BAD_INVOICE_ID		    EXCEPTION;
14:34:47 2131  CAN_NOT_CALCULATE_CHARGEBACK EXCEPTION;
14:34:47 2132  CAN_NOT_APPLY_CHARGEBACK     EXCEPTION;
14:34:47 2133  EXCEPTION_MESSAGE	    VARCHAR2(1024);
14:34:47 2134  -- STUB
14:34:47 2135  var_now DATE;
14:34:47 2136  var_revoke NUMBER;
14:34:47 2137  var_refund NUMBER;
14:34:47 2138  var_billed NUMBER;
14:34:47 2139  BEGIN
14:34:47 2140  
14:34:47 2141  	 var_now := sysdate;
14:34:47 2142  
14:34:47 2143  	 -- Check that invoice exists
14:34:47 2144  	 BEGIN
14:34:47 2145  	   SELECT
14:34:47 2146  	     INVOICE.ID into temp_invoice_id
14:34:47 2147  	   FROM
14:34:47 2148  	     INVOICE
14:34:47 2149  	   WHERE
14:34:47 2150  	     INVOICE.ID = in_invoice_id;
14:34:47 2151  	   EXCEPTION
14:34:47 2152  	     WHEN NO_DATA_FOUND THEN
14:34:47 2153  	       RAISE BAD_INVOICE_ID;
14:34:47 2154  	 END;
14:34:47 2155  
14:34:47 2156  	 select decode(count(1), 0, GLOBAL_CONSTANTS_V18.FALSE, GLOBAL_CONSTANTS_V18.TRUE) into var_revoke
14:34:47 2157  	 from license l, subscription s, offer_chain oc
14:34:47 2158  	 where
14:34:47 2159  	   l.subscription_id = s.id and
14:34:47 2160  	   s.offer_chain_id = oc.id and
14:34:47 2161  	   l.invoice_id = in_invoice_id and
14:34:47 2162  	   oc.revoke_entitlements = GLOBAL_CONSTANTS_V18.TRUE and
14:34:47 2163  	   rownum < 2;
14:34:47 2164  
14:34:47 2165  	 var_billed := PROCS_INVOICE_V18.IS_INVOICE_PAYING_STARTED(in_invoice_id);
14:34:47 2166  	 var_refund := GLOBAL_CONSTANTS_V18.FALSE;
14:34:47 2167  
14:34:47 2168  	 -- Check that transaction for given invoice not started
14:34:47 2169  	 -- if refund enabled calculate and apply chargeback
14:34:47 2170  	 IF (
14:34:47 2171  	     var_billed = GLOBAL_CONSTANTS_V18.TRUE
14:34:47 2172  	   )THEN
14:34:47 2173  	   if (in_refundable = GLOBAL_CONSTANTS_V18.TRUE) then
14:34:47 2174  	     -- If started then we need to calculate refund
14:34:47 2175  	     BEGIN
14:34:47 2176  	       PROCS_INVOICE_V18.CALCULATE_INVOICE_CHARGEBACK(
14:34:47 2177  		 in_invoice_id,
14:34:47 2178  		 var_now,
14:34:47 2179  		 var_chargeback_amount
14:34:47 2180  	       );
14:34:47 2181  	       EXCEPTION
14:34:47 2182  		 WHEN OTHERS THEN
14:34:47 2183  		   EXCEPTION_MESSAGE := SQLERRM;
14:34:47 2184  		   RAISE CAN_NOT_CALCULATE_CHARGEBACK;
14:34:47 2185  	     END;
14:34:47 2186  	     IF var_chargeback_amount > 0 THEN
14:34:47 2187  	       BEGIN
14:34:47 2188  		 PROCS_INVOICE_V18.APPLY_REFUND(
14:34:47 2189  		   in_invoice_id,
14:34:47 2190  		   var_chargeback_amount,
14:34:47 2191  		   in_updated_by,
14:34:47 2192  		   ver_refund_charge_id
14:34:47 2193  		 );
14:34:47 2194  		 EXCEPTION
14:34:47 2195  		   WHEN OTHERS THEN
14:34:47 2196  		     EXCEPTION_MESSAGE := SQLERRM;
14:34:47 2197  		     RAISE CAN_NOT_APPLY_CHARGEBACK;
14:34:47 2198  	       END;
14:34:47 2199  	       var_refund := GLOBAL_CONSTANTS_V18.TRUE;
14:34:47 2200  	     END IF;
14:34:47 2201  	   end if;
14:34:47 2202  	 ELSE
14:34:47 2203  
14:34:47 2204  	   FOR f_transaction_to_close IN (
14:34:47 2205  	     SELECT DISTINCT CHARGE.TRANSACTION_ID AS "ID" FROM CHARGE WHERE CHARGE.INVOICE_ID = in_invoice_id and CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_OPENED
14:34:47 2206  	   )
14:34:47 2207  	   LOOP
14:34:47 2208  	     PROCS_TRANSACTION_V18.UPDATE_TRANSACTION_STATUS(
14:34:47 2209  	       in_transaction_id	=> f_transaction_to_close.ID,
14:34:47 2210  	       in_updated_by		=> in_updated_by,
14:34:47 2211  	       in_transaction_status_id => GLOBAL_STATUSES_V18.TRANSACTION_CLOSED
14:34:47 2212  	     );
14:34:47 2213  	   END LOOP;
14:34:47 2214  	   -- Needs to close charges. No refund.
14:34:47 2215  	   FOR f_charge_to_close IN (
14:34:47 2216  	     SELECT CHARGE.ID FROM CHARGE WHERE CHARGE.INVOICE_ID = in_invoice_id and CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_OPENED
14:34:47 2217  	   )
14:34:47 2218  	   LOOP
14:34:47 2219  	     PROCS_CHARGE_V18.UPDATE_CHARGE_STATUS(
14:34:47 2220  	       in_charge_id	   => f_charge_to_close.ID,
14:34:47 2221  	       in_updated_by	   => in_updated_by,
14:34:47 2222  	       in_charge_status_id => GLOBAL_STATUSES_V18.CHARGE_CANCELED
14:34:47 2223  	     );
14:34:47 2224  	   END LOOP;
14:34:47 2225  
14:34:47 2226  	   PROCS_INVOICE_V18.UPDATE_INVOICE_STATUS(
14:34:47 2227  	     in_invoice_id		    => in_invoice_id,
14:34:47 2228  	     in_updated_by		    => in_updated_by,
14:34:47 2229  	     in_invoice_status_id	    => GLOBAL_STATUSES_V18.INVOICE_CLOSED
14:34:47 2230  	   );
14:34:47 2231  
14:34:47 2232  	 END IF;
14:34:47 2233  	 -- update licenses
14:34:47 2234  	 IF(var_revoke = GLOBAL_CONSTANTS_V18.TRUE OR var_chargeback_amount > 0 OR var_billed = GLOBAL_CONSTANTS_V18.FALSE) THEN
14:34:47 2235  	   FOR f_license_to_cancel IN (
14:34:47 2236  	     SELECT LICENSE.ID FROM LICENSE WHERE LICENSE.INVOICE_ID = in_invoice_id AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 2237  	   )
14:34:47 2238  	   LOOP
14:34:47 2239  	     PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47 2240  	       in_license_id	     => f_license_to_cancel.ID,
14:34:47 2241  	       in_license_status_id  => GLOBAL_STATUSES_V18.LICENSE_CLOSED,
14:34:47 2242  	       in_needs_entitlements => GLOBAL_CONSTANTS_V18.TRUE,
14:34:47 2243  	       in_updated_by	     => in_updated_by,
14:34:47 2244  	       in_entitlement_end_date => var_now
14:34:47 2245  	     );
14:34:47 2246  	   END LOOP;
14:34:47 2247  	 ELSE
14:34:47 2248  	   FOR f_license_to_cancel IN (
14:34:47 2249  	     SELECT LICENSE.ID FROM LICENSE WHERE LICENSE.INVOICE_ID = in_invoice_id AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 2250  	   )
14:34:47 2251  	   LOOP
14:34:47 2252  	     PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47 2253  	       in_license_id	     => f_license_to_cancel.ID,
14:34:47 2254  	       in_license_status_id  => GLOBAL_STATUSES_V18.LICENSE_CLOSED,
14:34:47 2255  	       in_updated_by	     => in_updated_by
14:34:47 2256  	     );
14:34:47 2257  	   END LOOP;
14:34:47 2258  	 END IF;
14:34:47 2259  
14:34:47 2260  
14:34:47 2261  EXCEPTION
14:34:47 2262  WHEN BAD_INVOICE_ID THEN
14:34:47 2263  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2264  	   SPROC_NAME, 'No such invoice');
14:34:47 2265  WHEN CAN_NOT_CALCULATE_CHARGEBACK THEN
14:34:47 2266  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 2267  	   SPROC_NAME, 'Could not calculate invoice refund', EXCEPTION_MESSAGE);
14:34:47 2268  WHEN CAN_NOT_APPLY_CHARGEBACK THEN
14:34:47 2269  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 2270  	   SPROC_NAME, 'Could not apply chargeback', EXCEPTION_MESSAGE);
14:34:47 2271  WHEN OTHERS THEN
14:34:47 2272  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2273  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 2274  END CANCEL_SUBSCRIPTION_INVOICE;
14:34:47 2275  
14:34:47 2276  /******************************************************************************/
14:34:47 2277  
14:34:47 2278  PROCEDURE FINALIZE_CANCELATION (
14:34:47 2279  /*
14:34:47 2280  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 2281  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 2282  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:47 2283  */
14:34:47 2284  --  in_subscription_id	 IN SUBSCRIPTION.ID%TYPE,
14:34:47 2285  --  in_cancelation_reason IN SUBSCRIPTION_CANCEL_REASON.VALUE%TYPE,
14:34:47 2286  --  in_cancelation_date	 IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
14:34:47 2287  --  in_note		 IN SUBSCRIPTION_NOTE.NOTE%TYPE,
14:34:47 2288  --  in_agent_id		 IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
14:34:47 2289  --  in_updated_by	 IN SUBSCRIPTION.UPDATED_BY%TYPE
14:34:47 2290  	 in_subscription_id    IN NUMBER,
14:34:47 2291  	 in_cancelation_reason IN VARCHAR2,
14:34:47 2292  	 in_cancelation_date   IN DATE,
14:34:47 2293  	 in_note	       IN VARCHAR2,
14:34:47 2294  	 in_agent_id	       IN NUMBER,
14:34:47 2295  	 in_updated_by	       IN VARCHAR2
14:34:47 2296  ) AS
14:34:47 2297  SPROC_NAME CONSTANT VARCHAR2(20) := 'FINALIZE_CANCELATION';
14:34:47 2298  -- VARIABLES
14:34:47 2299  var_current_subscr_status SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE;
14:34:47 2300  var_sct_id		 SUBSCRIPTION.SCT_ID%TYPE;
14:34:47 2301  var_active_invoices_count NUMBER;
14:34:47 2302  var_license_to_disgrace	 LICENSE.ID%TYPE;
14:34:47 2303  var_now			 DATE := SYSDATE;
14:34:47 2304  -- EXCEPTIONS
14:34:47 2305  BAD_SUBSCRIPTION_ID	   EXCEPTION;
14:34:47 2306  BAD_SUBSCRIPTION_STATUS	   EXCEPTION;
14:34:47 2307  BAD_CANCELATION_REASON	   EXCEPTION;
14:34:47 2308  CAN_NOT_UPDATE_SUBSCRIPTION EXCEPTION;
14:34:47 2309  ACTIVE_INVOICES_FOUND	   EXCEPTION;
14:34:47 2310  CAN_NOT_CREATE_NOTE	   EXCEPTION;
14:34:47 2311  EXCEPTION_MESSAGE	   VARCHAR2(1024);
14:34:47 2312  BEGIN
14:34:47 2313  
14:34:47 2314  	 -- Get current subscription status
14:34:47 2315  	 BEGIN
14:34:47 2316  	   SELECT
14:34:47 2317  	     SUBSCRIPTION.SUBSCRIPTION_STATUS_ID into var_current_subscr_status
14:34:47 2318  	   FROM
14:34:47 2319  	     SUBSCRIPTION
14:34:47 2320  	   WHERE
14:34:47 2321  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 2322  	   EXCEPTION
14:34:47 2323  	     WHEN NO_DATA_FOUND THEN
14:34:47 2324  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 2325  	 END;
14:34:47 2326  
14:34:47 2327  	 -- Check that subscription reason is correct
14:34:47 2328  	 BEGIN
14:34:47 2329  	   SELECT
14:34:47 2330  	     SUBSCRIPTION_CANCEL_REASON.ID into var_sct_id
14:34:47 2331  	   FROM
14:34:47 2332  	     SUBSCRIPTION_CANCEL_REASON
14:34:47 2333  	   WHERE
14:34:47 2334  	     SUBSCRIPTION_CANCEL_REASON.VALUE LIKE in_cancelation_reason
14:34:47 2335  	     AND ROWNUM <= 1;
14:34:47 2336  	   EXCEPTION
14:34:47 2337  	     WHEN NO_DATA_FOUND THEN
14:34:47 2338  	       RAISE BAD_CANCELATION_REASON;
14:34:47 2339  	 END;
14:34:47 2340  
14:34:47 2341  	 -- Check for invoices with active licenses
14:34:47 2342  	 SELECT
14:34:47 2343  	   COUNT(*) into var_active_invoices_count
14:34:47 2344  	 FROM
14:34:47 2345  	   LICENSE
14:34:47 2346  	   INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
14:34:47 2347  	 WHERE
14:34:47 2348  	   LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 2349  	   AND LICENSE.SUBSCRIPTION_ID = in_subscription_id;
14:34:47 2350  
14:34:47 2351  	 IF var_active_invoices_count > 0 THEN
14:34:47 2352  	   RAISE ACTIVE_INVOICES_FOUND;
14:34:47 2353  	 END IF;
14:34:47 2354  
14:34:47 2355  	 -- Check that subscription is active
14:34:47 2356  	 IF var_current_subscr_status != GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE AND
14:34:47 2357  	    var_current_subscr_status != GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED AND
14:34:47 2358  	    var_current_subscr_status != GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD THEN
14:34:47 2359  	   RAISE BAD_SUBSCRIPTION_STATUS;
14:34:47 2360  	 END IF;
14:34:47 2361  
14:34:47 2362  	 -- Update subscription data
14:34:47 2363  	 BEGIN
14:34:47 2364  	   PROCS_SUBSCRIPTION_CRU_V18.UPDATE_SUBSCRIPTION(
14:34:47 2365  	     in_subscription_id        => in_subscription_id,
14:34:47 2366  	     in_subscription_status_id => GLOBAL_STATUSES_V18.SUBSCRIPTION_CANCELED,
14:34:47 2367  	     in_cancelation_date       => in_cancelation_date,
14:34:47 2368  	     in_updated_by	       => in_updated_by,
14:34:47 2369  	     in_sct_id		       => var_sct_id
14:34:47 2370  	   );
14:34:47 2371  	   EXCEPTION
14:34:47 2372  	     WHEN OTHERS THEN
14:34:47 2373  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:47 2374  	       RAISE CAN_NOT_UPDATE_SUBSCRIPTION;
14:34:47 2375  	 END;
14:34:47 2376  
14:34:47 2377  	 -- Terminate grace period for licenses in grace [SAR-31]
14:34:47 2378  	 BEGIN
14:34:47 2379  	   SELECT
14:34:47 2380  	     LICENSE.ID into var_license_to_disgrace
14:34:47 2381  	   FROM
14:34:47 2382  	     LICENSE
14:34:47 2383  	   WHERE
14:34:47 2384  	     LICENSE.SUBSCRIPTION_ID = in_subscription_id
14:34:47 2385  	     AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_IN_GRACE_PERIOD
14:34:47 2386  	     AND ROWNUM <= 1
14:34:47 2387  	   ORDER BY
14:34:47 2388  	     CREATE_DATE DESC;
14:34:47 2389  	 EXCEPTION
14:34:47 2390  	   WHEN NO_DATA_FOUND THEN
14:34:47 2391  	     var_license_to_disgrace := NULL;
14:34:47 2392  	 END;
14:34:47 2393  
14:34:47 2394  	 IF var_license_to_disgrace IS NOT NULL THEN
14:34:47 2395  	   PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:47 2396  	     in_license_id	     => var_license_to_disgrace,
14:34:47 2397  	     in_license_status_id    => GLOBAL_STATUSES_V18.LICENSE_CLOSED,
14:34:47 2398  	     in_updated_by	     => in_updated_by
14:34:47 2399  	   );
14:34:47 2400  	 END IF;
14:34:47 2401  
14:34:47 2402  	 -- Annotate subscription
14:34:47 2403  	 IF in_note IS NOT NULL THEN
14:34:47 2404  	   BEGIN
14:34:47 2405  	     PROCS_SUBSCRIPTION_V18.ANNOTATE_SUBSCRIPTION(
14:34:47 2406  	       in_subscription_id,
14:34:47 2407  	       in_agent_id,
14:34:47 2408  	       in_note,
14:34:47 2409  	       in_updated_by
14:34:47 2410  	     );
14:34:47 2411  	     EXCEPTION
14:34:47 2412  	      WHEN OTHERS THEN
14:34:47 2413  		EXCEPTION_MESSAGE := SQLERRM;
14:34:47 2414  		RAISE CAN_NOT_CREATE_NOTE;
14:34:47 2415  	   END;
14:34:47 2416  	 END IF;
14:34:47 2417  
14:34:47 2418  EXCEPTION
14:34:47 2419  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 2420  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2421  	   SPROC_NAME, 'No such subscription');
14:34:47 2422  WHEN BAD_SUBSCRIPTION_STATUS THEN
14:34:47 2423  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 2424  	   SPROC_NAME, 'Bad current subscription status');
14:34:47 2425  WHEN BAD_CANCELATION_REASON THEN
14:34:47 2426  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 2427  	   SPROC_NAME, 'Bad cancellation reason');
14:34:47 2428  WHEN CAN_NOT_UPDATE_SUBSCRIPTION THEN
14:34:47 2429  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 2430  	   SPROC_NAME, 'Could not update subscription data', EXCEPTION_MESSAGE);
14:34:47 2431  WHEN ACTIVE_INVOICES_FOUND THEN
14:34:47 2432  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 2433  	   SPROC_NAME, 'Invoices with active licenses found');
14:34:47 2434  WHEN CAN_NOT_CREATE_NOTE THEN
14:34:47 2435  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 2436  	   SPROC_NAME, 'Could not annotate subscription', EXCEPTION_MESSAGE);
14:34:47 2437  --WHEN OTHERS THEN
14:34:47 2438  --  PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2439  --    SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 2440  END FINALIZE_CANCELATION;
14:34:47 2441  
14:34:47 2442  /******************************************************************************/
14:34:47 2443  
14:34:47 2444  PROCEDURE FINALIZE_FALSE_START (
14:34:47 2445  /*
14:34:47 2446  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 2447  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 2448  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:47 2449  */
14:34:47 2450  --  in_subscription_id	 IN SUBSCRIPTION.ID%TYPE,
14:34:47 2451  --  in_cancelation_date	 IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
14:34:47 2452  --  in_note		 IN SUBSCRIPTION_NOTE.NOTE%TYPE,
14:34:47 2453  --  in_agent_id		 IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
14:34:47 2454  --  in_updated_by	 IN SUBSCRIPTION.UPDATED_BY%TYPE
14:34:47 2455  	 in_subscription_id    IN NUMBER,
14:34:47 2456  	 in_cancelation_date   IN DATE,
14:34:47 2457  	 in_note	       IN VARCHAR2,
14:34:47 2458  	 in_agent_id	       IN NUMBER,
14:34:47 2459  	 in_updated_by	       IN VARCHAR2
14:34:47 2460  ) AS
14:34:47 2461  SPROC_NAME CONSTANT VARCHAR2(20) := 'FINALIZE_FALSE_START';
14:34:47 2462  FALSE_START_REASON CONSTANT NUMBER := 41;
14:34:47 2463  -- VARIABLES
14:34:47 2464  var_current_subscr_status SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE;
14:34:47 2465  var_active_invoices_count NUMBER;
14:34:47 2466  -- EXCEPTIONS
14:34:47 2467  BAD_SUBSCRIPTION_ID	   EXCEPTION;
14:34:47 2468  BAD_SUBSCRIPTION_STATUS	   EXCEPTION;
14:34:47 2469  CAN_NOT_UPDATE_SUBSCRIPTION EXCEPTION;
14:34:47 2470  ACTIVE_INVOICES_FOUND	   EXCEPTION;
14:34:47 2471  CAN_NOT_CREATE_NOTE	   EXCEPTION;
14:34:47 2472  EXCEPTION_MESSAGE	   VARCHAR2(1024);
14:34:47 2473  BEGIN
14:34:47 2474  
14:34:47 2475  	 -- Get current subscription status
14:34:47 2476  	 BEGIN
14:34:47 2477  	   SELECT
14:34:47 2478  	     SUBSCRIPTION.SUBSCRIPTION_STATUS_ID into var_current_subscr_status
14:34:47 2479  	   FROM
14:34:47 2480  	     SUBSCRIPTION
14:34:47 2481  	   WHERE
14:34:47 2482  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 2483  	   EXCEPTION
14:34:47 2484  	     WHEN NO_DATA_FOUND THEN
14:34:47 2485  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 2486  	 END;
14:34:47 2487  
14:34:47 2488  	 -- Check for invoices with active licenses
14:34:47 2489  	 SELECT
14:34:47 2490  	   COUNT(*) into var_active_invoices_count
14:34:47 2491  	 FROM
14:34:47 2492  	   LICENSE
14:34:47 2493  	   INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
14:34:47 2494  	 WHERE
14:34:47 2495  	   LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 2496  	   AND LICENSE.SUBSCRIPTION_ID = in_subscription_id;
14:34:47 2497  
14:34:47 2498  	 IF var_active_invoices_count > 0 THEN
14:34:47 2499  	   RAISE ACTIVE_INVOICES_FOUND;
14:34:47 2500  	 END IF;
14:34:47 2501  
14:34:47 2502  	 -- Check that subscription is active
14:34:47 2503  	 IF var_current_subscr_status != GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:47 2504  	    AND var_current_subscr_status != GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED THEN
14:34:47 2505  	   RAISE BAD_SUBSCRIPTION_STATUS;
14:34:47 2506  	 END IF;
14:34:47 2507  
14:34:47 2508  	 -- Update subscription data
14:34:47 2509  	 BEGIN
14:34:47 2510  	   PROCS_SUBSCRIPTION_CRU_V18.UPDATE_SUBSCRIPTION(
14:34:47 2511  	     in_subscription_id        => in_subscription_id,
14:34:47 2512  	     in_subscription_status_id => GLOBAL_STATUSES_V18.SUBSCRIPTION_FALSE_START,
14:34:47 2513  	     in_cancelation_date       => in_cancelation_date,
14:34:47 2514  	     in_updated_by	       => in_updated_by,
14:34:47 2515  	     in_sct_id		       => FALSE_START_REASON
14:34:47 2516  	   );
14:34:47 2517  	   EXCEPTION
14:34:47 2518  	     WHEN OTHERS THEN
14:34:47 2519  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:47 2520  	       RAISE CAN_NOT_UPDATE_SUBSCRIPTION;
14:34:47 2521  	 END;
14:34:47 2522  
14:34:47 2523  	 -- Annotate subscription
14:34:47 2524  	 IF in_note IS NOT NULL THEN
14:34:47 2525  	   BEGIN
14:34:47 2526  	     PROCS_SUBSCRIPTION_V18.ANNOTATE_SUBSCRIPTION(
14:34:47 2527  	       in_subscription_id,
14:34:47 2528  	       in_agent_id,
14:34:47 2529  	       in_note,
14:34:47 2530  	       in_updated_by
14:34:47 2531  	     );
14:34:47 2532  	     EXCEPTION
14:34:47 2533  	      WHEN OTHERS THEN
14:34:47 2534  		EXCEPTION_MESSAGE := SQLERRM;
14:34:47 2535  		RAISE CAN_NOT_CREATE_NOTE;
14:34:47 2536  	   END;
14:34:47 2537  	 END IF;
14:34:47 2538  
14:34:47 2539  EXCEPTION
14:34:47 2540  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 2541  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2542  	   SPROC_NAME, 'No such subscription');
14:34:47 2543  WHEN BAD_SUBSCRIPTION_STATUS THEN
14:34:47 2544  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 2545  	   SPROC_NAME, 'Bad current subscription status');
14:34:47 2546  WHEN CAN_NOT_UPDATE_SUBSCRIPTION THEN
14:34:47 2547  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 2548  	   SPROC_NAME, 'Could not update subscription data', EXCEPTION_MESSAGE);
14:34:47 2549  WHEN ACTIVE_INVOICES_FOUND THEN
14:34:47 2550  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:47 2551  	   SPROC_NAME, 'Invoices with active licenses found');
14:34:47 2552  WHEN CAN_NOT_CREATE_NOTE THEN
14:34:47 2553  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 2554  	   SPROC_NAME, 'Could not annotate subscription', EXCEPTION_MESSAGE);
14:34:47 2555  WHEN OTHERS THEN
14:34:47 2556  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2557  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 2558  END FINALIZE_FALSE_START;
14:34:47 2559  
14:34:47 2560  /******************************************************************************/
14:34:47 2561  
14:34:47 2562  FUNCTION IS_SUBSCRIPTION_CANCELABLE (
14:34:47 2563  	 in_subscription_id IN NUMBER
14:34:47 2564  ) RETURN NUMBER AS
14:34:47 2565  SPROC_NAME CONSTANT VARCHAR2(26) := 'IS_SUBSCRIPTION_CANCELABLE';
14:34:47 2566  -- VARIABLES
14:34:47 2567  var_is_offer_chain_cancelable NUMBER;
14:34:47 2568  --64603
14:34:47 2569  var_end_date date;
14:34:47 2570  today_date date := current_date;
14:34:47 2571  offer_id number;
14:34:47 2572  -- EXCEPTIONS
14:34:47 2573  COULD_NOT_CHECK	   EXCEPTION;
14:34:47 2574  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 2575  EXCEPTION_MESSAGE   VARCHAR2(1024);
14:34:47 2576  BEGIN
14:34:47 2577  
14:34:47 2578  	 BEGIN
14:34:47 2579  	   -- find offer_chain_id for given in_subscription_id
14:34:47 2580  	   SELECT OFFER_CHAIN_ID into offer_id
14:34:47 2581  	   FROM SUBSCRIPTION
14:34:47 2582  	   WHERE ID = in_subscription_id;
14:34:47 2583  	   EXCEPTION
14:34:47 2584  	     WHEN NO_DATA_FOUND THEN
14:34:47 2585  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 2586  	     WHEN OTHERS THEN
14:34:47 2587  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:47 2588  	       RAISE COULD_NOT_CHECK;
14:34:47 2589  	 END;
14:34:47 2590  
14:34:47 2591  	 -- find if it was redeemed from a gift certificate
14:34:47 2592  	 BEGIN
14:34:47 2593  	   SELECT l.end_date INTO var_end_date
14:34:47 2594  	   FROM LICENSE l, GIFT_CERTIFICATE g
14:34:47 2595  	   WHERE l.invoice_id = g.finalized_invoice_id
14:34:47 2596  	   AND l.subscription_id = in_subscription_id;
14:34:47 2597  
14:34:47 2598  	   -- if the license end_date is bigger than today, we are in the
14:34:47 2599  	   -- first period, so we cannot cancel; otherwise can cancel
14:34:47 2600  	   IF var_end_date > today_date THEN
14:34:47 2601  	       RETURN GLOBAL_CONSTANTS_V18.FALSE;
14:34:47 2602  	   ELSE
14:34:47 2603  	       RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:47 2604  	   END IF;
14:34:47 2605  
14:34:47 2606  	   EXCEPTION
14:34:47 2607  	       -- not coming from a gift certificate,
14:34:47 2608  	       -- use old logic
14:34:47 2609  	       WHEN NO_DATA_FOUND THEN
14:34:47 2610  		   SELECT
14:34:47 2611  		       PROCS_OFFER_CHAIN_V18.IS_OFFER_CHAIN_CANCELABLE(offer_id)
14:34:47 2612  		       INTO var_is_offer_chain_cancelable
14:34:47 2613  		   FROM DUAL;
14:34:47 2614  		   RETURN var_is_offer_chain_cancelable;
14:34:47 2615  	 END;
14:34:47 2616  
14:34:47 2617  EXCEPTION
14:34:47 2618  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 2619  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2620  	   SPROC_NAME, 'No such subscription');
14:34:47 2621  WHEN COULD_NOT_CHECK THEN
14:34:47 2622  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:47 2623  	   SPROC_NAME, 'Could not check if offer chain calcelable', EXCEPTION_MESSAGE);
14:34:47 2624  WHEN OTHERS THEN
14:34:47 2625  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2626  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 2627  
14:34:47 2628  END IS_SUBSCRIPTION_CANCELABLE;
14:34:47 2629  /******************************************************************************/
14:34:47 2630  
14:34:47 2631  PROCEDURE GET_SUBSCR_PROD_OFFERRINGS (
14:34:47 2632  /*
14:34:47 2633  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 2634  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 2635  */
14:34:47 2636  	 in_subscription_id IN NUMBER,
14:34:47 2637  	 out_result_set     OUT SYS_REFCURSOR
14:34:47 2638  ) AS
14:34:47 2639  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_SUBSCR_PROD_OFFERRINGS';
14:34:47 2640  -- VARIABLES
14:34:47 2641  var_offer NUMBER;
14:34:47 2642  -- EXCEPTIONS
14:34:47 2643  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 2644  BEGIN
14:34:47 2645  
14:34:47 2646  	 OPEN out_result_set FOR
14:34:47 2647  	 SELECT DISTINCT
14:34:47 2648  	   PRODUCT_OFFERING.ID,
14:34:47 2649  	   PRODUCT_OFFERING.PRODUCT_ID,
14:34:47 2650  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
14:34:47 2651  	   PRODUCT_OFFERING.UNIT_PRICE,
14:34:47 2652  	   PRODUCT_OFFERING.QUANTITY,
14:34:47 2653  	   PRODUCT_OFFERING.CREATE_DATE,
14:34:47 2654  	   PRODUCT_OFFERING.CREATED_BY,
14:34:47 2655  	   CAPABILITY.ID CAP_ID,
14:34:47 2656  	   CAPABILITY.CODE CAP_CODE,
14:34:47 2657  	   CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
14:34:47 2658  	   CAPABILITY.SHAREABLE CAP_SHAREABLE
14:34:47 2659  	 FROM
14:34:47 2660  	   OFFER_PRODUCT_OFFERING
14:34:47 2661  	   INNER JOIN PRODUCT_OFFERING ON PRODUCT_OFFERING.ID = OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
14:34:47 2662  	   INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
14:34:47 2663  	 WHERE
14:34:47 2664  	   OFFER_PRODUCT_OFFERING.OFFER_ID IN (
14:34:47 2665  	     SELECT
14:34:47 2666  	       LICENSE.OFFER_ID
14:34:47 2667  	     FROM
14:34:47 2668  	       SUBSCRIPTION
14:34:47 2669  	       JOIN LICENSE ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND LICENSE.NEEDS_ENTITLEMENTS = GLOBAL_CONSTANTS_V18.TRUE
14:34:47 2670  	     WHERE
14:34:47 2671  	       SUBSCRIPTION.ID = in_subscription_id
14:34:47 2672  	   );
14:34:47 2673  
14:34:47 2674  EXCEPTION
14:34:47 2675  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 2676  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2677  	   SPROC_NAME, 'No such subscription');
14:34:47 2678  WHEN OTHERS THEN
14:34:47 2679  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2680  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 2681  END GET_SUBSCR_PROD_OFFERRINGS;
14:34:47 2682  
14:34:47 2683  
14:34:47 2684  PROCEDURE RETRIEVE_SUB_PROD_OFFER (
14:34:47 2685  /*
14:34:47 2686  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 2687  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 2688  */
14:34:47 2689  	 in_subscription_id IN NUMBER,
14:34:47 2690  	 out_result_set     OUT SYS_REFCURSOR
14:34:47 2691  ) AS
14:34:47 2692  SPROC_NAME CONSTANT VARCHAR2(27) := 'RETRIEVE_SUB_PROD_OFFER';
14:34:47 2693  -- VARIABLES
14:34:47 2694  var_offer NUMBER;
14:34:47 2695  -- EXCEPTIONS
14:34:47 2696  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 2697  BEGIN
14:34:47 2698  
14:34:47 2699  	 OPEN out_result_set FOR
14:34:47 2700  	 SELECT DISTINCT
14:34:47 2701  	   PRODUCT_OFFERING.ID,
14:34:47 2702  	   PRODUCT_OFFERING.PRODUCT_ID,
14:34:47 2703  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
14:34:47 2704  	   PRODUCT_OFFERING.UNIT_PRICE,
14:34:47 2705  	   PRODUCT_OFFERING.QUANTITY,
14:34:47 2706  	   PRODUCT_OFFERING.CREATE_DATE,
14:34:47 2707  	   PRODUCT_OFFERING.CREATED_BY,
14:34:47 2708  	   CAPABILITY.ID CAP_ID,
14:34:47 2709  	   CAPABILITY.CODE CAP_CODE,
14:34:47 2710  	   CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
14:34:47 2711  	   CAPABILITY.SHAREABLE CAP_SHAREABLE
14:34:47 2712  	 FROM
14:34:47 2713  	   OFFER_PRODUCT_OFFERING
14:34:47 2714  	   INNER JOIN PRODUCT_OFFERING ON PRODUCT_OFFERING.ID = OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
14:34:47 2715  	   INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
14:34:47 2716  	 WHERE
14:34:47 2717  	   OFFER_PRODUCT_OFFERING.OFFER_ID IN (
14:34:47 2718  	     SELECT
14:34:47 2719  	       LICENSE.OFFER_ID
14:34:47 2720  	     FROM
14:34:47 2721  	       SUBSCRIPTION
14:34:47 2722  	       JOIN LICENSE ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:47 2723  	     WHERE
14:34:47 2724  	       SUBSCRIPTION.ID = in_subscription_id
14:34:47 2725  	   );
14:34:47 2726  
14:34:47 2727  EXCEPTION
14:34:47 2728  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 2729  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2730  	   SPROC_NAME, 'No such subscription');
14:34:47 2731  WHEN OTHERS THEN
14:34:47 2732  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2733  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 2734  END RETRIEVE_SUB_PROD_OFFER;
14:34:47 2735  /******************************************************************************/
14:34:47 2736  
14:34:47 2737  
14:34:47 2738  
14:34:47 2739  
14:34:47 2740  PROCEDURE GET_SUBSCR_LIC_OFFER(
14:34:47 2741  /*
14:34:47 2742  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 2743  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 2744  */
14:34:47 2745  	 in_subscription_id IN NUMBER,
14:34:47 2746  	 out_result_set     OUT SYS_REFCURSOR
14:34:47 2747  ) AS
14:34:47 2748  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_SUBSCR_LIC_OFFER';
14:34:47 2749  -- VARIABLES
14:34:47 2750  var_offer_chain NUMBER;
14:34:47 2751  -- EXCEPTIONS
14:34:47 2752  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 2753  BEGIN
14:34:47 2754  	 BEGIN
14:34:47 2755  	   SELECT
14:34:47 2756  	     SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain
14:34:47 2757  	   FROM
14:34:47 2758  	     SUBSCRIPTION
14:34:47 2759  	   WHERE
14:34:47 2760  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 2761  	   EXCEPTION
14:34:47 2762  	     WHEN NO_DATA_FOUND THEN
14:34:47 2763  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 2764  	 END;
14:34:47 2765  
14:34:47 2766  	 OPEN out_result_set FOR
14:34:47 2767  	 SELECT DISTINCT
14:34:47 2768  	   po.ID po_id,
14:34:47 2769  	   po.PRODUCT_ID po_product_id,
14:34:47 2770  	   po.TAX_CATEGORY_ID po_tax_category_id,
14:34:47 2771  	   po.UNIT_PRICE po_unit_price,
14:34:47 2772  	   po.QUANTITY po_quantity,
14:34:47 2773  	   po.CREATE_DATE po_create_date,
14:34:47 2774  	   po.CREATED_BY po_created_by,
14:34:47 2775  	   l.ID l_id,
14:34:47 2776  	   l.license_status_id l_license_status_id,
14:34:47 2777  	   l.start_date l_start_date,
14:34:47 2778  	   l.offer_id l_offer_id,
14:34:47 2779  	   l.subscription_id l_subscription_id,
14:34:47 2780  	   l.invoice_id l_invoice_id,
14:34:47 2781  	   l.end_date l_end_date,
14:34:47 2782  	   l.entitlement_end_date l_entitlement_end_date,
14:34:47 2783  	   l.create_date l_create_date,
14:34:47 2784  	   l.created_by l_created_by,
14:34:47 2785  	   l.is_extension l_is_extension,
14:34:47 2786  	   l.current_offer_index l_current_offer_index,
14:34:47 2787  	   l.current_offer_recurr_num l_current_offer_recurr_num,
14:34:47 2788  	   l.needs_entitlements l_needs_entitlements
14:34:47 2789  	 FROM
14:34:47 2790  	   OFFER_PRODUCT_OFFERING opo,
14:34:47 2791  	   PRODUCT_OFFERING po,
14:34:47 2792  	   SUBSCRIPTION s,
14:34:47 2793  	   LICENSE l
14:34:47 2794  	 WHERE
14:34:47 2795  	   opo.product_offering_id = po.id
14:34:47 2796  	   and po.id = l.offer_id
14:34:47 2797  	   and l.subscription_id = s.id
14:34:47 2798  	   and l.license_status_id = GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:47 2799  	   and s.id = in_subscription_id
14:34:47 2800  	 ;
14:34:47 2801  EXCEPTION
14:34:47 2802  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 2803  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2804  	   SPROC_NAME, 'No such subscription');
14:34:47 2805  WHEN OTHERS THEN
14:34:47 2806  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2807  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 2808  END GET_SUBSCR_LIC_OFFER;
14:34:47 2809  
14:34:47 2810  /******************************************************************************/
14:34:47 2811  
14:34:47 2812  PROCEDURE ARE_REFUNDS_PENDING_FOR_SUBSCR (
14:34:47 2813  /*
14:34:47 2814  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 2815  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 2816  */
14:34:47 2817  	 in_subscription_id IN NUMBER,
14:34:47 2818  	 out_result	    OUT NUMBER
14:34:47 2819  ) AS
14:34:47 2820  SPROC_NAME CONSTANT VARCHAR2(30) := 'ARE_REFUNDS_PENDING_FOR_SUBSCR';
14:34:47 2821  -- VARIABLES
14:34:47 2822  temp_subscription_id NUMBER;
14:34:47 2823  var_local_result     NUMBER;
14:34:47 2824  -- EXCEPTIONS
14:34:47 2825  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:47 2826  BEGIN
14:34:47 2827  
14:34:47 2828  	 -- Check that subscription exists
14:34:47 2829  	 BEGIN
14:34:47 2830  	   SELECT
14:34:47 2831  	     SUBSCRIPTION.ID into temp_subscription_id
14:34:47 2832  	   FROM
14:34:47 2833  	     SUBSCRIPTION
14:34:47 2834  	   WHERE
14:34:47 2835  	     SUBSCRIPTION.ID = in_subscription_id;
14:34:47 2836  	   EXCEPTION
14:34:47 2837  	     WHEN NO_DATA_FOUND THEN
14:34:47 2838  	       RAISE BAD_SUBSCRIPTION_ID;
14:34:47 2839  	 END;
14:34:47 2840  
14:34:47 2841  	 var_local_result := NULL;
14:34:47 2842  
14:34:47 2843  	 -- Check charges for each invoice associated with gived subscription
14:34:47 2844  	 FOR f_invoice IN (
14:34:47 2845  	   SELECT DISTINCT
14:34:47 2846  	     LICENSE.INVOICE_ID as "ID"
14:34:47 2847  	   FROM
14:34:47 2848  	     LICENSE
14:34:47 2849  	   WHERE
14:34:47 2850  	     LICENSE.SUBSCRIPTION_ID = in_subscription_id
14:34:47 2851  	     AND LICENSE.LICENSE_STATUS_ID IN ( SELECT GLOBAL_STATUSES_V18.LICENSE_ACTIVE FROM DUAL )
14:34:47 2852  	 )
14:34:47 2853  	 LOOP
14:34:47 2854  
14:34:47 2855  	   -- Check each charge in invoice
14:34:47 2856  	   FOR f_charge IN (
14:34:47 2857  	     SELECT
14:34:47 2858  	       CHARGE.ID,
14:34:47 2859  	       CHARGE.CHARGE_STATUS_ID,
14:34:47 2860  	       CHARGE.CHARGE_AMOUNT
14:34:47 2861  	     FROM
14:34:47 2862  	       CHARGE
14:34:47 2863  	     WHERE
14:34:47 2864  	       CHARGE.INVOICE_ID = f_invoice.ID
14:34:47 2865  	   )
14:34:47 2866  	   LOOP
14:34:47 2867  
14:34:47 2868  	     -- Charge amount < 0     => it is a refund
14:34:47 2869  	     -- Charge status is OPEN => means that it is not processed yet
14:34:47 2870  	     IF f_charge.CHARGE_AMOUNT < 0
14:34:47 2871  		AND f_charge.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_OPENED THEN
14:34:47 2872  	       var_local_result := GLOBAL_CONSTANTS_V18.TRUE;
14:34:47 2873  	     END IF;
14:34:47 2874  
14:34:47 2875  	   END LOOP;
14:34:47 2876  
14:34:47 2877  	 END LOOP;
14:34:47 2878  
14:34:47 2879  	 IF var_local_result IS NULL THEN
14:34:47 2880  	   out_result := GLOBAL_CONSTANTS_V18.FALSE;
14:34:47 2881  	 ELSE
14:34:47 2882  	   out_result := GLOBAL_CONSTANTS_V18.TRUE;
14:34:47 2883  	 END IF;
14:34:47 2884  
14:34:47 2885  EXCEPTION
14:34:47 2886  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:47 2887  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2888  	   SPROC_NAME, 'No such transaction id');
14:34:47 2889  WHEN OTHERS THEN
14:34:47 2890  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2891  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 2892  END ARE_REFUNDS_PENDING_FOR_SUBSCR;
14:34:47 2893  
14:34:47 2894  PROCEDURE GET_EXISTING_SUBSCR_NUMBER (
14:34:47 2895  /*
14:34:47 2896  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 2897  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 2898  */
14:34:47 2899  	 in_group_id	    IN NUMBER,
14:34:47 2900  	 in_offer_chain_id  IN NUMBER,
14:34:47 2901  	 out_result	    OUT NUMBER
14:34:47 2902  ) AS
14:34:47 2903  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_EXISTING_SUBSCR_NUMBER';
14:34:47 2904  -- VARIABLES
14:34:47 2905  temp_acct_id	    NUMBER;
14:34:47 2906  temp_oc_id	    NUMBER;
14:34:47 2907  -- EXCEPTIONS
14:34:47 2908  BAD_GROUP_ID EXCEPTION;
14:34:47 2909  BAD_OFFER_CHAIN_ID EXCEPTION;
14:34:47 2910  BEGIN
14:34:47 2911  	 -- Check that group id exists
14:34:47 2912  	 BEGIN
14:34:47 2913  	   SELECT
14:34:47 2914  	     ACCOUNT.ID into temp_acct_id
14:34:47 2915  	   FROM
14:34:47 2916  	     ACCOUNT
14:34:47 2917  	   WHERE
14:34:47 2918  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:47 2919  	   EXCEPTION
14:34:47 2920  	     WHEN NO_DATA_FOUND THEN
14:34:47 2921  	       RAISE BAD_GROUP_ID;
14:34:47 2922  	 END;
14:34:47 2923  	 -- Check that offer chain id exists
14:34:47 2924  	 BEGIN
14:34:47 2925  	   SELECT
14:34:47 2926  	     OFFER_CHAIN.ID into temp_oc_id
14:34:47 2927  	   FROM
14:34:47 2928  	     OFFER_CHAIN
14:34:47 2929  	   WHERE
14:34:47 2930  	     OFFER_CHAIN.ID = in_offer_chain_id;
14:34:47 2931  	   EXCEPTION
14:34:47 2932  	     WHEN NO_DATA_FOUND THEN
14:34:47 2933  	       RAISE BAD_OFFER_CHAIN_ID;
14:34:47 2934  	 END;
14:34:47 2935  	 SELECT
14:34:47 2936  	   COUNT(*) into out_result
14:34:47 2937  	 FROM
14:34:47 2938  	   SUBSCRIPTION
14:34:47 2939  	     INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
14:34:47 2940  	 WHERE
14:34:47 2941  	   ACCOUNT.GROUP_ID = in_group_id
14:34:47 2942  	   AND SUBSCRIPTION.OFFER_CHAIN_ID = in_offer_chain_id
14:34:47 2943  	   AND (
14:34:47 2944  	     SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:47 2945  	     OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD);
14:34:47 2946  
14:34:47 2947  EXCEPTION
14:34:47 2948  WHEN BAD_GROUP_ID THEN
14:34:47 2949  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2950  	   SPROC_NAME, 'No such transaction id');
14:34:47 2951  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:47 2952  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 2953  	   SPROC_NAME, 'No such offer chain id');
14:34:47 2954  WHEN OTHERS THEN
14:34:47 2955  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 2956  	   sproc_name, 'Unknown error', sqlerrm);
14:34:47 2957  END GET_EXISTING_SUBSCR_NUMBER;
14:34:47 2958  
14:34:47 2959  PROCEDURE GET_EXISTING_SUBSCR_IDS (
14:34:47 2960  /*
14:34:47 2961  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 2962  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 2963  */
14:34:47 2964  	 in_group_id	    IN NUMBER,
14:34:47 2965  	 in_offer_chain_id  IN NUMBER,
14:34:47 2966  	 out_result_set     OUT SYS_REFCURSOR
14:34:47 2967  ) AS
14:34:47 2968  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_EXISTING_SUBSCR_NUMBER';
14:34:47 2969  -- VARIABLES
14:34:47 2970  temp_acct_id	    NUMBER;
14:34:47 2971  temp_oc_id	    NUMBER;
14:34:47 2972  -- EXCEPTIONS
14:34:47 2973  BAD_GROUP_ID EXCEPTION;
14:34:47 2974  BAD_OFFER_CHAIN_ID EXCEPTION;
14:34:47 2975  BEGIN
14:34:47 2976  
14:34:47 2977  	 -- Check that group id exists
14:34:47 2978  	 BEGIN
14:34:47 2979  	   SELECT
14:34:47 2980  	     ACCOUNT.ID into temp_acct_id
14:34:47 2981  	   FROM
14:34:47 2982  	     ACCOUNT
14:34:47 2983  	   WHERE
14:34:47 2984  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:47 2985  	   EXCEPTION
14:34:47 2986  	     WHEN NO_DATA_FOUND THEN
14:34:47 2987  	       RAISE BAD_GROUP_ID;
14:34:47 2988  	 END;
14:34:47 2989  	 -- Check that offer chain id exists
14:34:47 2990  	 BEGIN
14:34:47 2991  	   SELECT
14:34:47 2992  	     OFFER_CHAIN.ID into temp_oc_id
14:34:47 2993  	   FROM
14:34:47 2994  	     OFFER_CHAIN
14:34:47 2995  	   WHERE
14:34:47 2996  	     OFFER_CHAIN.ID = in_offer_chain_id;
14:34:47 2997  	   EXCEPTION
14:34:47 2998  	     WHEN NO_DATA_FOUND THEN
14:34:47 2999  	       RAISE BAD_OFFER_CHAIN_ID;
14:34:47 3000  	 END;
14:34:47 3001  
14:34:47 3002  	 OPEN out_result_set FOR
14:34:47 3003  	 SELECT
14:34:47 3004  	   SUBSCRIPTION.ID
14:34:47 3005  	 FROM
14:34:47 3006  	   SUBSCRIPTION
14:34:47 3007  	   INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
14:34:47 3008  	 WHERE
14:34:47 3009  	   ACCOUNT.GROUP_ID = in_group_id
14:34:47 3010  	   AND SUBSCRIPTION.OFFER_CHAIN_ID = in_offer_chain_id
14:34:47 3011  	   AND (
14:34:47 3012  	     SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:47 3013  	     OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD);
14:34:47 3014  
14:34:47 3015  EXCEPTION
14:34:47 3016  WHEN BAD_GROUP_ID THEN
14:34:47 3017  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 3018  	   SPROC_NAME, 'No such transaction id');
14:34:47 3019  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:47 3020  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 3021  	   SPROC_NAME, 'No such offer chain id');
14:34:47 3022  WHEN OTHERS THEN
14:34:47 3023  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 3024  	   sproc_name, 'Unknown error', sqlerrm);
14:34:47 3025  END GET_EXISTING_SUBSCR_IDS;
14:34:47 3026  
14:34:47 3027  PROCEDURE ADD_META_DATA (
14:34:47 3028  /*
14:34:47 3029  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:47 3030  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 3031  */
14:34:47 3032  	 in_subscription_id IN NUMBER,
14:34:47 3033  	 in_name	    IN VARCHAR2,
14:34:47 3034  	 in_value	    IN VARCHAR2,
14:34:47 3035  	 in_created_by	    IN VARCHAR2
14:34:47 3036  ) AS
14:34:47 3037  SPROC_NAME CONSTANT VARCHAR2(13) := 'ADD_META_DATA';
14:34:47 3038  BEGIN
14:34:47 3039  
14:34:47 3040  	 INSERT INTO SUBSCRIPTION_META_DATA (
14:34:47 3041  	   ID,
14:34:47 3042  	   SUBSCRIPTION_ID,
14:34:47 3043  	   NAME,
14:34:47 3044  	   VALUE,
14:34:47 3045  	   CREATE_DATE,
14:34:47 3046  	   CREATED_BY
14:34:47 3047  	 ) VALUES (
14:34:47 3048  	   SUBMD_ID_SEQ.nextVal,
14:34:47 3049  	   in_subscription_id,
14:34:47 3050  	   in_name,
14:34:47 3051  	   in_value,
14:34:47 3052  	   sysdate,
14:34:47 3053  	   in_created_by
14:34:47 3054  	 );
14:34:47 3055  
14:34:47 3056  EXCEPTION
14:34:47 3057  WHEN OTHERS THEN
14:34:47 3058  	 IF SQLCODE = -2291 THEN
14:34:47 3059  	   PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:47 3060  	     SPROC_NAME, 'No such subscription');
14:34:47 3061  	 ELSE
14:34:47 3062  	   PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 3063  	     SPROC_NAME, 'Unknown error', sqlerrm);
14:34:47 3064  	 END IF;
14:34:47 3065  END ADD_META_DATA;
14:34:47 3066  
14:34:47 3067  /******************************************************************************/
14:34:47 3068  
14:34:47 3069  PROCEDURE GET_SUBSCRIPTIONS_META_DATA (
14:34:47 3070  /*
14:34:47 3071  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:47 3072  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 3073  */
14:34:47 3074  	 in_subscriptions_ids IN core_owner.NUMBER_TABLE,
14:34:47 3075  	 out_result_set       OUT SYS_REFCURSOR
14:34:47 3076  ) AS
14:34:47 3077  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_SUBSCRIPTIONS_META_DATA';
14:34:47 3078  -- Exceptions
14:34:47 3079  SUBSCRIPTION_IDS_IS_NULL EXCEPTION;
14:34:47 3080  BEGIN
14:34:47 3081  
14:34:47 3082  	 IF in_subscriptions_ids IS NULL THEN
14:34:47 3083  	   RAISE SUBSCRIPTION_IDS_IS_NULL;
14:34:47 3084  	 END IF;
14:34:47 3085  
14:34:47 3086  	 OPEN out_result_set FOR
14:34:47 3087  	 SELECT
14:34:47 3088  	   SMD.SUBSCRIPTION_ID,
14:34:47 3089  	   SMD.NAME,
14:34:47 3090  	   SMD.VALUE
14:34:47 3091  	 FROM
14:34:47 3092  	   SUBSCRIPTION_META_DATA SMD
14:34:47 3093  	 WHERE
14:34:47 3094  	   SMD.SUBSCRIPTION_ID IN (SELECT * FROM TABLE(in_subscriptions_ids));
14:34:47 3095  
14:34:47 3096  EXCEPTION
14:34:47 3097  WHEN SUBSCRIPTION_IDS_IS_NULL THEN
14:34:47 3098  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:47 3099  	   SPROC_NAME, 'Bad subscription ids parameter');
14:34:47 3100  WHEN OTHERS THEN
14:34:47 3101  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 3102  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:47 3103  END GET_SUBSCRIPTIONS_META_DATA;
14:34:47 3104  
14:34:47 3105  PROCEDURE GET_SUBS_BY_TRNS_ORDER_ID (
14:34:47 3106  /*
14:34:47 3107  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 3108  */
14:34:47 3109  	 in_order_id	    IN TRANSACTION.ORDER_ID%TYPE,
14:34:47 3110  	 out_result_set     OUT SYS_REFCURSOR
14:34:47 3111  ) AS
14:34:47 3112  SPROC_NAME CONSTANT VARCHAR2(25) := 'GET_SUBS_BY_TRNS_ORDER_ID';
14:34:47 3113  BEGIN
14:34:47 3114  	 OPEN out_result_set FOR
14:34:47 3115  	 SELECT subscription.id FROM
14:34:47 3116  	   subscription
14:34:47 3117  	 INNER JOIN license ON license.subscription_id = subscription.id
14:34:47 3118  	 INNER JOIN invoice ON invoice.id = license.invoice_id
14:34:47 3119  	 INNER JOIN charge ON invoice.id = charge.invoice_id
14:34:47 3120  	 INNER JOIN transaction ON charge.transaction_id = transaction.id
14:34:47 3121  	 WHERE transaction.order_id = in_order_id;
14:34:47 3122  EXCEPTION
14:34:47 3123  WHEN OTHERS THEN
14:34:47 3124  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 3125  	   SPROC_NAME, 'Unknown error', sqlerrm);
14:34:47 3126  END GET_SUBS_BY_TRNS_ORDER_ID;
14:34:47 3127  
14:34:47 3128  PROCEDURE GET_OPEN_CHARGES_BY_SUBID
14:34:47 3129  	(
14:34:47 3130  /*
14:34:47 3131  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:47 3132  */
14:34:47 3133  	 in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
14:34:47 3134  	 out_result_set      OUT SYS_REFCURSOR
14:34:47 3135  )
14:34:47 3136  AS
14:34:47 3137  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_OPEN_CHARGES_BY_SUBID';
14:34:47 3138  BEGIN
14:34:47 3139  	 OPEN out_result_set FOR
14:34:47 3140  	 SELECT
14:34:47 3141  	   c.ID,
14:34:47 3142  	   c.TRANSACTION_ID,
14:34:47 3143  	   c.INSTRUMENT_ID,
14:34:47 3144  	   c.INSTRUMENT_TYPE_ID,
14:34:47 3145  	   c.CHARGE_AMOUNT,
14:34:47 3146  	   c.CREATE_DATE,
14:34:47 3147  	   c.CREATED_BY,
14:34:47 3148  	   c.INVOICE_ID
14:34:47 3149  	  FROM
14:34:47 3150  	   subscription s,
14:34:47 3151  	   license l,
14:34:47 3152  	   charge c
14:34:47 3153  	 WHERE
14:34:47 3154  	   s.id = l.subscription_id and
14:34:47 3155  	   l.invoice_id = c.invoice_id and
14:34:47 3156  	   c.charge_status_id = GLOBAL_STATUSES_V18.CHARGE_OPENED and
14:34:47 3157  	   exists (
14:34:47 3158  	     select null
14:34:47 3159  	     from transaction t
14:34:47 3160  	     where
14:34:47 3161  	       t.id = c.transaction_id
14:34:47 3162  	   ) and
14:34:47 3163  	   s.id = in_subscription_id;
14:34:47 3164  EXCEPTION
14:34:47 3165  WHEN OTHERS THEN
14:34:47 3166  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:47 3167  	   SPROC_NAME, 'Unknown error', sqlerrm);
14:34:47 3168  END GET_OPEN_CHARGES_BY_SUBID;
14:34:47 3169  
14:34:47 3170  FUNCTION GET_GIFT_CERT_ID_BY_SUB_ID (
14:34:47 3171  	 in_subscription_id IN SUBSCRIPTION.ID%TYPE
14:34:47 3172  ) RETURN NUMBER
14:34:47 3173  AS
14:34:47 3174  var_gift_certificate_id NUMBER;
14:34:47 3175  BEGIN
14:34:47 3176  	     SELECT id INTO var_gift_certificate_id
14:34:47 3177  	     FROM
14:34:47 3178  	       gift_certificate gc
14:34:47 3179  	     WHERE
14:34:47 3180  	       gc.finalized_invoice_id in (
14:34:47 3181  		 SELECT invoice_id
14:34:47 3182  		 FROM (
14:34:47 3183  		   SELECT l.invoice_id
14:34:47 3184  		   FROM
14:34:47 3185  		     license l
14:34:47 3186  		   WHERE
14:34:47 3187  		     l.subscription_id = in_subscription_id
14:34:47 3188  		   ORDER BY l.create_date asc
14:34:47 3189  		 )
14:34:47 3190  	       )
14:34:47 3191  	       and rownum <= 1;
14:34:47 3192  	     return var_gift_certificate_id;
14:34:47 3193  END GET_GIFT_CERT_ID_BY_SUB_ID;
14:34:47 3194  
14:34:47 3195  FUNCTION GET_GIFT_CERT_CODE_BY_SUB_ID (
14:34:47 3196  	 in_subscription_id IN SUBSCRIPTION.ID%TYPE
14:34:47 3197  ) RETURN VARCHAR2
14:34:47 3198  AS
14:34:47 3199  var_gift_certificate_code VARCHAR2(255 BYTE);
14:34:47 3200  BEGIN
14:34:47 3201  	     SELECT code INTO var_gift_certificate_code
14:34:47 3202  	     FROM
14:34:47 3203  	       gift_certificate gc
14:34:47 3204  	     WHERE
14:34:47 3205  	       gc.finalized_invoice_id in (
14:34:47 3206  		 SELECT invoice_id
14:34:47 3207  		 FROM (
14:34:47 3208  		   SELECT l.invoice_id
14:34:47 3209  		   FROM
14:34:47 3210  		     license l
14:34:47 3211  		   WHERE
14:34:47 3212  		     l.subscription_id = in_subscription_id
14:34:47 3213  		 )
14:34:47 3214  	       )
14:34:47 3215  	       and rownum <= 1;
14:34:47 3216  	     return var_gift_certificate_code;
14:34:47 3217  END GET_GIFT_CERT_CODE_BY_SUB_ID;
14:34:47 3218  
14:34:47 3219  PROCEDURE GET_ACTIVE_MEU_SUBS (
14:34:47 3220  	 out_result_set      OUT SYS_REFCURSOR
14:34:47 3221  )
14:34:47 3222  AS
14:34:47 3223  SPROC_NAME     CONSTANT VARCHAR2(19) := 'GET_ACTIVE_MEU_SUBS';
14:34:47 3224  BEGIN
14:34:47 3225  	 OPEN out_result_set FOR
14:34:47 3226  	       SELECT
14:34:47 3227  		   s.id,
14:34:47 3228  		   s.instrument_type_id,
14:34:47 3229  		   s.instrument_id,
14:34:47 3230  		   a.group_id,
14:34:47 3231  		   s.offer_chain_id
14:34:47 3232  	       FROM
14:34:47 3233  		   core_owner.subscription s,
14:34:47 3234  		   core_owner.account a
14:34:47 3235  	       WHERE
14:34:47 3236  		   a.id = s.account_id AND(
14:34:47 3237  		       s.offer_chain_id = 1745992781 OR
14:34:47 3238  		       s.offer_chain_id = 3902149773 OR
14:34:47 3239  		       s.offer_chain_id = 2240201337) AND
14:34:47 3240  		   NOT EXISTS
14:34:47 3241  		   (
14:34:47 3242  		       SELECT
14:34:47 3243  			   1
14:34:47 3244  		       FROM
14:34:47 3245  			   core_owner.subscription ss
14:34:47 3246  		       WHERE
14:34:47 3247  			   ss.account_id = a.id AND(
14:34:47 3248  			       ss.offer_chain_id = 2794122734 OR
14:34:47 3249  			       ss.offer_chain_id = 3564368005 OR
14:34:47 3250  			       ss.offer_chain_id = 757934392)) AND
14:34:47 3251  		   rownum < 5000;
14:34:47 3252  END GET_ACTIVE_MEU_SUBS;
14:34:47 3253  
14:34:47 3254  PROCEDURE GET_EARLIEST_ACTIVE_OFFER_ID (
14:34:47 3255  	 in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
14:34:47 3256  	 out_offer_id	     OUT LICENSE.ID%TYPE
14:34:47 3257  )
14:34:47 3258  AS
14:34:47 3259  SPROC_NAME     CONSTANT VARCHAR2(28) := 'GET_EARLIEST_ACTIVE_OFFER_ID';
14:34:47 3260  BEGIN
14:34:47 3261  	 SELECT OFFER_ID INTO out_offer_id
14:34:47 3262  	 FROM LICENSE L,
14:34:47 3263  	 (
14:34:47 3264  	   SELECT MIN(ID) ID FROM LICENSE
14:34:47 3265  	   WHERE SUBSCRIPTION_ID = in_subscription_id
14:34:47 3266  	   AND LICENSE_STATUS_ID = 2
14:34:47 3267  	   AND SYSDATE BETWEEN START_DATE AND END_DATE
14:34:47 3268  	 ) EARLIEST_ACTIVE_LICENSE
14:34:47 3269  	 WHERE L.ID = EARLIEST_ACTIVE_LICENSE.ID;
14:34:47 3270  END GET_EARLIEST_ACTIVE_OFFER_ID;
14:34:47 3271  
14:34:47 3272  PROCEDURE GET_EARLIEST_ACTIVE_LICENSE_ID (
14:34:47 3273  	 in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
14:34:47 3274  	 out_license_id      OUT LICENSE.ID%TYPE
14:34:47 3275  )
14:34:47 3276  AS
14:34:47 3277  SPROC_NAME     CONSTANT VARCHAR2(30) := 'GET_EARLIEST_ACTIVE_LICENSE_ID';
14:34:47 3278  BEGIN
14:34:47 3279  	 SELECT MIN(ID) into out_license_id
14:34:47 3280  	 FROM LICENSE
14:34:47 3281  	 WHERE SUBSCRIPTION_ID = in_subscription_id
14:34:47 3282  	   AND LICENSE_STATUS_ID = 2
14:34:47 3283  	 AND SYSDATE BETWEEN START_DATE AND END_DATE;
14:34:47 3284  END GET_EARLIEST_ACTIVE_LICENSE_ID;
14:34:47 3285  
14:34:47 3286  PROCEDURE GET_ACT_SUBS_W_CPT_CHARGEBACKS (
14:34:47 3287  	 out_result_set      OUT SYS_REFCURSOR
14:34:47 3288  )
14:34:47 3289  AS
14:34:47 3290  SPROC_NAME     CONSTANT VARCHAR2(30) := 'GET_ACT_SUBS_W_CPT_CHARGEBACKS';
14:34:47 3291  BEGIN
14:34:47 3292  	 OPEN out_result_set FOR
14:34:47 3293  	   SELECT
14:34:47 3294  	     s.id
14:34:47 3295  	   FROM
14:34:47 3296  	     core_owner.transaction t
14:34:47 3297  	   INNER JOIN
14:34:47 3298  	     core_owner.charge c
14:34:47 3299  	   ON
14:34:47 3300  	     c.transaction_id = t.id
14:34:47 3301  	   INNER JOIN
14:34:47 3302  	     core_owner.invoice i
14:34:47 3303  	   ON
14:34:47 3304  	     i.id = c.invoice_id
14:34:47 3305  	   INNER JOIN
14:34:47 3306  	     core_owner.license l
14:34:47 3307  	   ON
14:34:47 3308  	     i.id = l.invoice_id
14:34:47 3309  	   INNER JOIN
14:34:47 3310  	     core_owner.subscription s
14:34:47 3311  	   ON
14:34:47 3312  	     l.subscription_id = s.id
14:34:47 3313  	   INNER JOIN
14:34:47 3314  	     core_owner.account a
14:34:47 3315  	   ON
14:34:47 3316  	     s.account_id = a.id
14:34:47 3317  	   JOIN
14:34:47 3318  	     core_owner.rcn_cpt_chargeback_act_detail ccad
14:34:47 3319  	   ON
14:34:47 3320  	     t.order_id = ccad.merchant_order_number
14:34:47 3321  	   WHERE
14:34:47 3322  	     ccad.chargeback_category = 'RECD'
14:34:47 3323  	   AND s.subscription_status_id = 1;
14:34:47 3324  END GET_ACT_SUBS_W_CPT_CHARGEBACKS;
14:34:47 3325  
14:34:47 3326  PROCEDURE GET_ACT_SUBS_W_PP_CHARGEBACKS (
14:34:47 3327  	 out_result_set      OUT SYS_REFCURSOR
14:34:47 3328  )
14:34:47 3329  AS
14:34:47 3330  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_ACT_SUBS_W_PP_CHARGEBACKS';
14:34:47 3331  BEGIN
14:34:47 3332  	 OPEN out_result_set FOR
14:34:47 3333  	   SELECT
14:34:47 3334  	     s.id
14:34:47 3335  	   FROM
14:34:47 3336  	     core_owner.transaction t
14:34:47 3337  	   INNER JOIN
14:34:47 3338  	     core_owner.charge c
14:34:47 3339  	   ON
14:34:47 3340  	     c.transaction_id = t.id
14:34:47 3341  	   INNER JOIN
14:34:47 3342  	     core_owner.invoice i
14:34:47 3343  	   ON
14:34:47 3344  	     i.id = c.invoice_id
14:34:47 3345  	   INNER JOIN
14:34:47 3346  	     core_owner.license l
14:34:47 3347  	   ON
14:34:47 3348  	     i.id = l.invoice_id
14:34:47 3349  	   INNER JOIN
14:34:47 3350  	     core_owner.subscription s
14:34:47 3351  	   ON
14:34:47 3352  	     l.subscription_id = s.id
14:34:47 3353  	   INNER JOIN
14:34:47 3354  	     core_owner.account a
14:34:47 3355  	   ON
14:34:47 3356  	     s.account_id = a.id
14:34:47 3357  	   INNER JOIN
14:34:47 3358  	     core_owner.rcn_pp_trans_detail ptd
14:34:47 3359  	   ON
14:34:47 3360  	     t.order_id = ptd.invoice_id
14:34:47 3361  	   WHERE
14:34:47 3362  	     ptd.trans_status = 'D'
14:34:47 3363  	   AND s.subscription_status_id = 1;
14:34:47 3364  END GET_ACT_SUBS_W_PP_CHARGEBACKS;
14:34:47 3365  
14:34:47 3366  PROCEDURE GET_GRACE_PERIOD_SUB_REGIS (
14:34:47 3367  	 in_max_days_until_close IN NUMBER,
14:34:47 3368  	 in_num_subs_to_fetch	 IN NUMBER,
14:34:47 3369  	 out_result_set 	 OUT SYS_REFCURSOR
14:34:47 3370  )
14:34:47 3371  AS
14:34:47 3372  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_GRACE_PERIOD_SUB_REGIS';
14:34:47 3373  BEGIN
14:34:47 3374  	 OPEN out_result_set FOR
14:34:47 3375  	 SELECT
14:34:47 3376  	     *
14:34:47 3377  	 FROM
14:34:47 3378  	     (
14:34:47 3379  		 SELECT
14:34:47 3380  		     a.group_id group_id,
14:34:47 3381  		     l.grace_end_date grace_end_date
14:34:47 3382  		 FROM
14:34:47 3383  		     license l
14:34:47 3384  		 JOIN
14:34:47 3385  		     subscription s
14:34:47 3386  		 ON
14:34:47 3387  		     s.id = l.subscription_id
14:34:47 3388  		 JOIN
14:34:47 3389  		     account a
14:34:47 3390  		 ON
14:34:47 3391  		     a.id = s.account_id
14:34:47 3392  		 WHERE
14:34:47 3393  		     l.license_status_id = GLOBAL_STATUSES_V18.LICENSE_IN_GRACE_PERIOD
14:34:47 3394  		 AND l.grace_end_date - SYSDATE <= in_max_days_until_close
14:34:47 3395  		 AND NOT EXISTS
14:34:47 3396  		     (
14:34:47 3397  			 SELECT
14:34:47 3398  			     NULL
14:34:47 3399  			 FROM
14:34:47 3400  			     process_retry_throttle
14:34:47 3401  			 WHERE
14:34:47 3402  			     process_name = sproc_name
14:34:47 3403  			 AND generic_id = a.group_id)
14:34:47 3404  		 AND rownum <= in_num_subs_to_fetch * 10
14:34:47 3405  		 ORDER BY
14:34:47 3406  		     dbms_random.value)
14:34:47 3407  	 WHERE
14:34:47 3408  	     rownum <= in_num_subs_to_fetch;
14:34:47 3409  END GET_GRACE_PERIOD_SUB_REGIS;
14:34:47 3410  
14:34:47 3411  PROCEDURE GET_ACT_SUBS_W_AMEX_CB (
14:34:47 3412  	 out_result_set      OUT SYS_REFCURSOR
14:34:47 3413  )
14:34:47 3414  AS
14:34:47 3415  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_ACT_SUBS_W_AMEX_CB';
14:34:47 3416  BEGIN
14:34:47 3417  	 OPEN out_result_set FOR
14:34:47 3418  	   SELECT
14:34:47 3419  	     s.id
14:34:47 3420  	   FROM
14:34:47 3421  	     core_owner.transaction t
14:34:47 3422  	   INNER JOIN
14:34:47 3423  	     core_owner.charge c
14:34:47 3424  	   ON
14:34:47 3425  	     c.transaction_id = t.id
14:34:47 3426  	   INNER JOIN
14:34:47 3427  	     core_owner.invoice i
14:34:47 3428  	   ON
14:34:47 3429  	     i.id = c.invoice_id
14:34:47 3430  	   INNER JOIN
14:34:47 3431  	     core_owner.license l
14:34:47 3432  	   ON
14:34:47 3433  	     i.id = l.invoice_id
14:34:47 3434  	   INNER JOIN
14:34:47 3435  	     core_owner.subscription s
14:34:47 3436  	   ON
14:34:47 3437  	     l.subscription_id = s.id
14:34:47 3438  	   INNER JOIN
14:34:47 3439  	     core_owner.account a
14:34:47 3440  	   ON
14:34:47 3441  	     s.account_id = a.id
14:34:47 3442  	   INNER JOIN
14:34:47 3443  	     core_owner.rcn_amex_chargeback ac
14:34:47 3444  	   ON
14:34:47 3445  	     t.order_id = lower(ac.ind_ref_number)
14:34:47 3446  	   WHERE
14:34:47 3447  	     s.subscription_status_id = 1;
14:34:47 3448  END GET_ACT_SUBS_W_AMEX_CB;
14:34:47 3449  
14:34:47 3450  END PROCS_SUBSCRIPTION_V18;
14:34:47 3451  .
14:34:47 SQL> /

Package body created.

Elapsed: 00:00:00.40
14:34:48 SQL> 
14:34:48 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_INVOICE_V18" AS
14:34:48   2  
14:34:48   3  PROCEDURE GET_INVOICE_IDS(
14:34:48   4  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE,
14:34:48   5  	in_fin_id      IN SUBSCRIPTION.INSTRUMENT_ID%TYPE,
14:34:48   6  	out_result_set OUT SYS_REFCURSOR
14:34:48   7  ) AS
14:34:48   8  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_INVOICE_IDS';
14:34:48   9  BEGIN
14:34:48  10  	OPEN out_result_set FOR
14:34:48  11  	  SELECT
14:34:48  12  	    Invoice.ID
14:34:48  13  	  FROM
14:34:48  14  	      Invoice
14:34:48  15  	      INNER JOIN License
14:34:48  16  		ON
14:34:48  17  		  License.Invoice_Id = Invoice.Id
14:34:48  18  	      INNER JOIN Subscription
14:34:48  19  		ON
14:34:48  20  		  License.Subscription_Id = Subscription.Id
14:34:48  21  	      INNER JOIN account
14:34:48  22  		ON
14:34:48  23  		  Subscription.Account_Id = account.id
14:34:48  24  	  WHERE
14:34:48  25  	    Account.Group_Id = in_group_id
14:34:48  26  	    AND SUBSCRIPTION.INSTRUMENT_ID = in_fin_id
14:34:48  27  	    AND Invoice.Invoice_Status_Id = GLOBAL_STATUSES_V18.INVOICE_OPEN;
14:34:48  28  END GET_INVOICE_IDS;
14:34:48  29  
14:34:48  30  
14:34:48  31  PROCEDURE IS_INVOICE_FOR_GC (
14:34:48  32  	in_invoice_id IN NUMBER,
14:34:48  33  	out_result    OUT NUMBER
14:34:48  34  ) AS
14:34:48  35  SPROC_NAME CONSTANT VARCHAR2(32) := 'IS_INVOICE_FOR_GC';
14:34:48  36  var_is_for_gc NUMBER;
14:34:48  37  BEGIN
14:34:48  38  	SELECT
14:34:48  39  	  count(1) into var_is_for_gc
14:34:48  40  	FROM GIFT_CERTIFICATE GC
14:34:48  41  	WHERE GC.PURCHASE_INVOICE_ID = in_invoice_id;
14:34:48  42  
14:34:48  43  	IF var_is_for_gc > 0 THEN
14:34:48  44  	  out_result := 1;
14:34:48  45  	ELSE
14:34:48  46  	  out_result := 0;
14:34:48  47  	END IF;
14:34:48  48  END IS_INVOICE_FOR_GC;
14:34:48  49  
14:34:48  50  PROCEDURE CREATE_INVOICE(
14:34:48  51  /*
14:34:48  52  Throws exceptions:
14:34:48  53  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48  54  */
14:34:48  55  	  in_invoice_status IN NUMBER,
14:34:48  56  	  in_created_by     IN VARCHAR2,
14:34:48  57  	  in_tax_exempt_id  IN VARCHAR2,
14:34:48  58  	  out_invoice_id    OUT NUMBER
14:34:48  59  ) AS
14:34:48  60  -- VARIABLES
14:34:48  61  SPROC_NAME	 CONSTANT VARCHAR2(14) := 'CREATE_INVOICE';
14:34:48  62  var_new_invoice_id NUMBER;
14:34:48  63  -- EXCEPTIONS
14:34:48  64  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:48  65  BEGIN
14:34:48  66  
14:34:48  67  	PROCS_INVOICE_CRU_V18.CREATE_INVOICE(
14:34:48  68  	  out_invoice_id		 => var_new_invoice_id,
14:34:48  69  	  in_created_by 		 => in_created_by,
14:34:48  70  	  in_invoice_status_id		 => in_invoice_status,
14:34:48  71  	  in_tax_exempt_id		 => in_tax_exempt_id
14:34:48  72  	);
14:34:48  73  
14:34:48  74  	out_invoice_id := var_new_invoice_id;
14:34:48  75  
14:34:48  76  EXCEPTION
14:34:48  77  WHEN OTHERS THEN
14:34:48  78  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48  79  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48  80  END CREATE_INVOICE;
14:34:48  81  
14:34:48  82  /************************************************************/
14:34:48  83  
14:34:48  84  PROCEDURE GET_PENDING_INVOICES (
14:34:48  85  /*
14:34:48  86  Throws exceptions:
14:34:48  87  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48  88  */
14:34:48  89  	out_result_set1      OUT SYS_REFCURSOR,
14:34:48  90  	out_result_set2      OUT SYS_REFCURSOR,
14:34:48  91  	out_result_set3      OUT SYS_REFCURSOR,
14:34:48  92  	in_row_number	     IN NUMBER DEFAULT NULL
14:34:48  93  ) AS
14:34:48  94  SPROC_NAME CONSTANT VARCHAR2(20) := 'GET_PENDING_INVOICES';
14:34:48  95  -- COMSTANTS
14:34:48  96  DEFAULT_ROW_NUMBER CONSTANT NUMBER := 1;
14:34:48  97  -- VARIABLES
14:34:48  98  var_row_number NUMBER;
14:34:48  99  BEGIN
14:34:48 100  
14:34:48 101  	IF in_row_number IS NULL THEN
14:34:48 102  	  var_row_number := DEFAULT_ROW_NUMBER;
14:34:48 103  	ELSE
14:34:48 104  	  var_row_number := in_row_number;
14:34:48 105  	END IF;
14:34:48 106  
14:34:48 107  	-- Invoices with one or more payments(charges) with transaction status PENDING
14:34:48 108  	OPEN out_result_set1 FOR
14:34:48 109  SELECT * FROM
14:34:48 110  (
14:34:48 111  	SELECT
14:34:48 112  	  INVOICE.ID
14:34:48 113  	FROM
14:34:48 114  	  CHARGE
14:34:48 115  	  INNER JOIN INVOICE ON CHARGE.INVOICE_ID = INVOICE.ID
14:34:48 116  	WHERE
14:34:48 117  	  EXISTS(
14:34:48 118  	    SELECT NULL
14:34:48 119  	    FROM TRANSACTION
14:34:48 120  	    WHERE
14:34:48 121  	      TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V18.TRANSACTION_PENDING
14:34:48 122  	      AND TRANSACTION.ID = CHARGE.TRANSACTION_ID
14:34:48 123  	      AND TRANSACTION.IS_REFUND != GLOBAL_CONSTANTS_V18.TRUE
14:34:48 124  	      AND TRANSACTION.TRANSACTION_AMOUNT >= 0
14:34:48 125  	  )
14:34:48 126  	  AND
14:34:48 127  	  NOT EXISTS(
14:34:48 128  	    SELECT NULL
14:34:48 129  	    FROM PROCESS_RETRY_THROTTLE
14:34:48 130  	    WHERE PROCESS_NAME = SPROC_NAME
14:34:48 131  	      AND GENERIC_ID = INVOICE.ID
14:34:48 132  	  )
14:34:48 133  	  AND ROWNUM <= var_row_number*10
14:34:48 134  	  ORDER BY dbms_random.value
14:34:48 135  ) WHERE
14:34:48 136  	  ROWNUM <= var_row_number;
14:34:48 137  
14:34:48 138  	-- Invoices not marked as CLOSED but are fully paid (shouldn't happen).
14:34:48 139  	OPEN out_result_set2 FOR
14:34:48 140  	SELECT
14:34:48 141  	  INVOICE.ID
14:34:48 142  	FROM
14:34:48 143  	  INVOICE
14:34:48 144  	WHERE
14:34:48 145  	  1 = 2 AND
14:34:48 146  	  (
14:34:48 147  	    INVOICE.INVOICE_STATUS_ID = GLOBAL_STATUSES_V18.INVOICE_OPEN
14:34:48 148  	  )
14:34:48 149  	  AND NOT EXISTS(
14:34:48 150  	    SELECT 1 FROM CHARGE WHERE INVOICE_ID=INVOICE.ID AND CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_OPENED AND ROWNUM <= 1
14:34:48 151  	  )
14:34:48 152  	  AND EXISTS (
14:34:48 153  	    SELECT 1 FROM CHARGE WHERE INVOICE_ID=INVOICE.ID AND CHARGE_STATUS_ID != GLOBAL_STATUSES_V18.CHARGE_OPENED AND ROWNUM <= 1
14:34:48 154  	  )
14:34:48 155  	  AND INVOICE.ID NOT IN
14:34:48 156  	    (
14:34:48 157  	      SELECT GENERIC_ID
14:34:48 158  	      FROM PROCESS_RETRY_THROTTLE
14:34:48 159  	      WHERE
14:34:48 160  		PROCESS_NAME = SPROC_NAME
14:34:48 161  	    )
14:34:48 162  	  AND ROWNUM <= var_row_number;
14:34:48 163  
14:34:48 164  	-- Invoices not marked as CLOSED with no payments(charges).
14:34:48 165  	OPEN out_result_set3 FOR
14:34:48 166  	SELECT
14:34:48 167  	  INVOICE.ID
14:34:48 168  	FROM
14:34:48 169  	  INVOICE
14:34:48 170  	WHERE
14:34:48 171  	  1 = 2 AND
14:34:48 172  	  (
14:34:48 173  	    INVOICE.INVOICE_STATUS_ID = GLOBAL_STATUSES_V18.INVOICE_OPEN
14:34:48 174  	  )
14:34:48 175  	  AND NOT EXISTS (
14:34:48 176  	    SELECT 1 FROM CHARGE WHERE CHARGE.INVOICE_ID = INVOICE.ID AND ROWNUM <= 1
14:34:48 177  	  )
14:34:48 178  	  AND INVOICE.ID NOT IN
14:34:48 179  	    (
14:34:48 180  	      SELECT GENERIC_ID
14:34:48 181  	      FROM PROCESS_RETRY_THROTTLE
14:34:48 182  	      WHERE
14:34:48 183  		PROCESS_NAME = SPROC_NAME
14:34:48 184  	    )
14:34:48 185  	  AND ROWNUM <= var_row_number;
14:34:48 186  
14:34:48 187  EXCEPTION
14:34:48 188  WHEN OTHERS THEN
14:34:48 189  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 190  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 191  END GET_PENDING_INVOICES;
14:34:48 192  
14:34:48 193  /************************************************************/
14:34:48 194  
14:34:48 195  FUNCTION F_CALCULATE_INVOICE_AMOUNT(
14:34:48 196  	in_invoice_id IN  NUMBER
14:34:48 197  ) RETURN NUMBER AS
14:34:48 198  var_amount NUMBER;
14:34:48 199  BEGIN
14:34:48 200  
14:34:48 201  	CALCULATE_INVOICE_AMOUNT(in_invoice_id, var_amount);
14:34:48 202  	RETURN var_amount;
14:34:48 203  
14:34:48 204  END;
14:34:48 205  
14:34:48 206  PROCEDURE CALCULATE_INVOICE_AMOUNT (
14:34:48 207  /*
14:34:48 208  Throws exceptions:
14:34:48 209  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 210  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 211  */
14:34:48 212  	in_invoice_id IN  NUMBER,
14:34:48 213  	out_amount    OUT NUMBER
14:34:48 214  ) AS
14:34:48 215  -- VARIABLES
14:34:48 216  SPROC_NAME	     CONSTANT VARCHAR2(24) := 'CALCULATE_INVOICE_AMOUNT';
14:34:48 217  temp_invoice_id	     NUMBER;
14:34:48 218  var_total_amount	     NUMBER(10,6);
14:34:48 219  var_final_amount	     NUMBER(10,2);
14:34:48 220  var_line_item_amount   NUMBER(10,6);
14:34:48 221  
14:34:48 222  var_line_items_set     SYS_REFCURSOR;
14:34:48 223  var_line_item_id	     NUMBER;
14:34:48 224  var_line_item_quantity NUMBER;
14:34:48 225  var_line_item_price    NUMBER (10,2);
14:34:48 226  
14:34:48 227  var_discount_fixed_amount NUMBER (10,2);
14:34:48 228  var_discount_percent_amount NUMBER (10,2);
14:34:48 229  
14:34:48 230  -- EXCEPTIONS
14:34:48 231  BAD_INVOICE_ID		    EXCEPTION;
14:34:48 232  CAN_NOT_CALC_LINE_ITEM_AMOUNT EXCEPTION;
14:34:48 233  EXCEPTION_MESSAGE VARCHAR2(1024);
14:34:48 234  BEGIN
14:34:48 235  
14:34:48 236  	var_total_amount := 0;
14:34:48 237  
14:34:48 238  	-- Check that given invoice exists
14:34:48 239  	BEGIN
14:34:48 240  	  SELECT
14:34:48 241  	    INVOICE.ID into temp_invoice_id
14:34:48 242  	  FROM
14:34:48 243  	    INVOICE
14:34:48 244  	  WHERE
14:34:48 245  	    INVOICE.ID = in_invoice_id
14:34:48 246  	    AND ROWNUM <= 1;
14:34:48 247  	  EXCEPTION
14:34:48 248  	    WHEN NO_DATA_FOUND THEN
14:34:48 249  	      RAISE BAD_INVOICE_ID;
14:34:48 250  	END;
14:34:48 251  
14:34:48 252  	-- Calculate amount for each line item in invoice
14:34:48 253  	FOR f_line_item IN (
14:34:48 254  	  SELECT
14:34:48 255  	    LINE_ITEM.ID
14:34:48 256  	  FROM
14:34:48 257  	    LINE_ITEM
14:34:48 258  	  WHERE
14:34:48 259  	    LINE_ITEM.INVOICE_ID = in_invoice_id
14:34:48 260  	)
14:34:48 261  	LOOP
14:34:48 262  	  BEGIN
14:34:48 263  	    PROCS_LINE_ITEMS_V18.CALCULATE_LINE_ITEM_AMOUNT(
14:34:48 264  	      in_line_item_id => f_line_item.ID,
14:34:48 265  	      out_amount      => var_line_item_amount
14:34:48 266  	    );
14:34:48 267  	    var_total_amount := var_total_amount + var_line_item_amount;
14:34:48 268  	    EXCEPTION
14:34:48 269  	      WHEN OTHERS THEN
14:34:48 270  		EXCEPTION_MESSAGE := SQLERRM;
14:34:48 271  		RAISE CAN_NOT_CALC_LINE_ITEM_AMOUNT;
14:34:48 272  	  END;
14:34:48 273  	END LOOP;
14:34:48 274  	var_final_amount := var_total_amount;
14:34:48 275  	out_amount := var_final_amount;
14:34:48 276  
14:34:48 277  EXCEPTION
14:34:48 278  WHEN BAD_INVOICE_ID THEN
14:34:48 279  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 280  	  SPROC_NAME, 'No such invoice');
14:34:48 281  WHEN CAN_NOT_CALC_LINE_ITEM_AMOUNT THEN
14:34:48 282  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 283  	  SPROC_NAME, 'Could not calculate line item amount', EXCEPTION_MESSAGE);
14:34:48 284  WHEN OTHERS THEN
14:34:48 285  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 286  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 287  END;
14:34:48 288  
14:34:48 289  PROCEDURE GET_ACCOUNT_BY_INVOICE_ID (
14:34:48 290  /*
14:34:48 291  Throws exceptions:
14:34:48 292  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 293  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 294  */
14:34:48 295  	in_invoice_id  IN  NUMBER,
14:34:48 296  	out_account_id OUT NUMBER
14:34:48 297  ) AS
14:34:48 298  -- VARIABLES
14:34:48 299  SPROC_NAME	 CONSTANT VARCHAR2(25) := 'GET_ACCOUNT_BY_INVOICE_ID';
14:34:48 300  temp_gc_account_id NUMBER;
14:34:48 301  temp_ss_account_id NUMBER;
14:34:48 302  temp_invoice_id	 NUMBER;
14:34:48 303  -- EXCEPTIONS
14:34:48 304  BAD_INVOICE_ID	   EXCEPTION;
14:34:48 305  CAN_NOT_FIND_ACCOUNT EXCEPTION;
14:34:48 306  BEGIN
14:34:48 307  
14:34:48 308  	-- Check that given invoice exists
14:34:48 309  	BEGIN
14:34:48 310  	  SELECT
14:34:48 311  	    INVOICE.ID into temp_invoice_id
14:34:48 312  	  FROM
14:34:48 313  	    INVOICE
14:34:48 314  	  WHERE
14:34:48 315  	    INVOICE.ID = in_invoice_id;
14:34:48 316  	  EXCEPTION
14:34:48 317  	    WHEN NO_DATA_FOUND THEN
14:34:48 318  	      RAISE BAD_INVOICE_ID;
14:34:48 319  	END;
14:34:48 320  
14:34:48 321  	-- Try to find gift certificate with given invoice
14:34:48 322  	BEGIN
14:34:48 323  	  SELECT
14:34:48 324  	    ACCOUNT.GROUP_ID into temp_gc_account_id
14:34:48 325  	  FROM
14:34:48 326  	    GIFT_CERTIFICATE
14:34:48 327  	    INNER JOIN ACCOUNT ON GIFT_CERTIFICATE.PURCHASER_GROUP_ID = ACCOUNT.GROUP_ID
14:34:48 328  	  WHERE
14:34:48 329  	    GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = in_invoice_id
14:34:48 330  	    AND ROWNUM <= 1;
14:34:48 331  	  EXCEPTION
14:34:48 332  	    WHEN NO_DATA_FOUND THEN
14:34:48 333  	      temp_gc_account_id := NULL;
14:34:48 334  	END;
14:34:48 335  
14:34:48 336  	-- check subscriptions for given invoice
14:34:48 337  	IF temp_gc_account_id IS NOT NULL THEN
14:34:48 338  	  out_account_id := temp_gc_account_id;
14:34:48 339  	ELSE
14:34:48 340  	  BEGIN
14:34:48 341  	    SELECT
14:34:48 342  	      ACCOUNT.GROUP_ID into temp_ss_account_id
14:34:48 343  	    FROM
14:34:48 344  	      LICENSE
14:34:48 345  	      INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:48 346  	      INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
14:34:48 347  	    WHERE
14:34:48 348  	      LICENSE.INVOICE_ID = in_invoice_id
14:34:48 349  	      AND ROWNUM <= 1;
14:34:48 350  	    EXCEPTION
14:34:48 351  	      WHEN NO_DATA_FOUND THEN
14:34:48 352  		temp_ss_account_id := NULL;
14:34:48 353  	  END;
14:34:48 354  	  IF temp_ss_account_id IS NULL THEN
14:34:48 355  	    RAISE CAN_NOT_FIND_ACCOUNT;
14:34:48 356  	  ELSE
14:34:48 357  	    out_account_id := temp_ss_account_id;
14:34:48 358  	  END IF;
14:34:48 359  	END IF;
14:34:48 360  
14:34:48 361  EXCEPTION
14:34:48 362  WHEN BAD_INVOICE_ID THEN
14:34:48 363  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 364  	  SPROC_NAME, 'No such invoice');
14:34:48 365  WHEN CAN_NOT_FIND_ACCOUNT THEN
14:34:48 366  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 367  	  SPROC_NAME, 'Could not find account by given invoice id');
14:34:48 368  WHEN OTHERS THEN
14:34:48 369  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 370  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 371  END GET_ACCOUNT_BY_INVOICE_ID;
14:34:48 372  
14:34:48 373  /*****************************************************************/
14:34:48 374  
14:34:48 375  PROCEDURE GET_INVOICE_DETAILS (
14:34:48 376  /*
14:34:48 377  Throws exceptions:
14:34:48 378  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 379  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 380  */
14:34:48 381  	in_invoice_id	   IN  NUMBER,
14:34:48 382  	out_group_id	   OUT NUMBER,
14:34:48 383  	out_status_id	   OUT NUMBER,
14:34:48 384  	out_line_items_set OUT SYS_REFCURSOR,
14:34:48 385  	out_pp_charges_set OUT SYS_REFCURSOR,
14:34:48 386  	out_cc_charges_set OUT SYS_REFCURSOR,
14:34:48 387  	out_gc_charges_set OUT SYS_REFCURSOR
14:34:48 388  ) AS
14:34:48 389  -- VARIABLES
14:34:48 390  SPROC_NAME CONSTANT VARCHAR2(19) := 'GET_INVOICE_DETAILS';
14:34:48 391  
14:34:48 392  -- EXCEPTIONS
14:34:48 393  BAD_INVOICE_ID	     EXCEPTION;
14:34:48 394  CAN_NOT_FIND_ACCOUNT   EXCEPTION;
14:34:48 395  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:48 396  BEGIN
14:34:48 397  
14:34:48 398  	-- get invoice status
14:34:48 399  	BEGIN
14:34:48 400  	  SELECT
14:34:48 401  	    INVOICE.INVOICE_STATUS_ID into out_status_id
14:34:48 402  	  FROM
14:34:48 403  	    INVOICE
14:34:48 404  	  WHERE
14:34:48 405  	    INVOICE.ID = in_invoice_id;
14:34:48 406  	  EXCEPTION
14:34:48 407  	    WHEN NO_DATA_FOUND THEN
14:34:48 408  	      RAISE BAD_INVOICE_ID;
14:34:48 409  	END;
14:34:48 410  
14:34:48 411  	-- get group id
14:34:48 412  	BEGIN
14:34:48 413  	  PROCS_INVOICE_V18.GET_ACCOUNT_BY_INVOICE_ID(in_invoice_id, out_group_id);
14:34:48 414  	  EXCEPTION
14:34:48 415  	    WHEN OTHERS THEN
14:34:48 416  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 417  	      RAISE CAN_NOT_FIND_ACCOUNT;
14:34:48 418  	END;
14:34:48 419  
14:34:48 420  	-- get all line items for given invoice
14:34:48 421  	OPEN out_line_items_set FOR
14:34:48 422  	SELECT
14:34:48 423  	  LINE_ITEM.AMOUNT,
14:34:48 424  	  LINE_ITEM.ID,
14:34:48 425  	  LINE_ITEM.CREATED_BY,
14:34:48 426  	  LINE_ITEM.CREATE_DATE,
14:34:48 427  	  LINE_ITEM.DISCOUNT_AMOUNT,
14:34:48 428  	  LINE_ITEM.TAXES_AMOUNT,
14:34:48 429  	  LINE_ITEM.PRODUCT_OFFER_ID,
14:34:48 430  	  LINE_ITEM.INVOICE_ID
14:34:48 431  	FROM
14:34:48 432  	  LINE_ITEM
14:34:48 433  	WHERE
14:34:48 434  	  LINE_ITEM.INVOICE_ID = in_invoice_id;
14:34:48 435  
14:34:48 436  	-- get all pp charges for given invoice
14:34:48 437  	OPEN out_pp_charges_set FOR
14:34:48 438  	SELECT
14:34:48 439  	  CHARGE.ID as "CHARGE_ID",
14:34:48 440  	  CHARGE_AMOUNT,
14:34:48 441  	  CHARGE.INSTRUMENT_ID,
14:34:48 442  	  CHARGE.CHARGE_STATUS_ID
14:34:48 443  	FROM
14:34:48 444  	  CHARGE
14:34:48 445  	WHERE
14:34:48 446  	  CHARGE.INVOICE_ID = in_invoice_id
14:34:48 447  	  AND CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL;
14:34:48 448  
14:34:48 449  	-- get all credir cards for given invoice
14:34:48 450  	OPEN out_cc_charges_set FOR
14:34:48 451  	SELECT
14:34:48 452  	  CHARGE.ID as "CHARGE_ID",
14:34:48 453  	  CHARGE.CHARGE_AMOUNT,
14:34:48 454  	  CHARGE.INSTRUMENT_ID,
14:34:48 455  	  CHARGE.CHARGE_STATUS_ID
14:34:48 456  	FROM
14:34:48 457  	  CHARGE
14:34:48 458  	WHERE
14:34:48 459  	  CHARGE.INVOICE_ID = in_invoice_id
14:34:48 460  	  AND CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD;
14:34:48 461  
14:34:48 462  	OPEN out_gc_charges_set FOR
14:34:48 463  	SELECT
14:34:48 464  	  CHARGE.ID as "CHARGE_ID",
14:34:48 465  	  CHARGE.CHARGE_AMOUNT,
14:34:48 466  	  CHARGE.INSTRUMENT_ID,
14:34:48 467  	  CHARGE.CHARGE_STATUS_ID
14:34:48 468  	FROM
14:34:48 469  	  CHARGE
14:34:48 470  	WHERE
14:34:48 471  	  CHARGE.INVOICE_ID = in_invoice_id
14:34:48 472  	  AND CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V18.INSTRUMENT_GIFT_CERTIFICATE;
14:34:48 473  
14:34:48 474  EXCEPTION
14:34:48 475  WHEN BAD_INVOICE_ID THEN
14:34:48 476  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 477  	  SPROC_NAME, 'No such invoice');
14:34:48 478  WHEN CAN_NOT_FIND_ACCOUNT THEN
14:34:48 479  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 480  	  SPROC_NAME, 'Could not find account for given invoice id', EXCEPTION_MESSAGE);
14:34:48 481  WHEN OTHERS THEN
14:34:48 482  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 483  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 484  END GET_INVOICE_DETAILS;
14:34:48 485  
14:34:48 486  /******************************************************/
14:34:48 487  -- norlov: #38796
14:34:48 488  PROCEDURE GET_TRANSACTION_INVOICE (
14:34:48 489  /*
14:34:48 490  Throws exceptions:
14:34:48 491  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 492  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 493  */
14:34:48 494  	in_transaction_id  IN  NUMBER,
14:34:48 495  	out_result_set	      OUT SYS_REFCURSOR
14:34:48 496  ) AS
14:34:48 497  SPROC_NAME CONSTANT  VARCHAR2(23) := 'GET_TRANSACTION_INVOICE';
14:34:48 498  -- VARIABLES
14:34:48 499  temp_transaction_id  NUMBER;
14:34:48 500  var_invoice_id	   NUMBER;
14:34:48 501  var_subscription_id  NUMBER;
14:34:48 502  var_offer_chain_id   NUMBER;
14:34:48 503  var_offer_chain_name VARCHAR2(255);
14:34:48 504  -- EXCEPTIONS
14:34:48 505  BAD_TRANSACTION_ID     EXCEPTION;
14:34:48 506  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:48 507  BEGIN
14:34:48 508   -- check if there is the transaction
14:34:48 509  	BEGIN
14:34:48 510  	  SELECT
14:34:48 511  	    TRANSACTION.ID into temp_transaction_id
14:34:48 512  	  FROM
14:34:48 513  	    TRANSACTION
14:34:48 514  	  WHERE
14:34:48 515  	    TRANSACTION.ID = in_transaction_id;
14:34:48 516  	  EXCEPTION
14:34:48 517  	    WHEN NO_DATA_FOUND THEN
14:34:48 518  	      RAISE BAD_TRANSACTION_ID;
14:34:48 519  	END;
14:34:48 520  
14:34:48 521  	-- Get invoice id
14:34:48 522  	SELECT DISTINCT
14:34:48 523  	  CHARGE.INVOICE_ID into var_invoice_id
14:34:48 524  	FROM
14:34:48 525  	  CHARGE
14:34:48 526  	WHERE
14:34:48 527  	  CHARGE.TRANSACTION_ID = in_transaction_id;
14:34:48 528  
14:34:48 529  	-- Get subscription id if exists
14:34:48 530  	BEGIN
14:34:48 531  	  SELECT DISTINCT
14:34:48 532  	    LICENSE.SUBSCRIPTION_ID into var_subscription_id
14:34:48 533  	  FROM
14:34:48 534  	    LICENSE
14:34:48 535  	  WHERE
14:34:48 536  	    LICENSE.INVOICE_ID = var_invoice_id;
14:34:48 537  	  EXCEPTION
14:34:48 538  	    WHEN NO_DATA_FOUND THEN
14:34:48 539  	      var_subscription_id := NULL;
14:34:48 540  	END;
14:34:48 541  
14:34:48 542  	IF var_subscription_id IS NOT NULL THEN
14:34:48 543  	  -- Fetch offer chain from subscription
14:34:48 544  	  SELECT
14:34:48 545  	    OFFER_CHAIN.ID,
14:34:48 546  	    OFFER_CHAIN.NAME
14:34:48 547  	    into
14:34:48 548  	    var_offer_chain_id,
14:34:48 549  	    var_offer_chain_name
14:34:48 550  	  FROM
14:34:48 551  	    OFFER_CHAIN
14:34:48 552  	    INNER JOIN SUBSCRIPTION ON SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 553  	  WHERE
14:34:48 554  	    SUBSCRIPTION.ID = var_subscription_id;
14:34:48 555  	ELSE
14:34:48 556  	  -- Fetch offer chain from GC
14:34:48 557  	  SELECT
14:34:48 558  	    OFFER_CHAIN.ID,
14:34:48 559  	    OFFER_CHAIN.NAME
14:34:48 560  	    into
14:34:48 561  	    var_offer_chain_id,
14:34:48 562  	    var_offer_chain_name
14:34:48 563  	  FROM
14:34:48 564  	    OFFER_CHAIN
14:34:48 565  	    INNER JOIN GIFT_CERTIFICATE ON GIFT_CERTIFICATE.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 566  	  WHERE
14:34:48 567  	    GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = var_invoice_id;
14:34:48 568  	END IF;
14:34:48 569  
14:34:48 570  	OPEN out_result_set FOR
14:34:48 571  	SELECT DISTINCT
14:34:48 572  	  var_invoice_id       AS "INVOICE_ID",
14:34:48 573  	  var_subscription_id  AS "SUBSCRIPTION_ID",
14:34:48 574  	  var_offer_chain_id   AS "OFFER_CHAIN_ID",
14:34:48 575  	  var_offer_chain_name AS "OFFER_CHAIN_NAME"
14:34:48 576  	FROM
14:34:48 577  	  DUAL;
14:34:48 578  
14:34:48 579  EXCEPTION
14:34:48 580  WHEN BAD_TRANSACTION_ID THEN
14:34:48 581  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 582  	  SPROC_NAME, 'No such transaction');
14:34:48 583  WHEN OTHERS THEN
14:34:48 584  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 585  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 586  END GET_TRANSACTION_INVOICE;
14:34:48 587  
14:34:48 588  /******************************************************/
14:34:48 589  
14:34:48 590  PROCEDURE UPDATE_INVOICE_STATUS (
14:34:48 591  /*
14:34:48 592  Throws exceptions:
14:34:48 593  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 594  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 595  */
14:34:48 596  	in_invoice_id		       IN NUMBER,
14:34:48 597  	in_invoice_status_id	       IN NUMBER,
14:34:48 598  	in_updated_by		       IN VARCHAR2
14:34:48 599  ) AS
14:34:48 600  SPROC_NAME CONSTANT VARCHAR2(21) := 'UPDATE_INVOICE_STATUS';
14:34:48 601  -- VARIABLES
14:34:48 602  temp_invoice_id NUMBER;
14:34:48 603  -- EXCEPTIONS
14:34:48 604  BAD_INVOICE_ID		      EXCEPTION;
14:34:48 605  BAD_INVOICE_STATUS_ID	      EXCEPTION;
14:34:48 606  EXCEPTION_MESSAGE 	      VARCHAR2(1024);
14:34:48 607  BEGIN
14:34:48 608  
14:34:48 609  	-- Check if invoice exists
14:34:48 610  	BEGIN
14:34:48 611  	  SELECT
14:34:48 612  	    INVOICE.ID into temp_invoice_id
14:34:48 613  	  FROM
14:34:48 614  	    INVOICE
14:34:48 615  	  WHERE
14:34:48 616  	    INVOICE.ID = in_invoice_id;
14:34:48 617  	  EXCEPTION
14:34:48 618  	    WHEN NO_DATA_FOUND THEN
14:34:48 619  	      RAISE BAD_INVOICE_ID;
14:34:48 620  	END;
14:34:48 621  
14:34:48 622  	IF in_invoice_status_id != GLOBAL_STATUSES_V18.INVOICE_OPEN
14:34:48 623  	  AND in_invoice_status_id != GLOBAL_STATUSES_V18.INVOICE_CLOSED THEN
14:34:48 624  	  RAISE BAD_INVOICE_STATUS_ID;
14:34:48 625  	END IF;
14:34:48 626  
14:34:48 627  	PROCS_INVOICE_CRU_V18.UPDATE_INVOICE(
14:34:48 628  	  in_invoice_id 		 => in_invoice_id,
14:34:48 629  	  in_invoice_status_id		 => in_invoice_status_id,
14:34:48 630  	  in_updated_by 		 => in_updated_by
14:34:48 631  	);
14:34:48 632  
14:34:48 633  EXCEPTION
14:34:48 634  WHEN BAD_INVOICE_STATUS_ID THEN
14:34:48 635  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 636  	  SPROC_NAME, 'Bad invoice status id');
14:34:48 637  WHEN BAD_INVOICE_ID THEN
14:34:48 638  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 639  	  SPROC_NAME, 'No such invoice');
14:34:48 640  WHEN OTHERS THEN
14:34:48 641  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 642  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 643  END UPDATE_INVOICE_STATUS;
14:34:48 644  
14:34:48 645  /****************************************************************/
14:34:48 646  
14:34:48 647  FUNCTION IS_INVOICE_PAYING_STARTED (
14:34:48 648  /*
14:34:48 649  Throws exceptions:
14:34:48 650  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 651  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 652  */
14:34:48 653  	in_invoice_id IN NUMBER
14:34:48 654  ) RETURN NUMBER AS
14:34:48 655  -- VARIABLES
14:34:48 656  SPROC_NAME		 CONSTANT VARCHAR2(30) := 'IS_INVOICE_PAYING_STARTED';
14:34:48 657  temp_invoice_id		 NUMBER;
14:34:48 658  var_processed_charges_num  NUMBER;
14:34:48 659  var_processed_transac_num  NUMBER;
14:34:48 660  var_success_attempts_num	 NUMBER;
14:34:48 661  var_is_gc 		 NUMBER;
14:34:48 662  -- EXCEPTIONS
14:34:48 663  BAD_INVOICE_ID EXCEPTION;
14:34:48 664  BEGIN
14:34:48 665  
14:34:48 666  	-- Check that invoice exists
14:34:48 667  	BEGIN
14:34:48 668  	  SELECT
14:34:48 669  	    INVOICE.ID into temp_invoice_id
14:34:48 670  	  FROM
14:34:48 671  	    INVOICE
14:34:48 672  	  WHERE
14:34:48 673  	    INVOICE.ID = in_invoice_id;
14:34:48 674  	  EXCEPTION
14:34:48 675  	   WHEN NO_DATA_FOUND THEN
14:34:48 676  	     RAISE BAD_INVOICE_ID;
14:34:48 677  	END;
14:34:48 678  
14:34:48 679  	-- Check that there are tansaction attempts with status success
14:34:48 680  	SELECT
14:34:48 681  	  COUNT(1) into var_success_attempts_num
14:34:48 682  	FROM
14:34:48 683  	  TRANSACTION_ATTEMPT ta,
14:34:48 684  	  TRANSACTION t,
14:34:48 685  	  CHARGE c
14:34:48 686  	WHERE
14:34:48 687  	  ta.TRANSACTION_ATTEMPT_STATUS_ID = GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS and
14:34:48 688  	  ta.transaction_id = t.id and
14:34:48 689  	  c.transaction_id = t.id and
14:34:48 690  	  t.is_refund = GLOBAL_CONSTANTS_V18.FALSE and
14:34:48 691  	  c.invoice_id = in_invoice_id
14:34:48 692  	;
14:34:48 693  
14:34:48 694  	IF var_success_attempts_num > 0 THEN
14:34:48 695  	  RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 696  	END IF;
14:34:48 697  
14:34:48 698  	SELECT
14:34:48 699  	  COUNT(1) into var_success_attempts_num
14:34:48 700  	FROM
14:34:48 701  	  TRANSACTION t,
14:34:48 702  	  CHARGE c
14:34:48 703  	WHERE
14:34:48 704  	  c.transaction_id = t.id and
14:34:48 705  	  t.is_refund = GLOBAL_CONSTANTS_V18.FALSE and
14:34:48 706  	  t.is_settled = GLOBAL_CONSTANTS_V18.TRUE and
14:34:48 707  	  c.invoice_id = in_invoice_id
14:34:48 708  	;
14:34:48 709  
14:34:48 710  	IF var_success_attempts_num > 0 THEN
14:34:48 711  	  RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 712  	END IF;
14:34:48 713  
14:34:48 714  	SELECT
14:34:48 715  	  COUNT(1) into var_is_gc
14:34:48 716  	FROM
14:34:48 717  	  gift_certificate gc
14:34:48 718  	WHERE
14:34:48 719  	  gc.finalized_invoice_id = in_invoice_id
14:34:48 720  	;
14:34:48 721  
14:34:48 722  	IF var_is_gc > 0 THEN
14:34:48 723  	  RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 724  	END IF;
14:34:48 725  
14:34:48 726  	RETURN GLOBAL_CONSTANTS_V18.FALSE;
14:34:48 727  
14:34:48 728  EXCEPTION
14:34:48 729  WHEN BAD_INVOICE_ID THEN
14:34:48 730  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 731  	  SPROC_NAME, 'No such invoice');
14:34:48 732  WHEN OTHERS THEN
14:34:48 733  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 734  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 735  END IS_INVOICE_PAYING_STARTED;
14:34:48 736  
14:34:48 737  /******************************************************************************/
14:34:48 738  
14:34:48 739  PROCEDURE P_IS_INVOICE_PAYING_STARTED (
14:34:48 740  	in_invoice_id  IN NUMBER,
14:34:48 741  	out_is_started OUT NUMBER
14:34:48 742  ) AS
14:34:48 743  BEGIN
14:34:48 744  	-- Just a wrapper
14:34:48 745  	out_is_started := PROCS_INVOICE_V18.IS_INVOICE_PAYING_STARTED(in_invoice_id);
14:34:48 746  END P_IS_INVOICE_PAYING_STARTED;
14:34:48 747  
14:34:48 748  /******************************************************************************/
14:34:48 749  
14:34:48 750  PROCEDURE CALCULATE_INVOICE_CHARGEBACK (
14:34:48 751  	in_invoice_id	      IN NUMBER,
14:34:48 752  	in_chargeback_date    IN DATE,
14:34:48 753  	out_chargeback_amount OUT NUMBER
14:34:48 754  ) AS
14:34:48 755  -- VARIABLES
14:34:48 756  SPROC_NAME	     CONSTANT VARCHAR2(28) := 'CALCULATE_INVOICE_CHARGEBACK';
14:34:48 757  var_chargeback_date    DATE;
14:34:48 758  temp_invoice_id	     NUMBER;
14:34:48 759  var_licenses_number    NUMBER;
14:34:48 760  var_invoice_start_date DATE;
14:34:48 761  var_invoice_end_date   DATE;
14:34:48 762  var_offer_id	     NUMBER;
14:34:48 763  var_offer_days_interval NUMBER;
14:34:48 764  var_license_days_used  NUMBER;
14:34:48 765  var_invoice_amount     NUMBER(10,2);
14:34:48 766  var_offer_chain_id     NUMBER;
14:34:48 767  var_offer_chain_meta_data_val VARCHAR2(1024);
14:34:48 768  var_offer_chain_full_refund   NUMBER;
14:34:48 769  var_offer_chain_prorated_ref  NUMBER;
14:34:48 770  var_chargeback_calculated NUMBER;
14:34:48 771  var_max_invoice_refund	NUMBER;
14:34:48 772  -- EXCEPTIONS
14:34:48 773  BAD_INVOICE_ID		  EXCEPTION;
14:34:48 774  NO_LICENSES_FOUND_EXCEPTION EXCEPTION;
14:34:48 775  OFFER_LENGTH_IS_ZERO	  EXCEPTION;
14:34:48 776  BEGIN
14:34:48 777  
14:34:48 778  	IF in_chargeback_date IS NULL THEN
14:34:48 779  	  var_chargeback_date := PROCS_COMMON_V18.NORMALIZE_DATE(current_date);
14:34:48 780  	ELSE
14:34:48 781  	  var_chargeback_date := PROCS_COMMON_V18.NORMALIZE_DATE(in_chargeback_date);
14:34:48 782  	END IF;
14:34:48 783  
14:34:48 784  	-- Check that invoice exists
14:34:48 785  	BEGIN
14:34:48 786  	  SELECT
14:34:48 787  	    INVOICE.ID into temp_invoice_id
14:34:48 788  	  FROM
14:34:48 789  	    INVOICE
14:34:48 790  	  WHERE
14:34:48 791  	    INVOICE.ID = in_invoice_id;
14:34:48 792  	  EXCEPTION
14:34:48 793  	    WHEN NO_DATA_FOUND THEN
14:34:48 794  	      RAISE BAD_INVOICE_ID;
14:34:48 795  	END;
14:34:48 796  
14:34:48 797  	-- Check that invoice has at least one license
14:34:48 798  	SELECT
14:34:48 799  	  COUNT(*) into var_licenses_number
14:34:48 800  	FROM
14:34:48 801  	  LICENSE
14:34:48 802  	WHERE
14:34:48 803  	  LICENSE.INVOICE_ID = in_invoice_id;
14:34:48 804  
14:34:48 805  	IF var_licenses_number = 0 THEN
14:34:48 806  	  RAISE NO_LICENSES_FOUND_EXCEPTION;
14:34:48 807  	END IF;
14:34:48 808  
14:34:48 809  	SELECT
14:34:48 810  	  MIN(LICENSE.START_DATE) into var_invoice_start_date
14:34:48 811  	FROM
14:34:48 812  	  LICENSE
14:34:48 813  	WHERE
14:34:48 814  	  LICENSE.INVOICE_ID = in_invoice_id;
14:34:48 815  
14:34:48 816  	var_invoice_start_date := PROCS_COMMON_V18.NORMALIZE_DATE(var_invoice_start_date);
14:34:48 817  
14:34:48 818  	SELECT DISTINCT
14:34:48 819  	  LICENSE.OFFER_ID into var_offer_id
14:34:48 820  	FROM
14:34:48 821  	  LICENSE
14:34:48 822  	WHERE
14:34:48 823  	  LICENSE.INVOICE_ID = in_invoice_id;
14:34:48 824  
14:34:48 825  	SELECT
14:34:48 826  	  MAX (LICENSE.END_DATE) into var_invoice_end_date
14:34:48 827  	FROM
14:34:48 828  	  LICENSE
14:34:48 829  	WHERE
14:34:48 830  	  LICENSE.INVOICE_ID = in_invoice_id;
14:34:48 831  
14:34:48 832  	-- All licenses for given invoice should point into the same offer
14:34:48 833  
14:34:48 834  	PROCS_OFFER_CHAIN_V18.GET_OFFER_LENGTH_IN_DAYS(
14:34:48 835  	  in_offer_id	=> var_offer_id,
14:34:48 836  	  in_start_date => var_invoice_start_date,
14:34:48 837  	  out_days	=> var_offer_days_interval
14:34:48 838  	);
14:34:48 839  
14:34:48 840  	IF var_offer_days_interval = 0 THEN
14:34:48 841  	  RAISE OFFER_LENGTH_IS_ZERO;
14:34:48 842  	END IF;
14:34:48 843  
14:34:48 844  	PROCS_INVOICE_V18.GET_INVOICE_DAYS_USED_NUMBER(
14:34:48 845  	  in_invoice_id      => in_invoice_id,
14:34:48 846  	  in_chargeback_date => var_chargeback_date,
14:34:48 847  	  out_days_num	     => var_license_days_used
14:34:48 848  	);
14:34:48 849  
14:34:48 850  	PROCS_INVOICE_V18.CALCULATE_INVOICE_AMOUNT(
14:34:48 851  	  in_invoice_id => in_invoice_id,
14:34:48 852  	  out_amount	=> var_invoice_amount
14:34:48 853  	);
14:34:48 854  
14:34:48 855  	-- 39437
14:34:48 856  	-- Get offer chain id by invoice id
14:34:48 857  	SELECT DISTINCT
14:34:48 858  	  SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain_id
14:34:48 859  	FROM
14:34:48 860  	  SUBSCRIPTION
14:34:48 861  	  INNER JOIN LICENSE ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:48 862  	WHERE
14:34:48 863  	  LICENSE.INVOICE_ID = in_invoice_id;
14:34:48 864  
14:34:48 865  	-- Get offer chain's meta data full amount value
14:34:48 866  	PROCS_OFFER_CHAIN_V18.GET_OFFER_CHAIN_MD_VALUE(
14:34:48 867  	  in_offer_chain_id => var_offer_chain_id,
14:34:48 868  	  in_meta_data_name => GLOBAL_CONSTANTS_V18.OFFER_CHAIN_FULL_REFUND,
14:34:48 869  	  out_value	    => var_offer_chain_meta_data_val
14:34:48 870  	);
14:34:48 871  	IF var_offer_chain_meta_data_val IS NULL THEN
14:34:48 872  	  var_offer_chain_full_refund := NULL;
14:34:48 873  	ELSE
14:34:48 874  	  var_offer_chain_full_refund := TO_NUMBER(var_offer_chain_meta_data_val);
14:34:48 875  	END IF;
14:34:48 876  
14:34:48 877  	-- Get offer chain's meta data prorated amount value
14:34:48 878  	PROCS_OFFER_CHAIN_V18.GET_OFFER_CHAIN_MD_VALUE(
14:34:48 879  	  in_offer_chain_id => var_offer_chain_id,
14:34:48 880  	  in_meta_data_name => GLOBAL_CONSTANTS_V18.OFFER_CHAIN_PRORATED_REFUND,
14:34:48 881  	  out_value	    => var_offer_chain_meta_data_val
14:34:48 882  	);
14:34:48 883  	IF var_offer_chain_meta_data_val IS NULL THEN
14:34:48 884  	  var_offer_chain_prorated_ref := NULL;
14:34:48 885  	ELSE
14:34:48 886  	  var_offer_chain_prorated_ref := TO_NUMBER(var_offer_chain_meta_data_val);
14:34:48 887  	END IF;
14:34:48 888  
14:34:48 889  	var_chargeback_calculated := GLOBAL_CONSTANTS_V18.FALSE;
14:34:48 890  
14:34:48 891  	IF var_offer_chain_full_refund IS NOT NULL
14:34:48 892  	   AND var_chargeback_calculated = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 893  	  IF var_license_days_used < var_offer_chain_full_refund THEN
14:34:48 894  	    out_chargeback_amount := var_invoice_amount;
14:34:48 895  	    var_chargeback_calculated := GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 896  	  END IF;
14:34:48 897  	END IF;
14:34:48 898  
14:34:48 899  	IF var_offer_chain_prorated_ref IS NOT NULL
14:34:48 900  	   AND var_chargeback_calculated = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 901  	  IF var_license_days_used < var_offer_chain_prorated_ref THEN
14:34:48 902  	    out_chargeback_amount := ( var_invoice_amount * (var_offer_days_interval - var_license_days_used) ) / var_offer_days_interval;
14:34:48 903  	    var_chargeback_calculated := GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 904  	  END IF;
14:34:48 905  	END IF;
14:34:48 906  
14:34:48 907  	IF var_chargeback_calculated = GLOBAL_CONSTANTS_V18.TRUE THEN
14:34:48 908  	  PROCS_INVOICE_V18.GET_MAX_REFUND(
14:34:48 909  	    in_invoice_id => in_invoice_id,
14:34:48 910  	    out_amount	  => var_max_invoice_refund
14:34:48 911  	  );
14:34:48 912  	  IF var_max_invoice_refund < out_chargeback_amount THEN
14:34:48 913  	    out_chargeback_amount := var_max_invoice_refund;
14:34:48 914  	  END IF;
14:34:48 915  	END IF;
14:34:48 916  
14:34:48 917  	IF var_chargeback_calculated = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 918  	  out_chargeback_amount := 0;
14:34:48 919  	END IF;
14:34:48 920  
14:34:48 921  EXCEPTION
14:34:48 922  WHEN BAD_INVOICE_ID THEN
14:34:48 923  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 924  	  SPROC_NAME, 'No such invoice');
14:34:48 925  WHEN NO_LICENSES_FOUND_EXCEPTION THEN
14:34:48 926  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 927  	  SPROC_NAME, 'No licenses found');
14:34:48 928  WHEN OFFER_LENGTH_IS_ZERO THEN
14:34:48 929  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 930  	  SPROC_NAME, 'Offer length is zero');
14:34:48 931  WHEN OTHERS THEN
14:34:48 932  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 933  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 934  END CALCULATE_INVOICE_CHARGEBACK;
14:34:48 935  
14:34:48 936  /********************************************************************/
14:34:48 937  
14:34:48 938  PROCEDURE APPLY_REFUND (
14:34:48 939  	in_invoice_id	     IN NUMBER,
14:34:48 940  	in_chargeback_amount IN NUMBER,
14:34:48 941  	in_created_by	     IN VARCHAR2,
14:34:48 942  	out_charge_id	     OUT NUMBER
14:34:48 943  ) AS
14:34:48 944  -- VARIABLES
14:34:48 945  SPROC_NAME		 CONSTANT VARCHAR2(16) := 'APPLY_CHARGEBACK';
14:34:48 946  temp_invoice_id		 NUMBER;
14:34:48 947  var_total_charges_amount	 NUMBER(10,2);
14:34:48 948  var_charge_amount_to_apply NUMBER(10,2);
14:34:48 949  var_transaction_id	 NUMBER;
14:34:48 950  var_instrument_type_id	 NUMBER;
14:34:48 951  var_instrument_id 	 NUMBER;
14:34:48 952  var_charge_id		 NUMBER;
14:34:48 953  -- EXCEPTIONS
14:34:48 954  BAD_INVOICE_ID		 EXCEPTION;
14:34:48 955  CAN_NOT_CREATE_TRANSACTION EXCEPTION;
14:34:48 956  CAN_NOT_FIND_INSTRUMENT	 EXCEPTION;
14:34:48 957  CAN_NOT_CREATE_CHARGE	 EXCEPTION;
14:34:48 958  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
14:34:48 959  BEGIN
14:34:48 960  
14:34:48 961  	BEGIN
14:34:48 962  	  SELECT
14:34:48 963  	    INVOICE.ID into temp_invoice_id
14:34:48 964  	  FROM
14:34:48 965  	    INVOICE
14:34:48 966  	  WHERE
14:34:48 967  	    INVOICE.ID = in_invoice_id;
14:34:48 968  	  EXCEPTION
14:34:48 969  	    WHEN NO_DATA_FOUND THEN
14:34:48 970  	      RAISE BAD_INVOICE_ID;
14:34:48 971  	END;
14:34:48 972  
14:34:48 973  	SELECT
14:34:48 974  	  SUM (CHARGE.CHARGE_AMOUNT) into var_total_charges_amount
14:34:48 975  	FROM
14:34:48 976  	  CHARGE
14:34:48 977  	WHERE
14:34:48 978  	  CHARGE.INVOICE_ID = in_invoice_id
14:34:48 979  	  AND CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_PROCESSED
14:34:48 980  	  AND CHARGE.INSTRUMENT_TYPE_ID != GLOBAL_ENUMS_V18.INSTRUMENT_GIFT_CERTIFICATE;
14:34:48 981  
14:34:48 982  	-- FIXME: Maybe whe should throw exception here?
14:34:48 983  	IF var_total_charges_amount < in_chargeback_amount THEN
14:34:48 984  	  var_charge_amount_to_apply := var_total_charges_amount;
14:34:48 985  	ELSE
14:34:48 986  	  var_charge_amount_to_apply := in_chargeback_amount;
14:34:48 987  	END IF;
14:34:48 988  
14:34:48 989  	BEGIN
14:34:48 990  	  PROCS_TRANSACTION_V18.CREATE_TRANSACTION(
14:34:48 991  	    in_transaction_id	      => NULL,
14:34:48 992  	    in_status_id	      => GLOBAL_STATUSES_V18.TRANSACTION_PREPARE,
14:34:48 993  	    in_amount		      => -var_charge_amount_to_apply,
14:34:48 994  	    in_created_by	      => in_created_by,
14:34:48 995  	    in_order_id 	      => NULL,
14:34:48 996  	    in_is_refund	      => GLOBAL_CONSTANTS_V18.TRUE,
14:34:48 997  	    in_transaction_type_code  => 'REFUND',
14:34:48 998  	    out_transaction_id	      => var_transaction_id
14:34:48 999  	  );
14:34:48 1000  	   EXCEPTION
14:34:48 1001  	     WHEN OTHERS THEN
14:34:48 1002  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1003  	       RAISE CAN_NOT_CREATE_TRANSACTION;
14:34:48 1004  	 END;
14:34:48 1005  
14:34:48 1006  	 BEGIN
14:34:48 1007  	   SELECT
14:34:48 1008  	     C.INSTRUMENT_TYPE_ID,
14:34:48 1009  	     C.INSTRUMENT_ID
14:34:48 1010  	     into
14:34:48 1011  	     var_instrument_type_id,
14:34:48 1012  	     var_instrument_id
14:34:48 1013  	   FROM
14:34:48 1014  	     CHARGE C,
14:34:48 1015  	     TRANSACTION_ATTEMPT TA,
14:34:48 1016  	     TRANSACTION T
14:34:48 1017  	   WHERE
14:34:48 1018  	     C.INVOICE_ID = in_invoice_id and
14:34:48 1019  	     C.TRANSACTION_ID = T.ID and
14:34:48 1020  	     TA.TRANSACTION_ID = T.ID and
14:34:48 1021  	     TA.TRANSACTION_ATTEMPT_STATUS_ID = GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS and
14:34:48 1022  	     T.IS_REFUND = GLOBAL_CONSTANTS_V18.FALSE and
14:34:48 1023  	     T.TRANSACTION_AMOUNT >= 0 and
14:34:48 1024  	     rownum < 2;
14:34:48 1025  	 EXCEPTION
14:34:48 1026  	     WHEN NO_DATA_FOUND THEN
14:34:48 1027  	       RAISE CAN_NOT_FIND_INSTRUMENT;
14:34:48 1028  	 END;
14:34:48 1029  	 BEGIN
14:34:48 1030  	   PROCS_CHARGE_V18.CREATE_CHARGE(
14:34:48 1031  	     in_invoice_id	   => in_invoice_id,
14:34:48 1032  	     in_transaction_id	   => var_transaction_id,
14:34:48 1033  	     in_instrument_type_id => var_instrument_type_id,
14:34:48 1034  	     in_instrument_id	   => var_instrument_id,
14:34:48 1035  	     in_charge_amount	   => -var_charge_amount_to_apply,
14:34:48 1036  	     in_created_by	   => in_created_by,
14:34:48 1037  	     in_charge_status_id   => GLOBAL_STATUSES_V18.CHARGE_OPENED,
14:34:48 1038  	     out_charge_id	   => var_charge_id
14:34:48 1039  	   );
14:34:48 1040  	   EXCEPTION
14:34:48 1041  	     WHEN OTHERS THEN
14:34:48 1042  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1043  	       RAISE CAN_NOT_CREATE_CHARGE;
14:34:48 1044  	 END;
14:34:48 1045  
14:34:48 1046  	 out_charge_id := var_charge_id;
14:34:48 1047  
14:34:48 1048  EXCEPTION
14:34:48 1049  WHEN BAD_INVOICE_ID THEN
14:34:48 1050  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1051  	   SPROC_NAME, 'No such invoice');
14:34:48 1052  WHEN CAN_NOT_CREATE_TRANSACTION THEN
14:34:48 1053  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1054  	   SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
14:34:48 1055  WHEN CAN_NOT_FIND_INSTRUMENT THEN
14:34:48 1056  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1057  	   SPROC_NAME, 'Could not find financial instrument');
14:34:48 1058  WHEN CAN_NOT_CREATE_CHARGE THEN
14:34:48 1059  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1060  	   SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
14:34:48 1061  WHEN OTHERS THEN
14:34:48 1062  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1063  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1064  END APPLY_REFUND;
14:34:48 1065  
14:34:48 1066  /******************************************************************************/
14:34:48 1067  
14:34:48 1068  PROCEDURE GET_MAX_REFUND (
14:34:48 1069  	 in_invoice_id IN NUMBER,
14:34:48 1070  	 out_amount    OUT NUMBER
14:34:48 1071  ) AS
14:34:48 1072  SPROC_NAME CONSTANT VARCHAR2(14) := 'GET_MAX_REFUND';
14:34:48 1073  -- VARIABLES
14:34:48 1074  temp_invoice_id	       NUMBER;
14:34:48 1075  var_invoice_refunds_sum NUMBER(10,2);
14:34:48 1076  var_invoice_charges_sum NUMBER(10,2);
14:34:48 1077  -- EXCEPTIONS
14:34:48 1078  BAD_INVOICE_ID EXCEPTION;
14:34:48 1079  BEGIN
14:34:48 1080  
14:34:48 1081  	 BEGIN
14:34:48 1082  	   SELECT
14:34:48 1083  	     INVOICE.ID into temp_invoice_id
14:34:48 1084  	   FROM
14:34:48 1085  	     INVOICE
14:34:48 1086  	   WHERE
14:34:48 1087  	     INVOICE.ID = in_invoice_id;
14:34:48 1088  	   EXCEPTION
14:34:48 1089  	     WHEN NO_DATA_FOUND THEN
14:34:48 1090  	       RAISE BAD_INVOICE_ID;
14:34:48 1091  	 END;
14:34:48 1092  
14:34:48 1093  	 var_invoice_refunds_sum := 0;
14:34:48 1094  	 var_invoice_charges_sum := 0;
14:34:48 1095  
14:34:48 1096  	 FOR f_charge IN (
14:34:48 1097  	   SELECT
14:34:48 1098  	     CHARGE.ID,
14:34:48 1099  	     CHARGE.CHARGE_STATUS_ID,
14:34:48 1100  	     CHARGE.CHARGE_AMOUNT,
14:34:48 1101  	     CHARGE.TRANSACTION_ID
14:34:48 1102  	   FROM
14:34:48 1103  	     CHARGE
14:34:48 1104  	   WHERE
14:34:48 1105  	     CHARGE.INVOICE_ID = in_invoice_id
14:34:48 1106  	 )
14:34:48 1107  	 LOOP
14:34:48 1108  	   -- If charge.status = canceled then continue
14:34:48 1109  	   IF f_charge.CHARGE_STATUS_ID != GLOBAL_STATUSES_V18.CHARGE_CANCELED THEN
14:34:48 1110  
14:34:48 1111  	     IF f_charge.CHARGE_AMOUNT > 0 THEN
14:34:48 1112  	       IF f_charge.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_PROCESSED
14:34:48 1113  		  AND PROCS_TRANSACTION_V18.IS_TRANSACTION_COLLECTED(f_charge.TRANSACTION_ID) = GLOBAL_CONSTANTS_V18.TRUE THEN
14:34:48 1114  		 -- Transaction collected
14:34:48 1115  		 var_invoice_charges_sum := var_invoice_charges_sum + f_charge.CHARGE_AMOUNT;
14:34:48 1116  	       ELSE
14:34:48 1117  		 -- Transaction is not collected. Do nothing
14:34:48 1118  		 NULL;
14:34:48 1119  	       END IF;
14:34:48 1120  	     ELSE
14:34:48 1121  	       IF f_charge.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_PROCESSED
14:34:48 1122  		  AND PROCS_TRANSACTION_V18.IS_TRANSACTION_COLLECTED(f_charge.TRANSACTION_ID) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 1123  		 -- If charge is processed transaction is not collected then do nothing
14:34:48 1124  		 NULL;
14:34:48 1125  	       ELSE
14:34:48 1126  		 var_invoice_refunds_sum := var_invoice_refunds_sum + f_charge.CHARGE_AMOUNT;
14:34:48 1127  	       END IF;
14:34:48 1128  	     END IF;
14:34:48 1129  
14:34:48 1130  	   END IF;
14:34:48 1131  	 END LOOP;
14:34:48 1132  
14:34:48 1133  	 -- Refunds are negative
14:34:48 1134  	 var_invoice_refunds_sum := 0 - var_invoice_refunds_sum;
14:34:48 1135  
14:34:48 1136  	 out_amount := var_invoice_charges_sum - var_invoice_refunds_sum;
14:34:48 1137  
14:34:48 1138  EXCEPTION
14:34:48 1139  WHEN BAD_INVOICE_ID THEN
14:34:48 1140  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1141  	   SPROC_NAME, 'No such invoice');
14:34:48 1142  WHEN OTHERS THEN
14:34:48 1143  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1144  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1145  END GET_MAX_REFUND;
14:34:48 1146  
14:34:48 1147  /******************************************************************************/
14:34:48 1148  
14:34:48 1149  PROCEDURE GET_INVOICE_DAYS_USED_NUMBER (
14:34:48 1150  	 in_invoice_id	     IN NUMBER,
14:34:48 1151  	 in_chargeback_date  IN DATE DEFAULT SYSDATE,
14:34:48 1152  	 out_days_num	     OUT NUMBER
14:34:48 1153  ) AS
14:34:48 1154  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_INVOICE_DAYS_USED_NUMBER';
14:34:48 1155  -- VARIABLES
14:34:48 1156  temp_invoice_id	      NUMBER;
14:34:48 1157  var_license_start_date DATE;
14:34:48 1158  var_license_end_date   DATE;
14:34:48 1159  var_chargeback_date    DATE;
14:34:48 1160  var_invoice_days_used  NUMBER;
14:34:48 1161  -- EXCEPTIONS
14:34:48 1162  BAD_INVOICE_ID EXCEPTION;
14:34:48 1163  BEGIN
14:34:48 1164  
14:34:48 1165  	 var_chargeback_date := NVL(in_chargeback_date, SYSDATE);
14:34:48 1166  
14:34:48 1167  	 BEGIN
14:34:48 1168  	   SELECT
14:34:48 1169  	     INVOICE.ID into temp_invoice_id
14:34:48 1170  	   FROM
14:34:48 1171  	     INVOICE
14:34:48 1172  	   WHERE
14:34:48 1173  	     INVOICE.ID = in_invoice_id;
14:34:48 1174  	   EXCEPTION
14:34:48 1175  	     WHEN NO_DATA_FOUND THEN
14:34:48 1176  	       RAISE BAD_INVOICE_ID;
14:34:48 1177  	 END;
14:34:48 1178  
14:34:48 1179  	 var_invoice_days_used := 0;
14:34:48 1180  
14:34:48 1181  	 FOR f_license IN (
14:34:48 1182  	   SELECT
14:34:48 1183  	     LICENSE.START_DATE,
14:34:48 1184  	     LICENSE.END_DATE
14:34:48 1185  	   FROM
14:34:48 1186  	     LICENSE
14:34:48 1187  	   WHERE
14:34:48 1188  	     LICENSE.INVOICE_ID = in_invoice_id
14:34:48 1189  	     AND LICENSE.IS_EXTENSION = GLOBAL_CONSTANTS_V18.FALSE
14:34:48 1190  	 )
14:34:48 1191  	 LOOP
14:34:48 1192  	   var_license_start_date := PROCS_COMMON_V18.NORMALIZE_DATE(f_license.START_DATE);
14:34:48 1193  	   var_license_end_date := PROCS_COMMON_V18.NORMALIZE_DATE(f_license.END_DATE);
14:34:48 1194  
14:34:48 1195  	   IF var_license_start_date <= var_chargeback_date THEN
14:34:48 1196  	     IF var_license_end_date <= var_chargeback_date THEN
14:34:48 1197  	       -- License is passed
14:34:48 1198  	       var_invoice_days_used := var_invoice_days_used + (var_license_end_date - var_license_start_date);
14:34:48 1199  	     ELSE
14:34:48 1200  	       -- This is current license
14:34:48 1201  	       var_invoice_days_used := var_invoice_days_used + (var_chargeback_date - var_license_start_date);
14:34:48 1202  	     END IF;
14:34:48 1203  	   ELSE
14:34:48 1204  	     -- if var_license_start_date > in_chargeback_date then do nothing
14:34:48 1205  	     NULL;
14:34:48 1206  	   END IF;
14:34:48 1207  	 END LOOP;
14:34:48 1208  
14:34:48 1209  	 out_days_num := var_invoice_days_used;
14:34:48 1210  
14:34:48 1211  EXCEPTION
14:34:48 1212  WHEN BAD_INVOICE_ID THEN
14:34:48 1213  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1214  	   SPROC_NAME, 'No such invoice');
14:34:48 1215  WHEN OTHERS THEN
14:34:48 1216  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1217  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1218  END GET_INVOICE_DAYS_USED_NUMBER;
14:34:48 1219  
14:34:48 1220  /******************************************************************************/
14:34:48 1221  
14:34:48 1222  PROCEDURE GET_INVOICE_LINE_ITEMS (
14:34:48 1223  	 in_invoice_id	IN NUMBER,
14:34:48 1224  	 out_result_set OUT SYS_REFCURSOR
14:34:48 1225  ) AS
14:34:48 1226  SPROC_NAME CONSTANT VARCHAR2(22) := 'GET_INVOICE_LINE_ITEMS';
14:34:48 1227  -- VARIABLES
14:34:48 1228  temp_invoice_id NUMBER;
14:34:48 1229  -- EXCEPTIONS
14:34:48 1230  BAD_INVOICE_ID EXCEPTION;
14:34:48 1231  BEGIN
14:34:48 1232  
14:34:48 1233  	 BEGIN
14:34:48 1234  	   SELECT
14:34:48 1235  	     INVOICE.ID into temp_invoice_id
14:34:48 1236  	   FROM
14:34:48 1237  	     INVOICE
14:34:48 1238  	   WHERE
14:34:48 1239  	     INVOICE.ID = in_invoice_id;
14:34:48 1240  	   EXCEPTION
14:34:48 1241  	     WHEN NO_DATA_FOUND THEN
14:34:48 1242  	       RAISE BAD_INVOICE_ID;
14:34:48 1243  	 END;
14:34:48 1244  
14:34:48 1245  	 OPEN out_result_set FOR
14:34:48 1246  	 SELECT
14:34:48 1247  	   LINE_ITEM.ID,
14:34:48 1248  	   LINE_ITEM.PRODUCT_OFFER_ID,
14:34:48 1249  	   LINE_ITEM.INVOICE_ID,
14:34:48 1250  	   LINE_ITEM.AMOUNT,
14:34:48 1251  	   LINE_ITEM.DISCOUNT_AMOUNT,
14:34:48 1252  	   LINE_ITEM.TAXES_AMOUNT,
14:34:48 1253  	   LINE_ITEM.CREATE_DATE,
14:34:48 1254  	   LINE_ITEM.CREATED_BY
14:34:48 1255  	 FROM
14:34:48 1256  	   LINE_ITEM
14:34:48 1257  	 WHERE
14:34:48 1258  	   LINE_ITEM.INVOICE_ID = in_invoice_id;
14:34:48 1259  
14:34:48 1260  EXCEPTION
14:34:48 1261  WHEN BAD_INVOICE_ID THEN
14:34:48 1262  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1263  	   SPROC_NAME, 'No such invoice');
14:34:48 1264  WHEN OTHERS THEN
14:34:48 1265  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1266  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1267  END GET_INVOICE_LINE_ITEMS;
14:34:48 1268  
14:34:48 1269  /******************************************************************************/
14:34:48 1270  
14:34:48 1271  PROCEDURE GET_INVOICE_LICENSES (
14:34:48 1272  	 in_invoice_id	IN NUMBER,
14:34:48 1273  	 out_result_set OUT SYS_REFCURSOR
14:34:48 1274  ) AS
14:34:48 1275  SPROC_NAME CONSTANT VARCHAR2(20) := 'GET_INVOICE_LICENSES';
14:34:48 1276  -- VARIABLES
14:34:48 1277  temp_invoice_id NUMBER;
14:34:48 1278  -- EXCEPTIONS
14:34:48 1279  BAD_INVOICE_ID EXCEPTION;
14:34:48 1280  BEGIN
14:34:48 1281  
14:34:48 1282  	 BEGIN
14:34:48 1283  	   SELECT
14:34:48 1284  	     INVOICE.ID into temp_invoice_id
14:34:48 1285  	   FROM
14:34:48 1286  	     INVOICE
14:34:48 1287  	   WHERE
14:34:48 1288  	     INVOICE.ID = in_invoice_id;
14:34:48 1289  	   EXCEPTION
14:34:48 1290  	     WHEN NO_DATA_FOUND THEN
14:34:48 1291  	       RAISE BAD_INVOICE_ID;
14:34:48 1292  	 END;
14:34:48 1293  
14:34:48 1294  	 OPEN out_result_set FOR
14:34:48 1295  	 SELECT
14:34:48 1296  	   LICENSE.ID,
14:34:48 1297  	   LICENSE.INVOICE_ID,
14:34:48 1298  	   LICENSE.CREATE_DATE,
14:34:48 1299  	   LICENSE.CREATED_BY,
14:34:48 1300  	   LICENSE.CURRENT_OFFER_INDEX,
14:34:48 1301  	   LICENSE.CURRENT_OFFER_RECURR_NUM,
14:34:48 1302  	   LICENSE.END_DATE,
14:34:48 1303  	   LICENSE.ENTITLEMENT_END_DATE,
14:34:48 1304  	   LICENSE.IS_EXTENSION,
14:34:48 1305  	   LICENSE.LICENSE_STATUS_ID,
14:34:48 1306  	   LICENSE.NEEDS_ENTITLEMENTS,
14:34:48 1307  	   LICENSE.OFFER_ID,
14:34:48 1308  	   LICENSE.START_DATE,
14:34:48 1309  	   LICENSE.SUBSCRIPTION_ID,
14:34:48 1310  	   LICENSE.UPDATE_DATE,
14:34:48 1311  	   LICENSE.UPDATED_BY
14:34:48 1312  	 FROM
14:34:48 1313  	   LICENSE
14:34:48 1314  	 WHERE
14:34:48 1315  	   LICENSE.INVOICE_ID = in_invoice_id;
14:34:48 1316  
14:34:48 1317  EXCEPTION
14:34:48 1318  WHEN BAD_INVOICE_ID THEN
14:34:48 1319  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1320  	   SPROC_NAME, 'No such invoice');
14:34:48 1321  WHEN OTHERS THEN
14:34:48 1322  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1323  	   SPROC_NAME, 'Unknown error');
14:34:48 1324  END GET_INVOICE_LICENSES;
14:34:48 1325  
14:34:48 1326  /******************************************************************************/
14:34:48 1327  
14:34:48 1328  PROCEDURE GET_OFFER_CH_ID_BY_INVOICE_ID (
14:34:48 1329  	 in_invoice_id	    IN NUMBER,
14:34:48 1330  	 out_offer_chain_id OUT NUMBER
14:34:48 1331  ) AS
14:34:48 1332  SPROC_NAME CONSTANT VARCHAR2(29) := 'GET_OFFER_CH_ID_BY_INVOICE_ID';
14:34:48 1333  -- VARIABLES
14:34:48 1334  temp_invoice_id NUMBER;
14:34:48 1335  -- EXCEPTIONS
14:34:48 1336  BAD_INVOICE_ID EXCEPTION;
14:34:48 1337  BEGIN
14:34:48 1338  
14:34:48 1339  	 BEGIN
14:34:48 1340  	   SELECT
14:34:48 1341  	     INVOICE.ID into temp_invoice_id
14:34:48 1342  	   FROM
14:34:48 1343  	     INVOICE
14:34:48 1344  	   WHERE
14:34:48 1345  	     INVOICE.ID = in_invoice_id;
14:34:48 1346  	   EXCEPTION
14:34:48 1347  	     WHEN NO_DATA_FOUND THEN
14:34:48 1348  	       RAISE BAD_INVOICE_ID;
14:34:48 1349  	 END;
14:34:48 1350  
14:34:48 1351  	 BEGIN
14:34:48 1352  	   SELECT DISTINCT
14:34:48 1353  	     SUBSCRIPTION.OFFER_CHAIN_ID into out_offer_chain_id
14:34:48 1354  	   FROM
14:34:48 1355  	     LICENSE
14:34:48 1356  	     INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:48 1357  	   WHERE
14:34:48 1358  	     LICENSE.INVOICE_ID = in_invoice_id;
14:34:48 1359  	   EXCEPTION
14:34:48 1360  	     WHEN NO_DATA_FOUND THEN
14:34:48 1361  	       out_offer_chain_id := NULL;
14:34:48 1362  	 END;
14:34:48 1363  
14:34:48 1364  EXCEPTION
14:34:48 1365  WHEN BAD_INVOICE_ID THEN
14:34:48 1366  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1367  	   SPROC_NAME, 'No such invoice');
14:34:48 1368  WHEN OTHERS THEN
14:34:48 1369  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1370  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1371  END GET_OFFER_CH_ID_BY_INVOICE_ID;
14:34:48 1372  
14:34:48 1373  /******************************************************************************/
14:34:48 1374  
14:34:48 1375  PROCEDURE CLOSE_INVOICE_AS_NOT_COLLECTED (
14:34:48 1376  -- Closing invoice without refund
14:34:48 1377  	 in_invoice_id IN NUMBER,
14:34:48 1378  	 in_updated_by IN VARCHAR2
14:34:48 1379  ) AS
14:34:48 1380  SPROC_NAME CONSTANT VARCHAR2(30) := 'CLOSE_INVOICE_AS_NOT_COLLECTED';
14:34:48 1381  -- VARIABLES
14:34:48 1382  temp_invoice_id NUMBER;
14:34:48 1383  -- EXCEPTIONS
14:34:48 1384  BAD_INVOICE_ID EXCEPTION;
14:34:48 1385  BEGIN
14:34:48 1386  
14:34:48 1387  	 BEGIN
14:34:48 1388  	   SELECT
14:34:48 1389  	     INVOICE.ID into temp_invoice_id
14:34:48 1390  	   FROM
14:34:48 1391  	     INVOICE
14:34:48 1392  	   WHERE
14:34:48 1393  	     INVOICE.ID = in_invoice_id;
14:34:48 1394  	   EXCEPTION
14:34:48 1395  	     WHEN NO_DATA_FOUND THEN
14:34:48 1396  	       RAISE BAD_INVOICE_ID;
14:34:48 1397  	 END;
14:34:48 1398  
14:34:48 1399  	 -- Needs to close charges. No refund.
14:34:48 1400  	 FOR f_charge_to_close IN (
14:34:48 1401  	   SELECT CHARGE.ID FROM CHARGE WHERE CHARGE.INVOICE_ID = in_invoice_id
14:34:48 1402  	 )
14:34:48 1403  	 LOOP
14:34:48 1404  	   PROCS_CHARGE_V18.UPDATE_CHARGE_STATUS(
14:34:48 1405  	     in_charge_id	 => f_charge_to_close.ID,
14:34:48 1406  	     in_updated_by	 => in_updated_by,
14:34:48 1407  	     in_charge_status_id => GLOBAL_STATUSES_V18.CHARGE_CANCELED
14:34:48 1408  	   );
14:34:48 1409  	 END LOOP;
14:34:48 1410  
14:34:48 1411  	 --FOR f_license_to_cancel IN (
14:34:48 1412  	 --  SELECT LICENSE.ID FROM LICENSE WHERE LICENSE.INVOICE_ID = in_invoice_id AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V18.LICENSE_ACTIVE
14:34:48 1413  	 --)
14:34:48 1414  	 --LOOP
14:34:48 1415  	 --  PROCS_LICENSE_CRU_V18.UPDATE_LICENSE(
14:34:48 1416  	 --    in_license_id	     => f_license_to_cancel.ID,
14:34:48 1417  	 --    in_license_status_id  => GLOBAL_STATUSES_V18.LICENSE_CLOSED,
14:34:48 1418  	 --    in_needs_entitlements => GLOBAL_CONSTANTS_V18.FALSE,
14:34:48 1419  	 --    in_updated_by	     => in_updated_by
14:34:48 1420  	 --  );
14:34:48 1421  	 --END LOOP;
14:34:48 1422  
14:34:48 1423  	 PROCS_INVOICE_V18.UPDATE_INVOICE_STATUS(
14:34:48 1424  	   in_invoice_id		  => in_invoice_id,
14:34:48 1425  	   in_updated_by		  => in_updated_by,
14:34:48 1426  	   in_invoice_status_id 	  => GLOBAL_STATUSES_V18.INVOICE_CLOSED
14:34:48 1427  	 );
14:34:48 1428  
14:34:48 1429  	 FOR f_transaction_to_close IN (
14:34:48 1430  	   SELECT DISTINCT CHARGE.TRANSACTION_ID AS "ID" FROM CHARGE WHERE CHARGE.INVOICE_ID = in_invoice_id
14:34:48 1431  	 )
14:34:48 1432  	 LOOP
14:34:48 1433  	   PROCS_TRANSACTION_V18.UPDATE_TRANSACTION_STATUS(
14:34:48 1434  	     in_transaction_id	      => f_transaction_to_close.ID,
14:34:48 1435  	     in_updated_by	      => in_updated_by,
14:34:48 1436  	     in_transaction_status_id => GLOBAL_STATUSES_V18.TRANSACTION_CLOSED
14:34:48 1437  	   );
14:34:48 1438  	 END LOOP;
14:34:48 1439  
14:34:48 1440  EXCEPTION
14:34:48 1441  WHEN BAD_INVOICE_ID THEN
14:34:48 1442  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1443  	   SPROC_NAME, 'No such invoice');
14:34:48 1444  WHEN OTHERS THEN
14:34:48 1445  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1446  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1447  END CLOSE_INVOICE_AS_NOT_COLLECTED;
14:34:48 1448  
14:34:48 1449  /******************************************************************************/
14:34:48 1450  
14:34:48 1451  PROCEDURE GET_SUBSCR_ID_BY_INVOICE_ID (
14:34:48 1452  	 in_invoice_id	     IN NUMBER,
14:34:48 1453  	 out_subscription_id OUT NUMBER
14:34:48 1454  ) AS
14:34:48 1455  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_SUBSCR_ID_BY_INVOICE_ID';
14:34:48 1456  -- VARIABLES
14:34:48 1457  temp_invoice_id NUMBER;
14:34:48 1458  -- EXCEPTIONS
14:34:48 1459  BAD_INVOICE_ID		 EXCEPTION;
14:34:48 1460  CAN_NOT_FIND_SUBSCRIPTION EXCEPTION;
14:34:48 1461  BEGIN
14:34:48 1462  
14:34:48 1463  	 BEGIN
14:34:48 1464  	   SELECT
14:34:48 1465  	     INVOICE.ID into temp_invoice_id
14:34:48 1466  	   FROM
14:34:48 1467  	     INVOICE
14:34:48 1468  	   WHERE
14:34:48 1469  	     INVOICE.ID = in_invoice_id;
14:34:48 1470  	   EXCEPTION
14:34:48 1471  	     WHEN NO_DATA_FOUND THEN
14:34:48 1472  	       RAISE BAD_INVOICE_ID;
14:34:48 1473  	 END;
14:34:48 1474  
14:34:48 1475  	 BEGIN
14:34:48 1476  	   SELECT DISTINCT
14:34:48 1477  	     LICENSE.SUBSCRIPTION_ID into out_subscription_id
14:34:48 1478  	   FROM
14:34:48 1479  	     LICENSE
14:34:48 1480  	   WHERE
14:34:48 1481  	     LICENSE.INVOICE_ID = in_invoice_id;
14:34:48 1482  	   EXCEPTION
14:34:48 1483  	     WHEN NO_DATA_FOUND THEN
14:34:48 1484  	       RAISE CAN_NOT_FIND_SUBSCRIPTION;
14:34:48 1485  	 END;
14:34:48 1486  
14:34:48 1487  EXCEPTION
14:34:48 1488  WHEN BAD_INVOICE_ID THEN
14:34:48 1489  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1490  	   SPROC_NAME, 'No such invoice');
14:34:48 1491  WHEN CAN_NOT_FIND_SUBSCRIPTION THEN
14:34:48 1492  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1493  	   SPROC_NAME, 'Could not find subscription for given invoice');
14:34:48 1494  WHEN OTHERS THEN
14:34:48 1495  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1496  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1497  END GET_SUBSCR_ID_BY_INVOICE_ID;
14:34:48 1498  
14:34:48 1499  /******************************************************************************/
14:34:48 1500  
14:34:48 1501  PROCEDURE IS_INVOICE_TAX_EXEMPT (
14:34:48 1502  /*
14:34:48 1503  Throws exceptions:
14:34:48 1504  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1505  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1506  Return:
14:34:48 1507  	 GLOBAL_CONSTANTS_V18.TRUE if ACCOUNT.EXEMPT_ID is not null
14:34:48 1508  	 GLOBAL_CONSTANTS_V18.FALSE else
14:34:48 1509  */
14:34:48 1510  	 in_invoice_id	   IN NUMBER,
14:34:48 1511  	 out_is_tax_exempt OUT NUMBER
14:34:48 1512  ) AS
14:34:48 1513  SPROC_NAME CONSTANT VARCHAR2(21) := 'IS_INVOICE_TAX_EXEMPT';
14:34:48 1514  -- VARIABLES
14:34:48 1515  var_is_tax_exempt INVOICE.TAX_EXEMPT_ID%TYPE;
14:34:48 1516  -- EXCEPTIONS
14:34:48 1517  BAD_INVOICE_ID EXCEPTION;
14:34:48 1518  BEGIN
14:34:48 1519  
14:34:48 1520  	 BEGIN
14:34:48 1521  	   SELECT
14:34:48 1522  	     INVOICE.TAX_EXEMPT_ID into var_is_tax_exempt
14:34:48 1523  	   FROM
14:34:48 1524  	     INVOICE
14:34:48 1525  	   WHERE
14:34:48 1526  	     INVOICE.ID = in_invoice_id;
14:34:48 1527  	   EXCEPTION
14:34:48 1528  	     WHEN NO_DATA_FOUND THEN
14:34:48 1529  	       RAISE BAD_INVOICE_ID;
14:34:48 1530  	 END;
14:34:48 1531  
14:34:48 1532  	 IF var_is_tax_exempt IS NULL THEN
14:34:48 1533  	   out_is_tax_exempt := GLOBAL_CONSTANTS_V18.FALSE;
14:34:48 1534  	 ELSE
14:34:48 1535  	   out_is_tax_exempt := GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 1536  	 END IF;
14:34:48 1537  
14:34:48 1538  EXCEPTION
14:34:48 1539  WHEN BAD_INVOICE_ID THEN
14:34:48 1540  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1541  	   SPROC_NAME, 'No such invoice');
14:34:48 1542  WHEN OTHERS THEN
14:34:48 1543  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1544  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1545  END IS_INVOICE_TAX_EXEMPT;
14:34:48 1546  
14:34:48 1547  /******************************************************************************/
14:34:48 1548  
14:34:48 1549  PROCEDURE GET_INVOICE_BY_TRNS_ORDER_ID (
14:34:48 1550  	 in_order_id  IN TRANSACTION.ORDER_ID%TYPE,
14:34:48 1551  	 out_result_set OUT SYS_REFCURSOR
14:34:48 1552  ) AS
14:34:48 1553  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_INVOICE_BY_TRNS_ORDER_ID';
14:34:48 1554  -- VARIABLE
14:34:48 1555  temp_order_id TRANSACTION.ORDER_ID%TYPE;
14:34:48 1556  -- EXCEPTIONS
14:34:48 1557  BAD_ORDER_ID EXCEPTION;
14:34:48 1558  CAN_NOT_FIND_INVOICE EXCEPTION;
14:34:48 1559  BEGIN
14:34:48 1560  
14:34:48 1561  	 OPEN out_result_set FOR
14:34:48 1562  	   SELECT DISTINCT
14:34:48 1563  	     CHARGE.INVOICE_ID
14:34:48 1564  	   FROM
14:34:48 1565  	     CHARGE
14:34:48 1566  	   INNER JOIN
14:34:48 1567  	     TRANSACTION ON TRANSACTION.ID = CHARGE.TRANSACTION_ID
14:34:48 1568  	   WHERE
14:34:48 1569  	     TRANSACTION.ORDER_ID = in_order_id;
14:34:48 1570  
14:34:48 1571  EXCEPTION
14:34:48 1572  WHEN BAD_ORDER_ID THEN
14:34:48 1573  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1574  	   SPROC_NAME, 'No such transaction');
14:34:48 1575  WHEN CAN_NOT_FIND_INVOICE THEN
14:34:48 1576  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1577  	   SPROC_NAME, 'Could not find invoice for given order id');
14:34:48 1578  WHEN OTHERS THEN
14:34:48 1579  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1580  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1581  END GET_INVOICE_BY_TRNS_ORDER_ID;
14:34:48 1582  
14:34:48 1583  /******************************************************************************/
14:34:48 1584  
14:34:48 1585  PROCEDURE GET_INVOICE_BY_ID (
14:34:48 1586  	 in_invoice_id	IN NUMBER,
14:34:48 1587  	 out_result_set OUT SYS_REFCURSOR
14:34:48 1588  ) AS
14:34:48 1589  SPROC_NAME CONSTANT VARCHAR2(17) := 'GET_INVOICE_BY_ID';
14:34:48 1590  -- VARIABLE
14:34:48 1591  temp_invoice_id NUMBER;
14:34:48 1592  -- EXCEPTIONS
14:34:48 1593  BAD_INVOCIE_ID EXCEPTION;
14:34:48 1594  BEGIN
14:34:48 1595  
14:34:48 1596  	 BEGIN
14:34:48 1597  	   SELECT
14:34:48 1598  	     INVOICE.ID into temp_invoice_id
14:34:48 1599  	   FROM
14:34:48 1600  	     INVOICE
14:34:48 1601  	   WHERE
14:34:48 1602  	     INVOICE.ID = in_invoice_id;
14:34:48 1603  	   EXCEPTION
14:34:48 1604  	     WHEN NO_DATA_FOUND THEN
14:34:48 1605  	       RAISE BAD_INVOCIE_ID;
14:34:48 1606  	 END;
14:34:48 1607  
14:34:48 1608  	 OPEN out_result_set FOR
14:34:48 1609  	 SELECT
14:34:48 1610  	   INVOICE.ID,
14:34:48 1611  	   INVOICE.INVOICE_STATUS_ID,
14:34:48 1612  	   INVOICE.TAX_EXEMPT_ID,
14:34:48 1613  	   INVOICE.UPDATE_DATE,
14:34:48 1614  	   INVOICE.UPDATED_BY,
14:34:48 1615  	   INVOICE.CREATE_DATE,
14:34:48 1616  	   INVOICE.CREATED_BY
14:34:48 1617  	 FROM
14:34:48 1618  	   INVOICE
14:34:48 1619  	 WHERE
14:34:48 1620  	   INVOICE.ID = in_invoice_id;
14:34:48 1621  
14:34:48 1622  EXCEPTION
14:34:48 1623  WHEN BAD_INVOCIE_ID THEN
14:34:48 1624  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1625  	   SPROC_NAME, 'No such invoice');
14:34:48 1626  WHEN OTHERS THEN
14:34:48 1627  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1628  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1629  END GET_INVOICE_BY_ID;
14:34:48 1630  
14:34:48 1631  /******************************************************************************/
14:34:48 1632  
14:34:48 1633  PROCEDURE GET_IS_TAX_CALCULATION_NEEDED (
14:34:48 1634  	 in_invoice_id		       IN NUMBER,
14:34:48 1635  	 out_is_tax_calculation_needed OUT NUMBER
14:34:48 1636  ) AS
14:34:48 1637  SPROC_NAME CONSTANT VARCHAR2(29) := 'GET_IS_TAX_CALCULATION_NEEDED';
14:34:48 1638  BEGIN
14:34:48 1639  
14:34:48 1640  	 SELECT
14:34:48 1641  	   I.IS_TAX_CALCULATION_NEEDED into out_is_tax_calculation_needed
14:34:48 1642  	 FROM
14:34:48 1643  	   INVOICE I
14:34:48 1644  	 WHERE
14:34:48 1645  	   I.ID = in_invoice_id;
14:34:48 1646  
14:34:48 1647  EXCEPTION
14:34:48 1648  WHEN NO_DATA_FOUND THEN
14:34:48 1649  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1650  	   SPROC_NAME, 'No such invoice');
14:34:48 1651  WHEN OTHERS THEN
14:34:48 1652  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1653  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1654  END GET_IS_TAX_CALCULATION_NEEDED;
14:34:48 1655  
14:34:48 1656  /******************************************************************************/
14:34:48 1657  
14:34:48 1658  PROCEDURE SET_IS_TAX_CALCULATION_NEEDED (
14:34:48 1659  	 in_invoice_id		      IN NUMBER,
14:34:48 1660  	 in_updated_by		      IN VARCHAR2,
14:34:48 1661  	 in_is_tax_calculation_needed IN NUMBER
14:34:48 1662  ) AS
14:34:48 1663  SPROC_NAME CONSTANT VARCHAR2(29) := 'SET_IS_TAX_CALCULATION_NEEDED';
14:34:48 1664  -- VARIABLES
14:34:48 1665  temp_invoice_id	      NUMBER;
14:34:48 1666  -- EXCEPTIONS
14:34:48 1667  BAD_INVOICE_ID	      EXCEPTION;
14:34:48 1668  CAN_NOT_UPDATE_INVOCIE EXCEPTION;
14:34:48 1669  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:48 1670  BEGIN
14:34:48 1671  
14:34:48 1672  	 BEGIN
14:34:48 1673  	   SELECT
14:34:48 1674  	     i.id into temp_invoice_id
14:34:48 1675  	   FROM
14:34:48 1676  	     invoice i
14:34:48 1677  	   WHERE
14:34:48 1678  	     i.id = in_invoice_id;
14:34:48 1679  	   EXCEPTION
14:34:48 1680  	     WHEN NO_DATA_FOUND THEN
14:34:48 1681  	       RAISE BAD_INVOICE_ID;
14:34:48 1682  	 END;
14:34:48 1683  
14:34:48 1684  	 BEGIN
14:34:48 1685  	   PROCS_INVOICE_CRU_V18.UPDATE_INVOICE(
14:34:48 1686  	     in_invoice_id => in_invoice_id,
14:34:48 1687  	     in_updated_by => in_updated_by,
14:34:48 1688  	     in_is_tax_calculation_needed => in_is_tax_calculation_needed
14:34:48 1689  	   );
14:34:48 1690  	   EXCEPTION
14:34:48 1691  	     WHEN OTHERS THEN
14:34:48 1692  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1693  	       RAISE CAN_NOT_UPDATE_INVOCIE;
14:34:48 1694  	 END;
14:34:48 1695  
14:34:48 1696  EXCEPTION
14:34:48 1697  WHEN BAD_INVOICE_ID THEN
14:34:48 1698  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1699  	   SPROC_NAME, 'No such invoice');
14:34:48 1700  WHEN CAN_NOT_UPDATE_INVOCIE THEN
14:34:48 1701  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1702  	   SPROC_NAME, 'Could not update invoice', EXCEPTION_MESSAGE);
14:34:48 1703  WHEN OTHERS THEN
14:34:48 1704  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1705  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1706  END SET_IS_TAX_CALCULATION_NEEDED;
14:34:48 1707  
14:34:48 1708  /******************************************************************************/
14:34:48 1709  
14:34:48 1710  PROCEDURE REFUND_INVOICE (
14:34:48 1711  	 in_invoice_id	    IN NUMBER,
14:34:48 1712  	 in_refund_amount   IN NUMBER,
14:34:48 1713  	 in_note	    IN VARCHAR2,
14:34:48 1714  	 in_created_by	    IN VARCHAR2,
14:34:48 1715  	 out_charge_id	    OUT NUMBER
14:34:48 1716  ) AS
14:34:48 1717  SPROC_NAME CONSTANT VARCHAR2(14) := 'REFUND_INVOICE';
14:34:48 1718  -- VARIABLES
14:34:48 1719  var_invoice_status_id  NUMBER;
14:34:48 1720  var_subscription_id    NUMBER;
14:34:48 1721  var_account_id	      NUMBER;
14:34:48 1722  var_group_id	      NUMBER;
14:34:48 1723  var_account_status_id  NUMBER;
14:34:48 1724  var_new_transaction_id NUMBER;
14:34:48 1725  var_instrument_type_id NUMBER;
14:34:48 1726  var_instrument_id      NUMBER;
14:34:48 1727  var_new_charge_id      NUMBER;
14:34:48 1728  var_invoice_amount     NUMBER(10,2);
14:34:48 1729  var_refunds_before     NUMBER(10,2);
14:34:48 1730  var_charges_amount     NUMBER(10,2);
14:34:48 1731  -- EXCEPTIONS
14:34:48 1732  CAN_NOT_FIND_SUBSCR_OR_GC     EXCEPTION;
14:34:48 1733  ACCOUNT_IS_FROZEN	     EXCEPTION;
14:34:48 1734  BAD_INVOICE_ID		     EXCEPTION;
14:34:48 1735  CAN_NOT_CREATE_TRANSACTION    EXCEPTION;
14:34:48 1736  CAN_NOT_CREATE_CHARGE	     EXCEPTION;
14:34:48 1737  CAN_NOT_CALC_INVOICE_AMOUNT   EXCEPTION;
14:34:48 1738  REFUND_IS_GREATER_THAN_ANOUNT EXCEPTION;
14:34:48 1739  CAN_NOT_ANNOTATE_SUBSCRIPTION EXCEPTION;
14:34:48 1740  TOT_REF_IS_GREATER_THAN_ANOUNT EXCEPTION;
14:34:48 1741  INVOICE_IS_NOT_CLOSED	     EXCEPTION;
14:34:48 1742  TOT_REF_IS_GRATER_THAN_CHARGES EXCEPTION;
14:34:48 1743  EXCEPTION_MESSAGE	      VARCHAR2(1024);
14:34:48 1744  BEGIN
14:34:48 1745  
14:34:48 1746  	 BEGIN
14:34:48 1747  	   SELECT
14:34:48 1748  	     INVOICE.INVOICE_STATUS_ID into var_invoice_status_id
14:34:48 1749  	   FROM
14:34:48 1750  	     INVOICE
14:34:48 1751  	   WHERE
14:34:48 1752  	     INVOICE.ID = in_invoice_id;
14:34:48 1753  	   EXCEPTION
14:34:48 1754  	     WHEN NO_DATA_FOUND THEN
14:34:48 1755  	       RAISE BAD_INVOICE_ID;
14:34:48 1756  	 END;
14:34:48 1757  
14:34:48 1758  	 -- Get instrument and subscription id if exists
14:34:48 1759  	 BEGIN
14:34:48 1760  	   SELECT
14:34:48 1761  	     SUBSCRIPTION.INSTRUMENT_ID,
14:34:48 1762  	     SUBSCRIPTION.INSTRUMENT_TYPE_ID,
14:34:48 1763  	     SUBSCRIPTION.ACCOUNT_ID,
14:34:48 1764  	     SUBSCRIPTION.ID
14:34:48 1765  	     into
14:34:48 1766  	     var_instrument_id,
14:34:48 1767  	     var_instrument_type_id,
14:34:48 1768  	     var_account_id,
14:34:48 1769  	     var_subscription_id
14:34:48 1770  	   FROM
14:34:48 1771  	     SUBSCRIPTION
14:34:48 1772  	     INNER JOIN LICENSE ON SUBSCRIPTION.ID = LICENSE.SUBSCRIPTION_ID
14:34:48 1773  	   WHERE
14:34:48 1774  	     LICENSE.INVOICE_ID = in_invoice_id
14:34:48 1775  	     AND ROWNUM <= 1;
14:34:48 1776  	   EXCEPTION
14:34:48 1777  	     WHEN NO_DATA_FOUND THEN
14:34:48 1778  	       BEGIN
14:34:48 1779  
14:34:48 1780  		 var_subscription_id := NULL;
14:34:48 1781  
14:34:48 1782  		 SELECT
14:34:48 1783  		   CHARGE.INSTRUMENT_ID,
14:34:48 1784  		   CHARGE.INSTRUMENT_TYPE_ID,
14:34:48 1785  		   GIFT_CERTIFICATE.PURCHASER_GROUP_ID
14:34:48 1786  		   into
14:34:48 1787  		   var_instrument_id,
14:34:48 1788  		   var_instrument_type_id,
14:34:48 1789  		   var_group_id
14:34:48 1790  		 FROM
14:34:48 1791  		   INVOICE
14:34:48 1792  		   INNER JOIN CHARGE ON INVOICE.ID = CHARGE.INVOICE_ID
14:34:48 1793  		   INNER JOIN GIFT_CERTIFICATE ON GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = INVOICE.ID
14:34:48 1794  		 WHERE
14:34:48 1795  		   INVOICE.ID = in_invoice_id
14:34:48 1796  		   AND ROWNUM <= 1;
14:34:48 1797  
14:34:48 1798  		 SELECT
14:34:48 1799  		   ACCOUNT.ID into var_account_id
14:34:48 1800  		 FROM
14:34:48 1801  		   ACCOUNT
14:34:48 1802  		 WHERE
14:34:48 1803  		   ACCOUNT.GROUP_ID = var_group_id;
14:34:48 1804  
14:34:48 1805  		 EXCEPTION
14:34:48 1806  		   WHEN NO_DATA_FOUND THEN
14:34:48 1807  		     RAISE CAN_NOT_FIND_SUBSCR_OR_GC;
14:34:48 1808  	       END;
14:34:48 1809  	 END;
14:34:48 1810  
14:34:48 1811  	 -- Check account status. It should not to be frozen
14:34:48 1812  	 SELECT
14:34:48 1813  	   ACCOUNT.ACCOUNT_STATUS_ID into var_account_status_id
14:34:48 1814  	 FROM
14:34:48 1815  	   ACCOUNT
14:34:48 1816  	 WHERE
14:34:48 1817  	   ACCOUNT.ID = var_account_id;
14:34:48 1818  
14:34:48 1819  	 IF var_account_status_id = GLOBAL_STATUSES_V18.ACCOUNT_FROZEN THEN
14:34:48 1820  	   RAISE ACCOUNT_IS_FROZEN;
14:34:48 1821  	 END IF;
14:34:48 1822  
14:34:48 1823  	 IF var_invoice_status_id != GLOBAL_STATUSES_V18.INVOICE_CLOSED THEN
14:34:48 1824  	   RAISE INVOICE_IS_NOT_CLOSED;
14:34:48 1825  	 END IF;
14:34:48 1826  
14:34:48 1827  	 BEGIN
14:34:48 1828  	   PROCS_INVOICE_V18.CALCULATE_INVOICE_AMOUNT (
14:34:48 1829  	     in_invoice_id => in_invoice_id,
14:34:48 1830  	     out_amount    => var_invoice_amount
14:34:48 1831  	   );
14:34:48 1832  	   EXCEPTION
14:34:48 1833  	     WHEN OTHERS THEN
14:34:48 1834  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1835  	       RAISE CAN_NOT_CALC_INVOICE_AMOUNT;
14:34:48 1836  	 END;
14:34:48 1837  
14:34:48 1838  	 IF ( in_refund_amount > var_invoice_amount ) THEN
14:34:48 1839  	   RAISE REFUND_IS_GREATER_THAN_ANOUNT;
14:34:48 1840  	 END IF;
14:34:48 1841  
14:34:48 1842  	 SELECT /*+ STAR_TRANSFORMATION */
14:34:48 1843  	   SUM(CHARGE.CHARGE_AMOUNT) into var_refunds_before
14:34:48 1844  	 FROM
14:34:48 1845  	   CHARGE
14:34:48 1846  	 WHERE
14:34:48 1847  	   CHARGE.INVOICE_ID = in_invoice_id
14:34:48 1848  	   AND (
14:34:48 1849  	     CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_OPENED
14:34:48 1850  	     OR (
14:34:48 1851  	       CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V18.CHARGE_PROCESSED
14:34:48 1852  	       AND EXISTS (
14:34:48 1853  		 SELECT 1 FROM TRANSACTION_ATTEMPT ta where ta.transaction_id = CHARGE.TRANSACTION_ID and ta.transaction_attempt_status_id = GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS
14:34:48 1854  	       )
14:34:48 1855  	     )
14:34:48 1856  	   )
14:34:48 1857  	   AND CHARGE.CHARGE_AMOUNT < 0;
14:34:48 1858  
14:34:48 1859  	 -- Refunds are negative
14:34:48 1860  	 IF var_refunds_before IS NULL THEN var_refunds_before := 0; END IF;
14:34:48 1861  	 var_refunds_before := 0 - var_refunds_before;
14:34:48 1862  
14:34:48 1863  	 var_charges_amount := 0;
14:34:48 1864  
14:34:48 1865  	 FOR f_processed_charges IN (
14:34:48 1866  	   SELECT
14:34:48 1867  	     CHARGE.CHARGE_AMOUNT
14:34:48 1868  	   FROM
14:34:48 1869  	     CHARGE
14:34:48 1870  	   WHERE
14:34:48 1871  	     CHARGE.INVOICE_ID = in_invoice_id
14:34:48 1872  	     AND CHARGE.CHARGE_AMOUNT > 0
14:34:48 1873  	     AND CHARGE.CHARGE_STATUS_ID IN (SELECT GLOBAL_STATUSES_V18.CHARGE_PROCESSED FROM DUAL)
14:34:48 1874  	     AND EXISTS (SELECT 1 FROM TRANSACTION_ATTEMPT ta where ta.transaction_id = CHARGE.TRANSACTION_ID and ta.transaction_attempt_status_id = GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS)
14:34:48 1875  	 )
14:34:48 1876  	 LOOP
14:34:48 1877  	   var_charges_amount := var_charges_amount + f_processed_charges.CHARGE_AMOUNT;
14:34:48 1878  	 END LOOP;
14:34:48 1879  
14:34:48 1880  	 IF (in_refund_amount + var_refunds_before > var_invoice_amount) THEN
14:34:48 1881  	   RAISE TOT_REF_IS_GREATER_THAN_ANOUNT;
14:34:48 1882  	 END IF;
14:34:48 1883  
14:34:48 1884  	 IF (in_refund_amount + var_refunds_before > var_charges_amount) THEN
14:34:48 1885  	   RAISE TOT_REF_IS_GRATER_THAN_CHARGES;
14:34:48 1886  	 END IF;
14:34:48 1887  
14:34:48 1888  	 BEGIN
14:34:48 1889  	   PROCS_TRANSACTION_V18.CREATE_TRANSACTION(
14:34:48 1890  	     in_transaction_id	       => NULL,
14:34:48 1891  	     in_status_id	       => GLOBAL_STATUSES_V18.TRANSACTION_PREPARE,
14:34:48 1892  	     in_amount		       => -in_refund_amount,
14:34:48 1893  	     in_created_by	       => in_created_by,
14:34:48 1894  	     in_order_id	       => NULL,
14:34:48 1895  	     in_is_refund	       => GLOBAL_CONSTANTS_V18.TRUE,
14:34:48 1896  	     in_transaction_type_code  => 'REFUND',
14:34:48 1897  	     out_transaction_id        => var_new_transaction_id
14:34:48 1898  	   );
14:34:48 1899  	   EXCEPTION
14:34:48 1900  	     WHEN OTHERS THEN
14:34:48 1901  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1902  	       RAISE CAN_NOT_CREATE_TRANSACTION;
14:34:48 1903  	 END;
14:34:48 1904  
14:34:48 1905  	 BEGIN
14:34:48 1906  	   PROCS_CHARGE_V18.CREATE_CHARGE(
14:34:48 1907  	     in_invoice_id	   => in_invoice_id,
14:34:48 1908  	     in_transaction_id	   => var_new_transaction_id,
14:34:48 1909  	     in_instrument_type_id => var_instrument_type_id,
14:34:48 1910  	     in_instrument_id	   => var_instrument_id,
14:34:48 1911  	     in_charge_amount	   => -in_refund_amount,
14:34:48 1912  	     in_created_by	   => in_created_by,
14:34:48 1913  	     in_charge_status_id   => GLOBAL_STATUSES_V18.CHARGE_OPENED,
14:34:48 1914  	     out_charge_id	   => var_new_charge_id
14:34:48 1915  	   );
14:34:48 1916  	   EXCEPTION
14:34:48 1917  	     WHEN OTHERS THEN
14:34:48 1918  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1919  	       RAISE CAN_NOT_CREATE_CHARGE;
14:34:48 1920  	 END;
14:34:48 1921  
14:34:48 1922  	 out_charge_id := var_new_charge_id;
14:34:48 1923  
14:34:48 1924  	 IF in_note IS NOT NULL AND var_subscription_id IS NOT NULL THEN
14:34:48 1925  	   BEGIN
14:34:48 1926  	     PROCS_SUBSCRIPTION_V18.ANNOTATE_SUBSCRIPTION(
14:34:48 1927  	       in_subscription_id => var_subscription_id,
14:34:48 1928  	       in_agent_id	  => 0, -- AGENT_ID??
14:34:48 1929  	       in_note		  => in_note,
14:34:48 1930  	       in_created_by	  => in_created_by
14:34:48 1931  	     );
14:34:48 1932  	     EXCEPTION
14:34:48 1933  	       WHEN OTHERS THEN
14:34:48 1934  		 EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1935  		 RAISE CAN_NOT_ANNOTATE_SUBSCRIPTION;
14:34:48 1936  	   END;
14:34:48 1937  	 END IF;
14:34:48 1938  
14:34:48 1939  EXCEPTION
14:34:48 1940  WHEN CAN_NOT_FIND_SUBSCR_OR_GC THEN
14:34:48 1941  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1942  	   SPROC_NAME, 'Could not find subscription or GC for the inovice');
14:34:48 1943  WHEN INVOICE_IS_NOT_CLOSED THEN
14:34:48 1944  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 1945  	   SPROC_NAME, 'Invoice is not closed');
14:34:48 1946  WHEN ACCOUNT_IS_FROZEN THEN
14:34:48 1947  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 1948  	   SPROC_NAME, 'Could not refund subscription for frozen account');
14:34:48 1949  WHEN BAD_INVOICE_ID THEN
14:34:48 1950  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1951  	   SPROC_NAME, 'No such invoice');
14:34:48 1952  WHEN CAN_NOT_CALC_INVOICE_AMOUNT THEN
14:34:48 1953  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1954  	   SPROC_NAME, 'Could not calculate invoice amount', EXCEPTION_MESSAGE);
14:34:48 1955  WHEN REFUND_IS_GREATER_THAN_ANOUNT THEN
14:34:48 1956  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 1957  	   SPROC_NAME, 'Refund is greater than amount');
14:34:48 1958  WHEN TOT_REF_IS_GREATER_THAN_ANOUNT THEN
14:34:48 1959  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 1960  	   SPROC_NAME, 'There were refunds before and sum of all refunds and new refund more than invoice amount');
14:34:48 1961  WHEN TOT_REF_IS_GRATER_THAN_CHARGES THEN
14:34:48 1962  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 1963  	   SPROC_NAME, 'Total refund amount is greater than sum of processed charges');
14:34:48 1964  WHEN CAN_NOT_CREATE_TRANSACTION THEN
14:34:48 1965  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1966  	   SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
14:34:48 1967  WHEN CAN_NOT_CREATE_CHARGE THEN
14:34:48 1968  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1969  	   SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
14:34:48 1970  WHEN CAN_NOT_ANNOTATE_SUBSCRIPTION THEN
14:34:48 1971  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1972  	   SPROC_NAME, 'Could not annotate subscription', EXCEPTION_MESSAGE);
14:34:48 1973  WHEN OTHERS THEN
14:34:48 1974  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1975  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1976  END REFUND_INVOICE;
14:34:48 1977  
14:34:48 1978  /******************************************************************************/
14:34:48 1979  
14:34:48 1980  PROCEDURE GET_PAYMENT_INFO_BY_INVOICE_ID (
14:34:48 1981  	 in_invoice_id		     IN NUMBER,
14:34:48 1982  	 out_order_id		     OUT VARCHAR2,
14:34:48 1983  	 out_external_transaction_id OUT VARCHAR2
14:34:48 1984  ) AS
14:34:48 1985  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PEYMENT_INFO_BY_INVOICE_ID';
14:34:48 1986  -- VARIABLES
14:34:48 1987  temp_invoice_id number;
14:34:48 1988  cnt_matched_instr number := 0;
14:34:48 1989  -- EXCEPTIONS
14:34:48 1990  BAD_INVOICE_ID EXCEPTION;
14:34:48 1991  BEGIN
14:34:48 1992  
14:34:48 1993  	 BEGIN
14:34:48 1994  	   SELECT
14:34:48 1995  	     i.id into temp_invoice_id
14:34:48 1996  	   from
14:34:48 1997  	     invoice i
14:34:48 1998  	   where
14:34:48 1999  	     i.id = in_invoice_id;
14:34:48 2000  	   EXCEPTION
14:34:48 2001  	     WHEN NO_DATA_FOUND THEN
14:34:48 2002  	       RAISE BAD_INVOICE_ID;
14:34:48 2003  	 END;
14:34:48 2004  
14:34:48 2005  	 select
14:34:48 2006  	   count(1) into cnt_matched_instr
14:34:48 2007  	 from
14:34:48 2008  	   charge ch
14:34:48 2009  	 inner join
14:34:48 2010  	   subscription s
14:34:48 2011  	 on
14:34:48 2012  	   s.instrument_id = ch.instrument_id
14:34:48 2013  	 where
14:34:48 2014  	   ch.invoice_id = in_invoice_id;
14:34:48 2015  
14:34:48 2016  	 if cnt_matched_instr = 0 then
14:34:48 2017  	   out_external_transaction_id := null;
14:34:48 2018  	   out_order_id := null;
14:34:48 2019  	   return;
14:34:48 2020  	 end if;
14:34:48 2021  
14:34:48 2022  	 SELECT
14:34:48 2023  	   t.order_id,
14:34:48 2024  	   ta.external_transaction_id
14:34:48 2025  	   into
14:34:48 2026  	   out_order_id,
14:34:48 2027  	   out_external_transaction_id
14:34:48 2028  	 from
14:34:48 2029  	   charge ch
14:34:48 2030  	   inner join transaction t on ch.transaction_id = t.id
14:34:48 2031  	   inner join transaction_attempt ta on ta.transaction_id = t.id
14:34:48 2032  	 where
14:34:48 2033  	   ch.invoice_id = in_invoice_id
14:34:48 2034  	   and ta.transaction_attempt_status_id = GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS
14:34:48 2035  	   and ch.charge_amount > 0; -- We are not creating charges for the 0-amount invoices
14:34:48 2036  
14:34:48 2037  EXCEPTION
14:34:48 2038  WHEN BAD_INVOICE_ID THEN
14:34:48 2039  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2040  	   SPROC_NAME, 'No such invoice');
14:34:48 2041  WHEN NO_DATA_FOUND THEN
14:34:48 2042  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2043  	   SPROC_NAME, 'No payment data found');
14:34:48 2044  WHEN OTHERS THEN
14:34:48 2045  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2046  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2047  END GET_PAYMENT_INFO_BY_INVOICE_ID;
14:34:48 2048  
14:34:48 2049  PROCEDURE IS_REVOKE_ENTITLEMENTS(
14:34:48 2050  	 in_invoice_id IN NUMBER,
14:34:48 2051  	 out_is_revoke OUT NUMBER
14:34:48 2052  ) AS
14:34:48 2053  BEGIN
14:34:48 2054  	 SELECT DECODE(COUNT(1), 0, GLOBAL_CONSTANTS_V18.FALSE, GLOBAL_CONSTANTS_V18.TRUE)
14:34:48 2055  	   into out_is_revoke
14:34:48 2056  	 FROM
14:34:48 2057  	   offer_chain oc,
14:34:48 2058  	   subscription s,
14:34:48 2059  	   license l,
14:34:48 2060  	   invoice i
14:34:48 2061  	 where
14:34:48 2062  	   oc.id = s.offer_chain_id and
14:34:48 2063  	   s.id = l.subscription_id and
14:34:48 2064  	   l.invoice_id = i.id and
14:34:48 2065  	   oc.revoke_entitlements = GLOBAL_CONSTANTS_V18.TRUE and
14:34:48 2066  	   i.id = in_invoice_id and
14:34:48 2067  	   rownum < 2
14:34:48 2068  	 ;
14:34:48 2069  END IS_REVOKE_ENTITLEMENTS;
14:34:48 2070  
14:34:48 2071  END PROCS_INVOICE_V18;
14:34:48 2072  .
14:34:48 SQL> /

Package body created.

Elapsed: 00:00:00.22
14:34:48 SQL> 
14:34:48 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_FIN_INSTRUMENTS_V18" AS
14:34:48   2  
14:34:48   3  PROCEDURE UPDATE_GC_STATUS_BY_INVOICE(
14:34:48   4  	  in_invoice_id IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:48   5  	  in_status_id	IN GIFT_CERTIFICATE_STATUS.ID%TYPE,
14:34:48   6  	  in_updater	IN GIFT_CERTIFICATE.UPDATED_BY%TYPE)
14:34:48   7  AS
14:34:48   8  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_GC_STATUS_BY_INVOICE';
14:34:48   9  BEGIN
14:34:48  10  	FOR rec IN (SELECT id FROM Gift_Certificate WHERE Purchase_Invoice_Id = in_invoice_id) LOOP
14:34:48  11  	  PROCS_FIN_INSTRUMENTS_CRU_V18.UPDATE_GIFT_CERTIFICATE (
14:34:48  12  	    in_gift_certificate_id	  => rec.Id,
14:34:48  13  	    in_gift_certificate_status_id => in_status_id,
14:34:48  14  	    in_updated_by		  => in_updater
14:34:48  15  	  );
14:34:48  16  	END LOOP;
14:34:48  17  END UPDATE_GC_STATUS_BY_INVOICE;
14:34:48  18  
14:34:48  19  PROCEDURE IS_INVOICE_FOR_REDEEMED_GC (
14:34:48  20  	in_invoice_id		     IN NUMBER,
14:34:48  21  	out_is_invoice_for_redeem_gc OUT NUMBER
14:34:48  22  ) AS
14:34:48  23  SPROC_NAME CONSTANT VARCHAR2(32) := 'IS_INVOICE_FOR_REDEEMED_GC';
14:34:48  24  var_is_for_gc NUMBER;
14:34:48  25  BEGIN
14:34:48  26  	SELECT
14:34:48  27  	  count(1) into var_is_for_gc
14:34:48  28  	FROM GIFT_CERTIFICATE GC
14:34:48  29  	WHERE GC.PURCHASE_INVOICE_ID = in_invoice_id AND
14:34:48  30  	      GC.GIFT_CERTIFICATE_STATUS_ID = 2;
14:34:48  31  
14:34:48  32  	IF var_is_for_gc > 0 THEN
14:34:48  33  	  out_is_invoice_for_redeem_gc := 1;
14:34:48  34  	ELSE
14:34:48  35  	  out_is_invoice_for_redeem_gc := 0;
14:34:48  36  	END IF;
14:34:48  37  END IS_INVOICE_FOR_REDEEMED_GC;
14:34:48  38  
14:34:48  39  PROCEDURE GET_UNREDEEMED_GCS (
14:34:48  40  	out_result_set		OUT SYS_REFCURSOR,
14:34:48  41  	in_hours_number 	IN NUMBER DEFAULT 14*24,
14:34:48  42  	in_num_rows		IN NUMBER DEFAULT 10000,
14:34:48  43  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
14:34:48  44  ) AS
14:34:48  45  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_UNREDEEMED_GCS';
14:34:48  46  BEGIN
14:34:48  47  	OPEN out_result_set FOR
14:34:48  48  SELECT * FROM
14:34:48  49  (
14:34:48  50  	SELECT
14:34:48  51  	  gc.EXPIRATION_DATE,
14:34:48  52  	  ch.name,
14:34:48  53  	  ch.id offer_chain_id,
14:34:48  54  	  gc.sender_email,
14:34:48  55  	  gc.sender_name,
14:34:48  56  	  gc.recipient_email,
14:34:48  57  	  gc.recipient_name,
14:34:48  58  	  gc.purchase_date,
14:34:48  59  	  gc.redemption_date,
14:34:48  60  	  gc.purchaser_group_id,
14:34:48  61  	  gc.redeemer_group_id,
14:34:48  62  	  gc.code,
14:34:48  63  	  gc.gift_message,
14:34:48  64  	  gc.recipient_notify_date,
14:34:48  65  	  gc.id
14:34:48  66  	FROM
14:34:48  67  	  GIFT_CERTIFICATE gc,
14:34:48  68  	  OFFER_CHAIN ch
14:34:48  69  	WHERE
14:34:48  70  	  ch.id = gc.offer_chain_id
14:34:48  71  	  AND gc.RECIPIENT_NOTIFY_DATE is not null
14:34:48  72  	  AND gc.RECIPIENT_NOTIFY_DATE >= (sysdate - in_hours_number/24)
14:34:48  73  	  AND gc.RECIPIENT_NOTIFY_DATE < (sysdate - (in_hours_number-72)/24)
14:34:48  74  	  AND gc.redeemer_group_id is null
14:34:48  75  	  AND NOT EXISTS(
14:34:48  76  	    SELECT NULL
14:34:48  77  	    FROM PROCESS_RETRY_THROTTLE
14:34:48  78  	    WHERE PROCESS_NAME = in_process_name
14:34:48  79  	      AND GENERIC_ID = gc.id
14:34:48  80  	  ) AND EXISTS(
14:34:48  81  	    SELECT NULL
14:34:48  82  	    FROM
14:34:48  83  	      charge c,
14:34:48  84  	      transaction_attempt ta,
14:34:48  85  	      transaction t
14:34:48  86  	    WHERE
14:34:48  87  	      c.invoice_id = gc.purchase_invoice_id and
14:34:48  88  	      c.transaction_id = t.id and
14:34:48  89  	      t.id = ta.transaction_id and
14:34:48  90  	      ta.transaction_attempt_status_id = GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS
14:34:48  91  	  ) AND NOT EXISTS (
14:34:48  92  	    SELECT NULL
14:34:48  93  	    FROM
14:34:48  94  	      charge c,
14:34:48  95  	      transaction t
14:34:48  96  	    WHERE
14:34:48  97  	      c.invoice_id = gc.purchase_invoice_id and
14:34:48  98  	      c.transaction_id = t.id and
14:34:48  99  	      t.is_refund = GLOBAL_CONSTANTS_V18.TRUE
14:34:48 100  	  )
14:34:48 101  	  AND ROWNUM <= in_num_rows*10
14:34:48 102  	  ORDER BY dbms_random.value
14:34:48 103  ) WHERE
14:34:48 104  	  ROWNUM <= in_num_rows;
14:34:48 105  EXCEPTION
14:34:48 106  WHEN OTHERS THEN
14:34:48 107  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 108  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 109  END GET_UNREDEEMED_GCS;
14:34:48 110  
14:34:48 111  PROCEDURE ADD_CREDIT_CARD (
14:34:48 112  /*
14:34:48 113  Throws exceptions:
14:34:48 114  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 115  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 116  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:48 117  */
14:34:48 118  	in_group_id		  IN NUMBER,
14:34:48 119  	in_updated_by		  IN VARCHAR2,
14:34:48 120  	in_instrument_name	  IN VARCHAR2,
14:34:48 121  	in_card_holder_name	  IN VARCHAR2,
14:34:48 122  	in_street_address	  IN VARCHAR2,
14:34:48 123  	in_street_address2	  IN VARCHAR2,
14:34:48 124  	in_state		  IN VARCHAR2,
14:34:48 125  	in_city 		  IN VARCHAR2,
14:34:48 126  	in_postal_code		  IN VARCHAR2,
14:34:48 127  	in_country		  IN CHAR,
14:34:48 128  	in_last_four_cc 	  IN VARCHAR2,
14:34:48 129  	in_expiration_date	  IN DATE,
14:34:48 130  	in_credit_card_type_id	  IN NUMBER,
14:34:48 131  	in_token		  IN VARCHAR2,
14:34:48 132  	in_chase_profile_id	  IN VARCHAR2,
14:34:48 133  	in_credit_card_status_id  IN NUMBER,
14:34:48 134  	in_private_first_name	  IN VARCHAR2,
14:34:48 135  	in_private_last_name	  IN VARCHAR2,
14:34:48 136  	out_credit_card_id	  OUT NUMBER
14:34:48 137  ) AS
14:34:48 138  SPROC_NAME	     CONSTANT VARCHAR2(15) := 'ADD_CREDIT_CARD';
14:34:48 139  -- VARIABLES
14:34:48 140  var_account_id	      NUMBER;
14:34:48 141  var_account_status      NUMBER;
14:34:48 142  var_credit_card_id      NUMBER;
14:34:48 143  temp_old_credit_card_id NUMBER;
14:34:48 144  -- EXCEPTIONS
14:34:48 145  BAD_ACCOUNT_STATUS	 EXCEPTION;
14:34:48 146  CAN_NOT_SET_DEF_FINANCIAL  EXCEPTION;
14:34:48 147  BAD_IS_DEFAULT_VALUE	 EXCEPTION;
14:34:48 148  BAD_OLD_CREDIT_CARD	 EXCEPTION;
14:34:48 149  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
14:34:48 150  ----- DELETE NEXT LINES WHEN UI WILL SUPPORT MANY CC PER ACCOUNT
14:34:48 151  var_charges_set		SYS_REFCURSOR;
14:34:48 152  var_charge_id		NUMBER;
14:34:48 153  var_charge_invoice_id	NUMBER;
14:34:48 154  var_charge_transaction_id NUMBER;
14:34:48 155  var_charge_amount 	NUMBER(10,2);
14:34:48 156  temp_out_charge_id	NUMBER;
14:34:48 157  temp_out_transaction_id	NUMBER;
14:34:48 158  var_order_id			VARCHAR2(1024);
14:34:48 159  BEGIN
14:34:48 160  
14:34:48 161  	-- Get account id
14:34:48 162  	-- Get account status
14:34:48 163  	SELECT
14:34:48 164  	  ACCOUNT.ID,
14:34:48 165  	  ACCOUNT.ACCOUNT_STATUS_ID
14:34:48 166  	  into
14:34:48 167  	  var_account_id,
14:34:48 168  	  var_account_status
14:34:48 169  	FROM
14:34:48 170  	  ACCOUNT
14:34:48 171  	WHERE
14:34:48 172  	  ACCOUNT.GROUP_ID = in_group_id;
14:34:48 173  
14:34:48 174  	SELECT
14:34:48 175  	  CC_ID_SEQ.nextVal into var_credit_card_id
14:34:48 176  	FROM DUAL;
14:34:48 177  
14:34:48 178  	-- Insert new row in CREDIT_CARD table
14:34:48 179  	PROCS_FIN_INSTRUMENTS_CRU_V18.CREATE_CREDIT_CARD(
14:34:48 180  	  out_credit_card_id	      => var_credit_card_id,
14:34:48 181  	  in_account_id 	      => var_account_id,
14:34:48 182  	  in_instrument_name	      => in_instrument_name,
14:34:48 183  	  in_private_card_holder_name => in_card_holder_name,
14:34:48 184  	  in_private_street_address   => in_street_address,
14:34:48 185  	  in_private_street_address2  => in_street_address2,
14:34:48 186  	  in_state		      => in_state,
14:34:48 187  	  in_city		      => in_city,
14:34:48 188  	  in_postal_code	      => in_postal_code,
14:34:48 189  	  in_country		      => in_country,
14:34:48 190  	  in_last_four_cc	      => in_last_four_cc,
14:34:48 191  	  in_expiration_date	      => in_expiration_date,
14:34:48 192  	  in_credit_card_type_id      => in_credit_card_type_id,
14:34:48 193  	  in_secret_token	      => in_token,
14:34:48 194  	  in_chase_profile_id	      => in_chase_profile_id,
14:34:48 195  	  in_created_by 	      => in_updated_by,
14:34:48 196  	  in_credit_card_status_id    => in_credit_card_status_id,
14:34:48 197  	  in_private_first_name       => in_private_first_name,
14:34:48 198  	  in_private_last_name	      => in_private_last_name
14:34:48 199  	);
14:34:48 200  
14:34:48 201  	out_credit_card_id := var_credit_card_id;
14:34:48 202  
14:34:48 203  EXCEPTION
14:34:48 204  WHEN NO_DATA_FOUND THEN
14:34:48 205  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 206  	  SPROC_NAME, 'No such account');
14:34:48 207  WHEN BAD_OLD_CREDIT_CARD THEN
14:34:48 208  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 209  	  SPROC_NAME, 'Bad old credit card id');
14:34:48 210  WHEN BAD_IS_DEFAULT_VALUE THEN
14:34:48 211  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 212  	  SPROC_NAME, 'Bad is_default value');
14:34:48 213  WHEN CAN_NOT_SET_DEF_FINANCIAL THEN
14:34:48 214  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 215  	  SPROC_NAME, 'Can not set default finansial instrument', EXCEPTION_MESSAGE);
14:34:48 216  WHEN BAD_ACCOUNT_STATUS THEN
14:34:48 217  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 218  	  SPROC_NAME, 'Account is not active');
14:34:48 219  WHEN OTHERS THEN
14:34:48 220  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 221  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 222  END ADD_CREDIT_CARD;
14:34:48 223  
14:34:48 224  /******************************************************************************/
14:34:48 225  
14:34:48 226  PROCEDURE ADD_PAYPAL (
14:34:48 227  /*
14:34:48 228  Throws exceptions:
14:34:48 229  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 230  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 231  */
14:34:48 232  	in_group_id			IN NUMBER,
14:34:48 233  	in_instrument_name		IN VARCHAR2,
14:34:48 234  	in_private_email_address	IN VARCHAR2,
14:34:48 235  	in_created_by			IN VARCHAR2,
14:34:48 236  	in_paypal_status_id		IN NUMBER,
14:34:48 237  	in_paypal_prvt_street_address	IN VARCHAR2,
14:34:48 238  	in_paypal_prvt_street_address2	IN VARCHAR2,
14:34:48 239  	in_state			IN VARCHAR2,
14:34:48 240  	in_city 			IN VARCHAR2,
14:34:48 241  	in_postal_code			IN VARCHAR2,
14:34:48 242  	in_country			IN CHAR,
14:34:48 243  	in_expiration_date		IN DATE,
14:34:48 244  	in_secret_token 		IN VARCHAR2,
14:34:48 245  	out_paypal_id			OUT NUMBER
14:34:48 246  ) AS
14:34:48 247  SPROC_NAME CONSTANT VARCHAR2(10) := 'ADD_PAYPAL';
14:34:48 248  var_paypal_id NUMBER;
14:34:48 249  var_account_id  NUMBER;
14:34:48 250  -- EXCEPTIONS
14:34:48 251  BAD_GROUP_ID	    EXCEPTION;
14:34:48 252  CAN_NOT_CREATE_PAYPAL EXCEPTION;
14:34:48 253  BAD_PAYPAL_STATUS     EXCEPTION;
14:34:48 254  EXCEPTION_MESSAGE VARCHAR2(1024);
14:34:48 255  BEGIN
14:34:48 256  
14:34:48 257  	IF in_paypal_status_id != GLOBAL_STATUSES_V18.PAYPAL_ACTIVE
14:34:48 258  	  AND in_paypal_status_id != GLOBAL_STATUSES_V18.PAYPAL_INACTIVE
14:34:48 259  	  AND in_paypal_status_id != GLOBAL_STATUSES_V18.PAYPAL_FROZEN THEN
14:34:48 260  	  RAISE BAD_PAYPAL_STATUS;
14:34:48 261  	END IF;
14:34:48 262  
14:34:48 263  	BEGIN
14:34:48 264  	  SELECT
14:34:48 265  	    a.id into var_account_id
14:34:48 266  	  from
14:34:48 267  	    account a
14:34:48 268  	  where
14:34:48 269  	    a.group_id = in_group_id;
14:34:48 270  	  EXCEPTION
14:34:48 271  	    WHEN NO_DATA_FOUND THEN
14:34:48 272  	      RAISE BAD_GROUP_ID;
14:34:48 273  	END;
14:34:48 274  
14:34:48 275  	BEGIN
14:34:48 276  	  PROCS_FIN_INSTRUMENTS_CRU_V18.CREATE_PAYPAL(
14:34:48 277  	    out_paypal_id		   => var_paypal_id,
14:34:48 278  	    in_paypal_id		   => NULL,
14:34:48 279  	    in_account_id		   => var_account_id,
14:34:48 280  	    in_instrument_name		   => in_instrument_name,
14:34:48 281  	    in_private_email_address	   => in_private_email_address,
14:34:48 282  	    in_created_by		   => in_created_by,
14:34:48 283  	    in_paypal_status_id 	   => in_paypal_status_id,
14:34:48 284  	    in_paypal_prvt_street_address  => in_paypal_prvt_street_address,
14:34:48 285  	    in_paypal_prvt_street_address2 => in_paypal_prvt_street_address2,
14:34:48 286  	    in_state			   => in_state,
14:34:48 287  	    in_city			   => in_city,
14:34:48 288  	    in_postal_code		   => in_postal_code,
14:34:48 289  	    in_country			   => in_country,
14:34:48 290  	    in_expiration_date		   => in_expiration_date,
14:34:48 291  	    in_secret_token		   => in_secret_token
14:34:48 292  	  );
14:34:48 293  	  EXCEPTION
14:34:48 294  	    WHEN OTHERS THEN
14:34:48 295  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 296  	      RAISE CAN_NOT_CREATE_PAYPAL;
14:34:48 297  	END;
14:34:48 298  
14:34:48 299  	out_paypal_id := var_paypal_id;
14:34:48 300  
14:34:48 301  EXCEPTION
14:34:48 302  WHEN BAD_GROUP_ID THEN
14:34:48 303  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 304  	  SPROC_NAME, 'No such group id');
14:34:48 305  WHEN BAD_PAYPAL_STATUS THEN
14:34:48 306  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 307  	  SPROC_NAME, 'Bad paypal status');
14:34:48 308  WHEN CAN_NOT_CREATE_PAYPAL THEN
14:34:48 309  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 310  	  SPROC_NAME, 'Could not create paypal', EXCEPTION_MESSAGE);
14:34:48 311  WHEN OTHERS THEN
14:34:48 312  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 313  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 314  END ADD_PAYPAL;
14:34:48 315  
14:34:48 316  /******************************************************************************/
14:34:48 317  
14:34:48 318  PROCEDURE DISABLE_CREDIT_CARD (
14:34:48 319  /*
14:34:48 320  Throws exceptions:
14:34:48 321  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 322  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 323  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:48 324  */
14:34:48 325  	in_credit_card_id IN NUMBER,
14:34:48 326  	in_updated_by	  IN VARCHAR2
14:34:48 327  ) AS
14:34:48 328  SPROC_NAME		   CONSTANT VARCHAR2(19) := 'DISABLE_CREDIT_CARD';
14:34:48 329  -- VARIBLES
14:34:48 330  var_account_id		     NUMBER;
14:34:48 331  var_group_id		     NUMBER;
14:34:48 332  var_credit_card_status	     NUMBER;
14:34:48 333  var_pending_transactions_num   NUMBER;
14:34:48 334  var_pending_invoices_num	     NUMBER;
14:34:48 335  current_def_instrument_type_id NUMBER;
14:34:48 336  current_def_instrument_id      NUMBER;
14:34:48 337  -- EXCEPTIONS
14:34:48 338  BAD_CC_STATUS		   EXCEPTION;
14:34:48 339  PENDING_TRANSACTIONS_FOUNDED EXCEPTION;
14:34:48 340  CAN_NOT_GET_DEF_FINANCIAL    EXCEPTION;
14:34:48 341  CAN_NOT_DEL_DEF_FINANCIAL    EXCEPTION;
14:34:48 342  CAN_NOT_DISABLE_CREDIT_CARD  EXCEPTION;
14:34:48 343  EXCEPTION_MESSAGE 	   VARCHAR2(1024);
14:34:48 344  BEGIN
14:34:48 345  
14:34:48 346  	-- Get credit card status
14:34:48 347  	-- Get account id
14:34:48 348  	SELECT
14:34:48 349  	  CREDIT_CARD.CREDIT_CARD_STATUS_ID,
14:34:48 350  	  CREDIT_CARD.ACCOUNT_ID
14:34:48 351  	  into
14:34:48 352  	  var_credit_card_status,
14:34:48 353  	  var_account_id
14:34:48 354  	FROM
14:34:48 355  	  CREDIT_CARD
14:34:48 356  	WHERE
14:34:48 357  	  CREDIT_CARD.ID = in_credit_card_id;
14:34:48 358  
14:34:48 359  	-- Check that we can disable this credit card (STUB)
14:34:48 360  	IF F_CAN_DISABLE_CREDIT_CARD(in_credit_card_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 361  	  RAISE CAN_NOT_DISABLE_CREDIT_CARD;
14:34:48 362  	END IF;
14:34:48 363  
14:34:48 364  	-- Get account id
14:34:48 365  	SELECT
14:34:48 366  	  ACCOUNT.GROUP_ID into var_group_id
14:34:48 367  	FROM
14:34:48 368  	  ACCOUNT
14:34:48 369  	WHERE
14:34:48 370  	  ACCOUNT.ID = var_account_id;
14:34:48 371  
14:34:48 372  	-- Card should to be active
14:34:48 373  	IF var_credit_card_status != GLOBAL_STATUSES_V18.CREDIT_CARD_ACTIVE THEN
14:34:48 374  	  RAISE BAD_CC_STATUS;
14:34:48 375  	END IF;
14:34:48 376  
14:34:48 377  	-- Looking for pending transactions associated with given credit card
14:34:48 378  	SELECT
14:34:48 379  	  COUNT(*) into var_pending_invoices_num
14:34:48 380  	FROM
14:34:48 381  	  CHARGE
14:34:48 382  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
14:34:48 383  	WHERE
14:34:48 384  	  CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD
14:34:48 385  	  AND CHARGE.INSTRUMENT_ID = in_credit_card_id
14:34:48 386  	  AND TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V18.TRANSACTION_PENDING;
14:34:48 387  
14:34:48 388  	IF var_pending_invoices_num > 0 THEN
14:34:48 389  	  RAISE PENDING_TRANSACTIONS_FOUNDED;
14:34:48 390  	END IF;
14:34:48 391  
14:34:48 392  	-- Getting current default financial instrument
14:34:48 393  	BEGIN
14:34:48 394  	  GET_DEF_FINANCIAL_INSTRUMENT(
14:34:48 395  	    in_group_id 	   => var_group_id,
14:34:48 396  	    out_instrument_type_id => current_def_instrument_type_id,
14:34:48 397  	    out_instrument_id	   => current_def_instrument_id
14:34:48 398  	  );
14:34:48 399  	  EXCEPTION
14:34:48 400  	    WHEN OTHERS THEN
14:34:48 401  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 402  	      RAISE CAN_NOT_GET_DEF_FINANCIAL;
14:34:48 403  	END;
14:34:48 404  
14:34:48 405  	-- Checking that credit card is not default
14:34:48 406  	IF current_def_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD
14:34:48 407  	  AND current_def_instrument_id = in_credit_card_id THEN
14:34:48 408  	  BEGIN
14:34:48 409  	    DEL_DEF_FINANCIAL_INSTRUMENT(
14:34:48 410  	      in_group_id => var_group_id
14:34:48 411  	    );
14:34:48 412  	  EXCEPTION
14:34:48 413  	    WHEN OTHERS THEN
14:34:48 414  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 415  	      RAISE CAN_NOT_DEL_DEF_FINANCIAL;
14:34:48 416  	  END;
14:34:48 417  	END IF;
14:34:48 418  
14:34:48 419  	-- Update credit card status
14:34:48 420  	PROCS_FIN_INSTRUMENTS_V18.UPDATE_CREDIT_CARD_STATUS(
14:34:48 421  	  in_credit_card_id	   => in_credit_card_id,
14:34:48 422  	  in_updated_by 	   => in_updated_by,
14:34:48 423  	  in_credit_card_status_id => GLOBAL_STATUSES_V18.CREDIT_CARD_DISABLED
14:34:48 424  	);
14:34:48 425  
14:34:48 426  EXCEPTION
14:34:48 427  WHEN NO_DATA_FOUND THEN
14:34:48 428  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 429  	  SPROC_NAME, 'No such credit card');
14:34:48 430  WHEN CAN_NOT_GET_DEF_FINANCIAL THEN
14:34:48 431  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 432  	  SPROC_NAME, 'Could not get current default financial instrument', EXCEPTION_MESSAGE);
14:34:48 433  WHEN CAN_NOT_DEL_DEF_FINANCIAL THEN
14:34:48 434  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 435  	  SPROC_NAME, 'Could not delete information about default financial instrument from account', EXCEPTION_MESSAGE);
14:34:48 436  WHEN BAD_CC_STATUS THEN
14:34:48 437  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 438  	  SPROC_NAME, 'Credit card is not active');
14:34:48 439  WHEN PENDING_TRANSACTIONS_FOUNDED THEN
14:34:48 440  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 441  	  SPROC_NAME, 'Account has pending charge which is using this card');
14:34:48 442  WHEN CAN_NOT_DISABLE_CREDIT_CARD THEN
14:34:48 443  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 444  	  SPROC_NAME, 'Could not disable this credit card', EXCEPTION_MESSAGE);
14:34:48 445  WHEN OTHERS THEN
14:34:48 446  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 447  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 448  END DISABLE_CREDIT_CARD;
14:34:48 449  
14:34:48 450  /******************************************************************************/
14:34:48 451  
14:34:48 452  PROCEDURE DISABLE_PAYPAL (
14:34:48 453  /*
14:34:48 454  Throws exceptions:
14:34:48 455  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 456  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 457  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:48 458  */
14:34:48 459  	in_paypal_id  IN NUMBER,
14:34:48 460  	in_updated_by IN VARCHAR2
14:34:48 461  ) AS
14:34:48 462  SPROC_NAME CONSTANT VARCHAR2(14) := 'DISABLE_PAYPAL';
14:34:48 463  -- VARIABLES
14:34:48 464  var_paypal_status_id NUMBER;
14:34:48 465  var_account_id	   NUMBER;
14:34:48 466  var_group_id	   NUMBER;
14:34:48 467  var_pending_invoices_num NUMBER;
14:34:48 468  current_def_instrument_type_id NUMBER;
14:34:48 469  current_def_instrument_id NUMBER;
14:34:48 470  -- EXCEPTIONS
14:34:48 471  BAD_PAYPAL_ID EXCEPTION;
14:34:48 472  PAYPAL_ALREADY_INACTIVE EXCEPTION;
14:34:48 473  PENDING_TRANSACTIONS_FOUND EXCEPTION;
14:34:48 474  CAN_NOT_GET_DEF_FINANCIAL EXCEPTION;
14:34:48 475  CAN_NOT_DEL_DEF_FINANCIAL EXCEPTION;
14:34:48 476  EXCEPTION_MESSAGE VARCHAR2(1024);
14:34:48 477  BEGIN
14:34:48 478  
14:34:48 479  	-- Get Paypal status
14:34:48 480  	-- Get account
14:34:48 481  	BEGIN
14:34:48 482  	  SELECT
14:34:48 483  	    PAYPAL.PAYPAL_STATUS_ID,
14:34:48 484  	    PAYPAL.ACCOUNT_ID
14:34:48 485  	    into
14:34:48 486  	    var_paypal_status_id,
14:34:48 487  	    var_account_id
14:34:48 488  	  FROM
14:34:48 489  	    PAYPAL
14:34:48 490  	  WHERE
14:34:48 491  	    PAYPAL.ID = in_paypal_id;
14:34:48 492  	  EXCEPTION
14:34:48 493  	    WHEN NO_DATA_FOUND THEN
14:34:48 494  	      RAISE BAD_PAYPAL_ID;
14:34:48 495  	END;
14:34:48 496  
14:34:48 497  	-- Get group id
14:34:48 498  	SELECT
14:34:48 499  	  ACCOUNT.GROUP_ID into var_group_id
14:34:48 500  	FROM
14:34:48 501  	  ACCOUNT
14:34:48 502  	WHERE
14:34:48 503  	  ACCOUNT.ID = var_account_id;
14:34:48 504  
14:34:48 505  	-- Card should not be disabled
14:34:48 506  	IF var_paypal_status_id = GLOBAL_STATUSES_V18.PAYPAL_INACTIVE THEN
14:34:48 507  	  RAISE PAYPAL_ALREADY_INACTIVE;
14:34:48 508  	END IF;
14:34:48 509  
14:34:48 510  	-- Looking for pending transactions associated with given credit card
14:34:48 511  	SELECT
14:34:48 512  	  COUNT(*) into var_pending_invoices_num
14:34:48 513  	FROM
14:34:48 514  	  CHARGE
14:34:48 515  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
14:34:48 516  	WHERE
14:34:48 517  	  CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL
14:34:48 518  	  AND CHARGE.INSTRUMENT_ID = in_paypal_id
14:34:48 519  	  AND TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V18.TRANSACTION_PENDING;
14:34:48 520  
14:34:48 521  	IF var_pending_invoices_num > 0 THEN
14:34:48 522  	  RAISE PENDING_TRANSACTIONS_FOUND;
14:34:48 523  	END IF;
14:34:48 524  
14:34:48 525  	-- Getting current default financial instrument
14:34:48 526  	BEGIN
14:34:48 527  	  GET_DEF_FINANCIAL_INSTRUMENT(
14:34:48 528  	    in_group_id 	   => var_group_id,
14:34:48 529  	    out_instrument_type_id => current_def_instrument_type_id,
14:34:48 530  	    out_instrument_id	   => current_def_instrument_id
14:34:48 531  	  );
14:34:48 532  	  EXCEPTION
14:34:48 533  	    WHEN OTHERS THEN
14:34:48 534  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 535  	      RAISE CAN_NOT_GET_DEF_FINANCIAL;
14:34:48 536  	END;
14:34:48 537  
14:34:48 538  	-- Checking that credit card is not default
14:34:48 539  	IF current_def_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL
14:34:48 540  	  AND current_def_instrument_id = in_paypal_id THEN
14:34:48 541  	  BEGIN
14:34:48 542  	    DEL_DEF_FINANCIAL_INSTRUMENT(
14:34:48 543  	      in_group_id => var_group_id
14:34:48 544  	    );
14:34:48 545  	  EXCEPTION
14:34:48 546  	    WHEN OTHERS THEN
14:34:48 547  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 548  	      RAISE CAN_NOT_DEL_DEF_FINANCIAL;
14:34:48 549  	  END;
14:34:48 550  	END IF;
14:34:48 551  
14:34:48 552  	PROCS_FIN_INSTRUMENTS_V18.UPDATE_PAYPAL_STATUS(
14:34:48 553  	  in_paypal_id	      => in_paypal_id,
14:34:48 554  	  in_updated_by       => in_updated_by,
14:34:48 555  	  in_paypal_status_id => GLOBAL_STATUSES_V18.PAYPAL_INACTIVE
14:34:48 556  	);
14:34:48 557  
14:34:48 558  EXCEPTION
14:34:48 559  WHEN BAD_PAYPAL_ID THEN
14:34:48 560  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 561  	  SPROC_NAME, 'No such paypal');
14:34:48 562  WHEN PAYPAL_ALREADY_INACTIVE THEN
14:34:48 563  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 564  	  SPROC_NAME, 'Paypal already inactive');
14:34:48 565  WHEN PENDING_TRANSACTIONS_FOUND THEN
14:34:48 566  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 567  	  SPROC_NAME, 'Account has pending charge which are using this paypal');
14:34:48 568  WHEN CAN_NOT_GET_DEF_FINANCIAL THEN
14:34:48 569  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 570  	  SPROC_NAME, 'Could not get current default financial instrument', EXCEPTION_MESSAGE);
14:34:48 571  WHEN CAN_NOT_DEL_DEF_FINANCIAL THEN
14:34:48 572  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 573  	  SPROC_NAME, 'Could not delete information about default financial instrument from account', EXCEPTION_MESSAGE);
14:34:48 574  WHEN OTHERS THEN
14:34:48 575  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 576  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 577  END DISABLE_PAYPAL;
14:34:48 578  
14:34:48 579  /******************************************************************************/
14:34:48 580  
14:34:48 581  PROCEDURE UPDATE_CREDIT_CARD (
14:34:48 582  /*
14:34:48 583  Throws exceptions:
14:34:48 584  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 585  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 586  */
14:34:48 587  	in_credit_card_id	  IN NUMBER,
14:34:48 588  	in_updated_by		  IN VARCHAR2,
14:34:48 589  	in_instrument_name	  IN VARCHAR2,
14:34:48 590  	in_is_default		  IN NUMBER
14:34:48 591  ) AS
14:34:48 592  SPROC_NAME CONSTANT VARCHAR2(18) := 'UPDATE_CREDIT_CARD';
14:34:48 593  -- VARIABLES
14:34:48 594  var_account_id NUMBER;
14:34:48 595  var_group_id   NUMBER;
14:34:48 596  temp_cc_rownum NUMBER;
14:34:48 597  current_def_instrument_type_id NUMBER;
14:34:48 598  current_def_instrument_id      NUMBER;
14:34:48 599  -- EXCEPTION
14:34:48 600  CAN_NOT_SET_DEF_FINANCIAL  EXCEPTION;
14:34:48 601  BAD_IS_DEFAULT_VALUE	 EXCEPTION;
14:34:48 602  CAN_NOT_GET_DEF_FINANCIAL  EXCEPTION;
14:34:48 603  CAN_NOT_DEL_DEF_FINANCIAL  EXCEPTION;
14:34:48 604  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
14:34:48 605  BEGIN
14:34:48 606  
14:34:48 607  	-- Get account id
14:34:48 608  	SELECT
14:34:48 609  	  CREDIT_CARD.ACCOUNT_ID
14:34:48 610  	  into
14:34:48 611  	  var_account_id
14:34:48 612  	FROM
14:34:48 613  	  CREDIT_CARD
14:34:48 614  	WHERE
14:34:48 615  	  CREDIT_CARD.ID = in_credit_card_id;
14:34:48 616  
14:34:48 617  	-- Get group id
14:34:48 618  	SELECT
14:34:48 619  	  ACCOUNT.GROUP_ID into var_group_id
14:34:48 620  	FROM
14:34:48 621  	  ACCOUNT
14:34:48 622  	WHERE
14:34:48 623  	  ACCOUNT.ID = var_account_id;
14:34:48 624  
14:34:48 625  	-- Check that passed data is correct
14:34:48 626  	IF in_is_default != GLOBAL_CONSTANTS_V18.TRUE
14:34:48 627  	  AND in_is_default != GLOBAL_CONSTANTS_V18.FALSE
14:34:48 628  	  AND in_is_default IS NOT NULL THEN
14:34:48 629  	  RAISE BAD_IS_DEFAULT_VALUE;
14:34:48 630  	END IF;
14:34:48 631  
14:34:48 632  	-- Update credit card
14:34:48 633  	IF in_instrument_name IS NOT NULL THEN
14:34:48 634  	  PROCS_FIN_INSTRUMENTS_CRU_V18.UPDATE_CREDIT_CARD(
14:34:48 635  	    in_credit_card_id  => in_credit_card_id,
14:34:48 636  	    in_updated_by      => in_updated_by,
14:34:48 637  	    in_instrument_name => in_instrument_name
14:34:48 638  	  );
14:34:48 639  	END IF;
14:34:48 640  
14:34:48 641  	-- Set default financial instrument
14:34:48 642  	IF in_is_default = GLOBAL_CONSTANTS_V18.TRUE THEN
14:34:48 643  	  BEGIN
14:34:48 644  	    PROCS_FIN_INSTRUMENTS_V18.SET_DEF_FINANCIAL_INSTRUMENT(
14:34:48 645  	      in_group_id	    => var_group_id,
14:34:48 646  	      in_instrument_type_id => GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD,
14:34:48 647  	      in_instrument_id	    => in_credit_card_id,
14:34:48 648  	      in_updated_by	    => in_updated_by
14:34:48 649  	    );
14:34:48 650  	    EXCEPTION
14:34:48 651  	      WHEN OTHERS THEN
14:34:48 652  		EXCEPTION_MESSAGE := SQLERRM;
14:34:48 653  		RAISE CAN_NOT_SET_DEF_FINANCIAL;
14:34:48 654  	  END;
14:34:48 655  	END IF;
14:34:48 656  
14:34:48 657  	-- Set default financial instrument
14:34:48 658  	IF in_is_default = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 659  	  BEGIN
14:34:48 660  	    GET_DEF_FINANCIAL_INSTRUMENT(
14:34:48 661  	      in_group_id	     => var_group_id,
14:34:48 662  	      out_instrument_type_id => current_def_instrument_type_id,
14:34:48 663  	      out_instrument_id      => current_def_instrument_id
14:34:48 664  	    );
14:34:48 665  	  EXCEPTION
14:34:48 666  	    WHEN OTHERS THEN
14:34:48 667  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 668  	      RAISE CAN_NOT_GET_DEF_FINANCIAL;
14:34:48 669  	  END;
14:34:48 670  	  IF current_def_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD
14:34:48 671  	    AND current_def_instrument_id = in_credit_card_id THEN
14:34:48 672  	    BEGIN
14:34:48 673  	      DEL_DEF_FINANCIAL_INSTRUMENT(
14:34:48 674  		in_group_id => var_group_id
14:34:48 675  	      );
14:34:48 676  	      EXCEPTION
14:34:48 677  		WHEN OTHERS THEN
14:34:48 678  		  EXCEPTION_MESSAGE := SQLERRM;
14:34:48 679  		  RAISE CAN_NOT_DEL_DEF_FINANCIAL;
14:34:48 680  	    END;
14:34:48 681  	  END IF;
14:34:48 682  	END IF;
14:34:48 683  
14:34:48 684  EXCEPTION
14:34:48 685  WHEN NO_DATA_FOUND THEN
14:34:48 686  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 687  	  SPROC_NAME, 'No such credit card');
14:34:48 688  WHEN CAN_NOT_SET_DEF_FINANCIAL THEN
14:34:48 689  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 690  	  SPROC_NAME, 'Could not set default financial instrument for account', EXCEPTION_MESSAGE);
14:34:48 691  WHEN CAN_NOT_GET_DEF_FINANCIAL THEN
14:34:48 692  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 693  	  SPROC_NAME, 'Could not get default financial instrument for account', EXCEPTION_MESSAGE);
14:34:48 694  WHEN CAN_NOT_DEL_DEF_FINANCIAL THEN
14:34:48 695  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 696  	  SPROC_NAME, 'Could not delete information about default financial instrument', EXCEPTION_MESSAGE);
14:34:48 697  WHEN OTHERS THEN
14:34:48 698  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 699  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 700  END UPDATE_CREDIT_CARD;
14:34:48 701  
14:34:48 702  /******************************************************************************/
14:34:48 703  
14:34:48 704  PROCEDURE START_GC_PURCHASING (
14:34:48 705  	in_group_id		  IN NUMBER,
14:34:48 706  	in_offer_chain_id	  IN VARCHAR2,
14:34:48 707  	in_gift_certificate_code  IN  VARCHAR2,
14:34:48 708  	in_created_by		  IN  VARCHAR2,
14:34:48 709  	in_recipient_name	  IN  VARCHAR2,
14:34:48 710  	in_recipient_email	  IN  VARCHAR2,
14:34:48 711  	in_recipient_address_id   IN NUMBER,
14:34:48 712  	in_recipient_notify_date  IN DATE,
14:34:48 713  	in_sender_name		  IN VARCHAR2,
14:34:48 714  	in_sender_email 	  IN VARCHAR2,
14:34:48 715  	in_gift_message 	  IN  VARCHAR2,
14:34:48 716  	in_expiration_date	  IN DATE,
14:34:48 717  	out_gift_certificate_id   OUT NUMBER,
14:34:48 718  	out_invoice_id		  OUT NUMBER
14:34:48 719  ) AS
14:34:48 720  SPROC_NAME CONSTANT VARCHAR2(19) := 'START_GC_PURCHASING';
14:34:48 721  -- VARIABLES
14:34:48 722  var_account_id		NUMBER;
14:34:48 723  temp_gc_code		GIFT_CERTIFICATE.CODE%TYPE;
14:34:48 724  var_och_is_gc		NUMBER;
14:34:48 725  var_offer_chain_status_id NUMBER;
14:34:48 726  var_is_for_redemption	NUMBER;
14:34:48 727  var_new_invoice_id	NUMBER;
14:34:48 728  var_gift_cert_id		NUMBER;
14:34:48 729  var_account_tax_exempt_id VARCHAR2(255);
14:34:48 730  -- EXCEPTIONS
14:34:48 731  BAD_GROUP_ID		    EXCEPTION;
14:34:48 732  GC_CODE_ALREADY_EXISTS	    EXCEPTION;
14:34:48 733  BAD_OFFER_CHAIN_ID	    EXCEPTION;
14:34:48 734  OCH_IS_NOT_GIFT_CERTIFICATE   EXCEPTION;
14:34:48 735  BAD_OFFER_CHAIN_STATUS	    EXCEPTION;
14:34:48 736  CAN_NOT_PURCHASE_GC_FOR_RDMPN EXCEPTION;
14:34:48 737  CAN_NOT_CREATE_INVOICE	    EXCEPTION;
14:34:48 738  OFFER_REC_NUM_LESS_THAN_ONE   EXCEPTION;
14:34:48 739  CAN_NOT_CREATE_LINE_ITEMS     EXCEPTION;
14:34:48 740  
14:34:48 741  EXCEPTION_MESSAGE VARCHAR2(1024);
14:34:48 742  BEGIN
14:34:48 743  	-- Get account id
14:34:48 744  	BEGIN
14:34:48 745  	  SELECT
14:34:48 746  	    ACCOUNT.ID,
14:34:48 747  	    ACCOUNT.TAX_EXEMPT_ID
14:34:48 748  	    into
14:34:48 749  	    var_account_id,
14:34:48 750  	    var_account_tax_exempt_id
14:34:48 751  	  FROM
14:34:48 752  	    ACCOUNT
14:34:48 753  	  WHERE
14:34:48 754  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:48 755  	  EXCEPTION
14:34:48 756  	  WHEN NO_DATA_FOUND THEN
14:34:48 757  	    RAISE BAD_GROUP_ID;
14:34:48 758  	END;
14:34:48 759  
14:34:48 760  	-- Check for the same code
14:34:48 761  	BEGIN
14:34:48 762  	  SELECT
14:34:48 763  	    GIFT_CERTIFICATE.CODE into temp_gc_code
14:34:48 764  	  FROM
14:34:48 765  	    GIFT_CERTIFICATE
14:34:48 766  	  WHERE
14:34:48 767  	    GIFT_CERTIFICATE.CODE = in_gift_certificate_code;
14:34:48 768  
14:34:48 769  	  RAISE GC_CODE_ALREADY_EXISTS;
14:34:48 770  
14:34:48 771  	  EXCEPTION
14:34:48 772  	    WHEN NO_DATA_FOUND THEN
14:34:48 773  	      NULL;
14:34:48 774  	END;
14:34:48 775  
14:34:48 776  	-- Get offer chain flag "is_gift_certificate"
14:34:48 777  	BEGIN
14:34:48 778  	  SELECT
14:34:48 779  	    OFFER_CHAIN.IS_GIFT_CERTIFICATE,
14:34:48 780  	    OFFER_CHAIN.OFFER_CHAIN_STATUS_ID
14:34:48 781  	    into
14:34:48 782  	    var_och_is_gc,
14:34:48 783  	    var_offer_chain_status_id
14:34:48 784  	  FROM
14:34:48 785  	    OFFER_CHAIN
14:34:48 786  	  WHERE
14:34:48 787  	    OFFER_CHAIN.ID = in_offer_chain_id;
14:34:48 788  	  EXCEPTION
14:34:48 789  	  WHEN NO_DATA_FOUND THEN
14:34:48 790  	    RAISE BAD_OFFER_CHAIN_ID;
14:34:48 791  	END;
14:34:48 792  
14:34:48 793  	IF var_och_is_gc != GLOBAL_CONSTANTS_V18.TRUE
14:34:48 794  	  OR var_och_is_gc IS NULL THEN
14:34:48 795  	  RAISE OCH_IS_NOT_GIFT_CERTIFICATE;
14:34:48 796  	END IF;
14:34:48 797  
14:34:48 798  	IF var_offer_chain_status_id != GLOBAL_STATUSES_V18.OFFER_CHAIN_ACTIVE THEN
14:34:48 799  	  RAISE BAD_OFFER_CHAIN_STATUS;
14:34:48 800  	END IF;
14:34:48 801  
14:34:48 802  	-- norlov: #38151 check if the OC is for Redemption:
14:34:48 803  	SELECT
14:34:48 804  	  COUNT(*) into var_is_for_redemption
14:34:48 805  	FROM
14:34:48 806  	  OFFER_CHAIN_ELIGIBILITY
14:34:48 807  	WHERE
14:34:48 808  	  OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID = in_offer_chain_id
14:34:48 809  	  AND OFFER_CHAIN_ELIGIBILITY.NAME = GLOBAL_CONSTANTS_V18.GIFT_CERTIFICATE_REQUIRED
14:34:48 810  	  AND OFFER_CHAIN_ELIGIBILITY.VALUE = GLOBAL_CONSTANTS_V18.ELIGIBILITY_FLAG_SET;
14:34:48 811  
14:34:48 812  	IF var_is_for_redemption > 0 THEN
14:34:48 813  	  RAISE CAN_NOT_PURCHASE_GC_FOR_RDMPN;
14:34:48 814  	END IF;
14:34:48 815  
14:34:48 816  	-- Create new invoice
14:34:48 817  	BEGIN
14:34:48 818  	  PROCS_INVOICE_V18.CREATE_INVOICE(
14:34:48 819  	    in_invoice_status => GLOBAL_STATUSES_V18.INVOICE_OPEN,
14:34:48 820  	    in_created_by     => in_created_by,
14:34:48 821  	    in_tax_exempt_id  => var_account_tax_exempt_id,
14:34:48 822  	    out_invoice_id    => var_new_invoice_id
14:34:48 823  	  );
14:34:48 824  	  EXCEPTION
14:34:48 825  	    WHEN OTHERS THEN
14:34:48 826  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 827  	      RAISE CAN_NOT_CREATE_INVOICE;
14:34:48 828  	END;
14:34:48 829  
14:34:48 830  	-- Add line items for new invoice
14:34:48 831  	BEGIN
14:34:48 832  	  FOR f_offer_data IN (
14:34:48 833  	    SELECT
14:34:48 834  	      OFFER_ID,
14:34:48 835  	      NUM_RECURRENCES
14:34:48 836  	    FROM
14:34:48 837  	      OFFER_OFFER_CHAIN
14:34:48 838  	    WHERE
14:34:48 839  	      OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
14:34:48 840  	  )
14:34:48 841  	  LOOP
14:34:48 842  	    IF f_offer_data.NUM_RECURRENCES < 1 THEN
14:34:48 843  	      RAISE OFFER_REC_NUM_LESS_THAN_ONE;
14:34:48 844  	    END IF;
14:34:48 845  	    FOR i_offer_recurrences_iterator IN 1..f_offer_data.NUM_RECURRENCES
14:34:48 846  	    LOOP
14:34:48 847  	      PROCS_LINE_ITEMS_V18.ADD_LINE_ITEMS(
14:34:48 848  		in_invoice_id => var_new_invoice_id,
14:34:48 849  		in_offer_id   => f_offer_data.OFFER_ID,
14:34:48 850  		in_created_by => in_created_by
14:34:48 851  	      );
14:34:48 852  	    END LOOP;
14:34:48 853  	  END LOOP;
14:34:48 854  
14:34:48 855  	  EXCEPTION
14:34:48 856  	    WHEN OTHERS THEN
14:34:48 857  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 858  	      RAISE CAN_NOT_CREATE_LINE_ITEMS;
14:34:48 859  	END;
14:34:48 860  
14:34:48 861  	PROCS_FIN_INSTRUMENTS_CRU_V18.CREATE_GIFT_CERTIFICATE(
14:34:48 862  	  out_gift_certificate_id	=> var_gift_cert_id,
14:34:48 863  	  in_purchaser_group_id 	=> in_group_id,
14:34:48 864  	  in_purchaser_invoice_id	=> var_new_invoice_id,
14:34:48 865  	  in_offer_chain_id		=> in_offer_chain_id,
14:34:48 866  	  in_expiration_date		=> in_expiration_date,
14:34:48 867  	  in_purchase_date		=> SYSDATE,
14:34:48 868  	  in_gift_certificate_status_id => GLOBAL_STATUSES_V18.GIFT_CERTIFICATE_ACTIVE,
14:34:48 869  	  in_code			=> in_gift_certificate_code,
14:34:48 870  	  in_created_by 		=> in_created_by,
14:34:48 871  	  in_recipient_name		=> in_recipient_name,
14:34:48 872  	  in_gift_message		=> in_gift_message,
14:34:48 873  	  in_recipient_email		=> in_recipient_email,
14:34:48 874  	  in_sender_email		=> in_sender_email,
14:34:48 875  	  in_sender_name		=> in_sender_name,
14:34:48 876  	  in_recipient_address_id	=> in_recipient_address_id,
14:34:48 877  	  in_recipient_notify_date	=> in_recipient_notify_date
14:34:48 878  	);
14:34:48 879  
14:34:48 880  	out_gift_certificate_id := var_gift_cert_id;
14:34:48 881  	out_invoice_id := var_new_invoice_id;
14:34:48 882  
14:34:48 883  EXCEPTION
14:34:48 884  WHEN BAD_OFFER_CHAIN_STATUS THEN
14:34:48 885  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 886  	  SPROC_NAME, 'Offer chain is not active');
14:34:48 887  WHEN GC_CODE_ALREADY_EXISTS THEN
14:34:48 888  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:48 889  	  SPROC_NAME, 'Gift certificate with same code already exists');
14:34:48 890  WHEN OCH_IS_NOT_GIFT_CERTIFICATE THEN
14:34:48 891  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 892  	  SPROC_NAME, 'This offer chain can not be used for gift certificate');
14:34:48 893  WHEN CAN_NOT_PURCHASE_GC_FOR_RDMPN THEN
14:34:48 894  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 895  	  SPROC_NAME, 'This offer chain can not be purchased for gift certificate since it is for redemption');
14:34:48 896  WHEN CAN_NOT_CREATE_INVOICE THEN
14:34:48 897  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 898  	  SPROC_NAME, 'Could not create new invoice', EXCEPTION_MESSAGE);
14:34:48 899  WHEN CAN_NOT_CREATE_LINE_ITEMS THEN
14:34:48 900  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 901  	  SPROC_NAME, 'Could not create line items', EXCEPTION_MESSAGE);
14:34:48 902  WHEN BAD_GROUP_ID THEN
14:34:48 903  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 904  	  SPROC_NAME, 'No such group id');
14:34:48 905  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:48 906  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 907  	  SPROC_NAME, 'No such offer chain');
14:34:48 908  WHEN OFFER_REC_NUM_LESS_THAN_ONE THEN
14:34:48 909  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 910  	  SPROC_NAME, 'Some offer has recurrences number less than 1');
14:34:48 911  WHEN OTHERS THEN
14:34:48 912  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 913  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 914  END START_GC_PURCHASING;
14:34:48 915  
14:34:48 916  /******************************************************************************/
14:34:48 917  
14:34:48 918  PROCEDURE FINALIZE_GC_PURCHASING (
14:34:48 919  	in_invoice_id	      IN NUMBER,
14:34:48 920  	in_created_by	      IN VARCHAR2,
14:34:48 921  	in_instrument_id      IN NUMBER,
14:34:48 922  	in_instrument_type_id IN NUMBER,
14:34:48 923  	in_order_id	      IN VARCHAR2,
14:34:48 924  	in_transaction_id     IN NUMBER,
14:34:48 925  	out_charge_amount     OUT NUMBER
14:34:48 926  ) AS
14:34:48 927  SPROC_NAME CONSTANT VARCHAR2(22) := 'FINALIZE_GC_PURCHASING';
14:34:48 928  -- VARIABLES
14:34:48 929  temp_transaction_id_count NUMBER;
14:34:48 930  var_invoice_amount	NUMBER(10,2);
14:34:48 931  var_transaction_id	NUMBER;
14:34:48 932  var_new_charge_id 	NUMBER;
14:34:48 933  -- EXCEPTIONS
14:34:48 934  BAD_CREDIT_CARD_ID	  EXCEPTION;
14:34:48 935  BAD_PAYPAL_ID		  EXCEPTION;
14:34:48 936  BAD_INSTRUMENT_TYPE	  EXCEPTION;
14:34:48 937  TRANSACTION_EXISTS	  EXCEPTION;
14:34:48 938  CAN_NOT_CALC_INVOICE_AMOUNT EXCEPTION;
14:34:48 939  CAN_NOT_USE_FCINSTR	  EXCEPTION;
14:34:48 940  CAN_NOT_CREATE_TRANSACTION  EXCEPTION;
14:34:48 941  CAN_NOT_CREATE_CHARGE	  EXCEPTION;
14:34:48 942  EXCEPTION_MESSAGE   VARCHAR2(1024);
14:34:48 943  BEGIN
14:34:48 944  
14:34:48 945  	-- Check that instrument exists
14:34:48 946  	IF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD THEN
14:34:48 947  	  IF IS_CREDIT_CARD_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 948  	    RAISE BAD_CREDIT_CARD_ID;
14:34:48 949  	  END IF;
14:34:48 950  	ELSIF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL THEN
14:34:48 951  	  IF IS_PAYPAL_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 952  	    RAISE BAD_PAYPAL_ID;
14:34:48 953  	  END IF;
14:34:48 954  	ELSIF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_ZCI_INSTRUMENT THEN
14:34:48 955  	  NULL;
14:34:48 956  	ELSE
14:34:48 957  	  RAISE BAD_INSTRUMENT_TYPE;
14:34:48 958  	END IF;
14:34:48 959  
14:34:48 960  	-- Check that transaction with given id do not exists
14:34:48 961  	SELECT
14:34:48 962  	  COUNT(*) into temp_transaction_id_count
14:34:48 963  	FROM
14:34:48 964  	  TRANSACTION
14:34:48 965  	WHERE
14:34:48 966  	  TRANSACTION.ID = in_transaction_id;
14:34:48 967  
14:34:48 968  	IF temp_transaction_id_count > 0 THEN
14:34:48 969  	  RAISE TRANSACTION_EXISTS;
14:34:48 970  	END IF;
14:34:48 971  
14:34:48 972  	-- Calculate new invoice amount
14:34:48 973  	BEGIN
14:34:48 974  	  PROCS_INVOICE_V18.CALCULATE_INVOICE_AMOUNT(in_invoice_id, var_invoice_amount);
14:34:48 975  	  EXCEPTION
14:34:48 976  	    WHEN OTHERS THEN
14:34:48 977  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 978  	      RAISE CAN_NOT_CALC_INVOICE_AMOUNT;
14:34:48 979  	END;
14:34:48 980  
14:34:48 981  	IF var_invoice_amount > 0
14:34:48 982  	  AND in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_ZCI_INSTRUMENT THEN
14:34:48 983  	  RAISE CAN_NOT_USE_FCINSTR;
14:34:48 984  	END IF;
14:34:48 985  
14:34:48 986  	-- If invoice amount iz 0 then we need to set status for this invoice to PROCCESSED
14:34:48 987  	IF var_invoice_amount = 0 THEN
14:34:48 988  	  PROCS_INVOICE_CRU_V18.UPDATE_INVOICE(
14:34:48 989  	    in_invoice_id		   => in_invoice_id,
14:34:48 990  	    in_updated_by		   => in_created_by,
14:34:48 991  	    in_invoice_status_id	   => GLOBAL_STATUSES_V18.INVOICE_CLOSED
14:34:48 992  	  );
14:34:48 993  	END IF;
14:34:48 994  
14:34:48 995  	IF var_invoice_amount > 0 THEN
14:34:48 996  	  -- Create transaction
14:34:48 997  	  BEGIN
14:34:48 998  	    PROCS_TRANSACTION_V18.CREATE_TRANSACTION(
14:34:48 999  	      in_transaction_id        => in_transaction_id,
14:34:48 1000  	       in_status_id		=> GLOBAL_STATUSES_V18.TRANSACTION_PENDING,
14:34:48 1001  	       in_amount		=> var_invoice_amount,
14:34:48 1002  	       in_created_by		=> in_created_by,
14:34:48 1003  	       in_order_id		=> in_order_id,
14:34:48 1004  	       in_transaction_type_code => 'GIFT_CERTIFICATE_PURCHASE',
14:34:48 1005  	       out_transaction_id	=> var_transaction_id
14:34:48 1006  	     );
14:34:48 1007  	     EXCEPTION
14:34:48 1008  	       WHEN OTHERS THEN
14:34:48 1009  		 EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1010  		 RAISE CAN_NOT_CREATE_TRANSACTION;
14:34:48 1011  	   END;
14:34:48 1012  
14:34:48 1013  	   -- Create charge
14:34:48 1014  	   BEGIN
14:34:48 1015  	     PROCS_CHARGE_V18.CREATE_CHARGE(
14:34:48 1016  	       in_invoice_id	     => in_invoice_id,
14:34:48 1017  	       in_transaction_id     => var_transaction_id,
14:34:48 1018  	       in_instrument_type_id => in_instrument_type_id,
14:34:48 1019  	       in_instrument_id      => in_instrument_id,
14:34:48 1020  	       in_charge_amount      => var_invoice_amount,
14:34:48 1021  	       in_created_by	     => in_created_by,
14:34:48 1022  	       in_charge_status_id   => GLOBAL_STATUSES_V18.CHARGE_OPENED,
14:34:48 1023  	       out_charge_id	     => var_new_charge_id
14:34:48 1024  	     );
14:34:48 1025  	     out_charge_amount := var_invoice_amount;
14:34:48 1026  	     EXCEPTION
14:34:48 1027  	       WHEN OTHERS THEN
14:34:48 1028  		 EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1029  		 RAISE CAN_NOT_CREATE_CHARGE;
14:34:48 1030  	   END;
14:34:48 1031  	 ELSE
14:34:48 1032  	   out_charge_amount := 0;
14:34:48 1033  	 END IF;
14:34:48 1034  
14:34:48 1035  EXCEPTION
14:34:48 1036  WHEN CAN_NOT_USE_FCINSTR THEN
14:34:48 1037  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 1038  	   SPROC_NAME, 'Could not use "free charge instrument" for non-zero invoice');
14:34:48 1039  WHEN BAD_CREDIT_CARD_ID THEN
14:34:48 1040  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1041  	   SPROC_NAME, 'Bad credit card id');
14:34:48 1042  WHEN BAD_PAYPAL_ID THEN
14:34:48 1043  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1044  	   SPROC_NAME, 'Bad paypal id');
14:34:48 1045  WHEN BAD_INSTRUMENT_TYPE THEN
14:34:48 1046  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 1047  	   SPROC_NAME, 'Bad instrument type');
14:34:48 1048  WHEN TRANSACTION_EXISTS THEN
14:34:48 1049  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:48 1050  	   SPROC_NAME, 'Transaction with given id already exists');
14:34:48 1051  WHEN CAN_NOT_CREATE_TRANSACTION THEN
14:34:48 1052  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1053  	   SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
14:34:48 1054  WHEN CAN_NOT_CREATE_CHARGE THEN
14:34:48 1055  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1056  	   SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
14:34:48 1057  WHEN CAN_NOT_CALC_INVOICE_AMOUNT THEN
14:34:48 1058  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1059  	   SPROC_NAME, 'Could not calculate amount for new invoice', EXCEPTION_MESSAGE);
14:34:48 1060  WHEN OTHERS THEN
14:34:48 1061  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1062  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1063  END FINALIZE_GC_PURCHASING;
14:34:48 1064  
14:34:48 1065  /******************************************************************************/
14:34:48 1066  
14:34:48 1067  PROCEDURE PURCHASE_GIFT_CERTIFICATE (
14:34:48 1068  	 in_group_id		   IN NUMBER,
14:34:48 1069  	 in_offer_chain_id	   IN VARCHAR2,
14:34:48 1070  	 in_gift_certificate_code  IN VARCHAR2,
14:34:48 1071  	 in_created_by		   IN VARCHAR2,
14:34:48 1072  	 in_recipient_name	   IN VARCHAR2,
14:34:48 1073  	 in_recipient_email	   IN VARCHAR2,
14:34:48 1074  	 in_sender_name 	   IN VARCHAR2,
14:34:48 1075  	 in_sender_email	   IN VARCHAR2,
14:34:48 1076  	 in_gift_message	   IN VARCHAR2,
14:34:48 1077  	 in_instrument_id	   IN NUMBER,
14:34:48 1078  	 in_instrument_type_id	   IN NUMBER,
14:34:48 1079  	 in_expiration_date	   IN DATE,
14:34:48 1080  	 in_order_id		   IN VARCHAR2,
14:34:48 1081  	 in_transaction_id	   IN NUMBER
14:34:48 1082  ) AS
14:34:48 1083  SPROC_NAME	  CONSTANT VARCHAR2(25) := 'PURCHASE_GIFT_CERTIFICATE';
14:34:48 1084  -- VARIABLES
14:34:48 1085  var_gift_cert_id   NUMBER;
14:34:48 1086  var_account_id	  NUMBER;
14:34:48 1087  var_invoice_amount NUMBER (10,2);
14:34:48 1088  var_new_invoice_id NUMBER;
14:34:48 1089  var_new_charge_id  NUMBER;
14:34:48 1090  var_och_is_gc	  NUMBER;
14:34:48 1091  var_offer_chain_status_id NUMBER;
14:34:48 1092  var_is_for_redemption	 NUMBER;
14:34:48 1093  var_account_tax_exempt_id VARCHAR2(255);
14:34:48 1094  
14:34:48 1095  temp_transaction_id_count NUMBER;
14:34:48 1096  var_transaction_id	 NUMBER;
14:34:48 1097  temp_gc_code VARCHAR2(255);
14:34:48 1098  
14:34:48 1099  var_invoice_status_id NUMBER;
14:34:48 1100  -- EXCEPTIONS
14:34:48 1101  CAN_NOT_CREATE_INVOICE		   EXCEPTION;
14:34:48 1102  CAN_NOT_CREATE_TRANSACTION	   EXCEPTION;
14:34:48 1103  CAN_NOT_CREATE_CHARGE		   EXCEPTION;
14:34:48 1104  CAN_NOT_CREATE_LINE_ITEMS	   EXCEPTION;
14:34:48 1105  BAD_GROUP_ID			   EXCEPTION;
14:34:48 1106  BAD_OFFER_CHAIN_ID		   EXCEPTION;
14:34:48 1107  OCH_IS_NOT_GIFT_CERTIFICATE	   EXCEPTION;
14:34:48 1108  TRANSACTION_EXISTS		   EXCEPTION;
14:34:48 1109  GC_CODE_ALREADY_EXISTS		   EXCEPTION;
14:34:48 1110  BAD_INSTRUMENT_TYPE		   EXCEPTION;
14:34:48 1111  BAD_CREDIT_CARD_ID		   EXCEPTION;
14:34:48 1112  BAD_PAYPAL_ID			   EXCEPTION;
14:34:48 1113  CAN_NOT_CALCULATE_OCH_AMOUNT	   EXCEPTION;
14:34:48 1114  BAD_OFFER_CHAIN_STATUS		   EXCEPTION;
14:34:48 1115  OFFER_REC_NUM_LESS_THAN_ONE	   EXCEPTION;
14:34:48 1116  CAN_NOT_CALC_INVOICE_AMOUNT	   EXCEPTION;
14:34:48 1117  CAN_NOT_USE_FCINSTR		   EXCEPTION;
14:34:48 1118  CAN_NOT_PURCHASE_GC_FOR_RDMPN	   EXCEPTION;
14:34:48 1119  EXCEPTION_MESSAGE		   VARCHAR2(1024);
14:34:48 1120  BEGIN
14:34:48 1121  
14:34:48 1122  	 -- Get account id
14:34:48 1123  	 BEGIN
14:34:48 1124  	   SELECT
14:34:48 1125  	     ACCOUNT.ID,
14:34:48 1126  	     ACCOUNT.TAX_EXEMPT_ID
14:34:48 1127  	     into
14:34:48 1128  	     var_account_id,
14:34:48 1129  	     var_account_tax_exempt_id
14:34:48 1130  	   FROM
14:34:48 1131  	     ACCOUNT
14:34:48 1132  	   WHERE
14:34:48 1133  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1134  	   EXCEPTION
14:34:48 1135  	   WHEN NO_DATA_FOUND THEN
14:34:48 1136  	     RAISE BAD_GROUP_ID;
14:34:48 1137  	 END;
14:34:48 1138  
14:34:48 1139  	 -- Check that instrument exists
14:34:48 1140  	 IF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD THEN
14:34:48 1141  	   IF IS_CREDIT_CARD_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 1142  	     RAISE BAD_CREDIT_CARD_ID;
14:34:48 1143  	   END IF;
14:34:48 1144  	 ELSIF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL THEN
14:34:48 1145  	   IF IS_PAYPAL_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 1146  	     RAISE BAD_PAYPAL_ID;
14:34:48 1147  	   END IF;
14:34:48 1148  	 ELSIF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_ZCI_INSTRUMENT THEN
14:34:48 1149  	   NULL;
14:34:48 1150  	 ELSE
14:34:48 1151  	   RAISE BAD_INSTRUMENT_TYPE;
14:34:48 1152  	 END IF;
14:34:48 1153  
14:34:48 1154  	 -- Check for the same code
14:34:48 1155  	 BEGIN
14:34:48 1156  	   SELECT
14:34:48 1157  	     GIFT_CERTIFICATE.CODE into temp_gc_code
14:34:48 1158  	   FROM
14:34:48 1159  	     GIFT_CERTIFICATE
14:34:48 1160  	   WHERE
14:34:48 1161  	     GIFT_CERTIFICATE.CODE = in_gift_certificate_code;
14:34:48 1162  
14:34:48 1163  	   RAISE GC_CODE_ALREADY_EXISTS;
14:34:48 1164  
14:34:48 1165  	   EXCEPTION
14:34:48 1166  	     WHEN NO_DATA_FOUND THEN
14:34:48 1167  	       NULL;
14:34:48 1168  	 END;
14:34:48 1169  
14:34:48 1170  	 -- Get offer chain flag "is_gift_certificate"
14:34:48 1171  	 BEGIN
14:34:48 1172  	   SELECT
14:34:48 1173  	     OFFER_CHAIN.IS_GIFT_CERTIFICATE,
14:34:48 1174  	     OFFER_CHAIN.OFFER_CHAIN_STATUS_ID
14:34:48 1175  	     into
14:34:48 1176  	     var_och_is_gc,
14:34:48 1177  	     var_offer_chain_status_id
14:34:48 1178  	   FROM
14:34:48 1179  	     OFFER_CHAIN
14:34:48 1180  	   WHERE
14:34:48 1181  	     OFFER_CHAIN.ID = in_offer_chain_id;
14:34:48 1182  	   EXCEPTION
14:34:48 1183  	   WHEN NO_DATA_FOUND THEN
14:34:48 1184  	     RAISE BAD_OFFER_CHAIN_ID;
14:34:48 1185  	 END;
14:34:48 1186  
14:34:48 1187  	 IF var_och_is_gc != GLOBAL_CONSTANTS_V18.TRUE
14:34:48 1188  	   OR var_och_is_gc IS NULL THEN
14:34:48 1189  	   RAISE OCH_IS_NOT_GIFT_CERTIFICATE;
14:34:48 1190  	 END IF;
14:34:48 1191  
14:34:48 1192  	 IF var_offer_chain_status_id != GLOBAL_STATUSES_V18.OFFER_CHAIN_ACTIVE THEN
14:34:48 1193  	   RAISE BAD_OFFER_CHAIN_STATUS;
14:34:48 1194  	 END IF;
14:34:48 1195  
14:34:48 1196  	 -- norlov: #38151 check if the OC is for Redemption:
14:34:48 1197  	 SELECT
14:34:48 1198  	   COUNT(*) into var_is_for_redemption
14:34:48 1199  	 FROM
14:34:48 1200  	   OFFER_CHAIN_ELIGIBILITY
14:34:48 1201  	 WHERE
14:34:48 1202  	   OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID = in_offer_chain_id
14:34:48 1203  	   AND OFFER_CHAIN_ELIGIBILITY.NAME = GLOBAL_CONSTANTS_V18.GIFT_CERTIFICATE_REQUIRED
14:34:48 1204  	   AND OFFER_CHAIN_ELIGIBILITY.VALUE = GLOBAL_CONSTANTS_V18.ELIGIBILITY_FLAG_SET;
14:34:48 1205  
14:34:48 1206  	 IF var_is_for_redemption > 0 THEN
14:34:48 1207  	   RAISE CAN_NOT_PURCHASE_GC_FOR_RDMPN;
14:34:48 1208  	 END IF;
14:34:48 1209  
14:34:48 1210  	 -- Check that transaction with given id do not exists
14:34:48 1211  	 SELECT
14:34:48 1212  	   COUNT(*) into temp_transaction_id_count
14:34:48 1213  	 FROM
14:34:48 1214  	   TRANSACTION
14:34:48 1215  	 WHERE
14:34:48 1216  	   TRANSACTION.ID = in_transaction_id;
14:34:48 1217  
14:34:48 1218  	 IF temp_transaction_id_count > 0 THEN
14:34:48 1219  	   RAISE TRANSACTION_EXISTS;
14:34:48 1220  	 END IF;
14:34:48 1221  
14:34:48 1222  	 -- Create new invoice
14:34:48 1223  	 BEGIN
14:34:48 1224  	   PROCS_INVOICE_V18.CREATE_INVOICE(
14:34:48 1225  	     in_invoice_status => GLOBAL_STATUSES_V18.INVOICE_OPEN,
14:34:48 1226  	     in_created_by     => in_created_by,
14:34:48 1227  	     in_tax_exempt_id  => var_account_tax_exempt_id,
14:34:48 1228  	     out_invoice_id    => var_new_invoice_id
14:34:48 1229  	   );
14:34:48 1230  	   EXCEPTION
14:34:48 1231  	     WHEN OTHERS THEN
14:34:48 1232  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1233  	       RAISE CAN_NOT_CREATE_INVOICE;
14:34:48 1234  	 END;
14:34:48 1235  
14:34:48 1236  	 -- Add line items for new invoice
14:34:48 1237  	 BEGIN
14:34:48 1238  	   FOR f_offer_data IN (
14:34:48 1239  	     SELECT
14:34:48 1240  	       OFFER_ID,
14:34:48 1241  	       NUM_RECURRENCES
14:34:48 1242  	     FROM
14:34:48 1243  	       OFFER_OFFER_CHAIN
14:34:48 1244  	     WHERE
14:34:48 1245  	       OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
14:34:48 1246  	   )
14:34:48 1247  	   LOOP
14:34:48 1248  	     IF f_offer_data.NUM_RECURRENCES < 1 THEN
14:34:48 1249  	       RAISE OFFER_REC_NUM_LESS_THAN_ONE;
14:34:48 1250  	     END IF;
14:34:48 1251  	     FOR i_offer_recurrences_iterator IN 1..f_offer_data.NUM_RECURRENCES
14:34:48 1252  	     LOOP
14:34:48 1253  	       PROCS_LINE_ITEMS_V18.ADD_LINE_ITEMS(
14:34:48 1254  		 in_invoice_id => var_new_invoice_id,
14:34:48 1255  		 in_offer_id   => f_offer_data.OFFER_ID,
14:34:48 1256  		 in_created_by => in_created_by
14:34:48 1257  	       );
14:34:48 1258  	     END LOOP;
14:34:48 1259  	   END LOOP;
14:34:48 1260  
14:34:48 1261  	   EXCEPTION
14:34:48 1262  	     WHEN OTHERS THEN
14:34:48 1263  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1264  	       RAISE CAN_NOT_CREATE_LINE_ITEMS;
14:34:48 1265  	 END;
14:34:48 1266  
14:34:48 1267  	 -- Calculate new invoice amount
14:34:48 1268  	 BEGIN
14:34:48 1269  	   PROCS_INVOICE_V18.CALCULATE_INVOICE_AMOUNT(var_new_invoice_id, var_invoice_amount);
14:34:48 1270  	   EXCEPTION
14:34:48 1271  	     WHEN OTHERS THEN
14:34:48 1272  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1273  	       RAISE CAN_NOT_CALC_INVOICE_AMOUNT;
14:34:48 1274  	 END;
14:34:48 1275  
14:34:48 1276  	 IF var_invoice_amount > 0
14:34:48 1277  	   AND in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_ZCI_INSTRUMENT THEN
14:34:48 1278  	   RAISE CAN_NOT_USE_FCINSTR;
14:34:48 1279  	 END IF;
14:34:48 1280  
14:34:48 1281  	 -- If invoice amount iz 0 then we need to set status for this invoice to PROCCESSED
14:34:48 1282  	 IF var_invoice_amount = 0 THEN
14:34:48 1283  	   PROCS_INVOICE_CRU_V18.UPDATE_INVOICE(
14:34:48 1284  	     in_invoice_id		    => var_new_invoice_id,
14:34:48 1285  	     in_updated_by		    => in_created_by,
14:34:48 1286  	     in_invoice_status_id	    => GLOBAL_STATUSES_V18.INVOICE_CLOSED
14:34:48 1287  	   );
14:34:48 1288  	 END IF;
14:34:48 1289  
14:34:48 1290  	 IF var_invoice_amount > 0 THEN
14:34:48 1291  	   -- Create transaction
14:34:48 1292  	   BEGIN
14:34:48 1293  	     PROCS_TRANSACTION_V18.CREATE_TRANSACTION(
14:34:48 1294  	       in_transaction_id  => in_transaction_id,
14:34:48 1295  	       in_status_id	  => GLOBAL_STATUSES_V18.TRANSACTION_PENDING,
14:34:48 1296  	       in_amount	  => var_invoice_amount,
14:34:48 1297  	       in_created_by	  => in_created_by,
14:34:48 1298  	       in_order_id	  => in_order_id,
14:34:48 1299  	       out_transaction_id => var_transaction_id
14:34:48 1300  	     );
14:34:48 1301  	     EXCEPTION
14:34:48 1302  	       WHEN OTHERS THEN
14:34:48 1303  		 EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1304  		 RAISE CAN_NOT_CREATE_TRANSACTION;
14:34:48 1305  	   END;
14:34:48 1306  
14:34:48 1307  	   -- Create charge
14:34:48 1308  	   BEGIN
14:34:48 1309  	     PROCS_CHARGE_V18.CREATE_CHARGE(
14:34:48 1310  	       in_invoice_id	     => var_new_invoice_id,
14:34:48 1311  	       in_transaction_id     => var_transaction_id,
14:34:48 1312  	       in_instrument_type_id => in_instrument_type_id,
14:34:48 1313  	       in_instrument_id      => in_instrument_id,
14:34:48 1314  	       in_charge_amount      => var_invoice_amount,
14:34:48 1315  	       in_created_by	     => in_created_by,
14:34:48 1316  	       in_charge_status_id   => GLOBAL_STATUSES_V18.CHARGE_OPENED,
14:34:48 1317  	       out_charge_id	     => var_new_charge_id
14:34:48 1318  	     );
14:34:48 1319  	     EXCEPTION
14:34:48 1320  	       WHEN OTHERS THEN
14:34:48 1321  		 EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1322  		 RAISE CAN_NOT_CREATE_CHARGE;
14:34:48 1323  	   END;
14:34:48 1324  	 END IF;
14:34:48 1325  
14:34:48 1326  	 -- Create new row in GIFT_CERTIFICATE table
14:34:48 1327  	 PROCS_FIN_INSTRUMENTS_CRU_V18.CREATE_GIFT_CERTIFICATE(
14:34:48 1328  	   out_gift_certificate_id	 => var_gift_cert_id,
14:34:48 1329  	   in_purchaser_group_id	 => in_group_id,
14:34:48 1330  	   in_purchaser_invoice_id	 => var_new_invoice_id,
14:34:48 1331  	   in_offer_chain_id		 => in_offer_chain_id,
14:34:48 1332  	   in_expiration_date		 => in_expiration_date,
14:34:48 1333  	   in_purchase_date		 => SYSDATE,
14:34:48 1334  	   in_gift_certificate_status_id => GLOBAL_STATUSES_V18.GIFT_CERTIFICATE_ACTIVE,
14:34:48 1335  	   in_code			 => in_gift_certificate_code,
14:34:48 1336  	   in_created_by		 => in_created_by,
14:34:48 1337  	   in_recipient_name		 => in_recipient_name,
14:34:48 1338  	   in_gift_message		 => in_gift_message,
14:34:48 1339  	   in_recipient_email		 => in_recipient_email,
14:34:48 1340  	   in_sender_email		 => in_sender_email,
14:34:48 1341  	   in_sender_name		 => in_sender_name
14:34:48 1342  	 );
14:34:48 1343  
14:34:48 1344  EXCEPTION
14:34:48 1345  WHEN CAN_NOT_USE_FCINSTR THEN
14:34:48 1346  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 1347  	   SPROC_NAME, 'Could not use "free charge instrument" for non-zero invoice');
14:34:48 1348  WHEN BAD_OFFER_CHAIN_STATUS THEN
14:34:48 1349  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 1350  	   SPROC_NAME, 'Offer chain is not active');
14:34:48 1351  WHEN CAN_NOT_CALCULATE_OCH_AMOUNT THEN
14:34:48 1352  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1353  	   SPROC_NAME, 'Could not calculate offer chain amount', EXCEPTION_MESSAGE);
14:34:48 1354  WHEN BAD_CREDIT_CARD_ID THEN
14:34:48 1355  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1356  	   SPROC_NAME, 'Bad credit card id');
14:34:48 1357  WHEN BAD_PAYPAL_ID THEN
14:34:48 1358  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1359  	   SPROC_NAME, 'Bad paypal id');
14:34:48 1360  WHEN BAD_INSTRUMENT_TYPE THEN
14:34:48 1361  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 1362  	   SPROC_NAME, 'Bad instrument type');
14:34:48 1363  WHEN GC_CODE_ALREADY_EXISTS THEN
14:34:48 1364  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:48 1365  	   SPROC_NAME, 'Gift certificate with same code already exists');
14:34:48 1366  WHEN OCH_IS_NOT_GIFT_CERTIFICATE THEN
14:34:48 1367  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 1368  	   SPROC_NAME, 'This offer chain can not be used for gift certificate');
14:34:48 1369  WHEN CAN_NOT_PURCHASE_GC_FOR_RDMPN THEN
14:34:48 1370  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 1371  	   SPROC_NAME, 'This offer chain can not be purchased for gift certificate since it is for redemption');
14:34:48 1372  WHEN TRANSACTION_EXISTS THEN
14:34:48 1373  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:48 1374  	   SPROC_NAME, 'Transaction with given id already exists');
14:34:48 1375  WHEN CAN_NOT_CREATE_INVOICE THEN
14:34:48 1376  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1377  	   SPROC_NAME, 'Could not create new invoice', EXCEPTION_MESSAGE);
14:34:48 1378  WHEN CAN_NOT_CREATE_TRANSACTION THEN
14:34:48 1379  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1380  	   SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
14:34:48 1381  WHEN CAN_NOT_CREATE_CHARGE THEN
14:34:48 1382  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1383  	   SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
14:34:48 1384  WHEN CAN_NOT_CREATE_LINE_ITEMS THEN
14:34:48 1385  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1386  	   SPROC_NAME, 'Could not create line items', EXCEPTION_MESSAGE);
14:34:48 1387  WHEN BAD_GROUP_ID THEN
14:34:48 1388  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1389  	   SPROC_NAME, 'No such group id');
14:34:48 1390  WHEN BAD_OFFER_CHAIN_ID THEN
14:34:48 1391  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1392  	   SPROC_NAME, 'No such offer chain');
14:34:48 1393  WHEN OFFER_REC_NUM_LESS_THAN_ONE THEN
14:34:48 1394  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1395  	   SPROC_NAME, 'Some offer has recurrences number less than 1');
14:34:48 1396  WHEN CAN_NOT_CALC_INVOICE_AMOUNT THEN
14:34:48 1397  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1398  	   SPROC_NAME, 'COuold not calculate amount for new invoice', EXCEPTION_MESSAGE);
14:34:48 1399  WHEN OTHERS THEN
14:34:48 1400  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1401  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1402  END PURCHASE_GIFT_CERTIFICATE;
14:34:48 1403  
14:34:48 1404  /******************************************************************************/
14:34:48 1405  
14:34:48 1406  PROCEDURE REDEEM_GIFT_CERTIFICATE (
14:34:48 1407  	 in_group_id			 IN NUMBER,
14:34:48 1408  	 in_gift_certificate_code	 IN VARCHAR2,
14:34:48 1409  	 in_created_by			 IN VARCHAR2,
14:34:48 1410  	 in_redeemer_address_id 	 IN NUMBER,
14:34:48 1411  	 in_fin_instrument_id		 IN NUMBER,
14:34:48 1412  	 in_fin_instrument_type_id	 IN NUMBER,
14:34:48 1413  	 in_redemption_offer_chain_id	 IN NUMBER,
14:34:48 1414  	 out_subscription_id		 OUT NUMBER,
14:34:48 1415  	 out_license_id 		 OUT NUMBER
14:34:48 1416  ) AS
14:34:48 1417  SPROC_NAME	       CONSTANT VARCHAR2(23) := 'REDEEM_GIFT_CERTIFICATE';
14:34:48 1418  -- VARIABLES
14:34:48 1419  var_gift_certificate_id NUMBER;
14:34:48 1420  -- norlov: #38151 var_offer_chain_id replaced by var_purchased_oc_id and var_oc_id_to_redeem
14:34:48 1421  var_purchased_oc_id     NUMBER;
14:34:48 1422  var_oc_id_to_redeem     NUMBER := in_redemption_offer_chain_id;
14:34:48 1423  var_offer_duration      VARCHAR2(30);
14:34:48 1424  var_invoice_id	       NUMBER;
14:34:48 1425  var_succ_purch_attempts_num NUMBER;
14:34:48 1426  var_subscription_id     NUMBER;
14:34:48 1427  var_license_id	       NUMBER;
14:34:48 1428  var_account_id	       NUMBER;
14:34:48 1429  var_gc_status_id        NUMBER;
14:34:48 1430  var_gc_charges_amount   NUMBER;
14:34:48 1431  var_gc_expiration_date  DATE;
14:34:48 1432  var_gc_redeemer_group_id NUMBER;
14:34:48 1433  var_gc_purchase_invoice_id NUMBER;
14:34:48 1434  var_gc_purchase_inv_status_id NUMBER;
14:34:48 1435  var_offer_index		     NUMBER;
14:34:48 1436  var_purchaser_group_id	     NUMBER;
14:34:48 1437  temp_license_id		     NUMBER;
14:34:48 1438  var_same_offer_chains_num     NUMBER;
14:34:48 1439  var_max_concurrent_subscrs    NUMBER;
14:34:48 1440  var_account_tax_exempt_id     VARCHAR2(255);
14:34:48 1441  var_fin_instrument_type_id    NUMBER := in_fin_instrument_type_id;
14:34:48 1442  var_fin_instrument_id	     NUMBER := in_fin_instrument_id;
14:34:48 1443  var_first_offer_id	  NUMBER;
14:34:48 1444  var_date 	     DATE := SYSDATE;
14:34:48 1445  
14:34:48 1446  var_offers SYS_REFCURSOR;
14:34:48 1447  
14:34:48 1448  -- EXCEPTIONS
14:34:48 1449  BAD_GIFT_CERTIFICATE_CODE      EXCEPTION;
14:34:48 1450  BAD_GROUP_ID		      EXCEPTION;
14:34:48 1451  CAN_NOT_CREATE_LICENSE	      EXCEPTION;
14:34:48 1452  GIFT_CERT_IS_FINALIZED	      EXCEPTION;
14:34:48 1453  GIFT_CERT_IS_REFUNDED	      EXCEPTION;
14:34:48 1454  CAN_NOT_UPDATE_CERTIFICATE     EXCEPTION;
14:34:48 1455  GIFT_CERTIFICATE_EXPIRED       EXCEPTION;
14:34:48 1456  GIFT_CERTIFICATE_REDEEMED      EXCEPTION;
14:34:48 1457  USER_ALREADY_SUBSCRIBED_TO_PRD EXCEPTION;
14:34:48 1458  LIMIT_REACHED		      EXCEPTION;
14:34:48 1459  GC_PURCHASE_INVOICE_NOT_CLOSED EXCEPTION;
14:34:48 1460  PURCHASE_INVOICES_NOT_PAID     EXCEPTION;
14:34:48 1461  OC_TO_REDEEM_NOT_FOUND	      EXCEPTION;
14:34:48 1462  CAN_NOT_GET_FIRST_OFFER_CHAIN  EXCEPTION;
14:34:48 1463  EXCEPTION_MESSAGE	      VARCHAR2(1024);
14:34:48 1464  BEGIN
14:34:48 1465  
14:34:48 1466  	 -- Get account id
14:34:48 1467  	 BEGIN
14:34:48 1468  	   SELECT
14:34:48 1469  	     ACCOUNT.ID,
14:34:48 1470  	     ACCOUNT.TAX_EXEMPT_ID
14:34:48 1471  	     into
14:34:48 1472  	     var_account_id,
14:34:48 1473  	     var_account_tax_exempt_id
14:34:48 1474  	   FROM
14:34:48 1475  	     ACCOUNT
14:34:48 1476  	   WHERE
14:34:48 1477  	     ACCOUNT.GROUP_ID = in_group_id
14:34:48 1478  	     AND ROWNUM <= 1;
14:34:48 1479  
14:34:48 1480  	   EXCEPTION
14:34:48 1481  	   WHEN NO_DATA_FOUND THEN
14:34:48 1482  	     RAISE BAD_GROUP_ID;
14:34:48 1483  	 END;
14:34:48 1484  
14:34:48 1485  	 -- Get gift certificate data
14:34:48 1486  	 BEGIN
14:34:48 1487  	   SELECT
14:34:48 1488  	     GIFT_CERTIFICATE.ID,
14:34:48 1489  	     GIFT_CERTIFICATE.OFFER_CHAIN_ID,
14:34:48 1490  	     GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID,
14:34:48 1491  	     GIFT_CERTIFICATE.PURCHASER_GROUP_ID,
14:34:48 1492  	     GIFT_CERTIFICATE.EXPIRATION_DATE,
14:34:48 1493  	     GIFT_CERTIFICATE.REDEEMER_GROUP_ID,
14:34:48 1494  	     GIFT_CERTIFICATE.PURCHASE_INVOICE_ID
14:34:48 1495  	     into
14:34:48 1496  	     var_gift_certificate_id,
14:34:48 1497  	     var_purchased_oc_id,
14:34:48 1498  	     var_gc_status_id,
14:34:48 1499  	     var_purchaser_group_id,
14:34:48 1500  	     var_gc_expiration_date,
14:34:48 1501  	     var_gc_redeemer_group_id,
14:34:48 1502  	     var_gc_purchase_invoice_id
14:34:48 1503  	   FROM
14:34:48 1504  	     GIFT_CERTIFICATE
14:34:48 1505  	   WHERE
14:34:48 1506  	     GIFT_CERTIFICATE.CODE = in_gift_certificate_code
14:34:48 1507  	     AND ROWNUM <= 1;
14:34:48 1508  
14:34:48 1509  	   EXCEPTION
14:34:48 1510  	   WHEN NO_DATA_FOUND THEN
14:34:48 1511  	     RAISE BAD_GIFT_CERTIFICATE_CODE;
14:34:48 1512  	 END;
14:34:48 1513  
14:34:48 1514  	 -- get redemption oc id from meta data if it wasn't passed in, parsing will fail for gcs with multiple redemption offer chains,
14:34:48 1515  	 -- but in that case a redemption offer chain id should always be passed in
14:34:48 1516  	 IF var_oc_id_to_redeem IS NULL THEN
14:34:48 1517  	   BEGIN
14:34:48 1518  	     SELECT
14:34:48 1519  	       to_number(OFFER_CHAIN_META_DATA.VALUE)
14:34:48 1520  	       into
14:34:48 1521  	       var_oc_id_to_redeem
14:34:48 1522  	     FROM
14:34:48 1523  	       OFFER_CHAIN_META_DATA
14:34:48 1524  	     WHERE
14:34:48 1525  	       OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID = var_purchased_oc_id
14:34:48 1526  	       AND OFFER_CHAIN_META_DATA.NAME = GLOBAL_CONSTANTS_V18.REDEMPTION_OC_ID
14:34:48 1527  	       AND ROWNUM = 1;
14:34:48 1528  -- requested by ticket so (but above is correct for the actual migrated data):
14:34:48 1529  --  SELECT
14:34:48 1530  --      OFFER_CHAIN.ID
14:34:48 1531  --      into
14:34:48 1532  --      var_oc_id_to_redeem
14:34:48 1533  --    FROM
14:34:48 1534  --      OFFER_CHAIN
14:34:48 1535  --	 INNER JOIN ELIGIBILITY ON OFFER_CHAIN.ID = ELIGIBILITY.OFFER_CHAIN_ID
14:34:48 1536  --	 INNER JOIN OFFER_CHAIN_META_DATA ON OFFER_CHAIN.ID = OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID
14:34:48 1537  --    WHERE
14:34:48 1538  --      ELIGIBILITY.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 1539  --      AND ELIGIBILITY.NAME = GLOBAL_CONSTANTS_V18.GIFT_CERTIFICATE_REQUIRED
14:34:48 1540  --      AND ELIGIBILITY.VALUE = GLOBAL_CONSTANTS_V18.ELIGIBILITY_FLAG_SET
14:34:48 1541  --      AND OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 1542  --      AND OFFER_CHAIN_META_DATA.NAME = GLOBAL_CONSTANTS_V18.REDEMPTION_OC_ID
14:34:48 1543  --      AND to_number(OFFER_CHAIN_META_DATA.VALUE) = var_purchased_oc_id
14:34:48 1544  --      AND ROWNUM = 1;
14:34:48 1545  
14:34:48 1546  	     EXCEPTION
14:34:48 1547  	     WHEN NO_DATA_FOUND THEN
14:34:48 1548  	       RAISE OC_TO_REDEEM_NOT_FOUND;
14:34:48 1549  	   END;
14:34:48 1550  	 END IF;
14:34:48 1551  
14:34:48 1552  	 -- Check that purchase invoice for this GC was closed
14:34:48 1553  	 SELECT
14:34:48 1554  	   INVOICE.INVOICE_STATUS_ID into var_gc_purchase_inv_status_id
14:34:48 1555  	 FROM
14:34:48 1556  	   INVOICE
14:34:48 1557  	 WHERE
14:34:48 1558  	   INVOICE.ID = var_gc_purchase_invoice_id;
14:34:48 1559  
14:34:48 1560  	 IF var_gc_purchase_inv_status_id != GLOBAL_STATUSES_V18.INVOICE_CLOSED THEN
14:34:48 1561  	   RAISE GC_PURCHASE_INVOICE_NOT_CLOSED;
14:34:48 1562  	 END IF;
14:34:48 1563  
14:34:48 1564  	 -- Check that this invoice was successfully processed by billing
14:34:48 1565  	 SELECT
14:34:48 1566  	   COUNT(1) into var_succ_purch_attempts_num
14:34:48 1567  	 FROM
14:34:48 1568  	   TRANSACTION_ATTEMPT TA
14:34:48 1569  	   INNER JOIN TRANSACTION T ON T.ID = TA.TRANSACTION_ID
14:34:48 1570  	   INNER JOIN CHARGE CH ON CH.TRANSACTION_ID = T.ID
14:34:48 1571  	 WHERE
14:34:48 1572  	   CH.INVOICE_ID = var_gc_purchase_invoice_id
14:34:48 1573  	   AND TA.TRANSACTION_ATTEMPT_STATUS_ID = GLOBAL_STATUSES_V18.TRANS_ATTEMPT_SUCCESS;
14:34:48 1574  
14:34:48 1575  	 IF var_succ_purch_attempts_num = 0 THEN
14:34:48 1576  	   SELECT
14:34:48 1577  	     COUNT(1) into var_succ_purch_attempts_num
14:34:48 1578  	   FROM
14:34:48 1579  	     DUAL
14:34:48 1580  	   WHERE
14:34:48 1581  	     PROCS_INVOICE_V18.F_CALCULATE_INVOICE_AMOUNT(var_gc_purchase_invoice_id) = 0;
14:34:48 1582  	 END IF;
14:34:48 1583  
14:34:48 1584  	 IF var_succ_purch_attempts_num = 0 THEN
14:34:48 1585  	   RAISE PURCHASE_INVOICES_NOT_PAID;
14:34:48 1586  	 END IF;
14:34:48 1587  
14:34:48 1588  	 -- Check limit for gc's offer chain
14:34:48 1589  	 SELECT
14:34:48 1590  	   COUNT(*) into var_same_offer_chains_num
14:34:48 1591  	 FROM
14:34:48 1592  	   SUBSCRIPTION
14:34:48 1593  	 WHERE
14:34:48 1594  	   SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:48 1595  	   AND SUBSCRIPTION.OFFER_CHAIN_ID = var_oc_id_to_redeem
14:34:48 1596  	   AND (
14:34:48 1597  	     SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:48 1598  	     OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD);
14:34:48 1599  IF var_same_offer_chains_num = 0 THEN
14:34:48 1600  	   -- if user does not have any active existing subscriptions to the offer chain
14:34:48 1601  	   -- and if product from the offer chain is already owned from another offer chain
14:34:48 1602  	   -- then deny purchase
14:34:48 1603  	   FOR f_account_offer_chains IN (
14:34:48 1604  	     SELECT DISTINCT
14:34:48 1605  	       OFFER_CHAIN_ID
14:34:48 1606  	     FROM
14:34:48 1607  	       SUBSCRIPTION
14:34:48 1608  	     WHERE
14:34:48 1609  	       ACCOUNT_ID = var_account_id
14:34:48 1610  	       AND (
14:34:48 1611  		 SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:48 1612  		 OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED
14:34:48 1613  		 OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD)
14:34:48 1614  	   )
14:34:48 1615  	   LOOP
14:34:48 1616  	     IF PROCS_OFFER_CHAIN_V18.CHECK_FOR_SAME_PRODUCTS(var_oc_id_to_redeem, f_account_offer_chains.OFFER_CHAIN_ID) = GLOBAL_CONSTANTS_V18.TRUE THEN
14:34:48 1617  	       RAISE USER_ALREADY_SUBSCRIBED_TO_PRD;
14:34:48 1618  	     END IF;
14:34:48 1619  	   END LOOP;
14:34:48 1620  	 ELSE
14:34:48 1621  
14:34:48 1622  	   -- if user have any active existing subscriptions to the offer chain
14:34:48 1623  	   -- and if MAX_CONCURRENT_SUBS <= [user's subscription count for the offer chain]
14:34:48 1624  	   -- then deny purchase
14:34:48 1625  	   var_max_concurrent_subscrs := PROCS_OFFER_CHAIN_V18.GET_OFFER_CHAIN_MAX_CONC_SUBSC(var_oc_id_to_redeem);
14:34:48 1626  	   IF var_max_concurrent_subscrs != GLOBAL_CONSTANTS_V18.INFINITY
14:34:48 1627  	     AND var_max_concurrent_subscrs <= var_same_offer_chains_num THEN
14:34:48 1628  	     RAISE LIMIT_REACHED;
14:34:48 1629  	   END IF;
14:34:48 1630  	 END IF;
14:34:48 1631  -- norlov: END OF TODO
14:34:48 1632  
14:34:48 1633  
14:34:48 1634  	 IF var_gc_redeemer_group_id IS NOT NULL THEN
14:34:48 1635  	   RAISE GIFT_CERTIFICATE_REDEEMED;
14:34:48 1636  	 END IF;
14:34:48 1637  
14:34:48 1638  	 IF var_gc_expiration_date < sysdate THEN
14:34:48 1639  	   RAISE GIFT_CERTIFICATE_EXPIRED;
14:34:48 1640  	 END IF;
14:34:48 1641  
14:34:48 1642  	  IF var_gc_status_id = GLOBAL_STATUSES_V18.GIFT_CERTIFICATE_REFUNDED THEN
14:34:48 1643  	   RAISE GIFT_CERT_IS_REFUNDED;
14:34:48 1644  	 END IF;
14:34:48 1645  
14:34:48 1646  	 IF var_gc_status_id = GLOBAL_STATUSES_V18.GIFT_CERTIFICATE_FINALIZED THEN
14:34:48 1647  	   RAISE GIFT_CERT_IS_FINALIZED;
14:34:48 1648  	 END IF;
14:34:48 1649  
14:34:48 1650  	 -- Check that user did not subscribed to same product already
14:34:48 1651  	 -- norlov: get rid of this since there is already the check?
14:34:48 1652  	 FOR f_user_offer_chain IN (
14:34:48 1653  	   SELECT DISTINCT
14:34:48 1654  	     OFFER_CHAIN_ID
14:34:48 1655  	   FROM
14:34:48 1656  	     SUBSCRIPTION
14:34:48 1657  	   WHERE
14:34:48 1658  	     ACCOUNT_ID=var_account_id
14:34:48 1659  	     AND (
14:34:48 1660  	       SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:48 1661  	       OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED
14:34:48 1662  	       OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD)
14:34:48 1663  	 )
14:34:48 1664  	 LOOP
14:34:48 1665  	   IF PROCS_OFFER_CHAIN_V18.CHECK_FOR_SAME_PRODUCTS(var_oc_id_to_redeem, f_user_offer_chain.OFFER_CHAIN_ID)=GLOBAL_CONSTANTS_V18.TRUE THEN
14:34:48 1666  	     RAISE USER_ALREADY_SUBSCRIBED_TO_PRD;
14:34:48 1667  	   END IF;
14:34:48 1668  	 END LOOP;
14:34:48 1669  
14:34:48 1670  	 -- Check for gift certificate amount
14:34:48 1671  	 SELECT
14:34:48 1672  	   SUM(CHARGE.CHARGE_AMOUNT) into var_gc_charges_amount
14:34:48 1673  	 FROM
14:34:48 1674  	   CHARGE
14:34:48 1675  	 WHERE
14:34:48 1676  	   CHARGE.INSTRUMENT_ID = var_gift_certificate_id
14:34:48 1677  	   AND CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V18.INSTRUMENT_GIFT_CERTIFICATE;
14:34:48 1678  
14:34:48 1679  	 -- Create new invoice
14:34:48 1680  	 PROCS_INVOICE_V18.CREATE_INVOICE(
14:34:48 1681  	   out_invoice_id    => var_invoice_id,
14:34:48 1682  	   in_invoice_status => GLOBAL_STATUSES_V18.INVOICE_CLOSED,
14:34:48 1683  	   in_tax_exempt_id  => var_account_tax_exempt_id,
14:34:48 1684  	   in_created_by     => in_created_by
14:34:48 1685  	 );
14:34:48 1686  
14:34:48 1687  	 -- If a financial instrument wasn't passed in, use the gift certificate id
14:34:48 1688  	 -- Real financial instrument is required for upsell/till forbid gift subscriptions
14:34:48 1689  	 IF var_fin_instrument_id is null THEN
14:34:48 1690  	   var_fin_instrument_id := var_gift_certificate_id;
14:34:48 1691  	   var_fin_instrument_type_id := GLOBAL_ENUMS_V18.INSTRUMENT_GIFT_CERTIFICATE;
14:34:48 1692  	 END IF;
14:34:48 1693  
14:34:48 1694  	 -- Insert new row into subscription table
14:34:48 1695  	 PROCS_SUBSCRIPTION_CRU_V18.CREATE_SUBSCRIPTION(
14:34:48 1696  	   out_subscription_id	     => var_subscription_id,
14:34:48 1697  	   in_account_id	     => var_account_id,
14:34:48 1698  	   in_purchase_date	     => var_date,
14:34:48 1699  	   in_offer_chain_id	     => var_oc_id_to_redeem,
14:34:48 1700  	   in_created_by	     => in_created_by,
14:34:48 1701  	   in_instrument_type_id     => var_fin_instrument_type_id,
14:34:48 1702  	   in_instrument_id	     => var_fin_instrument_id,
14:34:48 1703  	   in_subscription_status_id => GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:48 1704  	 );
14:34:48 1705  
14:34:48 1706  	 out_subscription_id := var_subscription_id;
14:34:48 1707  
14:34:48 1708  	 BEGIN
14:34:48 1709  	   PROCS_OFFER_CHAIN_V18.GET_FIRST_OFFER(var_oc_id_to_redeem, var_first_offer_id);
14:34:48 1710  	   EXCEPTION
14:34:48 1711  	     WHEN OTHERS THEN
14:34:48 1712  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1713  	       RAISE CAN_NOT_GET_FIRST_OFFER_CHAIN;
14:34:48 1714  	 END;
14:34:48 1715  
14:34:48 1716  	 BEGIN
14:34:48 1717  	   PROCS_LICENSE_V18.CREATE_LICENSE (
14:34:48 1718  	     out_license_id		 => out_license_id,
14:34:48 1719  	     in_status_id		 => GLOBAL_STATUSES_V18.LICENSE_ACTIVE,
14:34:48 1720  	     in_needs_entitlements	 => GLOBAL_CONSTANTS_V18.TRUE,
14:34:48 1721  	     in_start_date		 => var_date,
14:34:48 1722  	     in_offer_id		 => var_first_offer_id,
14:34:48 1723  	     in_subscription_id 	 => var_subscription_id,
14:34:48 1724  	     in_invoice_id		 => var_invoice_id,
14:34:48 1725  	     in_created_by		 => in_created_by,
14:34:48 1726  	     in_end_date		 => NULL, -- Will be calculated automatically
14:34:48 1727  	     in_is_extension		 => GLOBAL_CONSTANTS_V18.FALSE,
14:34:48 1728  	     in_current_offer_index	 => PROCS_OFFER_CHAIN_V18.GET_FIRST_OFFER_INDEX(var_oc_id_to_redeem),
14:34:48 1729  	     in_current_offer_recurr_num => 1
14:34:48 1730  	   );
14:34:48 1731  
14:34:48 1732  	   EXCEPTION
14:34:48 1733  	     WHEN OTHERS THEN
14:34:48 1734  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1735  	       RAISE CAN_NOT_CREATE_LICENSE;
14:34:48 1736  	 END;
14:34:48 1737  
14:34:48 1738  	 -- Update original gift certificate
14:34:48 1739  	 BEGIN
14:34:48 1740  	   PROCS_FIN_INSTRUMENTS_CRU_V18.UPDATE_GIFT_CERTIFICATE(
14:34:48 1741  	     in_gift_certificate_id	   => var_gift_certificate_id,
14:34:48 1742  	     in_updated_by		   => in_created_by,
14:34:48 1743  	     in_redeemer_group_id	   => in_group_id,
14:34:48 1744  	     in_finalized_invoice_id	   => var_invoice_id,
14:34:48 1745  	     in_redemption_date 	   => var_date,
14:34:48 1746  	     in_redeemer_address_id	   => in_redeemer_address_id,
14:34:48 1747  	     in_gift_certificate_status_id => GLOBAL_STATUSES_V18.GIFT_CERTIFICATE_FINALIZED
14:34:48 1748  	   );
14:34:48 1749  	   EXCEPTION
14:34:48 1750  	     WHEN OTHERS THEN
14:34:48 1751  	       EXCEPTION_MESSAGE := SQLERRM;
14:34:48 1752  	       RAISE CAN_NOT_UPDATE_CERTIFICATE;
14:34:48 1753  	 END;
14:34:48 1754  
14:34:48 1755  EXCEPTION
14:34:48 1756  WHEN LIMIT_REACHED THEN
14:34:48 1757  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.CONFLICT_ERROR,
14:34:48 1758  	   SPROC_NAME, 'Limit reached for given offer chain');
14:34:48 1759  WHEN USER_ALREADY_SUBSCRIBED_TO_PRD THEN
14:34:48 1760  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.CONFLICT_ERROR,
14:34:48 1761  	   SPROC_NAME, 'User already subscribed to some product in given gift certificate');
14:34:48 1762  WHEN GIFT_CERTIFICATE_REDEEMED THEN
14:34:48 1763  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 1764  	   SPROC_NAME, 'Gift certificate already redeemed');
14:34:48 1765  WHEN GIFT_CERTIFICATE_EXPIRED THEN
14:34:48 1766  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 1767  	   SPROC_NAME, 'Gift certificate expired');
14:34:48 1768  WHEN GIFT_CERT_IS_FINALIZED THEN
14:34:48 1769  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 1770  	   SPROC_NAME, 'Gift certificate is finalized');
14:34:48 1771  WHEN GIFT_CERT_IS_REFUNDED THEN
14:34:48 1772  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 1773  	   SPROC_NAME, 'Gift certificate has been refunded');
14:34:48 1774  WHEN BAD_GROUP_ID THEN
14:34:48 1775  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1776  	   SPROC_NAME, 'No such account with given group id');
14:34:48 1777  WHEN OC_TO_REDEEM_NOT_FOUND THEN
14:34:48 1778  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1779  	   SPROC_NAME, 'Offer chain to redeem not found');
14:34:48 1780  WHEN BAD_GIFT_CERTIFICATE_CODE THEN
14:34:48 1781  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1782  	   SPROC_NAME, 'No such gift certificate code');
14:34:48 1783  WHEN CAN_NOT_CREATE_LICENSE THEN
14:34:48 1784  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1785  	   SPROC_NAME, 'Could not create new license', EXCEPTION_MESSAGE);
14:34:48 1786  WHEN CAN_NOT_UPDATE_CERTIFICATE THEN
14:34:48 1787  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 1788  	   SPROC_NAME, 'Could not update gift certificate', EXCEPTION_MESSAGE);
14:34:48 1789  WHEN GC_PURCHASE_INVOICE_NOT_CLOSED THEN
14:34:48 1790  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 1791  	   SPROC_NAME, 'Purchase invoice is not closed');
14:34:48 1792  WHEN PURCHASE_INVOICES_NOT_PAID THEN
14:34:48 1793  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 1794  	   SPROC_NAME, 'Purchase invoice is not successfully processed by billing');
14:34:48 1795  WHEN OTHERS THEN
14:34:48 1796  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1797  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1798  END;
14:34:48 1799  
14:34:48 1800  /******************************************************************************/
14:34:48 1801  
14:34:48 1802  PROCEDURE GET_GIFT_CERTIFICATE_BY_CODE (
14:34:48 1803  /*
14:34:48 1804  Throws exceptions:
14:34:48 1805  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1806  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1807  */
14:34:48 1808  	 in_code	IN VARCHAR,
14:34:48 1809  	 out_result_set OUT SYS_REFCURSOR
14:34:48 1810  ) AS
14:34:48 1811  -- VARIABLES
14:34:48 1812  SPROC_NAME		CONSTANT VARCHAR2(28) := 'GET_GIFT_CERTIFICATE_BY_CODE';
14:34:48 1813  temp_gift_certificate_id NUMBER;
14:34:48 1814  -- EXCEPTIONS
14:34:48 1815  BAD_GIFT_CERTIFICATE_CODE EXCEPTION;
14:34:48 1816  BEGIN
14:34:48 1817  
14:34:48 1818  	 BEGIN
14:34:48 1819  	   SELECT
14:34:48 1820  	     GIFT_CERTIFICATE.ID into temp_gift_certificate_id
14:34:48 1821  	   FROM
14:34:48 1822  	     GIFT_CERTIFICATE
14:34:48 1823  	   WHERE
14:34:48 1824  	     GIFT_CERTIFICATE.CODE = in_code;
14:34:48 1825  	   EXCEPTION
14:34:48 1826  	     WHEN NO_DATA_FOUND THEN
14:34:48 1827  	       RAISE BAD_GIFT_CERTIFICATE_CODE;
14:34:48 1828  	 END;
14:34:48 1829  
14:34:48 1830  	 -- Select all gift certificates with given code
14:34:48 1831  	 OPEN out_result_set FOR
14:34:48 1832  	 SELECT
14:34:48 1833  	   gc.EXPIRATION_DATE,
14:34:48 1834  	   ch.name,
14:34:48 1835  	   ch.id,
14:34:48 1836  	   gc.sender_email,
14:34:48 1837  	   gc.sender_name,
14:34:48 1838  	   gc.recipient_email,
14:34:48 1839  	   gc.recipient_name,
14:34:48 1840  	   gc.purchase_date,
14:34:48 1841  	   gc.redemption_date,
14:34:48 1842  	   gc.purchaser_group_id,
14:34:48 1843  	   gc.redeemer_group_id,
14:34:48 1844  	   gc.gift_message,
14:34:48 1845  	   ocmd.value redemption_offer_chain_ids,
14:34:48 1846  	   s.offer_chain_id redeemed_offer_chain_id,
14:34:48 1847  	   gc.recipient_notify_date,
14:34:48 1848  	   gc.gift_certificate_status_id,
14:34:48 1849  	   gc.purchase_invoice_id,
14:34:48 1850  	   gc.finalized_invoice_id
14:34:48 1851  	 FROM
14:34:48 1852  	   GIFT_CERTIFICATE gc
14:34:48 1853  	 INNER JOIN OFFER_CHAIN ch ON ch.id = gc.offer_chain_id
14:34:48 1854  	 INNER JOIN OFFER_CHAIN_META_DATA ocmd ON gc.offer_chain_id = ocmd.offer_chain_id AND ocmd.name = 'redemption offer chain id'
14:34:48 1855  	 LEFT JOIN LICENSE l ON l.invoice_id = gc.finalized_invoice_id
14:34:48 1856  	 LEFT JOIN SUBSCRIPTION s ON l.subscription_id = s.id
14:34:48 1857  	 WHERE
14:34:48 1858  	   gc.code = in_code;
14:34:48 1859  
14:34:48 1860  EXCEPTION
14:34:48 1861  WHEN BAD_GIFT_CERTIFICATE_CODE THEN
14:34:48 1862  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1863  	   SPROC_NAME, 'No such gift certificate');
14:34:48 1864  WHEN OTHERS THEN
14:34:48 1865  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1866  	   SPROC_NAME, 'Unknown Error', SQLERRM);
14:34:48 1867  END;
14:34:48 1868  
14:34:48 1869  /******************************************************************************/
14:34:48 1870  
14:34:48 1871  PROCEDURE GET_GIFT_CERTIFICATE_BY_ID (
14:34:48 1872  /*
14:34:48 1873  Throws exceptions:
14:34:48 1874  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1875  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1876  */
14:34:48 1877  	 in_gift_certificate_id IN NUMBER,
14:34:48 1878  	 out_result_set 	OUT SYS_REFCURSOR
14:34:48 1879  ) AS
14:34:48 1880  -- VARIABLES
14:34:48 1881  SPROC_NAME		CONSTANT VARCHAR2(26) := 'GET_GIFT_CERTIFICATE_BY_ID';
14:34:48 1882  temp_gift_certificate_id NUMBER;
14:34:48 1883  -- EXCEPTIONS
14:34:48 1884  BAD_GIFT_CERTIFICATE_ID EXCEPTION;
14:34:48 1885  BEGIN
14:34:48 1886  
14:34:48 1887  	 BEGIN
14:34:48 1888  	   SELECT
14:34:48 1889  	     GIFT_CERTIFICATE.ID into temp_gift_certificate_id
14:34:48 1890  	   FROM
14:34:48 1891  	     GIFT_CERTIFICATE
14:34:48 1892  	   WHERE
14:34:48 1893  	     GIFT_CERTIFICATE.ID = in_gift_certificate_id;
14:34:48 1894  	   EXCEPTION
14:34:48 1895  	     WHEN NO_DATA_FOUND THEN
14:34:48 1896  	       RAISE BAD_GIFT_CERTIFICATE_ID;
14:34:48 1897  	 END;
14:34:48 1898  
14:34:48 1899  	 -- Select all gift certificates with given code
14:34:48 1900  	 OPEN out_result_set FOR
14:34:48 1901  	 SELECT
14:34:48 1902  	   gc.EXPIRATION_DATE,
14:34:48 1903  	   ch.name,
14:34:48 1904  	   ch.id,
14:34:48 1905  	   gc.sender_email,
14:34:48 1906  	   gc.sender_name,
14:34:48 1907  	   gc.recipient_email,
14:34:48 1908  	   gc.recipient_name,
14:34:48 1909  	   gc.purchase_date,
14:34:48 1910  	   gc.redemption_date,
14:34:48 1911  	   gc.purchaser_group_id,
14:34:48 1912  	   gc.redeemer_group_id,
14:34:48 1913  	   gc.code,
14:34:48 1914  	   gc.gift_message,
14:34:48 1915  	   gc.recipient_notify_date
14:34:48 1916  	 FROM
14:34:48 1917  	   GIFT_CERTIFICATE gc
14:34:48 1918  	 INNER JOIN OFFER_CHAIN ch ON ch.id = gc.offer_chain_id
14:34:48 1919  	 WHERE
14:34:48 1920  	   gc.id = in_gift_certificate_id;
14:34:48 1921  
14:34:48 1922  EXCEPTION
14:34:48 1923  WHEN BAD_GIFT_CERTIFICATE_ID THEN
14:34:48 1924  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1925  	   SPROC_NAME, 'No such gift certificate');
14:34:48 1926  WHEN OTHERS THEN
14:34:48 1927  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1928  	   SPROC_NAME, 'Unknown Error', SQLERRM);
14:34:48 1929  END GET_GIFT_CERTIFICATE_BY_ID;
14:34:48 1930  
14:34:48 1931  /******************************************************************************/
14:34:48 1932  
14:34:48 1933  PROCEDURE GET_DEF_FINANCIAL_INSTRUMENT (
14:34:48 1934  	 in_group_id		IN  NUMBER,
14:34:48 1935  	 out_instrument_type_id OUT NUMBER,
14:34:48 1936  	 out_instrument_id	OUT NUMBER
14:34:48 1937  ) AS
14:34:48 1938  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_DEF_FINANCIAL_INSTRUMENT';
14:34:48 1939  BEGIN
14:34:48 1940  
14:34:48 1941  	 SELECT
14:34:48 1942  	   ACCOUNT.INSTRUMENT_TYPE_ID,
14:34:48 1943  	   ACCOUNT.INSTRUMENT_ID
14:34:48 1944  	   into
14:34:48 1945  	   out_instrument_type_id,
14:34:48 1946  	   out_instrument_id
14:34:48 1947  	 FROM
14:34:48 1948  	   ACCOUNT
14:34:48 1949  	 WHERE
14:34:48 1950  	   ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1951  
14:34:48 1952  EXCEPTION
14:34:48 1953  WHEN NO_DATA_FOUND THEN
14:34:48 1954  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1955  	   SPROC_NAME, 'Bad group id');
14:34:48 1956  WHEN OTHERS THEN
14:34:48 1957  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1958  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1959  END GET_DEF_FINANCIAL_INSTRUMENT;
14:34:48 1960  
14:34:48 1961  /******************************************************************************/
14:34:48 1962  
14:34:48 1963  PROCEDURE SET_DEF_FINANCIAL_INSTRUMENT (
14:34:48 1964  	 in_group_id	       IN NUMBER,
14:34:48 1965  	 in_instrument_type_id IN NUMBER,
14:34:48 1966  	 in_instrument_id      IN NUMBER,
14:34:48 1967  	 in_updated_by	       IN VARCHAR2
14:34:48 1968  ) AS
14:34:48 1969  -- VARIABLES
14:34:48 1970  SPROC_NAME	      CONSTANT VARCHAR2(28) := 'SET_DEF_FINANCIAL_INSTRUMENT';
14:34:48 1971  var_account_id	      NUMBER;
14:34:48 1972  -- EXCEPTIONS
14:34:48 1973  BAD_GROUP_ID	      EXCEPTION;
14:34:48 1974  BAD_CREDIT_CARD	      EXCEPTION;
14:34:48 1975  BAD_PAYPAL	      EXCEPTION;
14:34:48 1976  BAD_INSTRUMENT_TYPE    EXCEPTION;
14:34:48 1977  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:48 1978  BEGIN
14:34:48 1979  
14:34:48 1980  	 -- get account id
14:34:48 1981  	 BEGIN
14:34:48 1982  	   SELECT
14:34:48 1983  	     ACCOUNT.ID into var_account_id
14:34:48 1984  	   FROM
14:34:48 1985  	     ACCOUNT
14:34:48 1986  	   WHERE
14:34:48 1987  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1988  	   EXCEPTION
14:34:48 1989  	     WHEN NO_DATA_FOUND THEN
14:34:48 1990  	       RAISE BAD_GROUP_ID;
14:34:48 1991  	 END;
14:34:48 1992  
14:34:48 1993  	 -- Chech that given instrument exists
14:34:48 1994  	 IF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD THEN
14:34:48 1995  	   IF IS_CREDIT_CARD_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 1996  	     RAISE BAD_CREDIT_CARD;
14:34:48 1997  	   END IF;
14:34:48 1998  	 ELSIF in_instrument_type_id = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL THEN
14:34:48 1999  	   IF IS_PAYPAL_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 2000  	     RAISE BAD_PAYPAL;
14:34:48 2001  	   END IF;
14:34:48 2002  	 ELSE
14:34:48 2003  	   RAISE BAD_INSTRUMENT_TYPE;
14:34:48 2004  	 END IF;
14:34:48 2005  
14:34:48 2006  	 -- update account information
14:34:48 2007  	 PROCS_ACCOUNT_CRU_V18.UPDATE_ACCOUNT(
14:34:48 2008  	   in_account_id	 => var_account_id,
14:34:48 2009  	   in_updated_by	 => in_updated_by,
14:34:48 2010  	   in_instrument_type_id => in_instrument_type_id,
14:34:48 2011  	   in_instrument_id	 => in_instrument_id
14:34:48 2012  	 );
14:34:48 2013  
14:34:48 2014  EXCEPTION
14:34:48 2015  WHEN BAD_GROUP_ID THEN
14:34:48 2016  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2017  	   SPROC_NAME, 'No such account');
14:34:48 2018  WHEN BAD_CREDIT_CARD THEN
14:34:48 2019  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2020  	   SPROC_NAME, 'Could not find credit card with given ID');
14:34:48 2021  WHEN BAD_PAYPAL THEN
14:34:48 2022  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2023  	   SPROC_NAME, 'Could not find paypal with given ID');
14:34:48 2024  WHEN BAD_INSTRUMENT_TYPE THEN
14:34:48 2025  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 2026  	   SPROC_NAME, 'Bad instrument type id');
14:34:48 2027  WHEN OTHERS THEN
14:34:48 2028  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2029  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2030  END SET_DEF_FINANCIAL_INSTRUMENT;
14:34:48 2031  
14:34:48 2032  /******************************************************************************/
14:34:48 2033  
14:34:48 2034  PROCEDURE DEL_DEF_FINANCIAL_INSTRUMENT (
14:34:48 2035  	 in_group_id IN NUMBER
14:34:48 2036  ) AS
14:34:48 2037  SPROC_NAME CONSTANT VARCHAR2(28) := 'DEL_DEF_FINANCIAL_INSTRUMENT';
14:34:48 2038  -- VARIABLES
14:34:48 2039  var_account_id NUMBER;
14:34:48 2040  -- EXCEPTIONS
14:34:48 2041  BAD_GROUP_ID	 EXCEPTION;
14:34:48 2042  EXCEPTION_MESSAGE VARCHAR2(1024);
14:34:48 2043  BEGIN
14:34:48 2044  
14:34:48 2045  	 BEGIN
14:34:48 2046  	   SELECT
14:34:48 2047  	     ACCOUNT.ID into var_account_id
14:34:48 2048  	   FROM
14:34:48 2049  	     ACCOUNT
14:34:48 2050  	   WHERE
14:34:48 2051  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:48 2052  	   EXCEPTION
14:34:48 2053  	     WHEN NO_DATA_FOUND THEN
14:34:48 2054  	       RAISE BAD_GROUP_ID;
14:34:48 2055  	 END;
14:34:48 2056  
14:34:48 2057  	 PROCS_ACCOUNT_CRU_V18.UPDATE_DEF_FIN_INSTRUMENT(
14:34:48 2058  	   in_account_id => var_account_id,
14:34:48 2059  	   in_instrument_type_id => NULL,
14:34:48 2060  	   in_instrument_id => NULL,
14:34:48 2061  	   in_updated_by => 'in_updated_by' -- TODO: add in_updated_by field
14:34:48 2062  	 );
14:34:48 2063  
14:34:48 2064  EXCEPTION
14:34:48 2065  WHEN BAD_GROUP_ID THEN
14:34:48 2066  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2067  	   SPROC_NAME, 'No such group id');
14:34:48 2068  WHEN OTHERS THEN
14:34:48 2069  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2070  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2071  END DEL_DEF_FINANCIAL_INSTRUMENT;
14:34:48 2072  
14:34:48 2073  /******************************************************************************/
14:34:48 2074  
14:34:48 2075  PROCEDURE GET_CREDIT_CARD_BY_ID (
14:34:48 2076  	 in_credit_card_id IN  NUMBER,
14:34:48 2077  	 out_result_set    OUT SYS_REFCURSOR
14:34:48 2078  ) AS
14:34:48 2079  -- VARIABLES
14:34:48 2080  SPROC_NAME    CONSTANT VARCHAR2(21) := 'GET_CREDIT_CARD_BY_ID';
14:34:48 2081  temp_cc_count NUMBER;
14:34:48 2082  
14:34:48 2083  -- EXCEPTIONS
14:34:48 2084  BAD_CREDIT_CARD_ID EXCEPTION;
14:34:48 2085  BEGIN
14:34:48 2086  
14:34:48 2087  	 -- Check that credit card exists
14:34:48 2088  	 SELECT
14:34:48 2089  	   COUNT(*) into temp_cc_count
14:34:48 2090  	 FROM
14:34:48 2091  	   CREDIT_CARD
14:34:48 2092  	 WHERE
14:34:48 2093  	   CREDIT_CARD.ID = in_credit_card_id;
14:34:48 2094  	 IF temp_cc_count = 0 THEN
14:34:48 2095  	   RAISE BAD_CREDIT_CARD_ID;
14:34:48 2096  	 END IF;
14:34:48 2097  
14:34:48 2098  	 -- Get data
14:34:48 2099  	 OPEN out_result_set FOR
14:34:48 2100  	 SELECT
14:34:48 2101  	   CREDIT_CARD.ID,
14:34:48 2102  	   CREDIT_CARD.ACCOUNT_ID,
14:34:48 2103  	   CREDIT_CARD.INSTRUMENT_NAME,
14:34:48 2104  	   CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME,
14:34:48 2105  	   CREDIT_CARD.PRIVATE_STREET_ADDRESS,
14:34:48 2106  	   CREDIT_CARD.PRIVATE_STREET_ADDRESS2,
14:34:48 2107  	   CREDIT_CARD.STATE,
14:34:48 2108  	   CREDIT_CARD.CITY,
14:34:48 2109  	   CREDIT_CARD.POSTAL_CODE,
14:34:48 2110  	   CREDIT_CARD.COUNTRY,
14:34:48 2111  	   CREDIT_CARD.LAST_FOUR_CC,
14:34:48 2112  	   CREDIT_CARD.EXPIRATION_DATE,
14:34:48 2113  	   CREDIT_CARD.CREDIT_CARD_TYPE_ID,
14:34:48 2114  	   CREDIT_CARD.SECRET_TOKEN,
14:34:48 2115  	   CREDIT_CARD.CREATE_DATE,
14:34:48 2116  	   CREDIT_CARD.CREATED_BY,
14:34:48 2117  	   CREDIT_CARD.UPDATE_DATE,
14:34:48 2118  	   CREDIT_CARD.UPDATED_BY,
14:34:48 2119  	   CREDIT_CARD.CREDIT_CARD_STATUS_ID,
14:34:48 2120  	   CREDIT_CARD.PRIVATE_FIRST_NAME,
14:34:48 2121  	   CREDIT_CARD.PRIVATE_LAST_NAME,
14:34:48 2122  	       CREDIT_CARD.CHASE_PROFILE_ID
14:34:48 2123  	 FROM
14:34:48 2124  	   CREDIT_CARD
14:34:48 2125  	 WHERE
14:34:48 2126  	   CREDIT_CARD.ID = in_credit_card_id;
14:34:48 2127  
14:34:48 2128  EXCEPTION
14:34:48 2129  WHEN BAD_CREDIT_CARD_ID THEN
14:34:48 2130  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2131  	   SPROC_NAME, 'No such credit card');
14:34:48 2132  WHEN OTHERS THEN
14:34:48 2133  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2134  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2135  END GET_CREDIT_CARD_BY_ID;
14:34:48 2136  
14:34:48 2137  /******************************************************************************/
14:34:48 2138  
14:34:48 2139  PROCEDURE GET_PAYPAL_BY_ID (
14:34:48 2140  	 in_paypal_id	IN  NUMBER,
14:34:48 2141  	 out_result_set OUT SYS_REFCURSOR
14:34:48 2142  ) AS
14:34:48 2143  SPROC_NAME CONSTANT VARCHAR2(16) := 'GET_PAYPAL_BY_ID';
14:34:48 2144  -- VARIABLES
14:34:48 2145  temp_pp_count NUMBER;
14:34:48 2146  -- EXCEPTIONS
14:34:48 2147  BAD_PAYPAL_ID EXCEPTION;
14:34:48 2148  BEGIN
14:34:48 2149  
14:34:48 2150  	 -- Check that credit card exists
14:34:48 2151  	 SELECT
14:34:48 2152  	   COUNT(*) into temp_pp_count
14:34:48 2153  	 FROM
14:34:48 2154  	   PAYPAL
14:34:48 2155  	 WHERE
14:34:48 2156  	   PAYPAL.ID = in_paypal_id;
14:34:48 2157  	 IF temp_pp_count = 0 THEN
14:34:48 2158  	   RAISE BAD_PAYPAL_ID;
14:34:48 2159  	 END IF;
14:34:48 2160  
14:34:48 2161  	 OPEN out_result_set FOR
14:34:48 2162  	 SELECT
14:34:48 2163  	   ID,
14:34:48 2164  	   ACCOUNT_ID,
14:34:48 2165  	   INSTRUMENT_NAME,
14:34:48 2166  	   PRIVATE_EMAIL_ADDRESS,
14:34:48 2167  	   CREATE_DATE,
14:34:48 2168  	   CREATED_BY,
14:34:48 2169  	   UPDATE_DATE,
14:34:48 2170  	   UPDATED_BY,
14:34:48 2171  	   PAYPAL_STATUS_ID,
14:34:48 2172  	   PRIVATE_STREET_ADDRESS,
14:34:48 2173  	   PRIVATE_STREET_ADDRESS2,
14:34:48 2174  	   STATE,
14:34:48 2175  	   CITY,
14:34:48 2176  	   POSTAL_CODE,
14:34:48 2177  	   COUNTRY,
14:34:48 2178  	   EXPIRATION_DATE,
14:34:48 2179  	   SECRET_TOKEN
14:34:48 2180  	 FROM
14:34:48 2181  	   PAYPAL
14:34:48 2182  	 WHERE
14:34:48 2183  	   ID = in_paypal_id;
14:34:48 2184  
14:34:48 2185  EXCEPTION
14:34:48 2186  WHEN BAD_PAYPAL_ID THEN
14:34:48 2187  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2188  	   SPROC_NAME, 'No such paypal');
14:34:48 2189  WHEN OTHERS THEN
14:34:48 2190  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2191  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2192  END GET_PAYPAL_BY_ID;
14:34:48 2193  
14:34:48 2194  /******************************************************************************/
14:34:48 2195  
14:34:48 2196  FUNCTION F_CAN_DISABLE_CREDIT_CARD (
14:34:48 2197  /*
14:34:48 2198  	 Returns GLOBAL_CONSTANTS_V18.TRUE if system can disable credit card
14:34:48 2199  	 GLOBAL_CONSTANTS_V18.FALSE else
14:34:48 2200  */
14:34:48 2201  	 in_credit_card_id NUMBER
14:34:48 2202  ) RETURN NUMBER AS
14:34:48 2203  BEGIN
14:34:48 2204  	 -- STUB
14:34:48 2205  	 RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 2206  END F_CAN_DISABLE_CREDIT_CARD;
14:34:48 2207  
14:34:48 2208  /******************************************************************************/
14:34:48 2209  
14:34:48 2210  PROCEDURE GET_PURCHASED_GCERTIFICATES (
14:34:48 2211  	 in_group_id	IN NUMBER,
14:34:48 2212  	 out_result_set OUT SYS_REFCURSOR
14:34:48 2213  ) AS
14:34:48 2214  -- VARIABLES
14:34:48 2215  SPROC_NAME     CONSTANT VARCHAR2(27) := 'GET_PURCHASED_GCERTIFICATES';
14:34:48 2216  var_account_id NUMBER;
14:34:48 2217  -- EXCEPTIONS
14:34:48 2218  BAD_GROUP_ID EXCEPTION;
14:34:48 2219  BEGIN
14:34:48 2220  
14:34:48 2221  	 BEGIN
14:34:48 2222  	   SELECT
14:34:48 2223  	     ACCOUNT.ID into var_account_id
14:34:48 2224  	   FROM
14:34:48 2225  	     ACCOUNT
14:34:48 2226  	   WHERE
14:34:48 2227  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:48 2228  	   EXCEPTION
14:34:48 2229  	     WHEN NO_DATA_FOUND THEN
14:34:48 2230  	       RAISE BAD_GROUP_ID;
14:34:48 2231  	 END;
14:34:48 2232  
14:34:48 2233  	 OPEN out_result_set FOR
14:34:48 2234  	 SELECT
14:34:48 2235  	   GIFT_CERTIFICATE.CODE,
14:34:48 2236  	   GIFT_CERTIFICATE.EXPIRATION_DATE,
14:34:48 2237  	   OFFER_CHAIN.NAME AS "OFFER_CHAIN_NAME",
14:34:48 2238  	   OFFER_CHAIN.ID AS "OFFER_CHAIN_ID",
14:34:48 2239  	   GIFT_CERTIFICATE.SENDER_EMAIL,
14:34:48 2240  	   GIFT_CERTIFICATE.SENDER_NAME,
14:34:48 2241  	   GIFT_CERTIFICATE.RECIPIENT_EMAIL,
14:34:48 2242  	   GIFT_CERTIFICATE.RECIPIENT_NAME,
14:34:48 2243  	   GIFT_CERTIFICATE.PURCHASE_DATE,
14:34:48 2244  	   GIFT_CERTIFICATE.REDEMPTION_DATE,
14:34:48 2245  	   GIFT_CERTIFICATE.REDEEMER_GROUP_ID
14:34:48 2246  	 FROM
14:34:48 2247  	   GIFT_CERTIFICATE
14:34:48 2248  	   INNER JOIN OFFER_CHAIN ON GIFT_CERTIFICATE.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 2249  	 WHERE
14:34:48 2250  	   ROWNUM <= 100 AND
14:34:48 2251  	   GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id;
14:34:48 2252  
14:34:48 2253  EXCEPTION
14:34:48 2254  WHEN BAD_GROUP_ID THEN
14:34:48 2255  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2256  	   SPROC_NAME, 'No such group id');
14:34:48 2257  WHEN OTHERS THEN
14:34:48 2258  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2259  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2260  END GET_PURCHASED_GCERTIFICATES;
14:34:48 2261  
14:34:48 2262  /******************************************************************************/
14:34:48 2263  
14:34:48 2264  PROCEDURE IS_GCERT_FOR_PROPER_OFFER (
14:34:48 2265  	 in_gift_certificate_id IN NUMBER,
14:34:48 2266  	 in_charge_id		IN NUMBER,
14:34:48 2267  	 out_result		OUT NUMBER
14:34:48 2268  ) AS
14:34:48 2269  -- VARIABLES
14:34:48 2270  SPROC_NAME	    CONSTANT VARCHAR2(25) := 'IS_GCERT_FOR_PROPER_OFFER';
14:34:48 2271  var_invoice_id	    NUMBER;
14:34:48 2272  var_offer_chain_id   NUMBER;
14:34:48 2273  var_offer_chain_s_id NUMBER;
14:34:48 2274  -- EXCEPTIONS
14:34:48 2275  BAD_CHARGE_ID		 EXCEPTION;
14:34:48 2276  BAD_GIFT_CERTIFICATE_ID	 EXCEPTION;
14:34:48 2277  CAN_NOT_FIND_SUBSCRIPTION EXCEPTION;
14:34:48 2278  BEGIN
14:34:48 2279  
14:34:48 2280  	 BEGIN
14:34:48 2281  	   SELECT
14:34:48 2282  	     CHARGE.INVOICE_ID into var_invoice_id
14:34:48 2283  	   FROM
14:34:48 2284  	     CHARGE
14:34:48 2285  	   WHERE
14:34:48 2286  	     CHARGE.ID = in_charge_id;
14:34:48 2287  	   EXCEPTION
14:34:48 2288  	     WHEN NO_DATA_FOUND THEN
14:34:48 2289  	       RAISE BAD_CHARGE_ID;
14:34:48 2290  	 END;
14:34:48 2291  
14:34:48 2292  	 BEGIN
14:34:48 2293  	   SELECT
14:34:48 2294  	     GIFT_CERTIFICATE.OFFER_CHAIN_ID into var_offer_chain_id
14:34:48 2295  	   FROM
14:34:48 2296  	     GIFT_CERTIFICATE
14:34:48 2297  	   WHERE
14:34:48 2298  	     GIFT_CERTIFICATE.ID = in_gift_certificate_id;
14:34:48 2299  	   EXCEPTION
14:34:48 2300  	     WHEN NO_DATA_FOUND THEN
14:34:48 2301  	       RAISE BAD_GIFT_CERTIFICATE_ID;
14:34:48 2302  	 END;
14:34:48 2303  
14:34:48 2304  	 BEGIN
14:34:48 2305  	   SELECT
14:34:48 2306  	     SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain_s_id
14:34:48 2307  	   FROM
14:34:48 2308  	     SUBSCRIPTION
14:34:48 2309  	   WHERE
14:34:48 2310  	     SUBSCRIPTION.ID IN (
14:34:48 2311  	       SELECT DISTINCT
14:34:48 2312  		 LICENSE.SUBSCRIPTION_ID
14:34:48 2313  	       FROM
14:34:48 2314  		 LICENSE
14:34:48 2315  	       WHERE
14:34:48 2316  		 LICENSE.INVOICE_ID = var_invoice_id
14:34:48 2317  	     );
14:34:48 2318  	   EXCEPTION
14:34:48 2319  	     WHEN NO_DATA_FOUND THEN
14:34:48 2320  	       RAISE CAN_NOT_FIND_SUBSCRIPTION;
14:34:48 2321  	 END;
14:34:48 2322  
14:34:48 2323  	 IF var_offer_chain_s_id = var_offer_chain_id THEN
14:34:48 2324  	   out_result := GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 2325  	 ELSE
14:34:48 2326  	   out_result := GLOBAL_CONSTANTS_V18.FALSE;
14:34:48 2327  	 END IF;
14:34:48 2328  
14:34:48 2329  EXCEPTION
14:34:48 2330  WHEN BAD_CHARGE_ID THEN
14:34:48 2331  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2332  	   SPROC_NAME, 'No such charge');
14:34:48 2333  WHEN BAD_GIFT_CERTIFICATE_ID THEN
14:34:48 2334  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2335  	   SPROC_NAME, 'No such gift certificate');
14:34:48 2336  WHEN CAN_NOT_FIND_SUBSCRIPTION THEN
14:34:48 2337  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2338  	   SPROC_NAME, 'Could not find subscription for given charge');
14:34:48 2339  WHEN OTHERS THEN
14:34:48 2340  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2341  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2342  END IS_GCERT_FOR_PROPER_OFFER;
14:34:48 2343  
14:34:48 2344  /******************************************************************************/
14:34:48 2345  
14:34:48 2346  FUNCTION IS_CREDIT_CARD_EXISTS (
14:34:48 2347  /*
14:34:48 2348  GLOBAL_CONSTANTS_V18.TRUE - if instrument exists
14:34:48 2349  GLOBAL_CONSTANTS_V18.FALSE - else
14:34:48 2350  */
14:34:48 2351  	 in_credit_card_id IN NUMBER
14:34:48 2352  ) RETURN NUMBER AS
14:34:48 2353  -- VARIABLES
14:34:48 2354  var_cc_count NUMBER;
14:34:48 2355  BEGIN
14:34:48 2356  	 SELECT
14:34:48 2357  	   COUNT(*) into var_cc_count
14:34:48 2358  	 FROM
14:34:48 2359  	   CREDIT_CARD
14:34:48 2360  	 WHERE
14:34:48 2361  	   CREDIT_CARD.ID = in_credit_card_id;
14:34:48 2362  
14:34:48 2363  	 IF var_cc_count = 0 THEN
14:34:48 2364  	   RETURN GLOBAL_CONSTANTS_V18.FALSE;
14:34:48 2365  	 ELSE
14:34:48 2366  	   RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 2367  	 END IF;
14:34:48 2368  
14:34:48 2369  END IS_CREDIT_CARD_EXISTS;
14:34:48 2370  
14:34:48 2371  /******************************************************************************/
14:34:48 2372  
14:34:48 2373  FUNCTION IS_PAYPAL_EXISTS (
14:34:48 2374  /*
14:34:48 2375  GLOBAL_CONSTANTS_V18.TRUE - if instrument exists
14:34:48 2376  GLOBAL_CONSTANTS_V18.FALSE - else
14:34:48 2377  */
14:34:48 2378  	 in_paypal_id IN NUMBER
14:34:48 2379  ) RETURN NUMBER AS
14:34:48 2380  -- VARIABLES
14:34:48 2381  var_pp_count NUMBER;
14:34:48 2382  BEGIN
14:34:48 2383  	 SELECT
14:34:48 2384  	   COUNT(*) into var_pp_count
14:34:48 2385  	 FROM
14:34:48 2386  	   PAYPAL
14:34:48 2387  	 WHERE
14:34:48 2388  	   PAYPAL.ID = in_paypal_id;
14:34:48 2389  
14:34:48 2390  	 IF var_pp_count = 0 THEN
14:34:48 2391  	   RETURN GLOBAL_CONSTANTS_V18.FALSE;
14:34:48 2392  	 ELSE
14:34:48 2393  	   RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 2394  	 END IF;
14:34:48 2395  
14:34:48 2396  END IS_PAYPAL_EXISTS;
14:34:48 2397  
14:34:48 2398  /******************************************************************************/
14:34:48 2399  
14:34:48 2400  FUNCTION IS_GIFT_CERTIFICATE_EXISTS (
14:34:48 2401  /*
14:34:48 2402  GLOBAL_CONSTANTS_V18.TRUE - if instrument exists
14:34:48 2403  GLOBAL_CONSTANTS_V18.FALSE - else
14:34:48 2404  */
14:34:48 2405  	 in_gift_certificate_id IN NUMBER
14:34:48 2406  ) RETURN NUMBER AS
14:34:48 2407  -- VARIABLES
14:34:48 2408  var_gc_count NUMBER;
14:34:48 2409  BEGIN
14:34:48 2410  	 SELECT
14:34:48 2411  	   COUNT(*) into var_gc_count
14:34:48 2412  	 FROM
14:34:48 2413  	   GIFT_CERTIFICATE
14:34:48 2414  	 WHERE
14:34:48 2415  	   GIFT_CERTIFICATE.ID = in_gift_certificate_id;
14:34:48 2416  
14:34:48 2417  	 IF var_gc_count = 0 THEN
14:34:48 2418  	   RETURN GLOBAL_CONSTANTS_V18.FALSE;
14:34:48 2419  	 ELSE
14:34:48 2420  	   RETURN GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 2421  	 END IF;
14:34:48 2422  
14:34:48 2423  END IS_GIFT_CERTIFICATE_EXISTS;
14:34:48 2424  
14:34:48 2425  /******************************************************************************/
14:34:48 2426  
14:34:48 2427  PROCEDURE GET_GROUP_ID_BY_CREDIT_CARD_ID (
14:34:48 2428  	 in_credit_card_id IN NUMBER,
14:34:48 2429  	 out_group_id	   OUT NUMBER
14:34:48 2430  ) AS
14:34:48 2431  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_GROUP_ID_BY_CREDIT_CARD_ID';
14:34:48 2432  BEGIN
14:34:48 2433  	 SELECT
14:34:48 2434  	   ACCOUNT.GROUP_ID into out_group_id
14:34:48 2435  	 FROM
14:34:48 2436  	   CREDIT_CARD
14:34:48 2437  	   INNER JOIN ACCOUNT ON CREDIT_CARD.ACCOUNT_ID = ACCOUNT.ID
14:34:48 2438  	 WHERE
14:34:48 2439  	   CREDIT_CARD.ID = in_credit_card_id;
14:34:48 2440  EXCEPTION
14:34:48 2441  WHEN NO_DATA_FOUND THEN
14:34:48 2442  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2443  	   SPROC_NAME, 'No such credit card');
14:34:48 2444  WHEN OTHERS THEN
14:34:48 2445  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2446  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2447  END GET_GROUP_ID_BY_CREDIT_CARD_ID;
14:34:48 2448  
14:34:48 2449  /******************************************************************************/
14:34:48 2450  
14:34:48 2451  PROCEDURE GET_GROUP_ID_BY_PAYPAL_ID (
14:34:48 2452  	 in_paypal_id IN NUMBER,
14:34:48 2453  	 out_group_id OUT NUMBER
14:34:48 2454  ) AS
14:34:48 2455  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_ID_BY_PAYPAL_ID';
14:34:48 2456  BEGIN
14:34:48 2457  	 SELECT
14:34:48 2458  	   ACCOUNT.GROUP_ID into out_group_id
14:34:48 2459  	 FROM
14:34:48 2460  	   PAYPAL
14:34:48 2461  	   INNER JOIN ACCOUNT ON PAYPAL.ACCOUNT_ID = ACCOUNT.ID
14:34:48 2462  	 WHERE
14:34:48 2463  	   PAYPAL.ID = in_paypal_id;
14:34:48 2464  EXCEPTION
14:34:48 2465  WHEN NO_DATA_FOUND THEN
14:34:48 2466  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2467  	   SPROC_NAME, 'No such paypal');
14:34:48 2468  WHEN OTHERS THEN
14:34:48 2469  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2470  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2471  END GET_GROUP_ID_BY_PAYPAL_ID;
14:34:48 2472  
14:34:48 2473  /******************************************************************************/
14:34:48 2474  
14:34:48 2475  PROCEDURE UPDATE_CREDIT_CARD_STATUS (
14:34:48 2476  	 in_credit_card_id	  IN CREDIT_CARD.ID%TYPE,
14:34:48 2477  	 in_credit_card_status_id IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE,
14:34:48 2478  	 in_updated_by		  IN CREDIT_CARD.UPDATED_BY%TYPE
14:34:48 2479  ) AS
14:34:48 2480  SPROC_NAME CONSTANT VARCHAR2(25) := 'UPDATE_CREDIT_CARD_STATUS';
14:34:48 2481  -- EXCEPTIONS
14:34:48 2482  BAD_CREDIT_CARD_ID     EXCEPTION;
14:34:48 2483  BAD_STATUS_ID	      EXCEPTION;
14:34:48 2484  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:48 2485  BEGIN
14:34:48 2486  
14:34:48 2487  	 IF in_credit_card_status_id != GLOBAL_STATUSES_V18.CREDIT_CARD_ACTIVE
14:34:48 2488  	   AND in_credit_card_status_id != GLOBAL_STATUSES_V18.CREDIT_CARD_INVALID
14:34:48 2489  	   AND in_credit_card_status_id != GLOBAL_STATUSES_V18.CREDIT_CARD_DISABLED
14:34:48 2490  	   AND in_credit_card_status_id != GLOBAL_STATUSES_V18.CREDIT_CARD_EXPIRED THEN
14:34:48 2491  	   RAISE BAD_STATUS_ID;
14:34:48 2492  	 END IF;
14:34:48 2493  
14:34:48 2494  	 PROCS_FIN_INSTRUMENTS_CRU_V18.UPDATE_CREDIT_CARD(
14:34:48 2495  	   in_credit_card_id	    => in_credit_card_id,
14:34:48 2496  	   in_updated_by	    => in_updated_by,
14:34:48 2497  	   in_credit_card_status_id => in_credit_card_status_id
14:34:48 2498  	 );
14:34:48 2499  
14:34:48 2500  	 IF SQL%ROWCOUNT = 0 THEN
14:34:48 2501  	   RAISE BAD_CREDIT_CARD_ID;
14:34:48 2502  	 END IF;
14:34:48 2503  
14:34:48 2504  EXCEPTION
14:34:48 2505  WHEN BAD_CREDIT_CARD_ID THEN
14:34:48 2506  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2507  	   SPROC_NAME, 'No such credit card');
14:34:48 2508  WHEN BAD_STATUS_ID THEN
14:34:48 2509  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 2510  	   SPROC_NAME, 'Bad credit card status id');
14:34:48 2511  WHEN OTHERS THEN
14:34:48 2512  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2513  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2514  END UPDATE_CREDIT_CARD_STATUS;
14:34:48 2515  
14:34:48 2516  /******************************************************************************/
14:34:48 2517  
14:34:48 2518  PROCEDURE UPDATE_PAYPAL_STATUS (
14:34:48 2519  	 in_paypal_id	     IN PAYPAL.ID%TYPE,
14:34:48 2520  	 in_paypal_status_id IN PAYPAL.PAYPAL_STATUS_ID%TYPE,
14:34:48 2521  	 in_updated_by	     IN PAYPAL.UPDATED_BY%TYPE
14:34:48 2522  ) AS
14:34:48 2523  SPROC_NAME CONSTANT VARCHAR2(20) := 'UPDATE_PAYPAL_STATUS';
14:34:48 2524  -- EXCEPTIONS
14:34:48 2525  BAD_PAYPAL_ID	      EXCEPTION;
14:34:48 2526  BAD_STATUS_ID	      EXCEPTION;
14:34:48 2527  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:48 2528  BEGIN
14:34:48 2529  
14:34:48 2530  	 IF in_paypal_status_id != GLOBAL_STATUSES_V18.PAYPAL_ACTIVE
14:34:48 2531  	   AND in_paypal_status_id != GLOBAL_STATUSES_V18.PAYPAL_INACTIVE
14:34:48 2532  	   AND in_paypal_status_id != GLOBAL_STATUSES_V18.PAYPAL_FROZEN THEN
14:34:48 2533  	   RAISE BAD_STATUS_ID;
14:34:48 2534  	 END IF;
14:34:48 2535  
14:34:48 2536  	 PROCS_FIN_INSTRUMENTS_CRU_V18.UPDATE_PAYPAL(
14:34:48 2537  	   in_paypal_id        => in_paypal_id,
14:34:48 2538  	   in_paypal_status_id => in_paypal_status_id,
14:34:48 2539  	   in_updated_by       => in_updated_by
14:34:48 2540  	 );
14:34:48 2541  
14:34:48 2542  	 IF SQL%ROWCOUNT = 0 THEN
14:34:48 2543  	   RAISE BAD_PAYPAL_ID;
14:34:48 2544  	 END IF;
14:34:48 2545  
14:34:48 2546  EXCEPTION
14:34:48 2547  WHEN BAD_PAYPAL_ID THEN
14:34:48 2548  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2549  	   SPROC_NAME, 'No such paypal');
14:34:48 2550  WHEN BAD_STATUS_ID THEN
14:34:48 2551  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 2552  	   SPROC_NAME, 'Bad paypal status id');
14:34:48 2553  WHEN OTHERS THEN
14:34:48 2554  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2555  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2556  END UPDATE_PAYPAL_STATUS;
14:34:48 2557  
14:34:48 2558  /******************************************************************************/
14:34:48 2559  
14:34:48 2560  PROCEDURE UPDATE_GIFT_CERTIFICATE_STATUS (
14:34:48 2561  	 in_gift_certificate_id        IN GIFT_CERTIFICATE.ID%TYPE,
14:34:48 2562  	 in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE,
14:34:48 2563  	 in_updated_by		       IN GIFT_CERTIFICATE.UPDATED_BY%TYPE
14:34:48 2564  ) AS
14:34:48 2565  SPROC_NAME CONSTANT VARCHAR2(30) := 'UPDATE_GIFT_CERTIFICATE_STATUS';
14:34:48 2566  -- EXCEPTIONS
14:34:48 2567  BAD_GIFT_CERTIFICATE_ID EXCEPTION;
14:34:48 2568  BAD_STATUS_ID	       EXCEPTION;
14:34:48 2569  EXCEPTION_MESSAGE       VARCHAR2(1024);
14:34:48 2570  BEGIN
14:34:48 2571  
14:34:48 2572  	 IF in_gift_certificate_status_id != GLOBAL_STATUSES_V18.GIFT_CERTIFICATE_ACTIVE
14:34:48 2573  	   AND in_gift_certificate_status_id != GLOBAL_STATUSES_V18.GIFT_CERTIFICATE_FINALIZED THEN
14:34:48 2574  	   RAISE BAD_STATUS_ID;
14:34:48 2575  	 END IF;
14:34:48 2576  
14:34:48 2577  	 PROCS_FIN_INSTRUMENTS_CRU_V18.UPDATE_GIFT_CERTIFICATE(
14:34:48 2578  	   in_gift_certificate_id	 => in_gift_certificate_id,
14:34:48 2579  	   in_gift_certificate_status_id => in_gift_certificate_status_id,
14:34:48 2580  	   in_updated_by		 => in_updated_by
14:34:48 2581  	 );
14:34:48 2582  
14:34:48 2583  	 IF SQL%ROWCOUNT = 0 THEN
14:34:48 2584  	   RAISE BAD_GIFT_CERTIFICATE_ID;
14:34:48 2585  	 END IF;
14:34:48 2586  
14:34:48 2587  EXCEPTION
14:34:48 2588  WHEN BAD_GIFT_CERTIFICATE_ID THEN
14:34:48 2589  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2590  	   SPROC_NAME, 'No such gift certificate');
14:34:48 2591  WHEN BAD_STATUS_ID THEN
14:34:48 2592  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 2593  	   SPROC_NAME, 'Bad paypal status id');
14:34:48 2594  WHEN OTHERS THEN
14:34:48 2595  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2596  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2597  END UPDATE_GIFT_CERTIFICATE_STATUS;
14:34:48 2598  
14:34:48 2599  /******************************************************************************/
14:34:48 2600  
14:34:48 2601  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
14:34:48 2602  	 in_invoice_id		 IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:48 2603  	 out_result_set OUT SYS_REFCURSOR
14:34:48 2604  ) AS
14:34:48 2605  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GC_BY_PURCHASE_INVOICE_ID';
14:34:48 2606  -- VARIABLES
14:34:48 2607  temp_invoice_id NUMBER;
14:34:48 2608  -- EXCEPTIONS
14:34:48 2609  BAD_INVOICE_ID EXCEPTION;
14:34:48 2610  BEGIN
14:34:48 2611  
14:34:48 2612  	 BEGIN
14:34:48 2613  	   SELECT
14:34:48 2614  	     I.ID into temp_invoice_id
14:34:48 2615  	   FROM
14:34:48 2616  	     INVOICE I
14:34:48 2617  	   WHERE
14:34:48 2618  	     I.ID = in_invoice_id;
14:34:48 2619  	   EXCEPTION
14:34:48 2620  	     WHEN NO_DATA_FOUND THEN
14:34:48 2621  	       RAISE BAD_INVOICE_ID;
14:34:48 2622  	 END;
14:34:48 2623  
14:34:48 2624  	 OPEN out_result_set FOR
14:34:48 2625  	   SELECT
14:34:48 2626  	     gc.EXPIRATION_DATE,
14:34:48 2627  	     ch.name,
14:34:48 2628  	     ch.id offer_chain_id,
14:34:48 2629  	     gc.sender_email,
14:34:48 2630  	     gc.sender_name,
14:34:48 2631  	     gc.recipient_email,
14:34:48 2632  	     gc.recipient_name,
14:34:48 2633  	     gc.purchase_date,
14:34:48 2634  	     gc.redemption_date,
14:34:48 2635  	     gc.purchaser_group_id,
14:34:48 2636  	     gc.redeemer_group_id,
14:34:48 2637  	     gc.code,
14:34:48 2638  	     gc.gift_message,
14:34:48 2639  	     gc.recipient_notify_date,
14:34:48 2640  	     gc.id
14:34:48 2641  	   FROM
14:34:48 2642  	     GIFT_CERTIFICATE gc
14:34:48 2643  	     INNER JOIN OFFER_CHAIN ch ON ch.id = gc.offer_chain_id
14:34:48 2644  	   WHERE
14:34:48 2645  	     gc.PURCHASE_INVOICE_ID = in_invoice_id;
14:34:48 2646  
14:34:48 2647  EXCEPTION
14:34:48 2648  WHEN BAD_INVOICE_ID THEN
14:34:48 2649  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2650  	   SPROC_NAME, 'No such invoice');
14:34:48 2651  WHEN OTHERS THEN
14:34:48 2652  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2653  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2654  END GET_GC_BY_PURCH_INVOICE_ID;
14:34:48 2655  
14:34:48 2656  
14:34:48 2657  PROCEDURE GET_GC_ID_BY_PURCH_INVOICE_ID (
14:34:48 2658  	 in_invoice_id		 IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:48 2659  	 out_gift_certificate_id OUT GIFT_CERTIFICATE.ID%TYPE
14:34:48 2660  ) AS
14:34:48 2661  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GC_ID_BY_PURCHASE_INVOICE_ID';
14:34:48 2662  -- VARIABLES
14:34:48 2663  temp_invoice_id NUMBER;
14:34:48 2664  -- EXCEPTIONS
14:34:48 2665  BAD_INVOICE_ID EXCEPTION;
14:34:48 2666  BEGIN
14:34:48 2667  
14:34:48 2668  	 BEGIN
14:34:48 2669  	   SELECT
14:34:48 2670  	     I.ID into temp_invoice_id
14:34:48 2671  	   FROM
14:34:48 2672  	     INVOICE I
14:34:48 2673  	   WHERE
14:34:48 2674  	     I.ID = in_invoice_id;
14:34:48 2675  	   EXCEPTION
14:34:48 2676  	     WHEN NO_DATA_FOUND THEN
14:34:48 2677  	       RAISE BAD_INVOICE_ID;
14:34:48 2678  	 END;
14:34:48 2679  
14:34:48 2680  	 BEGIN
14:34:48 2681  	   SELECT
14:34:48 2682  	     GIFT_CERTIFICATE.ID into out_gift_certificate_id
14:34:48 2683  	   FROM
14:34:48 2684  	     GIFT_CERTIFICATE
14:34:48 2685  	   WHERE
14:34:48 2686  	     GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = in_invoice_id;
14:34:48 2687  	   EXCEPTION
14:34:48 2688  	     WHEN NO_DATA_FOUND THEN
14:34:48 2689  	       out_gift_certificate_id := NULL;
14:34:48 2690  	 END;
14:34:48 2691  
14:34:48 2692  EXCEPTION
14:34:48 2693  WHEN BAD_INVOICE_ID THEN
14:34:48 2694  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2695  	   SPROC_NAME, 'No such invoice');
14:34:48 2696  WHEN OTHERS THEN
14:34:48 2697  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2698  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2699  END GET_GC_ID_BY_PURCH_INVOICE_ID;
14:34:48 2700  
14:34:48 2701  /******************************************************************************/
14:34:48 2702  
14:34:48 2703  PROCEDURE SWITCH_FINANCIAL_INSTRUMENT (
14:34:48 2704  	 in_old_fin_instrument_id   IN NUMBER,
14:34:48 2705  	 in_old_fin_instrument_type IN NUMBER,
14:34:48 2706  	 in_new_fin_instrument_id   IN NUMBER,
14:34:48 2707  	 in_new_fin_instrument_type IN NUMBER,
14:34:48 2708  	 in_updated_by		    IN VARCHAR2
14:34:48 2709  ) AS
14:34:48 2710  SPROC_NAME CONSTANT VARCHAR2(27) := 'SWITCH_FINANCIAL_INSTRUMENT';
14:34:48 2711  -- variables
14:34:48 2712  temp_out_transaction_id NUMBER;
14:34:48 2713  temp_out_charge_id      NUMBER;
14:34:48 2714  var_accounts_count      NUMBER;
14:34:48 2715  var_transaction_type_old  "TRANSACTION".TRANSACTION_TYPE_CODE%TYPE;
14:34:48 2716  var_transaction_type	 "TRANSACTION".TRANSACTION_TYPE_CODE%TYPE;
14:34:48 2717  -- EXCEPTIONS
14:34:48 2718  BAD_OLD_CC   EXCEPTION;
14:34:48 2719  BAD_OLD_PP   EXCEPTION;
14:34:48 2720  BAD_OLD_TYPE EXCEPTION;
14:34:48 2721  BAD_NEW_CC   EXCEPTION;
14:34:48 2722  BAD_NEW_PP   EXCEPTION;
14:34:48 2723  BAD_NEW_TYPE EXCEPTION;
14:34:48 2724  DIFFERENT_OWNERS EXCEPTION;
14:34:48 2725  BEGIN
14:34:48 2726  
14:34:48 2727  	 IF in_old_fin_instrument_type = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD THEN
14:34:48 2728  	   IF PROCS_FIN_INSTRUMENTS_V18.IS_CREDIT_CARD_EXISTS(in_old_fin_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 2729  	     -- throw exception: bad old credit card
14:34:48 2730  	     RAISE BAD_OLD_CC;
14:34:48 2731  	   END IF;
14:34:48 2732  	 ELSIF in_old_fin_instrument_type = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL THEN
14:34:48 2733  	   IF PROCS_FIN_INSTRUMENTS_V18.IS_PAYPAL_EXISTS(in_old_fin_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 2734  	     -- throw exception: bad old paypal
14:34:48 2735  	     RAISE BAD_OLD_PP;
14:34:48 2736  	   END IF;
14:34:48 2737  	 ELSE
14:34:48 2738  	   -- throw exception: bad instrument type
14:34:48 2739  	   RAISE BAD_OLD_TYPE;
14:34:48 2740  	 END IF;
14:34:48 2741  
14:34:48 2742  	 IF in_new_fin_instrument_type = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD THEN
14:34:48 2743  	   IF PROCS_FIN_INSTRUMENTS_V18.IS_CREDIT_CARD_EXISTS(in_new_fin_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 2744  	     -- throw exception: bad new credit card
14:34:48 2745  	     RAISE BAD_NEW_CC;
14:34:48 2746  	   END IF;
14:34:48 2747  	 ELSIF in_new_fin_instrument_type = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL THEN
14:34:48 2748  	   IF PROCS_FIN_INSTRUMENTS_V18.IS_PAYPAL_EXISTS(in_new_fin_instrument_id) = GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 2749  	     -- throw exception: bad new paypal
14:34:48 2750  	     RAISE BAD_NEW_PP;
14:34:48 2751  	   END IF;
14:34:48 2752  	 ELSE
14:34:48 2753  	   -- throw exception: bad new instrument type
14:34:48 2754  	   RAISE BAD_NEW_TYPE;
14:34:48 2755  	 END IF;
14:34:48 2756  
14:34:48 2757  	 -- Check that owner of both instruments - same man
14:34:48 2758  
14:34:48 2759  	 SELECT count(1) into var_accounts_count FROM (
14:34:48 2760  	   SELECT
14:34:48 2761  	     CC.ACCOUNT_ID
14:34:48 2762  	   FROM
14:34:48 2763  	     CREDIT_CARD CC
14:34:48 2764  	   WHERE
14:34:48 2765  	     (
14:34:48 2766  	       CC.ID = in_old_fin_instrument_id
14:34:48 2767  	       AND in_old_fin_instrument_type = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD
14:34:48 2768  	     )
14:34:48 2769  	     OR
14:34:48 2770  	     (
14:34:48 2771  	       CC.ID = in_new_fin_instrument_id
14:34:48 2772  	       AND in_new_fin_instrument_type = GLOBAL_ENUMS_V18.INSTRUMENT_CREDIT_CARD
14:34:48 2773  	     )
14:34:48 2774  	   UNION
14:34:48 2775  	   SELECT
14:34:48 2776  	     PP.ACCOUNT_ID
14:34:48 2777  	   FROM
14:34:48 2778  	     PAYPAL PP
14:34:48 2779  	   WHERE
14:34:48 2780  	     (
14:34:48 2781  	       PP.ID = in_old_fin_instrument_id
14:34:48 2782  	       AND in_old_fin_instrument_type = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL
14:34:48 2783  	     )
14:34:48 2784  	     OR
14:34:48 2785  	     (
14:34:48 2786  	       PP.ID = in_new_fin_instrument_id
14:34:48 2787  	       AND in_new_fin_instrument_type = GLOBAL_ENUMS_V18.INSTRUMENT_PAYPAL
14:34:48 2788  	     )
14:34:48 2789  	 )
14:34:48 2790  	 WHERE
14:34:48 2791  	   account_id IS NOT NULL;
14:34:48 2792  
14:34:48 2793  	 IF (var_accounts_count > 1) THEN
14:34:48 2794  	   -- Throw exception: different owners of instruments
14:34:48 2795  	   RAISE DIFFERENT_OWNERS;
14:34:48 2796  	 END IF;
14:34:48 2797  
14:34:48 2798  	 FOR f_sub IN (
14:34:48 2799  	   select
14:34:48 2800  	     s.id
14:34:48 2801  	   FROM
14:34:48 2802  	     subscription s
14:34:48 2803  	   WHERE
14:34:48 2804  	     (
14:34:48 2805  	       s.subscription_status_id = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE OR
14:34:48 2806  	       s.subscription_status_id = GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED OR
14:34:48 2807  	       s.subscription_status_id = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD
14:34:48 2808  	     )
14:34:48 2809  	     AND
14:34:48 2810  	     s.instrument_type_id = in_old_fin_instrument_type AND
14:34:48 2811  	     s.instrument_id = in_old_fin_instrument_id
14:34:48 2812  	 ) LOOP
14:34:48 2813  	   PROCS_SUBSCRIPTION_CRU_V18.UPDATE_SUBSCRIPTION(
14:34:48 2814  	     in_subscription_id => f_sub.id,
14:34:48 2815  	     in_instrument_type_id => in_new_fin_instrument_type,
14:34:48 2816  	     in_instrument_id => in_new_fin_instrument_id,
14:34:48 2817  	     in_updated_by => in_updated_by
14:34:48 2818  	   );
14:34:48 2819  	 END LOOP;
14:34:48 2820  
14:34:48 2821  	 FOR f_open_charge IN (
14:34:48 2822  	   select
14:34:48 2823  	     ch.id,
14:34:48 2824  	     ch.invoice_id,
14:34:48 2825  	     ch.transaction_id,
14:34:48 2826  	     ch.charge_amount
14:34:48 2827  	   FROM
14:34:48 2828  	     charge ch
14:34:48 2829  	   WHERE
14:34:48 2830  	     ch.instrument_type_id = in_old_fin_instrument_type
14:34:48 2831  	     AND ch.instrument_id = in_old_fin_instrument_id
14:34:48 2832  	     AND ch.charge_status_id = GLOBAL_STATUSES_V18.CHARGE_OPENED
14:34:48 2833  	 ) LOOP
14:34:48 2834  
14:34:48 2835  	   FOR f_pending_transaction IN (
14:34:48 2836  	     select
14:34:48 2837  	       id, transaction_amount, order_id, is_refund
14:34:48 2838  	     from
14:34:48 2839  	       transaction
14:34:48 2840  	     where
14:34:48 2841  	       id = f_open_charge.transaction_id
14:34:48 2842  	       and transaction_status_id = GLOBAL_STATUSES_V18.TRANSACTION_PENDING
14:34:48 2843  	   ) LOOP
14:34:48 2844  
14:34:48 2845  	     SELECT
14:34:48 2846  	       DECODE(TRANSACTION_TYPE_CODE, 'RECURRING_BILLING', 'RECURRING_BILLING_USER_UPDATE',
14:34:48 2847  					     'GRACE_PERIOD_FINAL', 'GRACE_PERIOD_USER_UPDATE',
14:34:48 2848  					     TRANSACTION_TYPE_CODE)
14:34:48 2849  	     INTO var_transaction_type
14:34:48 2850  	     FROM
14:34:48 2851  	       Transaction
14:34:48 2852  	     WHERE
14:34:48 2853  	       id = f_pending_transaction.id
14:34:48 2854  	       AND ROWNUM <= 1;
14:34:48 2855  
14:34:48 2856  	     PROCS_TRANSACTION_V18.CREATE_TRANSACTION (
14:34:48 2857  	       in_transaction_id => NULL,
14:34:48 2858  	       in_status_id  => GLOBAL_STATUSES_V18.TRANSACTION_PENDING,
14:34:48 2859  	       in_amount     => f_pending_transaction.transaction_amount,
14:34:48 2860  	       in_created_by => in_updated_by,
14:34:48 2861  	       in_order_id   => null,
14:34:48 2862  	       in_is_refund  => f_pending_transaction.is_refund,
14:34:48 2863  	       in_transaction_type_code => var_transaction_type,
14:34:48 2864  	       out_transaction_id => temp_out_transaction_id
14:34:48 2865  	     );
14:34:48 2866  
14:34:48 2867  	     PROCS_TRANSACTION_V18.UPDATE_TRANSACTION_STATUS(
14:34:48 2868  	       in_transaction_id => f_pending_transaction.id,
14:34:48 2869  	       in_updated_by	 => in_updated_by,
14:34:48 2870  	       in_transaction_status_id  => GLOBAL_STATUSES_V18.TRANSACTION_CLOSED
14:34:48 2871  	     );
14:34:48 2872  
14:34:48 2873  	     -- Create new charge
14:34:48 2874  	     PROCS_CHARGE_V18.CREATE_CHARGE (
14:34:48 2875  	       in_invoice_id	     => f_open_charge.invoice_id,
14:34:48 2876  	       in_transaction_id     => temp_out_transaction_id,
14:34:48 2877  	       in_instrument_type_id => in_new_fin_instrument_type,
14:34:48 2878  	       in_instrument_id      => in_new_fin_instrument_id,
14:34:48 2879  	       in_charge_amount      => f_open_charge.charge_amount,
14:34:48 2880  	       in_created_by	     => in_updated_by,
14:34:48 2881  	       in_charge_status_id   => GLOBAL_STATUSES_V18.CHARGE_OPENED,
14:34:48 2882  	       out_charge_id	     => temp_out_charge_id
14:34:48 2883  	     );
14:34:48 2884  	     -- Cancel old charge
14:34:48 2885  	     PROCS_CHARGE_V18.UPDATE_CHARGE_STATUS(
14:34:48 2886  	       in_charge_id	   => f_open_charge.id,
14:34:48 2887  	       in_updated_by	   => in_updated_by,
14:34:48 2888  	       in_charge_status_id => GLOBAL_STATUSES_V18.CHARGE_CANCELED
14:34:48 2889  	     );
14:34:48 2890  
14:34:48 2891  	     PROCS_ADJUSTMENTS_V18.UPDATE_INVOICE_ADJUSTMENT(
14:34:48 2892  	       IN_INVOICE_ID => f_open_charge.invoice_id,
14:34:48 2893  	       IN_ORIGINAL_CHARGE_ID => f_open_charge.id,
14:34:48 2894  	       IN_CHARGE_ID => temp_out_charge_id,
14:34:48 2895  	       IN_UPDATED_BY => in_updated_by
14:34:48 2896  	     );
14:34:48 2897  
14:34:48 2898  	   END LOOP;
14:34:48 2899  	 END LOOP;
14:34:48 2900  
14:34:48 2901  EXCEPTION
14:34:48 2902  WHEN BAD_OLD_CC THEN
14:34:48 2903  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2904  	   SPROC_NAME, 'Trying to switch from non existing credit card');
14:34:48 2905  WHEN BAD_OLD_PP THEN
14:34:48 2906  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2907  	   SPROC_NAME, 'Trying to switch from non existing paypal');
14:34:48 2908  WHEN BAD_OLD_TYPE THEN
14:34:48 2909  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2910  	   SPROC_NAME, 'Trying to switch from unknown/unsupported financial instrument');
14:34:48 2911  WHEN BAD_NEW_CC THEN
14:34:48 2912  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2913  	   SPROC_NAME, 'Trying to switch to non existing credit card');
14:34:48 2914  WHEN BAD_NEW_PP THEN
14:34:48 2915  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2916  	   SPROC_NAME, 'Trying to switch to non existing paypal');
14:34:48 2917  WHEN BAD_NEW_TYPE THEN
14:34:48 2918  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 2919  	   SPROC_NAME, 'Trying to switch to unknown/unsupported financial instrument');
14:34:48 2920  WHEN DIFFERENT_OWNERS THEN
14:34:48 2921  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 2922  	   SPROC_NAME, 'Could not switch instrument, because owners are different');
14:34:48 2923  WHEN OTHERS THEN
14:34:48 2924  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 2925  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 2926  END SWITCH_FINANCIAL_INSTRUMENT;
14:34:48 2927  
14:34:48 2928  END PROCS_FIN_INSTRUMENTS_V18;
14:34:48 2929  .
14:34:48 SQL> /

Package body created.

Elapsed: 00:00:00.36
14:34:48 SQL> 
14:34:48 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_GROUP_ACCOUNT_V18" AS
14:34:48   2  
14:34:48   3  PROCEDURE UPDATE_SS_NEED_ENTITLEMENTS (
14:34:48   4  	in_sub_share_id      IN SUBSCRIPTION_SHARE.ID%TYPE,
14:34:48   5  	in_need_entitlements IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE,
14:34:48   6  	in_updater	     IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
14:34:48   7  ) AS
14:34:48   8  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_SS_NEED_ENTITLEMENTS';
14:34:48   9  BEGIN
14:34:48  10  	CORE_OWNER.PROCS_GROUP_ACCOUNT_CRU_V18.UPDATE_SUBSCRIPTION_SHARE (
14:34:48  11  	  in_id 		=> in_sub_share_id,
14:34:48  12  	  in_needs_entitlements => in_need_entitlements,
14:34:48  13  	  in_updated_by 	=> in_updater
14:34:48  14  	);
14:34:48  15  END UPDATE_SS_NEED_ENTITLEMENTS;
14:34:48  16  
14:34:48  17  PROCEDURE SUB_EXPIRES_NEED_ENTITLEMENTS (
14:34:48  18  	out_result_set OUT SYS_REFCURSOR
14:34:48  19  ) AS
14:34:48  20  SPROC_NAME CONSTANT VARCHAR2(32) := 'SUB_EXPIRES_NEED_ENTITLEMENTS';
14:34:48  21  BEGIN
14:34:48  22  	OPEN out_result_set FOR
14:34:48  23  	SELECT * FROM (
14:34:48  24  	  SELECT DISTINCT
14:34:48  25  	    ga.Subscription_Id,
14:34:48  26  	    A.Group_Id Borrower_Group_Id,
14:34:48  27  	    L.Offer_Id,
14:34:48  28  	    ss.id Subscription_Share_id
14:34:48  29  	  FROM
14:34:48  30  	    Subscription_Share Ss,
14:34:48  31  	    Group_Account Ga,
14:34:48  32  	    Account A,
14:34:48  33  	    License l
14:34:48  34  	  WHERE
14:34:48  35  	    Ss.Group_Account_Id        = ga.id
14:34:48  36  	    AND Ss.Needs_Entitlements  = GLOBAL_CONSTANTS_V18.TRUE
14:34:48  37  	    AND Ss.Borrower_Account_Id = A.Id
14:34:48  38  	    AND L.Subscription_Id      = Ga.Subscription_Id
14:34:48  39  	    AND ROWNUM <= 5000
14:34:48  40  	  ORDER BY dbms_random.value
14:34:48  41  ) WHERE
14:34:48  42  	ROWNUM <= 1000;
14:34:48  43  END SUB_EXPIRES_NEED_ENTITLEMENTS;
14:34:48  44  
14:34:48  45  PROCEDURE EXPIRE_SUB_SHARE(
14:34:48  46  	in_sub_share_id IN SUBSCRIPTION_SHARE.ID%TYPE,
14:34:48  47  	in_updater	IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
14:34:48  48  ) AS
14:34:48  49  SPROC_NAME CONSTANT VARCHAR2(32) := 'EXPIRE_SUB_SHARE';
14:34:48  50  BEGIN
14:34:48  51  	CORE_OWNER.PROCS_GROUP_ACCOUNT_CRU_V18.UPDATE_SUBSCRIPTION_SHARE (
14:34:48  52  	  in_id 	=> in_sub_share_id,
14:34:48  53  	  in_end_date	=> SYSDATE,
14:34:48  54  	  in_updated_by => in_updater,
14:34:48  55  	  in_needs_entitlements => 1
14:34:48  56  	);
14:34:48  57  END EXPIRE_SUB_SHARE;
14:34:48  58  
14:34:48  59  PROCEDURE EXPIRE_ALL_SHARES (
14:34:48  60  	in_group_account_id IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE,
14:34:48  61  	in_updated_by	    IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
14:34:48  62  ) AS
14:34:48  63  SPROC_NAME CONSTANT VARCHAR2(28) := 'EXPIRE_ALL_SHARES';
14:34:48  64  BEGIN
14:34:48  65  	UPDATE SUBSCRIPTION_SHARE SET
14:34:48  66  	  END_DATE = SYSDATE,
14:34:48  67  	  UPDATED_BY = in_updated_by,
14:34:48  68  	  UPDATE_DATE = SYSDATE
14:34:48  69  	WHERE
14:34:48  70  	  GROUP_ACCOUNT_ID = in_group_account_id
14:34:48  71  	AND
14:34:48  72  	  SYSDATE < END_DATE;
14:34:48  73  EXCEPTION
14:34:48  74  	WHEN OTHERS THEN
14:34:48  75  	  PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48  76  	      SPROC_NAME, 'Unknown error while expiring subscription shares', SQLERRM);
14:34:48  77  END EXPIRE_ALL_SHARES;
14:34:48  78  
14:34:48  79  PROCEDURE SUB_SHARE_BY_GROUP_ID (
14:34:48  80  	in_group_id	 IN  ACCOUNT.GROUP_ID%TYPE,
14:34:48  81  	in_start	 IN  NUMBER,
14:34:48  82  	in_end		 IN  NUMBER,
14:34:48  83  	in_expired	 IN  NUMBER,
14:34:48  84  	out_result_set	 OUT SYS_REFCURSOR,
14:34:48  85  	out_shares_count OUT NUMBER
14:34:48  86  ) AS
14:34:48  87  SPROC_NAME CONSTANT VARCHAR2(32) := 'SUB_SHARE_BY_GROUP_ID';
14:34:48  88  range_diff NUMBER := 0;
14:34:48  89  upper_bond_diff NUMBER := 0;
14:34:48  90  l_start NUMBER := 0;
14:34:48  91  l_end   NUMBER := 0;
14:34:48  92  BEGIN
14:34:48  93  	--Normalize the end points [START]
14:34:48  94  	IF (in_start IS NULL OR in_start < 0) Then
14:34:48  95  	  l_start := 0;
14:34:48  96  	ELSE
14:34:48  97  	  l_start := in_start;
14:34:48  98  	END IF;
14:34:48  99  
14:34:48 100  	IF (in_end IS NULL) Then
14:34:48 101  	  l_end := 11;
14:34:48 102  	ELSE
14:34:48 103  	  l_end := in_end;
14:34:48 104  	END IF;
14:34:48 105  
14:34:48 106  	l_start := l_start + 1;
14:34:48 107  	l_end	:= l_end   + 1;
14:34:48 108  
14:34:48 109  	range_diff := l_end - l_start;
14:34:48 110  	upper_bond_diff :=  range_diff - GLOBAL_CONSTANTS_V18.MAX_RETURN_COUNT;
14:34:48 111  
14:34:48 112  	IF (upper_bond_diff > 0) Then
14:34:48 113  	  l_end := l_end - upper_bond_diff;
14:34:48 114  	END IF;
14:34:48 115  	--Normalize the end points [END]
14:34:48 116  
14:34:48 117  	BEGIN
14:34:48 118  	  SELECT
14:34:48 119  	    COUNT(1) INTO out_shares_count
14:34:48 120  	  FROM
14:34:48 121  	    GROUP_ACCOUNT ga,
14:34:48 122  	    SUBSCRIPTION_SHARE ss,
14:34:48 123  	    ACCOUNT a
14:34:48 124  	  WHERE
14:34:48 125  	    a.GROUP_ID		= in_group_id AND
14:34:48 126  	    a.Id		= ss.borrower_account_id And
14:34:48 127  	    ss.GROUP_ACCOUNT_ID = ga.ID;
14:34:48 128  	END;
14:34:48 129  
14:34:48 130  	IF in_expired > 0 THEN
14:34:48 131  	BEGIN
14:34:48 132  	    OPEN out_result_set FOR
14:34:48 133  	    SELECT
14:34:48 134  	      *
14:34:48 135  	    FROM
14:34:48 136  	      (SELECT rownum rnum, q.*
14:34:48 137  	       FROM
14:34:48 138  		(SELECT
14:34:48 139  		   ga.SUBSCRIPTION_ID,
14:34:48 140  		   ss.START_DATE,
14:34:48 141  		   ss.END_DATE,
14:34:48 142  		   a2.GROUP_ID AS PARENT_GROUP_ID
14:34:48 143  		 FROM
14:34:48 144  		   GROUP_ACCOUNT ga,
14:34:48 145  		   SUBSCRIPTION_SHARE ss,
14:34:48 146  		   ACCOUNT a,
14:34:48 147  		   SUBSCRIPTION s,
14:34:48 148  		   ACCOUNT a2
14:34:48 149  		 WHERE
14:34:48 150  		   a.GROUP_ID	       = in_group_id AND
14:34:48 151  		   a.ID 	       = ss.BORROWER_ACCOUNT_ID AND
14:34:48 152  		   ss.GROUP_ACCOUNT_ID = ga.ID	AND
14:34:48 153  		   ga.SUBSCRIPTION_ID  = s.ID AND
14:34:48 154  		   s.ACCOUNT_ID        = a2.ID
14:34:48 155  		) Q
14:34:48 156  	      WHERE rownum <= l_end)
14:34:48 157  	    WHERE rnum >= l_Start;
14:34:48 158  	END;
14:34:48 159  	ELSE
14:34:48 160  	BEGIN
14:34:48 161  	    OPEN out_result_set FOR
14:34:48 162  	    SELECT
14:34:48 163  	      *
14:34:48 164  	    FROM
14:34:48 165  	      (SELECT rownum rnum, q.*
14:34:48 166  	       FROM
14:34:48 167  		(SELECT
14:34:48 168  		   ga.SUBSCRIPTION_ID,
14:34:48 169  		   ss.START_DATE,
14:34:48 170  		   ss.END_DATE,
14:34:48 171  		   a2.GROUP_ID AS PARENT_GROUP_ID
14:34:48 172  		 FROM
14:34:48 173  		   GROUP_ACCOUNT ga,
14:34:48 174  		   SUBSCRIPTION_SHARE ss,
14:34:48 175  		   ACCOUNT a,
14:34:48 176  		   SUBSCRIPTION s,
14:34:48 177  		   ACCOUNT a2
14:34:48 178  		 WHERE
14:34:48 179  		   a.GROUP_ID	       = in_group_id AND
14:34:48 180  		   a.ID 	       = ss.BORROWER_ACCOUNT_ID AND
14:34:48 181  		   SYSDATE BETWEEN START_DATE AND END_DATE AND
14:34:48 182  		   ss.GROUP_ACCOUNT_ID = ga.ID AND
14:34:48 183  		   ga.SUBSCRIPTION_ID  = s.ID  AND
14:34:48 184  		   s.ACCOUNT_ID        = a2.ID
14:34:48 185  		) Q
14:34:48 186  	      WHERE rownum <= l_end)
14:34:48 187  	    WHERE rnum >= l_start;
14:34:48 188  	  END;
14:34:48 189  	END IF;
14:34:48 190  EXCEPTION
14:34:48 191  WHEN NO_DATA_FOUND THEN
14:34:48 192  	NULL;
14:34:48 193  WHEN OTHERS THEN
14:34:48 194  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 195  	  SPROC_NAME, 'Unknow error while retrieving subscription share info by group id', SQLERRM);
14:34:48 196  END SUB_SHARE_BY_GROUP_ID;
14:34:48 197  
14:34:48 198  PROCEDURE IS_VALID_IP_ADDRESS (
14:34:48 199  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
14:34:48 200  	in_ip_low IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
14:34:48 201  	in_ip_high IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
14:34:48 202  	out_is_valid	    OUT NUMBER
14:34:48 203  ) AS
14:34:48 204  SPROC_NAME CONSTANT VARCHAR2(32) := 'IS_VALID_IP_ADDRESS';
14:34:48 205  BEGIN
14:34:48 206  	SELECT
14:34:48 207  	  COUNT(1) INTO out_is_valid
14:34:48 208  	FROM
14:34:48 209  	  GROUP_ACCOUNT_IP_RANGE,
14:34:48 210  	  GROUP_ACCOUNT,
14:34:48 211  	  SUBSCRIPTION,
14:34:48 212  	  OFFER_CHAIN
14:34:48 213  	WHERE
14:34:48 214  	  GROUP_ACCOUNT.ID = GROUP_ACCOUNT_ID AND
14:34:48 215  	  GROUP_ACCOUNT.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND
14:34:48 216  	  SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID AND
14:34:48 217  	  OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID = 'GL' AND
14:34:48 218  	 GROUP_ACCOUNT_ID = in_group_account_id AND
14:34:48 219  	 (
14:34:48 220  	  (in_ip_high > minimum_ip_high and in_ip_high < maximum_ip_high) or
14:34:48 221  	  (in_ip_high = minimum_ip_high and (in_ip_low >= minimum_ip_low and in_ip_low <= maximum_ip_low)) or
14:34:48 222  	  (in_ip_high = maximum_ip_high and (in_ip_low >= minimum_ip_low and in_ip_low <= maximum_ip_low))
14:34:48 223  	 ) AND
14:34:48 224  	 GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V18.GROUP_ACC_IP_RNG_ACTIVE;
14:34:48 225  EXCEPTION
14:34:48 226  WHEN OTHERS THEN
14:34:48 227  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 228  	  SPROC_NAME, 'Error while checking IP', SQLERRM);
14:34:48 229  END IS_VALID_IP_ADDRESS;
14:34:48 230  
14:34:48 231  PROCEDURE IS_VALID_EMAIL_DOMAIN (
14:34:48 232  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:48 233  	in_email_domain     IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
14:34:48 234  	out_is_valid	    OUT NUMBER
14:34:48 235  ) AS
14:34:48 236  SPROC_NAME CONSTANT VARCHAR2(32) := 'IS_VALID_EMAIL_DOMAIN';
14:34:48 237  var_second_level_domain GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE;
14:34:48 238  var_third_level_domain GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE;
14:34:48 239  BEGIN
14:34:48 240  	var_second_level_domain := REGEXP_REPLACE(in_email_domain, '.*?([^\.]+\.[^\.]+)$', '\1');
14:34:48 241  	var_third_level_domain := REGEXP_REPLACE(in_email_domain, '.*?(([^\.]+\.){2}[^\.]+)$', '\1');
14:34:48 242  
14:34:48 243  	SELECT
14:34:48 244  	  COUNT(1) INTO out_is_valid
14:34:48 245  	FROM
14:34:48 246  	  GROUP_ACCOUNT_EMAIL_DOMAIN gaed,
14:34:48 247  	  GROUP_ACCOUNT ga,
14:34:48 248  	  SUBSCRIPTION s,
14:34:48 249  	  OFFER_CHAIN oc
14:34:48 250  	WHERE
14:34:48 251  	  ga.ID = gaed.GROUP_ACCOUNT_ID AND
14:34:48 252  	  ga.SUBSCRIPTION_ID = s.ID AND
14:34:48 253  	  s.OFFER_CHAIN_ID = oc.ID AND
14:34:48 254  	  oc.GROUP_ACCOUNT_TYPE_ID IN ('GL', 'KL') AND
14:34:48 255  	  gaed.GROUP_ACCOUNT_ID = in_group_account_id AND
14:34:48 256  	  (gaed.EMAIL_DOMAIN = var_third_level_domain OR gaed.EMAIL_DOMAIN = var_second_level_domain) AND
14:34:48 257  	  gaed.IS_ACTIVE = 1;
14:34:48 258  EXCEPTION
14:34:48 259  WHEN OTHERS THEN
14:34:48 260  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 261  	  SPROC_NAME, 'Error while checking email domain', SQLERRM);
14:34:48 262  END IS_VALID_EMAIL_DOMAIN;
14:34:48 263  
14:34:48 264  PROCEDURE GET_SUBSCRIPTION_SHARE (
14:34:48 265  	in_group_account_id    IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE,
14:34:48 266  	In_Borrower_Account_Id In SUBSCRIPTION_SHARE.BORROWER_ACCOUNT_ID%Type,
14:34:48 267  	out_Result_Set	       OUT Sys_Refcursor
14:34:48 268  ) AS
14:34:48 269  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_SUBSCRIPTION_SHARE';
14:34:48 270  BEGIN
14:34:48 271  	BEGIN
14:34:48 272  	   OPEN out_result_set FOR
14:34:48 273  	   SELECT
14:34:48 274  	      ss.ID,
14:34:48 275  	      ss.GROUP_ACCOUNT_ID,
14:34:48 276  	      ss.BORROWER_ACCOUNT_ID,
14:34:48 277  	      ss.IP_ADDRESS,
14:34:48 278  	      ss.START_DATE,
14:34:48 279  	      ss.END_DATE,
14:34:48 280  	      ss.CREATED_BY,
14:34:48 281  	      ss.CREATE_DATE,
14:34:48 282  	      ss.UPDATED_BY,
14:34:48 283  	      ss.UPDATE_DATE,
14:34:48 284  	      a.GROUP_ID AS BORROWER_GROUP_ID
14:34:48 285  	   FROM
14:34:48 286  	     SUBSCRIPTION_SHARE ss,
14:34:48 287  	     ACCOUNT a
14:34:48 288  	   WHERE
14:34:48 289  	     ss.GROUP_ACCOUNT_ID    = in_group_account_id AND
14:34:48 290  	     ss.BORROWER_ACCOUNT_ID = in_borrower_account_id AND
14:34:48 291  	     SYSDATE BETWEEN ss.START_DATE AND END_DATE AND
14:34:48 292  	     ss.BORROWER_ACCOUNT_ID  = a.ID;
14:34:48 293  	END;
14:34:48 294  EXCEPTION
14:34:48 295  WHEN OTHERS THEN
14:34:48 296  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 297  	  Sproc_Name, 'Error while getting subscription share', Sqlerrm);
14:34:48 298  END GET_SUBSCRIPTION_SHARE;
14:34:48 299  
14:34:48 300  PROCEDURE GET_GROUP_ACCOUNT_BY_SUB_ID (
14:34:48 301  	in_subscription_id IN Group_Account.SUBSCRIPTION_ID%TYPE,
14:34:48 302  	out_result_set	   OUT SYS_REFCURSOR
14:34:48 303  ) As
14:34:48 304  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_ACCOUNT_BY_SUB_ID';
14:34:48 305  BEGIN
14:34:48 306  OPEN out_result_set FOR
14:34:48 307  	SELECT
14:34:48 308  	  ID,
14:34:48 309  	  SUBSCRIPTION_ID,
14:34:48 310  	  GROUP_NAME,
14:34:48 311  	  FIRST_NAME,
14:34:48 312  	  LAST_NAME,
14:34:48 313  	  EMAIL,
14:34:48 314  	  PHONE,
14:34:48 315  	  ORGANIZATION_TYPE,
14:34:48 316  	  SEATS,
14:34:48 317  	  SEAT_TTL_IN_HOURS,
14:34:48 318  	  CREATE_DATE,
14:34:48 319  	  CREATED_BY,
14:34:48 320  	  UPDATE_DATE,
14:34:48 321  	  UPDATED_BY
14:34:48 322  	FROM
14:34:48 323  	  GROUP_ACCOUNT
14:34:48 324  	Where
14:34:48 325  	  Subscription_Id = in_subscription_id;
14:34:48 326  EXCEPTION
14:34:48 327  WHEN OTHERS THEN
14:34:48 328  	Procs_Common_V18.Throw_Exception(APP_EXCEPTION_CODES_V18.Unknown_Error,
14:34:48 329  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 330  
14:34:48 331  END GET_GROUP_ACCOUNT_BY_SUB_ID;
14:34:48 332  
14:34:48 333  PROCEDURE CREATE_GROUP_ACCOUNT (
14:34:48 334  	in_subscription_id	 IN NUMBER,
14:34:48 335  	in_group_name		 IN VARCHAR2,
14:34:48 336  	in_first_name		 IN VARCHAR2,
14:34:48 337  	in_last_name		 IN VARCHAR2,
14:34:48 338  	in_email		 IN VARCHAR2,
14:34:48 339  	in_phone		 IN VARCHAR2,
14:34:48 340  	in_organization_type	 IN VARCHAR2,
14:34:48 341  	in_seats		 IN NUMBER,
14:34:48 342  	in_seat_ttl_in_hours	 IN NUMBER,
14:34:48 343  	in_ip			 IN NUMBER,
14:34:48 344  	in_created_by		 IN VARCHAR2
14:34:48 345  ) AS
14:34:48 346  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_GROUP_ACCOUNT';
14:34:48 347  BEGIN
14:34:48 348  
14:34:48 349  	CORE_OWNER.PROCS_GROUP_ACCOUNT_CRU_V18.CREATE_GROUP_ACCOUNT(
14:34:48 350  	  in_subscription_id => in_subscription_id,
14:34:48 351  	  in_group_name => in_group_name,
14:34:48 352  	  in_first_name => in_first_name,
14:34:48 353  	  in_last_name => in_last_name,
14:34:48 354  	  in_email => in_email,
14:34:48 355  	  in_phone => in_phone,
14:34:48 356  	  in_organization_type => in_organization_type,
14:34:48 357  	  in_seats => in_seats,
14:34:48 358  	  in_seat_ttl_in_hours => in_seat_ttl_in_hours,
14:34:48 359  	  in_ip => in_ip,
14:34:48 360  	  in_created_by => in_created_by
14:34:48 361  	);
14:34:48 362  
14:34:48 363  END CREATE_GROUP_ACCOUNT;
14:34:48 364  
14:34:48 365  PROCEDURE GET_SUBSCRIPTION_SHARES (
14:34:48 366  	in_group_account_id IN NUMBER,
14:34:48 367  	in_start	    IN NUMBER,
14:34:48 368  	in_end		    IN NUMBER,
14:34:48 369  	out_Result_Set	    OUT Sys_Refcursor
14:34:48 370  ) AS
14:34:48 371  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_SUBSCRIPTION_SHARES';
14:34:48 372  range_diff NUMBER := 0;
14:34:48 373  upper_bond_diff NUMBER := 0;
14:34:48 374  l_start NUMBER := 0;
14:34:48 375  l_end   NUMBER := 0;
14:34:48 376  BEGIN
14:34:48 377  	-- Normalize the end points [START]
14:34:48 378  	IF (in_start IS NULL OR in_start < 0) Then
14:34:48 379  	  l_start := 0;
14:34:48 380  	ELSE
14:34:48 381  	  l_start := in_start;
14:34:48 382  	END IF;
14:34:48 383  
14:34:48 384  	IF (in_end IS NULL) Then
14:34:48 385  	  l_end := 11;
14:34:48 386  	ELSE
14:34:48 387  	  l_end := in_end;
14:34:48 388  	END IF;
14:34:48 389  
14:34:48 390  	l_start := l_start + 1;
14:34:48 391  	l_end	:= l_end   + 1;
14:34:48 392  
14:34:48 393  	range_diff := l_end - l_start;
14:34:48 394  	upper_bond_diff :=  range_diff - GLOBAL_CONSTANTS_V18.MAX_RETURN_COUNT;
14:34:48 395  
14:34:48 396  	IF (upper_bond_diff > 0) Then
14:34:48 397  	  l_end := l_end - upper_bond_diff;
14:34:48 398  	END IF;
14:34:48 399  	-- Normalize the end points [END]
14:34:48 400  
14:34:48 401  	BEGIN
14:34:48 402  	   OPEN out_result_set FOR
14:34:48 403  	   SELECT *
14:34:48 404  	   FROM
14:34:48 405  	     (SELECT rownum rnum, Q.*
14:34:48 406  	      FROM
14:34:48 407  	       (SELECT
14:34:48 408  		  ss.ID,
14:34:48 409  		  ss.GROUP_ACCOUNT_ID,
14:34:48 410  		  ss.BORROWER_ACCOUNT_ID,
14:34:48 411  		  ss.IP_ADDRESS,
14:34:48 412  		  ss.START_DATE,
14:34:48 413  		  ss.END_DATE,
14:34:48 414  		  ss.CREATED_BY,
14:34:48 415  		  ss.CREATE_DATE,
14:34:48 416  		  ss.UPDATED_BY,
14:34:48 417  		  ss.UPDATE_DATE,
14:34:48 418  		  a.GROUP_ID AS BORROWER_GROUP_ID
14:34:48 419  		FROM
14:34:48 420  		  SUBSCRIPTION_SHARE ss,
14:34:48 421  		  ACCOUNT a,
14:34:48 422  		  LICENSE l,
14:34:48 423  		  GROUP_ACCOUNT ga
14:34:48 424  		WHERE
14:34:48 425  		  ss.GROUP_ACCOUNT_ID = in_group_account_id AND
14:34:48 426  		  ss.GROUP_ACCOUNT_ID = ga.ID AND
14:34:48 427  		  GA.SUBSCRIPTION_ID = l.SUBSCRIPTION_ID AND
14:34:48 428  		  SYSDATE BETWEEN l.START_DATE AND l.ENTITLEMENT_END_DATE AND
14:34:48 429  		  SYSDATE BETWEEN ss.START_DATE AND ss.END_DATE AND
14:34:48 430  		  ss.BORROWER_ACCOUNT_ID  = a.ID
14:34:48 431  	      ) Q
14:34:48 432  	    WHERE rownum <= l_end)
14:34:48 433  	  WHERE rnum >= l_start;
14:34:48 434  	END;
14:34:48 435  EXCEPTION
14:34:48 436  WHEN OTHERS THEN
14:34:48 437  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 438  	  SPROC_NAME, 'Unknown error while retrieving subscription shares', SQLERRM);
14:34:48 439  END GET_SUBSCRIPTION_SHARES;
14:34:48 440  
14:34:48 441  PROCEDURE GET_GROUP_ACCOUNT_BY_IP (
14:34:48 442  	in_ip_low	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
14:34:48 443  	in_ip_high	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
14:34:48 444  	out_result_set	      OUT SYS_REFCURSOR
14:34:48 445  ) AS
14:34:48 446  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_ACCOUNT_BY_IP';
14:34:48 447  BEGIN
14:34:48 448  	BEGIN
14:34:48 449  	  OPEN out_result_set FOR
14:34:48 450  	  SELECT
14:34:48 451  	    ID,
14:34:48 452  	    SUBSCRIPTION_ID,
14:34:48 453  	    GROUP_NAME,
14:34:48 454  	    FIRST_NAME,
14:34:48 455  	    LAST_NAME,
14:34:48 456  	    EMAIL,
14:34:48 457  	    PHONE,
14:34:48 458  	    ORGANIZATION_TYPE,
14:34:48 459  	    SEATS,
14:34:48 460  	    SEAT_TTL_IN_HOURS,
14:34:48 461  	    CREATE_DATE,
14:34:48 462  	    CREATED_BY,
14:34:48 463  	    UPDATE_DATE,
14:34:48 464  	    UPDATED_BY
14:34:48 465  	  FROM
14:34:48 466  	    GROUP_ACCOUNT
14:34:48 467  	  WHERE
14:34:48 468  	    ID IN (
14:34:48 469  	      SELECT
14:34:48 470  		GROUP_ACCOUNT_ID
14:34:48 471  	      FROM
14:34:48 472  		GROUP_ACCOUNT_IP_RANGE,
14:34:48 473  		GROUP_ACCOUNT,
14:34:48 474  		SUBSCRIPTION,
14:34:48 475  		OFFER_CHAIN
14:34:48 476  	      WHERE
14:34:48 477  		GROUP_ACCOUNT.ID = GROUP_ACCOUNT_ID
14:34:48 478  	      AND
14:34:48 479  		GROUP_ACCOUNT.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND
14:34:48 480  		SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID AND
14:34:48 481  		OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID = 'GL'
14:34:48 482  	      AND
14:34:48 483  		(
14:34:48 484  		  (in_ip_high > minimum_ip_high and in_ip_high < maximum_ip_high) or
14:34:48 485  		  (in_ip_high = minimum_ip_high and (in_ip_low >= minimum_ip_low and in_ip_low <= maximum_ip_low)) or
14:34:48 486  		  (in_ip_high = maximum_ip_high and (in_ip_low >= minimum_ip_low and in_ip_low <= maximum_ip_low))
14:34:48 487  		)
14:34:48 488  	      AND
14:34:48 489  		GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V18.GROUP_ACC_IP_RNG_ACTIVE
14:34:48 490  	    );
14:34:48 491  	  END;
14:34:48 492  EXCEPTION
14:34:48 493  WHEN OTHERS THEN
14:34:48 494  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 495  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 496  END GET_GROUP_ACCOUNT_BY_IP;
14:34:48 497  
14:34:48 498  PROCEDURE GET_GROUP_ACCOUNT_BY_EMAIL (
14:34:48 499  	in_email_domain     IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
14:34:48 500  	out_result_set	    OUT SYS_REFCURSOR
14:34:48 501  ) AS
14:34:48 502  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_ACCOUNT_BY_EMAIL';
14:34:48 503  var_second_level_domain GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE;
14:34:48 504  var_third_level_domain GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE;
14:34:48 505  BEGIN
14:34:48 506  	var_second_level_domain := REGEXP_REPLACE(in_email_domain, '.*?([^\.]+\.[^\.]+)$', '\1');
14:34:48 507  	var_third_level_domain := REGEXP_REPLACE(in_email_domain, '.*?(([^\.]+\.){2}[^\.]+)$', '\1');
14:34:48 508  	BEGIN
14:34:48 509  	  OPEN out_result_set FOR
14:34:48 510  	  SELECT
14:34:48 511  	    ID,
14:34:48 512  	    SUBSCRIPTION_ID,
14:34:48 513  	    GROUP_NAME,
14:34:48 514  	    FIRST_NAME,
14:34:48 515  	    LAST_NAME,
14:34:48 516  	    EMAIL,
14:34:48 517  	    PHONE,
14:34:48 518  	    ORGANIZATION_TYPE,
14:34:48 519  	    SEATS,
14:34:48 520  	    SEAT_TTL_IN_HOURS,
14:34:48 521  	    CREATE_DATE,
14:34:48 522  	    CREATED_BY,
14:34:48 523  	    UPDATE_DATE,
14:34:48 524  	    UPDATED_BY
14:34:48 525  	  FROM
14:34:48 526  	    GROUP_ACCOUNT
14:34:48 527  	  WHERE
14:34:48 528  	    ID IN (
14:34:48 529  	      SELECT
14:34:48 530  		GROUP_ACCOUNT_ID
14:34:48 531  	      FROM
14:34:48 532  		GROUP_ACCOUNT_EMAIL_DOMAIN gaed,
14:34:48 533  		GROUP_ACCOUNT ga,
14:34:48 534  		SUBSCRIPTION s,
14:34:48 535  		OFFER_CHAIN oc
14:34:48 536  	      WHERE
14:34:48 537  		ga.ID = gaed.GROUP_ACCOUNT_ID AND
14:34:48 538  		ga.SUBSCRIPTION_ID = s.ID AND
14:34:48 539  		s.OFFER_CHAIN_ID = oc.ID AND
14:34:48 540  		oc.GROUP_ACCOUNT_TYPE_ID in ('GL', 'KL') AND
14:34:48 541  		(gaed.EMAIL_DOMAIN = var_third_level_domain OR gaed.EMAIL_DOMAIN = var_second_level_domain) AND
14:34:48 542  		gaed.IS_ACTIVE = 1
14:34:48 543  	    );
14:34:48 544  	  END;
14:34:48 545  EXCEPTION
14:34:48 546  WHEN OTHERS THEN
14:34:48 547  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 548  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 549  END GET_GROUP_ACCOUNT_BY_EMAIL;
14:34:48 550  
14:34:48 551  PROCEDURE GET_GROUP_ACCOUNT_IP_RANGES (
14:34:48 552  	in_group_account_id   IN NUMBER,
14:34:48 553  	in_start	      IN NUMBER,
14:34:48 554  	in_end		      IN NUMBER,
14:34:48 555  	in_status	      IN NUMBER,
14:34:48 556  	out_record_count      OUT NUMBER,
14:34:48 557  	out_result_set	      OUT SYS_REFCURSOR
14:34:48 558  ) AS
14:34:48 559  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_ACCOUNT_IP_RANGES';
14:34:48 560  range_diff NUMBER := 0;
14:34:48 561  upper_bond_diff NUMBER := 0;
14:34:48 562  l_start NUMBER := 0;
14:34:48 563  l_end   NUMBER := 0;
14:34:48 564  BEGIN
14:34:48 565  	--Normalize the end points [START]
14:34:48 566  	IF (in_start IS NULL OR in_start < 0) Then
14:34:48 567  	  l_start := 0;
14:34:48 568  	ELSE
14:34:48 569  	  l_start := in_start;
14:34:48 570  	END IF;
14:34:48 571  
14:34:48 572  	IF (in_end IS NULL) Then
14:34:48 573  	  l_end := 11;
14:34:48 574  	ELSE
14:34:48 575  	  l_end := in_end;
14:34:48 576  	END IF;
14:34:48 577  
14:34:48 578  	l_start := l_start + 1;
14:34:48 579  	l_end	:= l_end   + 1;
14:34:48 580  
14:34:48 581  	range_diff := l_end - l_start;
14:34:48 582  	upper_bond_diff :=  range_diff - GLOBAL_CONSTANTS_V18.MAX_RETURN_COUNT;
14:34:48 583  
14:34:48 584  	IF (upper_bond_diff > 0) Then
14:34:48 585  	  l_end := l_end - upper_bond_diff;
14:34:48 586  	END IF;
14:34:48 587  	--Normalize the end points [END]
14:34:48 588  
14:34:48 589  	--Total count of records [START]
14:34:48 590  	SELECT
14:34:48 591  	  COUNT(1) INTO out_record_count
14:34:48 592  	FROM
14:34:48 593  	  GROUP_ACCOUNT_IP_RANGE
14:34:48 594  	WHERE
14:34:48 595  	  GROUP_ACCOUNT_ID = in_group_account_id AND
14:34:48 596  	  (in_status IS NULL OR GROUP_ACC_IP_RNG_STATUS_ID = in_status);
14:34:48 597  	--Total count of records [END]
14:34:48 598  
14:34:48 599  	OPEN out_result_set FOR
14:34:48 600  	SELECT
14:34:48 601  	  *
14:34:48 602  	FROM
14:34:48 603  	  (SELECT rownum rnum, q.*
14:34:48 604  	   FROM
14:34:48 605  	    (SELECT
14:34:48 606  	       ID,
14:34:48 607  	       GROUP_ACCOUNT_ID,
14:34:48 608  	       MINIMUM_IP_STRING,
14:34:48 609  	       MAXIMUM_IP_STRING,
14:34:48 610  	       GROUP_ACC_IP_RNG_STATUS_ID
14:34:48 611  	     FROM
14:34:48 612  	       GROUP_ACCOUNT_IP_RANGE
14:34:48 613  	     WHERE
14:34:48 614  	       GROUP_ACCOUNT_ID = in_group_account_id AND
14:34:48 615  	       (in_status IS NULL OR
14:34:48 616  		GROUP_ACC_IP_RNG_STATUS_ID = in_status)
14:34:48 617  	    ) Q
14:34:48 618  	  WHERE rownum <= l_end)
14:34:48 619  	WHERE rnum >= l_Start;
14:34:48 620  EXCEPTION
14:34:48 621  WHEN OTHERS THEN
14:34:48 622  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 623  	  SPROC_NAME, 'Unknown error while retrieving IP ranges ', SQLERRM);
14:34:48 624  END GET_GROUP_ACCOUNT_IP_RANGES;
14:34:48 625  
14:34:48 626  PROCEDURE GET_GRP_ACCNT_EMAIL_DOMAINS (
14:34:48 627  	in_group_account_id   IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:48 628  	in_start	      IN NUMBER,
14:34:48 629  	in_end		      IN NUMBER,
14:34:48 630  	in_status	      IN GROUP_ACCOUNT_EMAIL_DOMAIN.IS_ACTIVE%TYPE,
14:34:48 631  	out_record_count      OUT NUMBER,
14:34:48 632  	out_result_set	      OUT SYS_REFCURSOR
14:34:48 633  ) AS
14:34:48 634  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRP_ACCNT_EMAIL_DOMAINS';
14:34:48 635  range_diff NUMBER := 0;
14:34:48 636  upper_bond_diff NUMBER := 0;
14:34:48 637  l_start NUMBER := 0;
14:34:48 638  l_end   NUMBER := 0;
14:34:48 639  BEGIN
14:34:48 640  	--Normalize the end points [START]
14:34:48 641  	IF (in_start IS NULL OR in_start < 0) Then
14:34:48 642  	  l_start := 0;
14:34:48 643  	ELSE
14:34:48 644  	  l_start := in_start;
14:34:48 645  	END IF;
14:34:48 646  
14:34:48 647  	IF (in_end IS NULL) Then
14:34:48 648  	  l_end := 11;
14:34:48 649  	ELSE
14:34:48 650  	  l_end := in_end;
14:34:48 651  	END IF;
14:34:48 652  
14:34:48 653  	l_start := l_start + 1;
14:34:48 654  	l_end	:= l_end   + 1;
14:34:48 655  
14:34:48 656  	range_diff := l_end - l_start;
14:34:48 657  	upper_bond_diff :=  range_diff - GLOBAL_CONSTANTS_V18.MAX_RETURN_COUNT;
14:34:48 658  
14:34:48 659  	IF (upper_bond_diff > 0) Then
14:34:48 660  	  l_end := l_end - upper_bond_diff;
14:34:48 661  	END IF;
14:34:48 662  	--Normalize the end points [END]
14:34:48 663  
14:34:48 664  	--Total count of records [START]
14:34:48 665  	SELECT
14:34:48 666  	  COUNT(1) INTO out_record_count
14:34:48 667  	FROM
14:34:48 668  	  GROUP_ACCOUNT_EMAIL_DOMAIN
14:34:48 669  	WHERE
14:34:48 670  	  GROUP_ACCOUNT_ID = in_group_account_id AND
14:34:48 671  	  (IS_ACTIVE IS NULL OR IS_ACTIVE = in_status);
14:34:48 672  	--Total count of records [END]
14:34:48 673  
14:34:48 674  	OPEN out_result_set FOR
14:34:48 675  	SELECT
14:34:48 676  	  *
14:34:48 677  	FROM
14:34:48 678  	  (SELECT rownum rnum, q.*
14:34:48 679  	   FROM
14:34:48 680  	    (SELECT
14:34:48 681  	      ID,
14:34:48 682  	      GROUP_ACCOUNT_ID,
14:34:48 683  	      EMAIL_DOMAIN,
14:34:48 684  	      IS_ACTIVE
14:34:48 685  	     FROM
14:34:48 686  	       GROUP_ACCOUNT_EMAIL_DOMAIN
14:34:48 687  	     WHERE
14:34:48 688  	       GROUP_ACCOUNT_ID = in_group_account_id AND
14:34:48 689  	       (in_status IS NULL OR
14:34:48 690  		IS_ACTIVE = in_status)
14:34:48 691  	    ) Q
14:34:48 692  	  WHERE rownum <= l_end)
14:34:48 693  	WHERE rnum >= l_Start;
14:34:48 694  
14:34:48 695  EXCEPTION
14:34:48 696  WHEN OTHERS THEN
14:34:48 697  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 698  	  SPROC_NAME, 'Unknown error while retrieving Email Domains ', SQLERRM);
14:34:48 699  END GET_GRP_ACCNT_EMAIL_DOMAINS;
14:34:48 700  
14:34:48 701  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_GA_ID (
14:34:48 702  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:48 703  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
14:34:48 704  ) AS
14:34:48 705  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_EMAIL_DOMAIN_BY_GA_ID';
14:34:48 706  BEGIN
14:34:48 707  	  PROCS_GROUP_ACCOUNT_CRU_V18.DISABLE_EMAIL_DOMAIN_BY_GA_ID(
14:34:48 708  	    in_group_account_id => in_group_account_id,
14:34:48 709  	    in_updated_by => in_updated_by
14:34:48 710  	  );
14:34:48 711  EXCEPTION
14:34:48 712  WHEN OTHERS THEN
14:34:48 713  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 714  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 715  END DISABLE_EMAIL_DOMAIN_BY_GA_ID;
14:34:48 716  
14:34:48 717  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_ID (
14:34:48 718  	in_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
14:34:48 719  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
14:34:48 720  ) AS
14:34:48 721  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_EMAIL_DOMAIN_BY_ID';
14:34:48 722  BEGIN
14:34:48 723  	  PROCS_GROUP_ACCOUNT_CRU_V18.DISABLE_EMAIL_DOMAIN_BY_ID(
14:34:48 724  	    in_id => in_id,
14:34:48 725  	    in_updated_by => in_updated_by
14:34:48 726  	  );
14:34:48 727  EXCEPTION
14:34:48 728  WHEN OTHERS THEN
14:34:48 729  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 730  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 731  END DISABLE_EMAIL_DOMAIN_BY_ID;
14:34:48 732  
14:34:48 733  PROCEDURE ADD_EMAIL_DOMAIN (
14:34:48 734  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
14:34:48 735  	in_email_domain IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
14:34:48 736  	in_created_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.CREATED_BY%TYPE
14:34:48 737  ) AS
14:34:48 738  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_EMAIL_DOMAIN';
14:34:48 739  var_ga_type OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID%TYPE;
14:34:48 740  var_is_dupe NUMBER(1);
14:34:48 741  var_group_account_count NUMBER := 0;
14:34:48 742  var_id  GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE;
14:34:48 743  NOT_GL EXCEPTION;
14:34:48 744  DUPE EXCEPTION;
14:34:48 745  BEGIN
14:34:48 746  	  SELECT OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID into var_ga_type
14:34:48 747  	  FROM
14:34:48 748  	    GROUP_ACCOUNT,
14:34:48 749  	    SUBSCRIPTION,
14:34:48 750  	    OFFER_CHAIN
14:34:48 751  	  WHERE
14:34:48 752  	    GROUP_ACCOUNT.ID = in_group_account_id AND
14:34:48 753  	    GROUP_ACCOUNT.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND
14:34:48 754  	    SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 755  	  ;
14:34:48 756  	  IF(var_ga_type != 'GL' and var_ga_type != 'KL' ) THEN
14:34:48 757  	    RAISE NOT_GL;
14:34:48 758  	  END IF;
14:34:48 759  
14:34:48 760  	  --check if email domain already exists
14:34:48 761  	  SELECT count(1) into var_group_account_count
14:34:48 762  	  FROM
14:34:48 763  	      GROUP_ACCOUNT_EMAIL_DOMAIN
14:34:48 764  	  WHERE
14:34:48 765  	      GROUP_ACCOUNT_ID= in_group_account_id AND
14:34:48 766  	      EMAIL_DOMAIN = in_email_domain
14:34:48 767  	  ;
14:34:48 768  
14:34:48 769  	  IF(var_group_account_count > 0) THEN
14:34:48 770  	      SELECT ID into var_id
14:34:48 771  	      FROM
14:34:48 772  		  GROUP_ACCOUNT_EMAIL_DOMAIN
14:34:48 773  	      WHERE
14:34:48 774  		  GROUP_ACCOUNT_ID= in_group_account_id AND
14:34:48 775  		  EMAIL_DOMAIN = in_email_domain AND
14:34:48 776  		  rownum <= 1;
14:34:48 777  	      PROCS_GROUP_ACCOUNT_CRU_V18.ENABLE_EMAIL_DOMAIN_BY_ID(
14:34:48 778  		  in_id => var_id,
14:34:48 779  		  in_updated_by => in_created_by
14:34:48 780  		  );
14:34:48 781  	  ELSE
14:34:48 782  	      PROCS_GROUP_ACCOUNT_CRU_V18.ADD_EMAIL_DOMAIN(
14:34:48 783  		  in_group_account_id => in_group_account_id,
14:34:48 784  		  in_email_domain => in_email_domain,
14:34:48 785  		      in_is_active => GLOBAL_STATUSES_V18.GROUP_ACC_EMAIL_DOMAIN_ACT,
14:34:48 786  		  in_created_by => in_created_by
14:34:48 787  	      );
14:34:48 788  	  END IF;
14:34:48 789  
14:34:48 790  EXCEPTION
14:34:48 791  WHEN NOT_GL THEN
14:34:48 792  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 793  	  SPROC_NAME, 'Group account type does not support Email Domains', SQLERRM);
14:34:48 794  WHEN OTHERS THEN
14:34:48 795  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 796  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 797  END ADD_EMAIL_DOMAIN;
14:34:48 798  
14:34:48 799  PROCEDURE CREATE_SUBSCRIPTION_SHARE (
14:34:48 800  	in_group_account_id    IN NUMBER,
14:34:48 801  	in_borrower_account_id IN NUMBER,
14:34:48 802  	in_ip_address	       IN VARCHAR2,
14:34:48 803  	in_email_domain        IN VARCHAR2,
14:34:48 804  	in_created_by	       IN VARCHAR2
14:34:48 805  ) AS
14:34:48 806  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_SUBSCRIPTION_SHARE';
14:34:48 807  ga_ttl_in_hours NUMBER := NULL;
14:34:48 808  start_date DATE := NULL;
14:34:48 809  end_date DATE := NULL;
14:34:48 810  BEGIN
14:34:48 811  	start_date := sysdate;
14:34:48 812  	end_date   := GLOBAL_CONSTANTS_V18.MAX_DATE;
14:34:48 813  
14:34:48 814  	BEGIN
14:34:48 815  	  SELECT SEAT_TTL_IN_HOURS into ga_ttl_in_hours
14:34:48 816  	  FROM GROUP_ACCOUNT, SUBSCRIPTION, OFFER_CHAIN
14:34:48 817  	  WHERE GROUP_ACCOUNT.ID = in_group_account_id AND
14:34:48 818  		GROUP_ACCOUNT.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND
14:34:48 819  		SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID AND
14:34:48 820  		OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID in ('GL', 'KL');
14:34:48 821  	EXCEPTION
14:34:48 822  	  WHEN no_data_found THEN
14:34:48 823  	    ga_ttl_in_hours := NULL;
14:34:48 824  	END;
14:34:48 825  
14:34:48 826  	IF (ga_ttl_in_hours IS NOT NULL) THEN
14:34:48 827  	  end_date := (start_date + (1/24 * ga_ttl_in_hours));
14:34:48 828  	END IF;
14:34:48 829  
14:34:48 830  	CORE_OWNER.PROCS_GROUP_ACCOUNT_CRU_V18.CREATE_SUBSCRIPTION_SHARE(
14:34:48 831  	  in_group_account_id => in_group_account_id,
14:34:48 832  	  in_borrower_account_id => in_borrower_account_id,
14:34:48 833  	  in_ip_address => in_ip_address,
14:34:48 834  	  in_email_domain => in_email_domain,
14:34:48 835  	  in_start_date => start_date,
14:34:48 836  	  in_end_date => end_date,
14:34:48 837  	  in_created_by => in_created_by
14:34:48 838  	);
14:34:48 839  END CREATE_SUBSCRIPTION_SHARE;
14:34:48 840  
14:34:48 841  
14:34:48 842  PROCEDURE GET_NUM_OCCUPIED_GROUP_SEATS (
14:34:48 843  	in_group_account_id   IN NUMBER,
14:34:48 844  	out_occupied_seats   OUT NUMBER
14:34:48 845  ) AS
14:34:48 846  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NUM_OCCUPIED_GROUP_SEATS';
14:34:48 847  BEGIN
14:34:48 848  	SELECT
14:34:48 849  	  PROCS_GROUP_ACCOUNT_V18.F_GET_NUM_OCCUPIED_GROUP_SEATS(in_group_account_id) INTO out_occupied_seats
14:34:48 850  	FROM dual;
14:34:48 851  EXCEPTION
14:34:48 852  WHEN OTHERS THEN
14:34:48 853  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 854  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 855  END GET_NUM_OCCUPIED_GROUP_SEATS;
14:34:48 856  
14:34:48 857  
14:34:48 858  FUNCTION F_GET_NUM_OCCUPIED_GROUP_SEATS (
14:34:48 859  	in_group_account_id   IN NUMBER
14:34:48 860  ) RETURN NUMBER IS
14:34:48 861  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NUM_OCCUPIED_GROUP_SEATS';
14:34:48 862  num_seats NUMBER;
14:34:48 863  BEGIN
14:34:48 864  	SELECT
14:34:48 865  	  COUNT(1) INTO num_seats
14:34:48 866  	FROM
14:34:48 867  	  SUBSCRIPTION_SHARE
14:34:48 868  	WHERE
14:34:48 869  	  GROUP_ACCOUNT_ID = in_group_account_id AND
14:34:48 870  	  SYSDATE BETWEEN START_DATE AND END_DATE;
14:34:48 871  	RETURN num_seats;
14:34:48 872  EXCEPTION
14:34:48 873  WHEN OTHERS THEN
14:34:48 874  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 875  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 876  END F_GET_NUM_OCCUPIED_GROUP_SEATS;
14:34:48 877  
14:34:48 878  -- *********************************************************************
14:34:48 879  -- *************** GROUP ACCOUNT IP RANGE JUNK *************************
14:34:48 880  -- *********************************************************************
14:34:48 881  -- I'm debating if this should be in a different package, but right now
14:34:48 882  -- I'm too lazy to move this else where.
14:34:48 883  -- *********************************************************************
14:34:48 884  
14:34:48 885  PROCEDURE DISABLE_IP_RANGES_BY_GA_ID (
14:34:48 886  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
14:34:48 887  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
14:34:48 888  ) AS
14:34:48 889  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_IP_RANGES_BY_GA_ID';
14:34:48 890  BEGIN
14:34:48 891  	  PROCS_GROUP_ACCOUNT_CRU_V18.DISABLE_IP_RANGES_BY_GA_ID(
14:34:48 892  	    in_group_account_id => in_group_account_id,
14:34:48 893  	    in_updated_by => in_updated_by
14:34:48 894  	  );
14:34:48 895  EXCEPTION
14:34:48 896  WHEN OTHERS THEN
14:34:48 897  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 898  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 899  END DISABLE_IP_RANGES_BY_GA_ID;
14:34:48 900  
14:34:48 901  PROCEDURE DISABLE_IP_RANGE_BY_ID (
14:34:48 902  	in_id IN GROUP_ACCOUNT_IP_RANGE.ID%TYPE,
14:34:48 903  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
14:34:48 904  ) AS
14:34:48 905  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_IP_RANGE_BY_ID';
14:34:48 906  BEGIN
14:34:48 907  	  PROCS_GROUP_ACCOUNT_CRU_V18.DISABLE_IP_RANGE_BY_ID(
14:34:48 908  	    in_id => in_id,
14:34:48 909  	    in_updated_by => in_updated_by
14:34:48 910  	  );
14:34:48 911  EXCEPTION
14:34:48 912  WHEN OTHERS THEN
14:34:48 913  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 914  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 915  END DISABLE_IP_RANGE_BY_ID;
14:34:48 916  
14:34:48 917  PROCEDURE ADD_IP_RANGE (
14:34:48 918  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
14:34:48 919  	in_minimum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_STRING%TYPE,
14:34:48 920  	in_minimum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
14:34:48 921  	in_minimum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
14:34:48 922  	in_maximum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_STRING%TYPE,
14:34:48 923  	in_maximum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_LOW%TYPE,
14:34:48 924  	in_maximum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_HIGH%TYPE,
14:34:48 925  	in_created_by IN GROUP_ACCOUNT_IP_RANGE.CREATED_BY%TYPE
14:34:48 926  ) AS
14:34:48 927  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_IP_RANGE';
14:34:48 928  var_ga_type OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID%TYPE;
14:34:48 929  var_is_dupe NUMBER(1);
14:34:48 930  NOT_GL EXCEPTION;
14:34:48 931  DUPE EXCEPTION;
14:34:48 932  BEGIN
14:34:48 933  	  SELECT OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID into var_ga_type
14:34:48 934  	  FROM
14:34:48 935  	    GROUP_ACCOUNT,
14:34:48 936  	    SUBSCRIPTION,
14:34:48 937  	    OFFER_CHAIN
14:34:48 938  	  WHERE
14:34:48 939  	    GROUP_ACCOUNT.ID = in_group_account_id AND
14:34:48 940  	    GROUP_ACCOUNT.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND
14:34:48 941  	    SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 942  	  ;
14:34:48 943  	  IF(var_ga_type != 'GL') THEN
14:34:48 944  	    RAISE NOT_GL;
14:34:48 945  	  END IF;
14:34:48 946  
14:34:48 947  	  PROCS_GROUP_ACCOUNT_CRU_V18.ADD_IP_RANGE(
14:34:48 948  	    in_group_account_id => in_group_account_id,
14:34:48 949  	    in_minimum_ip_string => in_minimum_ip_string,
14:34:48 950  	    in_minimum_ip_low => in_minimum_ip_low,
14:34:48 951  	    in_minimum_ip_high => in_minimum_ip_high,
14:34:48 952  	    in_maximum_ip_string => in_maximum_ip_string,
14:34:48 953  	    in_maximum_ip_low => in_maximum_ip_low,
14:34:48 954  	    in_maximum_ip_high => in_maximum_ip_high,
14:34:48 955  	    in_created_by => in_created_by
14:34:48 956  	  );
14:34:48 957  
14:34:48 958  	  -- Check for overlapping ip address range after insert.  Note that if another
14:34:48 959  	  -- call to add_ip_range has not completed, overlapping ip entries can occur.
14:34:48 960  	  SELECT count(1) into var_is_dupe
14:34:48 961  	  FROM
14:34:48 962  	    GROUP_ACCOUNT_IP_RANGE
14:34:48 963  	  WHERE
14:34:48 964  	    GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V18.GROUP_ACC_IP_RNG_ACTIVE AND
14:34:48 965  		((
14:34:48 966  		  (in_minimum_ip_high > minimum_ip_high and in_minimum_ip_high < maximum_ip_high) or
14:34:48 967  		  (in_minimum_ip_high = minimum_ip_high and (in_minimum_ip_low >= minimum_ip_low and in_minimum_ip_low <= maximum_ip_low)) or
14:34:48 968  		  (in_minimum_ip_high = maximum_ip_high and (in_minimum_ip_low >= minimum_ip_low and in_minimum_ip_low <= maximum_ip_low))
14:34:48 969  		) OR
14:34:48 970  
14:34:48 971  		(
14:34:48 972  		  (in_maximum_ip_high > minimum_ip_high and in_maximum_ip_high < maximum_ip_high) or
14:34:48 973  		  (in_maximum_ip_high = minimum_ip_high and (in_maximum_ip_low >= minimum_ip_low and in_maximum_ip_low <= maximum_ip_low)) or
14:34:48 974  		  (in_maximum_ip_high = maximum_ip_high and (in_maximum_ip_low >= minimum_ip_low and in_maximum_ip_low <= maximum_ip_low))
14:34:48 975  		)) AND
14:34:48 976  	    ROWNUM < 3;
14:34:48 977  
14:34:48 978  	  If(var_is_dupe > 1) THEN
14:34:48 979  	    RAISE DUPE;
14:34:48 980  	  END IF;
14:34:48 981  EXCEPTION
14:34:48 982  WHEN NOT_GL THEN
14:34:48 983  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 984  	  SPROC_NAME, 'Group account type does not support IPs', SQLERRM);
14:34:48 985  WHEN DUPE THEN
14:34:48 986  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 987  	  SPROC_NAME, 'The IP address range is already in use', SQLERRM);
14:34:48 988  WHEN OTHERS THEN
14:34:48 989  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 990  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 991  END ADD_IP_RANGE;
14:34:48 992  
14:34:48 993  PROCEDURE GET_GRP_ID_BY_GRP_ACCOUNT_ID (
14:34:48 994  	in_group_account_id IN NUMBER,
14:34:48 995  	out_group_id OUT NUMBER
14:34:48 996  ) AS
14:34:48 997  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRP_ID_BY_GRP_ACCOUNT_ID';
14:34:48 998  BEGIN
14:34:48 999  	SELECT
14:34:48 1000  	   a.group_id into out_group_id
14:34:48 1001  	 FROM
14:34:48 1002  	   account a,
14:34:48 1003  	   subscription s,
14:34:48 1004  	   group_account ga
14:34:48 1005  	 WHERE
14:34:48 1006  	   a.id = s.account_id and
14:34:48 1007  	   s.id = ga.subscription_id and
14:34:48 1008  	   ga.id = in_group_account_id and
14:34:48 1009  	   rownum < 2
14:34:48 1010  	 ;
14:34:48 1011  EXCEPTION
14:34:48 1012  WHEN NO_DATA_FOUND THEN
14:34:48 1013  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1014  	   SPROC_NAME, 'Bad group_account_id');
14:34:48 1015  WHEN OTHERS THEN
14:34:48 1016  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1017  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1018  END GET_GRP_ID_BY_GRP_ACCOUNT_ID;
14:34:48 1019  
14:34:48 1020  PROCEDURE GET_GRP_ID_BY_GRPACCIPRNG_ID (
14:34:48 1021  	 in_group_account_ip_range_id IN NUMBER,
14:34:48 1022  	 out_group_id OUT NUMBER
14:34:48 1023  ) AS
14:34:48 1024  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRP_ID_BY_GRPACCIPRNG_ID';
14:34:48 1025  BEGIN
14:34:48 1026  	 SELECT
14:34:48 1027  	   a.group_id into out_group_id
14:34:48 1028  	 FROM
14:34:48 1029  	   account a,
14:34:48 1030  	   subscription s,
14:34:48 1031  	   group_account ga,
14:34:48 1032  	   group_account_ip_range ir
14:34:48 1033  	 WHERE
14:34:48 1034  	   a.id = s.account_id and
14:34:48 1035  	   s.id = ga.subscription_id and
14:34:48 1036  	   ga.id = ir.group_account_id and
14:34:48 1037  	   ir.id = in_group_account_ip_range_id and
14:34:48 1038  	   rownum < 2
14:34:48 1039  	 ;
14:34:48 1040  EXCEPTION
14:34:48 1041  WHEN NO_DATA_FOUND THEN
14:34:48 1042  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1043  	   SPROC_NAME, 'Bad group_account_ip_range_id');
14:34:48 1044  WHEN OTHERS THEN
14:34:48 1045  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1046  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1047  END GET_GRP_ID_BY_GRPACCIPRNG_ID;
14:34:48 1048  
14:34:48 1049  PROCEDURE GET_GRP_ID_BY_EMAIL_DOM_ID (
14:34:48 1050  	 in_group_account_email_dom_id IN NUMBER,
14:34:48 1051  	 out_group_id OUT NUMBER
14:34:48 1052  ) AS
14:34:48 1053  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRP_ID_BY_EMAIL_DOM_ID';
14:34:48 1054  BEGIN
14:34:48 1055  	 SELECT
14:34:48 1056  	   a.group_id into out_group_id
14:34:48 1057  	 FROM
14:34:48 1058  	   account a,
14:34:48 1059  	   subscription s,
14:34:48 1060  	   group_account ga,
14:34:48 1061  	   group_account_email_domain ir
14:34:48 1062  	 WHERE
14:34:48 1063  	   a.id = s.account_id and
14:34:48 1064  	   s.id = ga.subscription_id and
14:34:48 1065  	   ga.id = ir.group_account_id and
14:34:48 1066  	   ir.id = in_group_account_email_dom_id and
14:34:48 1067  	   rownum < 2
14:34:48 1068  	 ;
14:34:48 1069  EXCEPTION
14:34:48 1070  WHEN NO_DATA_FOUND THEN
14:34:48 1071  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1072  	   SPROC_NAME, 'Bad group_account_ip_range_id');
14:34:48 1073  WHEN OTHERS THEN
14:34:48 1074  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1075  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1076  END GET_GRP_ID_BY_EMAIL_DOM_ID;
14:34:48 1077  
14:34:48 1078  PROCEDURE UPDATE_GROUP_ACCOUNT (
14:34:48 1079  	 in_group_account_id	  IN GROUP_ACCOUNT.ID%TYPE,
14:34:48 1080  	 in_group_name		  IN GROUP_ACCOUNT.GROUP_NAME%TYPE,
14:34:48 1081  	 in_first_name		  IN GROUP_ACCOUNT.FIRST_NAME%TYPE,
14:34:48 1082  	 in_last_name		  IN GROUP_ACCOUNT.LAST_NAME%TYPE,
14:34:48 1083  	 in_email		  IN GROUP_ACCOUNT.EMAIL%TYPE,
14:34:48 1084  	 in_phone		  IN GROUP_ACCOUNT.PHONE%TYPE,
14:34:48 1085  	 in_updated_by		  IN GROUP_ACCOUNT.UPDATED_BY%TYPE
14:34:48 1086  ) AS
14:34:48 1087  BEGIN
14:34:48 1088  	 PROCS_GROUP_ACCOUNT_CRU_V18.UPDATE_GROUP_ACCOUNT(
14:34:48 1089  	   in_group_account_id => in_group_account_id,
14:34:48 1090  	   in_group_name => in_group_name,
14:34:48 1091  	   in_first_name => in_first_name,
14:34:48 1092  	   in_last_name => in_last_name,
14:34:48 1093  	   in_email => in_email,
14:34:48 1094  	   in_phone => in_phone,
14:34:48 1095  	   in_updated_by => in_updated_by
14:34:48 1096  	 );
14:34:48 1097  END UPDATE_GROUP_ACCOUNT;
14:34:48 1098  
14:34:48 1099  PROCEDURE UPDATE_GROUP_ACCOUNT_SEATS (
14:34:48 1100  	 in_group_account_id	  IN GROUP_ACCOUNT.ID%TYPE,
14:34:48 1101  	 in_seats		  IN GROUP_ACCOUNT.SEATS%TYPE,
14:34:48 1102  	 in_updated_by		  IN GROUP_ACCOUNT.UPDATED_BY%TYPE
14:34:48 1103  ) AS
14:34:48 1104  BEGIN
14:34:48 1105  	 PROCS_GROUP_ACCOUNT_CRU_V18.UPDATE_GROUP_ACCOUNT_SEATS(
14:34:48 1106  	   in_group_account_id => in_group_account_id,
14:34:48 1107  	   in_seats => in_seats,
14:34:48 1108  	   in_updated_by => in_updated_by
14:34:48 1109  	 );
14:34:48 1110  END UPDATE_GROUP_ACCOUNT_SEATS;
14:34:48 1111  
14:34:48 1112  END PROCS_GROUP_ACCOUNT_V18;
14:34:48 1113  .
14:34:48 SQL> /

Package body created.

Elapsed: 00:00:00.11
14:34:48 SQL> 
14:34:48 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_TEST_V18" AS
14:34:48   2  
14:34:48   3  PROCEDURE TEST_CLEAR_ALL IS
14:34:48   4  BEGIN
14:34:48   5  	DELETE FROM TAX_ADJUSTMENT;
14:34:48   6  	DELETE FROM LINE_ITEM_ADJUSTMENT;
14:34:48   7  	DELETE FROM INVOICE_ADJUSTMENT;
14:34:48   8  	DELETE FROM LICENSE;
14:34:48   9  	DELETE FROM OFFER_OFFER_CHAIN;
14:34:48  10  	delete from offer_product_offering;
14:34:48  11  	delete from tax;
14:34:48  12  	delete from discount_lineitem_adjustment; -- ? JUnitTests don't clear db in the moment of clear sproc corrections
14:34:48  13  	delete from discount_line_item; -- ?
14:34:48  14  	delete from discount; -- ?
14:34:48  15  	DELETE FROM LINE_ITEM;
14:34:48  16  	DELETE FROM PRODUCT_OFFERING_META_DATA;
14:34:48  17  	DELETE FROM PRODUCT_OFFERING;
14:34:48  18  	DELETE FROM PRODUCT;
14:34:48  19  	DELETE FROM INVOICE_NOTE;
14:34:48  20  	DELETE FROM GIFT_CERTIFICATE;
14:34:48  21  	DELETE FROM OFFER;
14:34:48  22  	DELETE FROM OFFER_CHAIN_META_DATA;
14:34:48  23  	DELETE FROM SUBSCRIPTION_NOTE;
14:34:48  24  	DELETE FROM SUBSCRIPTION_META_DATA;
14:34:48  25  	DELETE FROM SUBSCRIPTION;
14:34:48  26  	DELETE FROM CREDIT_CARD;
14:34:48  27  	DELETE FROM FLAGGED_ACCOUNTS;
14:34:48  28  	DELETE FROM ACCOUNT_NOTE;
14:34:48  29  	DELETE FROM ACCOUNT_LOCK;
14:34:48  30  	DELETE FROM ACCOUNT;
14:34:48  31  	DELETE FROM CHARGE;
14:34:48  32  	DELETE FROM TRANSACTION_ATTEMPT;
14:34:48  33  	DELETE FROM CHARGEBACK;
14:34:48  34  	DELETE FROM TRANSACTION;
14:34:48  35  	DELETE FROM INVOICE_NOTE;
14:34:48  36  	DELETE FROM INVOICE;
14:34:48  37  	DELETE FROM OFFER_CHAIN_ELIGIBILITY;
14:34:48  38  	DELETE FROM OFFER_CHAIN;
14:34:48  39  END TEST_CLEAR_ALL;
14:34:48  40  
14:34:48  41  PROCEDURE TEST_CLEAR_PRODUCTS AS
14:34:48  42  BEGIN
14:34:48  43  	DELETE FROM OFFER_OFFER_CHAIN;
14:34:48  44  	DELETE FROM OFFER_PRODUCT_OFFERING;
14:34:48  45  	DELETE FROM TAX;
14:34:48  46  	DELETE FROM PRODUCT_OFFERING;
14:34:48  47  	DELETE FROM PRODUCT;
14:34:48  48  	DELETE FROM OFFER;
14:34:48  49  	DELETE FROM OFFER_CHAIN_META_DATA;
14:34:48  50  	DELETE FROM OFFER_CHAIN;
14:34:48  51  	DELETE FROM OFFER_CHAIN_ELIGIBILITY;
14:34:48  52  END;
14:34:48  53  
14:34:48  54  /******************************************/
14:34:48  55  
14:34:48  56  PROCEDURE TEST_GET_ACCOUNT (
14:34:48  57  	in_group_id	IN NUMBER,
14:34:48  58  	out_result_set	OUT SYS_REFCURSOR
14:34:48  59  ) AS
14:34:48  60  BEGIN
14:34:48  61  
14:34:48  62  	OPEN out_result_set FOR
14:34:48  63  	SELECT *
14:34:48  64  	FROM
14:34:48  65  	  ACCOUNT
14:34:48  66  	WHERE
14:34:48  67  	  ACCOUNT.GROUP_ID = in_group_id;
14:34:48  68  
14:34:48  69  END TEST_GET_ACCOUNT;
14:34:48  70  
14:34:48  71  /*******************************************/
14:34:48  72  
14:34:48  73  PROCEDURE TEST_GET_SUBSCRIPTION (
14:34:48  74  	in_subscription_id IN NUMBER,
14:34:48  75  	out_result_set	   OUT SYS_REFCURSOR
14:34:48  76  ) AS
14:34:48  77  BEGIN
14:34:48  78  	OPEN out_result_set FOR
14:34:48  79  	SELECT *
14:34:48  80  	FROM
14:34:48  81  	  SUBSCRIPTION
14:34:48  82  	WHERE
14:34:48  83  	  SUBSCRIPTION.ID = in_subscription_id;
14:34:48  84  
14:34:48  85  END TEST_GET_SUBSCRIPTION;
14:34:48  86  
14:34:48  87  /***************************************************/
14:34:48  88  
14:34:48  89  PROCEDURE TEST_DELETE_INVOICE (
14:34:48  90  	in_invoice_id IN NUMBER
14:34:48  91  ) AS
14:34:48  92  var_line_item_id_set SYS_REFCURSOR;
14:34:48  93  var_line_item_id	   NUMBER;
14:34:48  94  
14:34:48  95  var_charge_id_set  SYS_REFCURSOR;
14:34:48  96  var_charge_id	 NUMBER;
14:34:48  97  var_transaction_id NUMBER;
14:34:48  98  BEGIN
14:34:48  99  	-- GET ACCOUNT'S LINE_ITEMS
14:34:48 100  	OPEN var_line_item_id_set FOR
14:34:48 101  	SELECT LINE_ITEM.ID FROM LINE_ITEM WHERE LINE_ITEM.INVOICE_ID = in_invoice_id;
14:34:48 102  	LOOP
14:34:48 103  	  FETCH var_line_item_id_set into var_line_item_id;
14:34:48 104  	  EXIT WHEN var_line_item_id_set%NOTFOUND;
14:34:48 105  
14:34:48 106  	  -- DELETE ADJUSTMENTS
14:34:48 107  	  FOR f_line_item_adjustments IN (SELECT * FROM LINE_ITEM_ADJUSTMENT WHERE LINE_ITEM_ID = var_line_item_id)
14:34:48 108  	  LOOP
14:34:48 109  
14:34:48 110  	    -- DELETE DISCOUNT ADJUSTMENTS
14:34:48 111  	    DELETE FROM DISCOUNT_LINEITEM_ADJUSTMENT WHERE LINE_ITEM_ADJUSTMENT_ID = f_line_item_adjustments.ID;
14:34:48 112  
14:34:48 113  	    -- DELETE TAX ADJUSTMENTS
14:34:48 114  	    DELETE FROM TAX_ADJUSTMENT WHERE LINE_ITEM_ADJUSTMENT_ID = f_line_item_adjustments.ID;
14:34:48 115  	  END LOOP;
14:34:48 116  
14:34:48 117  	  -- DELETE LINE ITEM ADJUSTMENTS
14:34:48 118  	  DELETE FROM LINE_ITEM_ADJUSTMENT WHERE LINE_ITEM_ID = var_line_item_id;
14:34:48 119  
14:34:48 120  	  -- DELETE DISCOUNT_LINE_ITEM
14:34:48 121  	  DELETE FROM DISCOUNT_LINE_ITEM WHERE DISCOUNT_LINE_ITEM.LINE_ITEM_ID = var_line_item_id;
14:34:48 122  
14:34:48 123  	  DELETE FROM TAX WHERE LINE_ITEM_ID = var_line_item_id;
14:34:48 124  
14:34:48 125  	  -- DELETE LINE ITEM
14:34:48 126  	  DELETE FROM LINE_ITEM WHERE LINE_ITEM.ID = var_line_item_id;
14:34:48 127  
14:34:48 128  	END LOOP;
14:34:48 129  
14:34:48 130  	-- DELETE INVOICE ADJUSTMENTS
14:34:48 131  	DELETE FROM INVOICE_ADJUSTMENT WHERE INVOICE_ID = in_invoice_id;
14:34:48 132  
14:34:48 133  	-- GET ACCOUNT'S CHARGES AND TRANSACTIONS
14:34:48 134  	OPEN var_charge_id_set FOR
14:34:48 135  	SELECT CHARGE.ID, CHARGE.TRANSACTION_ID FROM CHARGE WHERE CHARGE.INVOICE_ID = in_invoice_id;
14:34:48 136  	LOOP
14:34:48 137  	  FETCH var_charge_id_set into var_charge_id, var_transaction_id;
14:34:48 138  	  EXIT WHEN var_charge_id_set%NOTFOUND;
14:34:48 139  	  -- DELETE CHARGEBACK
14:34:48 140  	  DELETE FROM CHARGEBACK WHERE CHARGEBACK.TRANSACTION_ID = var_transaction_id;
14:34:48 141  
14:34:48 142  	  -- DELETE TRANSACTION ATTEMP
14:34:48 143  	  DELETE FROM TRANSACTION_ATTEMPT WHERE TRANSACTION_ATTEMPT.TRANSACTION_ID = var_transaction_id;
14:34:48 144  
14:34:48 145  	  -- DELETE CHARGE
14:34:48 146  	  DELETE FROM CHARGE WHERE CHARGE.ID = var_charge_id;
14:34:48 147  
14:34:48 148  	  -- DELETE TRANSACTION
14:34:48 149  	  DELETE FROM TRANSACTION WHERE TRANSACTION.ID = var_transaction_id;
14:34:48 150  	END LOOP;
14:34:48 151  
14:34:48 152  	-- DELETE INVOICE NOTES
14:34:48 153  	DELETE FROM INVOICE_NOTE WHERE INVOICE_NOTE.INVOICE_ID = in_invoice_id;
14:34:48 154  
14:34:48 155  	-- DELETE INVOICE
14:34:48 156  	DELETE FROM INVOICE WHERE INVOICE.ID = in_invoice_id;
14:34:48 157  END;
14:34:48 158  
14:34:48 159  PROCEDURE TEST_DELETE_USER_ACCOUNT (
14:34:48 160  	in_group_id IN NUMBER
14:34:48 161  ) AS
14:34:48 162  -- VARIABLES
14:34:48 163  var_account_id NUMBER;
14:34:48 164  
14:34:48 165  -- CURSORS
14:34:48 166  var_subscription_id_set SYS_REFCURSOR;
14:34:48 167  var_subscription_id     NUMBER;
14:34:48 168  
14:34:48 169  var_license_id_set SYS_REFCURSOR;
14:34:48 170  var_license_id	 NUMBER;
14:34:48 171  var_invoice_id	 NUMBER;
14:34:48 172  
14:34:48 173  var_gift_certificate_id_set SYS_REFCURSOR;
14:34:48 174  var_gift_certificate_id	  NUMBER;
14:34:48 175  var_gc_purchase_invoice_id  NUMBER;
14:34:48 176  BEGIN
14:34:48 177  
14:34:48 178   /*FOR f_account in (
14:34:48 179  	  select id from account where group_id = in_group_id
14:34:48 180  	)
14:34:48 181  	loop
14:34:48 182  
14:34:48 183  	  -- delete account
14:34:48 184  	  delete from account where id = f_account.id;
14:34:48 185  
14:34:48 186  	end loop;*/
14:34:48 187  
14:34:48 188  	BEGIN
14:34:48 189  	  SELECT
14:34:48 190  	    ACCOUNT.ID into var_account_id
14:34:48 191  	  FROM
14:34:48 192  	    ACCOUNT
14:34:48 193  	  WHERE
14:34:48 194  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:48 195  	  EXCEPTION
14:34:48 196  	    WHEN NO_DATA_FOUND THEN
14:34:48 197  	      -- Nothing to do
14:34:48 198  	      RETURN;
14:34:48 199  	END;
14:34:48 200  
14:34:48 201  	-- GET ACCOUNT'S SUBSCRIPTIONS
14:34:48 202  	OPEN var_subscription_id_set FOR
14:34:48 203  	SELECT SUBSCRIPTION.ID FROM SUBSCRIPTION WHERE SUBSCRIPTION.ACCOUNT_ID = var_account_id;
14:34:48 204  	LOOP
14:34:48 205  	  FETCH var_subscription_id_set into var_subscription_id;
14:34:48 206  	  EXIT WHEN var_subscription_id_set%NOTFOUND;
14:34:48 207  
14:34:48 208  	  -- GET ACCOUNT'S LICENSES AND INVOICES
14:34:48 209  	  OPEN var_license_id_set FOR
14:34:48 210  	  SELECT LICENSE.ID, LICENSE.INVOICE_ID FROM LICENSE WHERE LICENSE.SUBSCRIPTION_ID = var_subscription_id;
14:34:48 211  	  LOOP
14:34:48 212  	    FETCH var_license_id_set into var_license_id, var_invoice_id;
14:34:48 213  	    EXIT WHEN var_license_id_set%NOTFOUND;
14:34:48 214  
14:34:48 215  
14:34:48 216  	    -- GET GC WHERE PURCHASE_INVOICE_ID = invoice
14:34:48 217  	    OPEN var_gift_certificate_id_set FOR
14:34:48 218  	    SELECT GIFT_CERTIFICATE.ID, GIFT_CERTIFICATE.PURCHASE_INVOICE_ID FROM GIFT_CERTIFICATE WHERE GIFT_CERTIFICATE.FINALIZED_INVOICE_ID = var_invoice_id;
14:34:48 219  	    LOOP
14:34:48 220  	      FETCH var_gift_certificate_id_set into var_gift_certificate_id, var_gc_purchase_invoice_id;
14:34:48 221  	      EXIT WHEN var_gift_certificate_id_set%NOTFOUND;
14:34:48 222  
14:34:48 223  	      -- DELETE GIFT_CERTIFICATE
14:34:48 224  	      DELETE FROM GIFT_CERTIFICATE WHERE GIFT_CERTIFICATE.ID = var_gift_certificate_id;
14:34:48 225  
14:34:48 226  	      -- DELETE LICENSE
14:34:48 227  	      IF TEST_IS_INVOICE_EXISTS(var_gc_purchase_invoice_id) = 1 THEN
14:34:48 228  		TEST_DELETE_INVOICE(var_gc_purchase_invoice_id);
14:34:48 229  	      END IF;
14:34:48 230  
14:34:48 231  	    END LOOP;
14:34:48 232  
14:34:48 233  	    -- DELETE GIFT_CERTIFICATE WHERE GC.REDEEMER_GROUP_ID = out group_id
14:34:48 234  	    DELETE FROM GIFT_CERTIFICATE WHERE GIFT_CERTIFICATE.REDEEMER_GROUP_ID = in_group_id;
14:34:48 235  
14:34:48 236  	    -- DELETE LICENSE
14:34:48 237  	    DELETE FROM LICENSE WHERE LICENSE.ID = var_license_id;
14:34:48 238  
14:34:48 239  	    -- DELETE INVOICE
14:34:48 240  	    IF TEST_IS_INVOICE_EXISTS(var_invoice_id) = 1 THEN
14:34:48 241  	      TEST_DELETE_INVOICE(var_invoice_id);
14:34:48 242  	    END IF;
14:34:48 243  	  END LOOP;
14:34:48 244  
14:34:48 245  	  -- DELETE SUBSCRIPTION_NOTE
14:34:48 246  	  DELETE FROM SUBSCRIPTION_NOTE WHERE SUBSCRIPTION_NOTE.SUBSCRIPTION_ID = var_subscription_id;
14:34:48 247  
14:34:48 248  	  -- DELETE SUBSCRIPTION META_DATA
14:34:48 249  	  DELETE FROM SUBSCRIPTION_META_DATA WHERE SUBSCRIPTION_META_DATA.SUBSCRIPTION_ID = var_subscription_id;
14:34:48 250  
14:34:48 251  	  -- DELETE SUBSCRIPTION
14:34:48 252  	  DELETE FROM SUBSCRIPTION WHERE SUBSCRIPTION.ID = var_subscription_id;
14:34:48 253  	END LOOP;
14:34:48 254  
14:34:48 255  	-- DELETE CREDIT_CARDS
14:34:48 256  	DELETE FROM CREDIT_CARD WHERE CREDIT_CARD.ACCOUNT_ID = var_account_id;
14:34:48 257  
14:34:48 258  	-- DELETE PAYPAL
14:34:48 259  	DELETE FROM PAYPAL WHERE PAYPAL.ACCOUNT_ID = var_account_id;
14:34:48 260  
14:34:48 261  	-- DELETE FLAGS
14:34:48 262  	DELETE FROM FLAGGED_ACCOUNTS WHERE FLAGGED_ACCOUNTS.ACCOUNT_ID = var_account_id;
14:34:48 263  
14:34:48 264  	-- DELETE ACCOUNT NOTES
14:34:48 265  	DELETE FROM ACCOUNT_NOTE WHERE ACCOUNT_NOTE.ACCOUNT_ID = var_account_id;
14:34:48 266  
14:34:48 267  	-- DELETE INVOICES AND GC'S WHERE USER IS PURCHASER
14:34:48 268  	OPEN var_gift_certificate_id_set FOR
14:34:48 269  	SELECT GIFT_CERTIFICATE.ID, GIFT_CERTIFICATE.PURCHASE_INVOICE_ID FROM GIFT_CERTIFICATE WHERE GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id;
14:34:48 270  	LOOP
14:34:48 271  	  FETCH var_gift_certificate_id_set into var_gift_certificate_id, var_gc_purchase_invoice_id;
14:34:48 272  	  EXIT WHEN var_gift_certificate_id_set%NOTFOUND;
14:34:48 273  
14:34:48 274  	  -- DELETE GIFT CERTIFICATE
14:34:48 275  	  DELETE FROM GIFT_CERTIFICATE WHERE GIFT_CERTIFICATE.ID = var_gift_certificate_id;
14:34:48 276  
14:34:48 277  	  -- DELETE INVOICE
14:34:48 278  	  IF TEST_IS_INVOICE_EXISTS(var_gc_purchase_invoice_id) = 1 THEN
14:34:48 279  	    TEST_DELETE_INVOICE(var_gc_purchase_invoice_id);
14:34:48 280  	  END IF;
14:34:48 281  	END LOOP;
14:34:48 282  
14:34:48 283  	-- DELETE LOCKS
14:34:48 284  	DELETE FROM ACCOUNT_LOCK WHERE ACCOUNT_ID = var_account_id;
14:34:48 285  
14:34:48 286  	-- DELETE ACCOUNT
14:34:48 287  	DELETE FROM ACCOUNT WHERE ACCOUNT.ID = var_account_id;
14:34:48 288  
14:34:48 289  END TEST_DELETE_USER_ACCOUNT;
14:34:48 290  
14:34:48 291  PROCEDURE TEST_DELETE_USER_ACCOUNTS  (
14:34:48 292  	in_start_group_id IN NUMBER,
14:34:48 293  	in_end_group_id   IN NUMBER
14:34:48 294  ) IS
14:34:48 295   gid ACCOUNT.GROUP_ID%TYPE;
14:34:48 296   CURSOR c (v_from NUMBER, v_to NUMBER) IS SELECT ACCOUNT.GROUP_ID FROM ACCOUNT WHERE GROUP_ID BETWEEN v_from AND v_to;
14:34:48 297  BEGIN
14:34:48 298  -- arosolovskiy refactoring: call delete_user_account only "COUNT(group_id) WHERE ...." times instead of "in_end_group_id - in_start_group_id" times;
14:34:48 299  	/*
14:34:48 300  	FOR var_group_id IN in_start_group_id..in_end_group_id
14:34:48 301  	LOOP
14:34:48 302  	  TEST_DELETE_USER_ACCOUNT(var_group_id);
14:34:48 303  	END LOOP;*/
14:34:48 304  	OPEN c(in_start_group_id, in_end_group_id);
14:34:48 305  	WHILE c%ISOPEN LOOP
14:34:48 306  	  FETCH c INTO gid;
14:34:48 307  	  IF c%NOTFOUND THEN
14:34:48 308  	   CLOSE c;
14:34:48 309  	  END IF;
14:34:48 310  	  TEST_DELETE_USER_ACCOUNT(gid);
14:34:48 311  	END LOOP;
14:34:48 312  END;
14:34:48 313  
14:34:48 314  /**********************************************************/
14:34:48 315  
14:34:48 316  FUNCTION TEST_IS_INVOICE_EXISTS(
14:34:48 317  /*
14:34:48 318  1 - exists
14:34:48 319  0 - not exists
14:34:48 320  */
14:34:48 321  	in_invoice_id IN NUMBER
14:34:48 322  ) RETURN NUMBER AS
14:34:48 323  var_invoice_count NUMBER;
14:34:48 324  BEGIN
14:34:48 325  	SELECT
14:34:48 326  	  COUNT(*) into var_invoice_count
14:34:48 327  	FROM
14:34:48 328  	  INVOICE
14:34:48 329  	WHERE
14:34:48 330  	  INVOICE.ID = in_invoice_id;
14:34:48 331  	IF var_invoice_count = 0 THEN
14:34:48 332  	  RETURN 0;
14:34:48 333  	ELSE
14:34:48 334  	  RETURN 1;
14:34:48 335  	END IF;
14:34:48 336  END;
14:34:48 337  
14:34:48 338  PROCEDURE TEST_GET_INVOICE_INFO (
14:34:48 339  	in_invoice_id  IN NUMBER,
14:34:48 340  	out_result_set OUT SYS_REFCURSOR
14:34:48 341  ) AS
14:34:48 342  SPROC_NAME      CONSTANT VARCHAR2(21) := 'TEST_GET_INVOICE_INFO';
14:34:48 343  BEGIN
14:34:48 344  
14:34:48 345  	 OPEN out_result_set FOR SELECT
14:34:48 346  	    in_invoice_id AS "INVOICE_ID",
14:34:48 347  	    INVOICE.INVOICE_STATUS_ID,
14:34:48 348  	    PROCS_INVOICE_V18.F_CALCULATE_INVOICE_AMOUNT(in_invoice_id) AS "INVOICE_AMOUNT",
14:34:48 349  	    CHARGE.ID AS "CHARGE_ID",
14:34:48 350  	    CHARGE.CHARGE_AMOUNT,
14:34:48 351  	    CHARGE.TRANSACTION_ID,
14:34:48 352  	    TRANSACTION.TRANSACTION_STATUS_ID
14:34:48 353  	  FROM CHARGE INNER JOIN INVOICE ON INVOICE.ID = CHARGE.INVOICE_ID INNER JOIN TRANSACTION ON TRANSACTION.ID = CHARGE.TRANSACTION_ID WHERE CHARGE.INVOICE_ID = in_invoice_id ORDER BY INVOICE.ID, CHARGE.ID, TRANSACTION.ID;
14:34:48 354  
14:34:48 355  END TEST_GET_INVOICE_INFO;
14:34:48 356  
14:34:48 357  /******************************************************************************/
14:34:48 358  
14:34:48 359  PROCEDURE TEST_DELETE_OFFER_CHAIN(
14:34:48 360  	in_offer_chain_id in number
14:34:48 361  ) as
14:34:48 362  begin
14:34:48 363  
14:34:48 364  	for v_offer_chain in (
14:34:48 365  	  select och.id from offer_chain och where och.id = in_offer_chain_id
14:34:48 366  	)
14:34:48 367  	loop
14:34:48 368  
14:34:48 369  	  for v_offer in (
14:34:48 370  	    select offer_id as id from offer_offer_chain where offer_chain_id = v_offer_chain.id
14:34:48 371  	  )
14:34:48 372  	  loop
14:34:48 373  
14:34:48 374  	    for v_product_offering in (
14:34:48 375  	      select
14:34:48 376  		product_offering.id,
14:34:48 377  		product_offering.product_id
14:34:48 378  	      from
14:34:48 379  		offer_product_offering
14:34:48 380  		inner join product_offering on offer_product_offering.product_offering_id = product_offering.id
14:34:48 381  	      where offer_product_offering.offer_id = v_offer.id
14:34:48 382  	    )
14:34:48 383  	    loop
14:34:48 384  
14:34:48 385  	      -- delete product eligibility
14:34:48 386  	      delete from product_eligibility where product_id = v_product_offering.product_id;
14:34:48 387  
14:34:48 388  	      -- delete meta data
14:34:48 389  	      delete from product_offering_meta_data where product_offering_id = v_product_offering.id;
14:34:48 390  
14:34:48 391  	      -- delete product
14:34:48 392  	      delete from product where id = v_product_offering.product_id;
14:34:48 393  
14:34:48 394  	      -- delete product_offering
14:34:48 395  	      delete from product_offering where id = v_product_offering.id;
14:34:48 396  
14:34:48 397  	    end loop;
14:34:48 398  
14:34:48 399  	    -- delete data from offer_product_offering table
14:34:48 400  	    delete from offer_product_offering where offer_id = v_offer.id;
14:34:48 401  
14:34:48 402  	    -- delete data from offer_offer_chain table
14:34:48 403  	    delete from offer_offer_chain where offer_chain_id = v_offer_chain.id;
14:34:48 404  
14:34:48 405  	    -- delete offer
14:34:48 406  	    delete from offer where id = v_offer.id;
14:34:48 407  
14:34:48 408  	  end loop;
14:34:48 409  
14:34:48 410  	  -- delete offer_chain_eligibility
14:34:48 411  	  delete from offer_chain_eligibility where offer_chain_id = v_offer_chain.id;
14:34:48 412  
14:34:48 413  	  -- delete metadata
14:34:48 414  	  delete from offer_chain_meta_data where offer_chain_id = v_offer_chain.id;
14:34:48 415  
14:34:48 416  	  -- delete offer chain
14:34:48 417  	  delete from offer_chain where id = v_offer_chain.id;
14:34:48 418  
14:34:48 419  	end loop;
14:34:48 420  
14:34:48 421  end;
14:34:48 422  
14:34:48 423  END PROCS_TEST_V18;
14:34:48 424  .
14:34:48 SQL> /

Package body created.

Elapsed: 00:00:00.07
14:34:48 SQL> 
14:34:48 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ACCOUNT_V18" AS
14:34:48   2  
14:34:48   3  PROCEDURE INVOICE_IDS_BY_GROUP_ID (
14:34:48   4  	in_group_id    IN  NUMBER,
14:34:48   5  	out_result_set OUT SYS_REFCURSOR
14:34:48   6  ) AS
14:34:48   7  SPROC_NAME CONSTANT VARCHAR2(32) := 'INVOICE_IDS_BY_GROUP_ID';
14:34:48   8  BEGIN
14:34:48   9  	OPEN out_result_set FOR
14:34:48  10  	SELECT
14:34:48  11  	  Invoice.Id
14:34:48  12  	FROM
14:34:48  13  	  LICENSE
14:34:48  14  	  INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:48  15  	  INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
14:34:48  16  	  INNER JOIN OFFER_CHAIN ON SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48  17  	  INNER JOIN INVOICE_STATUS ON INVOICE.INVOICE_STATUS_ID = INVOICE_STATUS.ID
14:34:48  18  	Where
14:34:48  19  	  SUBSCRIPTION.ACCOUNT_ID IN (SELECT ID FROM ACCOUNT WHERE GROUP_ID = in_group_id) AND
14:34:48  20  	  INVOICE.INVOICE_STATUS_ID = GLOBAL_STATUSES_V18.INVOICE_OPEN;
14:34:48  21  END INVOICE_IDS_BY_GROUP_ID;
14:34:48  22  
14:34:48  23  FUNCTION GET_GRACE_START_DATE(
14:34:48  24  	in_subscription_id IN NUMBER
14:34:48  25  ) RETURN DATE AS
14:34:48  26  SPROC_NAME	   CONSTANT VARCHAR2(32) := 'GET_GRACE_START_DATE';
14:34:48  27  grace_start_date_var DATE;
14:34:48  28  BEGIN
14:34:48  29  	SELECT GRACE_START_DATE into grace_start_date_var
14:34:48  30  	FROM
14:34:48  31  	  (
14:34:48  32  	    SELECT
14:34:48  33  	      GRACE_START_DATE
14:34:48  34  	    FROM
14:34:48  35  	      LICENSE
14:34:48  36  	    WHERE
14:34:48  37  	      LICENSE.SUBSCRIPTION_ID = in_subscription_id
14:34:48  38  	    ORDER BY
14:34:48  39  	      LICENSE.END_DATE DESC
14:34:48  40  	  )
14:34:48  41  	WHERE
14:34:48  42  	  ROWNUM <= 1;
14:34:48  43  
14:34:48  44  	RETURN grace_start_date_var;
14:34:48  45  END GET_GRACE_START_DATE;
14:34:48  46  
14:34:48  47  FUNCTION GET_GRACE_END_DATE(
14:34:48  48  	in_subscription_id IN NUMBER
14:34:48  49  ) RETURN DATE AS
14:34:48  50  SPROC_NAME	 CONSTANT VARCHAR2(32) := 'GET_GRACE_END_DATE';
14:34:48  51  grace_end_date_var DATE;
14:34:48  52  BEGIN
14:34:48  53  	SELECT GRACE_END_DATE into grace_end_date_var
14:34:48  54  	FROM
14:34:48  55  	  (
14:34:48  56  	    SELECT
14:34:48  57  	      GRACE_END_DATE
14:34:48  58  	    FROM
14:34:48  59  	      LICENSE
14:34:48  60  	    WHERE
14:34:48  61  	      LICENSE.SUBSCRIPTION_ID = in_subscription_id
14:34:48  62  	    ORDER BY
14:34:48  63  	      LICENSE.END_DATE DESC
14:34:48  64  	  )
14:34:48  65  	WHERE ROWNUM <= 1;
14:34:48  66  
14:34:48  67  	RETURN grace_end_date_var;
14:34:48  68  END GET_GRACE_END_DATE;
14:34:48  69  
14:34:48  70  
14:34:48  71  
14:34:48  72  PROCEDURE ANNOTATE_ACCOUNT (
14:34:48  73  /*
14:34:48  74  Throws exceptions:
14:34:48  75  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48  76  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48  77  */
14:34:48  78  	in_group_id   IN  NUMBER,
14:34:48  79  	in_agent_id   IN  NUMBER,
14:34:48  80  	in_note       IN  VARCHAR2,
14:34:48  81  	in_created_by IN  VARCHAR2
14:34:48  82  ) AS
14:34:48  83  SPROC_NAME  CONSTANT VARCHAR2(16) := 'ANNOTATE_ACCOUNT';
14:34:48  84  -- VARIABLES
14:34:48  85  var_account_id	  NUMBER;
14:34:48  86  var_account_note_id NUMBER;
14:34:48  87  -- EXCEPTIONS
14:34:48  88  BAD_ACCOUNT_ID EXCEPTION;
14:34:48  89  BEGIN
14:34:48  90  
14:34:48  91  	-- Get account id
14:34:48  92  	BEGIN
14:34:48  93  	  SELECT
14:34:48  94  	    ACCOUNT.ID into var_account_id
14:34:48  95  	  FROM
14:34:48  96  	    ACCOUNT
14:34:48  97  	  WHERE
14:34:48  98  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:48  99  	  EXCEPTION
14:34:48 100  	    WHEN NO_DATA_FOUND THEN
14:34:48 101  	      RAISE BAD_ACCOUNT_ID;
14:34:48 102  	END;
14:34:48 103  
14:34:48 104  	-- Insert new row into ACCOUNT_NOTE table
14:34:48 105  	PROCS_ACCOUNT_CRU_V18.CREATE_ACCOUNT_NOTE(
14:34:48 106  	  inout_account_note_id => var_account_note_id,
14:34:48 107  	  in_agent_id		=> in_agent_id,
14:34:48 108  	  in_account_id 	=> var_account_id,
14:34:48 109  	  in_note		=> in_note,
14:34:48 110  	  in_created_by 	=> in_created_by
14:34:48 111  	);
14:34:48 112  
14:34:48 113  EXCEPTION
14:34:48 114  WHEN BAD_ACCOUNT_ID THEN
14:34:48 115  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 116  	  SPROC_NAME, 'No such group id');
14:34:48 117  WHEN OTHERS THEN
14:34:48 118  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 119  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 120  END ANNOTATE_ACCOUNT;
14:34:48 121  
14:34:48 122  /******************************************************************************/
14:34:48 123  
14:34:48 124  PROCEDURE ASSERT_ACCOUNT_EXISTS (
14:34:48 125  /*
14:34:48 126  Throws exceptions:
14:34:48 127  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 128  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 129  */
14:34:48 130  	in_group_id IN	NUMBER,
14:34:48 131  	out_exists  OUT NUMBER
14:34:48 132  ) AS
14:34:48 133  -- VARIABLES
14:34:48 134  var_found_id  NUMBER;
14:34:48 135  SPROC_NAME    CONSTANT VARCHAR2(21) := 'ASSERT_ACCOUNT_EXISTS';
14:34:48 136  BEGIN
14:34:48 137  	SELECT ACCOUNT.ID INTO var_found_id FROM ACCOUNT WHERE ACCOUNT.GROUP_ID = in_group_id;
14:34:48 138  	out_exists := GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 139  EXCEPTION
14:34:48 140  WHEN NO_DATA_FOUND THEN
14:34:48 141  	out_exists := GLOBAL_CONSTANTS_V18.FALSE;
14:34:48 142  WHEN OTHERS THEN
14:34:48 143  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 144  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 145  END ASSERT_ACCOUNT_EXISTS;
14:34:48 146  
14:34:48 147  /******************************************************************************/
14:34:48 148  
14:34:48 149  PROCEDURE DISABLE_ACCOUNT (
14:34:48 150  /*
14:34:48 151  Throws exceptions:
14:34:48 152  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 153  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 154  */
14:34:48 155  	in_group_id   IN NUMBER,
14:34:48 156  	in_updated_by IN VARCHAR2,
14:34:48 157  	in_note       IN VARCHAR2,
14:34:48 158  	in_agent_id   IN NUMBER
14:34:48 159  ) AS
14:34:48 160  SPROC_NAME	      CONSTANT VARCHAR2(15) := 'DISABLE_ACCOUNT';
14:34:48 161  var_account_id	      NUMBER;
14:34:48 162  current_account_status  NUMBER;
14:34:48 163  
14:34:48 164  var_active_subscriptions_num NUMBER;
14:34:48 165  var_pending_invoices_num	   NUMBER;
14:34:48 166  
14:34:48 167  -- EXCEPTIONS
14:34:48 168  BAD_ACOUNT_ID		EXCEPTION;
14:34:48 169  BAD_CURRENT_ACC_STATUS	EXCEPTION;
14:34:48 170  PENDING_INVOICES_FOUND	EXCEPTION;
14:34:48 171  ACCOUNT_HAS_ACIVE_SUBSCRS EXCEPTION;
14:34:48 172  CAN_NOT_ANNOTATE_ACCOUNT	EXCEPTION;
14:34:48 173  EXCEPTION_MESSAGE 	VARCHAR2(1024);
14:34:48 174  BEGIN
14:34:48 175  
14:34:48 176  	-- Get account's status and id
14:34:48 177  	BEGIN
14:34:48 178  	  SELECT
14:34:48 179  	    ACCOUNT.ACCOUNT_STATUS_ID,
14:34:48 180  	    ACCOUNT.ID
14:34:48 181  	  INTO
14:34:48 182  	    current_account_status,
14:34:48 183  	    var_account_id
14:34:48 184  	  FROM ACCOUNT
14:34:48 185  	  WHERE
14:34:48 186  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:48 187  	  EXCEPTION
14:34:48 188  	    WHEN NO_DATA_FOUND THEN
14:34:48 189  	      RAISE BAD_ACOUNT_ID;
14:34:48 190  	END;
14:34:48 191  
14:34:48 192  	-- For now, we can disable account whenever
14:34:48 193  	IF current_account_status = GLOBAL_STATUSES_V18.ACCOUNT_DISABLED THEN
14:34:48 194  	  RAISE BAD_CURRENT_ACC_STATUS;
14:34:48 195  	END IF;
14:34:48 196  
14:34:48 197  	-- Checks for out outstanding balances
14:34:48 198  	-- CHECK: No outstanding balances. If monies are due, then we can not cancel account. Return ERROR.
14:34:48 199  	SELECT
14:34:48 200  	  COUNT(*) into var_pending_invoices_num
14:34:48 201  	FROM
14:34:48 202  	  LICENSE
14:34:48 203  	    INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:48 204  	    INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
14:34:48 205  	WHERE
14:34:48 206  	  SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:48 207  	  AND INVOICE.INVOICE_STATUS_ID IN ( SELECT GLOBAL_STATUSES_V18.INVOICE_OPEN FROM DUAL );
14:34:48 208  
14:34:48 209  	IF var_pending_invoices_num > 0 THEN
14:34:48 210  	  RAISE PENDING_INVOICES_FOUND;
14:34:48 211  	END IF;
14:34:48 212  
14:34:48 213  	SELECT
14:34:48 214  	  COUNT(*) into var_active_subscriptions_num
14:34:48 215  	FROM
14:34:48 216  	  SUBSCRIPTION
14:34:48 217  	WHERE
14:34:48 218  	  SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:48 219  	  AND (
14:34:48 220  	    SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE
14:34:48 221  	    OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_SUSPENDED
14:34:48 222  	    OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_IN_GRACE_PERIOD);
14:34:48 223  
14:34:48 224  	IF var_active_subscriptions_num > 0 THEN
14:34:48 225  	  RAISE ACCOUNT_HAS_ACIVE_SUBSCRS;
14:34:48 226  	END IF;
14:34:48 227  
14:34:48 228  	PROCS_ACCOUNT_V18.UPDATE_ACCOUNT_STATUS(
14:34:48 229  	  in_account_id        => var_account_id,
14:34:48 230  	  in_account_status_id => GLOBAL_STATUSES_V18.ACCOUNT_DISABLED,
14:34:48 231  	  in_updated_by        => in_updated_by
14:34:48 232  	);
14:34:48 233  
14:34:48 234  	-- Annotate account
14:34:48 235  	IF in_note IS NOT NULL THEN
14:34:48 236  	  BEGIN
14:34:48 237  	    PROCS_ACCOUNT_V18.ANNOTATE_ACCOUNT(
14:34:48 238  	      in_group_id   => in_group_id,
14:34:48 239  	      in_agent_id   => in_agent_id,
14:34:48 240  	      in_note	    => in_note,
14:34:48 241  	      in_created_by => in_updated_by
14:34:48 242  	    );
14:34:48 243  	    EXCEPTION
14:34:48 244  	      WHEN OTHERS THEN
14:34:48 245  		EXCEPTION_MESSAGE := SQLERRM;
14:34:48 246  		RAISE CAN_NOT_ANNOTATE_ACCOUNT;
14:34:48 247  	  END;
14:34:48 248  	END IF;
14:34:48 249  
14:34:48 250  EXCEPTION
14:34:48 251  WHEN ACCOUNT_HAS_ACIVE_SUBSCRS THEN
14:34:48 252  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 253  	  SPROC_NAME, 'Account has active or suspended subsciptions');
14:34:48 254  WHEN BAD_CURRENT_ACC_STATUS THEN
14:34:48 255  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 256  	  SPROC_NAME, 'Current account status is "disabled". Can not disable it one more time.');
14:34:48 257  WHEN PENDING_INVOICES_FOUND THEN
14:34:48 258  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 259  	  SPROC_NAME, 'Opened/Pending invoices founded');
14:34:48 260  WHEN BAD_ACOUNT_ID THEN
14:34:48 261  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 262  	  SPROC_NAME, 'No such account');
14:34:48 263  WHEN CAN_NOT_ANNOTATE_ACCOUNT THEN
14:34:48 264  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 265  	  SPROC_NAME, 'Could not annotate account', EXCEPTION_MESSAGE);
14:34:48 266  WHEN OTHERS THEN
14:34:48 267  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 268  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 269  END DISABLE_ACCOUNT;
14:34:48 270  
14:34:48 271  /******************************************************************************/
14:34:48 272  
14:34:48 273  PROCEDURE CREATE_ACTIVE_ACCOUNT(
14:34:48 274  /*
14:34:48 275  Throws exceptions:
14:34:48 276  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 277  APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR
14:34:48 278  */
14:34:48 279  	  in_created_by IN VARCHAR2,
14:34:48 280  	  in_group_id	IN NUMBER
14:34:48 281  ) AS
14:34:48 282  -- VARIABLES
14:34:48 283  SPROC_NAME      CONSTANT VARCHAR2(21) := 'CREATE_ACTIVE_ACCOUNT';
14:34:48 284  new_account_id  NUMBER;
14:34:48 285  temp_group_id   NUMBER;
14:34:48 286  -- EXCEPTIONS
14:34:48 287  GROUP_EXISTS_EXCEPTION EXCEPTION;
14:34:48 288  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:48 289  BEGIN
14:34:48 290  	-- Check if account already exists
14:34:48 291  	BEGIN
14:34:48 292  	  SELECT
14:34:48 293  	    ACCOUNT.GROUP_ID into temp_group_id
14:34:48 294  	  FROM
14:34:48 295  	    ACCOUNT
14:34:48 296  	  WHERE
14:34:48 297  	    ACCOUNT.GROUP_ID = in_group_id
14:34:48 298  	    AND ROWNUM <= 1;
14:34:48 299  
14:34:48 300  	  IF SQL%ROWCOUNT = 1 THEN
14:34:48 301  	    RAISE GROUP_EXISTS_EXCEPTION;
14:34:48 302  	  END IF;
14:34:48 303  
14:34:48 304  	  EXCEPTION
14:34:48 305  	    WHEN NO_DATA_FOUND THEN
14:34:48 306  	      NULL;
14:34:48 307  	END;
14:34:48 308  
14:34:48 309  	-- Insert new row into ACCOUNT table
14:34:48 310  	PROCS_ACCOUNT_CRU_V18.CREATE_ACCOUNT(
14:34:48 311  	  out_account_id	=> new_account_id,
14:34:48 312  	  in_account_status_id	=> GLOBAL_STATUSES_V18.ACCOUNT_ACTIVE,
14:34:48 313  	  in_group_id		=> in_group_id,
14:34:48 314  	  in_created_by 	=> in_created_by,
14:34:48 315  	  in_system_category_id => GLOBAL_ENUMS_V18.SYSTEM_CATEGORY_LIVE
14:34:48 316  	);
14:34:48 317  
14:34:48 318  EXCEPTION
14:34:48 319  WHEN GROUP_EXISTS_EXCEPTION THEN
14:34:48 320  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.DUPLICATE_ERROR,
14:34:48 321  	  SPROC_NAME, 'Group already exists');
14:34:48 322  WHEN OTHERS THEN
14:34:48 323  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 324  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 325  END CREATE_ACTIVE_ACCOUNT;
14:34:48 326  
14:34:48 327  /******************************************************************************/
14:34:48 328  
14:34:48 329  PROCEDURE REACTIVATE_ACCOUNT (
14:34:48 330  /*
14:34:48 331  Throws exceptions:
14:34:48 332  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 333  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 334  */
14:34:48 335  	in_group_id   IN NUMBER,
14:34:48 336  	in_updated_by IN VARCHAR2,
14:34:48 337  	in_note       IN VARCHAR2,
14:34:48 338  	in_agent_id   IN NUMBER
14:34:48 339  ) AS
14:34:48 340  -- VARIABLES
14:34:48 341  SPROC_NAME	      CONSTANT VARCHAR2(18) := 'REACTIVATE_ACCOUNT';
14:34:48 342  var_account_id	      NUMBER;
14:34:48 343  current_account_status  NUMBER;
14:34:48 344  
14:34:48 345  -- EXCEPTIONS
14:34:48 346  BAD_CURRENT_ACC_STATUS EXCEPTION;
14:34:48 347  CAN_NOT_CREATE_NOTE    EXCEPTION;
14:34:48 348  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:48 349  BEGIN
14:34:48 350  	-- Get account id, status
14:34:48 351  	SELECT
14:34:48 352  	  ACCOUNT.ACCOUNT_STATUS_ID,
14:34:48 353  	  ACCOUNT.ID
14:34:48 354  	INTO
14:34:48 355  	  current_account_status,
14:34:48 356  	  var_account_id
14:34:48 357  	FROM ACCOUNT
14:34:48 358  	WHERE
14:34:48 359  	  ACCOUNT.GROUP_ID = in_group_id;
14:34:48 360  
14:34:48 361  	IF current_account_status != GLOBAL_STATUSES_V18.ACCOUNT_FROZEN THEN
14:34:48 362  	  RAISE BAD_CURRENT_ACC_STATUS;
14:34:48 363  	END IF;
14:34:48 364  
14:34:48 365  	-- Change account status
14:34:48 366  	PROCS_ACCOUNT_V18.UPDATE_ACCOUNT_STATUS(
14:34:48 367  	  in_account_id        => var_account_id,
14:34:48 368  	  in_updated_by        => in_updated_by,
14:34:48 369  	  in_account_status_id => GLOBAL_STATUSES_V18.ACCOUNT_ACTIVE
14:34:48 370  	);
14:34:48 371  
14:34:48 372  	-- Add note
14:34:48 373  	BEGIN
14:34:48 374  	  PROCS_ACCOUNT_V18.ANNOTATE_ACCOUNT(
14:34:48 375  	    in_group_id   => in_group_id,
14:34:48 376  	    in_agent_id   => in_agent_id,
14:34:48 377  	    in_note	  => in_note,
14:34:48 378  	    in_created_by => in_updated_by
14:34:48 379  	  );
14:34:48 380  	  EXCEPTION
14:34:48 381  	    WHEN OTHERS THEN
14:34:48 382  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 383  	      RAISE CAN_NOT_CREATE_NOTE;
14:34:48 384  	END;
14:34:48 385  
14:34:48 386  EXCEPTION
14:34:48 387  WHEN BAD_CURRENT_ACC_STATUS THEN
14:34:48 388  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 389  	  SPROC_NAME, 'Current account status is not "frozen"');
14:34:48 390  WHEN NO_DATA_FOUND THEN
14:34:48 391  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 392  	  SPROC_NAME, 'Could not find account with given group ID');
14:34:48 393  WHEN CAN_NOT_CREATE_NOTE THEN
14:34:48 394  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 395  	  SPROC_NAME, 'Could not annotate account');
14:34:48 396  WHEN OTHERS THEN
14:34:48 397  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 398  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 399  END REACTIVATE_ACCOUNT;
14:34:48 400  
14:34:48 401  /******************************************************************************/
14:34:48 402  
14:34:48 403  PROCEDURE GET_ACCOUNT_CREDIT_CARDS (
14:34:48 404  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE,
14:34:48 405  	in_status_id   IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT GLOBAL_STATUSES_V18.CREDIT_CARD_ACTIVE,
14:34:48 406  	out_result_set OUT SYS_REFCURSOR
14:34:48 407  ) AS
14:34:48 408  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ACCOUNT_CREDIT_CARDS';
14:34:48 409  BEGIN
14:34:48 410  	OPEN out_result_set FOR
14:34:48 411  	  SELECT
14:34:48 412  	    CREDIT_CARD.ID,
14:34:48 413  	    CREDIT_CARD.ACCOUNT_ID,
14:34:48 414  	    CREDIT_CARD.INSTRUMENT_NAME,
14:34:48 415  	    CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME,
14:34:48 416  	    CREDIT_CARD.PRIVATE_STREET_ADDRESS,
14:34:48 417  	    CREDIT_CARD.PRIVATE_STREET_ADDRESS2,
14:34:48 418  	    CREDIT_CARD.STATE,
14:34:48 419  	    CREDIT_CARD.CITY,
14:34:48 420  	    CREDIT_CARD.POSTAL_CODE,
14:34:48 421  	    CREDIT_CARD.COUNTRY,
14:34:48 422  	    CREDIT_CARD.LAST_FOUR_CC,
14:34:48 423  	    CREDIT_CARD.EXPIRATION_DATE,
14:34:48 424  	    CREDIT_CARD.CREDIT_CARD_TYPE_ID,
14:34:48 425  	    CREDIT_CARD.SECRET_TOKEN,
14:34:48 426  	    CREDIT_CARD.CREATE_DATE,
14:34:48 427  	    CREDIT_CARD.CREATED_BY,
14:34:48 428  	    CREDIT_CARD.UPDATE_DATE,
14:34:48 429  	    CREDIT_CARD.UPDATED_BY,
14:34:48 430  	    CREDIT_CARD.CREDIT_CARD_STATUS_ID,
14:34:48 431  	    CREDIT_CARD.PRIVATE_FIRST_NAME,
14:34:48 432  	    Credit_Card.Private_Last_Name,
14:34:48 433  	    decode((SELECT Instrument_Id FROM ACCOUNT WHERE group_id = in_group_id and Instrument_Id = CREDIT_CARD.ID),null,'false', 'true') is_default
14:34:48 434  	  From
14:34:48 435  	      CREDIT_CARD left join account on account.id = CREDIT_CARD.Account_Id
14:34:48 436  	  Where
14:34:48 437  	    Account.Group_Id = in_group_id
14:34:48 438  	    AND CREDIT_CARD.CREDIT_CARD_STATUS_ID = in_status_id;
14:34:48 439  END GET_ACCOUNT_CREDIT_CARDS;
14:34:48 440  
14:34:48 441  /******************************************************************************/
14:34:48 442  
14:34:48 443  PROCEDURE GET_ACCOUNT_GIFT_CERTIFICATES (
14:34:48 444  /*
14:34:48 445  IN:
14:34:48 446  instr_status:
14:34:48 447  GLOBAL_CONSTANTS_V18.TRUE - get active instruments only (default)
14:34:48 448  GLOBAL_CONSTANTS_V18.FALSE - get inactive instruments only
14:34:48 449  
14:34:48 450  Throws exceptions:
14:34:48 451  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 452  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 453  */
14:34:48 454  	in_group_id	  IN NUMBER,
14:34:48 455  	out_result_gc_set OUT SYS_REFCURSOR,
14:34:48 456  	in_instr_status   IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.TRUE
14:34:48 457  ) AS
14:34:48 458  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_ACCOUNT_GIFT_CERTIFICATES';
14:34:48 459  var_account_id NUMBER;
14:34:48 460  
14:34:48 461  -- Exceptions
14:34:48 462  WRONG_INSTR_EXCEPTION	 EXCEPTION;
14:34:48 463  BEGIN
14:34:48 464  
14:34:48 465  	-- Get account id
14:34:48 466  	SELECT
14:34:48 467  	  ACCOUNT.ID INTO var_account_id
14:34:48 468  	FROM
14:34:48 469  	  ACCOUNT
14:34:48 470  	WHERE
14:34:48 471  	  ACCOUNT.GROUP_ID = in_group_id;
14:34:48 472  
14:34:48 473  	-- Check that incoming data is correct
14:34:48 474  	IF in_instr_status != GLOBAL_CONSTANTS_V18.TRUE AND in_instr_status != GLOBAL_CONSTANTS_V18.FALSE THEN
14:34:48 475  	  RAISE WRONG_INSTR_EXCEPTION;
14:34:48 476  	END IF;
14:34:48 477  
14:34:48 478  	OPEN out_result_gc_set FOR
14:34:48 479  	SELECT
14:34:48 480  	  GIFT_CERTIFICATE.ID,
14:34:48 481  	  GIFT_CERTIFICATE.PURCHASER_GROUP_ID,
14:34:48 482  	  GIFT_CERTIFICATE.PURCHASE_INVOICE_ID,
14:34:48 483  	  GIFT_CERTIFICATE.PURCHASE_DATE,
14:34:48 484  	  GIFT_CERTIFICATE.OFFER_CHAIN_ID,
14:34:48 485  	  GIFT_CERTIFICATE.EXPIRATION_DATE,
14:34:48 486  	  GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID,
14:34:48 487  	  GIFT_CERTIFICATE.CODE,
14:34:48 488  	  GIFT_CERTIFICATE.CREATE_DATE,
14:34:48 489  	  GIFT_CERTIFICATE.CREATED_BY,
14:34:48 490  	  GIFT_CERTIFICATE.UPDATE_DATE,
14:34:48 491  	  GIFT_CERTIFICATE.UPDATED_BY,
14:34:48 492  	  GIFT_CERTIFICATE.RECIPIENT_NAME,
14:34:48 493  	  GIFT_CERTIFICATE.RECIPIENT_EMAIL,
14:34:48 494  	  GIFT_CERTIFICATE.SENDER_NAME,
14:34:48 495  	  GIFT_CERTIFICATE.SENDER_EMAIL,
14:34:48 496  	  GIFT_CERTIFICATE.REDEEMER_GROUP_ID,
14:34:48 497  	  GIFT_CERTIFICATE.REDEMPTION_DATE,
14:34:48 498  	  GIFT_CERTIFICATE.FINALIZED_INVOICE_ID,
14:34:48 499  	  GIFT_CERTIFICATE.GIFT_MESSAGE
14:34:48 500  	FROM
14:34:48 501  	  GIFT_CERTIFICATE
14:34:48 502  	WHERE
14:34:48 503  	  GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id
14:34:48 504  	  AND (
14:34:48 505  		( in_instr_status = GLOBAL_CONSTANTS_V18.TRUE AND
14:34:48 506  		  (
14:34:48 507  		    GIFT_CERTIFICATE.EXPIRATION_DATE >= current_date
14:34:48 508  		    AND GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID = GLOBAL_STATUSES_V18.GIFT_CERTIFICATE_ACTIVE
14:34:48 509  		  )
14:34:48 510  		)
14:34:48 511  		OR
14:34:48 512  		(
14:34:48 513  		  in_instr_status = GLOBAL_CONSTANTS_V18.FALSE AND
14:34:48 514  		  (
14:34:48 515  		    GIFT_CERTIFICATE.EXPIRATION_DATE < current_date
14:34:48 516  		    OR GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID != GLOBAL_STATUSES_V18.GIFT_CERTIFICATE_ACTIVE
14:34:48 517  		  )
14:34:48 518  		)
14:34:48 519  	      );
14:34:48 520  
14:34:48 521  EXCEPTION
14:34:48 522  WHEN NO_DATA_FOUND THEN
14:34:48 523  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 524  	  SPROC_NAME, 'Can not find account with given group id');
14:34:48 525  WHEN WRONG_INSTR_EXCEPTION THEN
14:34:48 526  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 527  	  SPROC_NAME, 'Wrong gift certificate type');
14:34:48 528  WHEN OTHERS THEN
14:34:48 529  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 530  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 531  END GET_ACCOUNT_GIFT_CERTIFICATES;
14:34:48 532  
14:34:48 533  /******************************************************************************/
14:34:48 534  
14:34:48 535  PROCEDURE GET_ACCOUNT_INFO  (
14:34:48 536  /*
14:34:48 537  Throws exceptions:
14:34:48 538  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 539  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 540  */
14:34:48 541  	  in_group_id	    IN	NUMBER,
14:34:48 542  	  out_account_info  OUT SYS_REFCURSOR
14:34:48 543  ) AS
14:34:48 544  SPROC_NAME      CONSTANT VARCHAR2(16) := 'GET_ACCOUNT_INFO';
14:34:48 545  var_account_id  NUMBER;
14:34:48 546  BEGIN
14:34:48 547  
14:34:48 548  	-- Get account id
14:34:48 549  	SELECT
14:34:48 550  	  ACCOUNT.ID INTO var_account_id
14:34:48 551  	FROM
14:34:48 552  	  ACCOUNT
14:34:48 553  	WHERE
14:34:48 554  	  ACCOUNT.GROUP_ID = in_group_id;
14:34:48 555  
14:34:48 556  	-- Get account info
14:34:48 557  	OPEN out_account_info FOR
14:34:48 558  	  SELECT
14:34:48 559  	    ACCOUNT.ACCOUNT_STATUS_ID
14:34:48 560  	  FROM ACCOUNT
14:34:48 561  	  WHERE
14:34:48 562  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:48 563  
14:34:48 564  EXCEPTION
14:34:48 565  WHEN NO_DATA_FOUND THEN
14:34:48 566  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 567  	  SPROC_NAME, 'No such account');
14:34:48 568  WHEN OTHERS THEN
14:34:48 569  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 570  	  SPROC_NAME, 'Unknown Error', SQLERRM);
14:34:48 571  END GET_ACCOUNT_INFO;
14:34:48 572  
14:34:48 573  /******************************************************************************/
14:34:48 574  
14:34:48 575  PROCEDURE GET_ACCOUNT_NOTES (
14:34:48 576  /*
14:34:48 577  Throws exceptions:
14:34:48 578  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 579  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 580  */
14:34:48 581  	  in_group_id	 IN  NUMBER,
14:34:48 582  	  out_result_set OUT SYS_REFCURSOR
14:34:48 583  ) AS
14:34:48 584  -- VARIABLES
14:34:48 585  SPROC_NAME      CONSTANT VARCHAR2(17) := 'GET_ACCOUNT_NOTES';
14:34:48 586  var_account_id NUMBER;
14:34:48 587  -- EXCEPTIONS
14:34:48 588  BAD_ACCOUNT_ID EXCEPTION;
14:34:48 589  BEGIN
14:34:48 590  
14:34:48 591  	-- Check that account is exists
14:34:48 592  	BEGIN
14:34:48 593  	  SELECT
14:34:48 594  	    ACCOUNT.ID into var_account_id
14:34:48 595  	  FROM
14:34:48 596  	    ACCOUNT
14:34:48 597  	  WHERE
14:34:48 598  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:48 599  	  EXCEPTION
14:34:48 600  	    WHEN NO_DATA_FOUND THEN
14:34:48 601  	      RAISE BAD_ACCOUNT_ID;
14:34:48 602  	END;
14:34:48 603  
14:34:48 604  	-- Get account notes
14:34:48 605  	OPEN out_result_set FOR
14:34:48 606  	SELECT
14:34:48 607  	  ACCOUNT_NOTE.ACCOUNT_ID,
14:34:48 608  	  ACCOUNT_NOTE.AGENT_ID,
14:34:48 609  	  ACCOUNT_NOTE.CREATE_DATE,
14:34:48 610  	  ACCOUNT_NOTE.CREATED_BY,
14:34:48 611  	  ACCOUNT_NOTE.ID,
14:34:48 612  	  ACCOUNT_NOTE.NOTE
14:34:48 613  	FROM
14:34:48 614  	  ACCOUNT_NOTE
14:34:48 615  	WHERE
14:34:48 616  	  ACCOUNT_NOTE.ACCOUNT_ID = var_account_id
14:34:48 617  	ORDER BY
14:34:48 618  	  ACCOUNT_NOTE.CREATE_DATE ASC;
14:34:48 619  
14:34:48 620  EXCEPTION
14:34:48 621  WHEN BAD_ACCOUNT_ID THEN
14:34:48 622  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 623  	  SPROC_NAME, 'No such account');
14:34:48 624  WHEN OTHERS THEN
14:34:48 625  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 626  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 627  END GET_ACCOUNT_NOTES;
14:34:48 628  
14:34:48 629  /******************************************************************************/
14:34:48 630  
14:34:48 631  PROCEDURE GET_ACCOUNT_PAYPALS(
14:34:48 632  	in_group_id    IN  ACCOUNT.GROUP_ID%TYPE,
14:34:48 633  	in_status_id   IN  PAYPAL.PAYPAL_STATUS_ID%TYPE DEFAULT GLOBAL_STATUSES_V18.PAYPAL_ACTIVE,
14:34:48 634  	out_result_set OUT SYS_REFCURSOR
14:34:48 635  ) AS
14:34:48 636  SPROC_NAME     CONSTANT VARCHAR2(32) := 'GET_ACCOUNT_PAYPALS';
14:34:48 637  BEGIN
14:34:48 638  	OPEN out_result_set FOR
14:34:48 639  	  SELECT
14:34:48 640  	    DISTINCT
14:34:48 641  	    PAYPAL.ID,
14:34:48 642  	    PAYPAL.ACCOUNT_ID,
14:34:48 643  	    PAYPAL.INSTRUMENT_NAME,
14:34:48 644  	    PAYPAL.PRIVATE_EMAIL_ADDRESS,
14:34:48 645  	    PAYPAL.CREATE_DATE,
14:34:48 646  	    PAYPAL.CREATED_BY,
14:34:48 647  	    PAYPAL.UPDATE_DATE,
14:34:48 648  	    PAYPAL.UPDATED_BY,
14:34:48 649  	    PAYPAL.PAYPAL_STATUS_ID,
14:34:48 650  	    PAYPAL.PRIVATE_STREET_ADDRESS,
14:34:48 651  	    PAYPAL.PRIVATE_STREET_ADDRESS2,
14:34:48 652  	    PAYPAL.STATE,
14:34:48 653  	    PAYPAL.CITY,
14:34:48 654  	    PAYPAL.POSTAL_CODE,
14:34:48 655  	    PAYPAL.COUNTRY,
14:34:48 656  	    Paypal.Expiration_Date,
14:34:48 657  	    Paypal.Secret_Token,
14:34:48 658  	    decode((SELECT
14:34:48 659  	    Instrument_Id
14:34:48 660  		    FROM ACCOUNT
14:34:48 661  		    WHERE group_id = in_group_id AND Instrument_Id = PAYPAL.ID), null, 'false', 'true') is_default
14:34:48 662  	  FROM
14:34:48 663  	      PAYPAL
14:34:48 664  	      LEFT JOIN ACCOUNT ON ACCOUNT.id = PAYPAL.ACCOUNT_ID
14:34:48 665  	  WHERE
14:34:48 666  	    ACCOUNT.GROUP_ID = in_group_id
14:34:48 667  	    AND PAYPAL.PAYPAL_STATUS_ID = in_status_id;
14:34:48 668  END GET_ACCOUNT_PAYPALS;
14:34:48 669  
14:34:48 670  /******************************************************************************/
14:34:48 671  
14:34:48 672  PROCEDURE GET_ACCOUNT_SUBSCRIPTIONS (
14:34:48 673  	  in_group_id	 IN  NUMBER,
14:34:48 674  	  in_start_date  IN DATE,
14:34:48 675  	  in_end_date	 IN DATE,
14:34:48 676  	  in_status	 IN NUMBER,
14:34:48 677  	  in_group_account_type IN VARCHAR2,
14:34:48 678  	  out_result_set OUT SYS_REFCURSOR
14:34:48 679  ) AS
14:34:48 680  -- VARIABLES
14:34:48 681  SPROC_NAME     CONSTANT VARCHAR2(25) := 'GET_ACCOUNT_SUBSCRIPTIONS';
14:34:48 682  var_account_id NUMBER;
14:34:48 683  -- EXCEPTIONS
14:34:48 684  BAD_GROUP_ID	      EXCEPTION;
14:34:48 685  BEGIN
14:34:48 686  	-- Get account id
14:34:48 687  	BEGIN
14:34:48 688  	  SELECT
14:34:48 689  	    ACCOUNT.ID INTO var_account_id
14:34:48 690  	  FROM
14:34:48 691  	    ACCOUNT
14:34:48 692  	  WHERE
14:34:48 693  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:48 694  	  EXCEPTION
14:34:48 695  	    WHEN NO_DATA_FOUND THEN
14:34:48 696  	      RAISE BAD_GROUP_ID;
14:34:48 697  	END;
14:34:48 698  
14:34:48 699  	-- Get information about account subscriptions
14:34:48 700  	OPEN out_result_set FOR
14:34:48 701  	SELECT
14:34:48 702  	  in_group_id AS "GROUP_ID",
14:34:48 703  	  SUBSCRIPTION.ID AS "SUBSCRIPTION_ID",
14:34:48 704  	  SUBSCRIPTION.SUBSCRIPTION_STATUS_ID,
14:34:48 705  	  SUBSCRIPTION.PURCHASE_DATE,
14:34:48 706  	  SUBSCRIPTION.SUSPEND_DATE,
14:34:48 707  	  SUBSCRIPTION.REACTIVATION_DATE,
14:34:48 708  	  SUBSCRIPTION.CANCELLATION_DATE,
14:34:48 709  	  SUBSCRIPTION_CANCEL_REASON.VALUE as "CANCEL_TYPE",
14:34:48 710  	  SUBSCRIPTION.INSTRUMENT_ID,
14:34:48 711  	  SUBSCRIPTION.INSTRUMENT_TYPE_ID,
14:34:48 712  	  OFFER_CHAIN.ID AS "OFFER_CHAIN_ID",
14:34:48 713  	  OFFER_CHAIN.NAME,
14:34:48 714  	  OFFER_CHAIN.DESCRIPTION,
14:34:48 715  	  OFFER_CHAIN.PRODUCT_URI,
14:34:48 716  	  PROCS_SUBSCRIPTION_V18.CALC_SUBSCRIPTION_END_DATE(SUBSCRIPTION.ID) as "END_DATE",
14:34:48 717  	  PROCS_SUBSCRIPTION_V18.GET_RECENT_CHARGE(SUBSCRIPTION.ID) AS "RECENT_CHARGE",
14:34:48 718  	  PROCS_SUBSCRIPTION_V18.GET_RENEWAL_DATE(SUBSCRIPTION.ID) AS "RENEWAL_DATE",
14:34:48 719  	  PROCS_SUBSCRIPTION_V18.GET_BILLING_CYCLE(SUBSCRIPTION.ID) AS "BILLING_CYCLE",
14:34:48 720  	  PROCS_SUBSCRIPTION_V18.IS_SUBSCRIPTION_CANCELABLE(SUBSCRIPTION.ID) AS "IS_CANCELABLE",
14:34:48 721  	  ITUNES_RECEIPT.ID AS "ITUNES_RECEIPT_ID",
14:34:48 722  	  (
14:34:48 723  	    SELECT
14:34:48 724  	      MAX(ENTITLEMENT_END_DATE)
14:34:48 725  	      FROM LICENSE
14:34:48 726  	      WHERE LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:48 727  	  )
14:34:48 728  	  as "ENT_END_DATE",
14:34:48 729  	  (
14:34:48 730  	    SELECT
14:34:48 731  	      MIN(START_DATE)
14:34:48 732  	      FROM LICENSE
14:34:48 733  	      WHERE LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:48 734  	  )
14:34:48 735  	  as "ENT_START_DATE",
14:34:48 736  	  GROUP_ACCOUNT.SUBSCRIPTION_ID GA_SUBSCRIPTION_ID,
14:34:48 737  	  GROUP_ACCOUNT.ID GA_ID,
14:34:48 738  	  GROUP_ACCOUNT.GROUP_NAME GA_GROUP_NAME,
14:34:48 739  	  GROUP_ACCOUNT.FIRST_NAME GA_FIRST_NAME,
14:34:48 740  	  GROUP_ACCOUNT.LAST_NAME GA_LAST_NAME,
14:34:48 741  	  GROUP_ACCOUNT.EMAIL GA_EMAIL,
14:34:48 742  	  GROUP_ACCOUNT.PHONE GA_PHONE,
14:34:48 743  	  GROUP_ACCOUNT.ORGANIZATION_TYPE GA_ORGANIZATION_TYPE,
14:34:48 744  	  GROUP_ACCOUNT.SEATS GA_SEATS,
14:34:48 745  	  PROCS_GROUP_ACCOUNT_V18.F_GET_NUM_OCCUPIED_GROUP_SEATS(GROUP_ACCOUNT.ID) GA_SEATS_USED,
14:34:48 746  	  GROUP_ACCOUNT.IP GA_IP,
14:34:48 747  	  PROCS_SUBSCRIPTION_V18.GET_GIFT_CERT_CODE_BY_SUB_ID(SUBSCRIPTION.ID) GIFT_CERTIFICATE_CODE,
14:34:48 748  	  PROCS_ACCOUNT_V18.GET_GRACE_START_DATE(SUBSCRIPTION.ID) GRACE_START_DATE,
14:34:48 749  	  PROCS_ACCOUNT_V18.GET_GRACE_END_DATE(SUBSCRIPTION.ID) GRACE_END_DATE
14:34:48 750  	FROM
14:34:48 751  	  SUBSCRIPTION
14:34:48 752  	  INNER JOIN OFFER_CHAIN ON SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 753  	  LEFT JOIN SUBSCRIPTION_CANCEL_REASON ON SUBSCRIPTION.SCT_ID = SUBSCRIPTION_CANCEL_REASON.ID
14:34:48 754  	  LEFT JOIN ITUNES_RECEIPT ON SUBSCRIPTION.ID = ITUNES_RECEIPT.SUBSCRIPTION_ID
14:34:48 755  	  LEFT JOIN GROUP_ACCOUNT ON SUBSCRIPTION.ID = GROUP_ACCOUNT.SUBSCRIPTION_ID
14:34:48 756  	WHERE
14:34:48 757  	  SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:48 758  	  AND (SUBSCRIPTION.SCT_ID IS NULL OR SUBSCRIPTION.SCT_ID != GLOBAL_STATUSES_V18.REAL_TIME_CANCEL_REASON)
14:34:48 759  	  AND SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = NVL(in_status, SUBSCRIPTION.SUBSCRIPTION_STATUS_ID)
14:34:48 760  	  AND PROCS_COMMON_V18.NORMALIZE_DATE(SUBSCRIPTION.PURCHASE_DATE) >= NVL(in_start_date, PROCS_COMMON_V18.NORMALIZE_DATE(SUBSCRIPTION.PURCHASE_DATE))
14:34:48 761  	  AND PROCS_COMMON_V18.NORMALIZE_DATE(SUBSCRIPTION.PURCHASE_DATE) <= NVL(in_end_date, PROCS_COMMON_V18.NORMALIZE_DATE(SUBSCRIPTION.PURCHASE_DATE))
14:34:48 762  	  AND (in_group_account_type IS NULL OR OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID = in_group_account_type);
14:34:48 763  
14:34:48 764  EXCEPTION
14:34:48 765  WHEN BAD_GROUP_ID THEN
14:34:48 766  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 767  	  SPROC_NAME, 'Can not find account with given group id');
14:34:48 768  WHEN OTHERS THEN
14:34:48 769  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 770  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 771  END GET_ACCOUNT_SUBSCRIPTIONS;
14:34:48 772  
14:34:48 773  /******************************************************************************/
14:34:48 774  
14:34:48 775  PROCEDURE FREEZE_ACCOUNT (
14:34:48 776  /*
14:34:48 777  Throws exceptions:
14:34:48 778  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 779  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 780  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 781  */
14:34:48 782  	in_group_id   IN NUMBER,
14:34:48 783  	in_updated_by IN VARCHAR2,
14:34:48 784  	in_note       IN VARCHAR2,
14:34:48 785  	in_agent_id   IN NUMBER
14:34:48 786  ) AS
14:34:48 787  SPROC_NAME	    CONSTANT VARCHAR2(14) := 'FREEZE_ACCOUNT';
14:34:48 788  -- VARIABLES
14:34:48 789  var_account_id	    NUMBER;
14:34:48 790  var_account_status_id NUMBER;
14:34:48 791  -- EXCEPTIONS
14:34:48 792  BAD_GROUP_ID	    EXCEPTION;
14:34:48 793  BAD_ACCOUNT_STATUS_ID EXCEPTION;
14:34:48 794  CAN_NOT_CREATE_NOTE   EXCEPTION;
14:34:48 795  EXCEPTION_MESSAGE     VARCHAR2(1024);
14:34:48 796  BEGIN
14:34:48 797  
14:34:48 798  	-- Get account status, account id
14:34:48 799  	BEGIN
14:34:48 800  	  SELECT
14:34:48 801  	    ACCOUNT.ID,
14:34:48 802  	    ACCOUNT.ACCOUNT_STATUS_ID
14:34:48 803  	    into
14:34:48 804  	    var_account_id,
14:34:48 805  	    var_account_status_id
14:34:48 806  	  FROM
14:34:48 807  	    ACCOUNT
14:34:48 808  	  WHERE
14:34:48 809  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:48 810  	  EXCEPTION
14:34:48 811  	    WHEN NO_DATA_FOUND THEN
14:34:48 812  	      RAISE BAD_GROUP_ID;
14:34:48 813  	END;
14:34:48 814  
14:34:48 815  	-- We can freeze only ACTIVE accounts
14:34:48 816  	IF var_account_status_id != GLOBAL_STATUSES_V18.ACCOUNT_ACTIVE
14:34:48 817  	  AND var_account_status_id != GLOBAL_STATUSES_V18.ACCOUNT_FROZEN THEN
14:34:48 818  	  RAISE BAD_ACCOUNT_STATUS_ID;
14:34:48 819  	END IF;
14:34:48 820  
14:34:48 821  	-- Set account status
14:34:48 822  	PROCS_ACCOUNT_V18.UPDATE_ACCOUNT_STATUS(
14:34:48 823  	  in_account_id        => var_account_id,
14:34:48 824  	  in_updated_by        => in_updated_by,
14:34:48 825  	  in_account_status_id => GLOBAL_STATUSES_V18.ACCOUNT_FROZEN
14:34:48 826  	);
14:34:48 827  
14:34:48 828  	-- Annotate account
14:34:48 829  	BEGIN
14:34:48 830  	  PROCS_ACCOUNT_V18.ANNOTATE_ACCOUNT(
14:34:48 831  	    in_group_id   => in_group_id,
14:34:48 832  	    in_agent_id   => in_agent_id,
14:34:48 833  	    in_note	  => in_note,
14:34:48 834  	    in_created_by => in_updated_by
14:34:48 835  	  );
14:34:48 836  	  EXCEPTION
14:34:48 837  	    WHEN OTHERS THEN
14:34:48 838  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:48 839  	      RAISE CAN_NOT_CREATE_NOTE;
14:34:48 840  	END;
14:34:48 841  
14:34:48 842  EXCEPTION
14:34:48 843  WHEN BAD_GROUP_ID THEN
14:34:48 844  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 845  	  SPROC_NAME, 'No such group id');
14:34:48 846  WHEN BAD_ACCOUNT_STATUS_ID THEN
14:34:48 847  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.STATE_ERROR,
14:34:48 848  	  SPROC_NAME, 'Could not update this account. Status should to be active or frozen');
14:34:48 849  WHEN CAN_NOT_CREATE_NOTE THEN
14:34:48 850  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:48 851  	  SPROC_NAME, 'Could not annotate account', EXCEPTION_MESSAGE);
14:34:48 852  WHEN OTHERS THEN
14:34:48 853  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 854  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 855  END FREEZE_ACCOUNT;
14:34:48 856  
14:34:48 857  /******************************************************************************/
14:34:48 858  
14:34:48 859  PROCEDURE GET_ACCOUNT_SUBSCR_INVOICES (
14:34:48 860  /*
14:34:48 861  Throws exceptions:
14:34:48 862  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 863  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 864  */
14:34:48 865  	in_group_id	   IN  NUMBER,
14:34:48 866  	in_subscription_id IN NUMBER,
14:34:48 867  	out_result_set	   OUT SYS_REFCURSOR
14:34:48 868  ) AS
14:34:48 869  SPROC_NAME	   CONSTANT VARCHAR2(27) := 'GET_ACCOUNT_SUBSCR_INVOICES';
14:34:48 870  -- VARIABLES
14:34:48 871  var_account_id	   NUMBER;
14:34:48 872  temp_subscription_id NUMBER;
14:34:48 873  -- EXCEPTIONS
14:34:48 874  BAD_GROUP_ID	  EXCEPTION;
14:34:48 875  BAD_SUBSCRIPTION_ID EXCEPTION;
14:34:48 876  BEGIN
14:34:48 877  	-- Get account id
14:34:48 878  	BEGIN
14:34:48 879  	  SELECT
14:34:48 880  	    ACCOUNT.ID into var_account_id
14:34:48 881  	  FROM
14:34:48 882  	    ACCOUNT
14:34:48 883  	  WHERE
14:34:48 884  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:48 885  	  EXCEPTION
14:34:48 886  	    WHEN NO_DATA_FOUND THEN
14:34:48 887  	      RAISE BAD_GROUP_ID;
14:34:48 888  	END;
14:34:48 889  
14:34:48 890  	-- Check that subscription exists
14:34:48 891  	BEGIN
14:34:48 892  	  IF in_subscription_id IS NOT NULL THEN
14:34:48 893  	    SELECT
14:34:48 894  	      SUBSCRIPTION.ID into temp_subscription_id
14:34:48 895  	    FROM
14:34:48 896  	      SUBSCRIPTION
14:34:48 897  	    WHERE
14:34:48 898  	      SUBSCRIPTION.ID = in_subscription_id;
14:34:48 899  	  END IF;
14:34:48 900  	  EXCEPTION
14:34:48 901  	    WHEN NO_DATA_FOUND THEN
14:34:48 902  	      RAISE BAD_SUBSCRIPTION_ID;
14:34:48 903  	END;
14:34:48 904  
14:34:48 905  	OPEN out_result_set FOR
14:34:48 906  	SELECT DISTINCT
14:34:48 907  	  INVOICE.ID as "INVOICE_ID",
14:34:48 908  	  INVOICE.CREATE_DATE,
14:34:48 909  	  INVOICE.INVOICE_STATUS_ID,
14:34:48 910  	  PROCS_INVOICE_V18.F_CALCULATE_INVOICE_AMOUNT(INVOICE.ID) as "AMOUNT",
14:34:48 911  	  OFFER_CHAIN.ID as "OFFER_CHAIN_ID",
14:34:48 912  	  OFFER_CHAIN.NAME as "OFFER_CHAIN_NAME",
14:34:48 913  	  SUBSCRIPTION.ID as "SUBSCRIPTION_ID",
14:34:48 914  	  NULL as "GC_CODE",
14:34:48 915  	  NULL as "GC_ID"
14:34:48 916  	FROM
14:34:48 917  	  LICENSE
14:34:48 918  	  INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:48 919  	  INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
14:34:48 920  	  INNER JOIN OFFER_CHAIN ON SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 921  	WHERE
14:34:48 922  	  SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:48 923  	  AND (SUBSCRIPTION.SCT_ID IS NULL OR SUBSCRIPTION.SCT_ID != GLOBAL_STATUSES_V18.REAL_TIME_CANCEL_REASON)
14:34:48 924  	  AND SUBSCRIPTION.ID = NVL(in_subscription_id, SUBSCRIPTION.ID);
14:34:48 925  
14:34:48 926  EXCEPTION
14:34:48 927  WHEN BAD_GROUP_ID THEN
14:34:48 928  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 929  	  SPROC_NAME, 'No such account');
14:34:48 930  WHEN BAD_SUBSCRIPTION_ID THEN
14:34:48 931  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 932  	  SPROC_NAME, 'No such subscription');
14:34:48 933  WHEN OTHERS THEN
14:34:48 934  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 935  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 936  END GET_ACCOUNT_SUBSCR_INVOICES;
14:34:48 937  
14:34:48 938  /******************************************************************************/
14:34:48 939  
14:34:48 940  PROCEDURE GET_ACCOUNT_GC_INVOICES (
14:34:48 941  /*
14:34:48 942  Throws exceptions:
14:34:48 943  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 944  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 945  */
14:34:48 946  	in_group_id    IN  NUMBER,
14:34:48 947  	out_result_set OUT SYS_REFCURSOR
14:34:48 948  ) AS
14:34:48 949  SPROC_NAME     CONSTANT VARCHAR2(23) := 'GET_ACCOUNT_GC_INVOICES';
14:34:48 950  -- VARIABLES
14:34:48 951  var_account_id NUMBER;
14:34:48 952  -- EXCEPTIONS
14:34:48 953  BAD_GROUP_ID EXCEPTION;
14:34:48 954  BEGIN
14:34:48 955  	-- Get account id
14:34:48 956  	BEGIN
14:34:48 957  	  SELECT
14:34:48 958  	    ACCOUNT.ID into var_account_id
14:34:48 959  	  FROM
14:34:48 960  	    ACCOUNT
14:34:48 961  	  WHERE
14:34:48 962  	    ACCOUNT.GROUP_ID = in_group_id;
14:34:48 963  	  EXCEPTION
14:34:48 964  	    WHEN NO_DATA_FOUND THEN
14:34:48 965  	      RAISE BAD_GROUP_ID;
14:34:48 966  	END;
14:34:48 967  
14:34:48 968  	-- Get invoices
14:34:48 969  	OPEN out_result_set FOR
14:34:48 970  	SELECT DISTINCT
14:34:48 971  	  INVOICE.ID as "INVOICE_ID",
14:34:48 972  	  INVOICE.CREATE_DATE,
14:34:48 973  	  INVOICE.INVOICE_STATUS_ID,
14:34:48 974  	  PROCS_INVOICE_V18.F_CALCULATE_INVOICE_AMOUNT(INVOICE.ID) as "AMOUNT",
14:34:48 975  	  OFFER_CHAIN.ID as "OFFER_CHAIN_ID",
14:34:48 976  	  OFFER_CHAIN.NAME as "OFFER_CHAIN_NAME",
14:34:48 977  	  NULL as "SUBSCRIPTION_ID",
14:34:48 978  	  GIFT_CERTIFICATE.CODE as "GC_CODE",
14:34:48 979  	  GIFT_CERTIFICATE.ID as "GC_ID"
14:34:48 980  	FROM
14:34:48 981  	  GIFT_CERTIFICATE
14:34:48 982  	  INNER JOIN INVOICE ON GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = INVOICE.ID
14:34:48 983  	  INNER JOIN OFFER_CHAIN ON GIFT_CERTIFICATE.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 984  	WHERE
14:34:48 985  	  ROWNUM <= 100 AND
14:34:48 986  	  GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id;
14:34:48 987  
14:34:48 988  EXCEPTION
14:34:48 989  WHEN BAD_GROUP_ID THEN
14:34:48 990  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 991  	  SPROC_NAME, 'No such account');
14:34:48 992  WHEN OTHERS THEN
14:34:48 993  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 994  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 995  END GET_ACCOUNT_GC_INVOICES;
14:34:48 996  
14:34:48 997  /******************************************************************************/
14:34:48 998  -- norlov: #38580
14:34:48 999  PROCEDURE GET_GC_INVOICE (
14:34:48 1000  /*
14:34:48 1001  Throws exceptions:
14:34:48 1002  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1003  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1004  */
14:34:48 1005  	 in_group_id	IN  NUMBER,
14:34:48 1006  	 in_gc_code	IN  VARCHAR2,
14:34:48 1007  	 out_result_set OUT SYS_REFCURSOR
14:34:48 1008  ) AS
14:34:48 1009  SPROC_NAME     CONSTANT VARCHAR2(14) := 'GET_GC_INVOICE';
14:34:48 1010  -- VARIABLES
14:34:48 1011  var_account_id NUMBER;
14:34:48 1012  -- EXCEPTIONS
14:34:48 1013  BAD_GROUP_ID EXCEPTION;
14:34:48 1014  BEGIN
14:34:48 1015  	 -- Get account id
14:34:48 1016  	 BEGIN
14:34:48 1017  	   SELECT
14:34:48 1018  	     ACCOUNT.ID into var_account_id
14:34:48 1019  	   FROM
14:34:48 1020  	     ACCOUNT
14:34:48 1021  	   WHERE
14:34:48 1022  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1023  	   EXCEPTION
14:34:48 1024  	     WHEN NO_DATA_FOUND THEN
14:34:48 1025  	       RAISE BAD_GROUP_ID;
14:34:48 1026  	 END;
14:34:48 1027  
14:34:48 1028  	 -- Get invoice for the GC
14:34:48 1029  	 OPEN out_result_set FOR
14:34:48 1030  	 SELECT DISTINCT
14:34:48 1031  	   INVOICE.ID as "INVOICE_ID",
14:34:48 1032  	   INVOICE.CREATE_DATE,
14:34:48 1033  	   INVOICE.INVOICE_STATUS_ID,
14:34:48 1034  	   PROCS_INVOICE_V18.F_CALCULATE_INVOICE_AMOUNT(INVOICE.ID) as "AMOUNT",
14:34:48 1035  	   OFFER_CHAIN.ID as "OFFER_CHAIN_ID",
14:34:48 1036  	   OFFER_CHAIN.NAME as "OFFER_CHAIN_NAME",
14:34:48 1037  	   NULL as "SUBSCRIPTION_ID",
14:34:48 1038  	   GIFT_CERTIFICATE.CODE as "GC_CODE"
14:34:48 1039  	 FROM
14:34:48 1040  	   GIFT_CERTIFICATE
14:34:48 1041  	   INNER JOIN INVOICE ON GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = INVOICE.ID
14:34:48 1042  	   INNER JOIN OFFER_CHAIN ON GIFT_CERTIFICATE.OFFER_CHAIN_ID = OFFER_CHAIN.ID
14:34:48 1043  	 WHERE
14:34:48 1044  	   GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id
14:34:48 1045  	   AND GIFT_CERTIFICATE.CODE = in_gc_code;
14:34:48 1046  
14:34:48 1047  EXCEPTION
14:34:48 1048  WHEN BAD_GROUP_ID THEN
14:34:48 1049  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1050  	   SPROC_NAME, 'No such account');
14:34:48 1051  WHEN OTHERS THEN
14:34:48 1052  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1053  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1054  END GET_GC_INVOICE;
14:34:48 1055  /******************************************************************************/
14:34:48 1056  
14:34:48 1057  PROCEDURE GET_ACCOUNT_PRODUCTS (
14:34:48 1058  /*
14:34:48 1059  Throws exceptions:
14:34:48 1060  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1061  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1062  */
14:34:48 1063  	 in_group_id	IN  NUMBER,
14:34:48 1064  	 out_result_set OUT SYS_REFCURSOR
14:34:48 1065  ) AS
14:34:48 1066  SPROC_NAME     CONSTANT VARCHAR2(20) := 'GET_ACCOUNT_PRODUCTS';
14:34:48 1067  -- VARIABLES
14:34:48 1068  var_account_id NUMBER;
14:34:48 1069  -- EXCEPTIONS
14:34:48 1070  BAD_GROUP_ID EXCEPTION;
14:34:48 1071  BEGIN
14:34:48 1072  	 -- Get account id
14:34:48 1073  	 BEGIN
14:34:48 1074  	   SELECT
14:34:48 1075  	     ACCOUNT.ID into var_account_id
14:34:48 1076  	   FROM
14:34:48 1077  	     ACCOUNT
14:34:48 1078  	   WHERE
14:34:48 1079  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1080  	   EXCEPTION
14:34:48 1081  	     WHEN NO_DATA_FOUND THEN
14:34:48 1082  	       RAISE BAD_GROUP_ID;
14:34:48 1083  	 END;
14:34:48 1084  
14:34:48 1085  	 OPEN out_result_set FOR
14:34:48 1086  	 SELECT DISTINCT
14:34:48 1087  	   PRODUCT.ID,
14:34:48 1088  	   PRODUCT.NAME
14:34:48 1089  	 FROM
14:34:48 1090  	   PRODUCT
14:34:48 1091  	 WHERE
14:34:48 1092  	   PRODUCT.ID IN (
14:34:48 1093  	     SELECT DISTINCT
14:34:48 1094  	       PRODUCT_OFFERING.PRODUCT_ID
14:34:48 1095  	     FROM
14:34:48 1096  	       PRODUCT_OFFERING
14:34:48 1097  	     WHERE
14:34:48 1098  	       PRODUCT_OFFERING.ID IN (
14:34:48 1099  		 SELECT DISTINCT
14:34:48 1100  		   OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
14:34:48 1101  		 FROM
14:34:48 1102  		   OFFER_PRODUCT_OFFERING
14:34:48 1103  		 WHERE
14:34:48 1104  		   OFFER_PRODUCT_OFFERING.OFFER_ID IN (
14:34:48 1105  		     SELECT DISTINCT
14:34:48 1106  		       OFFER_OFFER_CHAIN.OFFER_ID
14:34:48 1107  		     FROM
14:34:48 1108  		       OFFER_OFFER_CHAIN
14:34:48 1109  		     WHERE
14:34:48 1110  		       OFFER_OFFER_CHAIN.OFFER_CHAIN_ID IN (
14:34:48 1111  			 SELECT DISTINCT
14:34:48 1112  			   SUBSCRIPTION.OFFER_CHAIN_ID
14:34:48 1113  			 FROM
14:34:48 1114  			   SUBSCRIPTION
14:34:48 1115  			 WHERE
14:34:48 1116  			   SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:48 1117  		       )
14:34:48 1118  		   )
14:34:48 1119  	       )
14:34:48 1120  	   );
14:34:48 1121  
14:34:48 1122  EXCEPTION
14:34:48 1123  WHEN BAD_GROUP_ID THEN
14:34:48 1124  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1125  	   SPROC_NAME, 'No such account');
14:34:48 1126  WHEN OTHERS THEN
14:34:48 1127  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1128  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1129  END GET_ACCOUNT_PRODUCTS;
14:34:48 1130  
14:34:48 1131  /******************************************************************************/
14:34:48 1132  PROCEDURE GET_ACCOUNT_PROD_OFFERRINGS (
14:34:48 1133  /*
14:34:48 1134  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:48 1135  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1136  */
14:34:48 1137  	 in_group_id IN NUMBER,
14:34:48 1138  	 out_result_set     OUT SYS_REFCURSOR
14:34:48 1139  ) AS
14:34:48 1140  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_ACCOUNT_PROD_OFFERRINGS';
14:34:48 1141  -- VARIABLES
14:34:48 1142  var_account_id NUMBER;
14:34:48 1143  -- EXCEPTIONS
14:34:48 1144  BAD_GROUP_ID EXCEPTION;
14:34:48 1145  BEGIN
14:34:48 1146  	  -- Get account id
14:34:48 1147  	 BEGIN
14:34:48 1148  	   SELECT
14:34:48 1149  	     ACCOUNT.ID into var_account_id
14:34:48 1150  	   FROM
14:34:48 1151  	     ACCOUNT
14:34:48 1152  	   WHERE
14:34:48 1153  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1154  	   EXCEPTION
14:34:48 1155  	     WHEN NO_DATA_FOUND THEN
14:34:48 1156  	       RAISE BAD_GROUP_ID;
14:34:48 1157  	 END;
14:34:48 1158  
14:34:48 1159  	 OPEN out_result_set FOR
14:34:48 1160  	 SELECT DISTINCT
14:34:48 1161  	   PRODUCT_OFFERING.ID,
14:34:48 1162  	   PRODUCT_OFFERING.PRODUCT_ID,
14:34:48 1163  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
14:34:48 1164  	   PRODUCT_OFFERING.UNIT_PRICE,
14:34:48 1165  	   PRODUCT_OFFERING.QUANTITY,
14:34:48 1166  	   PRODUCT_OFFERING.CREATE_DATE,
14:34:48 1167  	   PRODUCT_OFFERING.CREATED_BY,
14:34:48 1168  	   CAPABILITY.ID CAP_ID,
14:34:48 1169  	   CAPABILITY.CODE CAP_CODE,
14:34:48 1170  	   CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
14:34:48 1171  	   CAPABILITY.SHAREABLE CAP_SHAREABLE
14:34:48 1172  	 FROM
14:34:48 1173  	   OFFER_PRODUCT_OFFERING
14:34:48 1174  	   INNER JOIN PRODUCT_OFFERING ON PRODUCT_OFFERING.ID = OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
14:34:48 1175  	   INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
14:34:48 1176  	 WHERE
14:34:48 1177  	   OFFER_PRODUCT_OFFERING.OFFER_ID IN (
14:34:48 1178  	     SELECT DISTINCT
14:34:48 1179  	       OFFER_OFFER_CHAIN.OFFER_ID
14:34:48 1180  	     FROM
14:34:48 1181  	       OFFER_OFFER_CHAIN
14:34:48 1182  	     WHERE
14:34:48 1183  	       OFFER_OFFER_CHAIN.OFFER_CHAIN_ID IN (
14:34:48 1184  		 SELECT DISTINCT
14:34:48 1185  		   SUBSCRIPTION.OFFER_CHAIN_ID
14:34:48 1186  		 FROM
14:34:48 1187  		   SUBSCRIPTION
14:34:48 1188  		 WHERE
14:34:48 1189  		   SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:48 1190  	       )
14:34:48 1191  	   );
14:34:48 1192  
14:34:48 1193  EXCEPTION
14:34:48 1194  WHEN BAD_GROUP_ID THEN
14:34:48 1195  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1196  	   SPROC_NAME, 'No such account');
14:34:48 1197  WHEN OTHERS THEN
14:34:48 1198  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1199  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1200  END GET_ACCOUNT_PROD_OFFERRINGS;
14:34:48 1201  
14:34:48 1202  /******************************************************************************/
14:34:48 1203  
14:34:48 1204  PROCEDURE UPDATE_ACCOUNT_STATUS (
14:34:48 1205  /*
14:34:48 1206  Throws exceptions:
14:34:48 1207  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1208  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1209  */
14:34:48 1210  	 in_account_id	      IN ACCOUNT.ID%TYPE,
14:34:48 1211  	 in_account_status_id IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE,
14:34:48 1212  	 in_updated_by	      IN ACCOUNT.UPDATED_BY%TYPE
14:34:48 1213  ) AS
14:34:48 1214  SPROC_NAME CONSTANT VARCHAR2(21) := 'UPDATE_ACCOUNT_STATUS';
14:34:48 1215  -- EXCEPTIONS
14:34:48 1216  BAD_ACCOUNT_ID	      EXCEPTION;
14:34:48 1217  BAD_STATUS_ID	      EXCEPTION;
14:34:48 1218  EXCEPTION_MESSAGE      VARCHAR2(1024);
14:34:48 1219  BEGIN
14:34:48 1220  
14:34:48 1221  	 IF in_account_status_id != GLOBAL_STATUSES_V18.ACCOUNT_ACTIVE
14:34:48 1222  	   AND in_account_status_id != GLOBAL_STATUSES_V18.ACCOUNT_FROZEN
14:34:48 1223  	   AND in_account_status_id != GLOBAL_STATUSES_V18.ACCOUNT_DISABLED THEN
14:34:48 1224  	   RAISE BAD_STATUS_ID;
14:34:48 1225  	 END IF;
14:34:48 1226  
14:34:48 1227  	 PROCS_ACCOUNT_CRU_V18.UPDATE_ACCOUNT(
14:34:48 1228  	   in_account_id	=> in_account_id,
14:34:48 1229  	   in_account_status_id => in_account_status_id,
14:34:48 1230  	   in_updated_by	=> in_updated_by
14:34:48 1231  	 );
14:34:48 1232  
14:34:48 1233  	 IF SQL%ROWCOUNT = 0 THEN
14:34:48 1234  	   RAISE BAD_ACCOUNT_ID;
14:34:48 1235  	 END IF;
14:34:48 1236  
14:34:48 1237  EXCEPTION
14:34:48 1238  WHEN BAD_ACCOUNT_ID THEN
14:34:48 1239  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1240  	   SPROC_NAME, 'No such account');
14:34:48 1241  WHEN BAD_STATUS_ID THEN
14:34:48 1242  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 1243  	   SPROC_NAME, 'Bad status id');
14:34:48 1244  WHEN OTHERS THEN
14:34:48 1245  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1246  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1247  END UPDATE_ACCOUNT_STATUS;
14:34:48 1248  
14:34:48 1249  /******************************************************************************/
14:34:48 1250  
14:34:48 1251  PROCEDURE GET_NEEDS_ENTTL_LICENSES_NUM (
14:34:48 1252  /*
14:34:48 1253  Throws exceptions:
14:34:48 1254  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1255  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1256  */
14:34:48 1257  	 in_group_id	  IN ACCOUNT.GROUP_ID%TYPE,
14:34:48 1258  	 out_licenses_num OUT NUMBER
14:34:48 1259  ) AS
14:34:48 1260  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_NEEDS_ENTTL_LICENSES_NUM';
14:34:48 1261  -- VARIABLES
14:34:48 1262  var_account_id	  ACCOUNT.GROUP_ID%TYPE;
14:34:48 1263  -- EXCEPTIONS
14:34:48 1264  BAD_ACCOUNT_ID EXCEPTION;
14:34:48 1265  BEGIN
14:34:48 1266  
14:34:48 1267  	 BEGIN
14:34:48 1268  	   SELECT
14:34:48 1269  	     ACCOUNT.ID into var_account_id
14:34:48 1270  	   FROM
14:34:48 1271  	     ACCOUNT
14:34:48 1272  	   WHERE
14:34:48 1273  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1274  	   EXCEPTION
14:34:48 1275  	     WHEN NO_DATA_FOUND THEN
14:34:48 1276  	       RAISE BAD_ACCOUNT_ID;
14:34:48 1277  	 END;
14:34:48 1278  
14:34:48 1279  	 SELECT
14:34:48 1280  	   COUNT(LICENSE.ID) into out_licenses_num
14:34:48 1281  	 FROM
14:34:48 1282  	   LICENSE
14:34:48 1283  	   INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:48 1284  	 WHERE
14:34:48 1285  	   SUBSCRIPTION.ACCOUNT_ID = var_account_id
14:34:48 1286  	   AND LICENSE.NEEDS_ENTITLEMENTS = GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 1287  
14:34:48 1288  EXCEPTION
14:34:48 1289  WHEN BAD_ACCOUNT_ID THEN
14:34:48 1290  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1291  	   SPROC_NAME, 'No such group id');
14:34:48 1292  WHEN OTHERS THEN
14:34:48 1293  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1294  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1295  END GET_NEEDS_ENTTL_LICENSES_NUM;
14:34:48 1296  
14:34:48 1297  /******************************************************************************/
14:34:48 1298  
14:34:48 1299  PROCEDURE SET_TAX_EXEMPT (
14:34:48 1300  /*
14:34:48 1301  Throws exceptions:
14:34:48 1302  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1303  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1304  */
14:34:48 1305  	 in_group_id  IN NUMBER,
14:34:48 1306  	 in_exempt_id IN VARCHAR2
14:34:48 1307  ) AS
14:34:48 1308  SPROC_NAME CONSTANT VARCHAR2(14) := 'SET_TAX_EXEMPT';
14:34:48 1309  -- VARIABLES
14:34:48 1310  var_account_id NUMBER;
14:34:48 1311  -- EXCEPTIONS
14:34:48 1312  BAD_GROUP_ID EXCEPTION;
14:34:48 1313  BEGIN
14:34:48 1314  
14:34:48 1315  	 BEGIN
14:34:48 1316  	   SELECT
14:34:48 1317  	     ACCOUNT.ID into var_account_id
14:34:48 1318  	   FROM
14:34:48 1319  	     ACCOUNT
14:34:48 1320  	   WHERE
14:34:48 1321  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1322  	   EXCEPTION
14:34:48 1323  	     WHEN NO_DATA_FOUND THEN
14:34:48 1324  	       RAISE BAD_GROUP_ID;
14:34:48 1325  	 END;
14:34:48 1326  
14:34:48 1327  	 UPDATE
14:34:48 1328  	   ACCOUNT
14:34:48 1329  	 SET
14:34:48 1330  	   ACCOUNT.TAX_EXEMPT_ID = in_exempt_id
14:34:48 1331  	 WHERE
14:34:48 1332  	   ACCOUNT.ID = var_account_id;
14:34:48 1333  
14:34:48 1334  EXCEPTION
14:34:48 1335  WHEN BAD_GROUP_ID THEN
14:34:48 1336  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1337  	   SPROC_NAME, 'No such group id');
14:34:48 1338  WHEN OTHERS THEN
14:34:48 1339  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1340  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1341  END SET_TAX_EXEMPT;
14:34:48 1342  
14:34:48 1343  /******************************************************************************/
14:34:48 1344  
14:34:48 1345  PROCEDURE IS_TAX_EXEMPT (
14:34:48 1346  /*
14:34:48 1347  Throws exceptions:
14:34:48 1348  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1349  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1350  Return:
14:34:48 1351  	 GLOBAL_CONSTANTS_V18.TRUE if ACCOUNT.EXEMPT_ID is not null
14:34:48 1352  	 GLOBAL_CONSTANTS_V18.FALSE else
14:34:48 1353  */
14:34:48 1354  	 in_group_id	   IN NUMBER,
14:34:48 1355  	 out_is_tax_exempt OUT NUMBER
14:34:48 1356  ) AS
14:34:48 1357  SPROC_NAME CONSTANT VARCHAR2(13) := 'IS_TAX_EXEMPT';
14:34:48 1358  -- VARIABLES
14:34:48 1359  var_is_tax_exempt ACCOUNT.TAX_EXEMPT_ID%TYPE;
14:34:48 1360  -- EXCEPTIONS
14:34:48 1361  BAD_GROUP_ID EXCEPTION;
14:34:48 1362  BEGIN
14:34:48 1363  
14:34:48 1364  	 BEGIN
14:34:48 1365  	   SELECT
14:34:48 1366  	     ACCOUNT.TAX_EXEMPT_ID into var_is_tax_exempt
14:34:48 1367  	   FROM
14:34:48 1368  	     ACCOUNT
14:34:48 1369  	   WHERE
14:34:48 1370  	     ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1371  	   EXCEPTION
14:34:48 1372  	     WHEN NO_DATA_FOUND THEN
14:34:48 1373  	       RAISE BAD_GROUP_ID;
14:34:48 1374  	 END;
14:34:48 1375  
14:34:48 1376  	 IF var_is_tax_exempt IS NULL THEN
14:34:48 1377  	   out_is_tax_exempt := GLOBAL_CONSTANTS_V18.FALSE;
14:34:48 1378  	 ELSE
14:34:48 1379  	   out_is_tax_exempt := GLOBAL_CONSTANTS_V18.TRUE;
14:34:48 1380  	 END IF;
14:34:48 1381  
14:34:48 1382  EXCEPTION
14:34:48 1383  WHEN BAD_GROUP_ID THEN
14:34:48 1384  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1385  	   SPROC_NAME, 'No such group id');
14:34:48 1386  WHEN OTHERS THEN
14:34:48 1387  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1388  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1389  END IS_TAX_EXEMPT;
14:34:48 1390  
14:34:48 1391  /******************************************************************************/
14:34:48 1392  
14:34:48 1393  PROCEDURE GET_GROUP_ID_BY_ACCOUNT_ID (
14:34:48 1394  /*
14:34:48 1395  Throws exceptions:
14:34:48 1396  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1397  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1398  */
14:34:48 1399  	 in_account_id IN NUMBER,
14:34:48 1400  	 out_group_id  OUT NUMBER
14:34:48 1401  ) AS
14:34:48 1402  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_GROUP_ID_BY_ACCOUNT_ID';
14:34:48 1403  BEGIN
14:34:48 1404  
14:34:48 1405  	 SELECT
14:34:48 1406  	   ACCOUNT.GROUP_ID into out_group_id
14:34:48 1407  	 FROM
14:34:48 1408  	   ACCOUNT
14:34:48 1409  	 WHERE
14:34:48 1410  	   ACCOUNT.ID = in_account_id;
14:34:48 1411  
14:34:48 1412  EXCEPTION
14:34:48 1413  WHEN NO_DATA_FOUND THEN
14:34:48 1414  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1415  	   SPROC_NAME, 'No such account');
14:34:48 1416  WHEN OTHERS THEN
14:34:48 1417  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1418  	   SPROC_NAME, 'Unknown error');
14:34:48 1419  END GET_GROUP_ID_BY_ACCOUNT_ID;
14:34:48 1420  
14:34:48 1421  /******************************************************************************/
14:34:48 1422  
14:34:48 1423  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
14:34:48 1424  /*
14:34:48 1425  Throws exceptions:
14:34:48 1426  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1427  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1428  */
14:34:48 1429  	 in_group_id IN NUMBER,
14:34:48 1430  	 out_account_id  OUT NUMBER
14:34:48 1431  ) AS
14:34:48 1432  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_ACCOUNT_ID_BY_GROUP_ID';
14:34:48 1433  BEGIN
14:34:48 1434  
14:34:48 1435  	 SELECT
14:34:48 1436  	   ACCOUNT.ID into out_account_id
14:34:48 1437  	 FROM
14:34:48 1438  	   ACCOUNT
14:34:48 1439  	 WHERE
14:34:48 1440  	   ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1441  
14:34:48 1442  EXCEPTION
14:34:48 1443  WHEN NO_DATA_FOUND THEN
14:34:48 1444  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1445  	   SPROC_NAME, 'No such account');
14:34:48 1446  WHEN OTHERS THEN
14:34:48 1447  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1448  	   SPROC_NAME, 'Unknown error');
14:34:48 1449  END GET_ACCOUNT_ID_BY_GROUP_ID;
14:34:48 1450  
14:34:48 1451  /******************************************************************************/
14:34:48 1452  
14:34:48 1453  PROCEDURE GET_GROUPS_ID_BY_INVOICE_ID (
14:34:48 1454  /*
14:34:48 1455  This procedure is using for LOCKING only
14:34:48 1456  
14:34:48 1457  Throws exceptions:
14:34:48 1458  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1459  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1460  */
14:34:48 1461  	 in_invoice_id IN NUMBER,
14:34:48 1462  	 out_group_ids OUT SYS_REFCURSOR
14:34:48 1463  ) AS
14:34:48 1464  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_GROUPS_ID_BY_INVOICE_ID';
14:34:48 1465  -- VARIABLES
14:34:48 1466  temp_invoice_id		 NUMBER;
14:34:48 1467  var_subscrib_group_id	 NUMBER;
14:34:48 1468  var_gc_purchaser_group_id NUMBER;
14:34:48 1469  var_gc_redeemer_group_id  NUMBER;
14:34:48 1470  -- EXCEPTIONS
14:34:48 1471  BAD_INVOICE_ID	    EXCEPTION;
14:34:48 1472  CAN_NOT_FIND_ACCOUNT EXCEPTION;
14:34:48 1473  BEGIN
14:34:48 1474  
14:34:48 1475  	 BEGIN
14:34:48 1476  	   SELECT
14:34:48 1477  	     INVOICE.ID into temp_invoice_id
14:34:48 1478  	   FROM
14:34:48 1479  	     INVOICE
14:34:48 1480  	   WHERE
14:34:48 1481  	     INVOICE.ID = in_invoice_id;
14:34:48 1482  	   EXCEPTION
14:34:48 1483  	     WHEN NO_DATA_FOUND THEN
14:34:48 1484  	       RAISE BAD_INVOICE_ID;
14:34:48 1485  	 END;
14:34:48 1486  
14:34:48 1487  	 BEGIN
14:34:48 1488  	   SELECT DISTINCT
14:34:48 1489  	     ACCOUNT.GROUP_ID into var_subscrib_group_id
14:34:48 1490  	   FROM
14:34:48 1491  	     ACCOUNT
14:34:48 1492  	     INNER JOIN SUBSCRIPTION ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
14:34:48 1493  	     INNER JOIN LICENSE ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
14:34:48 1494  	   WHERE
14:34:48 1495  	     LICENSE.INVOICE_ID = in_invoice_id;
14:34:48 1496  	   EXCEPTION
14:34:48 1497  	     WHEN NO_DATA_FOUND THEN
14:34:48 1498  	       var_subscrib_group_id := NULL;
14:34:48 1499  	 END;
14:34:48 1500  
14:34:48 1501  	 IF var_subscrib_group_id IS NULL THEN
14:34:48 1502  	   BEGIN
14:34:48 1503  	     SELECT
14:34:48 1504  	       GIFT_CERTIFICATE.PURCHASER_GROUP_ID,
14:34:48 1505  	       GIFT_CERTIFICATE.REDEEMER_GROUP_ID
14:34:48 1506  	       into
14:34:48 1507  	       var_gc_purchaser_group_id,
14:34:48 1508  	       var_gc_redeemer_group_id
14:34:48 1509  	     FROM
14:34:48 1510  	       GIFT_CERTIFICATE
14:34:48 1511  	     WHERE
14:34:48 1512  	       GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = in_invoice_id
14:34:48 1513  	       OR GIFT_CERTIFICATE.FINALIZED_INVOICE_ID = in_invoice_id;
14:34:48 1514  	     EXCEPTION
14:34:48 1515  	       WHEN NO_DATA_FOUND THEN
14:34:48 1516  		 var_gc_purchaser_group_id := NULL;
14:34:48 1517  		 var_gc_redeemer_group_id  := NULL;
14:34:48 1518  	   END;
14:34:48 1519  	 END IF;
14:34:48 1520  
14:34:48 1521  	 IF var_subscrib_group_id IS NULL
14:34:48 1522  	   AND var_gc_purchaser_group_id IS NULL
14:34:48 1523  	   AND var_gc_redeemer_group_id IS NULL THEN
14:34:48 1524  	     RAISE CAN_NOT_FIND_ACCOUNT;
14:34:48 1525  	 END IF;
14:34:48 1526  
14:34:48 1527  	 OPEN out_group_ids FOR
14:34:48 1528  	 SELECT GROUP_ID FROM (
14:34:48 1529  	   SELECT
14:34:48 1530  	     var_subscrib_group_id as "GROUP_ID"
14:34:48 1531  	   FROM
14:34:48 1532  	     DUAL
14:34:48 1533  	   UNION
14:34:48 1534  	   SELECT
14:34:48 1535  	     var_gc_purchaser_group_id as "GROUP_ID"
14:34:48 1536  	   FROM
14:34:48 1537  	     DUAL
14:34:48 1538  	   UNION
14:34:48 1539  	   SELECT
14:34:48 1540  	     var_gc_redeemer_group_id as "GROUP_ID"
14:34:48 1541  	   FROM
14:34:48 1542  	     DUAL
14:34:48 1543  	 )
14:34:48 1544  	 WHERE
14:34:48 1545  	   GROUP_ID IS NOT NULL;
14:34:48 1546  
14:34:48 1547  EXCEPTION
14:34:48 1548  WHEN BAD_INVOICE_ID THEN
14:34:48 1549  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1550  	   SPROC_NAME, 'No such invoice');
14:34:48 1551  WHEN CAN_NOT_FIND_ACCOUNT THEN
14:34:48 1552  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1553  	   SPROC_NAME, 'Could not find account for given invoice');
14:34:48 1554  WHEN OTHERS THEN
14:34:48 1555  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1556  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1557  END GET_GROUPS_ID_BY_INVOICE_ID;
14:34:48 1558  
14:34:48 1559  PROCEDURE GET_ACCOUNT_TAX_EXEMPT_ID (
14:34:48 1560  /*
14:34:48 1561  Throws exceptions:
14:34:48 1562  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1563  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1564  */
14:34:48 1565  	 in_group_id	   IN NUMBER,
14:34:48 1566  	 out_tax_exempt_id OUT VARCHAR2
14:34:48 1567  ) AS
14:34:48 1568  SPROC_NAME CONSTANT VARCHAR2(25) := 'GET_ACCOUNT_TAX_EXEMPT_ID';
14:34:48 1569  -- VARIABLES
14:34:48 1570  -- EXCEPTIONS
14:34:48 1571  BEGIN
14:34:48 1572  
14:34:48 1573  	 SELECT
14:34:48 1574  	   ACCOUNT.TAX_EXEMPT_ID into out_tax_exempt_id
14:34:48 1575  	 FROM
14:34:48 1576  	   ACCOUNT
14:34:48 1577  	 WHERE
14:34:48 1578  	   ACCOUNT.GROUP_ID = in_group_id;
14:34:48 1579  
14:34:48 1580  EXCEPTION
14:34:48 1581  WHEN NO_DATA_FOUND THEN
14:34:48 1582  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1583  	   SPROC_NAME, 'No such account');
14:34:48 1584  WHEN OTHERS THEN
14:34:48 1585  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1586  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1587  END GET_ACCOUNT_TAX_EXEMPT_ID;
14:34:48 1588  
14:34:48 1589  PROCEDURE GET_UPGRADABLE_SUBSCRIPTIONS (
14:34:48 1590  /*
14:34:48 1591  Throws exceptions:
14:34:48 1592  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1593  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1594  
14:34:48 1595  Result has two columns:
14:34:48 1596  subscription_id and offer_chain_id
14:34:48 1597  */
14:34:48 1598  	 in_group_id	IN NUMBER,
14:34:48 1599  	 out_result_set OUT SYS_REFCURSOR
14:34:48 1600  ) AS
14:34:48 1601  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_UPGRADABLE_SUBSCRIPTIONS';
14:34:48 1602  -- Variables
14:34:48 1603  var_account_id NUMBER;
14:34:48 1604  -- Exceptions
14:34:48 1605  BAD_GROUP_ID   EXCEPTION;
14:34:48 1606  BEGIN
14:34:48 1607  
14:34:48 1608  	 BEGIN
14:34:48 1609  	   SELECT
14:34:48 1610  	     ID into var_account_id
14:34:48 1611  	   FROM
14:34:48 1612  	     ACCOUNT
14:34:48 1613  	   WHERE
14:34:48 1614  	     GROUP_ID = in_group_id;
14:34:48 1615  	   EXCEPTION
14:34:48 1616  	     WHEN NO_DATA_FOUND THEN
14:34:48 1617  	       RAISE BAD_GROUP_ID;
14:34:48 1618  	 END;
14:34:48 1619  
14:34:48 1620  	 OPEN out_result_set FOR
14:34:48 1621  	 SELECT
14:34:48 1622  	   S.ID as SUBSCRIPTION_ID,
14:34:48 1623  	   OCHMD.OFFER_CHAIN_ID
14:34:48 1624  	 FROM
14:34:48 1625  	   SUBSCRIPTION S
14:34:48 1626  	   INNER JOIN OFFER_CHAIN OCH ON OCH.ID = S.OFFER_CHAIN_ID
14:34:48 1627  	   INNER JOIN OFFER_CHAIN_META_DATA OCHMD ON (OCHMD.NAME = GLOBAL_CONSTANTS_V18.OCMD_UPGRADABLE_OFFER_CHAIN_ID AND TO_NUMBER(OCHMD.VALUE) = OCH.ID)
14:34:48 1628  	 WHERE
14:34:48 1629  	   S.ACCOUNT_ID = var_account_id;
14:34:48 1630  
14:34:48 1631  EXCEPTION
14:34:48 1632  WHEN BAD_GROUP_ID THEN
14:34:48 1633  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1634  	   SPROC_NAME, 'No such account');
14:34:48 1635  WHEN OTHERS THEN
14:34:48 1636  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1637  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1638  END GET_UPGRADABLE_SUBSCRIPTIONS;
14:34:48 1639  
14:34:48 1640  /******************************************************************************/
14:34:48 1641  
14:34:48 1642  PROCEDURE GET_USR_ALL_SBSCR_IDS (
14:34:48 1643  /*
14:34:48 1644  Throws exceptions:
14:34:48 1645  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1646  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:48 1647  
14:34:48 1648  Result has two columns:
14:34:48 1649  subscription_id and offer_chain_id
14:34:48 1650  */
14:34:48 1651  	 in_group_id	    IN NUMBER,
14:34:48 1652  	 out_result_set     OUT SYS_REFCURSOR
14:34:48 1653  ) AS
14:34:48 1654  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_USR_ALL_SBSCR_IDS';
14:34:48 1655  -- VARIABLES
14:34:48 1656  var_account_id NUMBER;
14:34:48 1657  -- EXCEPTIONS
14:34:48 1658  BAD_GROUP_ID EXCEPTION;
14:34:48 1659  BEGIN
14:34:48 1660  
14:34:48 1661  	 BEGIN
14:34:48 1662  	   SELECT
14:34:48 1663  	     A.ID INTO var_account_id
14:34:48 1664  	   FROM
14:34:48 1665  	     ACCOUNT A
14:34:48 1666  	   WHERE
14:34:48 1667  	     A.GROUP_ID = in_group_id;
14:34:48 1668  	   EXCEPTION
14:34:48 1669  	     WHEN NO_DATA_FOUND THEN
14:34:48 1670  	       RAISE BAD_GROUP_ID;
14:34:48 1671  	 END;
14:34:48 1672  
14:34:48 1673  	 OPEN out_result_set FOR
14:34:48 1674  	 SELECT
14:34:48 1675  	   S.ID
14:34:48 1676  	 FROM
14:34:48 1677  	   SUBSCRIPTION S
14:34:48 1678  	 WHERE
14:34:48 1679  	   S.ACCOUNT_ID = var_account_id
14:34:48 1680  	   AND S.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE;
14:34:48 1681  
14:34:48 1682  EXCEPTION
14:34:48 1683  WHEN BAD_GROUP_ID THEN
14:34:48 1684  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1685  	   SPROC_NAME, 'No such account');
14:34:48 1686  WHEN OTHERS THEN
14:34:48 1687  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1688  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1689  END GET_USR_ALL_SBSCR_IDS;
14:34:48 1690  
14:34:48 1691  /******************************************************************************/
14:34:48 1692  
14:34:48 1693  PROCEDURE GET_USR_SBSCR_IDS_BY_OFFCH_IDS (
14:34:48 1694  /*
14:34:48 1695  Throws exceptions:
14:34:48 1696  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1697  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1698  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:48 1699  
14:34:48 1700  Result has two columns:
14:34:48 1701  subscription_id and offer_chain_id
14:34:48 1702  */
14:34:48 1703  	 in_group_id	    IN NUMBER,
14:34:48 1704  	 in_offer_chain_ids IN core_owner.NUMBER_TABLE,
14:34:48 1705  	 out_result_set     OUT SYS_REFCURSOR
14:34:48 1706  ) AS
14:34:48 1707  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_USR_SBSCR_IDS_BY_OFFCH_IDS';
14:34:48 1708  -- VARIABLES
14:34:48 1709  var_account_id NUMBER;
14:34:48 1710  -- EXCEPTIONS
14:34:48 1711  BAD_GROUP_ID	   EXCEPTION;
14:34:48 1712  BAD_OFFER_CHAIN_IDS EXCEPTION;
14:34:48 1713  BEGIN
14:34:48 1714  
14:34:48 1715  	 IF in_offer_chain_ids IS NULL THEN
14:34:48 1716  	   RAISE BAD_OFFER_CHAIN_IDS;
14:34:48 1717  	 END IF;
14:34:48 1718  
14:34:48 1719  	 BEGIN
14:34:48 1720  	   SELECT
14:34:48 1721  	     A.ID INTO var_account_id
14:34:48 1722  	   FROM
14:34:48 1723  	     ACCOUNT A
14:34:48 1724  	   WHERE
14:34:48 1725  	     A.GROUP_ID = in_group_id;
14:34:48 1726  	   EXCEPTION
14:34:48 1727  	     WHEN NO_DATA_FOUND THEN
14:34:48 1728  	       RAISE BAD_GROUP_ID;
14:34:48 1729  	 END;
14:34:48 1730  
14:34:48 1731  	 OPEN out_result_set FOR
14:34:48 1732  	 SELECT
14:34:48 1733  	   S.ID
14:34:48 1734  	 FROM
14:34:48 1735  	   SUBSCRIPTION S
14:34:48 1736  	 WHERE
14:34:48 1737  	   S.ACCOUNT_ID = var_account_id
14:34:48 1738  	   AND S.OFFER_CHAIN_ID IN (SELECT * FROM TABLE(in_offer_chain_ids))
14:34:48 1739  	   AND S.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V18.SUBSCRIPTION_ACTIVE;
14:34:48 1740  
14:34:48 1741  EXCEPTION
14:34:48 1742  WHEN BAD_OFFER_CHAIN_IDS THEN
14:34:48 1743  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INVALID_PARAMETER,
14:34:48 1744  	   SPROC_NAME, 'Offer chains ids parameter is null');
14:34:48 1745  WHEN BAD_GROUP_ID THEN
14:34:48 1746  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:48 1747  	   SPROC_NAME, 'No such account');
14:34:48 1748  WHEN OTHERS THEN
14:34:48 1749  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1750  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1751  END GET_USR_SBSCR_IDS_BY_OFFCH_IDS;
14:34:48 1752  
14:34:48 1753  PROCEDURE GET_GROUP_IDS_BY_CC_INFO (
14:34:48 1754  	 in_last_four_cc IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
14:34:48 1755  	 in_expiration_date IN DATE,
14:34:48 1756  	 in_country IN CREDIT_CARD.COUNTRY%TYPE DEFAULT NULL,
14:34:48 1757  	 in_postal_code IN CREDIT_CARD.POSTAL_CODE%TYPE DEFAULT NULL,
14:34:48 1758  	 in_city IN CREDIT_CARD.CITY%TYPE DEFAULT NULL,
14:34:48 1759  	 in_state IN CREDIT_CARD.STATE%TYPE DEFAULT NULL,
14:34:48 1760  	 in_credit_card_type_id IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE DEFAULT NULL,
14:34:48 1761  	 in_credit_card_status_id IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT NULL,
14:34:48 1762  	 in_lower_bound IN NUMBER DEFAULT 1,
14:34:48 1763  	 in_upper_bound IN NUMBER DEFAULT 11,
14:34:48 1764  	 out_result_set OUT SYS_REFCURSOR
14:34:48 1765  ) AS
14:34:48 1766  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_IDS_BY_CC_INFO';
14:34:48 1767  BEGIN
14:34:48 1768  
14:34:48 1769  	 OPEN out_result_set FOR
14:34:48 1770  	     SELECT
14:34:48 1771  	       distinct /*+ first_rows(in_upper_bound-in_lower_bound) */ a.GROUP_ID GROUP_ID
14:34:48 1772  	     FROM
14:34:48 1773  	       account a,
14:34:48 1774  	       credit_card cc
14:34:48 1775  	     WHERE
14:34:48 1776  	       cc.expiration_date = in_expiration_date and
14:34:48 1777  	       cc.last_four_cc = in_last_four_cc and
14:34:48 1778  	       upper(cc.postal_code) = upper(nvl(in_postal_code, cc.postal_code)) and
14:34:48 1779  	       upper(cc.city) = upper(nvl(in_city, cc.city)) and
14:34:48 1780  	       upper(cc.state) = upper(nvl(in_state, cc.state)) and
14:34:48 1781  	       upper(cc.country) = upper(nvl(in_country, cc.country)) and
14:34:48 1782  	       cc.credit_card_status_id = nvl(in_credit_card_status_id, cc.credit_card_status_id) and
14:34:48 1783  	       cc.credit_card_type_id = nvl(in_credit_card_type_id, cc.credit_card_type_id) and
14:34:48 1784  	       a.id = cc.account_id and
14:34:48 1785  	       rownum >= in_lower_bound and
14:34:48 1786  	       rownum <= in_upper_bound
14:34:48 1787  	   ;
14:34:48 1788  
14:34:48 1789  EXCEPTION
14:34:48 1790  WHEN OTHERS THEN
14:34:48 1791  	 PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:48 1792  	   SPROC_NAME, 'Unknown error', SQLERRM);
14:34:48 1793  END GET_GROUP_IDS_BY_CC_INFO;
14:34:48 1794  
14:34:48 1795  END PROCS_ACCOUNT_V18;
14:34:48 1796  .
14:34:48 SQL> /

Package body created.

Elapsed: 00:00:00.15
14:34:49 SQL> 
14:34:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_PROCESS_RETRY_V18" AS
14:34:49   2  
14:34:49   3  PROCEDURE LOG_RETRY(
14:34:49   4  	  in_process_name IN VARCHAR2,
14:34:49   5  	  in_generic_id   IN NUMBER,
14:34:49   6  	  in_date	  IN VARCHAR2,
14:34:49   7  	  out_success	   OUT NUMBER
14:34:49   8  ) AS
14:34:49   9  SPROC_NAME CONSTANT VARCHAR2(32) := 'PROCS_PROCESS_RETRY_V18';
14:34:49  10  BEGIN
14:34:49  11  
14:34:49  12  	out_success := 1;
14:34:49  13  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
14:34:49  14  	VALUES (in_process_name, in_generic_id, 1, to_date(in_date, 'DD-Mon-YYYY HH24:MI:SS'), sysdate);
14:34:49  15  	commit;
14:34:49  16  EXCEPTION
14:34:49  17  WHEN DUP_VAL_ON_INDEX THEN
14:34:49  18  	rollback;
14:34:49  19  	out_success := 0;
14:34:49  20  WHEN OTHERS THEN
14:34:49  21  	rollback;
14:34:49  22  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:49  23  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:49  24  
14:34:49  25  END;
14:34:49  26  
14:34:49  27  PROCEDURE LOG_RETRY_DATE(
14:34:49  28  	  in_process_name IN VARCHAR2,
14:34:49  29  	  in_generic_id   IN NUMBER,
14:34:49  30  	  in_date	  IN DATE,
14:34:49  31  	  out_success	   OUT NUMBER
14:34:49  32  ) AS
14:34:49  33  SPROC_NAME CONSTANT VARCHAR2(32) := 'PROCS_PROCESS_RETRY_V18';
14:34:49  34  BEGIN
14:34:49  35  
14:34:49  36  	out_success := 1;
14:34:49  37  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
14:34:49  38  	VALUES (in_process_name, in_generic_id, 1, in_date, sysdate);
14:34:49  39  	commit;
14:34:49  40  EXCEPTION
14:34:49  41  WHEN DUP_VAL_ON_INDEX THEN
14:34:49  42  	rollback;
14:34:49  43  	out_success := 0;
14:34:49  44  WHEN OTHERS THEN
14:34:49  45  	rollback;
14:34:49  46  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:49  47  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:49  48  
14:34:49  49  END;
14:34:49  50  
14:34:49  51  PROCEDURE DELETE_RETRY(
14:34:49  52  	  in_process_name IN VARCHAR2,
14:34:49  53  	  in_remove_minutes  IN NUMBER
14:34:49  54  ) AS
14:34:49  55  BEGIN
14:34:49  56  
14:34:49  57  delete from PROCESS_RETRY_THROTTLE
14:34:49  58  where
14:34:49  59  	process_name = in_process_name and
14:34:49  60  	create_date <= sysdate-in_remove_minutes/1440;
14:34:49  61  commit;
14:34:49  62  END;
14:34:49  63  
14:34:49  64  PROCEDURE GET_SYSDATE (
14:34:49  65  	out_date  OUT VARCHAR2
14:34:49  66  ) AS
14:34:49  67  BEGIN
14:34:49  68  	SELECT to_char(SYSDATE, 'DD-Mon-YYYY HH24:MI:SS') into out_date from dual;
14:34:49  69  END;
14:34:49  70  
14:34:49  71  END PROCS_PROCESS_RETRY_V18;
14:34:49  72  .
14:34:49 SQL> /

Package body created.

Elapsed: 00:00:00.02
14:34:49 SQL> 
14:34:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_NOTIFICATION_V18" AS
14:34:49   2  
14:34:49   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
14:34:49   4  /*
14:34:49   5  Throws exceptions:
14:34:49   6  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49   7  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49   8  */
14:34:49   9  	in_notification_type_name IN VARCHAR2,
14:34:49  10  	out_notification_type_id  OUT NUMBER
14:34:49  11  ) AS
14:34:49  12  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NOTIFICATION_TYPE_BY_NAME';
14:34:49  13  BEGIN
14:34:49  14  	SELECT
14:34:49  15  	  NOTIFICATION_TYPE.ID into out_notification_type_id
14:34:49  16  	FROM
14:34:49  17  	  NOTIFICATION_TYPE
14:34:49  18  	WHERE
14:34:49  19  	  NOTIFICATION_TYPE.VALUE = in_notification_type_name;
14:34:49  20  EXCEPTION
14:34:49  21  WHEN NO_DATA_FOUND THEN
14:34:49  22  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:49  23  	  SPROC_NAME, 'No such type');
14:34:49  24  WHEN OTHERS THEN
14:34:49  25  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:49  26  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:49  27  END GET_NOTIFICATION_TYPE_BY_NAME;
14:34:49  28  
14:34:49  29  /******************************************************************/
14:34:49  30  
14:34:49  31  PROCEDURE ADD_NOTIFICATION (
14:34:49  32  /*
14:34:49  33  Throws exceptions:
14:34:49  34  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49  35  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  36  */
14:34:49  37  	in_sender_account_id	 IN NUMBER DEFAULT 0,
14:34:49  38  	in_recipient_group_id	 IN NUMBER,
14:34:49  39  	in_notification_type_id  IN NUMBER,
14:34:49  40  	in_date_to_notify	 IN DATE,
14:34:49  41  	in_email_template_params IN CLOB
14:34:49  42  ) AS
14:34:49  43  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION';
14:34:49  44  -- VARIABLES
14:34:49  45  temp_type_count NUMBER;
14:34:49  46  var_create_date DATE := SYSDATE;
14:34:49  47  -- EXCEPTIONS
14:34:49  48  BAD_NOTIFICATION_TYPE_ID EXCEPTION;
14:34:49  49  CAN_NOT_CREATE_HISTORY   EXCEPTION;
14:34:49  50  EXCEPTION_MESSAGE        VARCHAR2(1024);
14:34:49  51  BEGIN
14:34:49  52  
14:34:49  53  	SELECT
14:34:49  54  	  COUNT(*) into temp_type_count
14:34:49  55  	FROM
14:34:49  56  	  NOTIFICATION_TYPE
14:34:49  57  	WHERE
14:34:49  58  	  NOTIFICATION_TYPE.ID = in_notification_type_id;
14:34:49  59  
14:34:49  60  	IF temp_type_count = 0 THEN
14:34:49  61  	  RAISE BAD_NOTIFICATION_TYPE_ID;
14:34:49  62  	END IF;
14:34:49  63  
14:34:49  64  	INSERT INTO NOTIFICATION (
14:34:49  65  	  ID,
14:34:49  66  	  ACCOUNT_ID,
14:34:49  67  	  GROUP_ID,
14:34:49  68  	  NOTIFICATION_TYPE_ID,
14:34:49  69  	  NOTIFICATION_STATUS_ID,
14:34:49  70  	  EMAIL_TEMPLATE_PARAMS,
14:34:49  71  	  UPDATE_DATE,
14:34:49  72  	  CREATE_DATE,
14:34:49  73  	  DATE_TO_NOTIFY
14:34:49  74  	) VALUES (
14:34:49  75  	  NOT_ID_SEQ.nextVal,
14:34:49  76  	  in_sender_account_id,
14:34:49  77  	  in_recipient_group_id,
14:34:49  78  	  in_notification_type_id,
14:34:49  79  	  NOTIFICATION_STATUSES_V18.NOTIFICATION_PENDING,
14:34:49  80  	  in_email_template_params,
14:34:49  81  	  var_create_date,
14:34:49  82  	  var_create_date,
14:34:49  83  	  in_date_to_notify
14:34:49  84  	);
14:34:49  85  
14:34:49  86  	--BEGIN
14:34:49  87  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V18.CREATE_NOTIFICATION_HISTORY (
14:34:49  88  	--    in_account_id		  => 0, -- ACCOUNT_ID. Can we delete it?
14:34:49  89  	--    in_group_id		  => in_recipient_group_id,
14:34:49  90  	--    notification_reason_type_id => in_notification_type_id,
14:34:49  91  	--    notification_status_id	  => NOTIFICATION_STATUSES_V18.NOTIFICATION_PENDING,
14:34:49  92  	--    email_template_params	  => in_email_template_params,
14:34:49  93  	--    in_create_date		  => var_create_date
14:34:49  94  	--  );
14:34:49  95  	--  EXCEPTION
14:34:49  96  	--    WHEN OTHERS THEN
14:34:49  97  	--	EXCEPTION_MESSAGE := SQLERRM;
14:34:49  98  	--	RAISE CAN_NOT_CREATE_HISTORY;
14:34:49  99  	--END;
14:34:49 100  
14:34:49 101  EXCEPTION
14:34:49 102  WHEN BAD_NOTIFICATION_TYPE_ID THEN
14:34:49 103  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:49 104  	  SPROC_NAME, 'No such notification status');
14:34:49 105  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:49 106  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:49 107  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:49 108  WHEN OTHERS THEN
14:34:49 109  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:49 110  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:49 111  END ADD_NOTIFICATION;
14:34:49 112  
14:34:49 113  /******************************************************************************/
14:34:49 114  
14:34:49 115  PROCEDURE GET_PENDING_NOTIFICATIONS (
14:34:49 116  /*
14:34:49 117  Throws exceptions:
14:34:49 118  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 119  */
14:34:49 120  	out_result_set OUT SYS_REFCURSOR
14:34:49 121  ) AS
14:34:49 122  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_PENDING_NOTIFICATIONS';
14:34:49 123  -- CONSTANTS
14:34:49 124  C_NOTIFICATION_COUNT_LIMIT CONSTANT NUMBER := 500;
14:34:49 125  BEGIN
14:34:49 126  	OPEN out_result_set FOR
14:34:49 127  SELECT * FROM
14:34:49 128  (
14:34:49 129  	SELECT
14:34:49 130  	  NOTIFICATION.ID
14:34:49 131  	FROM
14:34:49 132  	  NOTIFICATION
14:34:49 133  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
14:34:49 134  	WHERE
14:34:49 135  	  ROWNUM <= C_NOTIFICATION_COUNT_LIMIT*10
14:34:49 136  	  AND NOT EXISTS (
14:34:49 137  	    SELECT NULL
14:34:49 138  	    FROM PROCESS_RETRY_THROTTLE
14:34:49 139  	    WHERE GENERIC_ID = NOTIFICATION.ID AND PROCESS_NAME = SPROC_NAME
14:34:49 140  	  )
14:34:49 141  	  AND (
14:34:49 142  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V18.NOTIFICATION_PENDING
14:34:49 143  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V18.NOTIFICATION_FAILED
14:34:49 144  	  )
14:34:49 145  	  AND (
14:34:49 146  	    NOTIFICATION.DATE_TO_NOTIFY IS NULL OR SYSDATE > NOTIFICATION.DATE_TO_NOTIFY
14:34:49 147  	  )ORDER BY dbms_random.value
14:34:49 148  ) WHERE
14:34:49 149  	ROWNUM <= C_NOTIFICATION_COUNT_LIMIT;
14:34:49 150  
14:34:49 151  EXCEPTION
14:34:49 152  WHEN OTHERS THEN
14:34:49 153  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:49 154  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:49 155  END GET_PENDING_NOTIFICATIONS;
14:34:49 156  
14:34:49 157  /******************************************************************************/
14:34:49 158  
14:34:49 159  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
14:34:49 160  /*
14:34:49 161  Throws exceptions:
14:34:49 162  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 163  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 164  */
14:34:49 165  	in_notification_id IN NUMBER
14:34:49 166  ) AS
14:34:49 167  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_NOTIFICATION_TIMESTAMP';
14:34:49 168  -- VARIABLES
14:34:49 169  temp_notification_id NUMBER;
14:34:49 170  -- EXCEPTIONS
14:34:49 171  BAD_NOTIFICATION_ID EXCEPTION;
14:34:49 172  BEGIN
14:34:49 173  
14:34:49 174  	BEGIN
14:34:49 175  	  SELECT
14:34:49 176  	    NOTIFICATION.ID into temp_notification_id
14:34:49 177  	  FROM
14:34:49 178  	    NOTIFICATION
14:34:49 179  	  WHERE
14:34:49 180  	    NOTIFICATION.ID = in_notification_id;
14:34:49 181  	  EXCEPTION
14:34:49 182  	    WHEN NO_DATA_FOUND THEN
14:34:49 183  	      RAISE BAD_NOTIFICATION_ID;
14:34:49 184  	END;
14:34:49 185  
14:34:49 186  	UPDATE
14:34:49 187  	  NOTIFICATION
14:34:49 188  	SET
14:34:49 189  	  NOTIFICATION.UPDATE_DATE = sysdate
14:34:49 190  	WHERE
14:34:49 191  	  NOTIFICATION.ID = in_notification_id;
14:34:49 192  
14:34:49 193  EXCEPTION
14:34:49 194  WHEN BAD_NOTIFICATION_ID THEN
14:34:49 195  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:49 196  	  SPROC_NAME, 'No such notification');
14:34:49 197  WHEN OTHERS THEN
14:34:49 198  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:49 199  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:49 200  END UPDATE_NOTIFICATION_TIMESTAMP;
14:34:49 201  
14:34:49 202  /******************************************************************************/
14:34:49 203  
14:34:49 204  PROCEDURE SET_NOTIFICATION_STATUS (
14:34:49 205  /*
14:34:49 206  Throws exceptions:
14:34:49 207  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 208  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 209  */
14:34:49 210  	in_notification_id	  IN NUMBER,
14:34:49 211  	in_notification_status_id IN NUMBER,
14:34:49 212  	in_error_message	  IN VARCHAR2
14:34:49 213  ) AS
14:34:49 214  SPROC_NAME CONSTANT VARCHAR2(32) := 'SET_NOTIFICATION_STATUS';
14:34:49 215  -- VARIABLES
14:34:49 216  var_group_id		NUMBER;
14:34:49 217  var_account_id		NUMBER;
14:34:49 218  var_notification_type_id	NUMBER;
14:34:49 219  var_email_template_params CLOB;
14:34:49 220  var_create_history_date	DATE := SYSDATE;
14:34:49 221  var_notification_status_id   NUMBER;
14:34:49 222  var_date_to_notify	DATE;
14:34:49 223  max_fails   NUMBER := 5;
14:34:49 224  num_fails   NUMBER;
14:34:49 225  -- EXCEPTIONS
14:34:49 226  BAD_NOTIFICATION_ID	 EXCEPTION;
14:34:49 227  BAD_NOTIFICATION_STATUS_ID EXCEPTION;
14:34:49 228  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
14:34:49 229  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
14:34:49 230  BEGIN
14:34:49 231  
14:34:49 232  	IF in_notification_status_id != NOTIFICATION_STATUSES_V18.NOTIFICATION_SENT
14:34:49 233  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V18.NOTIFICATION_PENDING
14:34:49 234  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V18.NOTIFICATION_FAILED THEN
14:34:49 235  	  RAISE BAD_NOTIFICATION_STATUS_ID;
14:34:49 236  	END IF;
14:34:49 237  
14:34:49 238  	BEGIN
14:34:49 239  	  SELECT
14:34:49 240  	    NOTIFICATION.GROUP_ID,
14:34:49 241  	    NOTIFICATION.ACCOUNT_ID,
14:34:49 242  	    NOTIFICATION.NOTIFICATION_TYPE_ID,
14:34:49 243  	    NOTIFICATION.NOTIFICATION_STATUS_ID,
14:34:49 244  	    NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
14:34:49 245  	    NOTIFICATION.DATE_TO_NOTIFY
14:34:49 246  	    into
14:34:49 247  	    var_group_id,
14:34:49 248  	    var_account_id,
14:34:49 249  	    var_notification_type_id,
14:34:49 250  	    var_notification_status_id,
14:34:49 251  	    var_email_template_params,
14:34:49 252  	    var_date_to_notify
14:34:49 253  	  FROM
14:34:49 254  	    NOTIFICATION
14:34:49 255  	  WHERE
14:34:49 256  	    NOTIFICATION.ID = in_notification_id;
14:34:49 257  	  EXCEPTION
14:34:49 258  	    WHEN NO_DATA_FOUND THEN
14:34:49 259  	      RAISE BAD_NOTIFICATION_ID;
14:34:49 260  	END;
14:34:49 261  
14:34:49 262  	BEGIN
14:34:49 263  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_NOTIFICATION_HISTORY (
14:34:49 264  	    in_notification_id		=> in_notification_id,
14:34:49 265  	    in_account_id		=> var_account_id,
14:34:49 266  	    in_group_id 		=> var_group_id,
14:34:49 267  	    notification_reason_type_id => var_notification_type_id,
14:34:49 268  	    notification_status_id	=> var_notification_status_id,
14:34:49 269  	    email_template_params	=> var_email_template_params,
14:34:49 270  	    in_create_date		=> var_create_history_date,
14:34:49 271  	    in_date_to_notify		=> var_date_to_notify
14:34:49 272  	  );
14:34:49 273  	  EXCEPTION
14:34:49 274  	    WHEN OTHERS THEN
14:34:49 275  	      EXCEPTION_MESSAGE := SQLERRM;
14:34:49 276  	      RAISE CAN_NOT_CREATE_HISTORY;
14:34:49 277  	END;
14:34:49 278  
14:34:49 279  	UPDATE
14:34:49 280  	  NOTIFICATION
14:34:49 281  	SET
14:34:49 282  	  NOTIFICATION.NOTIFICATION_STATUS_ID = in_notification_status_id,
14:34:49 283  	  NOTIFICATION.UPDATE_DATE = sysdate
14:34:49 284  	WHERE
14:34:49 285  	  NOTIFICATION.ID = in_notification_id;
14:34:49 286  
14:34:49 287  	IF ( in_error_message IS NOT NULL ) THEN
14:34:49 288  	  ADD_NOTIFICATION_FAILURE(
14:34:49 289  	    in_notification_id => in_notification_id,
14:34:49 290  	    in_error_message => in_error_message
14:34:49 291  	  );
14:34:49 292  	END IF;
14:34:49 293  
14:34:49 294  	SELECT COUNT(1) INTO num_fails
14:34:49 295  	FROM NOTIFICATION_FAILURE
14:34:49 296  	WHERE NOTIFICATION_ID = in_notification_id;
14:34:49 297  
14:34:49 298  	IF (in_notification_status_id = NOTIFICATION_STATUSES_V18.NOTIFICATION_SENT OR num_fails >= max_fails) then
14:34:49 299  	  FOR REC IN (
14:34:49 300  	      SELECT ID, NOTIFICATION_ID, ERROR_MESSAGE, CREATE_DATE
14:34:49 301  	      FROM NOTIFICATION_FAILURE
14:34:49 302  	      WHERE NOTIFICATION_ID = in_notification_id
14:34:49 303  	      ) LOOP
14:34:49 304  	      BEGIN
14:34:49 305  		CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_NOTIF_FAILURE_HISTORY(
14:34:49 306  		  in_error_message	   => REC.ERROR_MESSAGE,
14:34:49 307  		  in_notification_id	   => REC.NOTIFICATION_ID,
14:34:49 308  		  in_create_date	   => REC.CREATE_DATE
14:34:49 309  		);
14:34:49 310  		EXCEPTION
14:34:49 311  		  WHEN OTHERS THEN
14:34:49 312  		    EXCEPTION_MESSAGE := SQLERRM;
14:34:49 313  		    RAISE CAN_NOT_CREATE_HISTORY;
14:34:49 314  	      END;
14:34:49 315  	  END LOOP;
14:34:49 316  	  DELETE FROM NOTIFICATION_FAILURE WHERE NOTIFICATION_ID = in_notification_id;
14:34:49 317  
14:34:49 318  	  BEGIN
14:34:49 319  	    SELECT
14:34:49 320  	      NOTIFICATION.GROUP_ID,
14:34:49 321  	      NOTIFICATION.ACCOUNT_ID,
14:34:49 322  	      NOTIFICATION.NOTIFICATION_TYPE_ID,
14:34:49 323  	      NOTIFICATION.NOTIFICATION_STATUS_ID,
14:34:49 324  	      NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
14:34:49 325  	      NOTIFICATION.DATE_TO_NOTIFY
14:34:49 326  	      into
14:34:49 327  	      var_group_id,
14:34:49 328  	      var_account_id,
14:34:49 329  	      var_notification_type_id,
14:34:49 330  	      var_notification_status_id,
14:34:49 331  	      var_email_template_params,
14:34:49 332  	      var_date_to_notify
14:34:49 333  	    FROM
14:34:49 334  	      NOTIFICATION
14:34:49 335  	    WHERE
14:34:49 336  	      NOTIFICATION.ID = in_notification_id;
14:34:49 337  	    EXCEPTION
14:34:49 338  	      WHEN NO_DATA_FOUND THEN
14:34:49 339  		RAISE BAD_NOTIFICATION_ID;
14:34:49 340  	  END;
14:34:49 341  
14:34:49 342  	  BEGIN
14:34:49 343  	    CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V18.CREATE_NOTIFICATION_HISTORY (
14:34:49 344  	      in_notification_id	  => in_notification_id,
14:34:49 345  	      in_account_id		  => var_account_id,
14:34:49 346  	      in_group_id		  => var_group_id,
14:34:49 347  	      notification_reason_type_id => var_notification_type_id,
14:34:49 348  	      notification_status_id	  => var_notification_status_id,
14:34:49 349  	      email_template_params	  => var_email_template_params,
14:34:49 350  	      in_create_date		  => var_create_history_date,
14:34:49 351  	      in_date_to_notify 	  => var_date_to_notify
14:34:49 352  	    );
14:34:49 353  	    EXCEPTION
14:34:49 354  	      WHEN OTHERS THEN
14:34:49 355  		EXCEPTION_MESSAGE := SQLERRM;
14:34:49 356  		RAISE CAN_NOT_CREATE_HISTORY;
14:34:49 357  	  END;
14:34:49 358  
14:34:49 359  	  DELETE FROM NOTIFICATION WHERE ID = in_notification_id;
14:34:49 360  
14:34:49 361  	END IF;
14:34:49 362  	commit;
14:34:49 363  
14:34:49 364  EXCEPTION
14:34:49 365  WHEN BAD_NOTIFICATION_STATUS_ID THEN
14:34:49 366  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:49 367  	  SPROC_NAME, 'Bad notification status');
14:34:49 368  WHEN BAD_NOTIFICATION_ID THEN
14:34:49 369  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:49 370  	  SPROC_NAME, 'No such notification');
14:34:49 371  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:49 372  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:49 373  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:49 374  WHEN OTHERS THEN
14:34:49 375  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:49 376  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:49 377  END SET_NOTIFICATION_STATUS;
14:34:49 378  
14:34:49 379  /******************************************************************************/
14:34:49 380  
14:34:49 381  PROCEDURE ADD_NOTIFICATION_FAILURE (
14:34:49 382  /*
14:34:49 383  Throws exceptions:
14:34:49 384  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 385  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 386  */
14:34:49 387  	in_notification_id IN NUMBER,
14:34:49 388  	in_error_message   IN VARCHAR2
14:34:49 389  ) AS
14:34:49 390  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION_FAILURE';
14:34:49 391  -- VARIABLES
14:34:49 392  temp_notification_id NUMBER;
14:34:49 393  var_create_date	   DATE := SYSDATE;
14:34:49 394  -- EXCEPTIONS
14:34:49 395  BAD_NOTIFICATION_ID	 EXCEPTION;
14:34:49 396  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
14:34:49 397  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
14:34:49 398  BEGIN
14:34:49 399  
14:34:49 400  	BEGIN
14:34:49 401  	  SELECT
14:34:49 402  	    NOTIFICATION.ID into temp_notification_id
14:34:49 403  	  FROM
14:34:49 404  	    NOTIFICATION
14:34:49 405  	  WHERE
14:34:49 406  	    NOTIFICATION.ID = in_notification_id;
14:34:49 407  	  EXCEPTION
14:34:49 408  	    WHEN NO_DATA_FOUND THEN
14:34:49 409  	      RAISE BAD_NOTIFICATION_ID;
14:34:49 410  	END;
14:34:49 411  
14:34:49 412  	INSERT INTO NOTIFICATION_FAILURE (
14:34:49 413  	  ID,
14:34:49 414  	  NOTIFICATION_ID,
14:34:49 415  	  ERROR_MESSAGE,
14:34:49 416  	  CREATE_DATE
14:34:49 417  	) VALUES (
14:34:49 418  	  NOTF_ID_SEQ.nextVal,
14:34:49 419  	  in_notification_id,
14:34:49 420  	  in_error_message,
14:34:49 421  	  sysdate
14:34:49 422  	);
14:34:49 423  
14:34:49 424  	--BEGIN
14:34:49 425  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V18.CREATE_NOTIF_FAILURE_HISTORY(
14:34:49 426  	--    in_error_message	       => in_error_message,
14:34:49 427  	--    in_notification_queue_id => in_notification_id,
14:34:49 428  	--    in_create_date	       => var_create_date
14:34:49 429  	--  );
14:34:49 430  	--  EXCEPTION
14:34:49 431  	--    WHEN OTHERS THEN
14:34:49 432  	--	EXCEPTION_MESSAGE := SQLERRM;
14:34:49 433  	--	RAISE CAN_NOT_CREATE_HISTORY;
14:34:49 434  	--END;
14:34:49 435  
14:34:49 436  EXCEPTION
14:34:49 437  WHEN BAD_NOTIFICATION_ID THEN
14:34:49 438  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:49 439  	  SPROC_NAME, 'No such notification');
14:34:49 440  WHEN CAN_NOT_CREATE_HISTORY THEN
14:34:49 441  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:34:49 442  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
14:34:49 443  WHEN OTHERS THEN
14:34:49 444  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:49 445  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:49 446  END ADD_NOTIFICATION_FAILURE;
14:34:49 447  
14:34:49 448  /******************************************************************************/
14:34:49 449  
14:34:49 450  PROCEDURE LOCK_PENDING_NOTIFICATION (
14:34:49 451  /*
14:34:49 452  Result: GLOBAL_STATUSES.TRUE if notification locked
14:34:49 453  GLOBA_STATUSES.FALSE - else
14:34:49 454  */
14:34:49 455  	in_notification_id IN NUMBER,
14:34:49 456  	out_lock_status    OUT NUMBER
14:34:49 457  ) AS
14:34:49 458  SPROC_NAME CONSTANT VARCHAR2(25) := 'LOCK_PENDING_NOTIFICATION';
14:34:49 459  -- VARIABLE
14:34:49 460  temp_notification_id NUMBER;
14:34:49 461  BEGIN
14:34:49 462  	SELECT
14:34:49 463  	  NOTIFICATION.ID into temp_notification_id
14:34:49 464  	FROM
14:34:49 465  	  NOTIFICATION
14:34:49 466  	WHERE
14:34:49 467  	  NOTIFICATION.ID = in_notification_id
14:34:49 468  	  AND (
14:34:49 469  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V18.NOTIFICATION_PENDING
14:34:49 470  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V18.NOTIFICATION_FAILED
14:34:49 471  	  )
14:34:49 472  	FOR UPDATE;
14:34:49 473  
14:34:49 474  	out_lock_status := 1;
14:34:49 475  
14:34:49 476  EXCEPTION
14:34:49 477  WHEN NO_DATA_FOUND THEN
14:34:49 478  	out_lock_status := 0;
14:34:49 479  WHEN OTHERS THEN
14:34:49 480  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:49 481  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:49 482  END LOCK_PENDING_NOTIFICATION;
14:34:49 483  
14:34:49 484  /******************************************************************************/
14:34:49 485  
14:34:49 486  PROCEDURE GET_NOTIFICATION_DATA (
14:34:49 487  	in_notification_id IN NUMBER,
14:34:49 488  	out_result_set	   OUT SYS_REFCURSOR
14:34:49 489  ) AS
14:34:49 490  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_NOTIFICATION_DATA';
14:34:49 491  BEGIN
14:34:49 492  	OPEN out_result_set FOR
14:34:49 493  	SELECT
14:34:49 494  	  NOTIFICATION.ID,
14:34:49 495  	  NOTIFICATION.GROUP_ID,
14:34:49 496  	  NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
14:34:49 497  	  NOTIFICATION.NOTIFICATION_STATUS_ID,
14:34:49 498  	  NOTIFICATION.CREATE_DATE,
14:34:49 499  	  NOTIFICATION.UPDATE_DATE,
14:34:49 500  	  NOTIFICATION.NOTIFICATION_TYPE_ID,
14:34:49 501  	  NOTIFICATION_TYPE.VALUE as "TYPE_VALUE",
14:34:49 502  	  NOTIFICATION_TYPE.TEMPLATE_URL
14:34:49 503  	FROM
14:34:49 504  	  NOTIFICATION
14:34:49 505  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
14:34:49 506  	WHERE
14:34:49 507  	  NOTIFICATION.ID = in_notification_id;
14:34:49 508  
14:34:49 509  EXCEPTION
14:34:49 510  WHEN OTHERS THEN
14:34:49 511  	PROCS_COMMON_V18.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:34:49 512  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:34:49 513  END GET_NOTIFICATION_DATA;
14:34:49 514  
14:34:49 515  END PROCS_NOTIFICATION_V18;
14:34:49 516  .
14:34:49 SQL> /

Package body created.

Elapsed: 00:00:00.11
14:34:49 SQL> 
14:34:49 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_BILLING_V18" AS
14:34:49   2  
14:34:49   3  PROCEDURE GET_OFFER_CHAIN_BY_ID (
14:34:49   4  /*
14:34:49   5  Throws exceptions:
14:34:49   6  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49   7  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49   8  */
14:34:49   9  	  in_offer_chain_id IN	 NUMBER,
14:34:49  10  	  out_result_set    OUT  SYS_REFCURSOR
14:34:49  11  ) AS
14:34:49  12  BEGIN
14:34:49  13  	PROCS_OFFER_CHAIN_V18.GET_OFFER_CHAIN_BY_ID (
14:34:49  14  	  in_offer_chain_id => in_offer_chain_id,
14:34:49  15  	  out_result_set => out_result_set
14:34:49  16  	);
14:34:49  17  END GET_OFFER_CHAIN_BY_ID;
14:34:49  18  
14:34:49  19  PROCEDURE GET_PENDING_INVOICES (
14:34:49  20  /*
14:34:49  21  Throws exceptions:
14:34:49  22  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  23  */
14:34:49  24  	out_result_set1      OUT SYS_REFCURSOR,
14:34:49  25  	out_result_set2      OUT SYS_REFCURSOR,
14:34:49  26  	out_result_set3      OUT SYS_REFCURSOR,
14:34:49  27  	in_row_number	     IN NUMBER DEFAULT NULL
14:34:49  28  ) AS
14:34:49  29  BEGIN
14:34:49  30  	PROCS_INVOICE_V18.GET_PENDING_INVOICES(
14:34:49  31  	  out_result_set1,
14:34:49  32  	  out_result_set2,
14:34:49  33  	  out_result_set3,
14:34:49  34  	  in_row_number
14:34:49  35  	);
14:34:49  36  END GET_PENDING_INVOICES;
14:34:49  37  
14:34:49  38  /********************************************************/
14:34:49  39  PROCEDURE GET_PENDING_REFUND_CHARGES (
14:34:49  40  /*
14:34:49  41  Throws exceptions:
14:34:49  42  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  43  */
14:34:49  44  	out_result_set	    OUT SYS_REFCURSOR,
14:34:49  45  	in_row_number	    IN NUMBER DEFAULT NULL
14:34:49  46  ) AS
14:34:49  47  BEGIN
14:34:49  48  	PROCS_CHARGE_V18.GET_PENDING_REFUND_CHARGES(
14:34:49  49  	  out_result_set,
14:34:49  50  	  in_row_number
14:34:49  51  	);
14:34:49  52  END GET_PENDING_REFUND_CHARGES;
14:34:49  53  /********************************************************/
14:34:49  54  
14:34:49  55  PROCEDURE GET_UNPROCESSED_CHARGES (
14:34:49  56  /*
14:34:49  57  Throws exceptions:
14:34:49  58  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49  59  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  60  */
14:34:49  61  	in_invoice_id  IN NUMBER,
14:34:49  62  	out_result_set OUT SYS_REFCURSOR
14:34:49  63  ) AS
14:34:49  64  BEGIN
14:34:49  65  	PROCS_CHARGE_V18.GET_UNPROCESSED_CHARGES(
14:34:49  66  	  in_invoice_id,
14:34:49  67  	  out_result_set
14:34:49  68  	);
14:34:49  69  END GET_UNPROCESSED_CHARGES;
14:34:49  70  
14:34:49  71  /********************************************************/
14:34:49  72  
14:34:49  73  PROCEDURE GET_PROCESSED_CHARGES (
14:34:49  74  /*
14:34:49  75  Throws exceptions:
14:34:49  76  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49  77  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  78  */
14:34:49  79  	in_invoice_id  IN NUMBER,
14:34:49  80  	out_result_set OUT SYS_REFCURSOR
14:34:49  81  ) AS
14:34:49  82  BEGIN
14:34:49  83  	PROCS_CHARGE_V18.GET_PROCESSED_CHARGES(
14:34:49  84  	  in_invoice_id,
14:34:49  85  	  out_result_set
14:34:49  86  	);
14:34:49  87  END GET_PROCESSED_CHARGES;
14:34:49  88  
14:34:49  89  /********************************************************/
14:34:49  90  
14:34:49  91  PROCEDURE GET_TRNSCTN_ATTEMPTS_BY_STATUS (
14:34:49  92  /*
14:34:49  93  Throws exceptions:
14:34:49  94  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  95  */
14:34:49  96  	in_transaction_id	      IN NUMBER,
14:34:49  97  	in_transaction_attempt_status IN NUMBER,
14:34:49  98  	out_result_set		      OUT SYS_REFCURSOR
14:34:49  99  ) AS
14:34:49 100  BEGIN
14:34:49 101  	PROCS_TRANSACTION_V18.GET_TRNSCTN_ATTEMPTS_BY_STATUS(
14:34:49 102  	  in_transaction_id,
14:34:49 103  	  in_transaction_attempt_status,
14:34:49 104  	  out_result_set
14:34:49 105  	);
14:34:49 106  END GET_TRNSCTN_ATTEMPTS_BY_STATUS;
14:34:49 107  
14:34:49 108  /********************************************************/
14:34:49 109  
14:34:49 110  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_STATUS (
14:34:49 111  /*
14:34:49 112  Throws exceptions:
14:34:49 113  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 114  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 115  */
14:34:49 116  	in_transaction_attempt_id     IN NUMBER,
14:34:49 117  	in_transaction_attempt_status IN NUMBER
14:34:49 118  ) AS
14:34:49 119  BEGIN
14:34:49 120  	PROCS_TRANSACTION_V18.UPDATE_TRNSCTN_ATTEMPT_STATUS(
14:34:49 121  	   in_transaction_attempt_id,
14:34:49 122  	   in_transaction_attempt_status
14:34:49 123  	);
14:34:49 124  END UPDATE_TRNSCTN_ATTEMPT_STATUS;
14:34:49 125  
14:34:49 126  /********************************************************/
14:34:49 127  PROCEDURE GET_CLOSED_REFUNDS_BY_INVOICE (
14:34:49 128  /*
14:34:49 129  Throws exceptions:
14:34:49 130  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 131  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 132  */
14:34:49 133  	in_invoice_id	IN  NUMBER,
14:34:49 134  	out_result_set OUT SYS_REFCURSOR
14:34:49 135  ) AS
14:34:49 136  BEGIN
14:34:49 137  	PROCS_TRANSACTION_V18.GET_CLOSED_REFUNDS_BY_INVOICE(
14:34:49 138  	   in_invoice_id,
14:34:49 139  	   out_result_set
14:34:49 140  	);
14:34:49 141  END GET_CLOSED_REFUNDS_BY_INVOICE;
14:34:49 142  
14:34:49 143  /********************************************************/
14:34:49 144  
14:34:49 145  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_TIME (
14:34:49 146  /*
14:34:49 147  Throws exceptions:
14:34:49 148  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 149  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 150  */
14:34:49 151  	in_transaction_attempt_id IN NUMBER,
14:34:49 152  	in_updated_by		  IN VARCHAR2
14:34:49 153  ) AS
14:34:49 154  BEGIN
14:34:49 155  	PROCS_TRANSACTION_V18.UPDATE_TRNSCTN_ATTEMPT_TIME(
14:34:49 156  	  in_transaction_attempt_id,
14:34:49 157  	  in_updated_by
14:34:49 158  	);
14:34:49 159  END UPDATE_TRNSCTN_ATTEMPT_TIME;
14:34:49 160  
14:34:49 161  /********************************************************/
14:34:49 162  
14:34:49 163  PROCEDURE CREATE_TRANSACTION_ATTEMPT (
14:34:49 164  /*
14:34:49 165  Throws exceptions:
14:34:49 166  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 167  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 168  */
14:34:49 169  	in_transaction_id	   IN NUMBER,
14:34:49 170  	in_trans_attempt_status    IN NUMBER,
14:34:49 171  	in_external_status_code    IN VARCHAR2,
14:34:49 172  	in_external_status_message IN VARCHAR2,
14:34:49 173  	in_created_by		   IN VARCHAR2,
14:34:49 174  	in_ext_transaction_id	   IN VARCHAR2,
14:34:49 175  	out_transaction_attempt_id OUT NUMBER
14:34:49 176  ) AS
14:34:49 177  BEGIN
14:34:49 178  	PROCS_TRANSACTION_V18.CREATE_TRANSACTION_ATTEMPT(
14:34:49 179  	  in_transaction_id,
14:34:49 180  	  in_trans_attempt_status,
14:34:49 181  	  in_external_status_code,
14:34:49 182  	  in_external_status_message,
14:34:49 183  	  in_created_by,
14:34:49 184  	  in_ext_transaction_id,
14:34:49 185  	  out_transaction_attempt_id
14:34:49 186  	);
14:34:49 187  END CREATE_TRANSACTION_ATTEMPT;
14:34:49 188  
14:34:49 189  /********************************************************/
14:34:49 190  
14:34:49 191  PROCEDURE UPDATE_TRANSACTION_ATTEMPT_INF (
14:34:49 192  /*
14:34:49 193  Throws exceptions:
14:34:49 194  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 195  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 196  */
14:34:49 197  	in_transaction_attempt_id IN NUMBER,
14:34:49 198  	in_ext_status_code	  IN VARCHAR2,
14:34:49 199  	in_ext_status_message	  IN VARCHAR2,
14:34:49 200  	in_ext_transaction_id	  IN VARCHAR2
14:34:49 201  ) AS
14:34:49 202  BEGIN
14:34:49 203  	PROCS_TRANSACTION_V18.UPDATE_TRANSACTION_ATTEMPT_INF(
14:34:49 204  	  in_transaction_attempt_id,
14:34:49 205  	  in_ext_status_code,
14:34:49 206  	  in_ext_status_message,
14:34:49 207  	  in_ext_transaction_id
14:34:49 208  	);
14:34:49 209  END UPDATE_TRANSACTION_ATTEMPT_INF;
14:34:49 210  
14:34:49 211  /********************************************************/
14:34:49 212  
14:34:49 213  PROCEDURE UPDATE_TRANSACTION_STATUS (
14:34:49 214  /*
14:34:49 215  Throws exceptions:
14:34:49 216  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 217  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 218  */
14:34:49 219  	in_transaction_id	 IN NUMBER,
14:34:49 220  	in_updated_by		 IN VARCHAR2,
14:34:49 221  	in_transaction_status_id IN NUMBER
14:34:49 222  ) AS
14:34:49 223  BEGIN
14:34:49 224  	PROCS_TRANSACTION_V18.UPDATE_TRANSACTION_STATUS(
14:34:49 225  	  in_transaction_id,
14:34:49 226  	  in_updated_by,
14:34:49 227  	  in_transaction_status_id
14:34:49 228  	);
14:34:49 229  END UPDATE_TRANSACTION_STATUS;
14:34:49 230  
14:34:49 231  /********************************************************/
14:34:49 232  
14:34:49 233  PROCEDURE GET_FAILED_ATTEMPTS_NUMBER (
14:34:49 234  /*
14:34:49 235  Throws exceptions:
14:34:49 236  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 237  */
14:34:49 238  	in_transaction_id IN  NUMBER,
14:34:49 239  	out_attempts_num  OUT NUMBER
14:34:49 240  ) AS
14:34:49 241  BEGIN
14:34:49 242  	PROCS_TRANSACTION_V18.GET_FAILED_ATTEMPTS_NUMBER(
14:34:49 243  	  in_transaction_id,
14:34:49 244  	  out_attempts_num
14:34:49 245  	);
14:34:49 246  END GET_FAILED_ATTEMPTS_NUMBER;
14:34:49 247  
14:34:49 248  /********************************************************/
14:34:49 249  
14:34:49 250  PROCEDURE IS_TRANSACTION_SUCCESSFULL (
14:34:49 251  /*
14:34:49 252  Throws exceptions:
14:34:49 253  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 254  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 255  */
14:34:49 256  	in_transaction_id IN  NUMBER,
14:34:49 257  	out_is_successfull  OUT NUMBER
14:34:49 258  ) AS
14:34:49 259  BEGIN
14:34:49 260  	PROCS_TRANSACTION_V18.IS_TRANSACTION_SUCCESSFULL(
14:34:49 261  	  in_transaction_id,
14:34:49 262  	  out_is_successfull
14:34:49 263  	);
14:34:49 264  END IS_TRANSACTION_SUCCESSFULL;
14:34:49 265  /********************************************************/
14:34:49 266  
14:34:49 267  PROCEDURE UPDATE_INVOICE_STATUS (
14:34:49 268  /*
14:34:49 269  Throws exceptions:
14:34:49 270  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 271  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 272  */
14:34:49 273  	in_invoice_id		       IN NUMBER,
14:34:49 274  	in_invoice_status_id	       IN NUMBER,
14:34:49 275  	in_updated_by		       IN VARCHAR2
14:34:49 276  ) AS
14:34:49 277  BEGIN
14:34:49 278  	PROCS_INVOICE_V18.UPDATE_INVOICE_STATUS(
14:34:49 279  	  in_invoice_id,
14:34:49 280  	  in_invoice_status_id,
14:34:49 281  	  in_updated_by
14:34:49 282  	);
14:34:49 283  END UPDATE_INVOICE_STATUS;
14:34:49 284  
14:34:49 285  /********************************************************/
14:34:49 286  
14:34:49 287  PROCEDURE SUSPEND_SUBSCRIPTION(
14:34:49 288  /*
14:34:49 289  Throws exceptions:
14:34:49 290  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 291  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:49 292  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 293  */
14:34:49 294  	  in_subs_id	IN NUMBER ,
14:34:49 295  	  in_updated_by IN VARCHAR2
14:34:49 296  ) AS
14:34:49 297  BEGIN
14:34:49 298  	PROCS_SUBSCRIPTION_V18.SUSPEND_SUBSCRIPTION(
14:34:49 299  	  in_subs_id,
14:34:49 300  	  in_updated_by
14:34:49 301  	);
14:34:49 302  END SUSPEND_SUBSCRIPTION;
14:34:49 303  
14:34:49 304  /********************************************************/
14:34:49 305  
14:34:49 306  PROCEDURE GET_CREDIT_CARD_BY_ID (
14:34:49 307  /*
14:34:49 308  Throws exceptions:
14:34:49 309  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 310  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 311  */
14:34:49 312  	in_credit_card_id IN  NUMBER,
14:34:49 313  	out_result_set	  OUT SYS_REFCURSOR
14:34:49 314  ) AS
14:34:49 315  BEGIN
14:34:49 316  	PROCS_FIN_INSTRUMENTS_V18.GET_CREDIT_CARD_BY_ID(
14:34:49 317  	  in_credit_card_id,
14:34:49 318  	  out_result_set
14:34:49 319  	);
14:34:49 320  END GET_CREDIT_CARD_BY_ID;
14:34:49 321  
14:34:49 322  /*********************************************************/
14:34:49 323  
14:34:49 324  PROCEDURE GET_TRANSACTION_AMOUNT (
14:34:49 325  /*
14:34:49 326  Throws exceptions:
14:34:49 327  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 328  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 329  */
14:34:49 330  	in_transaction_id      IN  NUMBER,
14:34:49 331  	out_transaction_amount OUT NUMBER
14:34:49 332  ) AS
14:34:49 333  BEGIN
14:34:49 334  	PROCS_TRANSACTION_V18.GET_TRANSACTION_AMOUNT(
14:34:49 335  	  in_transaction_id,
14:34:49 336  	  out_transaction_amount
14:34:49 337  	);
14:34:49 338  END GET_TRANSACTION_AMOUNT;
14:34:49 339  
14:34:49 340  /***********************************************************/
14:34:49 341  
14:34:49 342  PROCEDURE GET_ACCOUNT_BY_INVOICE_ID (
14:34:49 343  /*
14:34:49 344  Throws exceptions:
14:34:49 345  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 346  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 347  */
14:34:49 348  	in_invoice_id  IN  NUMBER,
14:34:49 349  	out_account_id OUT NUMBER
14:34:49 350  ) AS
14:34:49 351  BEGIN
14:34:49 352  	PROCS_INVOICE_V18.GET_ACCOUNT_BY_INVOICE_ID(
14:34:49 353  	  in_invoice_id,
14:34:49 354  	  out_account_id
14:34:49 355  	);
14:34:49 356  END GET_ACCOUNT_BY_INVOICE_ID;
14:34:49 357  
14:34:49 358  /************************************************************/
14:34:49 359  
14:34:49 360  PROCEDURE GET_GIFT_CERTIFICATE_BY_ID (
14:34:49 361  /*
14:34:49 362  Throws exceptions:
14:34:49 363  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:49 364  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 365  */
14:34:49 366  	in_gift_certificate_id IN NUMBER,
14:34:49 367  	out_result_set	       OUT SYS_REFCURSOR
14:34:49 368  ) AS
14:34:49 369  BEGIN
14:34:49 370  	PROCS_FIN_INSTRUMENTS_V18.GET_GIFT_CERTIFICATE_BY_ID (
14:34:49 371  	  in_gift_certificate_id,
14:34:49 372  	  out_result_set
14:34:49 373  	);
14:34:49 374  END GET_GIFT_CERTIFICATE_BY_ID;
14:34:49 375  
14:34:49 376  /**************************************************************/
14:34:49 377  
14:34:49 378  PROCEDURE GET_SUBSCR_ID_BY_CHARGE_ID (
14:34:49 379  /*
14:34:49 380  Throws exceptions:
14:34:49 381  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 382  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 383  */
14:34:49 384  	in_charge_id	    IN NUMBER,
14:34:49 385  	out_subscription_id OUT NUMBER
14:34:49 386  ) AS
14:34:49 387  BEGIN
14:34:49 388  	PROCS_CHARGE_V18.GET_SUBSCR_ID_BY_CHARGE_ID(
14:34:49 389  	  in_charge_id,
14:34:49 390  	  out_subscription_id
14:34:49 391  	);
14:34:49 392  END GET_SUBSCR_ID_BY_CHARGE_ID;
14:34:49 393  
14:34:49 394  /**************************************************************/
14:34:49 395  
14:34:49 396  PROCEDURE IS_GCERT_FOR_PROPER_OFFER (
14:34:49 397  /*
14:34:49 398  Throws exceptions:
14:34:49 399  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 400  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 401  */
14:34:49 402  	in_gift_certificate_id IN NUMBER,
14:34:49 403  	in_charge_id	       IN NUMBER,
14:34:49 404  	out_result	       OUT NUMBER
14:34:49 405  ) AS
14:34:49 406  BEGIN
14:34:49 407  	PROCS_FIN_INSTRUMENTS_V18.IS_GCERT_FOR_PROPER_OFFER (
14:34:49 408  	  in_gift_certificate_id,
14:34:49 409  	  in_charge_id,
14:34:49 410  	  out_result
14:34:49 411  	);
14:34:49 412  END IS_GCERT_FOR_PROPER_OFFER;
14:34:49 413  
14:34:49 414  /**************************************************************/
14:34:49 415  
14:34:49 416  PROCEDURE GET_SUBSCRIPTION_INFO (
14:34:49 417  /*
14:34:49 418  Throws exceptions:
14:34:49 419  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 420  */
14:34:49 421  	  in_subscription_id IN  NUMBER,
14:34:49 422  	  out_result_set      OUT SYS_REFCURSOR
14:34:49 423  ) AS
14:34:49 424  BEGIN
14:34:49 425  	PROCS_SUBSCRIPTION_V18.GET_SUBSCRIPTION_INFO (
14:34:49 426  	  in_subscription_id,
14:34:49 427  	  out_result_set
14:34:49 428  	);
14:34:49 429  END GET_SUBSCRIPTION_INFO;
14:34:49 430  
14:34:49 431  /****************************************************************/
14:34:49 432  
14:34:49 433  PROCEDURE CALCULATE_INVOICE_AMOUNT (
14:34:49 434  /*
14:34:49 435  Throws exceptions:
14:34:49 436  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 437  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 438  */
14:34:49 439  	in_invoice_id IN  NUMBER,
14:34:49 440  	out_amount    OUT NUMBER
14:34:49 441  ) AS
14:34:49 442  BEGIN
14:34:49 443  	PROCS_INVOICE_V18.CALCULATE_INVOICE_AMOUNT (
14:34:49 444  	  in_invoice_id,
14:34:49 445  	  out_amount
14:34:49 446  	);
14:34:49 447  END CALCULATE_INVOICE_AMOUNT;
14:34:49 448  
14:34:49 449  /****************************************************************/
14:34:49 450  
14:34:49 451  PROCEDURE GET_TRANSACTION_BY_ID (
14:34:49 452  /*
14:34:49 453  Throws exceptions:
14:34:49 454  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 455  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 456  */
14:34:49 457  	in_transaction_id IN NUMBER,
14:34:49 458  	out_result_set	  OUT SYS_REFCURSOR
14:34:49 459  ) AS
14:34:49 460  BEGIN
14:34:49 461  	PROCS_TRANSACTION_V18.GET_TRANSACTION_BY_ID(
14:34:49 462  	  in_transaction_id,
14:34:49 463  	  out_result_set
14:34:49 464  	);
14:34:49 465  END GET_TRANSACTION_BY_ID;
14:34:49 466  
14:34:49 467  /****************************************************************/
14:34:49 468  
14:34:49 469  PROCEDURE UPDATE_CHARGE_STATUS (
14:34:49 470  /*
14:34:49 471  Throws exceptions:
14:34:49 472  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 473  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 474  */
14:34:49 475  	in_charge_id	    IN CHARGE.ID%TYPE,
14:34:49 476  	in_charge_status_id IN CHARGE.CHARGE_STATUS_ID%TYPE,
14:34:49 477  	in_updated_by	    IN CHARGE.UPDATED_BY%TYPE
14:34:49 478  ) AS
14:34:49 479  BEGIN
14:34:49 480  	PROCS_CHARGE_V18.UPDATE_CHARGE_STATUS(
14:34:49 481  	  in_charge_id,
14:34:49 482  	  in_charge_status_id,
14:34:49 483  	  in_updated_by
14:34:49 484  	);
14:34:49 485  END UPDATE_CHARGE_STATUS;
14:34:49 486  
14:34:49 487  /****************************************************************/
14:34:49 488  
14:34:49 489  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
14:34:49 490  	in_invoice_id		IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:49 491  	out_result_set OUT SYS_REFCURSOR
14:34:49 492  ) AS
14:34:49 493  BEGIN
14:34:49 494  	PROCS_FIN_INSTRUMENTS_V18.GET_GC_BY_PURCH_INVOICE_ID(
14:34:49 495  	  in_invoice_id,
14:34:49 496  	  out_result_set
14:34:49 497  	);
14:34:49 498  END GET_GC_BY_PURCH_INVOICE_ID;
14:34:49 499  
14:34:49 500  /****************************************************************/
14:34:49 501  
14:34:49 502  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
14:34:49 503  /*
14:34:49 504  Throws exceptions:
14:34:49 505  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 506  APP_EXCEPTION_CODES_V18.INTRNAL_ERROR
14:34:49 507  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 508  */
14:34:49 509  	in_transaction_id IN TRANSACTION.ID%TYPE,
14:34:49 510  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
14:34:49 511  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
14:34:49 512  ) AS
14:34:49 513  BEGIN
14:34:49 514  	PROCS_TRANSACTION_V18.UPDATE_TRANSACTION_ORDER_ID(
14:34:49 515  	  in_transaction_id,
14:34:49 516  	  in_order_id,
14:34:49 517  	  in_updated_by
14:34:49 518  	);
14:34:49 519  END UPDATE_TRANSACTION_ORDER_ID;
14:34:49 520  
14:34:49 521  /****************************************************************/
14:34:49 522  
14:34:49 523  PROCEDURE GET_ACTIVE_INVOICES_IDS (
14:34:49 524  /*
14:34:49 525  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 526  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 527  */
14:34:49 528  --  in_subscription_id IN SUBSCRIPTION.ID%TYPE,
14:34:49 529  	in_subscription_id IN NUMBER,
14:34:49 530  	out_result_set	   OUT SYS_REFCURSOR
14:34:49 531  ) AS
14:34:49 532  BEGIN
14:34:49 533  	PROCS_SUBSCRIPTION_V18.GET_ACTIVE_INVOICES_IDS(
14:34:49 534  	  in_subscription_id,
14:34:49 535  	  out_result_set
14:34:49 536  	);
14:34:49 537  END GET_ACTIVE_INVOICES_IDS;
14:34:49 538  
14:34:49 539  /****************************************************************/
14:34:49 540  
14:34:49 541  PROCEDURE CANCEL_SUBSCRIPTION_INVOICE (
14:34:49 542  /*
14:34:49 543  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 544  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 545  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:49 546  */
14:34:49 547  --  in_invoice_id        IN INVOICE.ID%TYPE,
14:34:49 548  --  in_updated_by        IN INVOICE.UPDATED_BY%TYPE,
14:34:49 549  -- norlov: in_refundable	      IN refund enabled
14:34:49 550  	in_invoice_id	     IN NUMBER,
14:34:49 551  	in_updated_by	     IN VARCHAR2,
14:34:49 552  	in_refundable	     IN NUMBER DEFAULT GLOBAL_CONSTANTS_V18.FALSE
14:34:49 553  --  in_cancellation_date IN DATE DEFAULT current_timestamp
14:34:49 554  ) AS
14:34:49 555  BEGIN
14:34:49 556  	PROCS_SUBSCRIPTION_V18.CANCEL_SUBSCRIPTION_INVOICE(
14:34:49 557  	  in_invoice_id,
14:34:49 558  	  in_updated_by,
14:34:49 559  	  in_refundable
14:34:49 560  	);
14:34:49 561  END CANCEL_SUBSCRIPTION_INVOICE;
14:34:49 562  
14:34:49 563  /****************************************************************/
14:34:49 564  
14:34:49 565  PROCEDURE FINALIZE_CANCELATION (
14:34:49 566  /*
14:34:49 567  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 568  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 569  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:49 570  */
14:34:49 571  --  in_subscription_id	IN SUBSCRIPTION.ID%TYPE,
14:34:49 572  --  in_cancelation_reason IN SUBSCRIPTION_CANCEL_REASON.VALUE%TYPE,
14:34:49 573  --  in_cancelation_date	IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
14:34:49 574  --  in_note		IN SUBSCRIPTION_NOTE.NOTE%TYPE,
14:34:49 575  --  in_agent_id		IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
14:34:49 576  --  in_updated_by 	IN SUBSCRIPTION.UPDATED_BY%TYPE
14:34:49 577  	in_subscription_id    IN NUMBER,
14:34:49 578  	in_cancelation_reason IN VARCHAR2,
14:34:49 579  	in_cancelation_date   IN DATE,
14:34:49 580  	in_note 	      IN VARCHAR2,
14:34:49 581  	in_agent_id	      IN NUMBER,
14:34:49 582  	in_updated_by	      IN VARCHAR2
14:34:49 583  ) AS
14:34:49 584  BEGIN
14:34:49 585  	PROCS_SUBSCRIPTION_V18.FINALIZE_CANCELATION(
14:34:49 586  	  in_subscription_id,
14:34:49 587  	  in_cancelation_reason,
14:34:49 588  	  in_cancelation_date,
14:34:49 589  	  in_note,
14:34:49 590  	  in_agent_id,
14:34:49 591  	  in_updated_by
14:34:49 592  	);
14:34:49 593  END FINALIZE_CANCELATION;
14:34:49 594  
14:34:49 595  /****************************************************************/
14:34:49 596  
14:34:49 597  PROCEDURE GET_SUBSCR_PROD_OFFERRINGS (
14:34:49 598  /*
14:34:49 599  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 600  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 601  */
14:34:49 602  	in_subscription_id IN NUMBER,
14:34:49 603  	out_result_set	   OUT SYS_REFCURSOR
14:34:49 604  ) AS
14:34:49 605  BEGIN
14:34:49 606  	PROCS_SUBSCRIPTION_V18.GET_SUBSCR_PROD_OFFERRINGS(
14:34:49 607  	  in_subscription_id,
14:34:49 608  	  out_result_set
14:34:49 609  	);
14:34:49 610  END GET_SUBSCR_PROD_OFFERRINGS;
14:34:49 611  
14:34:49 612  /****************************************************************/
14:34:49 613  
14:34:49 614  PROCEDURE GET_OFFER_CHAIN_META_DATA (
14:34:49 615  /*
14:34:49 616  Throws exceptions (codes):
14:34:49 617  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 618  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 619  */
14:34:49 620  	in_offer_chain_id IN NUMBER,
14:34:49 621  	in_meta_data_name IN VARCHAR2,
14:34:49 622  	out_result_set	  OUT SYS_REFCURSOR
14:34:49 623  )AS
14:34:49 624  BEGIN
14:34:49 625  	PROCS_OFFER_CHAIN_V18.GET_OFFER_CHAIN_META_DATA(
14:34:49 626  	  in_offer_chain_id,
14:34:49 627  	  in_meta_data_name,
14:34:49 628  	  out_result_set
14:34:49 629  	);
14:34:49 630  END GET_OFFER_CHAIN_META_DATA;
14:34:49 631  
14:34:49 632  /****************************************************************/
14:34:49 633  
14:34:49 634  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
14:34:49 635  /*
14:34:49 636  Throws exceptions (codes):
14:34:49 637  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 638  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 639  */
14:34:49 640  	in_product_offering_id IN NUMBER,
14:34:49 641  	in_meta_data_name      IN VARCHAR2 DEFAULT NULL,
14:34:49 642  	out_result_set	       OUT SYS_REFCURSOR
14:34:49 643  )AS
14:34:49 644  BEGIN
14:34:49 645  	PROCS_OFFER_CHAIN_V18.GET_PRODUCT_OFFERING_META_DATA(
14:34:49 646  	  in_product_offering_id,
14:34:49 647  	  in_meta_data_name,
14:34:49 648  	  out_result_set
14:34:49 649  	);
14:34:49 650  END GET_PRODUCT_OFFERING_META_DATA;
14:34:49 651  
14:34:49 652  /****************************************************************/
14:34:49 653  
14:34:49 654  PROCEDURE READ_ACCOUNT (
14:34:49 655  	in_account_id  IN ACCOUNT.ID%TYPE,
14:34:49 656  	out_result_set OUT SYS_REFCURSOR
14:34:49 657  )AS
14:34:49 658  BEGIN
14:34:49 659  	PROCS_ACCOUNT_CRU_V18.READ_ACCOUNT(
14:34:49 660  	  in_account_id,
14:34:49 661  	  out_result_set
14:34:49 662  	);
14:34:49 663  END READ_ACCOUNT;
14:34:49 664  
14:34:49 665  /****************************************************************/
14:34:49 666  
14:34:49 667  PROCEDURE GET_COLLECTED_CHARGES (
14:34:49 668  /*
14:34:49 669  Throws exceptions:
14:34:49 670  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 671  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 672  */
14:34:49 673  	in_invoice_id  IN NUMBER,
14:34:49 674  	out_result_set OUT SYS_REFCURSOR
14:34:49 675  ) AS
14:34:49 676  BEGIN
14:34:49 677  	PROCS_CHARGE_V18.GET_COLLECTED_CHARGES(
14:34:49 678  	  in_invoice_id,
14:34:49 679  	  out_result_set
14:34:49 680  	);
14:34:49 681  END GET_COLLECTED_CHARGES;
14:34:49 682  
14:34:49 683  /****************************************************************/
14:34:49 684  
14:34:49 685  PROCEDURE GET_GROUPS_ID_BY_INVOICE_ID (
14:34:49 686  /*
14:34:49 687  Throws exceptions:
14:34:49 688  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:49 689  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 690  */
14:34:49 691  	in_invoice_id IN NUMBER,
14:34:49 692  	out_group_ids OUT SYS_REFCURSOR
14:34:49 693  ) AS
14:34:49 694  BEGIN
14:34:49 695  
14:34:49 696  	PROCS_ACCOUNT_V18.GET_GROUPS_ID_BY_INVOICE_ID(
14:34:49 697  	  in_invoice_id,
14:34:49 698  	  out_group_ids
14:34:49 699  	);
14:34:49 700  
14:34:49 701  END GET_GROUPS_ID_BY_INVOICE_ID;
14:34:49 702  
14:34:49 703  /****************************************************************/
14:34:49 704  
14:34:49 705  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
14:34:49 706  /*
14:34:49 707  Throws exceptions:
14:34:49 708  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:49 709  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 710  */
14:34:49 711  	in_group_id IN NUMBER,
14:34:49 712  	out_account_id	OUT NUMBER
14:34:49 713  ) AS
14:34:49 714  BEGIN
14:34:49 715  
14:34:49 716  	PROCS_ACCOUNT_V18.GET_ACCOUNT_ID_BY_GROUP_ID(
14:34:49 717  	  in_group_id,
14:34:49 718  	  out_account_id
14:34:49 719  	);
14:34:49 720  
14:34:49 721  END GET_ACCOUNT_ID_BY_GROUP_ID;
14:34:49 722  
14:34:49 723  /****************************************************************/
14:34:49 724  
14:34:49 725  PROCEDURE LOCK_ACCOUNT (
14:34:49 726  	in_group_id    IN NUMBER,
14:34:49 727  	in_lock_key    IN VARCHAR2,
14:34:49 728  	in_seconds_num IN NUMBER,
14:34:49 729  	in_created_by  IN VARCHAR2,
14:34:49 730  	in_reason      IN VARCHAR2
14:34:49 731  ) AS
14:34:49 732  BEGIN
14:34:49 733  	PROCS_LOCKING_V18.LOCK_ACCOUNT(
14:34:49 734  	  in_group_id,
14:34:49 735  	  in_lock_key,
14:34:49 736  	  in_seconds_num,
14:34:49 737  	  in_created_by,
14:34:49 738  	  in_reason
14:34:49 739  	);
14:34:49 740  END LOCK_ACCOUNT;
14:34:49 741  
14:34:49 742  /****************************************************************/
14:34:49 743  
14:34:49 744  PROCEDURE RELEASE_LOCK (
14:34:49 745  	in_group_id IN NUMBER,
14:34:49 746  	in_lock_key IN VARCHAR2
14:34:49 747  ) AS
14:34:49 748  BEGIN
14:34:49 749  	PROCS_LOCKING_V18.RELEASE_LOCK(
14:34:49 750  	  in_group_id,
14:34:49 751  	  in_lock_key
14:34:49 752  	);
14:34:49 753  END RELEASE_LOCK;
14:34:49 754  
14:34:49 755  PROCEDURE GET_PAYMENT_INFO_BY_INVOICE_ID (
14:34:49 756  	in_invoice_id		    IN NUMBER,
14:34:49 757  	out_order_id		    OUT VARCHAR2,
14:34:49 758  	out_external_transaction_id OUT VARCHAR2
14:34:49 759  ) AS
14:34:49 760  BEGIN
14:34:49 761  	PROCS_INVOICE_V18.GET_PAYMENT_INFO_BY_INVOICE_ID(
14:34:49 762  	  in_invoice_id,
14:34:49 763  	  out_order_id,
14:34:49 764  	  out_external_transaction_id
14:34:49 765  	);
14:34:49 766  END GET_PAYMENT_INFO_BY_INVOICE_ID;
14:34:49 767  
14:34:49 768  /******************************************************************************/
14:34:49 769  
14:34:49 770  PROCEDURE GET_PAYPAL_BY_ID (
14:34:49 771  	in_paypal_id   IN  NUMBER,
14:34:49 772  	out_result_set OUT SYS_REFCURSOR
14:34:49 773  ) AS
14:34:49 774  BEGIN
14:34:49 775  	PROCS_FIN_INSTRUMENTS_V18.GET_PAYPAL_BY_ID(
14:34:49 776  	  in_paypal_id,
14:34:49 777  	  out_result_set
14:34:49 778  	);
14:34:49 779  END GET_PAYPAL_BY_ID;
14:34:49 780  
14:34:49 781  PROCEDURE GET_NEXT_ATTEMPT_NUMBER (
14:34:49 782  /*
14:34:49 783  Throws exceptions:
14:34:49 784  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 785  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 786  */
14:34:49 787  	in_charge_id   in  number,
14:34:49 788  	out_attempt_count out number
14:34:49 789  ) as
14:34:49 790  begin
14:34:49 791  	PROCS_TRANSACTION_V18.GET_NEXT_ATTEMPT_NUMBER(
14:34:49 792  	  in_charge_id,
14:34:49 793  	  out_attempt_count
14:34:49 794  	);
14:34:49 795  end GET_NEXT_ATTEMPT_NUMBER;
14:34:49 796  
14:34:49 797  PROCEDURE GET_NOTIFICATION_TYPE_ID (
14:34:49 798  	in_offer_chain_id	 IN NUMBER,
14:34:49 799  	in_action_name		 IN VARCHAR2,
14:34:49 800  	out_notification_type_id out number
14:34:49 801  ) as
14:34:49 802  begin
14:34:49 803  	PROCS_OFFER_CHAIN_V18.GET_NOTIFICATION_TYPE_ID(
14:34:49 804  	  in_offer_chain_id,
14:34:49 805  	  in_action_name,
14:34:49 806  	  out_notification_type_id
14:34:49 807  	);
14:34:49 808  end GET_NOTIFICATION_TYPE_ID;
14:34:49 809  
14:34:49 810  PROCEDURE GET_GC_ID_BY_PURCH_INVOICE_ID (
14:34:49 811  /*
14:34:49 812  Throws exceptions:
14:34:49 813  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 814  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 815  */
14:34:49 816  in_invoice_id IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:49 817  out_gift_certificate_id OUT GIFT_CERTIFICATE.ID%TYPE
14:34:49 818  ) AS
14:34:49 819  BEGIN
14:34:49 820  PROCS_FIN_INSTRUMENTS_V18.GET_GC_ID_BY_PURCH_INVOICE_ID(
14:34:49 821  in_invoice_id,
14:34:49 822  out_gift_certificate_id
14:34:49 823  );
14:34:49 824  END GET_GC_ID_BY_PURCH_INVOICE_ID;
14:34:49 825  
14:34:49 826  /****************************************************************************/
14:34:49 827  
14:34:49 828  PROCEDURE SHOULD_MOVE_TO_GRACE(
14:34:49 829  	in_invoice_id  IN INVOICE.ID%TYPE,
14:34:49 830  	out_result     OUT NUMBER
14:34:49 831  ) AS
14:34:49 832  BEGIN
14:34:49 833  	-- if the invoice preceding the given invoice has no transaction attempts, then
14:34:49 834  	-- it is not billed out of Sartre. if so, then the associated subscription
14:34:49 835  	-- should be canceled after a final failed billing attempt--not moved to grace.
14:34:49 836  	SELECT DECODE(COUNT(1), 0, 0, 1) INTO out_result
14:34:49 837  	FROM CHARGE c
14:34:49 838  	INNER JOIN TRANSACTION t ON c.TRANSACTION_ID = t.ID
14:34:49 839  	INNER JOIN TRANSACTION_ATTEMPT ta ON ta.TRANSACTION_ID = t.ID
14:34:49 840  	WHERE c.INVOICE_ID = (
14:34:49 841  	  -- select previous invoice_id, or -1 if there is none
14:34:49 842  	  SELECT PREV_INVOICE_ID FROM (
14:34:49 843  	    SELECT i.ID, LAG(i.ID, 1, -1) OVER (ORDER BY i.CREATE_DATE) AS PREV_INVOICE_ID
14:34:49 844  	    FROM INVOICE i
14:34:49 845  	    INNER JOIN LICENSE l ON i.ID = l.INVOICE_ID
14:34:49 846  	    WHERE l.SUBSCRIPTION_ID = (
14:34:49 847  	      SELECT SUBSCRIPTION_ID FROM LICENSE WHERE INVOICE_ID = in_invoice_id
14:34:49 848  	    )
14:34:49 849  	  ) WHERE ID = in_invoice_id
14:34:49 850  	);
14:34:49 851  END SHOULD_MOVE_TO_GRACE;
14:34:49 852  
14:34:49 853  /****************************************************************************/
14:34:49 854  
14:34:49 855  PROCEDURE MOVE_TO_GRACE(
14:34:49 856  	in_invoice_id		      IN INVOICE.ID%TYPE,
14:34:49 857  	in_updated_by		      IN LICENSE.UPDATED_BY%TYPE,
14:34:49 858  	in_grace_period_length_hours  IN NUMBER
14:34:49 859  ) AS
14:34:49 860  BEGIN
14:34:49 861  	PROCS_SUBSCRIPTION_V18.START_GRACE_BY_INVOICE_ID(
14:34:49 862  	  in_invoice_id        => in_invoice_id,
14:34:49 863  	  in_updater	       => in_updated_by,
14:34:49 864  	  in_duration_in_hours => in_grace_period_length_hours
14:34:49 865  	);
14:34:49 866  END MOVE_TO_GRACE;
14:34:49 867  
14:34:49 868  /****************************************************************************/
14:34:49 869  
14:34:49 870  PROCEDURE MOVE_OUT_OF_GRACE(
14:34:49 871  	in_invoice_id	IN INVOICE.ID%TYPE,
14:34:49 872  	in_updated_by	IN LICENSE.UPDATED_BY%TYPE
14:34:49 873  ) AS
14:34:49 874  BEGIN
14:34:49 875  	PROCS_SUBSCRIPTION_V18.STOP_GRACE_BY_INVOICE_ID(
14:34:49 876  	  in_invoice_id => in_invoice_id,
14:34:49 877  	  in_updater	=> in_updated_by
14:34:49 878  	);
14:34:49 879  END MOVE_OUT_OF_GRACE;
14:34:49 880  
14:34:49 881  END PUBLIC_PROCS_BILLING_V18;
14:34:49 882  .
14:34:49 SQL> /

Package body created.

Elapsed: 00:00:00.08
14:34:49 SQL> 
14:34:49 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_NOTIFICATION_V18" AS
14:34:49   2  
14:34:49   3  PROCEDURE LOCK_ACCOUNT (
14:34:49   4  	in_group_id    IN NUMBER,
14:34:49   5  	in_lock_key    IN VARCHAR2,
14:34:49   6  	in_seconds_num IN NUMBER,
14:34:49   7  	in_created_by  IN VARCHAR2,
14:34:49   8  	in_reason      IN VARCHAR2
14:34:49   9  ) AS
14:34:49  10  BEGIN
14:34:49  11  	PROCS_LOCKING_V18.LOCK_ACCOUNT(
14:34:49  12  	  in_group_id,
14:34:49  13  	  in_lock_key,
14:34:49  14  	  in_seconds_num,
14:34:49  15  	  in_created_by,
14:34:49  16  	  in_reason
14:34:49  17  	);
14:34:49  18  END LOCK_ACCOUNT;
14:34:49  19  
14:34:49  20  /******************************************************************************/
14:34:49  21  
14:34:49  22  PROCEDURE RELEASE_LOCK (
14:34:49  23  	in_group_id IN NUMBER,
14:34:49  24  	in_lock_key IN VARCHAR2
14:34:49  25  ) AS
14:34:49  26  BEGIN
14:34:49  27  	PROCS_LOCKING_V18.RELEASE_LOCK(
14:34:49  28  	  in_group_id,
14:34:49  29  	  in_lock_key
14:34:49  30  	);
14:34:49  31  END RELEASE_LOCK;
14:34:49  32  
14:34:49  33  END PUBLIC_PROCS_NOTIFICATION_V18;
14:34:49  34  .
14:34:49 SQL> /

Package body created.

Elapsed: 00:00:00.02
14:34:49 SQL> 
14:34:49 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_RENEWAL_V18" AS
14:34:49   2  
14:34:49   3  PROCEDURE SUB_EXPIRES_NEED_ENTITLEMENTS (
14:34:49   4  	out_result_set OUT SYS_REFCURSOR
14:34:49   5  ) AS
14:34:49   6  BEGIN
14:34:49   7  	PROCS_GROUP_ACCOUNT_V18.SUB_EXPIRES_NEED_ENTITLEMENTS(out_result_set => out_result_set);
14:34:49   8  END SUB_EXPIRES_NEED_ENTITLEMENTS;
14:34:49   9  
14:34:49  10  PROCEDURE UPDATE_SS_NEED_ENTITLEMENTS (
14:34:49  11  	in_sub_share_id      IN SUBSCRIPTION_SHARE.ID%TYPE,
14:34:49  12  	in_need_entitlements IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE,
14:34:49  13  	in_updater	     IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
14:34:49  14  ) AS
14:34:49  15  BEGIN
14:34:49  16  	PROCS_GROUP_ACCOUNT_V18.UPDATE_SS_NEED_ENTITLEMENTS(
14:34:49  17  	  in_sub_share_id => in_sub_share_id,
14:34:49  18  	  in_need_entitlements => in_need_entitlements,
14:34:49  19  	  in_updater => in_updater
14:34:49  20  	);
14:34:49  21  END UPDATE_SS_NEED_ENTITLEMENTS;
14:34:49  22  
14:34:49  23  PROCEDURE GET_OFFER_CHAIN_BY_ID (
14:34:49  24  /*
14:34:49  25  Throws exceptions:
14:34:49  26  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49  27  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  28  */
14:34:49  29  	  in_offer_chain_id IN	 NUMBER,
14:34:49  30  	  out_result_set    OUT  SYS_REFCURSOR
14:34:49  31  ) AS
14:34:49  32  BEGIN
14:34:49  33  	PROCS_OFFER_CHAIN_V18.GET_OFFER_CHAIN_BY_ID (
14:34:49  34  	  in_offer_chain_id => in_offer_chain_id,
14:34:49  35  	  out_result_set => out_result_set
14:34:49  36  	);
14:34:49  37  END GET_OFFER_CHAIN_BY_ID;
14:34:49  38  
14:34:49  39  PROCEDURE GET_OFFER_CHAIN_META_DATA (
14:34:49  40  /*
14:34:49  41  Throws exceptions (codes):
14:34:49  42  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49  43  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  44  */
14:34:49  45  	in_offer_chain_id IN NUMBER,
14:34:49  46  	in_meta_data_name IN VARCHAR2,
14:34:49  47  	out_result_set	  OUT SYS_REFCURSOR
14:34:49  48  )AS
14:34:49  49  BEGIN
14:34:49  50  	PROCS_OFFER_CHAIN_V18.GET_OFFER_CHAIN_META_DATA(
14:34:49  51  	  in_offer_chain_id,
14:34:49  52  	  in_meta_data_name,
14:34:49  53  	  out_result_set
14:34:49  54  	);
14:34:49  55  END GET_OFFER_CHAIN_META_DATA;
14:34:49  56  
14:34:49  57  PROCEDURE GET_ENDING_LICENSES (
14:34:49  58  /*
14:34:49  59  Throws exceptions:
14:34:49  60  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  61  */
14:34:49  62  	in_hours_number IN NUMBER,
14:34:49  63  	out_result_set OUT SYS_REFCURSOR
14:34:49  64  ) AS
14:34:49  65  BEGIN
14:34:49  66  	PROCS_LICENSE_V18.GET_ENDING_LICENSES(in_hours_number,out_result_set);
14:34:49  67  END GET_ENDING_LICENSES;
14:34:49  68  
14:34:49  69  PROCEDURE GET_ENDING_LICENSES_CC (
14:34:49  70  /*
14:34:49  71  Throws exceptions:
14:34:49  72  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  73  */
14:34:49  74  	in_hours_number IN NUMBER,
14:34:49  75  	out_result_set OUT SYS_REFCURSOR,
14:34:49  76  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
14:34:49  77  ) AS
14:34:49  78  BEGIN
14:34:49  79  	PROCS_LICENSE_V18.GET_ENDING_LICENSES_CC(in_hours_number,out_result_set, in_process_name);
14:34:49  80  END GET_ENDING_LICENSES_CC;
14:34:49  81  
14:34:49  82  /*******************************************************/
14:34:49  83  
14:34:49  84  PROCEDURE GET_RECURRING_OFFER (
14:34:49  85  /*
14:34:49  86  Throws exceptions:
14:34:49  87  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  88  */
14:34:49  89  	in_license_id  IN NUMBER,
14:34:49  90  	out_result_set OUT SYS_REFCURSOR
14:34:49  91  ) AS
14:34:49  92  BEGIN
14:34:49  93  	PROCS_LICENSE_V18.GET_RECURRING_OFFER (
14:34:49  94  	  in_license_id,
14:34:49  95  	  out_result_set
14:34:49  96  	);
14:34:49  97  END GET_RECURRING_OFFER;
14:34:49  98  
14:34:49  99  /********************************************************/
14:34:49 100  
14:34:49 101  PROCEDURE GET_NEXT_OFFER (
14:34:49 102  /*
14:34:49 103  Throws exceptions:
14:34:49 104  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 105  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:49 106  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 107  */
14:34:49 108  	in_license_id  IN NUMBER,
14:34:49 109  	out_result_set OUT SYS_REFCURSOR
14:34:49 110  ) AS
14:34:49 111  BEGIN
14:34:49 112  	PROCS_LICENSE_V18.GET_NEXT_OFFER (
14:34:49 113  	  in_license_id,
14:34:49 114  	  out_result_set
14:34:49 115  	);
14:34:49 116  END GET_NEXT_OFFER;
14:34:49 117  
14:34:49 118  /*********************************************************/
14:34:49 119  
14:34:49 120  PROCEDURE UPDATE_LICENSE_STATUS(
14:34:49 121  /*
14:34:49 122  Throws exceptions:
14:34:49 123  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 124  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 125  */
14:34:49 126  	  in_license_id     IN NUMBER,
14:34:49 127  	  in_license_status IN NUMBER,
14:34:49 128  	  in_updated_by     IN VARCHAR2
14:34:49 129  ) AS
14:34:49 130  BEGIN
14:34:49 131  	PROCS_LICENSE_V18.UPDATE_LICENSE_STATUS (
14:34:49 132  	  in_license_id,
14:34:49 133  	  in_license_status,
14:34:49 134  	  in_updated_by
14:34:49 135  	);
14:34:49 136  END UPDATE_LICENSE_STATUS;
14:34:49 137  
14:34:49 138  /**********************************************************/
14:34:49 139  
14:34:49 140  PROCEDURE UPDATE_INVOICE_STATUS (
14:34:49 141  /*
14:34:49 142  Throws exceptions:
14:34:49 143  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 144  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 145  */
14:34:49 146  	in_invoice_id		       IN NUMBER,
14:34:49 147  	in_invoice_status_id	       IN NUMBER,
14:34:49 148  	in_updated_by		       IN VARCHAR2
14:34:49 149  ) AS
14:34:49 150  BEGIN
14:34:49 151  	PROCS_INVOICE_V18.UPDATE_INVOICE_STATUS(
14:34:49 152  	  in_invoice_id,
14:34:49 153  	  in_invoice_status_id,
14:34:49 154  	  in_updated_by
14:34:49 155  	);
14:34:49 156  END UPDATE_INVOICE_STATUS;
14:34:49 157  
14:34:49 158  /***********************************************************/
14:34:49 159  
14:34:49 160  PROCEDURE CREATE_LICENSE(
14:34:49 161  /*
14:34:49 162  Throws exceptions:
14:34:49 163  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 164  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 165  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:34:49 166  */
14:34:49 167  	in_status_id		    IN NUMBER,
14:34:49 168  	in_needs_entitlements	    IN NUMBER,
14:34:49 169  	in_start_date		    IN DATE,
14:34:49 170  	in_end_date		    IN DATE,
14:34:49 171  	in_offer_id		    IN NUMBER,
14:34:49 172  	in_subscription_id	    IN NUMBER,
14:34:49 173  	in_invoice_id		    IN NUMBER,
14:34:49 174  	in_created_by		    IN VARCHAR2,
14:34:49 175  	in_is_extension 	    IN NUMBER,
14:34:49 176  	in_current_offer_index	    IN NUMBER,
14:34:49 177  	in_current_offer_recurr_num IN NUMBER,
14:34:49 178  	out_license_id		    OUT NUMBER
14:34:49 179  ) AS
14:34:49 180  BEGIN
14:34:49 181  	PROCS_LICENSE_V18.CREATE_LICENSE (
14:34:49 182  	  in_status_id,
14:34:49 183  	  in_needs_entitlements,
14:34:49 184  	  in_start_date,
14:34:49 185  	  in_end_date,
14:34:49 186  	  in_offer_id,
14:34:49 187  	  in_subscription_id,
14:34:49 188  	  in_invoice_id,
14:34:49 189  	  in_created_by,
14:34:49 190  	  in_is_extension,
14:34:49 191  	  in_current_offer_index,
14:34:49 192  	  in_current_offer_recurr_num,
14:34:49 193  	  out_license_id
14:34:49 194  	);
14:34:49 195  END CREATE_LICENSE;
14:34:49 196  
14:34:49 197  /******************************************************/
14:34:49 198  
14:34:49 199  PROCEDURE CREATE_INVOICE(
14:34:49 200  /*
14:34:49 201  Throws exceptions:
14:34:49 202  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 203  */
14:34:49 204  	  in_invoice_status IN NUMBER,
14:34:49 205  	  in_created_by     IN VARCHAR2,
14:34:49 206  	  in_tax_exempt_id  IN VARCHAR2,
14:34:49 207  	  out_invoice_id    OUT NUMBER
14:34:49 208  ) AS
14:34:49 209  BEGIN
14:34:49 210  	PROCS_INVOICE_V18.CREATE_INVOICE (
14:34:49 211  	  in_invoice_status,
14:34:49 212  	  in_created_by,
14:34:49 213  	  in_tax_exempt_id,
14:34:49 214  	  out_invoice_id
14:34:49 215  	);
14:34:49 216  END CREATE_INVOICE;
14:34:49 217  
14:34:49 218  /*******************************************************/
14:34:49 219  
14:34:49 220  PROCEDURE CREATE_CHARGE(
14:34:49 221  /*
14:34:49 222  Throws exceptions:
14:34:49 223  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 224  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 225  */
14:34:49 226  	in_invoice_id	      IN NUMBER,
14:34:49 227  	in_transaction_id     IN NUMBER,
14:34:49 228  	in_instrument_type_id IN NUMBER,
14:34:49 229  	in_instrument_id      IN NUMBER,
14:34:49 230  	in_charge_amount      IN NUMBER,
14:34:49 231  	in_created_by	      IN VARCHAR2,
14:34:49 232  	in_charge_status_id   IN NUMBER,
14:34:49 233  	out_charge_id	      OUT NUMBER
14:34:49 234  ) AS
14:34:49 235  BEGIN
14:34:49 236  	PROCS_CHARGE_V18.CREATE_CHARGE (
14:34:49 237  	  in_invoice_id,
14:34:49 238  	  in_transaction_id,
14:34:49 239  	  in_instrument_type_id,
14:34:49 240  	  in_instrument_id,
14:34:49 241  	  in_charge_amount,
14:34:49 242  	  in_created_by,
14:34:49 243  	  in_charge_status_id,
14:34:49 244  	  out_charge_id
14:34:49 245  	);
14:34:49 246  END CREATE_CHARGE;
14:34:49 247  
14:34:49 248  /**********************************************************/
14:34:49 249  
14:34:49 250  PROCEDURE HAS_FUTURE_LICENSE (
14:34:49 251  /*
14:34:49 252  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 253  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 254  --
14:34:49 255  RETURNS:
14:34:49 256  1 - if has,
14:34:49 257  0 - else
14:34:49 258  */
14:34:49 259  	in_license_id IN NUMBER,
14:34:49 260  	out_result	   OUT NUMBER
14:34:49 261  ) AS
14:34:49 262  BEGIN
14:34:49 263  	PROCS_SUBSCRIPTION_V18.HAS_FUTURE_LICENSE (
14:34:49 264  	  in_license_id,
14:34:49 265  	  out_result
14:34:49 266  	);
14:34:49 267  END HAS_FUTURE_LICENSE;
14:34:49 268  
14:34:49 269  /***********************************************************/
14:34:49 270  
14:34:49 271  PROCEDURE GET_GROUP_ID_BY_LICENSE_ID (
14:34:49 272  /*
14:34:49 273  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 274  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 275  */
14:34:49 276  	in_license_id IN NUMBER,
14:34:49 277  	out_group_id  OUT NUMBER
14:34:49 278  ) AS
14:34:49 279  BEGIN
14:34:49 280  	PROCS_LICENSE_V18.GET_GROUP_ID_BY_LICENSE_ID (
14:34:49 281  	  in_license_id,
14:34:49 282  	  out_group_id
14:34:49 283  	);
14:34:49 284  END GET_GROUP_ID_BY_LICENSE_ID;
14:34:49 285  
14:34:49 286  /**********************************************************/
14:34:49 287  
14:34:49 288  PROCEDURE GET_OFFER_PRODUCTS (
14:34:49 289  /*
14:34:49 290  Throws exceptions (codes):
14:34:49 291  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 292  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 293  */
14:34:49 294  	in_offer_id    IN NUMBER,
14:34:49 295  	out_result_set OUT SYS_REFCURSOR
14:34:49 296  ) AS
14:34:49 297  BEGIN
14:34:49 298  	PROCS_OFFER_CHAIN_V18.GET_OFFER_PRODUCTS (
14:34:49 299  	  in_offer_id,
14:34:49 300  	  out_result_set
14:34:49 301  	);
14:34:49 302  END GET_OFFER_PRODUCTS;
14:34:49 303  
14:34:49 304  /***********************************************************/
14:34:49 305  
14:34:49 306  PROCEDURE CREATE_TRANSACTION (
14:34:49 307  /*
14:34:49 308  Throws exceptions:
14:34:49 309  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 310  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 311  */
14:34:49 312  	in_transaction_id	  IN NUMBER,
14:34:49 313  	in_status_id		  IN NUMBER,
14:34:49 314  	in_amount		  IN NUMBER,
14:34:49 315  	in_created_by		  IN VARCHAR2,
14:34:49 316  	in_order_id		  IN VARCHAR2,
14:34:49 317  	in_transaction_type_code  IN VARCHAR2 DEFAULT NULL,
14:34:49 318  	out_transaction_id	  OUT NUMBER
14:34:49 319  ) AS
14:34:49 320  BEGIN
14:34:49 321  	PROCS_TRANSACTION_V18.CREATE_TRANSACTION(
14:34:49 322  	  in_transaction_id,
14:34:49 323  	  in_status_id,
14:34:49 324  	  in_amount,
14:34:49 325  	  in_created_by,
14:34:49 326  	  in_order_id,
14:34:49 327  	  GLOBAL_CONSTANTS_V18.FALSE, -- is_refund should be false in renewal
14:34:49 328  	  in_transaction_type_code,
14:34:49 329  	  out_transaction_id
14:34:49 330  	);
14:34:49 331  END CREATE_TRANSACTION;
14:34:49 332  
14:34:49 333  /************************************************************/
14:34:49 334  
14:34:49 335  PROCEDURE ADD_LINE_ITEMS(
14:34:49 336  /*
14:34:49 337  Throws exceptions:
14:34:49 338  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 339  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 340  */
14:34:49 341  	in_invoice_id IN NUMBER,
14:34:49 342  	in_offer_id   IN NUMBER,
14:34:49 343  	in_created_by IN VARCHAR2
14:34:49 344  ) AS
14:34:49 345  BEGIN
14:34:49 346  	PROCS_LINE_ITEMS_V18.ADD_LINE_ITEMS(
14:34:49 347  	  in_invoice_id,
14:34:49 348  	  in_offer_id,
14:34:49 349  	  in_created_by
14:34:49 350  	);
14:34:49 351  END ADD_LINE_ITEMS;
14:34:49 352  
14:34:49 353  /************************************************************/
14:34:49 354  
14:34:49 355  PROCEDURE CALCULATE_INVOICE_AMOUNT (
14:34:49 356  /*
14:34:49 357  Throws exceptions:
14:34:49 358  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 359  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 360  */
14:34:49 361  	in_invoice_id IN  NUMBER,
14:34:49 362  	out_amount    OUT NUMBER
14:34:49 363  ) AS
14:34:49 364  BEGIN
14:34:49 365  	PROCS_INVOICE_V18.CALCULATE_INVOICE_AMOUNT (
14:34:49 366  	  in_invoice_id,
14:34:49 367  	  out_amount
14:34:49 368  	);
14:34:49 369  END CALCULATE_INVOICE_AMOUNT;
14:34:49 370  
14:34:49 371  /*************************************************************/
14:34:49 372  
14:34:49 373  PROCEDURE RESERVE_TRANSACTION_ID (
14:34:49 374  /*
14:34:49 375  Throws exceptions:
14:34:49 376  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 377  */
14:34:49 378  	out_transaction_id OUT NUMBER
14:34:49 379  ) AS
14:34:49 380  BEGIN
14:34:49 381  	PROCS_TRANSACTION_V18.RESERVE_TRANSACTION_ID (
14:34:49 382  	  out_transaction_id
14:34:49 383  	);
14:34:49 384  END RESERVE_TRANSACTION_ID;
14:34:49 385  
14:34:49 386  /***************************************************************/
14:34:49 387  
14:34:49 388  PROCEDURE P_GET_NEXT_OFFER_INDEX (
14:34:49 389  	in_offer_chain_id	     IN NUMBER,
14:34:49 390  	in_offer_chain_current_index IN NUMBER,
14:34:49 391  	out_next_offer_index	     OUT NUMBER
14:34:49 392  ) AS
14:34:49 393  BEGIN
14:34:49 394  	PROCS_OFFER_CHAIN_V18.P_GET_NEXT_OFFER_INDEX(
14:34:49 395  	  in_offer_chain_id,
14:34:49 396  	  in_offer_chain_current_index,
14:34:49 397  	  out_next_offer_index
14:34:49 398  	);
14:34:49 399  END P_GET_NEXT_OFFER_INDEX;
14:34:49 400  
14:34:49 401  /***************************************************************/
14:34:49 402  
14:34:49 403  PROCEDURE GET_NEXT_OFFER_INDEX_BY_LCNS (
14:34:49 404  	in_license_id		     IN NUMBER,
14:34:49 405  	in_offer_chain_current_index IN NUMBER,
14:34:49 406  	out_next_offer_index	     OUT NUMBER
14:34:49 407  ) AS
14:34:49 408  BEGIN
14:34:49 409  	PROCS_OFFER_CHAIN_V18.GET_NEXT_OFFER_INDEX_BY_LCNS(
14:34:49 410  	  in_license_id,
14:34:49 411  	  in_offer_chain_current_index,
14:34:49 412  	  out_next_offer_index
14:34:49 413  	);
14:34:49 414  END GET_NEXT_OFFER_INDEX_BY_LCNS;
14:34:49 415  
14:34:49 416  /******************************************************************/
14:34:49 417  
14:34:49 418  PROCEDURE GET_SUBSCRIPTION_INFO (
14:34:49 419  /*
14:34:49 420  Throws exceptions:
14:34:49 421  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 422  */
14:34:49 423  	  in_subscription_id IN  NUMBER,
14:34:49 424  	  out_result_set      OUT SYS_REFCURSOR
14:34:49 425  ) AS
14:34:49 426  BEGIN
14:34:49 427  	PROCS_SUBSCRIPTION_V18.GET_SUBSCRIPTION_INFO(
14:34:49 428  	  in_subscription_id,
14:34:49 429  	  out_result_set
14:34:49 430  	);
14:34:49 431  END GET_SUBSCRIPTION_INFO;
14:34:49 432  
14:34:49 433  /*******************************************************************/
14:34:49 434  
14:34:49 435  PROCEDURE CLOSE_SUBSCRIPTION (
14:34:49 436  	in_subscription_id IN NUMBER,
14:34:49 437  	in_updated_by	   IN VARCHAR2
14:34:49 438  ) AS
14:34:49 439  BEGIN
14:34:49 440  	PROCS_SUBSCRIPTION_V18.CLOSE_SUBSCRIPTION(
14:34:49 441  	  in_subscription_id,
14:34:49 442  	  in_updated_by
14:34:49 443  	);
14:34:49 444  END CLOSE_SUBSCRIPTION;
14:34:49 445  
14:34:49 446  /*******************************************************************/
14:34:49 447  
14:34:49 448  PROCEDURE GET_NEED_ENTITLEMENTS_LICENSES (
14:34:49 449  	out_result_set OUT SYS_REFCURSOR
14:34:49 450  ) AS
14:34:49 451  BEGIN
14:34:49 452  	PROCS_LICENSE_V18.GET_NEED_ENTITLEMENTS_LICENSES(
14:34:49 453  	  out_result_set
14:34:49 454  	);
14:34:49 455  END GET_NEED_ENTITLEMENTS_LICENSES;
14:34:49 456  
14:34:49 457  /*******************************************************************/
14:34:49 458  
14:34:49 459  PROCEDURE UPDATE_NEED_ENTITLEMENTS_FLAG (
14:34:49 460  	in_license_id	      IN NUMBER,
14:34:49 461  	in_needs_entitlements IN NUMBER,
14:34:49 462  	in_updated_by	      IN VARCHAR2
14:34:49 463  ) AS
14:34:49 464  BEGIN
14:34:49 465  	PROCS_LICENSE_V18.UPDATE_NEED_ENTITLEMENTS_FLAG(
14:34:49 466  	  in_license_id,
14:34:49 467  	  in_needs_entitlements,
14:34:49 468  	  in_updated_by
14:34:49 469  	);
14:34:49 470  END UPDATE_NEED_ENTITLEMENTS_FLAG;
14:34:49 471  
14:34:49 472  /*******************************************************/
14:34:49 473  
14:34:49 474  PROCEDURE GET_PROD_OFFERINGS_BY_OFFER_ID (
14:34:49 475  /*
14:34:49 476  Throws exceptions (codes):
14:34:49 477  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 478  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 479  */
14:34:49 480  	in_offer_id    IN NUMBER,
14:34:49 481  	out_result_set OUT SYS_REFCURSOR
14:34:49 482  ) AS
14:34:49 483  BEGIN
14:34:49 484  	PROCS_OFFER_CHAIN_V18.GET_PROD_OFFERINGS_BY_OFFER_ID(in_offer_id,out_result_set);
14:34:49 485  END GET_PROD_OFFERINGS_BY_OFFER_ID;
14:34:49 486  
14:34:49 487  /*******************************************************/
14:34:49 488  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
14:34:49 489  /*
14:34:49 490  Throws exceptions (codes):
14:34:49 491  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 492  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 493  */
14:34:49 494  	in_product_offering_id IN NUMBER,
14:34:49 495  	in_meta_data_name      IN VARCHAR2 DEFAULT NULL,
14:34:49 496  	out_result_set	       OUT SYS_REFCURSOR
14:34:49 497  ) AS
14:34:49 498  BEGIN
14:34:49 499  	PROCS_OFFER_CHAIN_V18.GET_PRODUCT_OFFERING_META_DATA(in_product_offering_id,in_meta_data_name,out_result_set);
14:34:49 500  END GET_PRODUCT_OFFERING_META_DATA;
14:34:49 501  
14:34:49 502  /*******************************************************/
14:34:49 503  
14:34:49 504  PROCEDURE LOCK_ACCOUNT (
14:34:49 505  	in_group_id    IN NUMBER,
14:34:49 506  	in_lock_key    IN VARCHAR2,
14:34:49 507  	in_seconds_num IN NUMBER,
14:34:49 508  	in_created_by  IN VARCHAR2,
14:34:49 509  	in_reason      IN VARCHAR2
14:34:49 510  ) AS
14:34:49 511  BEGIN
14:34:49 512  	PROCS_LOCKING_V18.LOCK_ACCOUNT(
14:34:49 513  	  in_group_id,
14:34:49 514  	  in_lock_key,
14:34:49 515  	  in_seconds_num,
14:34:49 516  	  in_created_by,
14:34:49 517  	  in_reason
14:34:49 518  	);
14:34:49 519  END LOCK_ACCOUNT;
14:34:49 520  
14:34:49 521  /****************************************************************/
14:34:49 522  
14:34:49 523  PROCEDURE RELEASE_LOCK (
14:34:49 524  	in_group_id IN NUMBER,
14:34:49 525  	in_lock_key IN VARCHAR2
14:34:49 526  ) AS
14:34:49 527  BEGIN
14:34:49 528  	PROCS_LOCKING_V18.RELEASE_LOCK(
14:34:49 529  	  in_group_id,
14:34:49 530  	  in_lock_key
14:34:49 531  	);
14:34:49 532  END RELEASE_LOCK;
14:34:49 533  
14:34:49 534  /******************************************************************************/
14:34:49 535  
14:34:49 536  PROCEDURE GET_INVOICE_LINE_ITEMS (
14:34:49 537  	in_invoice_id  IN NUMBER,
14:34:49 538  	out_result_set OUT SYS_REFCURSOR
14:34:49 539  ) AS
14:34:49 540  BEGIN
14:34:49 541  	PROCS_INVOICE_V18.GET_INVOICE_LINE_ITEMS(
14:34:49 542  	  in_invoice_id,
14:34:49 543  	  out_result_set
14:34:49 544  	);
14:34:49 545  END GET_INVOICE_LINE_ITEMS;
14:34:49 546  
14:34:49 547  /******************************************************************************/
14:34:49 548  
14:34:49 549  PROCEDURE ADD_TAX (
14:34:49 550  	in_tax_type_id		 IN NUMBER,
14:34:49 551  	in_calculated_amount	 IN NUMBER,
14:34:49 552  	in_created_by		 IN VARCHAR2,
14:34:49 553  	in_line_item_id 	 IN NUMBER,
14:34:49 554  	in_effective_rate	 IN VARCHAR2,
14:34:49 555  	in_taxable_amount	 IN NUMBER,
14:34:49 556  	in_tax_rule_id		 IN NUMBER,
14:34:49 557  	in_jurisdiction_level_id IN NUMBER,
14:34:49 558  	in_jurisdiction_name	 IN VARCHAR2,
14:34:49 559  	in_jurisdiction_id	 IN VARCHAR2,
14:34:49 560  	in_ext_tax_type 	 IN VARCHAR2,
14:34:49 561  	in_ext_result		 IN VARCHAR2,
14:34:49 562  	in_imposition_type	 IN VARCHAR2,
14:34:49 563  	in_imposition		 IN VARCHAR2
14:34:49 564  ) AS
14:34:49 565  BEGIN
14:34:49 566  	PROCS_TAXES_V18.ADD_TAX(
14:34:49 567  	  in_tax_type_id,
14:34:49 568  	  in_calculated_amount,
14:34:49 569  	  in_created_by,
14:34:49 570  	  in_line_item_id,
14:34:49 571  	  in_effective_rate,
14:34:49 572  	  in_taxable_amount,
14:34:49 573  	  in_tax_rule_id,
14:34:49 574  	  in_jurisdiction_level_id,
14:34:49 575  	  in_jurisdiction_name,
14:34:49 576  	  in_jurisdiction_id,
14:34:49 577  	  in_ext_tax_type,
14:34:49 578  	  in_ext_result,
14:34:49 579  	  in_imposition_type,
14:34:49 580  	  in_imposition
14:34:49 581  	);
14:34:49 582  END ADD_TAX;
14:34:49 583  
14:34:49 584  /******************************************************************************/
14:34:49 585  
14:34:49 586  PROCEDURE GET_CREDIT_CARD_BY_ID (
14:34:49 587  	in_credit_card_id IN  NUMBER,
14:34:49 588  	out_result_set	  OUT SYS_REFCURSOR
14:34:49 589  ) AS
14:34:49 590  BEGIN
14:34:49 591  	PROCS_FIN_INSTRUMENTS_V18.GET_CREDIT_CARD_BY_ID(
14:34:49 592  	  in_credit_card_id,
14:34:49 593  	  out_result_set
14:34:49 594  	);
14:34:49 595  END GET_CREDIT_CARD_BY_ID;
14:34:49 596  
14:34:49 597  /******************************************************************************/
14:34:49 598  
14:34:49 599  PROCEDURE GET_PRD_OFFERING_BY_LINE_IT_ID (
14:34:49 600  	in_line_item_id IN NUMBER,
14:34:49 601  	out_result_set	OUT SYS_REFCURSOR
14:34:49 602  ) AS
14:34:49 603  BEGIN
14:34:49 604  	PROCS_PRODUCT_V18.GET_PRD_OFFERING_BY_LINE_IT_ID(
14:34:49 605  	  in_line_item_id,
14:34:49 606  	  out_result_set
14:34:49 607  	);
14:34:49 608  END GET_PRD_OFFERING_BY_LINE_IT_ID;
14:34:49 609  
14:34:49 610  /******************************************************************************/
14:34:49 611  
14:34:49 612  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
14:34:49 613  /*
14:34:49 614  Throws exceptions:
14:34:49 615  APP_EXCEPTION_CODES_V18.NOT_FOUND,
14:34:49 616  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 617  */
14:34:49 618  	in_group_id IN NUMBER,
14:34:49 619  	out_account_id	OUT NUMBER
14:34:49 620  ) AS
14:34:49 621  BEGIN
14:34:49 622  	PROCS_ACCOUNT_V18.GET_ACCOUNT_ID_BY_GROUP_ID(
14:34:49 623  	  in_group_id,
14:34:49 624  	  out_account_id
14:34:49 625  	);
14:34:49 626  END GET_ACCOUNT_ID_BY_GROUP_ID;
14:34:49 627  
14:34:49 628  /******************************************************************************/
14:34:49 629  
14:34:49 630  PROCEDURE GET_LINE_ITEM_DISCOUNTS (
14:34:49 631  /*
14:34:49 632  Throws exceptions:
14:34:49 633  APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49 634  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 635  */
14:34:49 636  	in_line_item_id IN  NUMBER,
14:34:49 637  	out_result_set	OUT SYS_REFCURSOR
14:34:49 638  ) AS
14:34:49 639  BEGIN
14:34:49 640  	PROCS_LINE_ITEMS_V18.GET_LINE_ITEM_DISCOUNTS(
14:34:49 641  	  in_line_item_id,
14:34:49 642  	  out_result_set
14:34:49 643  	);
14:34:49 644  END GET_LINE_ITEM_DISCOUNTS;
14:34:49 645  
14:34:49 646  /******************************************************************************/
14:34:49 647  
14:34:49 648  PROCEDURE UPDATE_LINE_ITEM_AMOUNT (
14:34:49 649  	in_line_item_id    IN NUMBER,
14:34:49 650  	in_amount	   IN NUMBER,
14:34:49 651  	in_discount_amount IN NUMBER,
14:34:49 652  	in_taxes_amount    IN NUMBER
14:34:49 653  ) AS
14:34:49 654  BEGIN
14:34:49 655  	PROCS_LINE_ITEMS_V18.UPDATE_LINE_ITEM_AMOUNT(
14:34:49 656  	  in_line_item_id,
14:34:49 657  	  in_amount,
14:34:49 658  	  in_discount_amount,
14:34:49 659  	  in_taxes_amount
14:34:49 660  	);
14:34:49 661  END UPDATE_LINE_ITEM_AMOUNT;
14:34:49 662  
14:34:49 663  /******************************************************************************/
14:34:49 664  
14:34:49 665  PROCEDURE GET_PAYPAL_BY_ID (
14:34:49 666  	in_paypal_id   IN  NUMBER,
14:34:49 667  	out_result_set OUT SYS_REFCURSOR
14:34:49 668  ) AS
14:34:49 669  BEGIN
14:34:49 670  	PROCS_FIN_INSTRUMENTS_V18.GET_PAYPAL_BY_ID(
14:34:49 671  	  in_paypal_id,
14:34:49 672  	  out_result_set
14:34:49 673  	);
14:34:49 674  END GET_PAYPAL_BY_ID;
14:34:49 675  
14:34:49 676  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
14:34:49 677  	in_invoice_id		IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
14:34:49 678  	out_result_set OUT SYS_REFCURSOR
14:34:49 679  ) AS
14:34:49 680  BEGIN
14:34:49 681  	PROCS_FIN_INSTRUMENTS_V18.GET_GC_BY_PURCH_INVOICE_ID (
14:34:49 682  	  in_invoice_id,
14:34:49 683  	  out_result_set
14:34:49 684  	);
14:34:49 685  END GET_GC_BY_PURCH_INVOICE_ID;
14:34:49 686  
14:34:49 687  PROCEDURE GET_LICENSE_BY_ID (
14:34:49 688  	in_license_id  IN NUMBER,
14:34:49 689  	out_result_set OUT SYS_REFCURSOR
14:34:49 690  ) AS
14:34:49 691  BEGIN
14:34:49 692  	PROCS_LICENSE_V18.GET_LICENSE_BY_ID (
14:34:49 693  	  in_license_id,
14:34:49 694  	  out_result_set
14:34:49 695  	);
14:34:49 696  END GET_LICENSE_BY_ID;
14:34:49 697  
14:34:49 698  /******************************************************************************/
14:34:49 699  
14:34:49 700  PROCEDURE GET_NOTIFICATION_TYPE_ID (
14:34:49 701  	in_offer_chain_id	 IN NUMBER,
14:34:49 702  	in_action_name		 IN VARCHAR2,
14:34:49 703  	out_notification_type_id OUT NUMBER
14:34:49 704  ) AS
14:34:49 705  BEGIN
14:34:49 706  	PROCS_OFFER_CHAIN_V18.GET_NOTIFICATION_TYPE_ID(
14:34:49 707  	  in_offer_chain_id,
14:34:49 708  	  in_action_name,
14:34:49 709  	  out_notification_type_id
14:34:49 710  	);
14:34:49 711  END GET_NOTIFICATION_TYPE_ID;
14:34:49 712  
14:34:49 713  /******************************************************************************/
14:34:49 714  
14:34:49 715  PROCEDURE GET_ALL_OCH_META_DATA (
14:34:49 716  	in_offer_chain_id IN NUMBER,
14:34:49 717  	out_result_set	  OUT SYS_REFCURSOR
14:34:49 718  ) AS
14:34:49 719  BEGIN
14:34:49 720  	PROCS_OFFER_CHAIN_V18.GET_ALL_META_DATA (
14:34:49 721  	  in_offer_chain_id,
14:34:49 722  	  out_result_set
14:34:49 723  	);
14:34:49 724  END GET_ALL_OCH_META_DATA;
14:34:49 725  
14:34:49 726  /******************************************************************************/
14:34:49 727  
14:34:49 728  PROCEDURE GET_SUBSCRIPTIONS_META_DATA (
14:34:49 729  /*
14:34:49 730  APP_EXCEPTION_CODES_V18.INVALID_PARAMETER
14:34:49 731  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49 732  */
14:34:49 733  	in_subscriptions_ids IN core_owner.NUMBER_TABLE,
14:34:49 734  	out_result_set	     OUT SYS_REFCURSOR
14:34:49 735  ) AS
14:34:49 736  BEGIN
14:34:49 737  	PROCS_SUBSCRIPTION_V18.GET_SUBSCRIPTIONS_META_DATA(
14:34:49 738  	  in_subscriptions_ids,
14:34:49 739  	  out_result_set
14:34:49 740  	);
14:34:49 741  END GET_SUBSCRIPTIONS_META_DATA;
14:34:49 742  
14:34:49 743  PROCEDURE GET_UNREDEEMED_GCS (
14:34:49 744  	out_result_set		OUT SYS_REFCURSOR,
14:34:49 745  	in_hours_number 	IN NUMBER DEFAULT 14*24,
14:34:49 746  	in_num_rows		IN NUMBER DEFAULT 10000,
14:34:49 747  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
14:34:49 748  ) AS
14:34:49 749  BEGIN
14:34:49 750  	PROCS_FIN_INSTRUMENTS_V18.GET_UNREDEEMED_GCS(
14:34:49 751  	  out_result_set => out_result_set,
14:34:49 752  	  in_hours_number => in_hours_number,
14:34:49 753  	  in_num_rows => in_num_rows,
14:34:49 754  	  in_process_name => in_process_name
14:34:49 755  	);
14:34:49 756  END GET_UNREDEEMED_GCS;
14:34:49 757  
14:34:49 758  PROCEDURE GET_OFFER_CHAIN_MD_VALUE (
14:34:49 759  	in_offer_chain_id IN NUMBER,
14:34:49 760  	in_meta_data_name IN VARCHAR2,
14:34:49 761  	out_value	  OUT VARCHAR2
14:34:49 762  ) AS
14:34:49 763  BEGIN
14:34:49 764  	PROCS_OFFER_CHAIN_V18.GET_OFFER_CHAIN_MD_VALUE(
14:34:49 765  	  in_offer_chain_id => in_offer_chain_id,
14:34:49 766  	  in_meta_data_name => in_meta_data_name,
14:34:49 767  	  out_value => out_value
14:34:49 768  	);
14:34:49 769  END GET_OFFER_CHAIN_MD_VALUE;
14:34:49 770  
14:34:49 771  PROCEDURE GET_ACT_SUBS_W_CPT_CHARGEBACKS (
14:34:49 772  	out_result_set	    OUT SYS_REFCURSOR
14:34:49 773  )
14:34:49 774  AS
14:34:49 775  BEGIN
14:34:49 776  	PROCS_SUBSCRIPTION_V18.GET_ACT_SUBS_W_CPT_CHARGEBACKS(
14:34:49 777  	  out_result_set => out_result_set
14:34:49 778  	);
14:34:49 779  END GET_ACT_SUBS_W_CPT_CHARGEBACKS;
14:34:49 780  
14:34:49 781  PROCEDURE GET_ACT_SUBS_W_PP_CHARGEBACKS (
14:34:49 782  	out_result_set	    OUT SYS_REFCURSOR
14:34:49 783  )
14:34:49 784  AS
14:34:49 785  BEGIN
14:34:49 786  	PROCS_SUBSCRIPTION_V18.GET_ACT_SUBS_W_PP_CHARGEBACKS(
14:34:49 787  	  out_result_set => out_result_set
14:34:49 788  	);
14:34:49 789  END GET_ACT_SUBS_W_PP_CHARGEBACKS;
14:34:49 790  
14:34:49 791  PROCEDURE GET_GRACE_PERIOD_SUB_REGIS (
14:34:49 792  	in_max_days_until_close IN NUMBER,
14:34:49 793  	in_num_subs_to_fetch	IN NUMBER,
14:34:49 794  	out_result_set		OUT SYS_REFCURSOR
14:34:49 795  )
14:34:49 796  AS
14:34:49 797  BEGIN
14:34:49 798  	PROCS_SUBSCRIPTION_V18.GET_GRACE_PERIOD_SUB_REGIS(
14:34:49 799  	  in_max_days_until_close => in_max_days_until_close,
14:34:49 800  	  in_num_subs_to_fetch => in_num_subs_to_fetch,
14:34:49 801  	  out_result_set => out_result_set
14:34:49 802  	);
14:34:49 803  END GET_GRACE_PERIOD_SUB_REGIS;
14:34:49 804  
14:34:49 805  PROCEDURE GET_ACT_SUBS_W_AMEX_CB (
14:34:49 806  	out_result_set	    OUT SYS_REFCURSOR
14:34:49 807  )
14:34:49 808  AS
14:34:49 809  BEGIN
14:34:49 810  	PROCS_SUBSCRIPTION_V18.GET_ACT_SUBS_W_AMEX_CB(
14:34:49 811  	  out_result_set => out_result_set
14:34:49 812  	);
14:34:49 813  END GET_ACT_SUBS_W_AMEX_CB;
14:34:49 814  
14:34:49 815  PROCEDURE GET_GRACE_LICE_FOR_FINAL_TRANS (
14:34:49 816  	in_days_before_close	 IN NUMBER,
14:34:49 817  	in_num_licenses_to_fetch IN NUMBER,
14:34:49 818  	out_result_set		 OUT SYS_REFCURSOR
14:34:49 819  ) AS
14:34:49 820  BEGIN
14:34:49 821  	PROCS_LICENSE_V18.GET_GRACE_LICE_FOR_FINAL_TRANS(
14:34:49 822  	  in_days_before_close => in_days_before_close,
14:34:49 823  	  in_num_licenses_to_fetch => in_num_licenses_to_fetch,
14:34:49 824  	  out_result_set => out_result_set
14:34:49 825  	);
14:34:49 826  END GET_GRACE_LICE_FOR_FINAL_TRANS;
14:34:49 827  
14:34:49 828  END PUBLIC_PROCS_RENEWAL_V18;
14:34:49 829  .
14:34:49 SQL> /

Package body created.

Elapsed: 00:00:00.04
14:34:49 SQL> 
14:34:49 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_CLIENT_V18" AS
14:34:49   2  
14:34:49   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
14:34:49   4  /*
14:34:49   5  Throws exceptions:
14:34:49   6  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49   7  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49   8  */
14:34:49   9  	in_notification_type_name IN VARCHAR2,
14:34:49  10  	out_notification_type_id  OUT NUMBER
14:34:49  11  ) AS
14:34:49  12  BEGIN
14:34:49  13  	PROCS_NOTIFICATION_V18.GET_NOTIFICATION_TYPE_BY_NAME (
14:34:49  14  	  in_notification_type_name,
14:34:49  15  	  out_notification_type_id
14:34:49  16  	);
14:34:49  17  END;
14:34:49  18  
14:34:49  19  /*****************************************************************/
14:34:49  20  
14:34:49  21  PROCEDURE ADD_NOTIFICATION (
14:34:49  22  /*
14:34:49  23  Throws exceptions:
14:34:49  24  CORE_OWNER.APP_EXCEPTION_CODES_V18.NOT_FOUND
14:34:49  25  CORE_OWNER.APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:34:49  26  */
14:34:49  27  	in_sender_account_id	 IN NUMBER DEFAULT 0,
14:34:49  28  	in_recipient_group_id	 IN NUMBER,
14:34:49  29  	in_notification_type_id  IN NUMBER,
14:34:49  30  	in_date_to_notify	 IN DATE,
14:34:49  31  	in_email_template_params IN CLOB
14:34:49  32  ) AS
14:34:49  33  BEGIN
14:34:49  34  	PROCS_NOTIFICATION_V18.ADD_NOTIFICATION (
14:34:49  35  	  in_sender_account_id,
14:34:49  36  	  in_recipient_group_id,
14:34:49  37  	  in_notification_type_id,
14:34:49  38  	  in_date_to_notify,
14:34:49  39  	  in_email_template_params
14:34:49  40  	);
14:34:49  41  END;
14:34:49  42  
14:34:49  43  END PUBLIC_PROCS_CLIENT_V18;
14:34:49  44  .
14:34:49 SQL> /

Package body created.

Elapsed: 00:00:00.03
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_ACCOUNT_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_ADX_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_CHARGE_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_COMMON_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_FIN_INSTRUMENTS_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_INVOICE_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_LICENSE_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_LINE_ITEMS_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_OFFER_CHAIN_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PRODUCT_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_SUBSCRIPTION_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_SYSTEM_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_TEST_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_TRANSACTION_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_TAXES_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_LOCKING_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_ADJUSTMENTS_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_BILLING_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_ADDRESS_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_GROUP_ACCOUNT_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_BILLING_V18 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_RENEWAL_V18 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_GROUP_ACCOUNT_V18 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_NOTIFICATION_V18 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> 
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_TAXES_V18 to core_tax_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PRODUCT_V18 to core_tax_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_ACCOUNT_V18 to core_tax_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_POLLING_SYNC to core_poller_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_RECONCILIATION_CRU_V18 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_SUBSCRIPTION_V18 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.03
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_TRANSACTION_V18 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_REPORTING to etl_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_LOCKING_V18 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_ACCOUNT_V18 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_INVOICE_V18 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_ITUNES_RECEIPT_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_ITUNES_RECEIPT_V18 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_AMAZON_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_AMAZON_V18 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_LICENSE_V18 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_LOCKING_V18 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_SUBSCRIPTION_V18 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_GROUP_ACCOUNT_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_GROUP_ACCOUNT_CRU_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_ENTITLEMENT_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_CUPY to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.02
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_LOCKING_V18 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.NOTIFICATION_STATUSES_V18 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_NOTIFICATION_V18 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_SYSTEM_V18 to ops_aaa_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.NOTIFICATION_STATUSES_V18 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_NOTIFICATION_V18 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_SYSTEM_V18 to ops_payment_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.NOTIFICATION_STATUSES_V18 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_NOTIFICATION_V18 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_SYSTEM_V18 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_CLIENT_V18 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_CLIENT_V18 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_CLIENT_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_CLIENT_V18 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> 
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V18 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V18 to core_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V18 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V18 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V18 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V18 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V18 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V18 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V18 to core_poller_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V18 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> 
14:34:49 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.04
14:34:49 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> 
14:34:49 SQL> grant select on CORE_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant select on CORE_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant select on CORE_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant select on CORE_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant select on CORE_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> 
14:34:49 SQL> grant REFERENCES on CORE_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant REFERENCES on CORE_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant REFERENCES on CORE_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> grant REFERENCES on CORE_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:49 SQL> grant REFERENCES on CORE_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:49 SQL> 
14:34:49 SQL> grant select, insert, update, delete ON CORE_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:50 SQL> grant select ON CORE_OWNER.NOTTID_SEQ to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:50 SQL> 
14:34:50 SQL> Grant Execute On Core_Owner.App_Exception_Codes_V18 To Ops_Owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:50 SQL> Grant Execute On Core_Owner.App_Exception_Codes_V18 To Core_Hist_Owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:50 SQL> 
14:34:50 SQL> Grant Execute On Core_Owner.GLOBAL_ENUMS_V18 To Ops_Owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:50 SQL> Grant Execute On Core_Owner.GLOBAL_ENUMS_V18 To Core_Hist_Owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:50 SQL> 
14:34:50 SQL> Grant Execute On Core_Owner.Global_Statuses_V18 To Ops_Owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:34:50 SQL> Grant Execute On Core_Owner.Global_Statuses_V18 To Core_Hist_Owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:34:50 SQL> 
14:34:50 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
14:34:50 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECST@rac01.stg.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com
Cc: nytd_oracledba@nytimes.com

Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.stg.ewr1.nytimes.com
        DB Role: PRIMARY
        SID: ECST
        Schema: core_owner
        Migration: 30.2-release-1.13.0-3-CORE-all
        SVN Revision: 11555
        Duration: 8 sec.
        DBA: sbao
        Service Request: https://jira.em.nytimes.com/browse/ORA-536