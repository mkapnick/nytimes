15:47:45 SQL> @/dbbackups/ECPR/migrations/core_owner/73-paypal-expire-email-hotfix.3-CORE-ALL.sql/upgrade.sql
15:47:45 SQL> 
15:47:45 SQL> .
15:47:45 SQL> /
SP2-0103: Nothing in SQL buffer to run.
15:47:45 SQL> 
15:47:45 SQL> --------------------------------------------------------------------------------
15:47:45 SQL> -- DDL for package PROCS_ACCOUNT
15:47:45 SQL> --------------------------------------------------------------------------------
15:47:45 SQL> 
15:47:45 SQL> CREATE OR REPLACE PACKAGE "PROCS_ACCOUNT_V22" AS
15:47:45   2  
15:47:45   3  FUNCTION GET_GRACE_START_DATE(
15:47:45   4  	in_subscription_id IN NUMBER
15:47:45   5  ) RETURN DATE;
15:47:45   6  
15:47:45   7  FUNCTION GET_GRACE_END_DATE(
15:47:45   8  	in_subscription_id IN NUMBER
15:47:45   9  ) RETURN DATE;
15:47:45  10  
15:47:45  11  PROCEDURE INVOICE_IDS_BY_GROUP_ID (
15:47:45  12  	in_group_id    IN  NUMBER,
15:47:45  13  	out_result_set OUT SYS_REFCURSOR
15:47:45  14  );
15:47:45  15  
15:47:45  16  PROCEDURE ANNOTATE_ACCOUNT (
15:47:45  17  	in_group_id   IN  NUMBER,
15:47:45  18  	in_agent_id   IN  NUMBER,
15:47:45  19  	in_note       IN  VARCHAR2,
15:47:45  20  	in_created_by IN  VARCHAR2
15:47:45  21  );
15:47:45  22  
15:47:45  23  PROCEDURE ASSERT_ACCOUNT_EXISTS (
15:47:45  24  	in_group_id IN	NUMBER,
15:47:45  25  	out_exists  OUT NUMBER
15:47:45  26  );
15:47:45  27  
15:47:45  28  PROCEDURE DISABLE_ACCOUNT (
15:47:45  29  	in_group_id   IN NUMBER,
15:47:45  30  	in_updated_by IN VARCHAR2,
15:47:45  31  	in_note       IN VARCHAR2,
15:47:45  32  	in_agent_id   IN NUMBER
15:47:45  33  );
15:47:45  34  
15:47:45  35  PROCEDURE CREATE_ACTIVE_ACCOUNT(
15:47:45  36  	in_group_id	   IN  ACCOUNT.GROUP_ID%TYPE,
15:47:45  37  	in_created_by	   IN  ACCOUNT.CREATED_BY%TYPE,
15:47:45  38  	out_new_account_id OUT ACCOUNT.ID%TYPE
15:47:45  39  );
15:47:45  40  
15:47:45  41  PROCEDURE REACTIVATE_ACCOUNT (
15:47:45  42  	in_group_id	  IN NUMBER,
15:47:45  43  	in_updated_by	  IN VARCHAR2,
15:47:45  44  	in_note 	  IN VARCHAR2,
15:47:45  45  	in_agent_id	  IN NUMBER
15:47:45  46  );
15:47:45  47  
15:47:45  48  PROCEDURE GET_ACCOUNT_CREDIT_CARDS (
15:47:45  49  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE,
15:47:45  50  	in_status_id   IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT GLOBAL_STATUSES_V22.CREDIT_CARD_ACTIVE,
15:47:45  51  	out_result_set OUT SYS_REFCURSOR
15:47:45  52  );
15:47:45  53  
15:47:45  54  PROCEDURE GET_ACCOUNT_GIFT_CERTIFICATES (
15:47:45  55  	in_group_id	  IN NUMBER,
15:47:45  56  	out_result_gc_set OUT SYS_REFCURSOR,
15:47:45  57  	in_instr_status   IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.TRUE
15:47:45  58  );
15:47:45  59  
15:47:45  60  PROCEDURE GET_ACCOUNT_INFO  (
15:47:45  61  	  in_group_id	    IN	NUMBER,
15:47:45  62  	  out_account_info  OUT SYS_REFCURSOR
15:47:45  63  );
15:47:45  64  
15:47:45  65  PROCEDURE GET_ACCOUNT_NOTES (
15:47:45  66  	  in_group_id	 IN  NUMBER,
15:47:45  67  	  out_result_set OUT SYS_REFCURSOR
15:47:45  68  );
15:47:45  69  
15:47:45  70  PROCEDURE GET_ACCOUNT_PAYPALS(
15:47:45  71  	in_group_id    IN  ACCOUNT.GROUP_ID%TYPE,
15:47:45  72  	in_status_id   IN  PAYPAL.PAYPAL_STATUS_ID%TYPE DEFAULT GLOBAL_STATUSES_V22.PAYPAL_ACTIVE,
15:47:45  73  	out_result_set OUT SYS_REFCURSOR
15:47:45  74  );
15:47:45  75  
15:47:45  76  PROCEDURE GET_ACCOUNT_SUBSCRIPTIONS (
15:47:45  77  	  in_group_id	 IN  NUMBER,
15:47:45  78  	  in_start_date  IN DATE,
15:47:45  79  	  in_end_date	 IN DATE,
15:47:45  80  	  in_status	 IN NUMBER,
15:47:45  81  	  in_group_account_type IN VARCHAR2,
15:47:45  82  	  out_result_set  OUT SYS_REFCURSOR
15:47:45  83  );
15:47:45  84  
15:47:45  85  PROCEDURE FREEZE_ACCOUNT (
15:47:45  86  	in_group_id   IN NUMBER,
15:47:45  87  	in_updated_by IN VARCHAR2,
15:47:45  88  	in_note       IN VARCHAR2,
15:47:45  89  	in_agent_id   IN NUMBER
15:47:45  90  );
15:47:45  91  
15:47:45  92  PROCEDURE GET_ACCOUNT_SUBSCR_INVOICES (
15:47:45  93  	in_group_id	   IN  NUMBER,
15:47:45  94  	in_subscription_id IN NUMBER,
15:47:45  95  	out_result_set	   OUT SYS_REFCURSOR
15:47:45  96  );
15:47:45  97  
15:47:45  98  PROCEDURE GET_ACCOUNT_GC_INVOICES (
15:47:45  99  	in_group_id    IN  NUMBER,
15:47:45 100  	out_result_set OUT SYS_REFCURSOR
15:47:45 101  );
15:47:45 102  
15:47:45 103  PROCEDURE GET_GC_INVOICE (
15:47:45 104  	in_group_id    IN  NUMBER,
15:47:45 105  	in_gc_code     IN  VARCHAR2,
15:47:45 106  	out_result_set OUT SYS_REFCURSOR
15:47:45 107  );
15:47:45 108  
15:47:45 109  PROCEDURE GET_ACCOUNT_PRODUCTS (
15:47:45 110  	in_group_id    IN  NUMBER,
15:47:45 111  	out_result_set OUT SYS_REFCURSOR
15:47:45 112  );
15:47:45 113  
15:47:45 114  PROCEDURE GET_ACCOUNT_PROD_OFFERRINGS (
15:47:45 115  	in_group_id IN NUMBER,
15:47:45 116  	out_result_set	   OUT SYS_REFCURSOR
15:47:45 117  );
15:47:45 118  
15:47:45 119  PROCEDURE UPDATE_ACCOUNT_STATUS (
15:47:45 120  	in_account_id	     IN ACCOUNT.ID%TYPE,
15:47:45 121  	in_account_status_id IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE,
15:47:45 122  	in_updated_by	     IN ACCOUNT.UPDATED_BY%TYPE
15:47:45 123  );
15:47:45 124  
15:47:45 125  PROCEDURE GET_NEEDS_ENTTL_LICENSES_NUM (
15:47:45 126  	in_group_id	 IN ACCOUNT.GROUP_ID%TYPE,
15:47:45 127  	out_licenses_num OUT NUMBER
15:47:45 128  );
15:47:45 129  
15:47:45 130  PROCEDURE SET_TAX_EXEMPT (
15:47:45 131  	in_group_id  IN NUMBER,
15:47:45 132  	in_exempt_id IN VARCHAR2
15:47:45 133  );
15:47:45 134  
15:47:45 135  PROCEDURE IS_TAX_EXEMPT (
15:47:45 136  	in_group_id	  IN NUMBER,
15:47:45 137  	out_is_tax_exempt OUT NUMBER
15:47:45 138  );
15:47:45 139  
15:47:45 140  PROCEDURE GET_GROUP_ID_BY_ACCOUNT_ID (
15:47:45 141  	in_account_id IN NUMBER,
15:47:45 142  	out_group_id  OUT NUMBER
15:47:45 143  );
15:47:45 144  
15:47:45 145  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
15:47:45 146  	in_group_id IN NUMBER,
15:47:45 147  	out_account_id	OUT NUMBER
15:47:45 148  );
15:47:45 149  
15:47:45 150  PROCEDURE GET_GROUPS_ID_BY_INVOICE_ID (
15:47:45 151  	in_invoice_id IN NUMBER,
15:47:45 152  	out_group_ids OUT SYS_REFCURSOR
15:47:45 153  );
15:47:45 154  
15:47:45 155  PROCEDURE GET_ACCOUNT_TAX_EXEMPT_ID (
15:47:45 156  	in_group_id	  IN NUMBER,
15:47:45 157  	out_tax_exempt_id OUT VARCHAR2
15:47:45 158  );
15:47:45 159  
15:47:45 160  PROCEDURE GET_UPGRADABLE_SUBSCRIPTIONS (
15:47:45 161  	in_group_id    IN NUMBER,
15:47:45 162  	out_result_set OUT SYS_REFCURSOR
15:47:45 163  );
15:47:45 164  
15:47:45 165  PROCEDURE GET_USR_ALL_SBSCR_IDS (
15:47:45 166  	in_group_id	   IN NUMBER,
15:47:45 167  	out_result_set	   OUT SYS_REFCURSOR
15:47:45 168  );
15:47:45 169  
15:47:45 170  PROCEDURE GET_USR_SBSCR_IDS_BY_OFFCH_IDS (
15:47:45 171  	in_group_id	   IN NUMBER,
15:47:45 172  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
15:47:45 173  	out_result_set	   OUT SYS_REFCURSOR
15:47:45 174  );
15:47:45 175  
15:47:45 176  PROCEDURE GET_GROUP_IDS_BY_CC_INFO (
15:47:45 177  	in_last_four_cc IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
15:47:45 178  	in_expiration_date IN DATE,
15:47:45 179  	in_country IN CREDIT_CARD.COUNTRY%TYPE DEFAULT NULL,
15:47:45 180  	in_postal_code IN CREDIT_CARD.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:45 181  	in_city IN CREDIT_CARD.CITY%TYPE DEFAULT NULL,
15:47:45 182  	in_state IN CREDIT_CARD.STATE%TYPE DEFAULT NULL,
15:47:45 183  	in_credit_card_type_id IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE DEFAULT NULL,
15:47:45 184  	in_credit_card_status_id IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT NULL,
15:47:45 185  	in_lower_bound IN NUMBER DEFAULT 1,
15:47:45 186  	in_upper_bound IN NUMBER DEFAULT 11,
15:47:45 187  	out_result_set OUT SYS_REFCURSOR
15:47:45 188  );
15:47:45 189  
15:47:45 190  END PROCS_ACCOUNT_V22;
15:47:45 191  .
15:47:45 SQL> /

Package created.

Elapsed: 00:00:01.53
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_ACCOUNT_CRU
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_ACCOUNT_CRU_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE CREATE_ACCOUNT (
15:47:47   4  	out_account_id	      OUT ACCOUNT.ID%TYPE,
15:47:47   5  	in_account_status_id  IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE,
15:47:47   6  	in_suspend_date       IN ACCOUNT.SUSPEND_DATE%TYPE DEFAULT NULL,
15:47:47   7  	in_group_id	      IN ACCOUNT.GROUP_ID%TYPE,
15:47:47   8  	in_created_by	      IN ACCOUNT.CREATED_BY%TYPE,
15:47:47   9  	in_system_category_id IN ACCOUNT.SYSTEM_CATEGORY_ID%TYPE,
15:47:47  10  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
15:47:47  11  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE DEFAULT NULL
15:47:47  12  );
15:47:47  13  
15:47:47  14  PROCEDURE UPDATE_ACCOUNT (
15:47:47  15  	in_account_id	      IN ACCOUNT.ID%TYPE,
15:47:47  16  	in_account_status_id  IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE DEFAULT NULL,
15:47:47  17  	in_suspend_date       IN ACCOUNT.SUSPEND_DATE%TYPE DEFAULT NULL,
15:47:47  18  	in_updated_by	      IN ACCOUNT.UPDATED_BY%TYPE,
15:47:47  19  	in_system_category_id IN ACCOUNT.SYSTEM_CATEGORY_ID%TYPE DEFAULT NULL,
15:47:47  20  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
15:47:47  21  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE DEFAULT NULL
15:47:47  22  );
15:47:47  23  
15:47:47  24  PROCEDURE UPDATE_DEF_FIN_INSTRUMENT(
15:47:47  25  	in_account_id	      IN ACCOUNT.ID%TYPE,
15:47:47  26  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE,
15:47:47  27  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE,
15:47:47  28  	in_updated_by	      IN ACCOUNT.UPDATED_BY%TYPE
15:47:47  29  );
15:47:47  30  
15:47:47  31  PROCEDURE READ_ACCOUNT (
15:47:47  32  	in_account_id  IN ACCOUNT.ID%TYPE,
15:47:47  33  	out_result_set OUT SYS_REFCURSOR
15:47:47  34  );
15:47:47  35  
15:47:47  36  PROCEDURE CREATE_ACCOUNT_NOTE (
15:47:47  37  	inout_account_note_id IN OUT ACCOUNT_NOTE.ID%TYPE,
15:47:47  38  	in_agent_id	      IN ACCOUNT_NOTE.AGENT_ID%TYPE,
15:47:47  39  	in_account_id	      IN ACCOUNT_NOTE.ACCOUNT_ID%TYPE,
15:47:47  40  	in_note 	      IN ACCOUNT_NOTE.NOTE%TYPE,
15:47:47  41  	in_created_by	      IN ACCOUNT_NOTE.CREATED_BY%TYPE
15:47:47  42  );
15:47:47  43  
15:47:47  44  END PROCS_ACCOUNT_CRU_V22;
15:47:47  45  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_ADDRESS_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE CREATE_ADDRESS(
15:47:47   4  /*
15:47:47   5  Throws exceptions:
15:47:47   6  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47   7  */
15:47:47   8  	  out_address_id	OUT NUMBER,
15:47:47   9  	  in_address1		IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
15:47:47  10  	  in_address2		IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
15:47:47  11  	  in_city		IN ADDRESS.CITY%TYPE DEFAULT NULL,
15:47:47  12  	  in_state		IN ADDRESS.STATE%TYPE DEFAULT NULL,
15:47:47  13  	  in_postal_code	IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:47  14  	  in_country		IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
15:47:47  15  	  in_created_by 	IN ADDRESS.CREATED_BY%TYPE
15:47:47  16  );
15:47:47  17  
15:47:47  18  PROCEDURE UPDATE_ADDRESS(
15:47:47  19  /*
15:47:47  20  Throws exceptions:
15:47:47  21  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  22  */
15:47:47  23  	  in_address_id 	IN ADDRESS.ID%TYPE,
15:47:47  24  	  in_address1		IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
15:47:47  25  	  in_address2		IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
15:47:47  26  	  in_city		IN ADDRESS.CITY%TYPE DEFAULT NULL,
15:47:47  27  	  in_state		IN ADDRESS.STATE%TYPE DEFAULT NULL,
15:47:47  28  	  in_postal_code	IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:47  29  	  in_country		IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
15:47:47  30  	  in_updated_by 	IN ADDRESS.UPDATED_BY%TYPE
15:47:47  31  );
15:47:47  32  
15:47:47  33  PROCEDURE GET_ADDRESS (
15:47:47  34  /*
15:47:47  35  Throws exceptions:
15:47:47  36  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  37  */
15:47:47  38  	  in_id 		IN ADDRESS.ID%TYPE,
15:47:47  39  	  out_result_set	OUT SYS_REFCURSOR
15:47:47  40  );
15:47:47  41  
15:47:47  42  END PROCS_ADDRESS_V22;
15:47:47  43  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.04
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_ADDRESS_CRU
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_ADDRESS_CRU_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE CREATE_ADDRESS(
15:47:47   4  	out_address_id	      OUT ADDRESS.ID%TYPE,
15:47:47   5  	in_address_id	      IN ADDRESS.ID%TYPE DEFAULT NULL,
15:47:47   6  	in_address1	      IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
15:47:47   7  	in_address2	      IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
15:47:47   8  	in_city 	      IN ADDRESS.CITY%TYPE DEFAULT NULL,
15:47:47   9  	in_state	      IN ADDRESS.STATE%TYPE DEFAULT NULL,
15:47:47  10  	in_postal_code	      IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:47  11  	in_country	      IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
15:47:47  12  	in_created_by	      IN ADDRESS.CREATED_BY%TYPE
15:47:47  13  );
15:47:47  14  
15:47:47  15  PROCEDURE UPDATE_ADDRESS(
15:47:47  16  	in_address_id	      IN ADDRESS.ID%TYPE,
15:47:47  17  	in_address1	      IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
15:47:47  18  	in_address2	      IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
15:47:47  19  	in_city 	      IN ADDRESS.CITY%TYPE DEFAULT NULL,
15:47:47  20  	in_state	      IN ADDRESS.STATE%TYPE DEFAULT NULL,
15:47:47  21  	in_postal_code	      IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:47  22  	in_country	      IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
15:47:47  23  	in_updated_by	      IN ADDRESS.UPDATED_BY%TYPE
15:47:47  24  );
15:47:47  25  
15:47:47  26  END PROCS_ADDRESS_CRU_V22;
15:47:47  27  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.04
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_ADJUSTMENTS
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_ADJUSTMENTS_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE CREATE_INVOICE_ADJUSTMENT (
15:47:47   4  	in_invoice_id		  IN NUMBER,
15:47:47   5  	in_adjustment_reason	  IN VARCHAR2,
15:47:47   6  	in_is_credit		  IN NUMBER,
15:47:47   7  	in_charge_id		  IN NUMBER,
15:47:47   8  	in_business_date	  IN DATE,
15:47:47   9  	in_created_by		  IN VARCHAR2,
15:47:47  10  	out_invoice_adjustment_id OUT NUMBER
15:47:47  11  );
15:47:47  12  
15:47:47  13  PROCEDURE UPDATE_INVOICE_ADJUSTMENT (
15:47:47  14  	in_invoice_id		  IN NUMBER,
15:47:47  15  	in_original_charge_id	  IN NUMBER,
15:47:47  16  	in_charge_id		  IN NUMBER,
15:47:47  17  	in_updated_by		  IN VARCHAR2
15:47:47  18  );
15:47:47  19  
15:47:47  20  PROCEDURE CREATE_LINE_ITEM_ADJUSTMENT (
15:47:47  21  	in_line_item_id 	    IN NUMBER,
15:47:47  22  	in_invoice_adjustment_id    IN NUMBER,
15:47:47  23  	in_amount		    IN NUMBER,
15:47:47  24  	in_tax			    IN NUMBER,
15:47:47  25  	in_discount		    IN NUMBER,
15:47:47  26  	in_created_by		    IN VARCHAR2,
15:47:47  27  	out_line_item_adjustment_id OUT NUMBER
15:47:47  28  );
15:47:47  29  
15:47:47  30  PROCEDURE CREATE_TAX_ADJUSTMENT (
15:47:47  31  	in_tax_id		   IN NUMBER,
15:47:47  32  	in_line_item_adjustment_id IN NUMBER,
15:47:47  33  	in_amount		   IN NUMBER,
15:47:47  34  	in_created_by		   IN VARCHAR2,
15:47:47  35  	out_tax_adjustment_id	   OUT NUMBER
15:47:47  36  );
15:47:47  37  
15:47:47  38  PROCEDURE CREATE_DISCOUNT_LI_ADJUSTMENT (
15:47:47  39  	in_discount_id		   NUMBER,
15:47:47  40  	in_line_item_id 	   NUMBER,
15:47:47  41  	in_line_item_adjustment_id IN NUMBER,
15:47:47  42  	in_amount		   IN NUMBER,
15:47:47  43  	in_created_by		   IN VARCHAR2,
15:47:47  44  	out_discount_li_id	   OUT NUMBER
15:47:47  45  );
15:47:47  46  
15:47:47  47  END PROCS_ADJUSTMENTS_V22;
15:47:47  48  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_ADX_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE GET_SUB_ADX_INFO (
15:47:47   4  /*
15:47:47   5  Throws exceptions:
15:47:47   6  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47   7  */
15:47:47   8  	out_result_set	    OUT SYS_REFCURSOR,
15:47:47   9  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE
15:47:47  10  );
15:47:47  11  
15:47:47  12  END PROCS_ADX_V22;
15:47:47  13  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_AMAZON_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE AASR_PURCHASE_TOKEN_USED(
15:47:47   4  	in_purchase_token IN AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE,
15:47:47   5  	out_data	  OUT NUMBER
15:47:47   6  );
15:47:47   7  
15:47:47   8  PROCEDURE UPDATE_AASR_LAST_CHECK_DATE(
15:47:47   9  	in_id	      IN AMAZON_APPSTORE_RECEIPT.ID%TYPE,
15:47:47  10  	in_updated_by IN AMAZON_APPSTORE_RECEIPT.UPDATED_BY%TYPE
15:47:47  11  );
15:47:47  12  
15:47:47  13  PROCEDURE EXPIRED_AASR_SUB_IDS(
15:47:47  14  	out_data   OUT SYS_REFCURSOR
15:47:47  15  );
15:47:47  16  
15:47:47  17  PROCEDURE UPDATE_AASR_PURCHASE_TOKEN(
15:47:47  18  	in_id		  IN AMAZON_APPSTORE_RECEIPT.ID%TYPE,
15:47:47  19  	in_purchase_token IN AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE,
15:47:47  20  	in_updated_by	  IN AMAZON_APPSTORE_RECEIPT.UPDATED_BY%TYPE
15:47:47  21  );
15:47:47  22  
15:47:47  23  PROCEDURE UPDATE_AASR_END_DATE(
15:47:47  24  	in_id	      IN AMAZON_APPSTORE_RECEIPT.ID%TYPE,
15:47:47  25  	in_end_date   IN AMAZON_APPSTORE_RECEIPT.END_DATE%TYPE,
15:47:47  26  	in_updated_by IN AMAZON_APPSTORE_RECEIPT.UPDATED_BY%TYPE
15:47:47  27  );
15:47:47  28  
15:47:47  29  PROCEDURE AASR_RECEIPTS_WITH_ACTIVE_SUBS(
15:47:47  30  	out_data   OUT SYS_REFCURSOR,
15:47:47  31  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:47  32  );
15:47:47  33  
15:47:47  34  PROCEDURE ADD_AMAZON_APPSTORE_RECEIPT(
15:47:47  35  	in_subscription_id IN AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:47  36  	in_user_id	   IN AMAZON_APPSTORE_RECEIPT.USER_ID%TYPE,
15:47:47  37  	in_item_type	   IN AMAZON_APPSTORE_RECEIPT.ITEM_TYPE%TYPE,
15:47:47  38  	in_start_date	   IN AMAZON_APPSTORE_RECEIPT.START_DATE%TYPE,
15:47:47  39  	in_end_date	   IN AMAZON_APPSTORE_RECEIPT.END_DATE%TYPE DEFAULT NULL,
15:47:47  40  	in_sku		   IN AMAZON_APPSTORE_RECEIPT.SKU%TYPE,
15:47:47  41  	in_purchase_token  IN AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE,
15:47:47  42  	in_created_by	   IN AMAZON_APPSTORE_RECEIPT.CREATED_BY%TYPE
15:47:47  43  );
15:47:47  44  
15:47:47  45  PROCEDURE AMAZON_APPSTORE_RECEIPTS(
15:47:47  46  	in_user_id IN AMAZON_APPSTORE_RECEIPT.USER_ID%TYPE,
15:47:47  47  	in_sku	   IN AMAZON_APPSTORE_RECEIPT.SKU%TYPE,
15:47:47  48  	out_data   OUT SYS_REFCURSOR
15:47:47  49  );
15:47:47  50  
15:47:47  51  PROCEDURE CREATE_AMAZON_SUB(
15:47:47  52  	  out_id	      OUT NUMBER,
15:47:47  53  	  in_subscription_id  IN AMAZON_SUB.SUBSCRIPTION_ID%TYPE,
15:47:47  54  	  in_amazon_id	      IN AMAZON_SUB.AMAZON_ID%TYPE,
15:47:47  55  	  in_created_by       IN AMAZON_SUB.CREATED_BY%TYPE
15:47:47  56  );
15:47:47  57  
15:47:47  58  PROCEDURE GET_ACTIVE_SUB_IDS (
15:47:47  59  	out_result_set	    OUT SYS_REFCURSOR,
15:47:47  60  	in_amazon_id	IN AMAZON_SUB.AMAZON_ID%TYPE
15:47:47  61  );
15:47:47  62  
15:47:47  63  PROCEDURE GET_ACTIVE_GROUP_IDS (
15:47:47  64  	out_result_set	    OUT SYS_REFCURSOR,
15:47:47  65  	in_amazon_id	IN AMAZON_SUB.AMAZON_ID%TYPE
15:47:47  66  );
15:47:47  67  
15:47:47  68  END PROCS_AMAZON_V22;
15:47:47  69  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.03
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_AMAZON_CRU_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE UPDATE_AMAZON_APPSTORE_RECEIPT(
15:47:47   4  	in_id		   IN AMAZON_APPSTORE_RECEIPT.ID%TYPE,
15:47:47   5  	in_updated_by	   IN AMAZON_APPSTORE_RECEIPT.UPDATED_BY%TYPE,
15:47:47   6  	in_subscription_id IN AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID%TYPE DEFAULT NULL,
15:47:47   7  	in_user_id	   IN AMAZON_APPSTORE_RECEIPT.USER_ID%TYPE DEFAULT NULL,
15:47:47   8  	in_item_type	   IN AMAZON_APPSTORE_RECEIPT.ITEM_TYPE%TYPE DEFAULT NULL,
15:47:47   9  	in_start_date	   IN AMAZON_APPSTORE_RECEIPT.START_DATE%TYPE DEFAULT NULL,
15:47:47  10  	in_end_date	   IN AMAZON_APPSTORE_RECEIPT.END_DATE%TYPE DEFAULT NULL,
15:47:47  11  	in_sku		   IN AMAZON_APPSTORE_RECEIPT.SKU%TYPE DEFAULT NULL,
15:47:47  12  	in_purchase_token  IN AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE DEFAULT NULL,
15:47:47  13  	in_last_check_date IN AMAZON_APPSTORE_RECEIPT.LAST_CHECK_DATE%TYPE DEFAULT NULL
15:47:47  14  );
15:47:47  15  
15:47:47  16  PROCEDURE ADD_AMAZON_APPSTORE_RECEIPT(
15:47:47  17  	in_subscription_id IN AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:47  18  	in_user_id	   IN AMAZON_APPSTORE_RECEIPT.USER_ID%TYPE,
15:47:47  19  	in_item_type	   IN AMAZON_APPSTORE_RECEIPT.ITEM_TYPE%TYPE,
15:47:47  20  	in_start_date	   IN AMAZON_APPSTORE_RECEIPT.START_DATE%TYPE,
15:47:47  21  	in_end_date	   IN AMAZON_APPSTORE_RECEIPT.END_DATE%TYPE DEFAULT NULL,
15:47:47  22  	in_sku		   IN AMAZON_APPSTORE_RECEIPT.SKU%TYPE,
15:47:47  23  	in_purchase_token  IN AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE,
15:47:47  24  	in_created_by	   IN AMAZON_APPSTORE_RECEIPT.CREATED_BY%TYPE
15:47:47  25  );
15:47:47  26  
15:47:47  27  PROCEDURE CREATE_AMAZON_SUB(
15:47:47  28  	  out_id	      OUT NUMBER,
15:47:47  29  	  in_subscription_id  IN AMAZON_SUB.SUBSCRIPTION_ID%TYPE,
15:47:47  30  	  in_amazon_id	      IN AMAZON_SUB.AMAZON_ID%TYPE,
15:47:47  31  	  in_created_by       IN AMAZON_SUB.CREATED_BY%TYPE
15:47:47  32  );
15:47:47  33  
15:47:47  34  END PROCS_AMAZON_CRU_V22;
15:47:47  35  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.04
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_CHARGE
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_CHARGE_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE CREATE_CHARGE(
15:47:47   4  /*
15:47:47   5  Throws exceptions:
15:47:47   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47   8  */
15:47:47   9  	in_invoice_id	      IN NUMBER,
15:47:47  10  	in_transaction_id     IN NUMBER,
15:47:47  11  	in_instrument_type_id IN NUMBER,
15:47:47  12  	in_instrument_id      IN NUMBER,
15:47:47  13  	in_charge_amount      IN NUMBER,
15:47:47  14  	in_created_by	      IN VARCHAR2,
15:47:47  15  	in_charge_status_id   IN NUMBER,
15:47:47  16  	out_charge_id	      OUT NUMBER
15:47:47  17  );
15:47:47  18  
15:47:47  19  PROCEDURE GET_PENDING_REFUND_CHARGES (
15:47:47  20  /*
15:47:47  21  Throws exceptions:
15:47:47  22  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  23  */
15:47:47  24  	out_result_set	    OUT SYS_REFCURSOR,
15:47:47  25  	in_row_number	    IN NUMBER DEFAULT NULL
15:47:47  26  );
15:47:47  27  
15:47:47  28  PROCEDURE GET_UNPROCESSED_CHARGES (
15:47:47  29  /*
15:47:47  30  Throws exceptions:
15:47:47  31  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  32  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  33  */
15:47:47  34  	in_invoice_id  IN NUMBER,
15:47:47  35  	out_result_set OUT SYS_REFCURSOR
15:47:47  36  );
15:47:47  37  
15:47:47  38  PROCEDURE GET_PROCESSED_CHARGES (
15:47:47  39  /*
15:47:47  40  Throws exceptions:
15:47:47  41  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  42  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  43  */
15:47:47  44  	in_invoice_id  IN NUMBER,
15:47:47  45  	out_result_set OUT SYS_REFCURSOR
15:47:47  46  );
15:47:47  47  
15:47:47  48  PROCEDURE GET_SUBSCR_ID_BY_CHARGE_ID (
15:47:47  49  /*
15:47:47  50  Throws exceptions:
15:47:47  51  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  52  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  53  */
15:47:47  54  	in_charge_id	    IN NUMBER,
15:47:47  55  	out_subscription_id OUT NUMBER
15:47:47  56  );
15:47:47  57  
15:47:47  58  PROCEDURE UPDATE_CHARGE_STATUS (
15:47:47  59  /*
15:47:47  60  Throws exceptions:
15:47:47  61  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  62  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  63  */
15:47:47  64  	in_charge_id	    IN CHARGE.ID%TYPE,
15:47:47  65  	in_charge_status_id IN CHARGE.CHARGE_STATUS_ID%TYPE,
15:47:47  66  	in_updated_by	    IN CHARGE.UPDATED_BY%TYPE
15:47:47  67  );
15:47:47  68  
15:47:47  69  FUNCTION IS_CHARGE_COLLECTED (
15:47:47  70  /*
15:47:47  71  Throws:
15:47:47  72  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  73  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  74  Returns:
15:47:47  75  GLOBAL_CONST.TRUE if transaction collected,
15:47:47  76  GLOBAL_CONST.FALSE else
15:47:47  77  */
15:47:47  78  	in_charge_id IN NUMBER
15:47:47  79  ) RETURN NUMBER;
15:47:47  80  
15:47:47  81  PROCEDURE GET_COLLECTED_CHARGES (
15:47:47  82  /*
15:47:47  83  Throws exceptions:
15:47:47  84  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  85  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  86  */
15:47:47  87  	in_invoice_id  IN NUMBER,
15:47:47  88  	out_result_set OUT SYS_REFCURSOR
15:47:47  89  );
15:47:47  90  
15:47:47  91  END PROCS_CHARGE_V22;
15:47:47  92  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.03
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_CHARGE_CRU
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_CHARGE_CRU_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE CREATE_CHARGE(
15:47:47   4  	out_charge_id	      OUT CHARGE.ID%TYPE,
15:47:47   5  	in_charge_id	      IN CHARGE.ID%TYPE DEFAULT NULL,
15:47:47   6  	in_invoice_id	      IN CHARGE.INVOICE_ID%TYPE,
15:47:47   7  	in_transaction_id     IN CHARGE.TRANSACTION_ID%TYPE DEFAULT NULL,
15:47:47   8  	in_instrument_type_id IN CHARGE.INSTRUMENT_TYPE_ID%TYPE,
15:47:47   9  	in_instrument_id      IN CHARGE.INSTRUMENT_ID%TYPE,
15:47:47  10  	in_charge_amount      IN CHARGE.CHARGE_AMOUNT%TYPE,
15:47:47  11  	in_charge_status_id   IN CHARGE.CHARGE_STATUS_ID%TYPE,
15:47:47  12  	in_created_by	      IN CHARGE.CREATED_BY%TYPE
15:47:47  13  );
15:47:47  14  
15:47:47  15  PROCEDURE UPDATE_CHARGE(
15:47:47  16  	in_charge_id	      IN CHARGE.ID%TYPE,
15:47:47  17  	in_instrument_type_id IN CHARGE.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
15:47:47  18  	in_instrument_id      IN CHARGE.INSTRUMENT_ID%TYPE DEFAULT NULL,
15:47:47  19  	in_charge_amount      IN CHARGE.CHARGE_AMOUNT%TYPE DEFAULT NULL,
15:47:47  20  	in_charge_status_id   IN CHARGE.CHARGE_STATUS_ID%TYPE DEFAULT NULL,
15:47:47  21  	in_updated_by	      IN CHARGE.UPDATED_BY%TYPE
15:47:47  22  );
15:47:47  23  
15:47:47  24  END PROCS_CHARGE_CRU_V22;
15:47:47  25  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_CUPY" AS
15:47:47   2  
15:47:47   3  	PROCEDURE POPULATE_REQUEST_INFO(
15:47:47   4  	  in_hours_prior    IN	NUMBER,
15:47:47   5  	  in_filename	    IN	CC_REQUEST_FILE.FILE_NAME%TYPE,
15:47:47   6  	  in_creator	    IN	CC_REQUEST_FILE.UPDATED_BY%TYPE
15:47:47   7  	);
15:47:47   8  
15:47:47   9  	PROCEDURE CHASE_PROFILE_BY_REQ_FILE_ID(
15:47:47  10  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
15:47:47  11  	  in_start	     IN NUMBER,
15:47:47  12  	  in_end	     IN NUMBER,
15:47:47  13  	  out_result_set     OUT SYS_REFCURSOR
15:47:47  14  	);
15:47:47  15  
15:47:47  16  	PROCEDURE UPDATE_REQUEST_FILE_STATUS(
15:47:47  17  	  in_request_file_id IN CC_REQUEST_FILE.ID%TYPE,
15:47:47  18  	  in_status	     IN CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
15:47:47  19  	  in_updated_by      IN CC_REQUEST_FILE.UPDATED_BY%TYPE
15:47:47  20  	);
15:47:47  21  
15:47:47  22  	PROCEDURE UPDATE_CC_REQUEST_STATUS(
15:47:47  23  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
15:47:47  24  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
15:47:47  25  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
15:47:47  26  	);
15:47:47  27  
15:47:47  28  	PROCEDURE REQUEST_FILES_BY_STATUS (
15:47:47  29  	  in_status	      IN  CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
15:47:47  30  	  in_older_than_hours IN  NUMBER DEFAULT -288,
15:47:47  31  	  out_request_files   OUT SYS_REFCURSOR
15:47:47  32  	);
15:47:47  33  
15:47:47  34  	PROCEDURE COUNT_BY_REQUEST_FILE_ID (
15:47:47  35  	  in_id     IN	CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
15:47:47  36  	  out_count OUT NUMBER
15:47:47  37  	);
15:47:47  38  
15:47:47  39  	PROCEDURE GET_CREDIT_CARD_INFO (
15:47:47  40  	  in_chase_profile_id  IN  CREDIT_CARD.CHASE_PROFILE_ID%TYPE,
15:47:47  41  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE DEFAULT NULL,
15:47:47  42  	  out_card_info        OUT SYS_REFCURSOR
15:47:47  43  	);
15:47:47  44  
15:47:47  45  	PROCEDURE UPDATE_CC_UPDATE(
15:47:47  46  	  in_id 	     IN CC_UPDATE.ID%TYPE,
15:47:47  47  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
15:47:47  48  	  in_action	     IN CC_UPDATE.CC_UPDATE_ACTION%TYPE DEFAULT NULL,
15:47:47  49  	  in_reason	     IN CC_UPDATE.CC_UPDATE_REASON%TYPE DEFAULT NULL,
15:47:47  50  	  in_response_proc_status_code IN CC_UPDATE.RESPONSE_PROC_STATUS_CODE%TYPE DEFAULT NULL,
15:47:47  51  	  in_response_proc_status_msg  IN CC_UPDATE.RESPONSE_PROC_STATUS_MESSAGE%TYPE DEFAULT NULL,
15:47:47  52  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
15:47:47  53  	);
15:47:47  54  
15:47:47  55  	PROCEDURE UPDATE_CC_UPDATE_STATUS(
15:47:47  56  	  in_id 	IN CC_UPDATE.ID%TYPE,
15:47:47  57  	  in_status	IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
15:47:47  58  	  in_updated_by IN CC_UPDATE.UPDATED_BY%TYPE
15:47:47  59  	);
15:47:47  60  
15:47:47  61  	PROCEDURE GET_REQUEST_FILE_BY_FILENAME (
15:47:47  62  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE,
15:47:47  63  	  out_request_file     OUT SYS_REFCURSOR
15:47:47  64  	);
15:47:47  65  
15:47:47  66  	PROCEDURE SUSPEND_CREDIT_CARD (
15:47:47  67  	  in_credit_card_id  IN CREDIT_CARD.ID%TYPE,
15:47:47  68  	  in_updated_by      IN CREDIT_CARD.UPDATED_BY%TYPE
15:47:47  69  	);
15:47:47  70  
15:47:47  71  	PROCEDURE UPDATE_CREDIT_CARD (
15:47:47  72  	  in_credit_card_id   IN CREDIT_CARD.ID%TYPE,
15:47:47  73  	  in_last_four_cc     IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
15:47:47  74  	  in_expiration_date  IN CREDIT_CARD.EXPIRATION_DATE%TYPE,
15:47:47  75  	  in_updated_by       IN CREDIT_CARD.UPDATED_BY%TYPE
15:47:47  76  	);
15:47:47  77  
15:47:47  78  	PROCEDURE COMPLETABLE_REQUESTS (
15:47:47  79  	  out_request_files OUT SYS_REFCURSOR
15:47:47  80  	);
15:47:47  81  
15:47:47  82  	PROCEDURE COMPLETABLE_REQUESTS_W_FAILS (
15:47:47  83  	  in_max_hours_before_report IN  NUMBER,
15:47:47  84  	  out_request_files	     OUT SYS_REFCURSOR
15:47:47  85  	);
15:47:47  86  
15:47:47  87  	PROCEDURE GET_GROUP_ID_BY_ACCOUNT_ID (
15:47:47  88  	  in_account_id IN NUMBER,
15:47:47  89  	  out_group_id	OUT NUMBER
15:47:47  90  	);
15:47:47  91  
15:47:47  92  	PROCEDURE GET_LICENSE_BY_ID (
15:47:47  93  	  in_license_id  IN NUMBER,
15:47:47  94  	  out_result_set OUT SYS_REFCURSOR
15:47:47  95  	);
15:47:47  96  
15:47:47  97  END PROCS_CUPY;
15:47:47  98  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.11
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE
15:47:47   2  PACKAGE PROCS_ENTITLEMENT_V22 AS
15:47:47   3  
15:47:47   4  PROCEDURE GET_ALL_ENTITLEMENTS(
15:47:47   5  	in_group_id IN NUMBER,
15:47:47   6  	out_result_set OUT SYS_REFCURSOR);
15:47:47   7  
15:47:47   8  PROCEDURE GET_ITUNES_ENTITLEMENTS(
15:47:47   9  	in_product_id IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
15:47:47  10  	out_result_set OUT SYS_REFCURSOR);
15:47:47  11  
15:47:47  12  PROCEDURE GET_ARCHIVE_ENTITLEMENT_URI(
15:47:47  13  	in_subscription_id IN NUMBER,
15:47:47  14  	out_uri OUT VARCHAR2);
15:47:47  15  
15:47:47  16  END PROCS_ENTITLEMENT_V22;
15:47:47  17  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_FIN_INSTRUMENTS
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_FIN_INSTRUMENTS_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE UPDATE_GC_STATUS_BY_INVOICE (
15:47:47   4  	  in_invoice_id IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:47   5  	  in_status_id	IN GIFT_CERTIFICATE_STATUS.ID%TYPE,
15:47:47   6  	  in_updater	IN GIFT_CERTIFICATE.UPDATED_BY%TYPE
15:47:47   7  );
15:47:47   8  
15:47:47   9  PROCEDURE IS_INVOICE_FOR_REDEEMED_GC (
15:47:47  10  	in_invoice_id		     IN NUMBER,
15:47:47  11  	out_is_invoice_for_redeem_gc OUT NUMBER
15:47:47  12  );
15:47:47  13  
15:47:47  14  PROCEDURE GET_UNREDEEMED_GCS (
15:47:47  15  	out_result_set		OUT SYS_REFCURSOR,
15:47:47  16  	in_hours_number 	IN NUMBER DEFAULT 14*24,
15:47:47  17  	in_num_rows		IN NUMBER DEFAULT 10000,
15:47:47  18  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:47  19  );
15:47:47  20  
15:47:47  21  PROCEDURE GET_GC_ID_BY_PURCH_INVOICE_ID (
15:47:47  22  in_invoice_id IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:47  23  out_gift_certificate_id OUT GIFT_CERTIFICATE.ID%TYPE
15:47:47  24  );
15:47:47  25  
15:47:47  26  PROCEDURE ADD_CREDIT_CARD (
15:47:47  27  /*
15:47:47  28  Throws exceptions:
15:47:47  29  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  30  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  31  */
15:47:47  32  	in_group_id		  IN NUMBER,
15:47:47  33  	in_updated_by		  IN VARCHAR2,
15:47:47  34  	in_instrument_name	  IN VARCHAR2,
15:47:47  35  	in_card_holder_name	  IN VARCHAR2,
15:47:47  36  	in_street_address	  IN VARCHAR2,
15:47:47  37  	in_street_address2	  IN VARCHAR2,
15:47:47  38  	in_state		  IN VARCHAR2,
15:47:47  39  	in_city 		  IN VARCHAR2,
15:47:47  40  	in_postal_code		  IN VARCHAR2,
15:47:47  41  	in_country		  IN CHAR,
15:47:47  42  	in_last_four_cc 	  IN VARCHAR2,
15:47:47  43  	in_expiration_date	  IN DATE,
15:47:47  44  	in_credit_card_type_id	  IN NUMBER,
15:47:47  45  	in_token		  IN VARCHAR2,
15:47:47  46  	in_chase_profile_id	  IN VARCHAR2,
15:47:47  47  	in_credit_card_status_id  IN NUMBER,
15:47:47  48  	in_private_first_name	  IN VARCHAR2,
15:47:47  49  	in_private_last_name	  IN VARCHAR2,
15:47:47  50  	out_credit_card_id	  OUT NUMBER
15:47:47  51  );
15:47:47  52  
15:47:47  53  /******************************************************************************/
15:47:47  54  
15:47:47  55  PROCEDURE ADD_PAYPAL (
15:47:47  56  /*
15:47:47  57  Throws exceptions:
15:47:47  58  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  59  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  60  */
15:47:47  61  	in_group_id			IN NUMBER,
15:47:47  62  	in_instrument_name		IN VARCHAR2,
15:47:47  63  	in_private_email_address	IN VARCHAR2,
15:47:47  64  	in_created_by			IN VARCHAR2,
15:47:47  65  	in_paypal_status_id		IN NUMBER,
15:47:47  66  	in_paypal_prvt_street_address	IN VARCHAR2,
15:47:47  67  	in_paypal_prvt_street_address2	IN VARCHAR2,
15:47:47  68  	in_state			IN VARCHAR2,
15:47:47  69  	in_city 			IN VARCHAR2,
15:47:47  70  	in_postal_code			IN VARCHAR2,
15:47:47  71  	in_country			IN CHAR,
15:47:47  72  	in_expiration_date		IN DATE,
15:47:47  73  	in_secret_token 		IN VARCHAR2,
15:47:47  74  	out_paypal_id			OUT NUMBER
15:47:47  75  );
15:47:47  76  
15:47:47  77  /********************************************/
15:47:47  78  
15:47:47  79  PROCEDURE GET_GIFT_CERTIFICATE_BY_CODE (
15:47:47  80  /*
15:47:47  81  Throws exceptions:
15:47:47  82  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:47  83  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  84  */
15:47:47  85  	in_code       IN VARCHAR,
15:47:47  86  	out_result_set OUT SYS_REFCURSOR
15:47:47  87  );
15:47:47  88  
15:47:47  89  /********************************************/
15:47:47  90  
15:47:47  91  PROCEDURE GET_GIFT_CERTIFICATE_BY_ID (
15:47:47  92  /*
15:47:47  93  Throws exceptions:
15:47:47  94  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:47  95  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  96  */
15:47:47  97  	in_gift_certificate_id IN NUMBER,
15:47:47  98  	out_result_set	       OUT SYS_REFCURSOR
15:47:47  99  );
15:47:47 100  
15:47:47 101  /********************************************/
15:47:47 102  
15:47:47 103  PROCEDURE DISABLE_CREDIT_CARD (
15:47:47 104  /*
15:47:47 105  Throws exceptions:
15:47:47 106  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47 107  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47 108  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:47 109  */
15:47:47 110  	in_credit_card_id IN NUMBER,
15:47:47 111  	in_updated_by	  IN VARCHAR2
15:47:47 112  );
15:47:47 113  
15:47:47 114  /********************************************/
15:47:47 115  
15:47:47 116  PROCEDURE DISABLE_PAYPAL (
15:47:47 117  /*
15:47:47 118  Throws exceptions:
15:47:47 119  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47 120  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47 121  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:47 122  */
15:47:47 123  	in_paypal_id  IN NUMBER,
15:47:47 124  	in_updated_by IN VARCHAR2
15:47:47 125  );
15:47:47 126  
15:47:47 127  /********************************************/
15:47:47 128  
15:47:47 129  PROCEDURE UPDATE_CREDIT_CARD (
15:47:47 130  /*
15:47:47 131  Throws exceptions:
15:47:47 132  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47 133  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47 134  */
15:47:47 135  	in_credit_card_id	  IN NUMBER,
15:47:47 136  	in_updated_by		  IN VARCHAR2,
15:47:47 137  	in_instrument_name	  IN VARCHAR2,
15:47:47 138  	in_is_default		  IN NUMBER
15:47:47 139  );
15:47:47 140  
15:47:47 141  /********************************************/
15:47:47 142  
15:47:47 143  PROCEDURE START_GC_PURCHASING (
15:47:47 144  	in_group_id		  IN NUMBER,
15:47:47 145  	in_offer_chain_id	  IN VARCHAR2,
15:47:47 146  	in_gift_certificate_code  IN  VARCHAR2,
15:47:47 147  	in_created_by		  IN  VARCHAR2,
15:47:47 148  	in_recipient_name	  IN  VARCHAR2,
15:47:47 149  	in_recipient_email	  IN  VARCHAR2,
15:47:47 150  	in_recipient_address_id   IN NUMBER,
15:47:47 151  	in_recipient_notify_date  IN DATE,
15:47:47 152  	in_sender_name		  IN VARCHAR2,
15:47:47 153  	in_sender_email 	  IN VARCHAR2,
15:47:47 154  	in_gift_message 	  IN  VARCHAR2,
15:47:47 155  	in_expiration_date	  IN DATE,
15:47:47 156  	in_campaign		  IN VARCHAR2,
15:47:47 157  	in_reference_code	  IN VARCHAR2,
15:47:47 158  	out_gift_certificate_id   OUT NUMBER,
15:47:47 159  	out_invoice_id		  OUT NUMBER
15:47:47 160  );
15:47:47 161  
15:47:47 162  PROCEDURE FINALIZE_GC_PURCHASING (
15:47:47 163  	in_invoice_id	      IN NUMBER,
15:47:47 164  	in_created_by	      IN VARCHAR2,
15:47:47 165  	in_instrument_id      IN NUMBER,
15:47:47 166  	in_instrument_type_id IN NUMBER,
15:47:47 167  	in_order_id	      IN VARCHAR2,
15:47:47 168  	in_transaction_id     IN NUMBER,
15:47:47 169  	out_charge_amount     OUT NUMBER
15:47:47 170  );
15:47:47 171  
15:47:47 172  PROCEDURE PURCHASE_GIFT_CERTIFICATE (
15:47:47 173  	in_group_id	  IN NUMBER,
15:47:47 174  	in_offer_chain_id IN VARCHAR2,
15:47:47 175  	in_gift_certificate_code  IN  VARCHAR2,
15:47:47 176  	in_created_by IN  VARCHAR2,
15:47:47 177  	in_recipient_name IN  VARCHAR2,
15:47:47 178  	in_recipient_email IN  VARCHAR2,
15:47:47 179  	in_sender_name IN VARCHAR2,
15:47:47 180  	in_sender_email IN VARCHAR2,
15:47:47 181  	in_gift_message IN  VARCHAR2,
15:47:47 182  	in_instrument_id  IN  NUMBER,
15:47:47 183  	in_instrument_type_id IN NUMBER,
15:47:47 184  	in_expiration_date IN DATE,
15:47:47 185  	in_order_id IN VARCHAR2,
15:47:47 186  	in_transaction_id IN NUMBER
15:47:47 187  );
15:47:47 188  
15:47:47 189  /*********************************************/
15:47:47 190  
15:47:47 191  PROCEDURE REDEEM_GIFT_CERTIFICATE (
15:47:47 192  	in_group_id			IN NUMBER,
15:47:47 193  	in_gift_certificate_code	IN VARCHAR2,
15:47:47 194  	in_created_by			IN VARCHAR2,
15:47:47 195  	in_redeemer_address_id		IN NUMBER,
15:47:47 196  	in_fin_instrument_id		IN NUMBER,
15:47:47 197  	in_fin_instrument_type_id	IN NUMBER,
15:47:47 198  	in_redemption_offer_chain_id	IN NUMBER,
15:47:47 199  	out_subscription_id		OUT NUMBER,
15:47:47 200  	out_license_id			OUT NUMBER
15:47:47 201  );
15:47:47 202  
15:47:47 203  /********************************************/
15:47:47 204  
15:47:47 205  PROCEDURE GET_DEF_FINANCIAL_INSTRUMENT (
15:47:47 206  	in_group_id	       IN  NUMBER,
15:47:47 207  	out_instrument_type_id OUT NUMBER,
15:47:47 208  	out_instrument_id      OUT NUMBER
15:47:47 209  );
15:47:47 210  
15:47:47 211  /************************************************/
15:47:47 212  
15:47:47 213  PROCEDURE SET_DEF_FINANCIAL_INSTRUMENT (
15:47:47 214  	in_group_id	      IN NUMBER,
15:47:47 215  	in_instrument_type_id IN NUMBER,
15:47:47 216  	in_instrument_id      IN NUMBER,
15:47:47 217  	in_updated_by	      IN VARCHAR2
15:47:47 218  );
15:47:47 219  
15:47:47 220  /***************************************************/
15:47:47 221  
15:47:47 222  PROCEDURE DEL_DEF_FINANCIAL_INSTRUMENT (
15:47:47 223  	in_group_id	      IN NUMBER
15:47:47 224  );
15:47:47 225  
15:47:47 226  /****************************************************/
15:47:47 227  
15:47:47 228  PROCEDURE GET_CREDIT_CARD_BY_ID (
15:47:47 229  	in_credit_card_id IN  NUMBER,
15:47:47 230  	out_result_set	  OUT SYS_REFCURSOR
15:47:47 231  );
15:47:47 232  
15:47:47 233  /****************************************************/
15:47:47 234  
15:47:47 235  PROCEDURE GET_PAYPAL_BY_ID (
15:47:47 236  	in_paypal_id   IN  NUMBER,
15:47:47 237  	out_result_set OUT SYS_REFCURSOR
15:47:47 238  );
15:47:47 239  
15:47:47 240  /***********************************************/
15:47:47 241  
15:47:47 242  FUNCTION F_CAN_DISABLE_CREDIT_CARD (
15:47:47 243  	in_credit_card_id NUMBER
15:47:47 244  ) RETURN NUMBER;
15:47:47 245  
15:47:47 246  /*************************************************/
15:47:47 247  
15:47:47 248  PROCEDURE GET_PURCHASED_GCERTIFICATES (
15:47:47 249  	in_group_id    IN NUMBER,
15:47:47 250  	out_result_set OUT SYS_REFCURSOR
15:47:47 251  );
15:47:47 252  
15:47:47 253  /*************************************************/
15:47:47 254  
15:47:47 255  -- isGiftCertificateForProperOffer
15:47:47 256  
15:47:47 257  PROCEDURE IS_GCERT_FOR_PROPER_OFFER (
15:47:47 258  	in_gift_certificate_id IN NUMBER,
15:47:47 259  	in_charge_id	       IN NUMBER,
15:47:47 260  	out_result	       OUT NUMBER
15:47:47 261  );
15:47:47 262  
15:47:47 263  FUNCTION IS_CREDIT_CARD_EXISTS (
15:47:47 264  /*
15:47:47 265  1 - if instrument exists
15:47:47 266  0 - else
15:47:47 267  */
15:47:47 268  	in_credit_card_id IN NUMBER
15:47:47 269  ) RETURN NUMBER;
15:47:47 270  
15:47:47 271  FUNCTION IS_PAYPAL_EXISTS (
15:47:47 272  /*
15:47:47 273  1 - if instrument exists
15:47:47 274  0 - else
15:47:47 275  */
15:47:47 276  	in_paypal_id IN NUMBER
15:47:47 277  ) RETURN NUMBER;
15:47:47 278  
15:47:47 279  FUNCTION IS_GIFT_CERTIFICATE_EXISTS (
15:47:47 280  /*
15:47:47 281  1 - if instrument exists
15:47:47 282  0 - else
15:47:47 283  */
15:47:47 284  	in_gift_certificate_id IN NUMBER
15:47:47 285  ) RETURN NUMBER;
15:47:47 286  
15:47:47 287  PROCEDURE GET_GROUP_ID_BY_CREDIT_CARD_ID (
15:47:47 288  	in_credit_card_id IN NUMBER,
15:47:47 289  	out_group_id	  OUT NUMBER
15:47:47 290  );
15:47:47 291  
15:47:47 292  PROCEDURE GET_GROUP_ID_BY_PAYPAL_ID (
15:47:47 293  	in_paypal_id IN NUMBER,
15:47:47 294  	out_group_id	  OUT NUMBER
15:47:47 295  );
15:47:47 296  
15:47:47 297  PROCEDURE GET_EXPIRING_PAYPAL (
15:47:47 298  	in_expire_window_days	IN NUMBER,
15:47:47 299  	in_creation_limit_days	IN NUMBER,
15:47:47 300  	in_retry_throttle_name	PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE,
15:47:47 301  	out_result_set		OUT SYS_REFCURSOR
15:47:47 302  );
15:47:47 303  
15:47:47 304  PROCEDURE UPDATE_CREDIT_CARD_STATUS (
15:47:47 305  	in_credit_card_id	 IN CREDIT_CARD.ID%TYPE,
15:47:47 306  	in_credit_card_status_id IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE,
15:47:47 307  	in_updated_by		 IN CREDIT_CARD.UPDATED_BY%TYPE
15:47:47 308  );
15:47:47 309  
15:47:47 310  PROCEDURE UPDATE_PAYPAL_STATUS (
15:47:47 311  	in_paypal_id	    IN PAYPAL.ID%TYPE,
15:47:47 312  	in_paypal_status_id IN PAYPAL.PAYPAL_STATUS_ID%TYPE,
15:47:47 313  	in_updated_by	    IN PAYPAL.UPDATED_BY%TYPE
15:47:47 314  );
15:47:47 315  
15:47:47 316  PROCEDURE UPDATE_GIFT_CERTIFICATE_STATUS (
15:47:47 317  	in_gift_certificate_id	      IN GIFT_CERTIFICATE.ID%TYPE,
15:47:47 318  	in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE,
15:47:47 319  	in_updated_by		      IN GIFT_CERTIFICATE.UPDATED_BY%TYPE
15:47:47 320  );
15:47:47 321  
15:47:47 322  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
15:47:47 323  	in_invoice_id		IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:47 324  	out_result_set OUT SYS_REFCURSOR
15:47:47 325  );
15:47:47 326  
15:47:47 327  PROCEDURE SWITCH_FINANCIAL_INSTRUMENT (
15:47:47 328  	/*in_group_id		     IN NUMBER	-- TODO: should we pass group_id here?*/
15:47:47 329  	in_old_fin_instrument_id   IN NUMBER,
15:47:47 330  	in_old_fin_instrument_type IN NUMBER,
15:47:47 331  	in_new_fin_instrument_id   IN NUMBER,
15:47:47 332  	in_new_fin_instrument_type IN NUMBER,
15:47:47 333  	in_updated_by		   IN VARCHAR2
15:47:47 334  );
15:47:47 335  
15:47:47 336  END PROCS_FIN_INSTRUMENTS_V22;
15:47:47 337  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.06
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_FIN_INSTRUMENTS_CRU
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_FIN_INSTRUMENTS_CRU_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE CREATE_CREDIT_CARD(
15:47:47   4  	out_credit_card_id	    OUT CREDIT_CARD.ID%TYPE,
15:47:47   5  	in_credit_card_id	    IN CREDIT_CARD.ID%TYPE DEFAULT NULL,
15:47:47   6  	in_account_id		    IN CREDIT_CARD.ACCOUNT_ID%TYPE,
15:47:47   7  	in_instrument_name	    IN CREDIT_CARD.INSTRUMENT_NAME%TYPE,
15:47:47   8  	in_private_card_holder_name IN CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME%TYPE,
15:47:47   9  	in_private_street_address   IN CREDIT_CARD.PRIVATE_STREET_ADDRESS%TYPE,
15:47:47  10  	in_private_street_address2  IN CREDIT_CARD.PRIVATE_STREET_ADDRESS2%TYPE DEFAULT NULL,
15:47:47  11  	in_state		    IN CREDIT_CARD.STATE%TYPE,
15:47:47  12  	in_city 		    IN CREDIT_CARD.CITY%TYPE,
15:47:47  13  	in_postal_code		    IN CREDIT_CARD.POSTAL_CODE%TYPE,
15:47:47  14  	in_country		    IN CREDIT_CARD.COUNTRY%TYPE,
15:47:47  15  	in_last_four_cc 	    IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
15:47:47  16  	in_expiration_date	    IN CREDIT_CARD.EXPIRATION_DATE%TYPE,
15:47:47  17  	in_credit_card_type_id	    IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE,
15:47:47  18  	in_secret_token 	    IN CREDIT_CARD.SECRET_TOKEN%TYPE,
15:47:47  19  	in_chase_profile_id	    IN CREDIT_CARD.CHASE_PROFILE_ID%TYPE,
15:47:47  20  	in_created_by		    IN CREDIT_CARD.CREATED_BY%TYPE,
15:47:47  21  	in_credit_card_status_id    IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE,
15:47:47  22  	in_private_first_name	    IN CREDIT_CARD.PRIVATE_FIRST_NAME%TYPE,
15:47:47  23  	in_private_last_name	    IN CREDIT_CARD.PRIVATE_LAST_NAME%TYPE
15:47:47  24  );
15:47:47  25  
15:47:47  26  PROCEDURE UPDATE_CREDIT_CARD(
15:47:47  27  	in_credit_card_id	    IN CREDIT_CARD.ID%TYPE,
15:47:47  28  	in_instrument_name	    IN CREDIT_CARD.INSTRUMENT_NAME%TYPE DEFAULT NULL,
15:47:47  29  	in_private_card_holder_name IN CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME%TYPE DEFAULT NULL,
15:47:47  30  	in_private_street_address   IN CREDIT_CARD.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
15:47:47  31  	in_private_street_address2  IN CREDIT_CARD.PRIVATE_STREET_ADDRESS2%TYPE DEFAULT NULL,
15:47:47  32  	in_state		    IN CREDIT_CARD.STATE%TYPE DEFAULT NULL,
15:47:47  33  	in_city 		    IN CREDIT_CARD.CITY%TYPE DEFAULT NULL,
15:47:47  34  	in_postal_code		    IN CREDIT_CARD.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:47  35  	in_country		    IN CREDIT_CARD.COUNTRY%TYPE DEFAULT NULL,
15:47:47  36  	in_last_four_cc 	    IN CREDIT_CARD.LAST_FOUR_CC%TYPE DEFAULT NULL,
15:47:47  37  	in_expiration_date	    IN CREDIT_CARD.EXPIRATION_DATE%TYPE DEFAULT NULL,
15:47:47  38  	in_credit_card_type_id	    IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE DEFAULT NULL,
15:47:47  39  	in_secret_token 	    IN CREDIT_CARD.SECRET_TOKEN%TYPE DEFAULT NULL,
15:47:47  40  	in_chase_profile_id	    IN CREDIT_CARD.CHASE_PROFILE_ID%TYPE DEFAULT NULL,
15:47:47  41  	in_updated_by		    IN CREDIT_CARD.UPDATED_BY%TYPE,
15:47:47  42  	in_credit_card_status_id    IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT NULL,
15:47:47  43  	in_private_first_name	    IN CREDIT_CARD.PRIVATE_FIRST_NAME%TYPE DEFAULT NULL,
15:47:47  44  	in_private_last_name	    IN CREDIT_CARD.PRIVATE_LAST_NAME%TYPE DEFAULT NULL
15:47:47  45  );
15:47:47  46  
15:47:47  47  PROCEDURE CREATE_PAYPAL(
15:47:47  48  	out_paypal_id			OUT PAYPAL.ID%TYPE,
15:47:47  49  	in_paypal_id			IN PAYPAL.ID%TYPE DEFAULT NULL,
15:47:47  50  	in_account_id			IN PAYPAL.ACCOUNT_ID%TYPE,
15:47:47  51  	in_instrument_name		IN PAYPAL.INSTRUMENT_NAME%TYPE DEFAULT NULL,
15:47:47  52  	in_private_email_address	IN PAYPAL.PRIVATE_EMAIL_ADDRESS%TYPE DEFAULT NULL,
15:47:47  53  	in_created_by			IN PAYPAL.CREATED_BY%TYPE,
15:47:47  54  	in_paypal_status_id		IN PAYPAL.PAYPAL_STATUS_ID%TYPE,
15:47:47  55  	in_paypal_prvt_street_address	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE,
15:47:47  56  	in_paypal_prvt_street_address2	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE,
15:47:47  57  	in_state			IN PAYPAL.STATE%TYPE,
15:47:47  58  	in_city 			IN PAYPAL.CITY%TYPE,
15:47:47  59  	in_postal_code			IN PAYPAL.POSTAL_CODE%TYPE,
15:47:47  60  	in_country			IN PAYPAL.COUNTRY%TYPE,
15:47:47  61  	in_expiration_date		IN PAYPAL.EXPIRATION_DATE%TYPE,
15:47:47  62  	in_secret_token 		IN PAYPAL.SECRET_TOKEN%TYPE
15:47:47  63  );
15:47:47  64  
15:47:47  65  PROCEDURE UPDATE_PAYPAL(
15:47:47  66  	in_paypal_id			IN PAYPAL.ID%TYPE,
15:47:47  67  	in_instrument_name		IN PAYPAL.INSTRUMENT_NAME%TYPE DEFAULT NULL,
15:47:47  68  	in_private_email_address	IN PAYPAL.PRIVATE_EMAIL_ADDRESS%TYPE DEFAULT NULL,
15:47:47  69  	in_updated_by			IN PAYPAL.UPDATED_BY%TYPE,
15:47:47  70  	in_paypal_status_id		IN PAYPAL.PAYPAL_STATUS_ID%TYPE DEFAULT NULL,
15:47:47  71  	in_paypal_prvt_street_address	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
15:47:47  72  	in_paypal_prvt_street_address2	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
15:47:47  73  	in_state			IN PAYPAL.STATE%TYPE DEFAULT NULL,
15:47:47  74  	in_city 			IN PAYPAL.CITY%TYPE DEFAULT NULL,
15:47:47  75  	in_postal_code			IN PAYPAL.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:47  76  	in_country			IN PAYPAL.COUNTRY%TYPE DEFAULT NULL,
15:47:47  77  	in_expiration_date		IN PAYPAL.EXPIRATION_DATE%TYPE DEFAULT NULL,
15:47:47  78  	in_secret_token 		IN PAYPAL.SECRET_TOKEN%TYPE DEFAULT NULL
15:47:47  79  );
15:47:47  80  
15:47:47  81  PROCEDURE CREATE_GIFT_CERTIFICATE(
15:47:47  82  	out_gift_certificate_id       OUT GIFT_CERTIFICATE.ID%TYPE,
15:47:47  83  	in_gift_certificate_id	      IN GIFT_CERTIFICATE.ID%TYPE DEFAULT NULL,
15:47:47  84  	in_purchaser_group_id	      IN GIFT_CERTIFICATE.PURCHASER_GROUP_ID%TYPE,
15:47:47  85  	in_purchaser_invoice_id       IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:47  86  	in_offer_chain_id	      IN GIFT_CERTIFICATE.OFFER_CHAIN_ID%TYPE,
15:47:47  87  	in_expiration_date	      IN GIFT_CERTIFICATE.EXPIRATION_DATE%TYPE DEFAULT NULL,
15:47:47  88  	in_purchase_date	      IN GIFT_CERTIFICATE.PURCHASE_DATE%TYPE,
15:47:47  89  	in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE,
15:47:47  90  	in_code 		      IN GIFT_CERTIFICATE.CODE%TYPE,
15:47:47  91  	in_created_by		      IN GIFT_CERTIFICATE.CREATED_BY%TYPE,
15:47:47  92  	in_recipient_name	      IN GIFT_CERTIFICATE.RECIPIENT_NAME%TYPE DEFAULT NULL,
15:47:47  93  	in_gift_message 	      IN GIFT_CERTIFICATE.GIFT_MESSAGE%TYPE DEFAULT NULL,
15:47:47  94  	in_recipient_email	      IN GIFT_CERTIFICATE.RECIPIENT_EMAIL%TYPE DEFAULT NULL,
15:47:47  95  	in_finalized_invoice_id       IN GIFT_CERTIFICATE.FINALIZED_INVOICE_ID%TYPE DEFAULT NULL,
15:47:47  96  	in_sender_email 	      IN GIFT_CERTIFICATE.SENDER_EMAIL%TYPE,
15:47:47  97  	in_sender_name		      IN GIFT_CERTIFICATE.SENDER_NAME%TYPE,
15:47:47  98  	in_redemption_date	      IN GIFT_CERTIFICATE.REDEMPTION_DATE%TYPE DEFAULT NULL,
15:47:47  99  	in_cancelation_date	      IN GIFT_CERTIFICATE.CANCELATION_DATE%TYPE DEFAULT NULL,
15:47:47 100  	in_redeemer_group_id	      IN GIFT_CERTIFICATE.REDEEMER_GROUP_ID%TYPE DEFAULT NULL,
15:47:47 101  	in_recipient_address_id       IN GIFT_CERTIFICATE.RECIPIENT_ADDRESS_ID%TYPE DEFAULT NULL,
15:47:47 102  	in_recipient_notify_date      IN GIFT_CERTIFICATE.RECIPIENT_NOTIFY_DATE%TYPE DEFAULT NULL,
15:47:47 103  	in_campaign		      IN GC_CAMPAIGN_AND_REF.CAMPAIGN%TYPE DEFAULT NULL,
15:47:47 104  	in_reference_code	      IN GC_CAMPAIGN_AND_REF.REFERENCE_CODE%TYPE DEFAULT NULL
15:47:47 105  );
15:47:47 106  
15:47:47 107  PROCEDURE UPDATE_GIFT_CERTIFICATE(
15:47:47 108  	in_gift_certificate_id	      IN GIFT_CERTIFICATE.ID%TYPE,
15:47:47 109  	in_expiration_date	      IN GIFT_CERTIFICATE.EXPIRATION_DATE%TYPE DEFAULT NULL,
15:47:47 110  	in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE DEFAULT NULL,
15:47:47 111  	in_code 		      IN GIFT_CERTIFICATE.CODE%TYPE DEFAULT NULL,
15:47:47 112  	in_updated_by		      IN GIFT_CERTIFICATE.UPDATED_BY%TYPE,
15:47:47 113  	in_recipient_name	      IN GIFT_CERTIFICATE.RECIPIENT_NAME%TYPE DEFAULT NULL,
15:47:47 114  	in_gift_message 	      IN GIFT_CERTIFICATE.GIFT_MESSAGE%TYPE DEFAULT NULL,
15:47:47 115  	in_recipient_email	      IN GIFT_CERTIFICATE.RECIPIENT_EMAIL%TYPE DEFAULT NULL,
15:47:47 116  	in_finalized_invoice_id       IN GIFT_CERTIFICATE.FINALIZED_INVOICE_ID%TYPE DEFAULT NULL,
15:47:47 117  	in_sender_email 	      IN GIFT_CERTIFICATE.SENDER_EMAIL%TYPE DEFAULT NULL,
15:47:47 118  	in_sender_name		      IN GIFT_CERTIFICATE.SENDER_NAME%TYPE DEFAULT NULL,
15:47:47 119  	in_redemption_date	      IN GIFT_CERTIFICATE.REDEMPTION_DATE%TYPE DEFAULT NULL,
15:47:47 120  	in_cancelation_date	      IN GIFT_CERTIFICATE.CANCELATION_DATE%TYPE DEFAULT NULL,
15:47:47 121  	in_redeemer_group_id	      IN GIFT_CERTIFICATE.REDEEMER_GROUP_ID%TYPE DEFAULT NULL,
15:47:47 122  	in_recipient_address_id       IN GIFT_CERTIFICATE.RECIPIENT_ADDRESS_ID%TYPE DEFAULT NULL,
15:47:47 123  	in_redeemer_address_id	      IN GIFT_CERTIFICATE.REDEEMER_ADDRESS_ID%TYPE DEFAULT NULL,
15:47:47 124  	in_recipient_notify_date      IN GIFT_CERTIFICATE.RECIPIENT_NOTIFY_DATE%TYPE DEFAULT NULL
15:47:47 125  );
15:47:47 126  
15:47:47 127  END PROCS_FIN_INSTRUMENTS_CRU_V22;
15:47:47 128  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.03
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_GROUP_ACCOUNT
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_GROUP_ACCOUNT_V22" As
15:47:47   2  
15:47:47   3  PROCEDURE UPDATE_SS_NEED_ENTITLEMENTS (
15:47:47   4  	in_sub_share_id      IN SUBSCRIPTION_SHARE.ID%TYPE,
15:47:47   5  	in_need_entitlements IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE,
15:47:47   6  	in_updater	     IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
15:47:47   7  );
15:47:47   8  
15:47:47   9  PROCEDURE SUB_EXPIRES_NEED_ENTITLEMENTS (
15:47:47  10  	out_result_set OUT SYS_REFCURSOR
15:47:47  11  );
15:47:47  12  
15:47:47  13  PROCEDURE EXPIRE_SUB_SHARE (
15:47:47  14  	in_sub_share_id IN SUBSCRIPTION_SHARE.ID%TYPE,
15:47:47  15  	in_updater	IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
15:47:47  16  );
15:47:47  17  
15:47:47  18  PROCEDURE EXPIRE_ALL_SHARES (
15:47:47  19  	in_group_account_id IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE,
15:47:47  20  	in_updated_by	    IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
15:47:47  21  );
15:47:47  22  
15:47:47  23  PROCEDURE SUB_SHARE_BY_GROUP_ID (
15:47:47  24  	in_group_id	 IN  ACCOUNT.GROUP_ID%TYPE,
15:47:47  25  	in_start	 IN  NUMBER,
15:47:47  26  	in_end		 IN  NUMBER,
15:47:47  27  	in_expired	 IN  NUMBER,
15:47:47  28  	out_result_set	 OUT SYS_REFCURSOR,
15:47:47  29  	out_shares_count OUT NUMBER
15:47:47  30  );
15:47:47  31  
15:47:47  32  PROCEDURE IS_VALID_IP_ADDRESS (
15:47:47  33  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
15:47:47  34  	in_ip_low	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
15:47:47  35  	in_ip_high	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
15:47:47  36  	out_is_valid	    OUT NUMBER
15:47:47  37  );
15:47:47  38  
15:47:47  39  PROCEDURE IS_VALID_EMAIL_DOMAIN (
15:47:47  40  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:47  41  	in_email_domain     IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
15:47:47  42  	out_is_valid	    OUT NUMBER
15:47:47  43  );
15:47:47  44  
15:47:47  45  PROCEDURE GET_SUBSCRIPTION_SHARE (
15:47:47  46  	in_group_account_id    IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE,
15:47:47  47  	in_borrower_account_id IN SUBSCRIPTION_SHARE.BORROWER_ACCOUNT_ID%TYPE,
15:47:47  48  	Out_Result_Set	       Out Sys_Refcursor
15:47:47  49  );
15:47:47  50  
15:47:47  51  PROCEDURE GET_SUBSCRIPTION_SHARES (
15:47:47  52  	in_group_account_id IN NUMBER,
15:47:47  53  	in_start	    IN NUMBER,
15:47:47  54  	in_end		    IN NUMBER,
15:47:47  55  	Out_Result_Set	    OUT Sys_Refcursor
15:47:47  56  );
15:47:47  57  
15:47:47  58  PROCEDURE GET_GROUP_ACCOUNT_BY_SUB_ID (
15:47:47  59  	in_subscription_id IN Group_Account.SUBSCRIPTION_ID%TYPE,
15:47:47  60  	Out_Result_Set	   Out Sys_Refcursor
15:47:47  61  );
15:47:47  62  
15:47:47  63  PROCEDURE CREATE_GROUP_ACCOUNT (
15:47:47  64  	in_subscription_id	 IN NUMBER,
15:47:47  65  	in_group_name		 IN VARCHAR2,
15:47:47  66  	in_first_name		 IN VARCHAR2,
15:47:47  67  	in_last_name		 IN VARCHAR2,
15:47:47  68  	in_email		 IN VARCHAR2,
15:47:47  69  	in_phone		 IN VARCHAR2,
15:47:47  70  	in_organization_type	 IN VARCHAR2,
15:47:47  71  	in_seats		 IN NUMBER,
15:47:47  72  	in_seat_ttl_in_hours	 IN NUMBER,
15:47:47  73  	in_ip			 IN NUMBER,
15:47:47  74  	in_created_by		 IN VARCHAR2
15:47:47  75  );
15:47:47  76  
15:47:47  77  PROCEDURE GET_GROUP_ACCOUNT_BY_EMAIL (
15:47:47  78  	in_email_domain     IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
15:47:47  79  	out_result_set	    OUT SYS_REFCURSOR
15:47:47  80  );
15:47:47  81  
15:47:47  82  PROCEDURE GET_GROUP_ACCOUNT_BY_IP (
15:47:47  83  	in_ip_low	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
15:47:47  84  	in_ip_high	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
15:47:47  85  	out_result_set	    OUT SYS_REFCURSOR
15:47:47  86  );
15:47:47  87  
15:47:47  88  PROCEDURE GET_GROUP_ACCOUNT_IP_RANGES (
15:47:47  89  	in_group_account_id   IN NUMBER,
15:47:47  90  	in_start	      IN NUMBER,
15:47:47  91  	in_end		      IN NUMBER,
15:47:47  92  	in_status	      IN NUMBER,
15:47:47  93  	out_record_count      OUT NUMBER,
15:47:47  94  	out_result_set	      OUT SYS_REFCURSOR
15:47:47  95  );
15:47:47  96  
15:47:47  97  PROCEDURE GET_GRP_ACCNT_EMAIL_DOMAINS (
15:47:47  98  	in_group_account_id   IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:47  99  	in_start	      IN NUMBER,
15:47:47 100  	in_end		      IN NUMBER,
15:47:47 101  	in_status	      IN GROUP_ACCOUNT_EMAIL_DOMAIN.IS_ACTIVE%TYPE,
15:47:47 102  	out_record_count      OUT NUMBER,
15:47:47 103  	out_result_set	      OUT SYS_REFCURSOR
15:47:47 104  );
15:47:47 105  
15:47:47 106  PROCEDURE ADD_EMAIL_DOMAIN (
15:47:47 107  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:47 108  	in_email_domain IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
15:47:47 109  	in_created_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.CREATED_BY%TYPE
15:47:47 110  );
15:47:47 111  
15:47:47 112  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_GA_ID(
15:47:47 113  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:47 114  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
15:47:47 115  );
15:47:47 116  
15:47:47 117  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_ID(
15:47:47 118  	in_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
15:47:47 119  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
15:47:47 120  );
15:47:47 121  
15:47:47 122  PROCEDURE CREATE_SUBSCRIPTION_SHARE (
15:47:47 123  	in_group_account_id    IN NUMBER,
15:47:47 124  	in_borrower_account_id IN NUMBER,
15:47:47 125  	in_ip_address	       IN VARCHAR2,
15:47:47 126  	in_email_domain        IN VARCHAR2,
15:47:47 127  	in_created_by	       IN VARCHAR2
15:47:47 128  );
15:47:47 129  
15:47:47 130  PROCEDURE GET_NUM_OCCUPIED_GROUP_SEATS (
15:47:47 131  	in_group_account_id   IN NUMBER,
15:47:47 132  	out_occupied_seats   OUT NUMBER
15:47:47 133  );
15:47:47 134  
15:47:47 135  FUNCTION F_GET_NUM_OCCUPIED_GROUP_SEATS (
15:47:47 136  	in_group_account_id   IN NUMBER
15:47:47 137  ) RETURN NUMBER;
15:47:47 138  
15:47:47 139  PROCEDURE DISABLE_IP_RANGES_BY_GA_ID(
15:47:47 140  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
15:47:47 141  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
15:47:47 142  );
15:47:47 143  
15:47:47 144  PROCEDURE DISABLE_IP_RANGE_BY_ID(
15:47:47 145  	in_id IN GROUP_ACCOUNT_IP_RANGE.ID%TYPE,
15:47:47 146  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
15:47:47 147  );
15:47:47 148  
15:47:47 149  PROCEDURE ADD_IP_RANGE (
15:47:47 150  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
15:47:47 151  	in_minimum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_STRING%TYPE,
15:47:47 152  	in_minimum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
15:47:47 153  	in_minimum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
15:47:47 154  	in_maximum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_STRING%TYPE,
15:47:47 155  	in_maximum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_LOW%TYPE,
15:47:47 156  	in_maximum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_HIGH%TYPE,
15:47:47 157  	in_created_by IN GROUP_ACCOUNT_IP_RANGE.CREATED_BY%TYPE
15:47:47 158  );
15:47:47 159  
15:47:47 160  PROCEDURE GET_GRP_ID_BY_GRP_ACCOUNT_ID (
15:47:47 161  	in_group_account_id IN NUMBER,
15:47:47 162  	out_group_id OUT NUMBER
15:47:47 163  );
15:47:47 164  
15:47:47 165  PROCEDURE GET_GRP_ID_BY_GRPACCIPRNG_ID (
15:47:47 166  	in_group_account_ip_range_id IN NUMBER,
15:47:47 167  	out_group_id OUT NUMBER
15:47:47 168  );
15:47:47 169  
15:47:47 170  PROCEDURE GET_GRP_ID_BY_EMAIL_DOM_ID (
15:47:47 171  	in_group_account_email_dom_id IN NUMBER,
15:47:47 172  	out_group_id OUT NUMBER
15:47:47 173  );
15:47:47 174  
15:47:47 175  PROCEDURE UPDATE_GROUP_ACCOUNT (
15:47:47 176  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
15:47:47 177  	in_group_name		 IN GROUP_ACCOUNT.GROUP_NAME%TYPE,
15:47:47 178  	in_first_name		 IN GROUP_ACCOUNT.FIRST_NAME%TYPE,
15:47:47 179  	in_last_name		 IN GROUP_ACCOUNT.LAST_NAME%TYPE,
15:47:47 180  	in_email		 IN GROUP_ACCOUNT.EMAIL%TYPE,
15:47:47 181  	in_phone		 IN GROUP_ACCOUNT.PHONE%TYPE,
15:47:47 182  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
15:47:47 183  );
15:47:47 184  
15:47:47 185  PROCEDURE UPDATE_GROUP_ACCOUNT_SEATS (
15:47:47 186  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
15:47:47 187  	in_seats		 IN GROUP_ACCOUNT.SEATS%TYPE,
15:47:47 188  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
15:47:47 189  );
15:47:47 190  
15:47:47 191  END PROCS_GROUP_ACCOUNT_V22;
15:47:47 192  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.03
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_GROUP_ACCOUNT
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_GROUP_ACCOUNT_CRU_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE UPDATE_SUBSCRIPTION_SHARE (
15:47:47   4  	in_id		       IN SUBSCRIPTION_SHARE.ID%TYPE,
15:47:47   5  	in_group_account_id    IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE DEFAULT NULL,
15:47:47   6  	in_borrower_account_id IN SUBSCRIPTION_SHARE.BORROWER_ACCOUNT_ID%TYPE DEFAULT NULL,
15:47:47   7  	in_ip_address	       IN SUBSCRIPTION_SHARE.IP_ADDRESS%TYPE DEFAULT NULL,
15:47:47   8  	in_start_date	       IN SUBSCRIPTION_SHARE.START_DATE%TYPE DEFAULT NULL,
15:47:47   9  	in_end_date	       IN SUBSCRIPTION_SHARE.END_DATE%TYPE DEFAULT NULL,
15:47:47  10  	in_needs_entitlements  IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE DEFAULT NULL,
15:47:47  11  	in_updated_by	       IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
15:47:47  12  );
15:47:47  13  
15:47:47  14  PROCEDURE CREATE_GROUP_ACCOUNT (
15:47:47  15  	in_subscription_id	 IN NUMBER,
15:47:47  16  	in_group_name		 IN VARCHAR2,
15:47:47  17  	in_first_name		 IN VARCHAR2,
15:47:47  18  	in_last_name		 IN VARCHAR2,
15:47:47  19  	in_email		 IN VARCHAR2,
15:47:47  20  	in_phone		 IN VARCHAR2,
15:47:47  21  	in_organization_type	 IN VARCHAR2,
15:47:47  22  	in_seats		 IN NUMBER,
15:47:47  23  	in_seat_ttl_in_hours	 IN NUMBER,
15:47:47  24  	in_ip			 IN NUMBER,
15:47:47  25  	in_created_by		 IN VARCHAR2
15:47:47  26  );
15:47:47  27  
15:47:47  28  PROCEDURE CREATE_SUBSCRIPTION_SHARE (
15:47:47  29  	in_group_account_id    IN NUMBER,
15:47:47  30  	in_borrower_account_id IN NUMBER,
15:47:47  31  	in_ip_address	       IN VARCHAR2,
15:47:47  32  	in_email_domain        IN VARCHAR2,
15:47:47  33  	in_start_date	       IN DATE,
15:47:47  34  	in_end_date	       IN DATE,
15:47:47  35  	in_created_by	       IN VARCHAR2
15:47:47  36  );
15:47:47  37  
15:47:47  38  PROCEDURE DISABLE_IP_RANGES_BY_GA_ID(
15:47:47  39  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
15:47:47  40  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
15:47:47  41  );
15:47:47  42  
15:47:47  43  PROCEDURE DISABLE_IP_RANGE_BY_ID(
15:47:47  44  	in_id IN GROUP_ACCOUNT_IP_RANGE.ID%TYPE,
15:47:47  45  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
15:47:47  46  );
15:47:47  47  
15:47:47  48  PROCEDURE ADD_IP_RANGE (
15:47:47  49  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
15:47:47  50  	in_minimum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_STRING%TYPE,
15:47:47  51  	in_minimum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
15:47:47  52  	in_minimum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
15:47:47  53  	in_maximum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_STRING%TYPE,
15:47:47  54  	in_maximum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_LOW%TYPE,
15:47:47  55  	in_maximum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_HIGH%TYPE,
15:47:47  56  	in_created_by IN GROUP_ACCOUNT_IP_RANGE.CREATED_BY%TYPE
15:47:47  57  );
15:47:47  58  
15:47:47  59  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_GA_ID(
15:47:47  60  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:47  61  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
15:47:47  62  );
15:47:47  63  
15:47:47  64  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_ID(
15:47:47  65  	in_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
15:47:47  66  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
15:47:47  67  );
15:47:47  68  
15:47:47  69  PROCEDURE ENABLE_EMAIL_DOMAIN_BY_ID(
15:47:47  70  	in_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
15:47:47  71  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
15:47:47  72  );
15:47:47  73  
15:47:47  74  PROCEDURE ADD_EMAIL_DOMAIN (
15:47:47  75  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:47  76  	in_email_domain IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
15:47:47  77  	in_is_active IN  GROUP_ACCOUNT_EMAIL_DOMAIN.IS_ACTIVE%TYPE,
15:47:47  78  	in_created_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.CREATED_BY%TYPE
15:47:47  79  );
15:47:47  80  
15:47:47  81  PROCEDURE UPDATE_GROUP_ACCOUNT (
15:47:47  82  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
15:47:47  83  	in_group_name		 IN GROUP_ACCOUNT.GROUP_NAME%TYPE,
15:47:47  84  	in_first_name		 IN GROUP_ACCOUNT.FIRST_NAME%TYPE,
15:47:47  85  	in_last_name		 IN GROUP_ACCOUNT.LAST_NAME%TYPE,
15:47:47  86  	in_email		 IN GROUP_ACCOUNT.EMAIL%TYPE,
15:47:47  87  	in_phone		 IN GROUP_ACCOUNT.PHONE%TYPE,
15:47:47  88  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
15:47:47  89  );
15:47:47  90  
15:47:47  91  PROCEDURE UPDATE_GROUP_ACCOUNT_SEATS (
15:47:47  92  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
15:47:47  93  	in_seats		 IN GROUP_ACCOUNT.SEATS%TYPE,
15:47:47  94  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
15:47:47  95  );
15:47:47  96  END PROCS_GROUP_ACCOUNT_CRU_V22;
15:47:47  97  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.07
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_HISTORY_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE CREATE_AASR_HISTORY(
15:47:47   4  	in_id			     IN CORE_OWNER.AMAZON_APPSTORE_RECEIPT.ID%TYPE,
15:47:47   5  	in_system_activity_reason_id IN NUMBER,
15:47:47   6  	in_created_by		     IN VARCHAR2
15:47:47   7  );
15:47:47   8  
15:47:47   9  PROCEDURE CREATE_ADDRESS_HISTORY(
15:47:47  10  	in_address_id		     IN NUMBER,
15:47:47  11  	in_system_activity_reason_id IN NUMBER
15:47:47  12  );
15:47:47  13  
15:47:47  14  PROCEDURE CREATE_ACCOUNT_HISTORY(
15:47:47  15  	in_account_id		     IN NUMBER,
15:47:47  16  	in_system_activity_reason_id IN NUMBER
15:47:47  17  );
15:47:47  18  
15:47:47  19  PROCEDURE CREATE_SUBSCRIPTION_HISTORY (
15:47:47  20  	in_subscription_id	     IN NUMBER,
15:47:47  21  	in_system_activity_reason_id IN NUMBER
15:47:47  22  );
15:47:47  23  
15:47:47  24  PROCEDURE CREATE_CREDIT_CARD_HISTORY(
15:47:47  25  	in_credit_card_id	      IN NUMBER,
15:47:47  26  	in_system_activity_reason_id  IN  NUMBER
15:47:47  27  );
15:47:47  28  
15:47:47  29  PROCEDURE CREATE_PAYPAL_HISTORY(
15:47:47  30  	in_paypal_id		      IN NUMBER,
15:47:47  31  	in_system_activity_reason_id  IN NUMBER
15:47:47  32  );
15:47:47  33  
15:47:47  34  PROCEDURE CREATE_GIFT_CERT_HISTORY(
15:47:47  35  	in_gift_certificate_id	      IN NUMBER,
15:47:47  36  	in_system_activity_reason_id  IN  NUMBER
15:47:47  37  );
15:47:47  38  
15:47:47  39  PROCEDURE CREATE_TRANSACTION_HISTORY (
15:47:47  40  	in_transaction_id	     IN NUMBER,
15:47:47  41  	in_system_activity_reason_id IN NUMBER
15:47:47  42  );
15:47:47  43  
15:47:47  44  PROCEDURE CREATE_INVOICE_HISTORY (
15:47:47  45  	in_invoice_id		     IN NUMBER,
15:47:47  46  	in_system_activity_reason_id IN NUMBER
15:47:47  47  );
15:47:47  48  
15:47:47  49  PROCEDURE CREATE_LICENSE_HISTORY (
15:47:47  50  	in_license_id		     IN NUMBER,
15:47:47  51  	in_system_activity_reason_id IN NUMBER
15:47:47  52  );
15:47:47  53  
15:47:47  54  PROCEDURE CREATE_CHARGE_HISTORY (
15:47:47  55  	in_charge_id		    IN NUMBER,
15:47:47  56  	in_system_activity_reason_id IN NUMBER
15:47:47  57  );
15:47:47  58  
15:47:47  59  PROCEDURE CREATE_INVOICE_ADJ_HISTORY (
15:47:47  60  	in_invoice_adjustment_id     IN NUMBER,
15:47:47  61  	in_system_activity_reason_id IN NUMBER
15:47:47  62  );
15:47:47  63  
15:47:47  64  
15:47:47  65  END PROCS_HISTORY_V22;
15:47:47  66  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_INVOICE
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_INVOICE_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE GET_INVOICE_IDS(
15:47:47   4  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE,
15:47:47   5  	in_fin_id      IN SUBSCRIPTION.INSTRUMENT_ID%TYPE,
15:47:47   6  	out_result_set OUT SYS_REFCURSOR
15:47:47   7  );
15:47:47   8  
15:47:47   9  PROCEDURE IS_INVOICE_FOR_GC (
15:47:47  10  	in_invoice_id  IN NUMBER,
15:47:47  11  	out_result     OUT NUMBER
15:47:47  12  );
15:47:47  13  
15:47:47  14  PROCEDURE CREATE_INVOICE(
15:47:47  15  /*
15:47:47  16  Throws exceptions:
15:47:47  17  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  18  */
15:47:47  19  	  in_invoice_status IN NUMBER,
15:47:47  20  	  in_created_by     IN VARCHAR2,
15:47:47  21  	  in_tax_exempt_id  IN VARCHAR2,
15:47:47  22  	  out_invoice_id    OUT NUMBER
15:47:47  23  );
15:47:47  24  
15:47:47  25  PROCEDURE GET_PENDING_INVOICES (
15:47:47  26  /*
15:47:47  27  Throws exceptions:
15:47:47  28  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  29  */
15:47:47  30  	out_result_set	     OUT SYS_REFCURSOR,
15:47:47  31  	in_row_number	     IN NUMBER DEFAULT NULL
15:47:47  32  );
15:47:47  33  
15:47:47  34  PROCEDURE CALCULATE_INVOICE_AMOUNT (
15:47:47  35  /*
15:47:47  36  Throws exceptions:
15:47:47  37  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  38  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  39  */
15:47:47  40  	in_invoice_id IN  NUMBER,
15:47:47  41  	out_amount    OUT NUMBER
15:47:47  42  );
15:47:47  43  
15:47:47  44  FUNCTION F_CALCULATE_INVOICE_AMOUNT(
15:47:47  45  	in_invoice_id IN  NUMBER
15:47:47  46  ) RETURN NUMBER;
15:47:47  47  
15:47:47  48  PROCEDURE GET_ACCOUNT_BY_INVOICE_ID (
15:47:47  49  /*
15:47:47  50  Throws exceptions:
15:47:47  51  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  52  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  53  */
15:47:47  54  	in_invoice_id  IN  NUMBER,
15:47:47  55  	out_account_id OUT NUMBER
15:47:47  56  );
15:47:47  57  
15:47:47  58  PROCEDURE GET_INVOICE_DETAILS (
15:47:47  59  /*
15:47:47  60  Throws exceptions:
15:47:47  61  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  62  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  63  */
15:47:47  64  	in_invoice_id	   IN  NUMBER,
15:47:47  65  	out_group_id	   OUT NUMBER,
15:47:47  66  	out_status_id	   OUT NUMBER,
15:47:47  67  	out_line_items_set OUT SYS_REFCURSOR,
15:47:47  68  	out_pp_charges_set OUT SYS_REFCURSOR,
15:47:47  69  	out_cc_charges_set OUT SYS_REFCURSOR,
15:47:47  70  	out_gc_charges_set OUT SYS_REFCURSOR
15:47:47  71  );
15:47:47  72  -- norlov: #38796
15:47:47  73  PROCEDURE GET_TRANSACTION_INVOICE (
15:47:47  74  /*
15:47:47  75  Throws exceptions:
15:47:47  76  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  77  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  78  */
15:47:47  79  	in_transaction_id  IN  NUMBER,
15:47:47  80  	out_result_set	      OUT SYS_REFCURSOR
15:47:47  81  );
15:47:47  82  
15:47:47  83  PROCEDURE UPDATE_INVOICE_STATUS (
15:47:47  84  /*
15:47:47  85  Throws exceptions:
15:47:47  86  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  87  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  88  */
15:47:47  89  	in_invoice_id		       IN NUMBER,
15:47:47  90  	in_invoice_status_id	       IN NUMBER,
15:47:47  91  	in_updated_by		       IN VARCHAR2
15:47:47  92  );
15:47:47  93  
15:47:47  94  FUNCTION IS_INVOICE_PAYING_STARTED (
15:47:47  95  /*
15:47:47  96  Throws exceptions:
15:47:47  97  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:47  98  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47  99  */
15:47:47 100  	in_invoice_id IN NUMBER
15:47:47 101  ) RETURN NUMBER;
15:47:47 102  
15:47:47 103  PROCEDURE P_IS_INVOICE_PAYING_STARTED (
15:47:47 104  	in_invoice_id  IN NUMBER,
15:47:47 105  	out_is_started OUT NUMBER
15:47:47 106  );
15:47:47 107  
15:47:47 108  PROCEDURE CALCULATE_INVOICE_CHARGEBACK (
15:47:47 109  	in_invoice_id	      IN NUMBER,
15:47:47 110  	in_chargeback_date    IN DATE,
15:47:47 111  	out_chargeback_amount OUT NUMBER
15:47:47 112  );
15:47:47 113  
15:47:47 114  PROCEDURE APPLY_REFUND (
15:47:47 115  	in_invoice_id	     IN NUMBER,
15:47:47 116  	in_chargeback_amount IN NUMBER,
15:47:47 117  	in_created_by	     IN VARCHAR2,
15:47:47 118  	out_charge_id	     OUT NUMBER
15:47:47 119  );
15:47:47 120  
15:47:47 121  PROCEDURE GET_MAX_REFUND (
15:47:47 122  	in_invoice_id IN NUMBER,
15:47:47 123  	out_amount    OUT NUMBER
15:47:47 124  );
15:47:47 125  
15:47:47 126  PROCEDURE GET_INVOICE_DAYS_USED_NUMBER (
15:47:47 127  	in_invoice_id	    IN NUMBER,
15:47:47 128  	in_chargeback_date  IN DATE DEFAULT SYSDATE,
15:47:47 129  	out_days_num	    OUT NUMBER
15:47:47 130  );
15:47:47 131  
15:47:47 132  PROCEDURE GET_INVOICE_LINE_ITEMS (
15:47:47 133  	in_invoice_id  IN NUMBER,
15:47:47 134  	out_result_set OUT SYS_REFCURSOR
15:47:47 135  );
15:47:47 136  
15:47:47 137  PROCEDURE GET_INVOICE_LICENSES (
15:47:47 138  	in_invoice_id  IN NUMBER,
15:47:47 139  	out_result_set OUT SYS_REFCURSOR
15:47:47 140  );
15:47:47 141  
15:47:47 142  PROCEDURE GET_OFFER_CH_ID_BY_INVOICE_ID (
15:47:47 143  	in_invoice_id	   IN NUMBER,
15:47:47 144  	out_offer_chain_id OUT NUMBER
15:47:47 145  );
15:47:47 146  
15:47:47 147  PROCEDURE CLOSE_INVOICE_AS_NOT_COLLECTED (
15:47:47 148  -- Closing invoice without refund
15:47:47 149  	in_invoice_id IN NUMBER,
15:47:47 150  	in_updated_by IN VARCHAR2
15:47:47 151  );
15:47:47 152  
15:47:47 153  PROCEDURE GET_SUBSCR_ID_BY_INVOICE_ID (
15:47:47 154  	in_invoice_id	    IN NUMBER,
15:47:47 155  	out_subscription_id OUT NUMBER
15:47:47 156  );
15:47:47 157  
15:47:47 158  PROCEDURE IS_INVOICE_TAX_EXEMPT (
15:47:47 159  /*
15:47:47 160  Throws exceptions:
15:47:47 161  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:47 162  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:47 163  Return:
15:47:47 164  	GLOBAL_CONSTANTS_V22.TRUE if ACCOUNT.EXEMPT_ID is not null
15:47:47 165  	GLOBAL_CONSTANTS_V22.FALSE else
15:47:47 166  */
15:47:47 167  	in_invoice_id	  IN NUMBER,
15:47:47 168  	out_is_tax_exempt OUT NUMBER
15:47:47 169  );
15:47:47 170  
15:47:47 171  PROCEDURE GET_INVOICE_BY_ID (
15:47:47 172  	in_invoice_id  IN NUMBER,
15:47:47 173  	out_result_set OUT SYS_REFCURSOR
15:47:47 174  );
15:47:47 175  
15:47:47 176  PROCEDURE GET_IS_TAX_CALCULATION_NEEDED (
15:47:47 177  	in_invoice_id		      IN NUMBER,
15:47:47 178  	out_is_tax_calculation_needed OUT NUMBER
15:47:47 179  );
15:47:47 180  
15:47:47 181  PROCEDURE SET_IS_TAX_CALCULATION_NEEDED (
15:47:47 182  	in_invoice_id		     IN NUMBER,
15:47:47 183  	in_updated_by		     IN VARCHAR2,
15:47:47 184  	in_is_tax_calculation_needed IN NUMBER
15:47:47 185  );
15:47:47 186  
15:47:47 187  PROCEDURE REFUND_INVOICE (
15:47:47 188  	in_invoice_id	   IN NUMBER,
15:47:47 189  	in_refund_amount   IN NUMBER,
15:47:47 190  	in_note 	   IN VARCHAR2,
15:47:47 191  	in_created_by	   IN VARCHAR2,
15:47:47 192  	out_charge_id	   OUT NUMBER
15:47:47 193  );
15:47:47 194  
15:47:47 195  PROCEDURE GET_PAYMENT_INFO_BY_INVOICE_ID (
15:47:47 196  	in_invoice_id		    IN NUMBER,
15:47:47 197  	out_order_id		    OUT VARCHAR2,
15:47:47 198  	out_external_transaction_id OUT VARCHAR2
15:47:47 199  );
15:47:47 200  
15:47:47 201  PROCEDURE GET_INVOICE_BY_TRNS_ORDER_ID (
15:47:47 202  	in_order_id  IN TRANSACTION.ORDER_ID%TYPE,
15:47:47 203  	out_result_set OUT SYS_REFCURSOR
15:47:47 204  );
15:47:47 205  
15:47:47 206  PROCEDURE IS_REVOKE_ENTITLEMENTS(
15:47:47 207  	in_invoice_id IN NUMBER,
15:47:47 208  	out_is_revoke OUT NUMBER
15:47:47 209  );
15:47:47 210  
15:47:47 211  END PROCS_INVOICE_V22;
15:47:47 212  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.03
15:47:47 SQL> 
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> -- DDL for package PROCS_INVOICE_CRU
15:47:47 SQL> --------------------------------------------------------------------------------
15:47:47 SQL> 
15:47:47 SQL> CREATE OR REPLACE PACKAGE "PROCS_INVOICE_CRU_V22" AS
15:47:47   2  
15:47:47   3  PROCEDURE CREATE_INVOICE (
15:47:47   4  	out_invoice_id		       OUT INVOICE.ID%TYPE,
15:47:47   5  	in_invoice_id		       IN INVOICE.ID%TYPE DEFAULT NULL,
15:47:47   6  	in_invoice_status_id	       IN INVOICE.INVOICE_STATUS_ID%TYPE,
15:47:47   7  	in_tax_exempt_id	       IN INVOICE.TAX_EXEMPT_ID%TYPE,
15:47:47   8  	in_created_by		       IN INVOICE.CREATED_BY%TYPE
15:47:47   9  );
15:47:47  10  
15:47:47  11  PROCEDURE UPDATE_INVOICE (
15:47:47  12  	in_invoice_id		       IN INVOICE.ID%TYPE,
15:47:47  13  	in_updated_by		       IN INVOICE.UPDATED_BY%TYPE,
15:47:47  14  	in_invoice_status_id	       IN INVOICE.INVOICE_STATUS_ID%TYPE DEFAULT NULL,
15:47:47  15  	in_is_tax_calculation_needed   IN INVOICE.IS_TAX_CALCULATION_NEEDED%TYPE DEFAULT NULL
15:47:47  16  );
15:47:47  17  
15:47:47  18  END PROCS_INVOICE_CRU_V22;
15:47:47  19  .
15:47:47 SQL> /

Package created.

Elapsed: 00:00:00.04
15:47:48 SQL> 
15:47:48 SQL> /*
15:47:48 SQL> CREATE TABLE ITUNES_RECEIPT (
15:47:48 SQL> 	id NUMBER NOT NULL ENABLE,
15:47:48 SQL> 	subscription_id NUMBER NOT NULL ENABLE,
15:47:48 SQL> 	receipt VARCHAR(1024) NOT NULL ENABLE,
15:47:48 SQL> 	status NUMBER,
15:47:48 SQL> 	quantity NUMBER,
15:47:48 SQL> 	product_id VARCHAR(1024),
15:47:48 SQL> 	transaction_id VARCHAR(1024),
15:47:48 SQL> 	purchase_date TIMESTAMP,
15:47:48 SQL> 	original_transaction_id VARCHAR(1024),
15:47:48 SQL> 	original_purchase_date TIMESTAMP,
15:47:48 SQL> 	app_item_id VARCHAR(1024),
15:47:48 SQL> 	version_external_id NUMBER,
15:47:48 SQL> 	bid VARCHAR(1024),
15:47:48 SQL> 	bvrs VARCHAR(255),
15:47:48 SQL> 	expires_date TIMESTAMP,
15:47:48 SQL> 	create_date DATE NOT NULL,
15:47:48 SQL> 	created_by VARCHAR(255) NOT NULL,
15:47:48 SQL> 	update_date DATE NOT NULL,
15:47:48 SQL> 	updated_by VARCHAR(255) NOT NULL,
15:47:48 SQL> 	last_check_date DATE NOT NULL,
15:47:48 SQL> 	CONSTRAINT "ITUNESRECEIPT_PK" PRIMARY KEY ("ID") USING INDEX TABLESPACE "CORE_IDX" ENABLE,
15:47:48 SQL> 	CONSTRAINT "ITUNESRECEIPT_SUBID_FK" FOREIGN KEY ("SUBSCRIPTION_ID") REFERENCES SUBSCRIPTION(ID) USING INDEX TABLESPACE "CORE_IDX" ENABLE,
15:47:48 SQL> 	CONSTRAINT "ITUNESRECEIPT_RECEIPT_UK" UNIQUE(receipt) USING INDEX TABLESPACE "CORE_IDX" ENABLE,
15:47:48 SQL> 	CONSTRAINT "ITUNESRECEIPT_SUBID_UK" UNIQUE(subscription_id) USING INDEX TABLESPACE "CORE_IDX" ENABLE
15:47:48 SQL> )
15:47:48 SQL> TABLESPACE CORE;
15:47:48 SQL> */
15:47:48 SQL> 
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_ITUNES_RECEIPT_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE ITUNES_RECEIPT_SUBSCRIPTION(
15:47:48   4  	      /*
15:47:48   5  	      Throws exceptions:
15:47:48   6  	      APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48   7  	      */
15:47:48   8  	      in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
15:47:48   9  	      out_result_set	  OUT SYS_REFCURSOR
15:47:48  10  );
15:47:48  11  
15:47:48  12  PROCEDURE CREATE_RECEIPT(
15:47:48  13  /*
15:47:48  14  Throws exceptions:
15:47:48  15  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  16  */
15:47:48  17  	  out_id	      OUT NUMBER,
15:47:48  18  	  in_subscription_id  IN ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:48  19  	  in_receipt	      IN ITUNES_RECEIPT.RECEIPT%TYPE,
15:47:48  20  	  in_status	      IN ITUNES_RECEIPT.STATUS%TYPE,
15:47:48  21  	  in_quantity	      IN ITUNES_RECEIPT.QUANTITY%TYPE,
15:47:48  22  	  in_product_id       IN ITUNES_RECEIPT.PRODUCT_ID%TYPE,
15:47:48  23  	  in_transaction_id   IN ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
15:47:48  24  	  in_purchase_date    IN ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
15:47:48  25  	  in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
15:47:48  26  	  in_original_purchase_date IN ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
15:47:48  27  	  in_app_item_id      IN ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
15:47:48  28  	  in_version_external_id IN ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
15:47:48  29  	  in_bid	      IN ITUNES_RECEIPT.BID%TYPE,
15:47:48  30  	  in_bvrs	      IN ITUNES_RECEIPT.BVRS%TYPE,
15:47:48  31  	  in_expires_date     IN ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
15:47:48  32  	  in_created_by       IN ITUNES_RECEIPT.CREATED_BY%TYPE
15:47:48  33  );
15:47:48  34  
15:47:48  35  PROCEDURE UPDATE_RECEIPT(
15:47:48  36  /*
15:47:48  37  Throws exceptions:
15:47:48  38  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  39  */
15:47:48  40  	  in_id 	      IN ITUNES_RECEIPT.ID%TYPE,
15:47:48  41  	  in_receipt	      IN ITUNES_RECEIPT.RECEIPT%TYPE,
15:47:48  42  	  in_status	      IN ITUNES_RECEIPT.STATUS%TYPE,
15:47:48  43  	  in_quantity	      IN ITUNES_RECEIPT.QUANTITY%TYPE,
15:47:48  44  	  in_product_id       IN ITUNES_RECEIPT.PRODUCT_ID%TYPE,
15:47:48  45  	  in_transaction_id   IN ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
15:47:48  46  	  in_purchase_date    IN ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
15:47:48  47  	  in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
15:47:48  48  	  in_original_purchase_date IN ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
15:47:48  49  	  in_app_item_id      IN ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
15:47:48  50  	  in_version_external_id IN ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
15:47:48  51  	  in_bid	      IN ITUNES_RECEIPT.BID%TYPE,
15:47:48  52  	  in_bvrs	      IN ITUNES_RECEIPT.BVRS%TYPE,
15:47:48  53  	  in_expires_date     IN ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
15:47:48  54  	  in_updated_by       IN ITUNES_RECEIPT.UPDATED_BY%TYPE,
15:47:48  55  	  in_is_expired       IN NUMBER
15:47:48  56  );
15:47:48  57  
15:47:48  58  PROCEDURE LINK_ITUNES_RECEIPT(
15:47:48  59  /*
15:47:48  60  Throws exceptions:
15:47:48  61  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  62  */
15:47:48  63  	  in_id 	      IN ITUNES_RECEIPT.ID%TYPE,
15:47:48  64  	  in_subscription_id  IN ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:48  65  	  in_updated_by       IN ITUNES_RECEIPT.UPDATED_BY%TYPE
15:47:48  66  );
15:47:48  67  
15:47:48  68  PROCEDURE MARK_RECEIPT_CHECKED(
15:47:48  69  /*
15:47:48  70  Throws exceptions:
15:47:48  71  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  72  */
15:47:48  73  	  in_id       IN ITUNES_RECEIPT.ID%TYPE
15:47:48  74  );
15:47:48  75  
15:47:48  76  PROCEDURE GET_ITUNES_RECEIPTS (
15:47:48  77  /*
15:47:48  78  Throws exceptions:
15:47:48  79  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  80  */
15:47:48  81  	out_result_set	    OUT SYS_REFCURSOR,
15:47:48  82  	in_row_number	    IN NUMBER DEFAULT 500
15:47:48  83  );
15:47:48  84  
15:47:48  85  PROCEDURE GET_VENDOR_FROM_ITUNES_PID(
15:47:48  86  /*
15:47:48  87  Throws exceptions:
15:47:48  88  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  89  */
15:47:48  90  	  out_vendor_source_id OUT OFFER_CHAIN.VENDOR_SOURCE_ID%TYPE,
15:47:48  91  	  in_itunes_pid        IN ITUNES_RECEIPT.PRODUCT_ID%TYPE
15:47:48  92  );
15:47:48  93  
15:47:48  94  END PROCS_ITUNES_RECEIPT_V22;
15:47:48  95  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:48 SQL> 
15:47:48 SQL> /*
15:47:48 SQL> CREATE TABLE ITUNES_RECEIPT (
15:47:48 SQL> 	id NUMBER NOT NULL ENABLE,
15:47:48 SQL> 	subscription_id NUMBER NOT NULL ENABLE,
15:47:48 SQL> 	receipt VARCHAR(1024) NOT NULL ENABLE,
15:47:48 SQL> 	status NUMBER,
15:47:48 SQL> 	quantity NUMBER,
15:47:48 SQL> 	product_id VARCHAR(1024),
15:47:48 SQL> 	transaction_id VARCHAR(1024),
15:47:48 SQL> 	purchase_date TIMESTAMP,
15:47:48 SQL> 	original_transaction_id VARCHAR(1024),
15:47:48 SQL> 	original_purchase_date TIMESTAMP,
15:47:48 SQL> 	app_item_id VARCHAR(1024),
15:47:48 SQL> 	version_external_id NUMBER,
15:47:48 SQL> 	bid VARCHAR(1024),
15:47:48 SQL> 	bvrs VARCHAR(255),
15:47:48 SQL> 	expires_date TIMESTAMP,
15:47:48 SQL> 	create_date DATE NOT NULL,
15:47:48 SQL> 	created_by VARCHAR(255) NOT NULL,
15:47:48 SQL> 	update_date DATE NOT NULL,
15:47:48 SQL> 	updated_by VARCHAR(255) NOT NULL,
15:47:48 SQL> 	last_check_date DATE NOT NULL,
15:47:48 SQL> 	CONSTRAINT "ITUNESRECEIPT_PK" PRIMARY KEY ("ID") USING INDEX TABLESPACE "CORE_IDX" ENABLE,
15:47:48 SQL> 	CONSTRAINT "ITUNESRECEIPT_SUBID_FK" FOREIGN KEY ("SUBSCRIPTION_ID") REFERENCES SUBSCRIPTION(ID) USING INDEX TABLESPACE "CORE_IDX" ENABLE,
15:47:48 SQL> 	CONSTRAINT "ITUNESRECEIPT_RECEIPT_UK" UNIQUE(receipt) USING INDEX TABLESPACE "CORE_IDX" ENABLE,
15:47:48 SQL> 	CONSTRAINT "ITUNESRECEIPT_SUBID_UK" UNIQUE(subscription_id) USING INDEX TABLESPACE "CORE_IDX" ENABLE
15:47:48 SQL> )
15:47:48 SQL> TABLESPACE CORE;
15:47:48 SQL> */
15:47:48 SQL> 
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_ITUNES_RECEIPT_CRU_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_RECEIPT(
15:47:48   4  /*
15:47:48   5  Throws exceptions:
15:47:48   6  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48   7  */
15:47:48   8  	  out_id	      OUT NUMBER,
15:47:48   9  	  in_subscription_id  IN CORE_OWNER.ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:48  10  	  in_receipt	      IN CORE_OWNER.ITUNES_RECEIPT.RECEIPT%TYPE,
15:47:48  11  	  in_status	      IN CORE_OWNER.ITUNES_RECEIPT.STATUS%TYPE,
15:47:48  12  	  in_quantity	      IN CORE_OWNER.ITUNES_RECEIPT.QUANTITY%TYPE,
15:47:48  13  	  in_product_id       IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
15:47:48  14  	  in_transaction_id   IN CORE_OWNER.ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
15:47:48  15  	  in_purchase_date    IN CORE_OWNER.ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
15:47:48  16  	  in_original_transaction_id IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
15:47:48  17  	  in_original_purchase_date IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
15:47:48  18  	  in_app_item_id      IN CORE_OWNER.ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
15:47:48  19  	  in_version_external_id IN CORE_OWNER.ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
15:47:48  20  	  in_bid	      IN CORE_OWNER.ITUNES_RECEIPT.BID%TYPE,
15:47:48  21  	  in_bvrs	      IN CORE_OWNER.ITUNES_RECEIPT.BVRS%TYPE,
15:47:48  22  	  in_expires_date     IN CORE_OWNER.ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
15:47:48  23  	  in_created_by       IN CORE_OWNER.ITUNES_RECEIPT.CREATED_BY%TYPE
15:47:48  24  );
15:47:48  25  
15:47:48  26  PROCEDURE UPDATE_RECEIPT(
15:47:48  27  /*
15:47:48  28  Throws exceptions:
15:47:48  29  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  30  */
15:47:48  31  	  in_id 	      IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE,
15:47:48  32  	  in_receipt	      IN CORE_OWNER.ITUNES_RECEIPT.RECEIPT%TYPE,
15:47:48  33  	  in_status	      IN CORE_OWNER.ITUNES_RECEIPT.STATUS%TYPE,
15:47:48  34  	  in_quantity	      IN CORE_OWNER.ITUNES_RECEIPT.QUANTITY%TYPE,
15:47:48  35  	  in_product_id       IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
15:47:48  36  	  in_transaction_id   IN CORE_OWNER.ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
15:47:48  37  	  in_purchase_date    IN CORE_OWNER.ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
15:47:48  38  	  in_original_transaction_id IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
15:47:48  39  	  in_original_purchase_date IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
15:47:48  40  	  in_app_item_id      IN CORE_OWNER.ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
15:47:48  41  	  in_version_external_id IN CORE_OWNER.ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
15:47:48  42  	  in_bid	      IN CORE_OWNER.ITUNES_RECEIPT.BID%TYPE,
15:47:48  43  	  in_bvrs	      IN CORE_OWNER.ITUNES_RECEIPT.BVRS%TYPE,
15:47:48  44  	  in_expires_date     IN CORE_OWNER.ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
15:47:48  45  	  in_updated_by       IN CORE_OWNER.ITUNES_RECEIPT.UPDATED_BY%TYPE,
15:47:48  46  	  in_cancel_date      IN CORE_OWNER.ITUNES_RECEIPT.CANCEL_DATE%TYPE
15:47:48  47  );
15:47:48  48  
15:47:48  49  PROCEDURE LINK_ITUNES_RECEIPT(
15:47:48  50  /*
15:47:48  51  Throws exceptions:
15:47:48  52  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  53  */
15:47:48  54  	  in_id 	      IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE,
15:47:48  55  	  in_subscription_id  IN CORE_OWNER.ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:48  56  	  in_updated_by       IN CORE_OWNER.ITUNES_RECEIPT.UPDATED_BY%TYPE
15:47:48  57  );
15:47:48  58  
15:47:48  59  PROCEDURE MARK_RECEIPT_CHECKED(
15:47:48  60  /*
15:47:48  61  Throws exceptions:
15:47:48  62  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  63  */
15:47:48  64  	  in_id 	      IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE
15:47:48  65  );
15:47:48  66  
15:47:48  67  END PROCS_ITUNES_RECEIPT_CRU_V22;
15:47:48  68  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_LICENSE
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_LICENSE_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_LICENSE(
15:47:48   4  /*
15:47:48   5  Throws exceptions:
15:47:48   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48   8  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48   9  */
15:47:48  10  	in_status_id		    IN NUMBER,
15:47:48  11  	in_needs_entitlements	    IN NUMBER,
15:47:48  12  	in_start_date		    IN DATE,
15:47:48  13  	in_end_date		    IN DATE,
15:47:48  14  	in_offer_id		    IN NUMBER,
15:47:48  15  	in_subscription_id	    IN NUMBER,
15:47:48  16  	in_invoice_id		    IN NUMBER,
15:47:48  17  	in_created_by		    IN VARCHAR2,
15:47:48  18  	in_is_extension 	    IN NUMBER,
15:47:48  19  	in_current_offer_index	    IN NUMBER,
15:47:48  20  	in_current_offer_recurr_num IN NUMBER,
15:47:48  21  	out_license_id		    OUT NUMBER
15:47:48  22  );
15:47:48  23  
15:47:48  24  /*********************************************/
15:47:48  25  
15:47:48  26  PROCEDURE UPDATE_LICENSE_STATUS(
15:47:48  27  /*
15:47:48  28  Throws exceptions:
15:47:48  29  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  30  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  31  */
15:47:48  32  	  in_license_id     IN NUMBER,
15:47:48  33  	  in_license_status IN NUMBER,
15:47:48  34  	  in_updated_by     IN VARCHAR2,
15:47:48  35  	  in_ent_end	    IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE
15:47:48  36  );
15:47:48  37  
15:47:48  38  /*********************************************/
15:47:48  39  
15:47:48  40  PROCEDURE GET_ENDING_LICENSES (
15:47:48  41  	in_hours_number IN NUMBER,
15:47:48  42  	out_result_set OUT SYS_REFCURSOR
15:47:48  43  );
15:47:48  44  
15:47:48  45  /*********************************************/
15:47:48  46  
15:47:48  47  PROCEDURE GET_ENDING_LICENSES_CC (
15:47:48  48  	in_hours_number IN NUMBER,
15:47:48  49  	out_result_set OUT SYS_REFCURSOR,
15:47:48  50  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:48  51  );
15:47:48  52  
15:47:48  53  /**********************************************/
15:47:48  54  
15:47:48  55  PROCEDURE GET_RECURRING_OFFER (
15:47:48  56  	in_license_id  IN NUMBER,
15:47:48  57  	out_result_set OUT SYS_REFCURSOR
15:47:48  58  );
15:47:48  59  
15:47:48  60  /**********************************************/
15:47:48  61  
15:47:48  62  PROCEDURE GET_NEXT_OFFER (
15:47:48  63  	in_license_id  IN NUMBER,
15:47:48  64  	out_result_set OUT SYS_REFCURSOR
15:47:48  65  );
15:47:48  66  
15:47:48  67  /**********************************************/
15:47:48  68  
15:47:48  69  PROCEDURE GET_GROUP_ID_BY_LICENSE_ID (
15:47:48  70  	in_license_id IN NUMBER,
15:47:48  71  	out_group_id  OUT NUMBER
15:47:48  72  );
15:47:48  73  
15:47:48  74  /**************************************************/
15:47:48  75  
15:47:48  76  PROCEDURE GET_NEED_ENTITLEMENTS_LICENSES (
15:47:48  77  	out_result_set OUT SYS_REFCURSOR
15:47:48  78  );
15:47:48  79  
15:47:48  80  /**************************************************/
15:47:48  81  
15:47:48  82  PROCEDURE UPDATE_NEED_ENTITLEMENTS_FLAG (
15:47:48  83  	in_license_id	      IN NUMBER,
15:47:48  84  	in_needs_entitlements IN NUMBER,
15:47:48  85  	in_updated_by	      IN VARCHAR2
15:47:48  86  );
15:47:48  87  
15:47:48  88  PROCEDURE GET_ENDED_GC_LICENSES (
15:47:48  89  	out_result_set		OUT SYS_REFCURSOR,
15:47:48  90  	in_hours_number 	IN NUMBER DEFAULT 14*24,
15:47:48  91  	in_num_rows		IN NUMBER DEFAULT 10000,
15:47:48  92  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:48  93  );
15:47:48  94  
15:47:48  95  PROCEDURE GET_LICENSE_BY_ID (
15:47:48  96  
15:47:48  97  	in_license_id  IN NUMBER,
15:47:48  98  
15:47:48  99  	out_result_set OUT SYS_REFCURSOR
15:47:48 100  
15:47:48 101  );
15:47:48 102  PROCEDURE UP_LATEST_LICE_END_BY_SUBID (
15:47:48 103  	in_subscription_id IN NUMBER,
15:47:48 104  	in_end_date IN DATE,
15:47:48 105  	in_updated_by IN VARCHAR2
15:47:48 106  );
15:47:48 107  
15:47:48 108  PROCEDURE GET_GRACE_LICE_FOR_FINAL_TRANS (
15:47:48 109  	in_days_before_close	 IN NUMBER,
15:47:48 110  	in_num_licenses_to_fetch IN NUMBER,
15:47:48 111  	out_result_set		 OUT SYS_REFCURSOR
15:47:48 112  );
15:47:48 113  
15:47:48 114  END PROCS_LICENSE_V22;
15:47:48 115  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.04
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_LICENSE_CRU
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_LICENSE_CRU_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_LICENSE(
15:47:48   4  	out_license_id		    OUT LICENSE.ID%TYPE,
15:47:48   5  	in_license_id		    IN LICENSE.ID%TYPE DEFAULT NULL,
15:47:48   6  	in_license_status_id	    IN LICENSE.LICENSE_STATUS_ID%TYPE,
15:47:48   7  	in_needs_entitlements	    IN LICENSE.NEEDS_ENTITLEMENTS%TYPE,
15:47:48   8  	in_start_date		    IN LICENSE.START_DATE%TYPE,
15:47:48   9  	in_offer_id		    IN LICENSE.OFFER_ID%TYPE,
15:47:48  10  	in_subscription_id	    IN LICENSE.SUBSCRIPTION_ID%TYPE,
15:47:48  11  	in_invoice_id		    IN LICENSE.INVOICE_ID%TYPE,
15:47:48  12  	in_end_date		    IN LICENSE.END_DATE%TYPE,
15:47:48  13  	in_created_by		    IN LICENSE.CREATED_BY%TYPE,
15:47:48  14  	in_is_extension 	    IN LICENSE.IS_EXTENSION%TYPE,
15:47:48  15  	in_current_offer_index	    IN LICENSE.CURRENT_OFFER_INDEX%TYPE,
15:47:48  16  	in_current_offer_recurr_num IN LICENSE.CURRENT_OFFER_RECURR_NUM%TYPE
15:47:48  17  );
15:47:48  18  
15:47:48  19  PROCEDURE UPDATE_LICENSE (
15:47:48  20  	in_license_id		    IN LICENSE.ID%TYPE,
15:47:48  21  	in_license_status_id	    IN LICENSE.LICENSE_STATUS_ID%TYPE DEFAULT NULL,
15:47:48  22  	in_needs_entitlements	    IN LICENSE.NEEDS_ENTITLEMENTS%TYPE DEFAULT NULL,
15:47:48  23  	in_start_date		    IN LICENSE.START_DATE%TYPE DEFAULT NULL,
15:47:48  24  	in_end_date		    IN LICENSE.END_DATE%TYPE DEFAULT NULL,
15:47:48  25  	in_updated_by		    IN LICENSE.CREATED_BY%TYPE,
15:47:48  26  	in_is_extension 	    IN LICENSE.IS_EXTENSION%TYPE DEFAULT NULL,
15:47:48  27  	in_current_offer_index	    IN LICENSE.CURRENT_OFFER_INDEX%TYPE DEFAULT NULL,
15:47:48  28  	in_current_offer_recurr_num IN LICENSE.CURRENT_OFFER_RECURR_NUM%TYPE DEFAULT NULL,
15:47:48  29  	in_entitlement_end_date     IN LICENSE.ENTITLEMENT_END_DATE%TYPE DEFAULT NULL,
15:47:48  30  	in_grace_start_date	    IN LICENSE.GRACE_START_DATE%TYPE DEFAULT NULL,
15:47:48  31  	in_grace_end_date	    IN LICENSE.GRACE_END_DATE%TYPE DEFAULT NULL
15:47:48  32  );
15:47:48  33  
15:47:48  34  END PROCS_LICENSE_CRU_V22;
15:47:48  35  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_LINE_ITEMS
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_LINE_ITEMS_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE ADD_LINE_ITEMS(
15:47:48   4  /*
15:47:48   5  Throws exceptions:
15:47:48   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48   8  */
15:47:48   9  	in_invoice_id IN NUMBER,
15:47:48  10  	in_offer_id   IN NUMBER,
15:47:48  11  	in_created_by IN VARCHAR2
15:47:48  12  );
15:47:48  13  
15:47:48  14  /****************************************************/
15:47:48  15  
15:47:48  16  PROCEDURE UPDATE_LINE_ITEM_AMOUNT (
15:47:48  17  	in_line_item_id    IN NUMBER,
15:47:48  18  	in_amount	   IN NUMBER,
15:47:48  19  	in_discount_amount IN NUMBER,
15:47:48  20  	in_taxes_amount    IN NUMBER
15:47:48  21  );
15:47:48  22  
15:47:48  23  /****************************************************/
15:47:48  24  
15:47:48  25  PROCEDURE GET_INVOICE_LINE_ITEMS (
15:47:48  26  /*
15:47:48  27  Throws exceptions:
15:47:48  28  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  29  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  30  */
15:47:48  31  	in_invoice_id  IN NUMBER,
15:47:48  32  	out_result_set OUT SYS_REFCURSOR
15:47:48  33  );
15:47:48  34  
15:47:48  35  /****************************************************/
15:47:48  36  
15:47:48  37  PROCEDURE GET_LINE_ITEM_TAXES (
15:47:48  38  /*
15:47:48  39  Throws exceptions:
15:47:48  40  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  41  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  42  */
15:47:48  43  	in_line_item_id IN  NUMBER,
15:47:48  44  	out_result_set	OUT SYS_REFCURSOR
15:47:48  45  );
15:47:48  46  /****************************************************/
15:47:48  47  
15:47:48  48  PROCEDURE GET_LINE_ITEM_DISCOUNTS (
15:47:48  49  /*
15:47:48  50  Throws exceptions:
15:47:48  51  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  52  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  53  */
15:47:48  54  	in_line_item_id IN  NUMBER,
15:47:48  55  	out_result_set	OUT SYS_REFCURSOR
15:47:48  56  );
15:47:48  57  
15:47:48  58  /****************************************************/
15:47:48  59  
15:47:48  60  PROCEDURE CALCULATE_LINE_ITEM_AMOUNT (
15:47:48  61  /*
15:47:48  62  Throws exceptions:
15:47:48  63  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  64  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  65  */
15:47:48  66  	in_line_item_id     IN	NUMBER,
15:47:48  67  	out_amount	    OUT NUMBER
15:47:48  68  );
15:47:48  69  
15:47:48  70  /****************************************************/
15:47:48  71  
15:47:48  72  FUNCTION F_CALCULATE_LINE_ITEM_AMOUNT (
15:47:48  73  /*
15:47:48  74  Throws exceptions:
15:47:48  75  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  76  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  77  */
15:47:48  78  	in_line_item_id     IN	NUMBER
15:47:48  79  ) RETURN NUMBER;
15:47:48  80  
15:47:48  81  END PROCS_LINE_ITEMS_V22;
15:47:48  82  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.03
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_LINE_ITEMS_CRU
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_LINE_ITEMS_CRU_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_LINE_ITEM (
15:47:48   4  	inout_line_item_id  IN OUT LINE_ITEM.ID%TYPE,
15:47:48   5  	in_product_offer_id IN LINE_ITEM.PRODUCT_OFFER_ID%TYPE,
15:47:48   6  	in_invoice_id	    IN LINE_ITEM.INVOICE_ID%TYPE,
15:47:48   7  	in_amount	    IN LINE_ITEM.AMOUNT%TYPE,
15:47:48   8  	in_created_by	    IN LINE_ITEM.CREATED_BY%TYPE,
15:47:48   9  	in_discount_amount  IN LINE_ITEM.DISCOUNT_AMOUNT%TYPE,
15:47:48  10  	in_taxes_amount     IN LINE_ITEM.TAXES_AMOUNT%TYPE
15:47:48  11  );
15:47:48  12  
15:47:48  13  PROCEDURE UPDATE_LINE_ITEM (
15:47:48  14  	in_line_item_id     IN LINE_ITEM.ID%TYPE,
15:47:48  15  	in_amount	    IN LINE_ITEM.AMOUNT%TYPE DEFAULT NULL,
15:47:48  16  	in_discount_amount  IN LINE_ITEM.DISCOUNT_AMOUNT%TYPE  DEFAULT NULL,
15:47:48  17  	in_taxes_amount     IN LINE_ITEM.TAXES_AMOUNT%TYPE DEFAULT NULL
15:47:48  18  );
15:47:48  19  
15:47:48  20  PROCEDURE CREATE_DISCOUNT_LINE_ITEM (
15:47:48  21  	in_discount_id	IN DISCOUNT.ID%TYPE,
15:47:48  22  	in_line_item_id IN LINE_ITEM.ID%TYPE
15:47:48  23  );
15:47:48  24  
15:47:48  25  END PROCS_LINE_ITEMS_CRU_V22;
15:47:48  26  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_LOCKING
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_LOCKING_V22" AS
15:47:48   2  
15:47:48   3  /*
15:47:48   4  Removed by Sergey
15:47:48   5  10.12.2010
15:47:48   6  PROCEDURE INITIALIZE_SYSTEM;
15:47:48   7  
15:47:48   8  PROCEDURE INITIALIZE_ACCOUNT (
15:47:48   9  	in_account_id IN NUMBER
15:47:48  10  );
15:47:48  11  
15:47:48  12  PROCEDURE INITIALIZE_GROUP (
15:47:48  13  	in_group_id IN NUMBER
15:47:48  14  );
15:47:48  15  */
15:47:48  16  
15:47:48  17  PROCEDURE LOCK_ACCOUNT (
15:47:48  18  	in_group_id    IN NUMBER,
15:47:48  19  	in_lock_key    IN VARCHAR2,
15:47:48  20  	in_seconds_num IN NUMBER,
15:47:48  21  	in_created_by  IN VARCHAR2,
15:47:48  22  	in_reason      IN VARCHAR2
15:47:48  23  );
15:47:48  24  
15:47:48  25  PROCEDURE RELEASE_LOCK (
15:47:48  26  	in_group_id IN NUMBER,
15:47:48  27  	in_lock_key IN VARCHAR2
15:47:48  28  );
15:47:48  29  
15:47:48  30  END PROCS_LOCKING_V22;
15:47:48  31  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.03
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_NOTIFICATION
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_NOTIFICATION_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
15:47:48   4  /*
15:47:48   5  Throws exceptions:
15:47:48   6  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48   7  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48   8  */
15:47:48   9  	in_notification_type_name IN VARCHAR2,
15:47:48  10  	out_notification_type_id  OUT NUMBER
15:47:48  11  );
15:47:48  12  
15:47:48  13  PROCEDURE ADD_NOTIFICATION (
15:47:48  14  /*
15:47:48  15  Throws exceptions:
15:47:48  16  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  17  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  18  */
15:47:48  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
15:47:48  20  	in_recipient_group_id	 IN NUMBER,
15:47:48  21  	in_notification_type_id  IN NUMBER,
15:47:48  22  	in_date_to_notify	 IN DATE,
15:47:48  23  	in_email_template_params IN CLOB
15:47:48  24  );
15:47:48  25  
15:47:48  26  PROCEDURE GET_PENDING_NOTIFICATIONS (
15:47:48  27  /*
15:47:48  28  Throws exceptions:
15:47:48  29  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  30  */
15:47:48  31  	out_result_set OUT SYS_REFCURSOR
15:47:48  32  );
15:47:48  33  
15:47:48  34  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
15:47:48  35  /*
15:47:48  36  Throws exceptions:
15:47:48  37  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  38  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  39  */
15:47:48  40  	in_notification_id IN NUMBER
15:47:48  41  );
15:47:48  42  
15:47:48  43  PROCEDURE SET_NOTIFICATION_STATUS (
15:47:48  44  /*
15:47:48  45  Throws exceptions:
15:47:48  46  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  47  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  48  */
15:47:48  49  	in_notification_id	  IN NUMBER,
15:47:48  50  	in_notification_status_id IN NUMBER,
15:47:48  51  	in_error_message	  IN VARCHAR2
15:47:48  52  );
15:47:48  53  
15:47:48  54  PROCEDURE ADD_NOTIFICATION_FAILURE (
15:47:48  55  /*
15:47:48  56  Throws exceptions:
15:47:48  57  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  58  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  59  */
15:47:48  60  	in_notification_id IN NUMBER,
15:47:48  61  	in_error_message   IN VARCHAR2
15:47:48  62  );
15:47:48  63  
15:47:48  64  PROCEDURE LOCK_PENDING_NOTIFICATION (
15:47:48  65  /*
15:47:48  66  Result: 1 if notification locked
15:47:48  67  2 - else
15:47:48  68  */
15:47:48  69  	in_notification_id IN NUMBER,
15:47:48  70  	out_lock_status    OUT NUMBER
15:47:48  71  );
15:47:48  72  
15:47:48  73  PROCEDURE GET_NOTIFICATION_DATA (
15:47:48  74  	in_notification_id IN NUMBER,
15:47:48  75  	out_result_set	   OUT SYS_REFCURSOR
15:47:48  76  );
15:47:48  77  
15:47:48  78  END PROCS_NOTIFICATION_V22;
15:47:48  79  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_OFFER_CHAIN_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE OC_ID_BY_ITUNES_PRODUCT_ID(
15:47:48   4  	in_itunes_product_id IN  OFFER_CHAIN.ITUNES_PRODUCT_ID%TYPE,
15:47:48   5  	out_data	     OUT OFFER_CHAIN.ID%TYPE
15:47:48   6  );
15:47:48   7  
15:47:48   8  PROCEDURE OFFER_CHAIN_ID_BY_AMAZON_SKU(
15:47:48   9  	in_amazon_appstore_sku IN  OFFER_CHAIN.AMAZON_APPSTORE_SKU%TYPE,
15:47:48  10  	out_data	       OUT OFFER_CHAIN.ID%TYPE
15:47:48  11  );
15:47:48  12  
15:47:48  13  PROCEDURE GET_OFFER_CHAIN_BY_ID (
15:47:48  14  	  in_offer_chain_id IN	 NUMBER,
15:47:48  15  	  out_result_set    OUT  SYS_REFCURSOR
15:47:48  16  );
15:47:48  17  
15:47:48  18  PROCEDURE GET_OFFER_CHAINS_BY_IDS (
15:47:48  19  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
15:47:48  20  	out_result_set	   OUT SYS_REFCURSOR
15:47:48  21  );
15:47:48  22  
15:47:48  23  PROCEDURE GET_OFFER_CHAINS_PRODUCTS (
15:47:48  24  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
15:47:48  25  	out_result_set	   OUT SYS_REFCURSOR
15:47:48  26  );
15:47:48  27  
15:47:48  28  PROCEDURE GET_OFFER_CHAINS_OFFERS (
15:47:48  29  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
15:47:48  30  	out_result_set	   OUT SYS_REFCURSOR
15:47:48  31  );
15:47:48  32  
15:47:48  33  PROCEDURE GET_OFFER_CHAINS_BY_PRODUCT (
15:47:48  34  	in_product_id  IN  NUMBER,
15:47:48  35  	out_result_set OUT SYS_REFCURSOR
15:47:48  36  );
15:47:48  37  
15:47:48  38  PROCEDURE GET_OFFER_CHAIN_PRICE (
15:47:48  39  	in_offer_chain_id IN NUMBER,
15:47:48  40  	out_price	  OUT NUMBER
15:47:48  41  );
15:47:48  42  
15:47:48  43  PROCEDURE GET_FIRST_OFFER(
15:47:48  44  	in_offer_chain_id IN  NUMBER,
15:47:48  45  	out_offer_id	  OUT NUMBER
15:47:48  46  );
15:47:48  47  
15:47:48  48  PROCEDURE GET_ACTIVE_OFFER_CHAINS (
15:47:48  49  	out_result_set OUT SYS_REFCURSOR
15:47:48  50  );
15:47:48  51  
15:47:48  52  PROCEDURE GET_OFFER_CHAIN_PRODUCTS (
15:47:48  53  	in_offer_chain_id IN NUMBER,
15:47:48  54  	out_result_set	  OUT SYS_REFCURSOR
15:47:48  55  );
15:47:48  56  
15:47:48  57  FUNCTION CALCULATE_OFFER_CHAIN_END_DATE (
15:47:48  58  	in_offer_chain_id	  IN NUMBER,
15:47:48  59  	in_offer_chain_start_date IN DATE
15:47:48  60  ) RETURN DATE;
15:47:48  61  
15:47:48  62  FUNCTION CALCULATE_OFFER_AMOUNT (
15:47:48  63  	in_offer_id IN NUMBER
15:47:48  64  ) RETURN NUMBER;
15:47:48  65  
15:47:48  66  FUNCTION CALCULATE_OFFER_CHAIN_AMOUNT (
15:47:48  67  	in_offer_chain_id IN NUMBER
15:47:48  68  ) RETURN NUMBER;
15:47:48  69  
15:47:48  70  FUNCTION GET_FIRST_OFFER_INDEX (
15:47:48  71  	in_offer_chain_id IN NUMBER
15:47:48  72  ) RETURN NUMBER;
15:47:48  73  
15:47:48  74  FUNCTION GET_NEXT_OFFER_INDEX (
15:47:48  75  	in_offer_chain_id	     IN NUMBER,
15:47:48  76  	in_offer_chain_current_index IN NUMBER
15:47:48  77  ) RETURN NUMBER;
15:47:48  78  
15:47:48  79  PROCEDURE P_GET_NEXT_OFFER_INDEX (
15:47:48  80  	in_offer_chain_id	     IN NUMBER,
15:47:48  81  	in_offer_chain_current_index IN NUMBER,
15:47:48  82  	out_next_offer_index	     OUT NUMBER
15:47:48  83  );
15:47:48  84  
15:47:48  85  PROCEDURE GET_NEXT_OFFER_INDEX_BY_LCNS (
15:47:48  86  	in_license_id		     IN NUMBER,
15:47:48  87  	in_offer_chain_current_index IN NUMBER,
15:47:48  88  	out_next_offer_index	     OUT NUMBER
15:47:48  89  );
15:47:48  90  
15:47:48  91  FUNCTION IS_OFFER_INDEX_EXISTS (
15:47:48  92  	in_offer_chain_id	   IN NUMBER,
15:47:48  93  	in_offer_chain_offer_index IN NUMBER
15:47:48  94  ) RETURN NUMBER;
15:47:48  95  
15:47:48  96  PROCEDURE GET_OFFER_LENGTH (
15:47:48  97  	in_offer_id IN NUMBER,
15:47:48  98  	out_years   OUT NUMBER,
15:47:48  99  	out_months  OUT NUMBER,
15:47:48 100  	out_days    OUT NUMBER
15:47:48 101  );
15:47:48 102  
15:47:48 103  PROCEDURE GET_OFFER_LENGTH_IN_DAYS (
15:47:48 104  	in_offer_id   IN NUMBER,
15:47:48 105  	in_start_date IN DATE DEFAULT SYSDATE,
15:47:48 106  	out_days      OUT NUMBER
15:47:48 107  );
15:47:48 108  
15:47:48 109  PROCEDURE GET_OFFER_PRODUCTS (
15:47:48 110  	in_offer_id    IN NUMBER,
15:47:48 111  	out_result_set OUT SYS_REFCURSOR
15:47:48 112  );
15:47:48 113  
15:47:48 114  PROCEDURE GET_OFFER_CHAIN_PROD_OFFERINGS (
15:47:48 115  	in_offer_chain_id IN NUMBER,
15:47:48 116  	out_result_set	  OUT SYS_REFCURSOR
15:47:48 117  );
15:47:48 118  
15:47:48 119  FUNCTION CHECK_FOR_SAME_PRODUCTS (
15:47:48 120  	in_offer_chain_1	 IN OFFER_CHAIN.ID%TYPE,
15:47:48 121  	in_offer_chain_2	 IN OFFER_CHAIN.ID%TYPE,
15:47:48 122  	in_use_eligibility_rules IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE
15:47:48 123  ) RETURN NUMBER;
15:47:48 124  
15:47:48 125  FUNCTION IS_OFFER_CHAIN_CANCELABLE (
15:47:48 126  	in_offer_chain_id IN NUMBER
15:47:48 127  ) RETURN NUMBER;
15:47:48 128  
15:47:48 129  FUNCTION GET_OFFER_CHAIN_MAX_CONC_SUBSC (
15:47:48 130  	in_offer_chain_id IN NUMBER
15:47:48 131  ) RETURN NUMBER;
15:47:48 132  
15:47:48 133  PROCEDURE GET_OFFER_CHAIN_ELIGIBILITY (
15:47:48 134  	in_offer_chain_id   IN NUMBER,
15:47:48 135  	in_eligibility_name IN VARCHAR2,
15:47:48 136  	out_result_set	    OUT SYS_REFCURSOR
15:47:48 137  );
15:47:48 138  
15:47:48 139  PROCEDURE GET_OFFER_CHAINS_ELIGIBILITY (
15:47:48 140  	in_offer_chain_ids  IN VARCHAR2,
15:47:48 141  	in_eligibility_name IN VARCHAR2,
15:47:48 142  	out_result_set	    OUT SYS_REFCURSOR
15:47:48 143  );
15:47:48 144  
15:47:48 145  PROCEDURE GET_OFFER_CHAIN_META_DATA (
15:47:48 146  	in_offer_chain_id IN NUMBER,
15:47:48 147  	in_meta_data_name IN VARCHAR2,
15:47:48 148  	out_result_set	  OUT SYS_REFCURSOR
15:47:48 149  );
15:47:48 150  
15:47:48 151  PROCEDURE GET_OFFER_CHAINS_META_DATA (
15:47:48 152  	in_offer_chain_ids IN VARCHAR2,
15:47:48 153  	in_meta_data_name  IN VARCHAR2,
15:47:48 154  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 155  );
15:47:48 156  
15:47:48 157  PROCEDURE GET_PROD_OFFERINGS_BY_OFFER_ID (
15:47:48 158  	in_offer_id    IN NUMBER,
15:47:48 159  	out_result_set OUT SYS_REFCURSOR
15:47:48 160  );
15:47:48 161  
15:47:48 162  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
15:47:48 163  	in_product_offering_id IN NUMBER,
15:47:48 164  	in_meta_data_name      IN VARCHAR2 DEFAULT NULL,
15:47:48 165  	out_result_set	       OUT SYS_REFCURSOR
15:47:48 166  );
15:47:48 167  
15:47:48 168  PROCEDURE GET_OFF_CHAINS_SAME_PRODUCTS (
15:47:48 169  	in_offer_chain_1 IN NUMBER,
15:47:48 170  	in_offer_chain_2 IN NUMBER,
15:47:48 171  	out_result_set	OUT SYS_REFCURSOR
15:47:48 172  );
15:47:48 173  
15:47:48 174  PROCEDURE GET_OFFER_CHAIN_MD_VALUE (
15:47:48 175  	in_offer_chain_id IN NUMBER,
15:47:48 176  	in_meta_data_name IN VARCHAR2,
15:47:48 177  	out_value	  OUT VARCHAR2
15:47:48 178  );
15:47:48 179  
15:47:48 180  PROCEDURE GET_OFFER_CHAIN_EL_VALUE (
15:47:48 181  	in_offer_chain_id   IN NUMBER,
15:47:48 182  	in_eligibility_name IN VARCHAR2,
15:47:48 183  	out_value	    OUT VARCHAR2
15:47:48 184  );
15:47:48 185  
15:47:48 186  PROCEDURE GET_OFFER_PRODUCT_OFFERINGS (
15:47:48 187  	in_offer_id    IN NUMBER,
15:47:48 188  	out_result_set OUT SYS_REFCURSOR
15:47:48 189  );
15:47:48 190  
15:47:48 191  PROCEDURE GET_OFFER_CHAINS_BY_META_DATA (
15:47:48 192  	in_meta_data_name  IN VARCHAR2,
15:47:48 193  	in_meta_data_value IN VARCHAR2,
15:47:48 194  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 195  );
15:47:48 196  
15:47:48 197  PROCEDURE GET_ALL_META_DATA (
15:47:48 198  	in_offer_chain_id IN NUMBER,
15:47:48 199  	out_result_set	  OUT SYS_REFCURSOR
15:47:48 200  );
15:47:48 201  
15:47:48 202  PROCEDURE CHECK_PRODUCT_ELIGIBILITY (
15:47:48 203  	in_group_id	  IN NUMBER,
15:47:48 204  	in_offer_chain_id IN NUMBER,
15:47:48 205  	out_is_eligible   OUT NUMBER,
15:47:48 206  	out_concurrent_subscription_id OUT NUMBER
15:47:48 207  );
15:47:48 208  
15:47:48 209  PROCEDURE GET_NOTIFICATION_TYPE_ID (
15:47:48 210  	in_offer_chain_id	 IN NUMBER,
15:47:48 211  	in_action_name		 IN VARCHAR2,
15:47:48 212  	out_notification_type_id OUT NUMBER
15:47:48 213  );
15:47:48 214  
15:47:48 215  END PROCS_OFFER_CHAIN_V22;
15:47:48 216  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE 		  "PROCS_POLLING_SYNC"
15:47:48   2  AS
15:47:48   3  
15:47:48   4  ----
15:47:48   5  --------------------------------------------------------------------------------
15:47:48   6  ----
15:47:48   7  	  /* Call the Gather Events on a timer. Pass in the timestamp
15:47:48   8  	      returned from the previous call and store the result for the
15:47:48   9  	      next call.
15:47:48  10  	     This method will identify and create new Sync Events from trigger activity data */
15:47:48  11  	  procedure GATHER_SYNC_EVENTS(in_last_timestamp timestamp, out_new_timestamp out timestamp);
15:47:48  12  ----
15:47:48  13  --------------------------------------------------------------------------------
15:47:48  14  ----
15:47:48  15  	  /* Internal logic call may need to be used to fix poller data */
15:47:48  16  	  procedure GATHER_SYNC_EVENTS_RANGE(in_start_ts timestamp, in_end_ts timestamp, in_offset number);
15:47:48  17  ----
15:47:48  18  --------------------------------------------------------------------------------
15:47:48  19  ----
15:47:48  20  	  /* User request for sync events. Params should be hard-coded in the application
15:47:48  21  	      layer. Unconfirmed transfer sets will be resent up to maximum before being
15:47:48  22  	      skipped. Last read time is logged.
15:47:48  23  	     Params:
15:47:48  24  		  set_maximum: Size of each transfer set
15:47:48  25  		  max_retries: Number of times to resend unconfirmed sets before skipping
15:47:48  26  	     Returns:
15:47:48  27  		  set_id: Transfer set id, duplicated for all entries
15:47:48  28  		  group_id: regi_id value
15:47:48  29  		  event_type: Financial (I)nstrument, (S)ubscription, (G)ift Cert
15:47:48  30  	  */
15:47:48  31  	  procedure GET_TRANSFER_SET(in_set_maximum number, in_max_retries number, out_refcursor out sys_refcursor);
15:47:48  32  ----
15:47:48  33  --------------------------------------------------------------------------------
15:47:48  34  ----
15:47:48  35  	  /* Confirmation from user of receipt of sync transfer set. Will only allow a
15:47:48  36  	      single confirmation per transfer set.
15:47:48  37  	  */
15:47:48  38  	  procedure CONFIRM_TRANSFER_SET(in_set_id core_owner.polling_sync.set_id%type);
15:47:48  39  ----
15:47:48  40  --------------------------------------------------------------------------------
15:47:48  41  ----
15:47:48  42  	  procedure SET_LAST_RUN(ts in timestamp);
15:47:48  43  	  procedure GET_LAST_RUN(ts out timestamp);
15:47:48  44  END PROCS_POLLING_SYNC;
15:47:48  45  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.09
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_PROCESS_RETRY_THROTTLE
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_PROCESS_RETRY_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE LOG_RETRY(
15:47:48   4  	  in_process_name IN VARCHAR2,
15:47:48   5  	  in_generic_id   IN NUMBER,
15:47:48   6  	  in_date	  IN VARCHAR2,
15:47:48   7  	  out_success	   OUT NUMBER
15:47:48   8  );
15:47:48   9  
15:47:48  10  PROCEDURE LOG_RETRY_DATE(
15:47:48  11  	  in_process_name IN VARCHAR2,
15:47:48  12  	  in_generic_id   IN NUMBER,
15:47:48  13  	  in_date	  IN DATE,
15:47:48  14  	  out_success	   OUT NUMBER
15:47:48  15  );
15:47:48  16  
15:47:48  17  PROCEDURE DELETE_RETRY(
15:47:48  18  	  in_process_name IN VARCHAR2,
15:47:48  19  	  in_remove_minutes  IN NUMBER
15:47:48  20  );
15:47:48  21  
15:47:48  22  PROCEDURE GET_SYSDATE (
15:47:48  23  	  out_date OUT VARCHAR2
15:47:48  24  );
15:47:48  25  
15:47:48  26  END PROCS_PROCESS_RETRY_V22;
15:47:48  27  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_PRODUCT
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_PRODUCT_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE GET_PRODUCTS (
15:47:48   4  /*
15:47:48   5  Throws exceptions:
15:47:48   6  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48   7  */
15:47:48   8  	in_status_id   IN  NUMBER,
15:47:48   9  	out_result_set OUT SYS_REFCURSOR
15:47:48  10  );
15:47:48  11  
15:47:48  12  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
15:47:48  13  /*
15:47:48  14  Throws exceptions:
15:47:48  15  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  16  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  17  */
15:47:48  18  	in_product_offering_id	IN NUMBER,
15:47:48  19  	out_result_set OUT SYS_REFCURSOR
15:47:48  20  );
15:47:48  21  
15:47:48  22  PROCEDURE GET_PRODUCT_ELIGIBIL_BY_NAME (
15:47:48  23  /*
15:47:48  24  Throws exceptions:
15:47:48  25  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  26  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  27  */
15:47:48  28  	in_product_id	    IN NUMBER,
15:47:48  29  	in_eligibility_name IN VARCHAR2 DEFAULT NULL,
15:47:48  30  	out_result_set	    OUT SYS_REFCURSOR
15:47:48  31  );
15:47:48  32  
15:47:48  33  PROCEDURE GET_PRODUCT_BY_ID (
15:47:48  34  	in_product_id  IN NUMBER,
15:47:48  35  	out_result_set OUT SYS_REFCURSOR
15:47:48  36  );
15:47:48  37  
15:47:48  38  PROCEDURE GET_PRD_OFFERING_BY_LINE_IT_ID (
15:47:48  39  	in_line_item_id IN NUMBER,
15:47:48  40  	out_result_set	OUT SYS_REFCURSOR
15:47:48  41  );
15:47:48  42  
15:47:48  43  PROCEDURE GET_PRD_OFFERING_BY_ID (
15:47:48  44  	in_product_offering_id IN NUMBER,
15:47:48  45  	out_result_set	OUT SYS_REFCURSOR
15:47:48  46  );
15:47:48  47  
15:47:48  48  PROCEDURE GET_PRODUCT_OFFERING_DISCOUNTS(
15:47:48  49  	in_product_offering_id IN NUMBER,
15:47:48  50  	out_result_set	       OUT SYS_REFCURSOR
15:47:48  51  );
15:47:48  52  
15:47:48  53  END PROCS_PRODUCT_V22;
15:47:48  54  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_RECONCILIATION_CRU
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_RECONCILIATION_CRU_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_CPT_CHARGEBACK_ACT (
15:47:48   4  	out_cpt_chargeback_act_id   OUT RCN_CPT_CHARGEBACK_ACT_DETAIL.ID%TYPE,
15:47:48   5  	in_cpt_chargeback_act_id    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ID%TYPE DEFAULT NULL,
15:47:48   6  	in_ext_source_log_id	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:48   7  	in_record_type		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.RECORD_TYPE%TYPE,
15:47:48   8  	in_entity_type		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ENTITY_TYPE%TYPE,
15:47:48   9  	in_entity_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ENTITY_NUMBER%TYPE,
15:47:48  10  	in_chargeback_amount_issuer IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_AMOUNT_ISSUER%TYPE,
15:47:48  11  	in_prev_partial_repres	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.PREV_PARTIAL_REPRESENTMENT%TYPE,
15:47:48  12  	in_presentment_currency     IN RCN_CPT_CHARGEBACK_ACT_DETAIL.PRESENTMENT_CURRENCY%TYPE,
15:47:48  13  	in_chargeback_category	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_CATEGORY%TYPE,
15:47:48  14  	in_status_flag		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.STATUS_FLAG%TYPE,
15:47:48  15  	in_sequence_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.SEQUENCE_NUMBER%TYPE,
15:47:48  16  	in_merchant_order_number    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
15:47:48  17  	in_account_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ACCOUNT_NUMBER%TYPE,
15:47:48  18  	in_reason_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.REASON_CODE%TYPE,
15:47:48  19  	in_transaction_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.TRANSACTION_DATE%TYPE,
15:47:48  20  	in_chargeback_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_DATE%TYPE,
15:47:48  21  	in_activity_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ACTIVITY_DATE%TYPE,
15:47:48  22  	in_chargeback_amount_action IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_AMOUNT_ACTION%TYPE,
15:47:48  23  	in_fee_amount		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.FEE_AMOUNT%TYPE,
15:47:48  24  	in_usage_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.USAGE_CODE%TYPE,
15:47:48  25  	in_mop_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.MOP_CODE%TYPE,
15:47:48  26  	in_authorization_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.AUTHORIZATION_DATE%TYPE,
15:47:48  27  	in_chargeback_due_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_DUE_DATE%TYPE,
15:47:48  28  	in_created_by		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CREATED_BY%TYPE
15:47:48  29  );
15:47:48  30  
15:47:48  31  PROCEDURE CREATE_EXT_SOURCE_LOG (
15:47:48  32  	out_ext_source_log_id	    OUT RCN_EXT_SOURCE_LOG.ID%TYPE,
15:47:48  33  	in_ext_source_log_id	    IN RCN_EXT_SOURCE_LOG.ID%TYPE DEFAULT NULL,
15:47:48  34  	in_extraction_timestamp     IN RCN_EXT_SOURCE_LOG.EXTRACTION_TIMESTAMP%TYPE,
15:47:48  35  	in_report_date		    IN RCN_EXT_SOURCE_LOG.REPORT_DATE%TYPE,
15:47:48  36  	in_report_gen_datetime	    IN RCN_EXT_SOURCE_LOG.REPORT_GENERATION_DATETIME%TYPE,
15:47:48  37  	in_record_type		    IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
15:47:48  38  	in_report_file_name	    IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE,
15:47:48  39  	in_created_by		    IN RCN_EXT_SOURCE_LOG.CREATED_BY%TYPE
15:47:48  40  );
15:47:48  41  
15:47:48  42  PROCEDURE CREATE_CPT_SERVICE_CHARGE (
15:47:48  43  	out_cpt_service_charge_id   OUT RCN_CPT_SERVICE_CHARGE_DETAIL.ID%TYPE,
15:47:48  44  	in_cpt_service_charge_id    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ID%TYPE DEFAULT NULL,
15:47:48  45  	in_ext_source_log_id	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:48  46  	in_record_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.RECORD_TYPE%TYPE,
15:47:48  47  	in_category		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.CATEGORY%TYPE,
15:47:48  48  	in_sub_category 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SUB_CATEGORY%TYPE,
15:47:48  49  	in_entity_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ENTITY_TYPE%TYPE,
15:47:48  50  	in_entity_number	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ENTITY_NUMBER%TYPE,
15:47:48  51  	in_funds_trans_inst_number  IN RCN_CPT_SERVICE_CHARGE_DETAIL.FUNDS_TRANSFER_INST_NUMBER%TYPE,
15:47:48  52  	in_secure_ba_number	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SECURE_BA_NUMBER%TYPE,
15:47:48  53  	in_settlement_currency	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SETTLEMENT_CURRENCY%TYPE,
15:47:48  54  	in_fee_schedule 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.FEE_SCHEDULE%TYPE,
15:47:48  55  	in_mop			    IN RCN_CPT_SERVICE_CHARGE_DETAIL.MOP%TYPE,
15:47:48  56  	in_interchange_qual	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.INTERCHANGE_QUALIFICATION%TYPE,
15:47:48  57  	in_fee_type_description     IN RCN_CPT_SERVICE_CHARGE_DETAIL.FEE_TYPE_DESCRIPTION%TYPE,
15:47:48  58  	in_action_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ACTION_TYPE%TYPE,
15:47:48  59  	in_unit_quantity	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.UNIT_QUANTITY%TYPE,
15:47:48  60  	in_unit_fee		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.UNIT_FEE%TYPE,
15:47:48  61  	in_amount		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.AMOUNT%TYPE,
15:47:48  62  	in_percentage_rate	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.PERCENTAGE_RATE%TYPE,
15:47:48  63  	in_total_charge 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.TOTAL_CHARGE%TYPE,
15:47:48  64  	in_created_by		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.CREATED_BY%TYPE
15:47:48  65  );
15:47:48  66  
15:47:48  67  PROCEDURE CREATE_CPT_EXCEPTION (
15:47:48  68  	out_cpt_exception_id	 OUT RCN_CPT_EXCEPTION_DETAIL.ID%TYPE,
15:47:48  69  	in_cpt_exception_id	 IN RCN_CPT_EXCEPTION_DETAIL.ID%TYPE DEFAULT NULL,
15:47:48  70  	in_ext_source_log_id	 IN RCN_CPT_EXCEPTION_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:48  71  	in_record_type		 IN RCN_CPT_EXCEPTION_DETAIL.RECORD_TYPE%TYPE,
15:47:48  72  	in_submission_date	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_DATE%TYPE,
15:47:48  73  	in_pid_number		 IN RCN_CPT_EXCEPTION_DETAIL.PID_NUMBER%TYPE,
15:47:48  74  	in_pid_short_name	 IN RCN_CPT_EXCEPTION_DETAIL.PID_SHORT_NAME%TYPE,
15:47:48  75  	in_submission_number	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_NUMBER%TYPE,
15:47:48  76  	in_record_number	 IN RCN_CPT_EXCEPTION_DETAIL.RECORD_NUMBER%TYPE,
15:47:48  77  	in_entity_type		 IN RCN_CPT_EXCEPTION_DETAIL.ENTITY_TYPE%TYPE,
15:47:48  78  	in_entity_number	 IN RCN_CPT_EXCEPTION_DETAIL.ENTITY_NUMBER%TYPE,
15:47:48  79  	in_presentment_currency  IN RCN_CPT_EXCEPTION_DETAIL.PRESENTMENT_CURRENCY%TYPE,
15:47:48  80  	in_merchant_order_number IN RCN_CPT_EXCEPTION_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
15:47:48  81  	in_rdfi_number		 IN RCN_CPT_EXCEPTION_DETAIL.RDFI_NUMBER%TYPE,
15:47:48  82  	in_account_number	 IN RCN_CPT_EXCEPTION_DETAIL.ACCOUNT_NUMBER%TYPE,
15:47:48  83  	in_expiration_date	 IN RCN_CPT_EXCEPTION_DETAIL.EXPIRATION_DATE%TYPE,
15:47:48  84  	in_amount		 IN RCN_CPT_EXCEPTION_DETAIL.AMOUNT%TYPE,
15:47:48  85  	in_mop			 IN RCN_CPT_EXCEPTION_DETAIL.MOP%TYPE,
15:47:48  86  	in_action_code		 IN RCN_CPT_EXCEPTION_DETAIL.ACTION_CODE%TYPE,
15:47:48  87  	in_auth_date		 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_DATE%TYPE,
15:47:48  88  	in_auth_code		 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_CODE%TYPE,
15:47:48  89  	in_auth_response_code	 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_RESPONSE_CODE%TYPE,
15:47:48  90  	in_trace_number 	 IN RCN_CPT_EXCEPTION_DETAIL.TRACE_NUMBER%TYPE,
15:47:48  91  	in_consumer_country_code IN RCN_CPT_EXCEPTION_DETAIL.CONSUMER_COUNTRY_CODE%TYPE,
15:47:48  92  	in_category		 IN RCN_CPT_EXCEPTION_DETAIL.CATEGORY%TYPE,
15:47:48  93  	in_mcc			 IN RCN_CPT_EXCEPTION_DETAIL.MCC%TYPE,
15:47:48  94  	in_reject_code		 IN RCN_CPT_EXCEPTION_DETAIL.REJECT_CODE%TYPE,
15:47:48  95  	in_submission_status	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_STATUS%TYPE,
15:47:48  96  	in_created_by		 IN RCN_CPT_EXCEPTION_DETAIL.CREATED_BY%TYPE
15:47:48  97  );
15:47:48  98  
15:47:48  99  PROCEDURE CREATE_CPT_DEPOSIT (
15:47:48 100  	out_cpt_deposit_id	  OUT RCN_CPT_DEPOSIT_DETAIL.ID%TYPE,
15:47:48 101  	in_cpt_deposit_id	  IN RCN_CPT_DEPOSIT_DETAIL.ID%TYPE DEFAULT NULL,
15:47:48 102  	in_ext_source_log_id	  IN RCN_CPT_DEPOSIT_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:48 103  	in_record_type		  IN RCN_CPT_DEPOSIT_DETAIL.RECORD_TYPE%TYPE,
15:47:48 104  	in_submission_date	  IN RCN_CPT_DEPOSIT_DETAIL.SUBMISSION_DATE%TYPE,
15:47:48 105  	in_pid_number		  IN RCN_CPT_DEPOSIT_DETAIL.PID_NUMBER%TYPE,
15:47:48 106  	in_pid_short_name	  IN RCN_CPT_DEPOSIT_DETAIL.PID_SHORT_NAME%TYPE,
15:47:48 107  	in_submission_number	  IN RCN_CPT_DEPOSIT_DETAIL.SUBMISSION_NUMBER%TYPE,
15:47:48 108  	in_record_number	  IN RCN_CPT_DEPOSIT_DETAIL.RECORD_NUMBER%TYPE,
15:47:48 109  	in_entity_type		  IN RCN_CPT_DEPOSIT_DETAIL.ENTITY_TYPE%TYPE,
15:47:48 110  	in_entity_number	  IN RCN_CPT_DEPOSIT_DETAIL.ENTITY_NUMBER%TYPE,
15:47:48 111  	in_presentment_currency   IN RCN_CPT_DEPOSIT_DETAIL.PRESENTMENT_CURRENCY%TYPE,
15:47:48 112  	in_merchant_order_number  IN RCN_CPT_DEPOSIT_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
15:47:48 113  	in_rdfi_number		  IN RCN_CPT_DEPOSIT_DETAIL.RDFI_NUMBER%TYPE,
15:47:48 114  	in_account_number	  IN RCN_CPT_DEPOSIT_DETAIL.ACCOUNT_NUMBER%TYPE,
15:47:48 115  	in_expiration_date	  IN RCN_CPT_DEPOSIT_DETAIL.EXPIRATION_DATE%TYPE,
15:47:48 116  	in_amount		  IN RCN_CPT_DEPOSIT_DETAIL.AMOUNT%TYPE,
15:47:48 117  	in_mop			  IN RCN_CPT_DEPOSIT_DETAIL.MOP%TYPE,
15:47:48 118  	in_action_code		  IN RCN_CPT_DEPOSIT_DETAIL.ACTION_CODE%TYPE,
15:47:48 119  	in_auth_date		  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_DATE%TYPE,
15:47:48 120  	in_auth_code		  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_CODE%TYPE,
15:47:48 121  	in_auth_response_code	  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_RESPONSE_CODE%TYPE,
15:47:48 122  	in_trace_number 	  IN RCN_CPT_DEPOSIT_DETAIL.TRACE_NUMBER%TYPE,
15:47:48 123  	in_consumer_country_code  IN RCN_CPT_DEPOSIT_DETAIL.CONSUMER_COUNTRY_CODE%TYPE,
15:47:48 124  	in_mcc			  IN RCN_CPT_DEPOSIT_DETAIL.MCC%TYPE,
15:47:48 125  	in_fee_code		  IN RCN_CPT_DEPOSIT_DETAIL.FEE_CODE%TYPE,
15:47:48 126  	in_unit_fee		  IN RCN_CPT_DEPOSIT_DETAIL.UNIT_FEE%TYPE,
15:47:48 127  	in_percent_fee		  IN RCN_CPT_DEPOSIT_DETAIL.PERCENT_FEE%TYPE,
15:47:48 128  	in_total_interchange_fee  IN RCN_CPT_DEPOSIT_DETAIL.TOTAL_INTERCHANGE_FEE%TYPE,
15:47:48 129  	in_total_assessment_fee   IN RCN_CPT_DEPOSIT_DETAIL.TOTAL_ASSESSMENT_FEE%TYPE,
15:47:48 130  	in_other_fee		  IN RCN_CPT_DEPOSIT_DETAIL.OTHER_FEE%TYPE,
15:47:48 131  	in_created_by		  IN RCN_CPT_DEPOSIT_DETAIL.CREATED_BY%TYPE
15:47:48 132  );
15:47:48 133  
15:47:48 134  PROCEDURE CREATE_PP_SETTLEMENT (
15:47:48 135  	out_pp_settlement_id	   OUT RCN_PP_SETTLEMENT.ID%TYPE,
15:47:48 136  	in_pp_settlement_id	   IN RCN_PP_SETTLEMENT.ID%TYPE DEFAULT NULL,
15:47:48 137  	in_ext_source_log_id	   IN RCN_PP_SETTLEMENT.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:48 138  	in_transaction_id	   IN RCN_PP_SETTLEMENT.TRANSACTION_ID%TYPE,
15:47:48 139  	in_invoice_id		   IN RCN_PP_SETTLEMENT.INVOICE_ID%TYPE,
15:47:48 140  	in_pp_ref_id		   IN RCN_PP_SETTLEMENT.PP_REF_ID%TYPE,
15:47:48 141  	in_pp_ref_id_type	   IN RCN_PP_SETTLEMENT.PP_REF_ID_TYPE%TYPE,
15:47:48 142  	in_trans_event_code	   IN RCN_PP_SETTLEMENT.TRANS_EVENT_CODE%TYPE,
15:47:48 143  	in_trans_init_date	   IN RCN_PP_SETTLEMENT.TRANS_INIT_DATE%TYPE,
15:47:48 144  	in_trans_comp_date	   IN RCN_PP_SETTLEMENT.TRANS_COMP_DATE%TYPE,
15:47:48 145  	in_trans_deb_or_cred	   IN RCN_PP_SETTLEMENT.TRANS_DEB_OR_CRED%TYPE,
15:47:48 146  	in_gross_trans_amount	   IN RCN_PP_SETTLEMENT.GROSS_TRANS_AMOUNT%TYPE,
15:47:48 147  	in_gross_trans_currency    IN RCN_PP_SETTLEMENT.GROSS_TRANS_CURRENCY%TYPE,
15:47:48 148  	in_fee_deb_or_cred	   IN RCN_PP_SETTLEMENT.FEE_DEB_OR_CRED%TYPE,
15:47:48 149  	in_fee_amount		   IN RCN_PP_SETTLEMENT.FEE_AMOUNT%TYPE,
15:47:48 150  	in_fee_currency 	   IN RCN_PP_SETTLEMENT.FEE_CURRENCY%TYPE,
15:47:48 151  	in_custom_field 	   IN RCN_PP_SETTLEMENT.CUSTOM_FIELD%TYPE,
15:47:48 152  	in_created_by		   IN RCN_PP_SETTLEMENT.CREATED_BY%TYPE
15:47:48 153  );
15:47:48 154  
15:47:48 155  PROCEDURE CREATE_PP_DISPUTE (
15:47:48 156  	out_pp_dispute_id	     OUT RCN_PP_DISPUTE.ID%TYPE,
15:47:48 157  	in_pp_dispute_id	     IN RCN_PP_DISPUTE.ID%TYPE DEFAULT NULL,
15:47:48 158  	in_ext_source_log_id	     IN RCN_PP_DISPUTE.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:48 159  	in_dispute_type 	     IN RCN_PP_DISPUTE.DISPUTE_TYPE%TYPE,
15:47:48 160  	in_claimant_name	     IN RCN_PP_DISPUTE.CLAIMANT_NAME%TYPE,
15:47:48 161  	in_claimant_email	     IN RCN_PP_DISPUTE.CLAIMANT_EMAIL%TYPE,
15:47:48 162  	in_transaction_id	     IN RCN_PP_DISPUTE.TRANSACTION_ID%TYPE,
15:47:48 163  	in_trans_date		     IN RCN_PP_DISPUTE.TRANS_DATE%TYPE,
15:47:48 164  	in_disputed_amount	     IN RCN_PP_DISPUTE.DISPUTED_AMOUNT%TYPE,
15:47:48 165  	in_disputed_amount_currency  IN RCN_PP_DISPUTE.DISPUTED_AMOUNT_CURRENCY%TYPE,
15:47:48 166  	in_dispute_reason	     IN RCN_PP_DISPUTE.DISPUTE_REASON%TYPE,
15:47:48 167  	in_dispute_filing_date	     IN RCN_PP_DISPUTE.DISPUTE_FILING_DATE%TYPE,
15:47:48 168  	in_dispute_status	     IN RCN_PP_DISPUTE.DISPUTE_STATUS%TYPE,
15:47:48 169  	in_dispute_case_id	     IN RCN_PP_DISPUTE.DISPUTE_CASE_ID%TYPE,
15:47:48 170  	in_invoice_id		     IN RCN_PP_DISPUTE.INVOICE_ID%TYPE,
15:47:48 171  	in_created_by		     IN RCN_PP_DISPUTE.CREATED_BY%TYPE
15:47:48 172  );
15:47:48 173  
15:47:48 174  PROCEDURE CREATE_PP_TRANS_DETAIL (
15:47:48 175  	out_pp_trans_detail_id	     OUT RCN_PP_TRANS_DETAIL.ID%TYPE,
15:47:48 176  	in_pp_trans_detail_id	     IN RCN_PP_TRANS_DETAIL.ID%TYPE DEFAULT NULL,
15:47:48 177  	in_ext_source_log_id	     IN RCN_PP_TRANS_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:48 178  	in_invoice_id		     IN RCN_PP_TRANS_DETAIL.INVOICE_ID%TYPE,
15:47:48 179  	in_transaction_id	     IN RCN_PP_TRANS_DETAIL.TRANSACTION_ID%TYPE,
15:47:48 180  	in_pp_ref_id		     IN RCN_PP_TRANS_DETAIL.PP_REF_ID%TYPE,
15:47:48 181  	in_trans_deb_or_cred	     IN RCN_PP_TRANS_DETAIL.TRANS_DEB_OR_CRED%TYPE,
15:47:48 182  	in_trans_init_date	     IN RCN_PP_TRANS_DETAIL.TRANS_INIT_DATE%TYPE,
15:47:48 183  	in_trans_comp_date	     IN RCN_PP_TRANS_DETAIL.TRANS_COMP_DATE%TYPE,
15:47:48 184  	in_gross_trans_amount	     IN RCN_PP_TRANS_DETAIL.GROSS_TRANS_AMOUNT%TYPE,
15:47:48 185  	in_gross_trans_currency      IN RCN_PP_TRANS_DETAIL.GROSS_TRANS_CURRENCY%TYPE,
15:47:48 186  	in_fee_amount		     IN RCN_PP_TRANS_DETAIL.FEE_AMOUNT%TYPE,
15:47:48 187  	in_fee_currency 	     IN RCN_PP_TRANS_DETAIL.FEE_CURRENCY%TYPE,
15:47:48 188  	in_fee_deb_or_cred	     IN RCN_PP_TRANS_DETAIL.FEE_DEB_OR_CRED%TYPE,
15:47:48 189  	in_trans_event_code	     IN RCN_PP_TRANS_DETAIL.TRANS_EVENT_CODE%TYPE,
15:47:48 190  	in_trans_status 	     IN RCN_PP_TRANS_DETAIL.TRANS_STATUS%TYPE,
15:47:48 191  	in_insurance_amount	     IN RCN_PP_TRANS_DETAIL.INSURANCE_AMOUNT%TYPE,
15:47:48 192  	in_sales_tax_amount	     IN RCN_PP_TRANS_DETAIL.SALES_TAX_AMOUNT%TYPE,
15:47:48 193  	in_shipping_amount	     IN RCN_PP_TRANS_DETAIL.SHIPPING_AMOUNT%TYPE,
15:47:48 194  	in_trans_subject	     IN RCN_PP_TRANS_DETAIL.TRANS_SUBJECT%TYPE,
15:47:48 195  	in_trans_note		     IN RCN_PP_TRANS_DETAIL.TRANS_NOTE%TYPE,
15:47:48 196  	in_payer_acct_id	     IN RCN_PP_TRANS_DETAIL.PAYER_ACCT_ID%TYPE,
15:47:48 197  	in_payer_addr_status	     IN RCN_PP_TRANS_DETAIL.PAYER_ADDR_STATUS%TYPE,
15:47:48 198  	in_item_name		     IN RCN_PP_TRANS_DETAIL.ITEM_NAME%TYPE,
15:47:48 199  	in_item_id		     IN RCN_PP_TRANS_DETAIL.ITEM_ID%TYPE,
15:47:48 200  	in_option_1_name	     IN RCN_PP_TRANS_DETAIL.OPTION_1_NAME%TYPE,
15:47:48 201  	in_option_1_value	     IN RCN_PP_TRANS_DETAIL.OPTION_1_VALUE%TYPE,
15:47:48 202  	in_option_2_name	     IN RCN_PP_TRANS_DETAIL.OPTION_2_NAME%TYPE,
15:47:48 203  	in_option_2_value	     IN RCN_PP_TRANS_DETAIL.OPTION_2_VALUE%TYPE,
15:47:48 204  	in_auction_site 	     IN RCN_PP_TRANS_DETAIL.AUCTION_SITE%TYPE,
15:47:48 205  	in_auction_buyer_id	     IN RCN_PP_TRANS_DETAIL.AUCTION_BUYER_ID%TYPE,
15:47:48 206  	in_auction_closing_date      IN RCN_PP_TRANS_DETAIL.AUCTION_CLOSING_DATE%TYPE,
15:47:48 207  	in_shipping_addr_line_1      IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_LINE_1%TYPE,
15:47:48 208  	in_shipping_addr_line_2      IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_LINE_2%TYPE,
15:47:48 209  	in_shipping_addr_city	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_CITY%TYPE,
15:47:48 210  	in_shipping_addr_state	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_STATE%TYPE,
15:47:48 211  	in_shipping_addr_zip	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_ZIP%TYPE,
15:47:48 212  	in_shipping_addr_country     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_COUNTRY%TYPE,
15:47:48 213  	in_custom_field 	     IN RCN_PP_TRANS_DETAIL.CUSTOM_FIELD%TYPE,
15:47:48 214  	in_created_by		     IN RCN_PP_TRANS_DETAIL.CREATED_BY%TYPE
15:47:48 215  );
15:47:48 216  
15:47:48 217  PROCEDURE GET_EXT_SOURCE_LOG (
15:47:48 218  	in_record_type		 IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
15:47:48 219  	in_report_file_name	 IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE,
15:47:48 220  	out_result_set		 OUT SYS_REFCURSOR
15:47:48 221  );
15:47:48 222  
15:47:48 223  FUNCTION CHECK_EXT_SOURCE_LOG (
15:47:48 224  	in_record_type		 IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
15:47:48 225  	in_report_file_name	 IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE
15:47:48 226  ) RETURN NUMBER;
15:47:48 227  
15:47:48 228  PROCEDURE CREATE_AMEX_CHARGEBACK (
15:47:48 229  	  in_rcn_ext_source_log_id IN RCN_EXT_SOURCE_LOG.ID%TYPE,
15:47:48 230  	  in_resolution IN RCN_AMEX_CHARGEBACK.RESOLUTION%TYPE,
15:47:48 231  	  in_from_system IN RCN_AMEX_CHARGEBACK.FROM_SYSTEM%TYPE,
15:47:48 232  	  in_rejects_to_system IN RCN_AMEX_CHARGEBACK.REJECTS_TO_SYSTEM%TYPE,
15:47:48 233  	  in_disputes_to_system IN RCN_AMEX_CHARGEBACK.DISPUTES_TO_SYSTEM%TYPE,
15:47:48 234  	  in_date_of_adjustment IN RCN_AMEX_CHARGEBACK.DATE_OF_ADJUSTMENT%TYPE,
15:47:48 235  	  in_date_of_charge IN RCN_AMEX_CHARGEBACK.DATE_OF_CHARGE%TYPE,
15:47:48 236  	  in_case_type IN RCN_AMEX_CHARGEBACK.CASE_TYPE%TYPE,
15:47:48 237  	  in_cb_reas_code IN RCN_AMEX_CHARGEBACK.CB_REAS_CODE%TYPE,
15:47:48 238  	  in_cb_amount IN RCN_AMEX_CHARGEBACK.CB_AMOUNT%TYPE,
15:47:48 239  	  in_cb_adjustment_number IN RCN_AMEX_CHARGEBACK.CB_ADJUSTMENT_NUMBER%TYPE,
15:47:48 240  	  in_billed_amount IN RCN_AMEX_CHARGEBACK.BILLED_AMOUNT%TYPE,
15:47:48 241  	  in_soc_amount IN RCN_AMEX_CHARGEBACK.SOC_AMOUNT%TYPE,
15:47:48 242  	  in_foreign_amount IN RCN_AMEX_CHARGEBACK.FOREIGN_AMOUNT%TYPE,
15:47:48 243  	  in_currency IN RCN_AMEX_CHARGEBACK.CURRENCY%TYPE,
15:47:48 244  	  in_note1 IN RCN_AMEX_CHARGEBACK.NOTE1%TYPE,
15:47:48 245  	  in_note2 IN RCN_AMEX_CHARGEBACK.NOTE2%TYPE,
15:47:48 246  	  in_note3 IN RCN_AMEX_CHARGEBACK.NOTE3%TYPE,
15:47:48 247  	  in_note4 IN RCN_AMEX_CHARGEBACK.NOTE4%TYPE,
15:47:48 248  	  in_note5 IN RCN_AMEX_CHARGEBACK.NOTE5%TYPE,
15:47:48 249  	  in_note6 IN RCN_AMEX_CHARGEBACK.NOTE6%TYPE,
15:47:48 250  	  in_note7 IN RCN_AMEX_CHARGEBACK.NOTE7%TYPE,
15:47:48 251  	  in_ind_ref_number IN RCN_AMEX_CHARGEBACK.IND_REF_NUMBER%TYPE,
15:47:48 252  	  in_created_by IN RCN_AMEX_CHARGEBACK.CREATED_BY%TYPE
15:47:48 253  );
15:47:48 254  
15:47:48 255  END PROCS_RECONCILIATION_CRU_V22;
15:47:48 256  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "CORE_OWNER"."PROCS_REPORTING" AS
15:47:48   2  
15:47:48   3  ----
15:47:48   4  --------------------------------------------------------------------------------
15:47:48   5  ----
15:47:48   6  	  procedure ext_charge(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48   7  ----
15:47:48   8  --------------------------------------------------------------------------------
15:47:48   9  ----
15:47:48  10  	  procedure ext_license(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  11  ----
15:47:48  12  --------------------------------------------------------------------------------
15:47:48  13  ----
15:47:48  14  	  procedure ext_invoice(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  15  ----
15:47:48  16  --------------------------------------------------------------------------------
15:47:48  17  ----
15:47:48  18  	  procedure ext_line_item(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  19  ----
15:47:48  20  --------------------------------------------------------------------------------
15:47:48  21  ----
15:47:48  22  	  procedure ext_account(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  23  ----
15:47:48  24  --------------------------------------------------------------------------------
15:47:48  25  ----
15:47:48  26  	  procedure ext_subscription(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  27  ----
15:47:48  28  --------------------------------------------------------------------------------
15:47:48  29  ----
15:47:48  30  	  procedure ext_transaction(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  31  ----
15:47:48  32  --------------------------------------------------------------------------------
15:47:48  33  ----
15:47:48  34  	  procedure ext_offer_chain(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  35  ----
15:47:48  36  --------------------------------------------------------------------------------
15:47:48  37  ----
15:47:48  38  	  procedure ext_offer_offer_chain(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  39  ----
15:47:48  40  --------------------------------------------------------------------------------
15:47:48  41  ----
15:47:48  42  	  procedure ext_offer(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  43  ----
15:47:48  44  --------------------------------------------------------------------------------
15:47:48  45  ----
15:47:48  46  	  procedure ext_gift_certificate(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  47  ----
15:47:48  48  --------------------------------------------------------------------------------
15:47:48  49  ----
15:47:48  50  	  procedure ext_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  51  ----
15:47:48  52  --------------------------------------------------------------------------------
15:47:48  53  ----
15:47:48  54  	  procedure ext_product(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  55  ----
15:47:48  56  --------------------------------------------------------------------------------
15:47:48  57  ----
15:47:48  58  	  procedure ext_offer_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  59  ----
15:47:48  60  --------------------------------------------------------------------------------
15:47:48  61  ----
15:47:48  62  	  procedure ext_discount_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  63  ----
15:47:48  64  --------------------------------------------------------------------------------
15:47:48  65  ----
15:47:48  66  	  procedure ext_discount(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  67  ----
15:47:48  68  --------------------------------------------------------------------------------
15:47:48  69  ----
15:47:48  70  	  procedure ext_offer_chain_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  71  ----
15:47:48  72  --------------------------------------------------------------------------------
15:47:48  73  ----
15:47:48  74  	  procedure ext_product_offering_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  75  ----
15:47:48  76  --------------------------------------------------------------------------------
15:47:48  77  ----
15:47:48  78  	  procedure ext_subscription_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  79  ----
15:47:48  80  --------------------------------------------------------------------------------
15:47:48  81  ----
15:47:48  82  	  procedure ext_credit_card(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  83  ----
15:47:48  84  --------------------------------------------------------------------------------
15:47:48  85  ----
15:47:48  86  	  procedure ext_transaction_attempt(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  87  ----
15:47:48  88  --------------------------------------------------------------------------------
15:47:48  89  ----
15:47:48  90  	  procedure ext_invoice_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  91  ----
15:47:48  92  --------------------------------------------------------------------------------
15:47:48  93  ----
15:47:48  94  	  procedure ext_line_item_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  95  ----
15:47:48  96  --------------------------------------------------------------------------------
15:47:48  97  ----
15:47:48  98  	  procedure ext_product_eligibility(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48  99  ----
15:47:48 100  --------------------------------------------------------------------------------
15:47:48 101  ----
15:47:48 102  	  procedure ext_offer_chain_eligibility(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 103  ----
15:47:48 104  --------------------------------------------------------------------------------
15:47:48 105  ----
15:47:48 106  	  procedure ext_tax(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 107  ----
15:47:48 108  --------------------------------------------------------------------------------
15:47:48 109  ----
15:47:48 110  	  procedure ext_tax_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 111  ----
15:47:48 112  --------------------------------------------------------------------------------
15:47:48 113  ----
15:47:48 114  /**/
15:47:48 115  	  procedure ext_rcn_ext_source_log(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 116  ----
15:47:48 117  --------------------------------------------------------------------------------
15:47:48 118  ----
15:47:48 119  	  procedure ext_rcn_cpt_svc_chg_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 120  ----
15:47:48 121  --------------------------------------------------------------------------------
15:47:48 122  ----
15:47:48 123  	  procedure ext_rcn_cpt_excpt_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 124  ----
15:47:48 125  --------------------------------------------------------------------------------
15:47:48 126  ----
15:47:48 127  	  procedure ext_rcn_cpt_dpst_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 128  ----
15:47:48 129  --------------------------------------------------------------------------------
15:47:48 130  ----
15:47:48 131  	  procedure ext_rcn_cpt_chgbk_act_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 132  ----
15:47:48 133  --------------------------------------------------------------------------------
15:47:48 134  ----
15:47:48 135  	  procedure ext_rcn_pp_sttlmnt(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 136  ----
15:47:48 137  --------------------------------------------------------------------------------
15:47:48 138  ----
15:47:48 139  	  procedure ext_rcn_pp_dispute(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 140  ----
15:47:48 141  --------------------------------------------------------------------------------
15:47:48 142  ----
15:47:48 143  	  procedure ext_rcn_pp_trns_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 144  ----
15:47:48 145  --------------------------------------------------------------------------------
15:47:48 146  ----
15:47:48 147  	  procedure ext_rcn_amex_chargeback(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 148  ----
15:47:48 149  --------------------------------------------------------------------------------
15:47:48 150  ----
15:47:48 151  	  procedure ext_paypal(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 152  ----
15:47:48 153  --------------------------------------------------------------------------------
15:47:48 154  ----
15:47:48 155  	  procedure ext_address(in_start_date date, in_end_date date, out_cursor out sys_refcursor);
15:47:48 156  ----
15:47:48 157  --------------------------------------------------------------------------------
15:47:48 158  ----
15:47:48 159  /**/
15:47:48 160  END PROCS_REPORTING;
15:47:48 161  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.11
15:47:48 SQL> 
15:47:48 SQL> prompt Compiling Package PROCS_REPORTING_1A
Compiling Package PROCS_REPORTING_1A
15:47:48 SQL> 
15:47:48 SQL> whenever sqlerror exit failure
15:47:48 SQL> 
15:47:48 SQL> create or replace PACKAGE 	     "PROCS_REPORTING_1A" AS
15:47:48   2  
15:47:48   3  ----
15:47:48   4  --------------------------------------------------------------------------------
15:47:48   5  ----
15:47:48   6  	  function getDiscountAmount(in_line_item_id line_item.id%type)
15:47:48   7  	      return line_item.amount%type;
15:47:48   8  ----
15:47:48   9  --------------------------------------------------------------------------------
15:47:48  10  ----
15:47:48  11  	  function getRefundAmount(in_line_item_id line_item.id%type)
15:47:48  12  	      return line_item.amount%type;
15:47:48  13  ----
15:47:48  14  --------------------------------------------------------------------------------
15:47:48  15  ----
15:47:48  16  	  PROCEDURE EXTRACT_LINE_ITEMS(
15:47:48  17  	      in_lower_date_bound DATE,
15:47:48  18  	      in_upper_date_bound DATE,
15:47:48  19  	      out_lic_cur OUT sys_refcursor
15:47:48  20  	  );
15:47:48  21  ----
15:47:48  22  --------------------------------------------------------------------------------
15:47:48  23  ----
15:47:48  24  END PROCS_REPORTING_1A;
15:47:48  25  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.12
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_REPORTS
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_REPORTS_V22" AS
15:47:48   2  
15:47:48   3  FUNCTION GET_PRODUCT_NAMES(
15:47:48   4  	in_offer_id IN NUMBER
15:47:48   5  ) RETURN VARCHAR2;
15:47:48   6  
15:47:48   7  PROCEDURE GET_FULL_FLASH_REPORT_PURCH (
15:47:48   8  	in_start_date  IN DATE,
15:47:48   9  	in_end_date    IN DATE,
15:47:48  10  	out_result_set OUT SYS_REFCURSOR
15:47:48  11  );
15:47:48  12  
15:47:48  13  PROCEDURE GET_FLASH_REPORT_PURCHASES (
15:47:48  14  	in_offer_id	       IN NUMBER,
15:47:48  15  	in_start_date	       IN DATE,
15:47:48  16  	in_end_date	       IN DATE,
15:47:48  17  	out_new_purchasers_num OUT NUMBER,
15:47:48  18  	out_renewals_num       OUT NUMBER,
15:47:48  19  	out_product_names      OUT VARCHAR2,
15:47:48  20  	out_total_dollar_value OUT NUMBER,
15:47:48  21  	out_unique_purchasers  OUT NUMBER
15:47:48  22  );
15:47:48  23  
15:47:48  24  /*
15:47:48  25  FUNCTIONS FOR THE FLASH REPORT
15:47:48  26  */
15:47:48  27  
15:47:48  28  FUNCTION FLR_NEW_PURCHASERS_NUM (
15:47:48  29  	in_offer_id	       IN NUMBER,
15:47:48  30  	in_start_date	       IN DATE,
15:47:48  31  	in_end_date	       IN DATE
15:47:48  32  ) RETURN NUMBER;
15:47:48  33  
15:47:48  34  FUNCTION FLR_RENEWALS_NUM (
15:47:48  35  	in_offer_id	       IN NUMBER,
15:47:48  36  	in_start_date	       IN DATE,
15:47:48  37  	in_end_date	       IN DATE
15:47:48  38  ) RETURN NUMBER;
15:47:48  39  
15:47:48  40  FUNCTION FLR_TOTAL_DOLLAR_VALUE (
15:47:48  41  	in_offer_id	       IN NUMBER,
15:47:48  42  	in_start_date	       IN DATE,
15:47:48  43  	in_end_date	       IN DATE
15:47:48  44  ) RETURN NUMBER;
15:47:48  45  
15:47:48  46  FUNCTION FLR_UNIQUE_PURCHASERS (
15:47:48  47  	in_offer_id	       IN NUMBER,
15:47:48  48  	in_start_date	       IN DATE,
15:47:48  49  	in_end_date	       IN DATE
15:47:48  50  ) RETURN NUMBER;
15:47:48  51  
15:47:48  52  END PROCS_REPORTS_V22;
15:47:48  53  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_SUBSCRIPTION
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_SUBSCRIPTION_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE START_GRACE_BY_INVOICE_ID(
15:47:48   4  	in_invoice_id	     IN LICENSE.INVOICE_ID%TYPE,
15:47:48   5  	in_updater	     IN VARCHAR2,
15:47:48   6  	in_duration_in_hours IN NUMBER
15:47:48   7  );
15:47:48   8  
15:47:48   9  PROCEDURE STOP_GRACE_BY_INVOICE_ID(
15:47:48  10  	in_invoice_id IN LICENSE.INVOICE_ID%TYPE,
15:47:48  11  	in_updater    IN VARCHAR2
15:47:48  12  );
15:47:48  13  
15:47:48  14  PROCEDURE START_SUBSCRIPTION_CREATION (
15:47:48  15  	in_group_id	      IN NUMBER,
15:47:48  16  	in_created_by	      IN VARCHAR2,
15:47:48  17  	in_offer_chain_id     IN NUMBER,
15:47:48  18  	in_instrument_type_id IN NUMBER,
15:47:48  19  	in_instrument_id      IN NUMBER,
15:47:48  20  	in_agent_id	      IN NUMBER,
15:47:48  21  	in_note 	      IN VARCHAR2,
15:47:48  22  	out_subscription_id   OUT NUMBER,
15:47:48  23  	out_invoice_id	      OUT NUMBER,
15:47:48  24  	out_new_license_id    OUT NUMBER,
15:47:48  25  	in_check_dupe_products	 IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.TRUE
15:47:48  26  );
15:47:48  27  
15:47:48  28  PROCEDURE FINALIZE_SUBSCRIPTION_CREATION (
15:47:48  29  	in_subscription_id    IN NUMBER,
15:47:48  30  	in_invoice_id	      IN NUMBER,
15:47:48  31  	in_instrument_type_id IN NUMBER,
15:47:48  32  	in_instrument_id      IN NUMBER,
15:47:48  33  	in_created_by	      IN VARCHAR2
15:47:48  34  );
15:47:48  35  
15:47:48  36  PROCEDURE SUSPEND_SUBSCRIPTION(
15:47:48  37  /*
15:47:48  38  Throws exceptions:
15:47:48  39  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  40  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48  41  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  42  */
15:47:48  43  	  in_subs_id	IN NUMBER ,
15:47:48  44  	  in_updated_by IN VARCHAR2
15:47:48  45  );
15:47:48  46  
15:47:48  47  PROCEDURE REACTIVATE_SUBSCRIPTION (
15:47:48  48  	in_subscription_id IN  NUMBER,
15:47:48  49  	in_updated_by	   IN  VARCHAR2
15:47:48  50  );
15:47:48  51  
15:47:48  52  PROCEDURE GET_SUBSCRIPTION_INFO (
15:47:48  53  /*
15:47:48  54  Throws exceptions:
15:47:48  55  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  56  */
15:47:48  57  	  in_subscription_id IN  NUMBER,
15:47:48  58  	  out_result_set      OUT SYS_REFCURSOR
15:47:48  59  );
15:47:48  60  
15:47:48  61  PROCEDURE GET_SUBSCRIPTION_INVOICES (
15:47:48  62  /*
15:47:48  63  Throws exceptions:
15:47:48  64  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:48  65  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  66  */
15:47:48  67  	in_subscription_id  IN	NUMBER,
15:47:48  68  	out_result_set	    OUT SYS_REFCURSOR
15:47:48  69  );
15:47:48  70  
15:47:48  71  PROCEDURE GET_SUBSCRIPTION_NOTES (
15:47:48  72  /*
15:47:48  73  Throws exceptions:
15:47:48  74  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  75  */
15:47:48  76  	in_subscription_id  IN	NUMBER,
15:47:48  77  	out_result_set	    OUT SYS_REFCURSOR
15:47:48  78  );
15:47:48  79  
15:47:48  80  PROCEDURE ANNOTATE_SUBSCRIPTION (
15:47:48  81  /*
15:47:48  82  Throws exceptions:
15:47:48  83  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:48  84  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  85  */
15:47:48  86  	in_subscription_id IN  NUMBER,
15:47:48  87  	in_agent_id	   IN  NUMBER,
15:47:48  88  	in_note 	   IN  VARCHAR2,
15:47:48  89  	in_created_by	   IN  VARCHAR2
15:47:48  90  );
15:47:48  91  
15:47:48  92  PROCEDURE GET_CANCEL_REASONS (
15:47:48  93  	out_result_set OUT    SYS_REFCURSOR
15:47:48  94  );
15:47:48  95  
15:47:48  96  FUNCTION GET_RENEWAL_DATE (
15:47:48  97  /*
15:47:48  98  Throws exceptions:
15:47:48  99  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 100  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 101  */
15:47:48 102  	in_subscription_id in NUMBER
15:47:48 103  ) RETURN DATE;
15:47:48 104  
15:47:48 105  FUNCTION GET_RECENT_CHARGE (
15:47:48 106  /*
15:47:48 107  Throws exceptions:
15:47:48 108  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 109  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 110  */
15:47:48 111  	in_subscription_id IN NUMBER
15:47:48 112  ) RETURN NUMBER;
15:47:48 113  
15:47:48 114  FUNCTION GET_BILLING_CYCLE (
15:47:48 115  /*
15:47:48 116  Throws exceptions:
15:47:48 117  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 118  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 119  */
15:47:48 120  	in_subscription_id IN NUMBER
15:47:48 121  ) RETURN VARCHAR2;
15:47:48 122  
15:47:48 123  PROCEDURE REFUND_SUBSCRIPTION (
15:47:48 124  /*
15:47:48 125  Throws exceptions:
15:47:48 126  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 127  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 128  */
15:47:48 129  	in_subscription_id IN NUMBER,
15:47:48 130  	in_invoice_id	   IN NUMBER,
15:47:48 131  	in_refund_amount   IN NUMBER,
15:47:48 132  	in_note 	   IN VARCHAR2,
15:47:48 133  	in_created_by	   IN VARCHAR2,
15:47:48 134  	out_charge_id	   OUT NUMBER
15:47:48 135  );
15:47:48 136  
15:47:48 137  PROCEDURE ADD_SUBSCRIPTION_EXTENSION (
15:47:48 138  /*
15:47:48 139  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 140  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48 141  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 142  */
15:47:48 143  	in_subscription_id	IN NUMBER,
15:47:48 144  	in_effective_start_date IN DATE,
15:47:48 145  	in_effective_end_date	IN DATE,
15:47:48 146  	in_note 		IN VARCHAR2,
15:47:48 147  	in_updated_by		IN VARCHAR2
15:47:48 148  );
15:47:48 149  
15:47:48 150  FUNCTION CALC_SUBSCRIPTION_END_DATE (
15:47:48 151  /*
15:47:48 152  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 153  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48 154  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 155  Returns:
15:47:48 156  NULL if it is impossible to calculate end date (for example,
15:47:48 157  	offer chain includes offer with infinity recurrences number)
15:47:48 158  DATE else
15:47:48 159  */
15:47:48 160  	in_subscription_id IN NUMBER
15:47:48 161  ) RETURN DATE;
15:47:48 162  
15:47:48 163  PROCEDURE HAS_FUTURE_LICENSE (
15:47:48 164  /*
15:47:48 165  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 166  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 167  */
15:47:48 168  	in_license_id IN  NUMBER,
15:47:48 169  	out_result    OUT NUMBER
15:47:48 170  );
15:47:48 171  
15:47:48 172  PROCEDURE CLOSE_SUBSCRIPTION (
15:47:48 173  	in_subscription_id IN NUMBER,
15:47:48 174  	in_updated_by	   IN VARCHAR2
15:47:48 175  );
15:47:48 176  
15:47:48 177  PROCEDURE GET_GROUP_ID_BY_SBSCRPTN_ID (
15:47:48 178  	in_subscription_id IN NUMBER,
15:47:48 179  	out_group_id	   OUT NUMBER
15:47:48 180  );
15:47:48 181  
15:47:48 182  PROCEDURE GET_SUBSCRIPTION_PRODUCTS (
15:47:48 183  /*
15:47:48 184  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 185  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 186  */
15:47:48 187  	in_subscription_id IN NUMBER,
15:47:48 188  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 189  );
15:47:48 190  
15:47:48 191  PROCEDURE UPDATE_SUBSCRIPTION_STATUS (
15:47:48 192  /*
15:47:48 193  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 194  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 195  */
15:47:48 196  	in_subscription_id	  IN SUBSCRIPTION.ID%TYPE,
15:47:48 197  	in_subscription_status_id IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE,
15:47:48 198  	in_updated_by		  IN SUBSCRIPTION.UPDATED_BY%TYPE
15:47:48 199  );
15:47:48 200  
15:47:48 201  PROCEDURE GET_ACTIVE_INVOICES_IDS (
15:47:48 202  /*
15:47:48 203  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 204  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 205  */
15:47:48 206  --  in_subscription_id IN SUBSCRIPTION.ID%TYPE,
15:47:48 207  	in_subscription_id IN NUMBER,
15:47:48 208  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 209  );
15:47:48 210  
15:47:48 211  PROCEDURE CANCEL_SUBSCRIPTION_INVOICE (
15:47:48 212  /*
15:47:48 213  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 214  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 215  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48 216  */
15:47:48 217  	in_invoice_id	     IN NUMBER,
15:47:48 218  	in_updated_by	     IN VARCHAR2,
15:47:48 219  	in_refundable	     IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE
15:47:48 220  );
15:47:48 221  
15:47:48 222  PROCEDURE FINALIZE_CANCELATION (
15:47:48 223  /*
15:47:48 224  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 225  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 226  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48 227  */
15:47:48 228  --  in_subscription_id	IN SUBSCRIPTION.ID%TYPE,
15:47:48 229  --  in_cancelation_reason IN SUBSCRIPTION_CANCEL_REASON.VALUE%TYPE,
15:47:48 230  --  in_cancelation_date	IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
15:47:48 231  --  in_note		IN SUBSCRIPTION_NOTE.NOTE%TYPE,
15:47:48 232  --  in_agent_id		IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
15:47:48 233  --  in_updated_by 	IN SUBSCRIPTION.UPDATED_BY%TYPE
15:47:48 234  	in_subscription_id    IN NUMBER,
15:47:48 235  	in_cancelation_reason IN VARCHAR2,
15:47:48 236  	in_cancelation_date   IN DATE,
15:47:48 237  	in_note 	      IN VARCHAR2,
15:47:48 238  	in_agent_id	      IN NUMBER,
15:47:48 239  	in_updated_by	      IN VARCHAR2
15:47:48 240  );
15:47:48 241  
15:47:48 242  PROCEDURE FINALIZE_FALSE_START (
15:47:48 243  /*
15:47:48 244  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 245  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 246  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48 247  */
15:47:48 248  --  in_subscription_id	IN SUBSCRIPTION.ID%TYPE,
15:47:48 249  --  in_cancelation_date	IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
15:47:48 250  --  in_note		IN SUBSCRIPTION_NOTE.NOTE%TYPE,
15:47:48 251  --  in_agent_id		IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
15:47:48 252  --  in_updated_by 	IN SUBSCRIPTION.UPDATED_BY%TYPE
15:47:48 253  	in_subscription_id    IN NUMBER,
15:47:48 254  	in_cancelation_date   IN DATE,
15:47:48 255  	in_note 	      IN VARCHAR2,
15:47:48 256  	in_agent_id	      IN NUMBER,
15:47:48 257  	in_updated_by	      IN VARCHAR2
15:47:48 258  );
15:47:48 259  
15:47:48 260  FUNCTION IS_SUBSCRIPTION_CANCELABLE (
15:47:48 261  	in_subscription_id IN NUMBER
15:47:48 262  ) RETURN NUMBER;
15:47:48 263  
15:47:48 264  PROCEDURE GET_SUBSCR_PROD_OFFERRINGS (
15:47:48 265  /*
15:47:48 266  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 267  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 268  */
15:47:48 269  	in_subscription_id IN NUMBER,
15:47:48 270  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 271  );
15:47:48 272  
15:47:48 273  PROCEDURE RETRIEVE_SUB_PROD_OFFER (
15:47:48 274  /*
15:47:48 275  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 276  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 277  */
15:47:48 278  	in_subscription_id IN NUMBER,
15:47:48 279  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 280  );
15:47:48 281  
15:47:48 282  PROCEDURE GET_SUBSCR_LIC_OFFER (
15:47:48 283  /*
15:47:48 284  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 285  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 286  */
15:47:48 287  	in_subscription_id IN NUMBER,
15:47:48 288  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 289  );
15:47:48 290  
15:47:48 291  PROCEDURE ARE_REFUNDS_PENDING_FOR_SUBSCR (
15:47:48 292  /*
15:47:48 293  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 294  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 295  */
15:47:48 296  	in_subscription_id IN NUMBER,
15:47:48 297  	out_result	   OUT NUMBER
15:47:48 298  );
15:47:48 299  
15:47:48 300  PROCEDURE GET_EXISTING_SUBSCR_NUMBER (
15:47:48 301  /*
15:47:48 302  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 303  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 304  */
15:47:48 305  	in_group_id	   IN NUMBER,
15:47:48 306  	in_offer_chain_id  IN NUMBER,
15:47:48 307  	out_result	   out number
15:47:48 308  );
15:47:48 309  
15:47:48 310  PROCEDURE GET_EXISTING_SUBSCR_IDS (
15:47:48 311  /*
15:47:48 312  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 313  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 314  */
15:47:48 315  	in_group_id	   IN NUMBER,
15:47:48 316  	in_offer_chain_id  IN NUMBER,
15:47:48 317  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 318  );
15:47:48 319  
15:47:48 320  PROCEDURE ADD_META_DATA (
15:47:48 321  /*
15:47:48 322  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 323  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 324  */
15:47:48 325  	in_subscription_id IN NUMBER,
15:47:48 326  	in_name 	   IN VARCHAR2,
15:47:48 327  	in_value	   IN VARCHAR2,
15:47:48 328  	in_created_by	   IN VARCHAR2
15:47:48 329  );
15:47:48 330  
15:47:48 331  PROCEDURE GET_SUBSCRIPTIONS_META_DATA (
15:47:48 332  /*
15:47:48 333  APP_EXCEPTION_CODES_V22.INVALID_PARAMETER
15:47:48 334  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 335  */
15:47:48 336  	in_subscriptions_ids IN core_owner.NUMBER_TABLE,
15:47:48 337  	out_result_set	     OUT SYS_REFCURSOR
15:47:48 338  );
15:47:48 339  
15:47:48 340  PROCEDURE GET_SUBS_BY_TRNS_ORDER_ID (
15:47:48 341  /*
15:47:48 342  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 343  */
15:47:48 344  	in_order_id	   IN TRANSACTION.ORDER_ID%TYPE,
15:47:48 345  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 346  );
15:47:48 347  
15:47:48 348  PROCEDURE GET_OPEN_CHARGES_BY_SUBID
15:47:48 349   (
15:47:48 350  /*
15:47:48 351  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 352  */
15:47:48 353  	in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
15:47:48 354  	out_result_set	    OUT SYS_REFCURSOR
15:47:48 355  );
15:47:48 356  
15:47:48 357  FUNCTION GET_GIFT_CERT_ID_BY_SUB_ID (
15:47:48 358  	in_subscription_id IN SUBSCRIPTION.ID%TYPE
15:47:48 359  ) RETURN NUMBER;
15:47:48 360  
15:47:48 361  FUNCTION GET_GIFT_CERT_CODE_BY_SUB_ID (
15:47:48 362  	in_subscription_id IN SUBSCRIPTION.ID%TYPE
15:47:48 363  ) RETURN VARCHAR2;
15:47:48 364  
15:47:48 365  
15:47:48 366  
15:47:48 367  PROCEDURE GET_ACTIVE_MEU_SUBS (
15:47:48 368  	out_result_set	    OUT SYS_REFCURSOR
15:47:48 369  );
15:47:48 370  
15:47:48 371  PROCEDURE GET_EARLIEST_ACTIVE_OFFER_ID (
15:47:48 372  	in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
15:47:48 373  	out_offer_id	    OUT LICENSE.ID%TYPE
15:47:48 374  );
15:47:48 375  
15:47:48 376  PROCEDURE GET_EARLIEST_ACTIVE_LICENSE_ID (
15:47:48 377  	in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
15:47:48 378  	out_license_id	    OUT LICENSE.ID%TYPE
15:47:48 379  );
15:47:48 380  
15:47:48 381  PROCEDURE GET_ACT_SUBS_W_CPT_CHARGEBACKS (
15:47:48 382  	out_result_set	    OUT SYS_REFCURSOR
15:47:48 383  );
15:47:48 384  
15:47:48 385  PROCEDURE GET_ACT_SUBS_W_PP_CHARGEBACKS (
15:47:48 386  	out_result_set	    OUT SYS_REFCURSOR
15:47:48 387  );
15:47:48 388  
15:47:48 389  PROCEDURE GET_ACT_SUBS_W_AMEX_CB (
15:47:48 390  	out_result_set	    OUT SYS_REFCURSOR
15:47:48 391  );
15:47:48 392  
15:47:48 393  PROCEDURE GET_GRACE_PERIOD_SUB_REGIS (
15:47:48 394  	in_max_days_until_close IN NUMBER,
15:47:48 395  	in_num_subs_to_fetch	IN NUMBER,
15:47:48 396  	out_result_set		OUT SYS_REFCURSOR
15:47:48 397  );
15:47:48 398  
15:47:48 399  
15:47:48 400  END PROCS_SUBSCRIPTION_V22;
15:47:48 401  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.06
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_SUBSCRIPTION_CRU
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_SUBSCRIPTION_CRU_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_SUBSCRIPTION(
15:47:48   4  	out_subscription_id	     OUT SUBSCRIPTION.ID%TYPE,
15:47:48   5  	in_subscription_id	     IN SUBSCRIPTION.ID%TYPE DEFAULT NULL,
15:47:48   6  	in_suspend_date 	     IN SUBSCRIPTION.SUSPEND_DATE%TYPE DEFAULT NULL,
15:47:48   7  	in_account_id		     IN SUBSCRIPTION.ACCOUNT_ID%TYPE,
15:47:48   8  	in_purchase_date	     IN SUBSCRIPTION.PURCHASE_DATE%TYPE,
15:47:48   9  	in_offer_chain_id	     IN SUBSCRIPTION.OFFER_CHAIN_ID%TYPE,
15:47:48  10  	in_termination_date	     IN SUBSCRIPTION.TERMINATION_DATE%TYPE DEFAULT NULL,
15:47:48  11  	in_days_remainning_ajustment IN SUBSCRIPTION.DAYS_REMAINING_ADJUSTMENT%TYPE DEFAULT NULL,
15:47:48  12  	in_sct_id		     IN SUBSCRIPTION.SCT_ID%TYPE DEFAULT NULL,
15:47:48  13  	in_created_by		     IN SUBSCRIPTION.CREATED_BY%TYPE,
15:47:48  14  	in_instrument_type_id	     IN SUBSCRIPTION.INSTRUMENT_TYPE_ID%TYPE,
15:47:48  15  	in_instrument_id	     IN SUBSCRIPTION.INSTRUMENT_ID%TYPE,
15:47:48  16  	in_subscription_status_id    IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE,
15:47:48  17  	in_cancelation_date	     IN SUBSCRIPTION.CANCELLATION_DATE%TYPE DEFAULT NULL,
15:47:48  18  	in_reactivation_date	     IN SUBSCRIPTION.REACTIVATION_DATE%TYPE DEFAULT NULL
15:47:48  19  );
15:47:48  20  
15:47:48  21  PROCEDURE UPDATE_SUBSCRIPTION(
15:47:48  22  	in_subscription_id	     IN SUBSCRIPTION.ID%TYPE,
15:47:48  23  	in_suspend_date 	     IN SUBSCRIPTION.SUSPEND_DATE%TYPE DEFAULT NULL,
15:47:48  24  	in_purchase_date	     IN SUBSCRIPTION.PURCHASE_DATE%TYPE DEFAULT NULL,
15:47:48  25  	in_termination_date	     IN SUBSCRIPTION.TERMINATION_DATE%TYPE DEFAULT NULL,
15:47:48  26  	in_days_remainning_ajustment IN SUBSCRIPTION.DAYS_REMAINING_ADJUSTMENT%TYPE DEFAULT NULL,
15:47:48  27  	in_sct_id		     IN SUBSCRIPTION.SCT_ID%TYPE DEFAULT NULL,
15:47:48  28  	in_updated_by		     IN SUBSCRIPTION.CREATED_BY%TYPE DEFAULT NULL,
15:47:48  29  	in_instrument_type_id	     IN SUBSCRIPTION.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
15:47:48  30  	in_instrument_id	     IN SUBSCRIPTION.INSTRUMENT_ID%TYPE DEFAULT NULL,
15:47:48  31  	in_subscription_status_id    IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE DEFAULT NULL,
15:47:48  32  	in_cancelation_date	     IN SUBSCRIPTION.CANCELLATION_DATE%TYPE DEFAULT NULL,
15:47:48  33  	in_reactivation_date	     IN SUBSCRIPTION.REACTIVATION_DATE%TYPE DEFAULT NULL
15:47:48  34  );
15:47:48  35  
15:47:48  36  PROCEDURE CREATE_SUBSCRIPTION_NOTE (
15:47:48  37  	inout_subscription_note_id IN OUT SUBSCRIPTION_NOTE.ID%TYPE,
15:47:48  38  	in_agent_id		   IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
15:47:48  39  	in_subscription_id	   IN SUBSCRIPTION_NOTE.ID%TYPE,
15:47:48  40  	in_note 		   IN SUBSCRIPTION_NOTE.NOTE%TYPE,
15:47:48  41  	in_created_by		   IN SUBSCRIPTION_NOTE.CREATED_BY%TYPE
15:47:48  42  );
15:47:48  43  
15:47:48  44  END PROCS_SUBSCRIPTION_CRU_V22;
15:47:48  45  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_SYSTEM
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_SYSTEM_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE INCREMENT_VERSION;
15:47:48   4  
15:47:48   5  PROCEDURE CHECK_VERSION(
15:47:48   6  	  in_vers    IN NUMBER,
15:47:48   7  	  out_result OUT NUMBER
15:47:48   8  );
15:47:48   9  
15:47:48  10  END PROCS_SYSTEM_V22;
15:47:48  11  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_TAXES
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_TAXES_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE ADD_TAX (
15:47:48   4  	in_tax_type_id		 IN NUMBER,
15:47:48   5  	in_calculated_amount	 IN NUMBER,
15:47:48   6  	in_created_by		 IN VARCHAR2,
15:47:48   7  	in_line_item_id 	 IN NUMBER,
15:47:48   8  	in_effective_rate	 IN VARCHAR2,
15:47:48   9  	in_taxable_amount	 IN NUMBER,
15:47:48  10  	in_tax_rule_id		 IN NUMBER,
15:47:48  11  	in_jurisdiction_level_id IN NUMBER,
15:47:48  12  	in_jurisdiction_name	 IN VARCHAR2,
15:47:48  13  	in_jurisdiction_id	 IN VARCHAR2,
15:47:48  14  	in_ext_tax_type 	 IN VARCHAR2,
15:47:48  15  	in_ext_result		 IN VARCHAR2,
15:47:48  16  	in_imposition_type	 IN VARCHAR2,
15:47:48  17  	in_imposition		 IN VARCHAR2
15:47:48  18  );
15:47:48  19  
15:47:48  20  PROCEDURE CHECK_COUNTRY_FOR_EXCLUSION (
15:47:48  21  	in_country_code IN CHAR,
15:47:48  22  	in_check_date IN DATE,
15:47:48  23  	out_is_founded	OUT NUMBER -- GLOBAL_CONSTANT.TRUE of GLOBAL_CONSTANTS_V22.FALSE
15:47:48  24  );
15:47:48  25  
15:47:48  26  PROCEDURE GET_TAX_CATEGORY (
15:47:48  27  	in_tax_category_id IN NUMBER,
15:47:48  28  	out_result_set	   OUT SYS_REFCURSOR
15:47:48  29  );
15:47:48  30  
15:47:48  31  END PROCS_TAXES_V22;
15:47:48  32  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.03
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_TAXES_CRU
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_TAXES_CRU_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_TAX (
15:47:48   4  	inout_tax_id		 IN OUT NUMBER,
15:47:48   5  	in_tax_type_id		 IN NUMBER,
15:47:48   6  	in_calculated_amount	 IN NUMBER,
15:47:48   7  	in_created_by		 IN VARCHAR2,
15:47:48   8  	in_line_item_id 	 IN NUMBER,
15:47:48   9  	in_effective_rate	 IN VARCHAR2,
15:47:48  10  	in_taxable_amount	 IN NUMBER,
15:47:48  11  	in_tax_rule_id		 IN NUMBER,
15:47:48  12  	in_jurisdiction_level_id IN NUMBER,
15:47:48  13  	in_jurisdiction_name	 IN VARCHAR2,
15:47:48  14  	in_jurisdiction_id	 IN VARCHAR2,
15:47:48  15  	in_ext_tax_type 	 IN VARCHAR2,
15:47:48  16  	in_ext_result		 IN VARCHAR2,
15:47:48  17  	in_imposition_type	 IN VARCHAR2,
15:47:48  18  	in_imposition		 IN VARCHAR2
15:47:48  19  );
15:47:48  20  
15:47:48  21  END PROCS_TAXES_CRU_V22;
15:47:48  22  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_TEST
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_TEST_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE TEST_CLEAR_ALL;
15:47:48   4  PROCEDURE TEST_CLEAR_PRODUCTS;
15:47:48   5  
15:47:48   6  /********************************************/
15:47:48   7  
15:47:48   8  PROCEDURE TEST_GET_ACCOUNT (
15:47:48   9  	in_group_id	IN NUMBER,
15:47:48  10  	out_result_set	OUT SYS_REFCURSOR
15:47:48  11  );
15:47:48  12  
15:47:48  13  /********************************************/
15:47:48  14  
15:47:48  15  PROCEDURE TEST_GET_SUBSCRIPTION (
15:47:48  16  	in_subscription_id IN NUMBER,
15:47:48  17  	out_result_set	   OUT SYS_REFCURSOR
15:47:48  18  );
15:47:48  19  
15:47:48  20  /*********************************************/
15:47:48  21  
15:47:48  22  PROCEDURE TEST_DELETE_INVOICE (
15:47:48  23  	in_invoice_id IN NUMBER
15:47:48  24  );
15:47:48  25  
15:47:48  26  PROCEDURE TEST_DELETE_USER_ACCOUNT (
15:47:48  27  	in_group_id IN NUMBER
15:47:48  28  );
15:47:48  29  
15:47:48  30  PROCEDURE TEST_DELETE_USER_ACCOUNTS  (
15:47:48  31  	in_start_group_id IN NUMBER,
15:47:48  32  	in_end_group_id   IN NUMBER
15:47:48  33  );
15:47:48  34  
15:47:48  35  /**********************************************/
15:47:48  36  
15:47:48  37  FUNCTION TEST_IS_INVOICE_EXISTS(
15:47:48  38  /*
15:47:48  39  1 - exists
15:47:48  40  0 - not exists
15:47:48  41  */
15:47:48  42  	in_invoice_id IN NUMBER
15:47:48  43  ) RETURN NUMBER;
15:47:48  44  
15:47:48  45  PROCEDURE TEST_GET_INVOICE_INFO (
15:47:48  46  	in_invoice_id  IN NUMBER,
15:47:48  47  	out_result_set OUT SYS_REFCURSOR
15:47:48  48  );
15:47:48  49  
15:47:48  50  /******************************************************************************/
15:47:48  51  
15:47:48  52  PROCEDURE TEST_DELETE_OFFER_CHAIN(
15:47:48  53  	in_offer_chain_id in number
15:47:48  54  );
15:47:48  55  
15:47:48  56  END PROCS_TEST_V22;
15:47:48  57  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_TRANSACTION
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_TRANSACTION_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_TRANSACTION (
15:47:48   4  /*
15:47:48   5  Throws exceptions:
15:47:48   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48   8  */
15:47:48   9  	in_transaction_id	  IN NUMBER,
15:47:48  10  	in_status_id		  IN NUMBER,
15:47:48  11  	in_amount		  IN NUMBER,
15:47:48  12  	in_created_by		  IN VARCHAR2,
15:47:48  13  	in_order_id		  IN VARCHAR2,
15:47:48  14  	in_is_refund		  IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE,
15:47:48  15  	in_transaction_type_code  IN VARCHAR2 DEFAULT NULL,
15:47:48  16  	out_transaction_id	  OUT NUMBER
15:47:48  17  );
15:47:48  18  
15:47:48  19  PROCEDURE CREATE_TRANSACTION_ATTEMPT (
15:47:48  20  /*
15:47:48  21  Throws exceptions:
15:47:48  22  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  23  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  24  */
15:47:48  25  	in_transaction_id	   IN NUMBER,
15:47:48  26  	in_trans_attempt_status    IN NUMBER,
15:47:48  27  	in_external_status_code    IN VARCHAR2,
15:47:48  28  	in_external_status_message IN VARCHAR2,
15:47:48  29  	in_created_by		   IN VARCHAR2,
15:47:48  30  	in_ext_transaction_id	   IN VARCHAR2,
15:47:48  31  	out_transaction_attempt_id OUT NUMBER
15:47:48  32  );
15:47:48  33  
15:47:48  34  PROCEDURE UPDATE_TRANSACTION_STATUS (
15:47:48  35  /*
15:47:48  36  Throws exceptions:
15:47:48  37  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  38  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  39  */
15:47:48  40  	in_transaction_id	 IN NUMBER,
15:47:48  41  	in_updated_by		 IN VARCHAR2,
15:47:48  42  	in_transaction_status_id IN NUMBER
15:47:48  43  );
15:47:48  44  
15:47:48  45  PROCEDURE UPDATE_TRANSACTION_SETTLED (
15:47:48  46  /*
15:47:48  47  Throws exceptions:
15:47:48  48  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  49  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  50  */
15:47:48  51  	in_transaction_id	 IN NUMBER,
15:47:48  52  	in_updated_by		 IN VARCHAR2,
15:47:48  53  	in_is_settled		 IN NUMBER
15:47:48  54  );
15:47:48  55  
15:47:48  56  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_TIME (
15:47:48  57  /*
15:47:48  58  Throws exceptions:
15:47:48  59  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  60  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  61  */
15:47:48  62  	in_transaction_attempt_id IN NUMBER,
15:47:48  63  	in_updated_by		  IN VARCHAR2
15:47:48  64  );
15:47:48  65  
15:47:48  66  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_STATUS (
15:47:48  67  /*
15:47:48  68  Throws exceptions:
15:47:48  69  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  70  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  71  */
15:47:48  72  	in_transaction_attempt_id     IN NUMBER,
15:47:48  73  	in_transaction_attempt_status IN NUMBER
15:47:48  74  );
15:47:48  75  
15:47:48  76  PROCEDURE GET_TRNSCTN_ATTEMPTS_BY_STATUS (
15:47:48  77  /*
15:47:48  78  Throws exceptions:
15:47:48  79  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  80  */
15:47:48  81  	in_transaction_id	      IN NUMBER,
15:47:48  82  	in_transaction_attempt_status IN NUMBER,
15:47:48  83  	out_result_set		      OUT SYS_REFCURSOR
15:47:48  84  );
15:47:48  85  
15:47:48  86  PROCEDURE UPDATE_TRANSACTION_ATTEMPT_INF (
15:47:48  87  /*
15:47:48  88  Throws exceptions:
15:47:48  89  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  90  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  91  */
15:47:48  92  	in_transaction_attempt_id IN NUMBER,
15:47:48  93  	in_ext_status_code	  IN VARCHAR2,
15:47:48  94  	in_ext_status_message	  IN VARCHAR2,
15:47:48  95  	in_ext_transaction_id	  IN VARCHAR2
15:47:48  96  );
15:47:48  97  
15:47:48  98  PROCEDURE GET_FAILED_ATTEMPTS_NUMBER (
15:47:48  99  /*
15:47:48 100  Throws exceptions:
15:47:48 101  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 102  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 103  */
15:47:48 104  	in_transaction_id IN  NUMBER,
15:47:48 105  	out_attempts_num  OUT NUMBER
15:47:48 106  );
15:47:48 107  
15:47:48 108  PROCEDURE GET_TRANSACTION_AMOUNT (
15:47:48 109  /*
15:47:48 110  Throws exceptions:
15:47:48 111  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 112  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 113  */
15:47:48 114  	in_transaction_id      IN  NUMBER,
15:47:48 115  	out_transaction_amount OUT NUMBER
15:47:48 116  );
15:47:48 117  
15:47:48 118  PROCEDURE GET_TRANSACTIONS_BY_CHARGE_ID (
15:47:48 119  /*
15:47:48 120  Throws exceptions:
15:47:48 121  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 122  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 123  */
15:47:48 124  	in_charge_id   IN  NUMBER,
15:47:48 125  	out_result_set OUT SYS_REFCURSOR
15:47:48 126  );
15:47:48 127  
15:47:48 128  PROCEDURE GET_TRANSACTION_BY_ORDER_ID (
15:47:48 129  /*
15:47:48 130  Throws exceptions:
15:47:48 131  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 132  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 133  */
15:47:48 134  	in_order_id   IN  TRANSACTION.ORDER_ID%TYPE,
15:47:48 135  	out_result_set OUT SYS_REFCURSOR
15:47:48 136  );
15:47:48 137  
15:47:48 138  PROCEDURE GET_TRANSACTIONS_BY_ORDER_ID (
15:47:48 139  /*
15:47:48 140  Throws exceptions:
15:47:48 141  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 142  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 143  */
15:47:48 144  	in_order_id   IN  TRANSACTION.ORDER_ID%TYPE,
15:47:48 145  	out_result_set OUT SYS_REFCURSOR
15:47:48 146  );
15:47:48 147  
15:47:48 148  PROCEDURE GET_TRANSACTION_ATTEMPTS (
15:47:48 149  /*
15:47:48 150  Throws exceptions:
15:47:48 151  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 152  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 153  */
15:47:48 154  	in_transaction_id IN  NUMBER,
15:47:48 155  	out_result_set	  OUT SYS_REFCURSOR
15:47:48 156  );
15:47:48 157  
15:47:48 158  PROCEDURE RESERVE_TRANSACTION_ID (
15:47:48 159  /*
15:47:48 160  Throws exceptions:
15:47:48 161  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 162  */
15:47:48 163  	out_transaction_id OUT NUMBER
15:47:48 164  );
15:47:48 165  
15:47:48 166  PROCEDURE GET_TRANSACTION_BY_ID (
15:47:48 167  /*
15:47:48 168  Throws exceptions:
15:47:48 169  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 170  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 171  */
15:47:48 172  	in_transaction_id IN NUMBER,
15:47:48 173  	out_result_set	  OUT SYS_REFCURSOR
15:47:48 174  );
15:47:48 175  
15:47:48 176  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
15:47:48 177  /*
15:47:48 178  Throws exceptions:
15:47:48 179  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 180  APP_EXCEPTION_CODES_V22.INTRNAL_ERROR
15:47:48 181  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 182  */
15:47:48 183  	in_transaction_id IN TRANSACTION.ID%TYPE,
15:47:48 184  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
15:47:48 185  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
15:47:48 186  );
15:47:48 187  
15:47:48 188  PROCEDURE GET_CLOSED_REFUNDS_BY_INVOICE (
15:47:48 189  /*
15:47:48 190  Throws exceptions:
15:47:48 191  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 192  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 193  */
15:47:48 194  	in_invoice_id	IN  NUMBER,
15:47:48 195  	out_result_set OUT SYS_REFCURSOR
15:47:48 196  );
15:47:48 197  PROCEDURE IS_TRANSACTION_SUCCESSFULL (
15:47:48 198  /*
15:47:48 199  Throws exceptions:
15:47:48 200  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 201  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 202  */
15:47:48 203  	in_transaction_id IN  NUMBER,
15:47:48 204  	out_is_successfull  OUT NUMBER
15:47:48 205  );
15:47:48 206  
15:47:48 207  FUNCTION GET_TRANSACTION_TAX_AMOUNT (
15:47:48 208  	in_transaction_id IN NUMBER
15:47:48 209  ) RETURN NUMBER;
15:47:48 210  
15:47:48 211  FUNCTION GET_TRANSACTION_INTRL_TAXES (
15:47:48 212  	in_transaction_id IN NUMBER
15:47:48 213  ) RETURN NUMBER;
15:47:48 214  
15:47:48 215  -- norlov: #38796
15:47:48 216  PROCEDURE GET_TRANSACTIONS (
15:47:48 217  /*
15:47:48 218  Throws exceptions:
15:47:48 219  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 220  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 221  */
15:47:48 222  	in_group_id	      IN  NUMBER,
15:47:48 223  	in_invoice_id	      IN NUMBER DEFAULT NULL,
15:47:48 224  	in_subscription_id    IN NUMBER DEFAULT NULL,
15:47:48 225  	in_start_date	      IN TRANSACTION.CREATE_DATE%TYPE DEFAULT NULL,
15:47:48 226  	in_end_date	      IN TRANSACTION.CREATE_DATE%TYPE DEFAULT NULL,
15:47:48 227  	in_transaction_status IN NUMBER DEFAULT NULL,
15:47:48 228  	out_result_set	      OUT SYS_REFCURSOR
15:47:48 229  );
15:47:48 230  
15:47:48 231  FUNCTION IS_TRANSACTION_COLLECTED (
15:47:48 232  /*
15:47:48 233  Throws:
15:47:48 234  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 235  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 236  Returns:
15:47:48 237  GLOBAL_CONST.TRUE if transaction collected,
15:47:48 238  GLOBAL_CONST.FALSE else
15:47:48 239  */
15:47:48 240  	in_transaction_id IN NUMBER
15:47:48 241  ) RETURN NUMBER;
15:47:48 242  
15:47:48 243  PROCEDURE GET_NEXT_ATTEMPT_NUMBER (
15:47:48 244  /*
15:47:48 245  Throws exceptions:
15:47:48 246  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 247  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 248  */
15:47:48 249  	in_charge_id   in  number,
15:47:48 250  	out_attempt_count out number
15:47:48 251  );
15:47:48 252  
15:47:48 253  END PROCS_TRANSACTION_V22;
15:47:48 254  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.02
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PROCS_TRANSACTION_CRU
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PROCS_TRANSACTION_CRU_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_TRANSACTION (
15:47:48   4  	out_transaction_id	 OUT TRANSACTION.ID%TYPE,
15:47:48   5  	in_transaction_id	 IN TRANSACTION.ID%TYPE DEFAULT NULL,
15:47:48   6  	in_transaction_status_id IN TRANSACTION.TRANSACTION_STATUS_ID%TYPE,
15:47:48   7  	in_transaction_amount	 IN TRANSACTION.TRANSACTION_AMOUNT%TYPE,
15:47:48   8  	in_created_by		 IN TRANSACTION.CREATED_BY%TYPE,
15:47:48   9  	in_order_id		 IN TRANSACTION.ORDER_ID%TYPE,
15:47:48  10  	in_is_refund		 IN TRANSACTION.IS_REFUND%TYPE DEFAULT GLOBAL_CONSTANTS_V22.FALSE,
15:47:48  11  	in_transaction_type_code IN TRANSACTION.TRANSACTION_TYPE_CODE%TYPE DEFAULT NULL
15:47:48  12  );
15:47:48  13  
15:47:48  14  PROCEDURE UPDATE_TRANSACTION (
15:47:48  15  	in_transaction_id	 IN TRANSACTION.ID%TYPE,
15:47:48  16  	in_transaction_status_id IN TRANSACTION.TRANSACTION_STATUS_ID%TYPE DEFAULT NULL,
15:47:48  17  	in_transaction_amount	 IN TRANSACTION.TRANSACTION_AMOUNT%TYPE DEFAULT NULL,
15:47:48  18  	in_updated_by		 IN TRANSACTION.CREATED_BY%TYPE,
15:47:48  19  	in_order_id		 IN TRANSACTION.ORDER_ID%TYPE DEFAULT NULL,
15:47:48  20  	in_is_settled		 IN TRANSACTION.IS_SETTLED%TYPE DEFAULT NULL
15:47:48  21  );
15:47:48  22  
15:47:48  23  PROCEDURE READ_TRANSACTION (
15:47:48  24  	in_transaction_id IN TRANSACTION.ID%TYPE,
15:47:48  25  	out_result_set	  OUT SYS_REFCURSOR
15:47:48  26  );
15:47:48  27  
15:47:48  28  PROCEDURE CREATE_TRANSACTION_ATTEMPT(
15:47:48  29  	inout_transaction_attempt_id IN OUT TRANSACTION_ATTEMPT.ID%TYPE,
15:47:48  30  	in_transaction_id	     IN TRANSACTION_ATTEMPT.TRANSACTION_ID%TYPE,
15:47:48  31  	in_external_status_code      IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE%TYPE DEFAULT NULL,
15:47:48  32  	in_external_status_message   IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE%TYPE DEFAULT NULL,
15:47:48  33  	in_created_by		     IN TRANSACTION_ATTEMPT.CREATED_BY%TYPE,
15:47:48  34  	in_external_transaction_id   IN TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID%TYPE DEFAULT NULL,
15:47:48  35  	in_transaction_start_time    IN TRANSACTION_ATTEMPT.TRANSACTION_START_TIME%TYPE DEFAULT NULL,
15:47:48  36  	in_status_id		     IN TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID%TYPE
15:47:48  37  );
15:47:48  38  
15:47:48  39  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
15:47:48  40  /*
15:47:48  41  Throws exceptions:
15:47:48  42  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  43  APP_EXCEPTION_CODES_V22.INTRNAL_ERROR
15:47:48  44  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  45  */
15:47:48  46  	in_transaction_id IN TRANSACTION.ID%TYPE,
15:47:48  47  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
15:47:48  48  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
15:47:48  49  );
15:47:48  50  
15:47:48  51  PROCEDURE UPDATE_TRANSACTION_ATTEMPT (
15:47:48  52  	in_transaction_attempt_id  IN TRANSACTION_ATTEMPT.ID%TYPE,
15:47:48  53  	in_external_status_code    IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE%TYPE DEFAULT NULL,
15:47:48  54  	in_external_status_message IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE%TYPE DEFAULT NULL,
15:47:48  55  	in_external_transaction_id IN TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID%TYPE DEFAULT NULL,
15:47:48  56  	in_transaction_start_time  IN TRANSACTION_ATTEMPT.TRANSACTION_START_TIME%TYPE DEFAULT NULL,
15:47:48  57  	in_status_id		   IN TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID%TYPE DEFAULT NULL
15:47:48  58  );
15:47:48  59  
15:47:48  60  END PROCS_TRANSACTION_CRU_V22;
15:47:48  61  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PUBLIC_PROCS_BILLING
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_BILLING_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE GET_OFFER_CHAIN_BY_ID (
15:47:48   4  /*
15:47:48   5  Throws exceptions:
15:47:48   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48   8  */
15:47:48   9  	  in_offer_chain_id IN	 NUMBER,
15:47:48  10  	  out_result_set    OUT  SYS_REFCURSOR
15:47:48  11  );
15:47:48  12  
15:47:48  13  PROCEDURE GET_GC_ID_BY_PURCH_INVOICE_ID (
15:47:48  14  /*
15:47:48  15  Throws exceptions:
15:47:48  16  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  17  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  18  */
15:47:48  19  in_invoice_id IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:48  20  out_gift_certificate_id OUT GIFT_CERTIFICATE.ID%TYPE
15:47:48  21  );
15:47:48  22  
15:47:48  23  PROCEDURE GET_PENDING_INVOICES (
15:47:48  24  /*
15:47:48  25  Throws exceptions:
15:47:48  26  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  27  */
15:47:48  28  	out_result_set	     OUT SYS_REFCURSOR,
15:47:48  29  	in_row_number	     IN NUMBER DEFAULT NULL
15:47:48  30  );
15:47:48  31  
15:47:48  32  PROCEDURE GET_PENDING_REFUND_CHARGES (
15:47:48  33  /*
15:47:48  34  Throws exceptions:
15:47:48  35  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  36  */
15:47:48  37  	out_result_set	    OUT SYS_REFCURSOR,
15:47:48  38  	in_row_number	    IN NUMBER DEFAULT NULL
15:47:48  39  );
15:47:48  40  
15:47:48  41  PROCEDURE GET_UNPROCESSED_CHARGES (
15:47:48  42  /*
15:47:48  43  Throws exceptions:
15:47:48  44  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  45  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  46  */
15:47:48  47  	in_invoice_id  IN NUMBER,
15:47:48  48  	out_result_set OUT SYS_REFCURSOR
15:47:48  49  );
15:47:48  50  
15:47:48  51  PROCEDURE GET_PROCESSED_CHARGES (
15:47:48  52  /*
15:47:48  53  Throws exceptions:
15:47:48  54  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  55  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  56  */
15:47:48  57  	in_invoice_id  IN NUMBER,
15:47:48  58  	out_result_set OUT SYS_REFCURSOR
15:47:48  59  );
15:47:48  60  
15:47:48  61  PROCEDURE GET_TRNSCTN_ATTEMPTS_BY_STATUS (
15:47:48  62  /*
15:47:48  63  Throws exceptions:
15:47:48  64  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  65  */
15:47:48  66  	in_transaction_id	      IN NUMBER,
15:47:48  67  	in_transaction_attempt_status IN NUMBER,
15:47:48  68  	out_result_set		      OUT SYS_REFCURSOR
15:47:48  69  );
15:47:48  70  
15:47:48  71  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_STATUS (
15:47:48  72  /*
15:47:48  73  Throws exceptions:
15:47:48  74  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  75  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  76  */
15:47:48  77  	in_transaction_attempt_id     IN NUMBER,
15:47:48  78  	in_transaction_attempt_status IN NUMBER
15:47:48  79  );
15:47:48  80  
15:47:48  81  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_TIME (
15:47:48  82  /*
15:47:48  83  Throws exceptions:
15:47:48  84  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  85  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  86  */
15:47:48  87  	in_transaction_attempt_id IN NUMBER,
15:47:48  88  	in_updated_by		  IN VARCHAR2
15:47:48  89  );
15:47:48  90  
15:47:48  91  PROCEDURE CREATE_TRANSACTION_ATTEMPT (
15:47:48  92  /*
15:47:48  93  Throws exceptions:
15:47:48  94  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  95  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  96  */
15:47:48  97  	in_transaction_id	   IN NUMBER,
15:47:48  98  	in_trans_attempt_status    IN NUMBER,
15:47:48  99  	in_external_status_code    IN VARCHAR2,
15:47:48 100  	in_external_status_message IN VARCHAR2,
15:47:48 101  	in_created_by		   IN VARCHAR2,
15:47:48 102  	in_ext_transaction_id	   IN VARCHAR2,
15:47:48 103  	out_transaction_attempt_id OUT NUMBER
15:47:48 104  );
15:47:48 105  
15:47:48 106  PROCEDURE UPDATE_TRANSACTION_ATTEMPT_INF (
15:47:48 107  /*
15:47:48 108  Throws exceptions:
15:47:48 109  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 110  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 111  */
15:47:48 112  	in_transaction_attempt_id IN NUMBER,
15:47:48 113  	in_ext_status_code	  IN VARCHAR2,
15:47:48 114  	in_ext_status_message	  IN VARCHAR2,
15:47:48 115  	in_ext_transaction_id	  IN VARCHAR2
15:47:48 116  );
15:47:48 117  
15:47:48 118  PROCEDURE UPDATE_TRANSACTION_STATUS (
15:47:48 119  /*
15:47:48 120  Throws exceptions:
15:47:48 121  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 122  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 123  */
15:47:48 124  	in_transaction_id	 IN NUMBER,
15:47:48 125  	in_updated_by		 IN VARCHAR2,
15:47:48 126  	in_transaction_status_id IN NUMBER
15:47:48 127  );
15:47:48 128  
15:47:48 129  PROCEDURE GET_FAILED_ATTEMPTS_NUMBER (
15:47:48 130  /*
15:47:48 131  Throws exceptions:
15:47:48 132  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 133  */
15:47:48 134  	in_transaction_id IN  NUMBER,
15:47:48 135  	out_attempts_num  OUT NUMBER
15:47:48 136  );
15:47:48 137  
15:47:48 138  PROCEDURE IS_TRANSACTION_SUCCESSFULL (
15:47:48 139  /*
15:47:48 140  Throws exceptions:
15:47:48 141  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 142  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 143  */
15:47:48 144  	in_transaction_id IN  NUMBER,
15:47:48 145  	out_is_successfull  OUT NUMBER
15:47:48 146  );
15:47:48 147  
15:47:48 148  PROCEDURE UPDATE_INVOICE_STATUS (
15:47:48 149  /*
15:47:48 150  Throws exceptions:
15:47:48 151  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 152  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 153  */
15:47:48 154  	in_invoice_id		       IN NUMBER,
15:47:48 155  	in_invoice_status_id	       IN NUMBER,
15:47:48 156  	in_updated_by		       IN VARCHAR2
15:47:48 157  );
15:47:48 158  
15:47:48 159  PROCEDURE SUSPEND_SUBSCRIPTION(
15:47:48 160  /*
15:47:48 161  Throws exceptions:
15:47:48 162  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 163  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48 164  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 165  */
15:47:48 166  	  in_subs_id	IN NUMBER ,
15:47:48 167  	  in_updated_by IN VARCHAR2
15:47:48 168  );
15:47:48 169  
15:47:48 170  PROCEDURE GET_CREDIT_CARD_BY_ID (
15:47:48 171  /*
15:47:48 172  Throws exceptions:
15:47:48 173  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 174  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 175  */
15:47:48 176  	in_credit_card_id IN  NUMBER,
15:47:48 177  	out_result_set	  OUT SYS_REFCURSOR
15:47:48 178  );
15:47:48 179  
15:47:48 180  PROCEDURE GET_TRANSACTION_AMOUNT (
15:47:48 181  /*
15:47:48 182  Throws exceptions:
15:47:48 183  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 184  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 185  */
15:47:48 186  	in_transaction_id      IN  NUMBER,
15:47:48 187  	out_transaction_amount OUT NUMBER
15:47:48 188  );
15:47:48 189  
15:47:48 190  PROCEDURE GET_ACCOUNT_BY_INVOICE_ID (
15:47:48 191  /*
15:47:48 192  Throws exceptions:
15:47:48 193  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 194  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 195  */
15:47:48 196  	in_invoice_id  IN  NUMBER,
15:47:48 197  	out_account_id OUT NUMBER
15:47:48 198  );
15:47:48 199  
15:47:48 200  PROCEDURE GET_GIFT_CERTIFICATE_BY_ID (
15:47:48 201  /*
15:47:48 202  Throws exceptions:
15:47:48 203  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:48 204  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 205  */
15:47:48 206  	in_gift_certificate_id IN NUMBER,
15:47:48 207  	out_result_set	       OUT SYS_REFCURSOR
15:47:48 208  );
15:47:48 209  
15:47:48 210  PROCEDURE GET_SUBSCR_ID_BY_CHARGE_ID (
15:47:48 211  /*
15:47:48 212  Throws exceptions:
15:47:48 213  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 214  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 215  */
15:47:48 216  	in_charge_id	    IN NUMBER,
15:47:48 217  	out_subscription_id OUT NUMBER
15:47:48 218  );
15:47:48 219  
15:47:48 220  PROCEDURE IS_GCERT_FOR_PROPER_OFFER (
15:47:48 221  /*
15:47:48 222  Throws exceptions:
15:47:48 223  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 224  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 225  */
15:47:48 226  	in_gift_certificate_id IN NUMBER,
15:47:48 227  	in_charge_id	       IN NUMBER,
15:47:48 228  	out_result	       OUT NUMBER
15:47:48 229  );
15:47:48 230  
15:47:48 231  PROCEDURE GET_SUBSCRIPTION_INFO (
15:47:48 232  /*
15:47:48 233  Throws exceptions:
15:47:48 234  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 235  */
15:47:48 236  	  in_subscription_id IN  NUMBER,
15:47:48 237  	  out_result_set      OUT SYS_REFCURSOR
15:47:48 238  );
15:47:48 239  
15:47:48 240  PROCEDURE CALCULATE_INVOICE_AMOUNT (
15:47:48 241  /*
15:47:48 242  Throws exceptions:
15:47:48 243  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 244  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 245  */
15:47:48 246  	in_invoice_id IN  NUMBER,
15:47:48 247  	out_amount    OUT NUMBER
15:47:48 248  );
15:47:48 249  
15:47:48 250  PROCEDURE GET_TRANSACTION_BY_ID (
15:47:48 251  /*
15:47:48 252  Throws exceptions:
15:47:48 253  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 254  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 255  */
15:47:48 256  	in_transaction_id IN NUMBER,
15:47:48 257  	out_result_set	  OUT SYS_REFCURSOR
15:47:48 258  );
15:47:48 259  
15:47:48 260  PROCEDURE UPDATE_CHARGE_STATUS (
15:47:48 261  /*
15:47:48 262  Throws exceptions:
15:47:48 263  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 264  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 265  */
15:47:48 266  	in_charge_id	    IN CHARGE.ID%TYPE,
15:47:48 267  	in_charge_status_id IN CHARGE.CHARGE_STATUS_ID%TYPE,
15:47:48 268  	in_updated_by	    IN CHARGE.UPDATED_BY%TYPE
15:47:48 269  );
15:47:48 270  
15:47:48 271  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
15:47:48 272  	in_invoice_id		IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:48 273  	out_result_set OUT SYS_REFCURSOR
15:47:48 274  );
15:47:48 275  
15:47:48 276  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
15:47:48 277  /*
15:47:48 278  Throws exceptions:
15:47:48 279  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 280  APP_EXCEPTION_CODES_V22.INTRNAL_ERROR
15:47:48 281  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 282  */
15:47:48 283  	in_transaction_id IN TRANSACTION.ID%TYPE,
15:47:48 284  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
15:47:48 285  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
15:47:48 286  );
15:47:48 287  PROCEDURE GET_CLOSED_REFUNDS_BY_INVOICE (
15:47:48 288  /*
15:47:48 289  Throws exceptions:
15:47:48 290  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 291  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 292  */
15:47:48 293  	in_invoice_id	IN  NUMBER,
15:47:48 294  	out_result_set OUT SYS_REFCURSOR
15:47:48 295  );
15:47:48 296  PROCEDURE GET_ACTIVE_INVOICES_IDS (
15:47:48 297  /*
15:47:48 298  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 299  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 300  */
15:47:48 301  --  in_subscription_id IN SUBSCRIPTION.ID%TYPE,
15:47:48 302  	in_subscription_id IN NUMBER,
15:47:48 303  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 304  );
15:47:48 305  PROCEDURE CANCEL_SUBSCRIPTION_INVOICE (
15:47:48 306  /*
15:47:48 307  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 308  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 309  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48 310  */
15:47:48 311  --  in_invoice_id        IN INVOICE.ID%TYPE,
15:47:48 312  --  in_updated_by        IN INVOICE.UPDATED_BY%TYPE,
15:47:48 313  -- norlov: in_refundable	      IN refund enabled
15:47:48 314  	in_invoice_id	     IN NUMBER,
15:47:48 315  	in_updated_by	     IN VARCHAR2,
15:47:48 316  	in_refundable	     IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE
15:47:48 317  --  in_cancellation_date IN DATE DEFAULT current_timestamp
15:47:48 318  );
15:47:48 319  
15:47:48 320  PROCEDURE FINALIZE_CANCELATION (
15:47:48 321  /*
15:47:48 322  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 323  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 324  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48 325  */
15:47:48 326  --  in_subscription_id	IN SUBSCRIPTION.ID%TYPE,
15:47:48 327  --  in_cancelation_reason IN SUBSCRIPTION_CANCEL_REASON.VALUE%TYPE,
15:47:48 328  --  in_cancelation_date	IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
15:47:48 329  --  in_note		IN SUBSCRIPTION_NOTE.NOTE%TYPE,
15:47:48 330  --  in_agent_id		IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
15:47:48 331  --  in_updated_by 	IN SUBSCRIPTION.UPDATED_BY%TYPE
15:47:48 332  	in_subscription_id    IN NUMBER,
15:47:48 333  	in_cancelation_reason IN VARCHAR2,
15:47:48 334  	in_cancelation_date   IN DATE,
15:47:48 335  	in_note 	      IN VARCHAR2,
15:47:48 336  	in_agent_id	      IN NUMBER,
15:47:48 337  	in_updated_by	      IN VARCHAR2
15:47:48 338  );
15:47:48 339  PROCEDURE GET_SUBSCR_PROD_OFFERRINGS (
15:47:48 340  /*
15:47:48 341  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 342  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 343  */
15:47:48 344  	in_subscription_id IN NUMBER,
15:47:48 345  	out_result_set	   OUT SYS_REFCURSOR
15:47:48 346  );
15:47:48 347  PROCEDURE GET_OFFER_CHAIN_META_DATA (
15:47:48 348  /*
15:47:48 349  Throws exceptions (codes):
15:47:48 350  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 351  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 352  */
15:47:48 353  	in_offer_chain_id IN NUMBER,
15:47:48 354  	in_meta_data_name IN VARCHAR2,
15:47:48 355  	out_result_set	  OUT SYS_REFCURSOR
15:47:48 356  );
15:47:48 357  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
15:47:48 358  /*
15:47:48 359  Throws exceptions (codes):
15:47:48 360  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 361  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 362  */
15:47:48 363  	in_product_offering_id IN NUMBER,
15:47:48 364  	in_meta_data_name      IN VARCHAR2 DEFAULT NULL,
15:47:48 365  	out_result_set	       OUT SYS_REFCURSOR
15:47:48 366  );
15:47:48 367  PROCEDURE READ_ACCOUNT (
15:47:48 368  	in_account_id  IN ACCOUNT.ID%TYPE,
15:47:48 369  	out_result_set OUT SYS_REFCURSOR
15:47:48 370  );
15:47:48 371  
15:47:48 372  PROCEDURE GET_COLLECTED_CHARGES (
15:47:48 373  /*
15:47:48 374  Throws exceptions:
15:47:48 375  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 376  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 377  */
15:47:48 378  	in_invoice_id  IN NUMBER,
15:47:48 379  	out_result_set OUT SYS_REFCURSOR
15:47:48 380  );
15:47:48 381  
15:47:48 382  PROCEDURE GET_GROUPS_ID_BY_INVOICE_ID (
15:47:48 383  /*
15:47:48 384  Throws exceptions:
15:47:48 385  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:48 386  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 387  */
15:47:48 388  	in_invoice_id IN NUMBER,
15:47:48 389  	out_group_ids OUT SYS_REFCURSOR
15:47:48 390  );
15:47:48 391  
15:47:48 392  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
15:47:48 393  /*
15:47:48 394  Throws exceptions:
15:47:48 395  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:48 396  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 397  */
15:47:48 398  	in_group_id IN NUMBER,
15:47:48 399  	out_account_id	OUT NUMBER
15:47:48 400  );
15:47:48 401  
15:47:48 402  PROCEDURE LOCK_ACCOUNT (
15:47:48 403  	in_group_id    IN NUMBER,
15:47:48 404  	in_lock_key    IN VARCHAR2,
15:47:48 405  	in_seconds_num IN NUMBER,
15:47:48 406  	in_created_by  IN VARCHAR2,
15:47:48 407  	in_reason      IN VARCHAR2
15:47:48 408  );
15:47:48 409  
15:47:48 410  PROCEDURE RELEASE_LOCK (
15:47:48 411  	in_group_id IN NUMBER,
15:47:48 412  	in_lock_key IN VARCHAR2
15:47:48 413  );
15:47:48 414  
15:47:48 415  PROCEDURE GET_PAYMENT_INFO_BY_INVOICE_ID (
15:47:48 416  	in_invoice_id		    IN NUMBER,
15:47:48 417  	out_order_id		    OUT VARCHAR2,
15:47:48 418  	out_external_transaction_id OUT VARCHAR2
15:47:48 419  );
15:47:48 420  
15:47:48 421  PROCEDURE GET_PAYPAL_BY_ID (
15:47:48 422  	in_paypal_id   IN  NUMBER,
15:47:48 423  	out_result_set OUT SYS_REFCURSOR
15:47:48 424  );
15:47:48 425  
15:47:48 426  PROCEDURE GET_NEXT_ATTEMPT_NUMBER (
15:47:48 427  /*
15:47:48 428  Throws exceptions:
15:47:48 429  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 430  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 431  */
15:47:48 432  	in_charge_id   in  number,
15:47:48 433  	out_attempt_count out number
15:47:48 434  );
15:47:48 435  
15:47:48 436  PROCEDURE GET_NOTIFICATION_TYPE_ID (
15:47:48 437  	in_offer_chain_id	 IN NUMBER,
15:47:48 438  	in_action_name		 IN VARCHAR2,
15:47:48 439  	out_notification_type_id out number
15:47:48 440  );
15:47:48 441  
15:47:48 442  PROCEDURE SHOULD_MOVE_TO_GRACE(
15:47:48 443  	in_invoice_id  IN INVOICE.ID%TYPE,
15:47:48 444  	out_result     OUT NUMBER
15:47:48 445  );
15:47:48 446  
15:47:48 447  PROCEDURE MOVE_TO_GRACE(
15:47:48 448  	in_invoice_id		      IN INVOICE.ID%TYPE,
15:47:48 449  	in_updated_by		      IN LICENSE.UPDATED_BY%TYPE,
15:47:48 450  	in_grace_period_length_hours  IN NUMBER
15:47:48 451  );
15:47:48 452  
15:47:48 453  PROCEDURE MOVE_OUT_OF_GRACE(
15:47:48 454  	in_invoice_id	IN INVOICE.ID%TYPE,
15:47:48 455  	in_updated_by	IN LICENSE.UPDATED_BY%TYPE
15:47:48 456  );
15:47:48 457  
15:47:48 458  END PUBLIC_PROCS_BILLING_V22;
15:47:48 459  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.06
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PUBLIC_PROCS_CLIENT
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_CLIENT_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
15:47:48   4  /*
15:47:48   5  Throws exceptions:
15:47:48   6  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48   7  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48   8  */
15:47:48   9  	in_notification_type_name IN VARCHAR2,
15:47:48  10  	out_notification_type_id  OUT NUMBER
15:47:48  11  );
15:47:48  12  
15:47:48  13  PROCEDURE ADD_NOTIFICATION (
15:47:48  14  /*
15:47:48  15  Throws exceptions:
15:47:48  16  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  17  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  18  */
15:47:48  19  	in_sender_account_id	 IN NUMBER DEFAULT 0,
15:47:48  20  	in_recipient_group_id	 IN NUMBER,
15:47:48  21  	in_notification_type_id  IN NUMBER,
15:47:48  22  	in_date_to_notify	 IN DATE,
15:47:48  23  	in_email_template_params IN CLOB
15:47:48  24  );
15:47:48  25  
15:47:48  26  END PUBLIC_PROCS_CLIENT_V22;
15:47:48  27  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PUBLIC_PROCS_NOTIFICATION
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_NOTIFICATION_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE LOCK_ACCOUNT (
15:47:48   4  	in_group_id    IN NUMBER,
15:47:48   5  	in_lock_key    IN VARCHAR2,
15:47:48   6  	in_seconds_num IN NUMBER,
15:47:48   7  	in_created_by  IN VARCHAR2,
15:47:48   8  	in_reason      IN VARCHAR2
15:47:48   9  );
15:47:48  10  
15:47:48  11  PROCEDURE RELEASE_LOCK (
15:47:48  12  	in_group_id IN NUMBER,
15:47:48  13  	in_lock_key IN VARCHAR2
15:47:48  14  );
15:47:48  15  
15:47:48  16  END PUBLIC_PROCS_NOTIFICATION_V22;
15:47:48  17  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.01
15:47:48 SQL> 
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> -- DDL for package PUBLIC_PROCS_RENEWAL
15:47:48 SQL> --------------------------------------------------------------------------------
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE "PUBLIC_PROCS_RENEWAL_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE SUB_EXPIRES_NEED_ENTITLEMENTS (
15:47:48   4  	out_result_set OUT SYS_REFCURSOR
15:47:48   5  );
15:47:48   6  
15:47:48   7  PROCEDURE UPDATE_SS_NEED_ENTITLEMENTS (
15:47:48   8  	in_sub_share_id      IN SUBSCRIPTION_SHARE.ID%TYPE,
15:47:48   9  	in_need_entitlements IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE,
15:47:48  10  	in_updater	     IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
15:47:48  11  );
15:47:48  12  
15:47:48  13  PROCEDURE GET_OFFER_CHAIN_BY_ID (
15:47:48  14  /*
15:47:48  15  Throws exceptions:
15:47:48  16  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  17  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  18  */
15:47:48  19  	  in_offer_chain_id IN	 NUMBER,
15:47:48  20  	  out_result_set    OUT  SYS_REFCURSOR
15:47:48  21  );
15:47:48  22  
15:47:48  23  PROCEDURE GET_UNREDEEMED_GCS (
15:47:48  24  	out_result_set		OUT SYS_REFCURSOR,
15:47:48  25  	in_hours_number 	IN NUMBER DEFAULT 14*24,
15:47:48  26  	in_num_rows		IN NUMBER DEFAULT 10000,
15:47:48  27  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:48  28  );
15:47:48  29  
15:47:48  30  PROCEDURE GET_SUBSCRIPTIONS_META_DATA (
15:47:48  31  /*
15:47:48  32  APP_EXCEPTION_CODES_V22.INVALID_PARAMETER
15:47:48  33  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  34  */
15:47:48  35  	in_subscriptions_ids IN core_owner.NUMBER_TABLE,
15:47:48  36  	out_result_set	     OUT SYS_REFCURSOR
15:47:48  37  );
15:47:48  38  
15:47:48  39  PROCEDURE GET_ALL_OCH_META_DATA (
15:47:48  40  	in_offer_chain_id IN NUMBER,
15:47:48  41  	out_result_set	  OUT SYS_REFCURSOR
15:47:48  42  );
15:47:48  43  
15:47:48  44  PROCEDURE GET_OFFER_CHAIN_META_DATA (
15:47:48  45  /*
15:47:48  46  Throws exceptions (codes):
15:47:48  47  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  48  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  49  */
15:47:48  50  	in_offer_chain_id IN NUMBER,
15:47:48  51  	in_meta_data_name IN VARCHAR2,
15:47:48  52  	out_result_set	  OUT SYS_REFCURSOR
15:47:48  53  );
15:47:48  54  
15:47:48  55  PROCEDURE GET_ENDING_LICENSES (
15:47:48  56  /*
15:47:48  57  Throws exceptions:
15:47:48  58  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  59  */
15:47:48  60  	in_hours_number IN NUMBER,
15:47:48  61  	out_result_set OUT SYS_REFCURSOR
15:47:48  62  );
15:47:48  63  
15:47:48  64  PROCEDURE GET_ENDING_LICENSES_CC (
15:47:48  65  /*
15:47:48  66  Throws exceptions:
15:47:48  67  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  68  */
15:47:48  69  	in_hours_number IN NUMBER,
15:47:48  70  	out_result_set OUT SYS_REFCURSOR,
15:47:48  71  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:48  72  );
15:47:48  73  
15:47:48  74  /************************************************/
15:47:48  75  
15:47:48  76  PROCEDURE GET_RECURRING_OFFER (
15:47:48  77  /*
15:47:48  78  Throws exceptions:
15:47:48  79  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  80  */
15:47:48  81  	in_license_id  IN NUMBER,
15:47:48  82  	out_result_set OUT SYS_REFCURSOR
15:47:48  83  );
15:47:48  84  
15:47:48  85  /*************************************************/
15:47:48  86  
15:47:48  87  PROCEDURE GET_NEXT_OFFER (
15:47:48  88  /*
15:47:48  89  Throws exceptions:
15:47:48  90  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48  91  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48  92  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48  93  */
15:47:48  94  	in_license_id  IN NUMBER,
15:47:48  95  	out_result_set OUT SYS_REFCURSOR
15:47:48  96  );
15:47:48  97  
15:47:48  98  /**************************************************/
15:47:48  99  
15:47:48 100  PROCEDURE UPDATE_LICENSE_STATUS(
15:47:48 101  /*
15:47:48 102  Throws exceptions:
15:47:48 103  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 104  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 105  */
15:47:48 106  	  in_license_id     IN NUMBER,
15:47:48 107  	  in_license_status IN NUMBER,
15:47:48 108  	  in_updated_by     IN VARCHAR2
15:47:48 109  );
15:47:48 110  
15:47:48 111  /***************************************************/
15:47:48 112  
15:47:48 113  PROCEDURE UPDATE_INVOICE_STATUS (
15:47:48 114  /*
15:47:48 115  Throws exceptions:
15:47:48 116  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 117  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 118  */
15:47:48 119  	in_invoice_id		       IN NUMBER,
15:47:48 120  	in_invoice_status_id	       IN NUMBER,
15:47:48 121  	in_updated_by		       IN VARCHAR2
15:47:48 122  );
15:47:48 123  
15:47:48 124  /***************************************************/
15:47:48 125  
15:47:48 126  PROCEDURE CREATE_LICENSE(
15:47:48 127  /*
15:47:48 128  Throws exceptions:
15:47:48 129  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 130  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 131  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:48 132  */
15:47:48 133  	in_status_id		    IN NUMBER,
15:47:48 134  	in_needs_entitlements	    IN NUMBER,
15:47:48 135  	in_start_date		    IN DATE,
15:47:48 136  	in_end_date		    IN DATE,
15:47:48 137  	in_offer_id		    IN NUMBER,
15:47:48 138  	in_subscription_id	    IN NUMBER,
15:47:48 139  	in_invoice_id		    IN NUMBER,
15:47:48 140  	in_created_by		    IN VARCHAR2,
15:47:48 141  	in_is_extension 	    IN NUMBER,
15:47:48 142  	in_current_offer_index	    IN NUMBER,
15:47:48 143  	in_current_offer_recurr_num IN NUMBER,
15:47:48 144  	out_license_id		    OUT NUMBER
15:47:48 145  );
15:47:48 146  
15:47:48 147  /**************************************************/
15:47:48 148  
15:47:48 149  PROCEDURE CREATE_INVOICE(
15:47:48 150  /*
15:47:48 151  Throws exceptions:
15:47:48 152  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 153  */
15:47:48 154  	  in_invoice_status IN NUMBER,
15:47:48 155  	  in_created_by     IN VARCHAR2,
15:47:48 156  	  in_tax_exempt_id  IN VARCHAR2,
15:47:48 157  	  out_invoice_id    OUT NUMBER
15:47:48 158  );
15:47:48 159  
15:47:48 160  /*****************************************************/
15:47:48 161  
15:47:48 162  PROCEDURE CREATE_CHARGE(
15:47:48 163  /*
15:47:48 164  Throws exceptions:
15:47:48 165  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 166  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 167  */
15:47:48 168  	in_invoice_id	      IN NUMBER,
15:47:48 169  	in_transaction_id     IN NUMBER,
15:47:48 170  	in_instrument_type_id IN NUMBER,
15:47:48 171  	in_instrument_id      IN NUMBER,
15:47:48 172  	in_charge_amount      IN NUMBER,
15:47:48 173  	in_created_by	      IN VARCHAR2,
15:47:48 174  	in_charge_status_id   IN NUMBER,
15:47:48 175  	out_charge_id	      OUT NUMBER
15:47:48 176  );
15:47:48 177  
15:47:48 178  /*****************************************************/
15:47:48 179  
15:47:48 180  PROCEDURE HAS_FUTURE_LICENSE (
15:47:48 181  /*
15:47:48 182  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 183  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 184  --
15:47:48 185  RETURNS:
15:47:48 186  1 - if has,
15:47:48 187  0 - else
15:47:48 188  */
15:47:48 189  	in_license_id IN NUMBER,
15:47:48 190  	out_result	   OUT NUMBER
15:47:48 191  );
15:47:48 192  
15:47:48 193  /*****************************************************/
15:47:48 194  
15:47:48 195  PROCEDURE GET_GROUP_ID_BY_LICENSE_ID (
15:47:48 196  /*
15:47:48 197  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 198  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 199  */
15:47:48 200  	in_license_id IN NUMBER,
15:47:48 201  	out_group_id  OUT NUMBER
15:47:48 202  );
15:47:48 203  
15:47:48 204  /*****************************************************/
15:47:48 205  
15:47:48 206  PROCEDURE GET_OFFER_PRODUCTS (
15:47:48 207  /*
15:47:48 208  Throws exceptions (codes):
15:47:48 209  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 210  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 211  */
15:47:48 212  	in_offer_id    IN NUMBER,
15:47:48 213  	out_result_set OUT SYS_REFCURSOR
15:47:48 214  );
15:47:48 215  
15:47:48 216  /*******************************************************/
15:47:48 217  
15:47:48 218  PROCEDURE CREATE_TRANSACTION (
15:47:48 219  /*
15:47:48 220  Throws exceptions:
15:47:48 221  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 222  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 223  */
15:47:48 224  	in_transaction_id	  IN NUMBER,
15:47:48 225  	in_status_id		  IN NUMBER,
15:47:48 226  	in_amount		  IN NUMBER,
15:47:48 227  	in_created_by		  IN VARCHAR2,
15:47:48 228  	in_order_id		  IN VARCHAR2,
15:47:48 229  	in_transaction_type_code  IN VARCHAR2 DEFAULT NULL,
15:47:48 230  	out_transaction_id	  OUT NUMBER
15:47:48 231  );
15:47:48 232  
15:47:48 233  /*********************************************************/
15:47:48 234  
15:47:48 235  PROCEDURE ADD_LINE_ITEMS(
15:47:48 236  /*
15:47:48 237  Throws exceptions:
15:47:48 238  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 239  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 240  */
15:47:48 241  	in_invoice_id IN NUMBER,
15:47:48 242  	in_offer_id   IN NUMBER,
15:47:48 243  	in_created_by IN VARCHAR2
15:47:48 244  );
15:47:48 245  
15:47:48 246  /**********************************************************/
15:47:48 247  
15:47:48 248  PROCEDURE CALCULATE_INVOICE_AMOUNT (
15:47:48 249  /*
15:47:48 250  Throws exceptions:
15:47:48 251  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 252  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 253  */
15:47:48 254  	in_invoice_id IN  NUMBER,
15:47:48 255  	out_amount    OUT NUMBER
15:47:48 256  );
15:47:48 257  
15:47:48 258  /*********************************************************/
15:47:48 259  
15:47:48 260  PROCEDURE RESERVE_TRANSACTION_ID (
15:47:48 261  /*
15:47:48 262  Throws exceptions:
15:47:48 263  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 264  */
15:47:48 265  	out_transaction_id OUT NUMBER
15:47:48 266  );
15:47:48 267  
15:47:48 268  /**********************************************************/
15:47:48 269  
15:47:48 270  PROCEDURE P_GET_NEXT_OFFER_INDEX (
15:47:48 271  	in_offer_chain_id	     IN NUMBER,
15:47:48 272  	in_offer_chain_current_index IN NUMBER,
15:47:48 273  	out_next_offer_index	     OUT NUMBER
15:47:48 274  );
15:47:48 275  
15:47:48 276  /***********************************************************/
15:47:48 277  
15:47:48 278  PROCEDURE GET_NEXT_OFFER_INDEX_BY_LCNS (
15:47:48 279  	in_license_id		     IN NUMBER,
15:47:48 280  	in_offer_chain_current_index IN NUMBER,
15:47:48 281  	out_next_offer_index	     OUT NUMBER
15:47:48 282  );
15:47:48 283  
15:47:48 284  /**********************************************************/
15:47:48 285  
15:47:48 286  PROCEDURE GET_SUBSCRIPTION_INFO (
15:47:48 287  /*
15:47:48 288  Throws exceptions:
15:47:48 289  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 290  */
15:47:48 291  	  in_subscription_id IN  NUMBER,
15:47:48 292  	  out_result_set      OUT SYS_REFCURSOR
15:47:48 293  );
15:47:48 294  
15:47:48 295  /***********************************************************/
15:47:48 296  
15:47:48 297  PROCEDURE CLOSE_SUBSCRIPTION (
15:47:48 298  	in_subscription_id IN NUMBER,
15:47:48 299  	in_updated_by	   IN VARCHAR2
15:47:48 300  );
15:47:48 301  
15:47:48 302  /***********************************************************/
15:47:48 303  
15:47:48 304  PROCEDURE GET_NEED_ENTITLEMENTS_LICENSES (
15:47:48 305  	out_result_set OUT SYS_REFCURSOR
15:47:48 306  );
15:47:48 307  
15:47:48 308  /***********************************************************/
15:47:48 309  
15:47:48 310  PROCEDURE UPDATE_NEED_ENTITLEMENTS_FLAG (
15:47:48 311  	in_license_id	      IN NUMBER,
15:47:48 312  	in_needs_entitlements IN NUMBER,
15:47:48 313  	in_updated_by	      IN VARCHAR2
15:47:48 314  );
15:47:48 315  /***********************************************************/
15:47:48 316  PROCEDURE GET_PROD_OFFERINGS_BY_OFFER_ID (
15:47:48 317  	in_offer_id    IN NUMBER,
15:47:48 318  	out_result_set OUT SYS_REFCURSOR
15:47:48 319  );
15:47:48 320  /***********************************************************/
15:47:48 321  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
15:47:48 322  	in_product_offering_id IN NUMBER,
15:47:48 323  	in_meta_data_name      IN VARCHAR2 DEFAULT NULL,
15:47:48 324  	out_result_set	       OUT SYS_REFCURSOR
15:47:48 325  );
15:47:48 326  
15:47:48 327  PROCEDURE LOCK_ACCOUNT (
15:47:48 328  	in_group_id    IN NUMBER,
15:47:48 329  	in_lock_key    IN VARCHAR2,
15:47:48 330  	in_seconds_num IN NUMBER,
15:47:48 331  	in_created_by  IN VARCHAR2,
15:47:48 332  	in_reason      IN VARCHAR2
15:47:48 333  );
15:47:48 334  
15:47:48 335  PROCEDURE RELEASE_LOCK (
15:47:48 336  	in_group_id IN NUMBER,
15:47:48 337  	in_lock_key IN VARCHAR2
15:47:48 338  );
15:47:48 339  
15:47:48 340  PROCEDURE GET_INVOICE_LINE_ITEMS (
15:47:48 341  	in_invoice_id  IN NUMBER,
15:47:48 342  	out_result_set OUT SYS_REFCURSOR
15:47:48 343  );
15:47:48 344  
15:47:48 345  PROCEDURE ADD_TAX (
15:47:48 346  	in_tax_type_id		 IN NUMBER,
15:47:48 347  	in_calculated_amount	 IN NUMBER,
15:47:48 348  	in_created_by		 IN VARCHAR2,
15:47:48 349  	in_line_item_id 	 IN NUMBER,
15:47:48 350  	in_effective_rate	 IN VARCHAR2,
15:47:48 351  	in_taxable_amount	 IN NUMBER,
15:47:48 352  	in_tax_rule_id		 IN NUMBER,
15:47:48 353  	in_jurisdiction_level_id IN NUMBER,
15:47:48 354  	in_jurisdiction_name	 IN VARCHAR2,
15:47:48 355  	in_jurisdiction_id	 IN VARCHAR2,
15:47:48 356  	in_ext_tax_type 	 IN VARCHAR2,
15:47:48 357  	in_ext_result		 IN VARCHAR2,
15:47:48 358  	in_imposition_type	 IN VARCHAR2,
15:47:48 359  	in_imposition		 IN VARCHAR2
15:47:48 360  );
15:47:48 361  
15:47:48 362  PROCEDURE GET_CREDIT_CARD_BY_ID (
15:47:48 363  	in_credit_card_id IN  NUMBER,
15:47:48 364  	out_result_set	  OUT SYS_REFCURSOR
15:47:48 365  );
15:47:48 366  
15:47:48 367  PROCEDURE GET_PRD_OFFERING_BY_LINE_IT_ID (
15:47:48 368  	in_line_item_id IN NUMBER,
15:47:48 369  	out_result_set	OUT SYS_REFCURSOR
15:47:48 370  );
15:47:48 371  
15:47:48 372  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
15:47:48 373  /*
15:47:48 374  Throws exceptions:
15:47:48 375  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:48 376  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 377  */
15:47:48 378  	in_group_id IN NUMBER,
15:47:48 379  	out_account_id	OUT NUMBER
15:47:48 380  );
15:47:48 381  
15:47:48 382  PROCEDURE GET_LINE_ITEM_DISCOUNTS (
15:47:48 383  /*
15:47:48 384  Throws exceptions:
15:47:48 385  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:48 386  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:48 387  */
15:47:48 388  	in_line_item_id IN  NUMBER,
15:47:48 389  	out_result_set	OUT SYS_REFCURSOR
15:47:48 390  );
15:47:48 391  
15:47:48 392  PROCEDURE UPDATE_LINE_ITEM_AMOUNT (
15:47:48 393  	in_line_item_id    IN NUMBER,
15:47:48 394  	in_amount	   IN NUMBER,
15:47:48 395  	in_discount_amount IN NUMBER,
15:47:48 396  	in_taxes_amount    IN NUMBER
15:47:48 397  );
15:47:48 398  
15:47:48 399  PROCEDURE GET_PAYPAL_BY_ID (
15:47:48 400  	in_paypal_id   IN  NUMBER,
15:47:48 401  	out_result_set OUT SYS_REFCURSOR
15:47:48 402  );
15:47:48 403  
15:47:48 404  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
15:47:48 405  	in_invoice_id		IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:48 406  	out_result_set OUT SYS_REFCURSOR
15:47:48 407  );
15:47:48 408  
15:47:48 409  PROCEDURE GET_LICENSE_BY_ID (
15:47:48 410  	in_license_id  IN NUMBER,
15:47:48 411  	out_result_set OUT SYS_REFCURSOR
15:47:48 412  );
15:47:48 413  
15:47:48 414  PROCEDURE GET_NOTIFICATION_TYPE_ID (
15:47:48 415  	in_offer_chain_id	 IN NUMBER,
15:47:48 416  	in_action_name		 IN VARCHAR2,
15:47:48 417  	out_notification_type_id OUT NUMBER
15:47:48 418  );
15:47:48 419  
15:47:48 420  PROCEDURE GET_OFFER_CHAIN_MD_VALUE (
15:47:48 421  	in_offer_chain_id IN NUMBER,
15:47:48 422  	in_meta_data_name IN VARCHAR2,
15:47:48 423  	out_value	  OUT VARCHAR2
15:47:48 424  );
15:47:48 425  
15:47:48 426  PROCEDURE GET_ACT_SUBS_W_CPT_CHARGEBACKS (
15:47:48 427  	out_result_set	    OUT SYS_REFCURSOR
15:47:48 428  );
15:47:48 429  
15:47:48 430  PROCEDURE GET_ACT_SUBS_W_PP_CHARGEBACKS (
15:47:48 431  	out_result_set	    OUT SYS_REFCURSOR
15:47:48 432  );
15:47:48 433  
15:47:48 434  PROCEDURE GET_ACT_SUBS_W_AMEX_CB (
15:47:48 435  	out_result_set	    OUT SYS_REFCURSOR
15:47:48 436  );
15:47:48 437  
15:47:48 438  PROCEDURE GET_GRACE_PERIOD_SUB_REGIS (
15:47:48 439  	in_max_days_until_close IN NUMBER,
15:47:48 440  	in_num_subs_to_fetch	IN NUMBER,
15:47:48 441  	out_result_set		OUT SYS_REFCURSOR
15:47:48 442  );
15:47:48 443  
15:47:48 444  PROCEDURE GET_GRACE_LICE_FOR_FINAL_TRANS (
15:47:48 445  	in_days_before_close	 IN NUMBER,
15:47:48 446  	in_num_licenses_to_fetch IN NUMBER,
15:47:48 447  	out_result_set		 OUT SYS_REFCURSOR
15:47:48 448  );
15:47:48 449  
15:47:48 450  PROCEDURE GET_EXPIRING_PAYPAL (
15:47:48 451  	in_expire_window_days	IN NUMBER,
15:47:48 452  	in_creation_limit_days	IN NUMBER,
15:47:48 453  	in_retry_throttle_name	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE,
15:47:48 454  	out_result_set		OUT SYS_REFCURSOR
15:47:48 455  );
15:47:48 456  
15:47:48 457  END PUBLIC_PROCS_RENEWAL_V22;
15:47:48 458  .
15:47:48 SQL> /

Package created.

Elapsed: 00:00:00.03
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ACCOUNT_CRU_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_ACCOUNT (
15:47:48   4  	out_account_id	      OUT ACCOUNT.ID%TYPE,
15:47:48   5  	in_account_status_id  IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE,
15:47:48   6  	in_suspend_date       IN ACCOUNT.SUSPEND_DATE%TYPE DEFAULT NULL,
15:47:48   7  	in_group_id	      IN ACCOUNT.GROUP_ID%TYPE,
15:47:48   8  	in_created_by	      IN ACCOUNT.CREATED_BY%TYPE,
15:47:48   9  	in_system_category_id IN ACCOUNT.SYSTEM_CATEGORY_ID%TYPE,
15:47:48  10  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
15:47:48  11  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE DEFAULT NULL
15:47:48  12  ) AS
15:47:48  13  -- VARIABLES
15:47:48  14  var_new_account_id ACCOUNT.ID%TYPE;
15:47:48  15  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:48  16  var_date DATE := SYSDATE;
15:47:48  17  BEGIN
15:47:48  18  	SELECT
15:47:48  19  	  ACC_ID_SEQ.nextVal into var_new_account_id
15:47:48  20  	FROM DUAL;
15:47:48  21  	INSERT INTO ACCOUNT (
15:47:48  22  	  ID,
15:47:48  23  	  ACCOUNT_STATUS_ID,
15:47:48  24  	  SUSPEND_DATE,
15:47:48  25  	  GROUP_ID,
15:47:48  26  	  CREATE_DATE,
15:47:48  27  	  CREATED_BY,
15:47:48  28  	  UPDATE_DATE,
15:47:48  29  	  UPDATED_BY,
15:47:48  30  	  SYSTEM_CATEGORY_ID,
15:47:48  31  	  INSTRUMENT_TYPE_ID,
15:47:48  32  	  INSTRUMENT_ID,
15:47:48  33  	  TAX_EXEMPT_ID
15:47:48  34  	) VALUES (
15:47:48  35  	  var_new_account_id,
15:47:48  36  	  in_account_status_id,
15:47:48  37  	  in_suspend_date,
15:47:48  38  	  in_group_id,
15:47:48  39  	  var_date,
15:47:48  40  	  in_created_by,
15:47:48  41  	  var_date,
15:47:48  42  	  in_created_by,
15:47:48  43  	  in_system_category_id,
15:47:48  44  	  in_instrument_type_id,
15:47:48  45  	  in_instrument_id,
15:47:48  46  	  NULL
15:47:48  47  	);
15:47:48  48  
15:47:48  49  	out_account_id := var_new_account_id;
15:47:48  50  END CREATE_ACCOUNT;
15:47:48  51  
15:47:48  52  /*************************************************************/
15:47:48  53  
15:47:48  54  PROCEDURE UPDATE_ACCOUNT (
15:47:48  55  	in_account_id	      IN ACCOUNT.ID%TYPE,
15:47:48  56  	in_account_status_id  IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE DEFAULT NULL,
15:47:48  57  	in_suspend_date       IN ACCOUNT.SUSPEND_DATE%TYPE DEFAULT NULL,
15:47:48  58  	in_updated_by	      IN ACCOUNT.UPDATED_BY%TYPE,
15:47:48  59  	in_system_category_id IN ACCOUNT.SYSTEM_CATEGORY_ID%TYPE DEFAULT NULL,
15:47:48  60  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
15:47:48  61  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE DEFAULT NULL
15:47:48  62  ) AS
15:47:48  63  BEGIN
15:47:48  64  
15:47:48  65  	-- CREATE HISTORY
15:47:48  66  	PROCS_HISTORY_V22.CREATE_ACCOUNT_HISTORY(
15:47:48  67  	  in_account_id 	       => in_account_id,
15:47:48  68  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:48  69  	);
15:47:48  70  
15:47:48  71  	UPDATE ACCOUNT SET
15:47:48  72  	  ACCOUNT_STATUS_ID  = NVL(in_account_status_id, ACCOUNT_STATUS_ID),
15:47:48  73  	  SUSPEND_DATE	     = NVL(in_suspend_date, SUSPEND_DATE),
15:47:48  74  	  UPDATED_BY	     = in_updated_by,
15:47:48  75  	  UPDATE_DATE	     = SYSDATE,
15:47:48  76  	  SYSTEM_CATEGORY_ID = NVL(in_system_category_id, SYSTEM_CATEGORY_ID),
15:47:48  77  	  INSTRUMENT_TYPE_ID = NVL(in_instrument_type_id, INSTRUMENT_TYPE_ID),
15:47:48  78  	  INSTRUMENT_ID      = NVL(in_instrument_id, INSTRUMENT_ID)
15:47:48  79  	WHERE
15:47:48  80  	  ACCOUNT.ID = in_account_id;
15:47:48  81  
15:47:48  82  END UPDATE_ACCOUNT;
15:47:48  83  
15:47:48  84  /*************************************************************/
15:47:48  85  
15:47:48  86  PROCEDURE UPDATE_DEF_FIN_INSTRUMENT(
15:47:48  87  	in_account_id	      IN ACCOUNT.ID%TYPE,
15:47:48  88  	in_instrument_type_id IN ACCOUNT.INSTRUMENT_TYPE_ID%TYPE,
15:47:48  89  	in_instrument_id      IN ACCOUNT.INSTRUMENT_ID%TYPE,
15:47:48  90  	in_updated_by	      IN ACCOUNT.UPDATED_BY%TYPE
15:47:48  91  ) AS
15:47:48  92  BEGIN
15:47:48  93  
15:47:48  94  	-- CREATE HISTORY
15:47:48  95  	PROCS_HISTORY_V22.CREATE_ACCOUNT_HISTORY(
15:47:48  96  	  in_account_id 	       => in_account_id,
15:47:48  97  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:48  98  	);
15:47:48  99  
15:47:48 100  	UPDATE ACCOUNT SET
15:47:48 101  	  INSTRUMENT_TYPE_ID = in_instrument_type_id,
15:47:48 102  	  INSTRUMENT_ID      = in_instrument_id
15:47:48 103  	WHERE
15:47:48 104  	  ACCOUNT.ID = in_account_id;
15:47:48 105  
15:47:48 106  END;
15:47:48 107  
15:47:48 108  /*************************************************************/
15:47:48 109  
15:47:48 110  PROCEDURE READ_ACCOUNT (
15:47:48 111  	in_account_id  IN ACCOUNT.ID%TYPE,
15:47:48 112  	out_result_set OUT SYS_REFCURSOR
15:47:48 113  ) AS
15:47:48 114  BEGIN
15:47:48 115  	OPEN out_result_set FOR
15:47:48 116  	SELECT
15:47:48 117  	  ACCOUNT_STATUS_ID,
15:47:48 118  	  SUSPEND_DATE,
15:47:48 119  	  GROUP_ID
15:47:48 120  	FROM
15:47:48 121  	  ACCOUNT
15:47:48 122  	WHERE
15:47:48 123  	  ID = in_account_id;
15:47:48 124  END READ_ACCOUNT;
15:47:48 125  
15:47:48 126  /*************************************************************/
15:47:48 127  
15:47:48 128  PROCEDURE CREATE_ACCOUNT_NOTE (
15:47:48 129  	inout_account_note_id IN OUT ACCOUNT_NOTE.ID%TYPE,
15:47:48 130  	in_agent_id	      IN ACCOUNT_NOTE.AGENT_ID%TYPE,
15:47:48 131  	in_account_id	      IN ACCOUNT_NOTE.ACCOUNT_ID%TYPE,
15:47:48 132  	in_note 	      IN ACCOUNT_NOTE.NOTE%TYPE,
15:47:48 133  	in_created_by	      IN ACCOUNT_NOTE.CREATED_BY%TYPE
15:47:48 134  ) AS
15:47:48 135  BEGIN
15:47:48 136  	IF inout_account_note_id IS NULL THEN
15:47:48 137  	  SELECT
15:47:48 138  	    ACCN_ID_SEQ.nextVal into inout_account_note_id
15:47:48 139  	  FROM DUAL;
15:47:48 140  	END IF;
15:47:48 141  	INSERT INTO ACCOUNT_NOTE(
15:47:48 142  	  ID,
15:47:48 143  	  AGENT_ID,
15:47:48 144  	  ACCOUNT_ID,
15:47:48 145  	  NOTE,
15:47:48 146  	  CREATE_DATE,
15:47:48 147  	  CREATED_BY
15:47:48 148  	) VALUES (
15:47:48 149  	  inout_account_note_id,
15:47:48 150  	  in_agent_id,
15:47:48 151  	  in_account_id,
15:47:48 152  	  in_note,
15:47:48 153  	  SYSDATE,
15:47:48 154  	  in_created_by
15:47:48 155  	);
15:47:48 156  END CREATE_ACCOUNT_NOTE;
15:47:48 157  
15:47:48 158  END PROCS_ACCOUNT_CRU_V22;
15:47:48 159  .
15:47:48 SQL> /

Package body created.

Elapsed: 00:00:00.01
15:47:48 SQL> 
15:47:48 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ADDRESS_CRU_V22" AS
15:47:48   2  
15:47:48   3  PROCEDURE CREATE_ADDRESS(
15:47:48   4  	out_address_id	      OUT ADDRESS.ID%TYPE,
15:47:48   5  	in_address_id	      IN ADDRESS.ID%TYPE DEFAULT NULL,
15:47:48   6  	in_address1	      IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
15:47:48   7  	in_address2	      IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
15:47:48   8  	in_city 	      IN ADDRESS.CITY%TYPE DEFAULT NULL,
15:47:48   9  	in_state	      IN ADDRESS.STATE%TYPE DEFAULT NULL,
15:47:48  10  	in_postal_code	      IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:48  11  	in_country	      IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
15:47:48  12  	in_created_by	      IN ADDRESS.CREATED_BY%TYPE
15:47:48  13  ) AS
15:47:48  14  -- VARIABLES
15:47:48  15  var_address_id ADDRESS.ID%TYPE;
15:47:48  16  var_date DATE := SYSDATE;
15:47:48  17  BEGIN
15:47:48  18  	IF in_address_id IS NULL THEN
15:47:48  19  	  SELECT
15:47:48  20  	    ADDRESS_ID_SEQ.nextVal into var_address_id
15:47:48  21  	  FROM DUAL;
15:47:48  22  	ELSE
15:47:48  23  	  var_address_id := in_address_id;
15:47:48  24  	END IF;
15:47:48  25  	INSERT INTO
15:47:48  26  	  ADDRESS (
15:47:48  27  	    ID,
15:47:48  28  	    ADDRESS1,
15:47:48  29  	    ADDRESS2,
15:47:48  30  	    CITY,
15:47:48  31  	    STATE,
15:47:48  32  	    POSTAL_CODE,
15:47:48  33  	    COUNTRY,
15:47:48  34  	    CREATE_DATE,
15:47:48  35  	    CREATED_BY,
15:47:48  36  	    UPDATE_DATE,
15:47:48  37  	    UPDATED_BY
15:47:48  38  	  ) VALUES (
15:47:48  39  	    var_address_id,
15:47:48  40  	    in_address1,
15:47:48  41  	    in_address2,
15:47:48  42  	    in_city,
15:47:48  43  	    in_state,
15:47:48  44  	    in_postal_code,
15:47:48  45  	    in_country,
15:47:48  46  	    var_date,
15:47:48  47  	    in_created_by,
15:47:48  48  	    var_date,
15:47:48  49  	    in_created_by
15:47:48  50  	  );
15:47:48  51  
15:47:48  52  	out_address_id := var_address_id;
15:47:48  53  END CREATE_ADDRESS;
15:47:48  54  
15:47:48  55  PROCEDURE UPDATE_ADDRESS(
15:47:48  56  	in_address_id	      IN ADDRESS.ID%TYPE,
15:47:48  57  	in_address1	      IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
15:47:48  58  	in_address2	      IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
15:47:48  59  	in_city 	      IN ADDRESS.CITY%TYPE DEFAULT NULL,
15:47:48  60  	in_state	      IN ADDRESS.STATE%TYPE DEFAULT NULL,
15:47:48  61  	in_postal_code	      IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:48  62  	in_country	      IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
15:47:48  63  	in_updated_by	      IN ADDRESS.UPDATED_BY%TYPE
15:47:48  64  ) AS
15:47:48  65  BEGIN
15:47:48  66  
15:47:48  67  	-- Create history
15:47:48  68  	PROCS_HISTORY_V22.CREATE_ADDRESS_HISTORY(
15:47:48  69  	  in_address_id 		=> in_address_id,
15:47:48  70  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:48  71  	);
15:47:48  72  
15:47:48  73  	UPDATE
15:47:48  74  	  ADDRESS
15:47:48  75  	SET
15:47:48  76  	  ADDRESS1 = NVL(in_address1, ADDRESS1),
15:47:48  77  	  ADDRESS2 = NVL(in_address2, ADDRESS2),
15:47:48  78  	  CITY = NVL(in_city, CITY),
15:47:48  79  	  STATE = NVL(in_state, STATE),
15:47:48  80  	  POSTAL_CODE = NVL(in_postal_code, POSTAL_CODE),
15:47:48  81  	  COUNTRY = NVL(in_country, COUNTRY),
15:47:48  82  	  UPDATE_DATE = SYSDATE,
15:47:48  83  	  UPDATED_BY = in_updated_by
15:47:48  84  	WHERE
15:47:48  85  	  ID = in_address_id;
15:47:48  86  
15:47:48  87  END UPDATE_ADDRESS;
15:47:48  88  
15:47:48  89  END PROCS_ADDRESS_CRU_V22;
15:47:48  90  .
15:47:48 SQL> /

Package body created.

Elapsed: 00:00:00.27
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_AMAZON_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE UPDATE_AMAZON_APPSTORE_RECEIPT(
15:47:49   4  	in_id		   IN AMAZON_APPSTORE_RECEIPT.ID%TYPE,
15:47:49   5  	in_updated_by	   IN AMAZON_APPSTORE_RECEIPT.UPDATED_BY%TYPE,
15:47:49   6  	in_subscription_id IN AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID%TYPE DEFAULT NULL,
15:47:49   7  	in_user_id	   IN AMAZON_APPSTORE_RECEIPT.USER_ID%TYPE DEFAULT NULL,
15:47:49   8  	in_item_type	   IN AMAZON_APPSTORE_RECEIPT.ITEM_TYPE%TYPE DEFAULT NULL,
15:47:49   9  	in_start_date	   IN AMAZON_APPSTORE_RECEIPT.START_DATE%TYPE DEFAULT NULL,
15:47:49  10  	in_end_date	   IN AMAZON_APPSTORE_RECEIPT.END_DATE%TYPE DEFAULT NULL,
15:47:49  11  	in_sku		   IN AMAZON_APPSTORE_RECEIPT.SKU%TYPE DEFAULT NULL,
15:47:49  12  	in_purchase_token  IN AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE DEFAULT NULL,
15:47:49  13  	in_last_check_date IN AMAZON_APPSTORE_RECEIPT.LAST_CHECK_DATE%TYPE DEFAULT NULL
15:47:49  14  ) AS
15:47:49  15  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_AMAZON_APPSTORE_RECEIPT';
15:47:49  16  BEGIN
15:47:49  17  	CORE_OWNER.PROCS_HISTORY_V22.CREATE_AASR_HISTORY(
15:47:49  18  	    in_id => in_id,
15:47:49  19  	    in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE,
15:47:49  20  	    in_created_by => in_updated_by
15:47:49  21  	);
15:47:49  22  
15:47:49  23  	UPDATE AMAZON_APPSTORE_RECEIPT SET
15:47:49  24  	  SUBSCRIPTION_ID = NVL(in_subscription_id,SUBSCRIPTION_ID),
15:47:49  25  	  USER_ID	  = NVL(in_user_id,USER_ID),
15:47:49  26  	  ITEM_TYPE	  = NVL(in_item_type,ITEM_TYPE),
15:47:49  27  	  START_DATE	  = NVL(in_start_date,START_DATE),
15:47:49  28  	  END_DATE	  = NVL(in_end_date,END_DATE),
15:47:49  29  	  SKU		  = NVL(in_sku,SKU),
15:47:49  30  	  PURCHASE_TOKEN  = NVL(in_purchase_token,PURCHASE_TOKEN),
15:47:49  31  	  LAST_CHECK_DATE = NVL(in_last_check_date,LAST_CHECK_DATE),
15:47:49  32  	  UPDATE_DATE	  = SYSDATE,
15:47:49  33  	  UPDATED_BY	  = in_updated_by
15:47:49  34  	WHERE
15:47:49  35  	  ID = in_id;
15:47:49  36  END UPDATE_AMAZON_APPSTORE_RECEIPT;
15:47:49  37  
15:47:49  38  PROCEDURE ADD_AMAZON_APPSTORE_RECEIPT(
15:47:49  39  	in_subscription_id IN AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:49  40  	in_user_id	   IN AMAZON_APPSTORE_RECEIPT.USER_ID%TYPE,
15:47:49  41  	in_item_type	   IN AMAZON_APPSTORE_RECEIPT.ITEM_TYPE%TYPE,
15:47:49  42  	in_start_date	   IN AMAZON_APPSTORE_RECEIPT.START_DATE%TYPE,
15:47:49  43  	in_end_date	   IN AMAZON_APPSTORE_RECEIPT.END_DATE%TYPE DEFAULT NULL,
15:47:49  44  	in_sku		   IN AMAZON_APPSTORE_RECEIPT.SKU%TYPE,
15:47:49  45  	in_purchase_token  IN AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE,
15:47:49  46  	in_created_by	   IN AMAZON_APPSTORE_RECEIPT.CREATED_BY%TYPE
15:47:49  47  ) AS
15:47:49  48  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_AMAZON_APPSTORE_RECEIPT';
15:47:49  49  var_now	 DATE := SYSDATE;
15:47:49  50  BEGIN
15:47:49  51  	INSERT INTO CORE_OWNER.AMAZON_APPSTORE_RECEIPT (
15:47:49  52  	  ID,
15:47:49  53  	  SUBSCRIPTION_ID,
15:47:49  54  	  USER_ID,
15:47:49  55  	  ITEM_TYPE,
15:47:49  56  	  START_DATE,
15:47:49  57  	  END_DATE,
15:47:49  58  	  SKU,
15:47:49  59  	  PURCHASE_TOKEN,
15:47:49  60  	  CREATE_DATE,
15:47:49  61  	  CREATED_BY,
15:47:49  62  	  UPDATE_DATE,
15:47:49  63  	  UPDATED_BY
15:47:49  64  	) VALUES (
15:47:49  65  	  CORE_OWNER.AAS_RECEIPT_ID_SEQ.nextval,
15:47:49  66  	  in_subscription_id,
15:47:49  67  	  in_user_id,
15:47:49  68  	  in_item_type,
15:47:49  69  	  in_start_date,
15:47:49  70  	  in_end_date,
15:47:49  71  	  in_sku,
15:47:49  72  	  in_purchase_token,
15:47:49  73  	  var_now,
15:47:49  74  	  in_created_by,
15:47:49  75  	  var_now,
15:47:49  76  	  in_created_by
15:47:49  77  	);
15:47:49  78  END ADD_AMAZON_APPSTORE_RECEIPT;
15:47:49  79  
15:47:49  80  	PROCEDURE CREATE_AMAZON_SUB(
15:47:49  81  /*
15:47:49  82  Throws exceptions:
15:47:49  83  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49  84  */
15:47:49  85  	  out_id	      OUT NUMBER,
15:47:49  86  	  in_subscription_id  IN AMAZON_SUB.SUBSCRIPTION_ID%TYPE,
15:47:49  87  	  in_amazon_id	      IN AMAZON_SUB.AMAZON_ID%TYPE,
15:47:49  88  	  in_created_by       IN AMAZON_SUB.CREATED_BY%TYPE
15:47:49  89  ) AS
15:47:49  90  -- VARIABLES
15:47:49  91  SPROC_NAME	CONSTANT VARCHAR2(32) := 'CREATE_AMAZON_SUB';
15:47:49  92  var_current_date	DATE;
15:47:49  93  var_count 	NUMBER;
15:47:49  94  AMAZON_SUB_USED	EXCEPTION;
15:47:49  95  BEGIN
15:47:49  96  
15:47:49  97  	SELECT COUNT(1) INTO var_count
15:47:49  98  	FROM SUBSCRIPTION s, AMAZON_SUB am
15:47:49  99  	WHERE
15:47:49 100  	  am.AMAZON_ID = in_amazon_id
15:47:49 101  	  and am.subscription_id = s.id
15:47:49 102  	  and s.subscription_status_id = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE;
15:47:49 103  
15:47:49 104  	if var_count > 0 then
15:47:49 105  	  raise AMAZON_SUB_USED;
15:47:49 106  	end if;
15:47:49 107  
15:47:49 108  	SELECT
15:47:49 109  	  CORE_OWNER.AMAZON_SUB_ID_SEQ.NEXTVAL
15:47:49 110  	INTO
15:47:49 111  	  out_id
15:47:49 112  	FROM
15:47:49 113  	  dual
15:47:49 114  	;
15:47:49 115  
15:47:49 116  	SELECT
15:47:49 117  	  sysdate
15:47:49 118  	INTO
15:47:49 119  	  var_current_date
15:47:49 120  	FROM
15:47:49 121  	  dual
15:47:49 122  	;
15:47:49 123  
15:47:49 124  	INSERT INTO CORE_OWNER.AMAZON_SUB
15:47:49 125  	(
15:47:49 126  	  id,
15:47:49 127  	  subscription_id,
15:47:49 128  	  amazon_id,
15:47:49 129  	  create_date,
15:47:49 130  	  created_by,
15:47:49 131  	  update_date,
15:47:49 132  	  updated_by
15:47:49 133  	)
15:47:49 134  	VALUES
15:47:49 135  	(
15:47:49 136  	  out_id,
15:47:49 137  	  in_subscription_id,
15:47:49 138  	  in_amazon_id,
15:47:49 139  	  var_current_date,
15:47:49 140  	  in_created_by,
15:47:49 141  	  var_current_date,
15:47:49 142  	  in_created_by
15:47:49 143  	);
15:47:49 144  
15:47:49 145  EXCEPTION
15:47:49 146  WHEN AMAZON_SUB_USED THEN
15:47:49 147  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:49 148  	  SPROC_NAME, 'Amazon sub already used', SQLERRM);
15:47:49 149  WHEN DUP_VAL_ON_INDEX THEN
15:47:49 150  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:49 151  	  SPROC_NAME, 'Duplicate value', SQLERRM);
15:47:49 152  WHEN OTHERS THEN
15:47:49 153  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 154  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 155  END CREATE_AMAZON_SUB;
15:47:49 156  
15:47:49 157  END PROCS_AMAZON_CRU_V22;
15:47:49 158  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_CHARGE_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_CHARGE(
15:47:49   4  	out_charge_id	      OUT CHARGE.ID%TYPE,
15:47:49   5  	in_charge_id	      IN CHARGE.ID%TYPE DEFAULT NULL,
15:47:49   6  	in_invoice_id	      IN CHARGE.INVOICE_ID%TYPE,
15:47:49   7  	in_transaction_id     IN CHARGE.TRANSACTION_ID%TYPE DEFAULT NULL,
15:47:49   8  	in_instrument_type_id IN CHARGE.INSTRUMENT_TYPE_ID%TYPE,
15:47:49   9  	in_instrument_id      IN CHARGE.INSTRUMENT_ID%TYPE,
15:47:49  10  	in_charge_amount      IN CHARGE.CHARGE_AMOUNT%TYPE,
15:47:49  11  	in_charge_status_id   IN CHARGE.CHARGE_STATUS_ID%TYPE,
15:47:49  12  	in_created_by	      IN CHARGE.CREATED_BY%TYPE
15:47:49  13  ) AS
15:47:49  14  -- VARIABLES
15:47:49  15  var_charge_id CHARGE.ID%TYPE;
15:47:49  16  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:49  17  var_date DATE := SYSDATE;
15:47:49  18  BEGIN
15:47:49  19  	IF in_charge_id IS NULL THEN
15:47:49  20  	  SELECT
15:47:49  21  	    CRG_ID_SEQ.nextVal into var_charge_id
15:47:49  22  	  FROM DUAL;
15:47:49  23  	ELSE
15:47:49  24  	  var_charge_id := in_charge_id;
15:47:49  25  	END IF;
15:47:49  26  	INSERT INTO
15:47:49  27  	  CHARGE (
15:47:49  28  	    ID,
15:47:49  29  	    INVOICE_ID,
15:47:49  30  	    TRANSACTION_ID,
15:47:49  31  	    INSTRUMENT_TYPE_ID,
15:47:49  32  	    INSTRUMENT_ID,
15:47:49  33  	    CHARGE_AMOUNT,
15:47:49  34  	    CHARGE_STATUS_ID,
15:47:49  35  	    CREATE_DATE,
15:47:49  36  	    CREATED_BY,
15:47:49  37  	    UPDATE_DATE,
15:47:49  38  	    UPDATED_BY
15:47:49  39  	  ) VALUES (
15:47:49  40  	    var_charge_id,
15:47:49  41  	    in_invoice_id,
15:47:49  42  	    in_transaction_id,
15:47:49  43  	    in_instrument_type_id,
15:47:49  44  	    in_instrument_id,
15:47:49  45  	    in_charge_amount,
15:47:49  46  	    in_charge_status_id,
15:47:49  47  	    var_date,
15:47:49  48  	    in_created_by,
15:47:49  49  	    var_date,
15:47:49  50  	    in_created_by
15:47:49  51  	  );
15:47:49  52  
15:47:49  53  	out_charge_id := var_charge_id;
15:47:49  54  END CREATE_CHARGE;
15:47:49  55  
15:47:49  56  PROCEDURE UPDATE_CHARGE(
15:47:49  57  	in_charge_id	      IN CHARGE.ID%TYPE,
15:47:49  58  	in_instrument_type_id IN CHARGE.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
15:47:49  59  	in_instrument_id      IN CHARGE.INSTRUMENT_ID%TYPE DEFAULT NULL,
15:47:49  60  	in_charge_amount      IN CHARGE.CHARGE_AMOUNT%TYPE DEFAULT NULL,
15:47:49  61  	in_charge_status_id   IN CHARGE.CHARGE_STATUS_ID%TYPE DEFAULT NULL,
15:47:49  62  	in_updated_by	      IN CHARGE.UPDATED_BY%TYPE
15:47:49  63  ) AS
15:47:49  64  BEGIN
15:47:49  65  
15:47:49  66  	-- Create history
15:47:49  67  	PROCS_HISTORY_V22.CREATE_CHARGE_HISTORY(
15:47:49  68  	  in_charge_id		       => in_charge_id,
15:47:49  69  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49  70  	);
15:47:49  71  
15:47:49  72  	UPDATE
15:47:49  73  	  CHARGE
15:47:49  74  	SET
15:47:49  75  	  INSTRUMENT_TYPE_ID = NVL(in_instrument_type_id, INSTRUMENT_TYPE_ID),
15:47:49  76  	  INSTRUMENT_ID      = NVL(in_instrument_id, INSTRUMENT_ID),
15:47:49  77  	  CHARGE_AMOUNT      = NVL(in_charge_amount, CHARGE_AMOUNT),
15:47:49  78  	  CHARGE_STATUS_ID   = NVL(in_charge_status_id, CHARGE_STATUS_ID),
15:47:49  79  	  UPDATE_DATE	     = SYSDATE,
15:47:49  80  	  UPDATED_BY	     = in_updated_by
15:47:49  81  	WHERE
15:47:49  82  	  ID = in_charge_id;
15:47:49  83  
15:47:49  84  END UPDATE_CHARGE;
15:47:49  85  
15:47:49  86  END PROCS_CHARGE_CRU_V22;
15:47:49  87  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.00
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_FIN_INSTRUMENTS_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_CREDIT_CARD(
15:47:49   4  	out_credit_card_id	    OUT CREDIT_CARD.ID%TYPE,
15:47:49   5  	in_credit_card_id	    IN CREDIT_CARD.ID%TYPE DEFAULT NULL,
15:47:49   6  	in_account_id		    IN CREDIT_CARD.ACCOUNT_ID%TYPE,
15:47:49   7  	in_instrument_name	    IN CREDIT_CARD.INSTRUMENT_NAME%TYPE,
15:47:49   8  	in_private_card_holder_name IN CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME%TYPE,
15:47:49   9  	in_private_street_address   IN CREDIT_CARD.PRIVATE_STREET_ADDRESS%TYPE,
15:47:49  10  	in_private_street_address2  IN CREDIT_CARD.PRIVATE_STREET_ADDRESS2%TYPE DEFAULT NULL,
15:47:49  11  	in_state		    IN CREDIT_CARD.STATE%TYPE,
15:47:49  12  	in_city 		    IN CREDIT_CARD.CITY%TYPE,
15:47:49  13  	in_postal_code		    IN CREDIT_CARD.POSTAL_CODE%TYPE,
15:47:49  14  	in_country		    IN CREDIT_CARD.COUNTRY%TYPE,
15:47:49  15  	in_last_four_cc 	    IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
15:47:49  16  	in_expiration_date	    IN CREDIT_CARD.EXPIRATION_DATE%TYPE,
15:47:49  17  	in_credit_card_type_id	    IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE,
15:47:49  18  	in_secret_token 	    IN CREDIT_CARD.SECRET_TOKEN%TYPE,
15:47:49  19  	in_chase_profile_id		in CREDIT_CARD.CHASE_PROFILE_ID%TYPE,
15:47:49  20  	in_created_by		    IN CREDIT_CARD.CREATED_BY%TYPE,
15:47:49  21  	in_credit_card_status_id    IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE,
15:47:49  22  	in_private_first_name	    IN CREDIT_CARD.PRIVATE_FIRST_NAME%TYPE,
15:47:49  23  	in_private_last_name	    IN CREDIT_CARD.PRIVATE_LAST_NAME%TYPE
15:47:49  24  ) AS
15:47:49  25  -- VARIABLES
15:47:49  26  var_credit_card_id CREDIT_CARD.ID%TYPE;
15:47:49  27  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:49  28  var_date DATE := SYSDATE;
15:47:49  29  BEGIN
15:47:49  30  	IF in_credit_card_id IS NULL THEN
15:47:49  31  	  SELECT
15:47:49  32  	    CC_ID_SEQ.nextVal into var_credit_card_id
15:47:49  33  	  FROM DUAL;
15:47:49  34  	ELSE
15:47:49  35  	  var_credit_card_id := in_credit_card_id;
15:47:49  36  	END IF;
15:47:49  37  	INSERT INTO CREDIT_CARD(
15:47:49  38  	    ID,
15:47:49  39  	    ACCOUNT_ID,
15:47:49  40  	    INSTRUMENT_NAME,
15:47:49  41  	    PRIVATE_CARD_HOLDER_NAME,
15:47:49  42  	    PRIVATE_STREET_ADDRESS,
15:47:49  43  	    PRIVATE_STREET_ADDRESS2,
15:47:49  44  	    STATE,
15:47:49  45  	    CITY,
15:47:49  46  	    POSTAL_CODE,
15:47:49  47  	    COUNTRY,
15:47:49  48  	    LAST_FOUR_CC,
15:47:49  49  	    EXPIRATION_DATE,
15:47:49  50  	    CREDIT_CARD_TYPE_ID,
15:47:49  51  	    SECRET_TOKEN,
15:47:49  52  	    CHASE_PROFILE_ID,
15:47:49  53  	    CREATE_DATE,
15:47:49  54  	    CREATED_BY,
15:47:49  55  	    UPDATE_DATE,
15:47:49  56  	    UPDATED_BY,
15:47:49  57  	    CREDIT_CARD_STATUS_ID,
15:47:49  58  	    PRIVATE_FIRST_NAME,
15:47:49  59  	    PRIVATE_LAST_NAME
15:47:49  60  	  ) VALUES (
15:47:49  61  	    var_credit_card_id,
15:47:49  62  	    in_account_id,
15:47:49  63  	    in_instrument_name,
15:47:49  64  	    in_private_card_holder_name,
15:47:49  65  	    in_private_street_address,
15:47:49  66  	    in_private_street_address2,
15:47:49  67  	    in_state,
15:47:49  68  	    in_city,
15:47:49  69  	    in_postal_code,
15:47:49  70  	    in_country,
15:47:49  71  	    in_last_four_cc,
15:47:49  72  	    in_expiration_date,
15:47:49  73  	    in_credit_card_type_id,
15:47:49  74  	    in_secret_token,
15:47:49  75  	    in_chase_profile_id,
15:47:49  76  	    var_date,
15:47:49  77  	    in_created_by,
15:47:49  78  	    var_date,
15:47:49  79  	    in_created_by,
15:47:49  80  	    in_credit_card_status_id,
15:47:49  81  	    in_private_first_name,
15:47:49  82  	    in_private_last_name
15:47:49  83  	  );
15:47:49  84  
15:47:49  85  	out_credit_card_id := var_credit_card_id;
15:47:49  86  END CREATE_CREDIT_CARD;
15:47:49  87  
15:47:49  88  /******************************************************************************/
15:47:49  89  
15:47:49  90  PROCEDURE UPDATE_CREDIT_CARD(
15:47:49  91  	in_credit_card_id	    IN CREDIT_CARD.ID%TYPE,
15:47:49  92  	in_instrument_name	    IN CREDIT_CARD.INSTRUMENT_NAME%TYPE DEFAULT NULL,
15:47:49  93  	in_private_card_holder_name IN CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME%TYPE DEFAULT NULL,
15:47:49  94  	in_private_street_address   IN CREDIT_CARD.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
15:47:49  95  	in_private_street_address2  IN CREDIT_CARD.PRIVATE_STREET_ADDRESS2%TYPE DEFAULT NULL,
15:47:49  96  	in_state		    IN CREDIT_CARD.STATE%TYPE DEFAULT NULL,
15:47:49  97  	in_city 		    IN CREDIT_CARD.CITY%TYPE DEFAULT NULL,
15:47:49  98  	in_postal_code		    IN CREDIT_CARD.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:49  99  	in_country		    IN CREDIT_CARD.COUNTRY%TYPE DEFAULT NULL,
15:47:49 100  	in_last_four_cc 	    IN CREDIT_CARD.LAST_FOUR_CC%TYPE DEFAULT NULL,
15:47:49 101  	in_expiration_date	    IN CREDIT_CARD.EXPIRATION_DATE%TYPE DEFAULT NULL,
15:47:49 102  	in_credit_card_type_id	    IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE DEFAULT NULL,
15:47:49 103  	in_secret_token 	    IN CREDIT_CARD.SECRET_TOKEN%TYPE DEFAULT NULL,
15:47:49 104  	in_chase_profile_id	    IN CREDIT_CARD.CHASE_PROFILE_ID%TYPE DEFAULT NULL,
15:47:49 105  	in_updated_by		    IN CREDIT_CARD.UPDATED_BY%TYPE,
15:47:49 106  	in_credit_card_status_id    IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT NULL,
15:47:49 107  	in_private_first_name	    IN CREDIT_CARD.PRIVATE_FIRST_NAME%TYPE DEFAULT NULL,
15:47:49 108  	in_private_last_name	    IN CREDIT_CARD.PRIVATE_LAST_NAME%TYPE DEFAULT NULL
15:47:49 109  ) AS
15:47:49 110  BEGIN
15:47:49 111  
15:47:49 112  	-- Create history
15:47:49 113  	PROCS_HISTORY_V22.CREATE_CREDIT_CARD_HISTORY(
15:47:49 114  	  in_credit_card_id	       => in_credit_card_id,
15:47:49 115  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49 116  	);
15:47:49 117  
15:47:49 118  	UPDATE CREDIT_CARD SET
15:47:49 119  	  INSTRUMENT_NAME	   = NVL(in_instrument_name, INSTRUMENT_NAME),
15:47:49 120  	  PRIVATE_CARD_HOLDER_NAME = NVL(in_private_card_holder_name, PRIVATE_CARD_HOLDER_NAME),
15:47:49 121  	  PRIVATE_STREET_ADDRESS   = NVL(in_private_street_address, PRIVATE_STREET_ADDRESS),
15:47:49 122  	  PRIVATE_STREET_ADDRESS2  = NVL(in_private_street_address, PRIVATE_STREET_ADDRESS2),
15:47:49 123  	  STATE 		   = NVL(in_state, STATE),
15:47:49 124  	  CITY			   = NVL(in_city, CITY),
15:47:49 125  	  POSTAL_CODE		   = NVL(in_postal_code, POSTAL_CODE),
15:47:49 126  	  COUNTRY		   = NVL(in_country, COUNTRY),
15:47:49 127  	  LAST_FOUR_CC		   = NVL(in_last_four_cc, LAST_FOUR_CC),
15:47:49 128  	  EXPIRATION_DATE	   = NVL(in_expiration_date, EXPIRATION_DATE),
15:47:49 129  	  CREDIT_CARD_TYPE_ID	   = NVL(in_credit_card_type_id, CREDIT_CARD_TYPE_ID),
15:47:49 130  	  SECRET_TOKEN		   = NVL(in_secret_token, SECRET_TOKEN),
15:47:49 131  	  CHASE_PROFILE_ID	   = NVL(in_chase_profile_id, CHASE_PROFILE_ID),
15:47:49 132  	  UPDATE_DATE		   = SYSDATE,
15:47:49 133  	  UPDATED_BY		   = in_updated_by,
15:47:49 134  	  CREDIT_CARD_STATUS_ID    = NVL(in_credit_card_status_id, CREDIT_CARD_STATUS_ID),
15:47:49 135  	  PRIVATE_FIRST_NAME	   = NVL(in_private_first_name, PRIVATE_FIRST_NAME),
15:47:49 136  	  PRIVATE_LAST_NAME	   = NVL(in_private_last_name, PRIVATE_LAST_NAME)
15:47:49 137  	WHERE
15:47:49 138  	  ID = in_credit_card_id;
15:47:49 139  
15:47:49 140  END UPDATE_CREDIT_CARD;
15:47:49 141  
15:47:49 142  /******************************************************************************/
15:47:49 143  
15:47:49 144  PROCEDURE CREATE_PAYPAL(
15:47:49 145  	out_paypal_id			OUT PAYPAL.ID%TYPE,
15:47:49 146  	in_paypal_id			IN PAYPAL.ID%TYPE DEFAULT NULL,
15:47:49 147  	in_account_id			IN PAYPAL.ACCOUNT_ID%TYPE,
15:47:49 148  	in_instrument_name		IN PAYPAL.INSTRUMENT_NAME%TYPE DEFAULT NULL,
15:47:49 149  	in_private_email_address	IN PAYPAL.PRIVATE_EMAIL_ADDRESS%TYPE DEFAULT NULL,
15:47:49 150  	in_created_by			IN PAYPAL.CREATED_BY%TYPE,
15:47:49 151  	in_paypal_status_id		IN PAYPAL.PAYPAL_STATUS_ID%TYPE,
15:47:49 152  	in_paypal_prvt_street_address	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE,
15:47:49 153  	in_paypal_prvt_street_address2	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE,
15:47:49 154  	in_state			IN PAYPAL.STATE%TYPE,
15:47:49 155  	in_city 			IN PAYPAL.CITY%TYPE,
15:47:49 156  	in_postal_code			IN PAYPAL.POSTAL_CODE%TYPE,
15:47:49 157  	in_country			IN PAYPAL.COUNTRY%TYPE,
15:47:49 158  	in_expiration_date		IN PAYPAL.EXPIRATION_DATE%TYPE,
15:47:49 159  	in_secret_token 		IN PAYPAL.SECRET_TOKEN%TYPE
15:47:49 160  ) AS
15:47:49 161  -- VARIABLES
15:47:49 162  var_paypal_id PAYPAL.ID%TYPE;
15:47:49 163  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:49 164  var_date DATE := SYSDATE;
15:47:49 165  BEGIN
15:47:49 166  	IF in_paypal_id IS NULL THEN
15:47:49 167  	  SELECT
15:47:49 168  	    PP_ID_SEQ.nextVal into var_paypal_id
15:47:49 169  	  FROM DUAL;
15:47:49 170  	ELSE
15:47:49 171  	  var_paypal_id := in_paypal_id;
15:47:49 172  	END IF;
15:47:49 173  	INSERT INTO PAYPAL(
15:47:49 174  	    ID,
15:47:49 175  	    ACCOUNT_ID,
15:47:49 176  	    INSTRUMENT_NAME,
15:47:49 177  	    PRIVATE_EMAIL_ADDRESS,
15:47:49 178  	    CREATE_DATE,
15:47:49 179  	    CREATED_BY,
15:47:49 180  	    UPDATE_DATE,
15:47:49 181  	    UPDATED_BY,
15:47:49 182  	    PAYPAL_STATUS_ID,
15:47:49 183  	    PRIVATE_STREET_ADDRESS,
15:47:49 184  	    PRIVATE_STREET_ADDRESS2,
15:47:49 185  	    STATE,
15:47:49 186  	    CITY,
15:47:49 187  	    POSTAL_CODE,
15:47:49 188  	    COUNTRY,
15:47:49 189  	    EXPIRATION_DATE,
15:47:49 190  	    SECRET_TOKEN
15:47:49 191  	  ) VALUES (
15:47:49 192  	    var_paypal_id,
15:47:49 193  	    in_account_id,
15:47:49 194  	    in_instrument_name,
15:47:49 195  	    in_private_email_address,
15:47:49 196  	    var_date,
15:47:49 197  	    in_created_by,
15:47:49 198  	    var_date,
15:47:49 199  	    in_created_by,
15:47:49 200  	    in_paypal_status_id,
15:47:49 201  	    in_paypal_prvt_street_address,
15:47:49 202  	    in_paypal_prvt_street_address2,
15:47:49 203  	    in_state,
15:47:49 204  	    in_city,
15:47:49 205  	    in_postal_code,
15:47:49 206  	    in_country,
15:47:49 207  	    in_expiration_date,
15:47:49 208  	    in_secret_token
15:47:49 209  	  );
15:47:49 210  	out_paypal_id := var_paypal_id;
15:47:49 211  END CREATE_PAYPAL;
15:47:49 212  
15:47:49 213  /******************************************************************************/
15:47:49 214  
15:47:49 215  PROCEDURE UPDATE_PAYPAL(
15:47:49 216  	in_paypal_id			IN PAYPAL.ID%TYPE,
15:47:49 217  	in_instrument_name		IN PAYPAL.INSTRUMENT_NAME%TYPE DEFAULT NULL,
15:47:49 218  	in_private_email_address	IN PAYPAL.PRIVATE_EMAIL_ADDRESS%TYPE DEFAULT NULL,
15:47:49 219  	in_updated_by			IN PAYPAL.UPDATED_BY%TYPE,
15:47:49 220  	in_paypal_status_id		IN PAYPAL.PAYPAL_STATUS_ID%TYPE DEFAULT NULL,
15:47:49 221  	in_paypal_prvt_street_address	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
15:47:49 222  	in_paypal_prvt_street_address2	IN PAYPAL.PRIVATE_STREET_ADDRESS%TYPE DEFAULT NULL,
15:47:49 223  	in_state			IN PAYPAL.STATE%TYPE DEFAULT NULL,
15:47:49 224  	in_city 			IN PAYPAL.CITY%TYPE DEFAULT NULL,
15:47:49 225  	in_postal_code			IN PAYPAL.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:49 226  	in_country			IN PAYPAL.COUNTRY%TYPE DEFAULT NULL,
15:47:49 227  	in_expiration_date		IN PAYPAL.EXPIRATION_DATE%TYPE DEFAULT NULL,
15:47:49 228  	in_secret_token 		IN PAYPAL.SECRET_TOKEN%TYPE
15:47:49 229  ) AS
15:47:49 230  BEGIN
15:47:49 231  	-- Create history
15:47:49 232  	PROCS_HISTORY_V22.CREATE_PAYPAL_HISTORY(
15:47:49 233  	  in_paypal_id		       => in_paypal_id,
15:47:49 234  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49 235  	);
15:47:49 236  
15:47:49 237  	UPDATE PAYPAL SET
15:47:49 238  	  INSTRUMENT_NAME  = NVL(in_instrument_name, INSTRUMENT_NAME),
15:47:49 239  	  PRIVATE_EMAIL_ADDRESS    = NVL(in_private_email_address, PRIVATE_EMAIL_ADDRESS),
15:47:49 240  	  UPDATE_DATE	   = SYSDATE,
15:47:49 241  	  UPDATED_BY	   = in_updated_by,
15:47:49 242  	  PAYPAL_STATUS_ID = NVL(in_paypal_status_id, PAYPAL_STATUS_ID),
15:47:49 243  	  PRIVATE_STREET_ADDRESS  = NVL(in_paypal_prvt_street_address, PRIVATE_STREET_ADDRESS),
15:47:49 244  	  PRIVATE_STREET_ADDRESS2 = NVL(in_paypal_prvt_street_address2, PRIVATE_STREET_ADDRESS2),
15:47:49 245  	  STATE 		  = NVL(in_state, STATE),
15:47:49 246  	  CITY			  = NVL(in_city, CITY),
15:47:49 247  	  POSTAL_CODE		  = NVL(in_postal_code, POSTAL_CODE),
15:47:49 248  	  COUNTRY		  = NVL(in_country, COUNTRY),
15:47:49 249  	  EXPIRATION_DATE	  = NVL(in_expiration_date, EXPIRATION_DATE),
15:47:49 250  	  SECRET_TOKEN		  = NVL(in_secret_token, SECRET_TOKEN)
15:47:49 251  	WHERE
15:47:49 252  	  ID = in_paypal_id;
15:47:49 253  END UPDATE_PAYPAL;
15:47:49 254  
15:47:49 255  /******************************************************************************/
15:47:49 256  
15:47:49 257  PROCEDURE CREATE_GIFT_CERTIFICATE(
15:47:49 258  	out_gift_certificate_id       OUT GIFT_CERTIFICATE.ID%TYPE,
15:47:49 259  	in_gift_certificate_id	      IN GIFT_CERTIFICATE.ID%TYPE DEFAULT NULL,
15:47:49 260  	in_purchaser_group_id	      IN GIFT_CERTIFICATE.PURCHASER_GROUP_ID%TYPE,
15:47:49 261  	in_purchaser_invoice_id       IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:49 262  	in_offer_chain_id	      IN GIFT_CERTIFICATE.OFFER_CHAIN_ID%TYPE,
15:47:49 263  	in_expiration_date	      IN GIFT_CERTIFICATE.EXPIRATION_DATE%TYPE DEFAULT NULL,
15:47:49 264  	in_purchase_date	      IN GIFT_CERTIFICATE.PURCHASE_DATE%TYPE,
15:47:49 265  	in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE,
15:47:49 266  	in_code 		      IN GIFT_CERTIFICATE.CODE%TYPE,
15:47:49 267  	in_created_by		      IN GIFT_CERTIFICATE.CREATED_BY%TYPE,
15:47:49 268  	in_recipient_name	      IN GIFT_CERTIFICATE.RECIPIENT_NAME%TYPE DEFAULT NULL,
15:47:49 269  	in_gift_message 	      IN GIFT_CERTIFICATE.GIFT_MESSAGE%TYPE DEFAULT NULL,
15:47:49 270  	in_recipient_email	      IN GIFT_CERTIFICATE.RECIPIENT_EMAIL%TYPE DEFAULT NULL,
15:47:49 271  	in_finalized_invoice_id       IN GIFT_CERTIFICATE.FINALIZED_INVOICE_ID%TYPE DEFAULT NULL,
15:47:49 272  	in_sender_email 	      IN GIFT_CERTIFICATE.SENDER_EMAIL%TYPE,
15:47:49 273  	in_sender_name		      IN GIFT_CERTIFICATE.SENDER_NAME%TYPE,
15:47:49 274  	in_redemption_date	      IN GIFT_CERTIFICATE.REDEMPTION_DATE%TYPE DEFAULT NULL,
15:47:49 275  	in_cancelation_date	      IN GIFT_CERTIFICATE.CANCELATION_DATE%TYPE DEFAULT NULL,
15:47:49 276  	in_redeemer_group_id	      IN GIFT_CERTIFICATE.REDEEMER_GROUP_ID%TYPE DEFAULT NULL,
15:47:49 277  	in_recipient_address_id       IN GIFT_CERTIFICATE.RECIPIENT_ADDRESS_ID%TYPE DEFAULT NULL,
15:47:49 278  	in_recipient_notify_date      IN GIFT_CERTIFICATE.RECIPIENT_NOTIFY_DATE%TYPE DEFAULT NULL,
15:47:49 279  	in_campaign		      IN GC_CAMPAIGN_AND_REF.CAMPAIGN%TYPE DEFAULT NULL,
15:47:49 280  	in_reference_code	      IN GC_CAMPAIGN_AND_REF.REFERENCE_CODE%TYPE DEFAULT NULL
15:47:49 281  ) AS
15:47:49 282  -- VARIABLES
15:47:49 283  var_gift_certificate_id GIFT_CERTIFICATE.ID%TYPE;
15:47:49 284  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:49 285  var_date DATE := SYSDATE;
15:47:49 286  BEGIN
15:47:49 287  	IF in_gift_certificate_id IS NULL THEN
15:47:49 288  	  SELECT
15:47:49 289  	    GC_ID_SEQ.nextVal into var_gift_certificate_id
15:47:49 290  	  FROM DUAL;
15:47:49 291  	ELSE
15:47:49 292  	  var_gift_certificate_id := in_gift_certificate_id;
15:47:49 293  	END IF;
15:47:49 294  
15:47:49 295  	INSERT INTO GIFT_CERTIFICATE (
15:47:49 296  	    ID,
15:47:49 297  	    PURCHASER_GROUP_ID,
15:47:49 298  	    PURCHASE_INVOICE_ID,
15:47:49 299  	    OFFER_CHAIN_ID,
15:47:49 300  	    EXPIRATION_DATE,
15:47:49 301  	    PURCHASE_DATE,
15:47:49 302  	    GIFT_CERTIFICATE_STATUS_ID,
15:47:49 303  	    CODE,
15:47:49 304  	    CREATE_DATE,
15:47:49 305  	    CREATED_BY,
15:47:49 306  	    UPDATE_DATE,
15:47:49 307  	    UPDATED_BY,
15:47:49 308  	    RECIPIENT_NAME,
15:47:49 309  	    GIFT_MESSAGE,
15:47:49 310  	    RECIPIENT_EMAIL,
15:47:49 311  	    FINALIZED_INVOICE_ID,
15:47:49 312  	    SENDER_EMAIL,
15:47:49 313  	    SENDER_NAME,
15:47:49 314  	    REDEMPTION_DATE,
15:47:49 315  	    CANCELATION_DATE,
15:47:49 316  	    REDEEMER_GROUP_ID,
15:47:49 317  	    RECIPIENT_ADDRESS_ID,
15:47:49 318  	    RECIPIENT_NOTIFY_DATE
15:47:49 319  	  ) VALUES(
15:47:49 320  	    var_gift_certificate_id,
15:47:49 321  	    in_purchaser_group_id,
15:47:49 322  	    in_purchaser_invoice_id,
15:47:49 323  	    in_offer_chain_id,
15:47:49 324  	    in_expiration_date,
15:47:49 325  	    in_purchase_date,
15:47:49 326  	    in_gift_certificate_status_id,
15:47:49 327  	    in_code,
15:47:49 328  	    var_date,
15:47:49 329  	    in_created_by,
15:47:49 330  	    var_date,
15:47:49 331  	    in_created_by,
15:47:49 332  	    in_recipient_name,
15:47:49 333  	    in_gift_message,
15:47:49 334  	    in_recipient_email,
15:47:49 335  	    in_finalized_invoice_id,
15:47:49 336  	    in_sender_email,
15:47:49 337  	    in_sender_name,
15:47:49 338  	    in_redemption_date,
15:47:49 339  	    in_cancelation_date,
15:47:49 340  	    in_redeemer_group_id,
15:47:49 341  	    in_recipient_address_id,
15:47:49 342  	    in_recipient_notify_date
15:47:49 343  	  );
15:47:49 344  
15:47:49 345  	  IF in_campaign IS NOT NULL THEN
15:47:49 346  	    INSERT INTO GC_CAMPAIGN_AND_REF(GC_ID, CAMPAIGN, REFERENCE_CODE)
15:47:49 347  	      VALUES(var_gift_certificate_id, in_campaign, in_reference_code);
15:47:49 348  	  END IF;
15:47:49 349  
15:47:49 350  	out_gift_certificate_id := var_gift_certificate_id;
15:47:49 351  END CREATE_GIFT_CERTIFICATE;
15:47:49 352  
15:47:49 353  /******************************************************************************/
15:47:49 354  
15:47:49 355  PROCEDURE UPDATE_GIFT_CERTIFICATE(
15:47:49 356  	in_gift_certificate_id	      IN GIFT_CERTIFICATE.ID%TYPE,
15:47:49 357  	in_expiration_date	      IN GIFT_CERTIFICATE.EXPIRATION_DATE%TYPE DEFAULT NULL,
15:47:49 358  	in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE DEFAULT NULL,
15:47:49 359  	in_code 		      IN GIFT_CERTIFICATE.CODE%TYPE DEFAULT NULL,
15:47:49 360  	in_updated_by		      IN GIFT_CERTIFICATE.UPDATED_BY%TYPE,
15:47:49 361  	in_recipient_name	      IN GIFT_CERTIFICATE.RECIPIENT_NAME%TYPE DEFAULT NULL,
15:47:49 362  	in_gift_message 	      IN GIFT_CERTIFICATE.GIFT_MESSAGE%TYPE DEFAULT NULL,
15:47:49 363  	in_recipient_email	      IN GIFT_CERTIFICATE.RECIPIENT_EMAIL%TYPE DEFAULT NULL,
15:47:49 364  	in_finalized_invoice_id       IN GIFT_CERTIFICATE.FINALIZED_INVOICE_ID%TYPE DEFAULT NULL,
15:47:49 365  	in_sender_email 	      IN GIFT_CERTIFICATE.SENDER_EMAIL%TYPE DEFAULT NULL,
15:47:49 366  	in_sender_name		      IN GIFT_CERTIFICATE.SENDER_NAME%TYPE DEFAULT NULL,
15:47:49 367  	in_redemption_date	      IN GIFT_CERTIFICATE.REDEMPTION_DATE%TYPE DEFAULT NULL,
15:47:49 368  	in_cancelation_date	      IN GIFT_CERTIFICATE.CANCELATION_DATE%TYPE DEFAULT NULL,
15:47:49 369  	in_redeemer_group_id	      IN GIFT_CERTIFICATE.REDEEMER_GROUP_ID%TYPE DEFAULT NULL,
15:47:49 370  	in_recipient_address_id       IN GIFT_CERTIFICATE.RECIPIENT_ADDRESS_ID%TYPE DEFAULT NULL,
15:47:49 371  	in_redeemer_address_id	      IN GIFT_CERTIFICATE.REDEEMER_ADDRESS_ID%TYPE DEFAULT NULL,
15:47:49 372  	in_recipient_notify_date      IN GIFT_CERTIFICATE.RECIPIENT_NOTIFY_DATE%TYPE DEFAULT NULL
15:47:49 373  ) AS
15:47:49 374  BEGIN
15:47:49 375  
15:47:49 376  	-- Create history
15:47:49 377  	PROCS_HISTORY_V22.CREATE_GIFT_CERT_HISTORY(
15:47:49 378  	  in_gift_certificate_id       => in_gift_certificate_id,
15:47:49 379  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49 380  	);
15:47:49 381  
15:47:49 382  	UPDATE GIFT_CERTIFICATE SET
15:47:49 383  	  EXPIRATION_DATE	     = NVL(in_expiration_date, EXPIRATION_DATE),
15:47:49 384  	  GIFT_CERTIFICATE_STATUS_ID = NVL(in_gift_certificate_status_id, GIFT_CERTIFICATE_STATUS_ID),
15:47:49 385  	  CODE			     = NVL(in_code, CODE),
15:47:49 386  	  UPDATE_DATE		     = SYSDATE,
15:47:49 387  	  UPDATED_BY		     = in_updated_by,
15:47:49 388  	  RECIPIENT_NAME	     = NVL(in_recipient_name, RECIPIENT_NAME),
15:47:49 389  	  GIFT_MESSAGE		     = NVL(in_gift_message, GIFT_MESSAGE),
15:47:49 390  	  RECIPIENT_EMAIL	     = NVL(in_recipient_email, RECIPIENT_EMAIL),
15:47:49 391  	  FINALIZED_INVOICE_ID	     = NVL(in_finalized_invoice_id, FINALIZED_INVOICE_ID),
15:47:49 392  	  SENDER_EMAIL		     = NVL(in_sender_email, SENDER_EMAIL),
15:47:49 393  	  SENDER_NAME		     = NVL(in_sender_name, SENDER_NAME),
15:47:49 394  	  REDEMPTION_DATE	     = NVL(in_redemption_date, REDEMPTION_DATE),
15:47:49 395  	  CANCELATION_DATE	     = NVL(in_cancelation_date, CANCELATION_DATE),
15:47:49 396  	  REDEEMER_GROUP_ID	     = NVL(in_redeemer_group_id, REDEEMER_GROUP_ID),
15:47:49 397  	  RECIPIENT_ADDRESS_ID	     = NVL(in_recipient_address_id, RECIPIENT_ADDRESS_ID),
15:47:49 398  	  REDEEMER_ADDRESS_ID	     = NVL(in_redeemer_address_id, REDEEMER_ADDRESS_ID),
15:47:49 399  	  RECIPIENT_NOTIFY_DATE      = NVL(in_recipient_notify_date, RECIPIENT_NOTIFY_DATE)
15:47:49 400  	WHERE
15:47:49 401  	  ID = in_gift_certificate_id;
15:47:49 402  
15:47:49 403  END UPDATE_GIFT_CERTIFICATE;
15:47:49 404  
15:47:49 405  END PROCS_FIN_INSTRUMENTS_CRU_V22;
15:47:49 406  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_GROUP_ACCOUNT_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE UPDATE_SUBSCRIPTION_SHARE (
15:47:49   4  	in_id		       IN SUBSCRIPTION_SHARE.ID%TYPE,
15:47:49   5  	in_group_account_id    IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE DEFAULT NULL,
15:47:49   6  	in_borrower_account_id IN SUBSCRIPTION_SHARE.BORROWER_ACCOUNT_ID%TYPE DEFAULT NULL,
15:47:49   7  	in_ip_address	       IN SUBSCRIPTION_SHARE.IP_ADDRESS%TYPE DEFAULT NULL,
15:47:49   8  	in_start_date	       IN SUBSCRIPTION_SHARE.START_DATE%TYPE DEFAULT NULL,
15:47:49   9  	in_end_date	       IN SUBSCRIPTION_SHARE.END_DATE%TYPE DEFAULT NULL,
15:47:49  10  	in_needs_entitlements  IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE DEFAULT NULL,
15:47:49  11  	in_updated_by	       IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
15:47:49  12  ) AS
15:47:49  13  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_SUBSCRIPTION_SHARE';
15:47:49  14  BEGIN
15:47:49  15  	UPDATE SUBSCRIPTION_SHARE SET
15:47:49  16  	  GROUP_ACCOUNT_ID     = NVL(in_group_account_id,GROUP_ACCOUNT_ID),
15:47:49  17  	  BORROWER_ACCOUNT_ID  = NVL(in_borrower_account_id,BORROWER_ACCOUNT_ID),
15:47:49  18  	  IP_ADDRESS	       = NVL(in_ip_address,IP_ADDRESS),
15:47:49  19  	  START_DATE	       = NVL(in_start_date,START_DATE),
15:47:49  20  	  END_DATE	       = NVL(in_end_date,END_DATE),
15:47:49  21  	  NEEDS_ENTITLEMENTS   = NVL(in_needs_entitlements,NEEDS_ENTITLEMENTS),
15:47:49  22  	  UPDATED_BY	       = in_updated_by,
15:47:49  23  	  UPDATE_DATE	       = SYSDATE
15:47:49  24  	WHERE
15:47:49  25  	  SUBSCRIPTION_SHARE.ID = in_id;
15:47:49  26  EXCEPTION
15:47:49  27  	WHEN OTHERS THEN
15:47:49  28  	  Procs_Common_V22.Throw_Exception(APP_EXCEPTION_CODES_V22.Internal_Error,
15:47:49  29  	    SPROC_NAME, 'Error while updating subscription share', SQLERRM);
15:47:49  30  END UPDATE_SUBSCRIPTION_SHARE;
15:47:49  31  
15:47:49  32  PROCEDURE CREATE_GROUP_ACCOUNT (
15:47:49  33  	in_subscription_id	 IN NUMBER,
15:47:49  34  	in_group_name		 IN VARCHAR2,
15:47:49  35  	in_first_name		 IN VARCHAR2,
15:47:49  36  	in_last_name		 IN VARCHAR2,
15:47:49  37  	in_email		 IN VARCHAR2,
15:47:49  38  	in_phone		 IN VARCHAR2,
15:47:49  39  	in_organization_type	 IN VARCHAR2,
15:47:49  40  	in_seats		 IN NUMBER,
15:47:49  41  	in_seat_ttl_in_hours	 IN NUMBER,
15:47:49  42  	in_ip			 IN NUMBER,
15:47:49  43  	in_created_by		 IN VARCHAR2
15:47:49  44  ) AS
15:47:49  45  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_GROUP_ACCOUNT';
15:47:49  46  var_now DATE;
15:47:49  47  BEGIN
15:47:49  48  
15:47:49  49  	SELECT
15:47:49  50  	  SYSDATE INTO var_now
15:47:49  51  	FROM dual;
15:47:49  52  
15:47:49  53  	INSERT INTO GROUP_ACCOUNT (
15:47:49  54  	  id,
15:47:49  55  	  subscription_id,
15:47:49  56  	  group_name,
15:47:49  57  	  first_name,
15:47:49  58  	  last_name,
15:47:49  59  	  email,
15:47:49  60  	  phone,
15:47:49  61  	  organization_type,
15:47:49  62  	  seats,
15:47:49  63  	  seat_ttl_in_hours,
15:47:49  64  	  ip,
15:47:49  65  	  create_date,
15:47:49  66  	  created_by,
15:47:49  67  	  update_date,
15:47:49  68  	  updated_by
15:47:49  69  	) VALUES (
15:47:49  70  	  core_owner.GRPACCNT_ID_SEQ.NEXTVAL,
15:47:49  71  	  in_subscription_id,
15:47:49  72  	  in_group_name,
15:47:49  73  	  in_first_name,
15:47:49  74  	  in_last_name,
15:47:49  75  	  in_email,
15:47:49  76  	  in_phone,
15:47:49  77  	  in_organization_type,
15:47:49  78  	  in_seats,
15:47:49  79  	  in_seat_ttl_in_hours,
15:47:49  80  	  in_ip,
15:47:49  81  	  var_now,
15:47:49  82  	  in_created_by,
15:47:49  83  	  var_now,
15:47:49  84  	  in_created_by
15:47:49  85  	);
15:47:49  86  
15:47:49  87  EXCEPTION
15:47:49  88  	WHEN PROGRAM_ERROR THEN
15:47:49  89  	  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49  90  	    SPROC_NAME, 'Program error when inserting group account', SQLERRM);
15:47:49  91  	WHEN OTHERS THEN
15:47:49  92  	  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49  93  	    SPROC_NAME, 'Unknown error when inserting group account', SQLERRM);
15:47:49  94  END CREATE_GROUP_ACCOUNT;
15:47:49  95  
15:47:49  96  
15:47:49  97  PROCEDURE CREATE_SUBSCRIPTION_SHARE (
15:47:49  98  	in_group_account_id    IN NUMBER,
15:47:49  99  	in_borrower_account_id IN NUMBER,
15:47:49 100  	in_ip_address	       IN VARCHAR2,
15:47:49 101  	in_email_domain        IN VARCHAR2,
15:47:49 102  	in_start_date	       IN DATE,
15:47:49 103  	in_end_date	       IN DATE,
15:47:49 104  	in_created_by	       IN VARCHAR2
15:47:49 105  ) AS
15:47:49 106  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_SUBSCRIPTION_SHARE';
15:47:49 107  var_now DATE;
15:47:49 108  BEGIN
15:47:49 109  
15:47:49 110  	SELECT
15:47:49 111  	  SYSDATE INTO var_now
15:47:49 112  	FROM dual;
15:47:49 113  
15:47:49 114  	INSERT INTO SUBSCRIPTION_SHARE (
15:47:49 115  	  id,
15:47:49 116  	  group_account_id,
15:47:49 117  	  borrower_account_id,
15:47:49 118  	  ip_address,
15:47:49 119  	  email_domain,
15:47:49 120  	  start_date,
15:47:49 121  	  end_date,
15:47:49 122  	  create_date,
15:47:49 123  	  created_by,
15:47:49 124  	  update_date,
15:47:49 125  	  updated_by
15:47:49 126  	) VALUES (
15:47:49 127  	  core_owner.SUBSCRIPTIONSHARE_ID_SEQ.NEXTVAL,
15:47:49 128  	  in_group_account_id,
15:47:49 129  	  in_borrower_account_id,
15:47:49 130  	  in_ip_address,
15:47:49 131  	  in_email_domain,
15:47:49 132  	  in_start_date,
15:47:49 133  	  in_end_date,
15:47:49 134  	  var_now,
15:47:49 135  	  in_created_by,
15:47:49 136  	  var_now,
15:47:49 137  	  in_created_by
15:47:49 138  	);
15:47:49 139  
15:47:49 140  EXCEPTION
15:47:49 141  	WHEN PROGRAM_ERROR THEN
15:47:49 142  	  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 143  	    SPROC_NAME, 'Program error when inserting subscription share', SQLERRM);
15:47:49 144  END CREATE_SUBSCRIPTION_SHARE;
15:47:49 145  
15:47:49 146  -- Eh, I don't like the cru packages at all
15:47:49 147  -- the idea of code reuse in PL/SQL is still lost on me
15:47:49 148  PROCEDURE DISABLE_IP_RANGES_BY_GA_ID(
15:47:49 149  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
15:47:49 150  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
15:47:49 151  ) AS
15:47:49 152  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_IP_RANGES_BY_GA_ID';
15:47:49 153  BEGIN
15:47:49 154  	update
15:47:49 155  	  GROUP_ACCOUNT_IP_RANGE IR
15:47:49 156  	set
15:47:49 157  	  IR.GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V22.GROUP_ACC_IP_RNG_INACTIVE,
15:47:49 158  	  IR.UPDATED_BY = in_updated_by,
15:47:49 159  	  IR.UPDATE_DATE = sysdate
15:47:49 160  	where
15:47:49 161  	  IR.GROUP_ACCOUNT_ID = in_group_account_id and
15:47:49 162  	  IR.GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V22.GROUP_ACC_IP_RNG_ACTIVE
15:47:49 163  	;
15:47:49 164  EXCEPTION
15:47:49 165  WHEN OTHERS THEN
15:47:49 166  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 167  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 168  END DISABLE_IP_RANGES_BY_GA_ID;
15:47:49 169  
15:47:49 170  PROCEDURE DISABLE_IP_RANGE_BY_ID(
15:47:49 171  	in_id	IN GROUP_ACCOUNT_IP_RANGE.ID%TYPE,
15:47:49 172  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
15:47:49 173  ) AS
15:47:49 174  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_IP_RANGE_BY_ID';
15:47:49 175  BEGIN
15:47:49 176  	update
15:47:49 177  	  GROUP_ACCOUNT_IP_RANGE IR
15:47:49 178  	set
15:47:49 179  	  IR.GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V22.GROUP_ACC_IP_RNG_INACTIVE,
15:47:49 180  	  IR.UPDATED_BY = in_updated_by,
15:47:49 181  	  IR.UPDATE_DATE = sysdate
15:47:49 182  	where
15:47:49 183  	  IR.ID = in_id and
15:47:49 184  	  IR.GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V22.GROUP_ACC_IP_RNG_ACTIVE
15:47:49 185  	;
15:47:49 186  	if sql%rowcount = 0 then
15:47:49 187  	  raise NO_DATA_FOUND ;
15:47:49 188  	end if;
15:47:49 189  EXCEPTION
15:47:49 190  WHEN NO_DATA_FOUND THEN
15:47:49 191  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:49 192  	  SPROC_NAME, 'Missing or invalid group_account_ip_range_id '||in_id, SQLERRM);
15:47:49 193  WHEN OTHERS THEN
15:47:49 194  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 195  	  SPROC_NAME, 'Unknown error '||in_id, SQLERRM);
15:47:49 196  END DISABLE_IP_RANGE_BY_ID;
15:47:49 197  
15:47:49 198  PROCEDURE ADD_IP_RANGE (
15:47:49 199  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
15:47:49 200  	in_minimum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_STRING%TYPE,
15:47:49 201  	in_minimum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
15:47:49 202  	in_minimum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
15:47:49 203  	in_maximum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_STRING%TYPE,
15:47:49 204  	in_maximum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_LOW%TYPE,
15:47:49 205  	in_maximum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_HIGH%TYPE,
15:47:49 206  	in_created_by IN GROUP_ACCOUNT_IP_RANGE.CREATED_BY%TYPE
15:47:49 207  ) AS
15:47:49 208  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_IP_RANGE';
15:47:49 209  BEGIN
15:47:49 210  	  INSERT INTO GROUP_ACCOUNT_IP_RANGE (
15:47:49 211  	    ID,
15:47:49 212  	    GROUP_ACCOUNT_ID,
15:47:49 213  	    MINIMUM_IP_STRING,
15:47:49 214  	    MINIMUM_IP_LOW,
15:47:49 215  	    MINIMUM_IP_HIGH,
15:47:49 216  	    MAXIMUM_IP_STRING,
15:47:49 217  	    MAXIMUM_IP_LOW,
15:47:49 218  	    MAXIMUM_IP_HIGH,
15:47:49 219  	    CREATED_BY,
15:47:49 220  	    CREATE_DATE,
15:47:49 221  	    UPDATED_BY,
15:47:49 222  	    UPDATE_DATE,
15:47:49 223  	    GROUP_ACC_IP_RNG_STATUS_ID
15:47:49 224  	  )
15:47:49 225  	  VALUES (
15:47:49 226  	    GROUPACCOUNTIPRANGE_ID_SEQ.nextval,
15:47:49 227  	    in_group_account_id,
15:47:49 228  	    in_minimum_ip_string,
15:47:49 229  	    in_minimum_ip_low,
15:47:49 230  	    in_minimum_ip_high,
15:47:49 231  	    in_maximum_ip_string,
15:47:49 232  	    in_maximum_ip_low,
15:47:49 233  	    in_maximum_ip_high,
15:47:49 234  	    in_created_by,
15:47:49 235  	    sysdate,
15:47:49 236  	    in_created_by,
15:47:49 237  	    sysdate,
15:47:49 238  	    GLOBAL_STATUSES_V22.GROUP_ACC_IP_RNG_ACTIVE
15:47:49 239  	  );
15:47:49 240  EXCEPTION
15:47:49 241  WHEN OTHERS THEN
15:47:49 242  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 243  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 244  END ADD_IP_RANGE;
15:47:49 245  
15:47:49 246  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_GA_ID(
15:47:49 247  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:49 248  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
15:47:49 249  ) AS
15:47:49 250  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_EMAIL_DOMAIN_BY_GA_ID';
15:47:49 251  BEGIN
15:47:49 252  	update
15:47:49 253  	  GROUP_ACCOUNT_EMAIL_DOMAIN ED
15:47:49 254  	set
15:47:49 255  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V22.GROUP_ACC_EMAIL_DOMAIN_INACT,
15:47:49 256  	  ED.UPDATED_BY = in_updated_by,
15:47:49 257  	  ED.UPDATE_DATE = sysdate
15:47:49 258  	where
15:47:49 259  	  ED.GROUP_ACCOUNT_ID = in_group_account_id and
15:47:49 260  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V22.GROUP_ACC_EMAIL_DOMAIN_ACT
15:47:49 261  	;
15:47:49 262  EXCEPTION
15:47:49 263  WHEN OTHERS THEN
15:47:49 264  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 265  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 266  END DISABLE_EMAIL_DOMAIN_BY_GA_ID;
15:47:49 267  
15:47:49 268  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_ID(
15:47:49 269  	in_id	IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
15:47:49 270  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
15:47:49 271  ) AS
15:47:49 272  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_EMAIL_DOMAIN_BY_ID';
15:47:49 273  BEGIN
15:47:49 274  	update
15:47:49 275  	  GROUP_ACCOUNT_EMAIL_DOMAIN ED
15:47:49 276  	set
15:47:49 277  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V22.GROUP_ACC_EMAIL_DOMAIN_INACT,
15:47:49 278  	  ED.UPDATED_BY = in_updated_by,
15:47:49 279  	  ED.UPDATE_DATE = sysdate
15:47:49 280  	where
15:47:49 281  	  ED.ID = in_id and
15:47:49 282  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V22.GROUP_ACC_EMAIL_DOMAIN_ACT
15:47:49 283  	;
15:47:49 284  EXCEPTION
15:47:49 285  WHEN OTHERS THEN
15:47:49 286  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 287  	  SPROC_NAME, 'Unknown error '||in_id, SQLERRM);
15:47:49 288  END DISABLE_EMAIL_DOMAIN_BY_ID;
15:47:49 289  
15:47:49 290  
15:47:49 291  PROCEDURE ENABLE_EMAIL_DOMAIN_BY_ID(
15:47:49 292  	in_id	IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
15:47:49 293  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
15:47:49 294  ) AS
15:47:49 295  SPROC_NAME CONSTANT VARCHAR2(32) := 'ENABLE_EMAIL_DOMAIN_BY_ID';
15:47:49 296  BEGIN
15:47:49 297  	update
15:47:49 298  	  GROUP_ACCOUNT_EMAIL_DOMAIN ED
15:47:49 299  	set
15:47:49 300  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V22.GROUP_ACC_EMAIL_DOMAIN_ACT,
15:47:49 301  	  ED.UPDATED_BY = in_updated_by,
15:47:49 302  	  ED.UPDATE_DATE = sysdate
15:47:49 303  	where
15:47:49 304  	  ED.ID = in_id and
15:47:49 305  	  ED.IS_ACTIVE = GLOBAL_STATUSES_V22.GROUP_ACC_EMAIL_DOMAIN_INACT
15:47:49 306  	;
15:47:49 307  EXCEPTION
15:47:49 308  WHEN DUP_VAL_ON_INDEX THEN
15:47:49 309  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:49 310  		SPROC_NAME, 'Unique Constraint Violated', SQLERRM);
15:47:49 311  WHEN OTHERS THEN
15:47:49 312  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 313  	  SPROC_NAME, 'Unknown error '||in_id, SQLERRM);
15:47:49 314  END ENABLE_EMAIL_DOMAIN_BY_ID;
15:47:49 315  
15:47:49 316  
15:47:49 317  PROCEDURE ADD_EMAIL_DOMAIN (
15:47:49 318  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:49 319  	in_email_domain IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
15:47:49 320  	in_is_active IN  GROUP_ACCOUNT_EMAIL_DOMAIN.IS_ACTIVE%TYPE,
15:47:49 321  	in_created_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.CREATED_BY%TYPE
15:47:49 322  ) AS
15:47:49 323  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_EMAIL_DOMAIN';
15:47:49 324  BEGIN
15:47:49 325  	  INSERT INTO GROUP_ACCOUNT_EMAIL_DOMAIN (
15:47:49 326  	    ID,
15:47:49 327  	    GROUP_ACCOUNT_ID,
15:47:49 328  	    EMAIL_DOMAIN,
15:47:49 329  		IS_ACTIVE,
15:47:49 330  	    CREATED_BY,
15:47:49 331  	    CREATE_DATE,
15:47:49 332  	    UPDATED_BY,
15:47:49 333  	    UPDATE_DATE
15:47:49 334  	  )
15:47:49 335  	  VALUES (
15:47:49 336  	    GROUPACCOUNTEMAILDOMAIN_SEQ.nextval,
15:47:49 337  	    in_group_account_id,
15:47:49 338  		in_email_domain,
15:47:49 339  		in_is_active,
15:47:49 340  		in_created_by,
15:47:49 341  	    sysdate,
15:47:49 342  	    in_created_by,
15:47:49 343  	    sysdate
15:47:49 344  	  );
15:47:49 345  EXCEPTION
15:47:49 346  WHEN DUP_VAL_ON_INDEX THEN
15:47:49 347  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:49 348  	  SPROC_NAME, 'Unique Constraint Violated', SQLERRM);
15:47:49 349  WHEN OTHERS THEN
15:47:49 350  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 351  	  SPROC_NAME, 'Unknown error 1', SQLERRM);
15:47:49 352  END ADD_EMAIL_DOMAIN;
15:47:49 353  
15:47:49 354  PROCEDURE UPDATE_GROUP_ACCOUNT (
15:47:49 355  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
15:47:49 356  	in_group_name		 IN GROUP_ACCOUNT.GROUP_NAME%TYPE,
15:47:49 357  	in_first_name		 IN GROUP_ACCOUNT.FIRST_NAME%TYPE,
15:47:49 358  	in_last_name		 IN GROUP_ACCOUNT.LAST_NAME%TYPE,
15:47:49 359  	in_email		 IN GROUP_ACCOUNT.EMAIL%TYPE,
15:47:49 360  	in_phone		 IN GROUP_ACCOUNT.PHONE%TYPE,
15:47:49 361  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
15:47:49 362  ) AS
15:47:49 363  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_GROUP_ACCOUNT';
15:47:49 364  BEGIN
15:47:49 365  	update
15:47:49 366  	  group_account
15:47:49 367  	set
15:47:49 368  	  group_name = nvl(in_group_name, group_name),
15:47:49 369  	  first_name = nvl(in_first_name, first_name),
15:47:49 370  	  last_name = nvl(in_last_name, last_name),
15:47:49 371  	  email = nvl(in_email, email),
15:47:49 372  	  phone = nvl(in_phone, phone),
15:47:49 373  	  updated_by = in_updated_by,
15:47:49 374  	  update_date = sysdate
15:47:49 375  	where
15:47:49 376  	  id = in_group_account_id;
15:47:49 377  
15:47:49 378  	if(sql%rowcount = 0) then
15:47:49 379  	  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 380  	  SPROC_NAME, 'Group Account not found', SQLERRM);
15:47:49 381  	end if;
15:47:49 382  EXCEPTION
15:47:49 383  	WHEN OTHERS THEN
15:47:49 384  	  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 385  	    SPROC_NAME, 'Error while updating group account', SQLERRM);
15:47:49 386  END UPDATE_GROUP_ACCOUNT;
15:47:49 387  
15:47:49 388  PROCEDURE UPDATE_GROUP_ACCOUNT_SEATS (
15:47:49 389  	in_group_account_id	 IN GROUP_ACCOUNT.ID%TYPE,
15:47:49 390  	in_seats		 IN GROUP_ACCOUNT.SEATS%TYPE,
15:47:49 391  	in_updated_by		 IN GROUP_ACCOUNT.UPDATED_BY%TYPE
15:47:49 392  ) AS
15:47:49 393  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_GROUP_ACCOUNT_SEATS';
15:47:49 394  var_subscription_id NUMBER;
15:47:49 395  var_seats NUMBER;
15:47:49 396  BEGIN
15:47:49 397  	select subscription_id, seats into var_subscription_id, var_seats
15:47:49 398  	from group_account
15:47:49 399  	where id = in_group_account_id;
15:47:49 400  
15:47:49 401  	update
15:47:49 402  	  group_account
15:47:49 403  	set
15:47:49 404  	  seats = in_seats,
15:47:49 405  	  updated_by = in_updated_by,
15:47:49 406  	  update_date = sysdate
15:47:49 407  	where
15:47:49 408  	  id = in_group_account_id;
15:47:49 409  
15:47:49 410  	if(sql%rowcount = 0) then
15:47:49 411  	  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 412  	  SPROC_NAME, 'Group Account not found', SQLERRM);
15:47:49 413  	end if;
15:47:49 414  
15:47:49 415  	PROCS_SUBSCRIPTION_V22.ANNOTATE_SUBSCRIPTION(
15:47:49 416  	  in_subscription_id => var_subscription_id,
15:47:49 417  	  in_agent_id	     => 0,
15:47:49 418  	  in_note	     => 'seats updated from '||var_seats||' to '||in_seats,
15:47:49 419  	  in_created_by      => in_updated_by
15:47:49 420  	);
15:47:49 421  EXCEPTION
15:47:49 422  	WHEN NO_DATA_FOUND THEN
15:47:49 423  	  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 424  	  SPROC_NAME, 'Group Account not found', SQLERRM);
15:47:49 425  	WHEN OTHERS THEN
15:47:49 426  	  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 427  	    SPROC_NAME, 'Error while updating group account seats', SQLERRM);
15:47:49 428  END UPDATE_GROUP_ACCOUNT_SEATS;
15:47:49 429  
15:47:49 430  END PROCS_GROUP_ACCOUNT_CRU_V22;
15:47:49 431  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.05
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_INVOICE_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_INVOICE (
15:47:49   4  	out_invoice_id		       OUT INVOICE.ID%TYPE,
15:47:49   5  	in_invoice_id		       IN INVOICE.ID%TYPE DEFAULT NULL,
15:47:49   6  	in_invoice_status_id	       IN INVOICE.INVOICE_STATUS_ID%TYPE,
15:47:49   7  	in_tax_exempt_id	       IN INVOICE.TAX_EXEMPT_ID%TYPE,
15:47:49   8  	in_created_by		       IN INVOICE.CREATED_BY%TYPE
15:47:49   9  ) AS
15:47:49  10  -- VARIABLES
15:47:49  11  var_invoice_id INVOICE.ID%TYPE;
15:47:49  12  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:49  13  var_date DATE := SYSDATE;
15:47:49  14  BEGIN
15:47:49  15  	IF in_invoice_id IS NULL THEN
15:47:49  16  	  SELECT
15:47:49  17  	    INV_ID_SEQ.nextVal into var_invoice_id
15:47:49  18  	  FROM DUAL;
15:47:49  19  	ELSE
15:47:49  20  	  var_invoice_id := in_invoice_id;
15:47:49  21  	END IF;
15:47:49  22  	INSERT INTO
15:47:49  23  	  INVOICE (
15:47:49  24  	    ID,
15:47:49  25  	    INVOICE_STATUS_ID,
15:47:49  26  	    CREATE_DATE,
15:47:49  27  	    CREATED_BY,
15:47:49  28  	    UPDATE_DATE,
15:47:49  29  	    UPDATED_BY,
15:47:49  30  	    TAX_EXEMPT_ID,
15:47:49  31  	    IS_TAX_CALCULATION_NEEDED
15:47:49  32  	  ) VALUES (
15:47:49  33  	    var_invoice_id,
15:47:49  34  	    in_invoice_status_id,
15:47:49  35  	    var_date,
15:47:49  36  	    in_created_by,
15:47:49  37  	    var_date,
15:47:49  38  	    in_created_by,
15:47:49  39  	    in_tax_exempt_id,
15:47:49  40  	    0 -- DEFAULT VALUE
15:47:49  41  	  );
15:47:49  42  
15:47:49  43  	out_invoice_id := var_invoice_id;
15:47:49  44  END;
15:47:49  45  
15:47:49  46  /*****************************************************************/
15:47:49  47  
15:47:49  48  PROCEDURE UPDATE_INVOICE (
15:47:49  49  	in_invoice_id		       IN INVOICE.ID%TYPE,
15:47:49  50  	in_updated_by		       IN INVOICE.UPDATED_BY%TYPE,
15:47:49  51  	in_invoice_status_id	       IN INVOICE.INVOICE_STATUS_ID%TYPE DEFAULT NULL,
15:47:49  52  	in_is_tax_calculation_needed   IN INVOICE.IS_TAX_CALCULATION_NEEDED%TYPE DEFAULT NULL
15:47:49  53  ) AS
15:47:49  54  BEGIN
15:47:49  55  	-- Create history
15:47:49  56  	PROCS_HISTORY_V22.CREATE_INVOICE_HISTORY(
15:47:49  57  	  in_invoice_id 	       => in_invoice_id,
15:47:49  58  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49  59  	);
15:47:49  60  
15:47:49  61  	UPDATE
15:47:49  62  	  INVOICE
15:47:49  63  	SET
15:47:49  64  	  INVOICE_STATUS_ID	    = NVL(in_invoice_status_id, INVOICE_STATUS_ID),
15:47:49  65  	  UPDATE_DATE		    = SYSDATE,
15:47:49  66  	  UPDATED_BY		    = in_updated_by,
15:47:49  67  	  IS_TAX_CALCULATION_NEEDED = NVL(in_is_tax_calculation_needed, IS_TAX_CALCULATION_NEEDED)
15:47:49  68  	WHERE
15:47:49  69  	  ID = in_invoice_id;
15:47:49  70  END;
15:47:49  71  
15:47:49  72  END PROCS_INVOICE_CRU_V22;
15:47:49  73  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.04
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ITUNES_RECEIPT_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_RECEIPT(
15:47:49   4  /*
15:47:49   5  Throws exceptions:
15:47:49   6  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49   7  */
15:47:49   8  	  out_id	      OUT NUMBER,
15:47:49   9  	  in_subscription_id  IN CORE_OWNER.ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:49  10  	  in_receipt	      IN CORE_OWNER.ITUNES_RECEIPT.RECEIPT%TYPE,
15:47:49  11  	  in_status	      IN CORE_OWNER.ITUNES_RECEIPT.STATUS%TYPE,
15:47:49  12  	  in_quantity	      IN CORE_OWNER.ITUNES_RECEIPT.QUANTITY%TYPE,
15:47:49  13  	  in_product_id       IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
15:47:49  14  	  in_transaction_id   IN CORE_OWNER.ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
15:47:49  15  	  in_purchase_date    IN CORE_OWNER.ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
15:47:49  16  	  in_original_transaction_id IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
15:47:49  17  	  in_original_purchase_date IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
15:47:49  18  	  in_app_item_id      IN CORE_OWNER.ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
15:47:49  19  	  in_version_external_id IN CORE_OWNER.ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
15:47:49  20  	  in_bid	      IN CORE_OWNER.ITUNES_RECEIPT.BID%TYPE,
15:47:49  21  	  in_bvrs	      IN CORE_OWNER.ITUNES_RECEIPT.BVRS%TYPE,
15:47:49  22  	  in_expires_date     IN CORE_OWNER.ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
15:47:49  23  	  in_created_by       IN CORE_OWNER.ITUNES_RECEIPT.CREATED_BY%TYPE
15:47:49  24  ) AS
15:47:49  25  -- VARIABLES
15:47:49  26  SPROC_NAME	CONSTANT VARCHAR2(32) := 'CREATE_RECEIPT';
15:47:49  27  var_current_date	    DATE;
15:47:49  28  var_count 	    NUMBER;
15:47:49  29  ITUNES_ORG_TNX_USED   EXCEPTION;
15:47:49  30  BEGIN
15:47:49  31  	SELECT COUNT(1) into var_count
15:47:49  32  	FROM
15:47:49  33  	  ITUNES_RECEIPT IR, SUBSCRIPTION S
15:47:49  34  	WHERE
15:47:49  35  	  IR.ORIGINAL_TRANSACTION_ID = in_original_transaction_id AND
15:47:49  36  	  IR.SUBSCRIPTION_ID = S.ID AND
15:47:49  37  	  S.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE;
15:47:49  38  
15:47:49  39  	if var_count > 0 then
15:47:49  40  	  raise ITUNES_ORG_TNX_USED;
15:47:49  41  	end if;
15:47:49  42  
15:47:49  43  	SELECT
15:47:49  44  	  CORE_OWNER.ITUNES_RECEIPT_ID_SEQ.NEXTVAL
15:47:49  45  	INTO
15:47:49  46  	  out_id
15:47:49  47  	FROM
15:47:49  48  	  dual
15:47:49  49  	;
15:47:49  50  
15:47:49  51  	SELECT
15:47:49  52  	  sysdate
15:47:49  53  	INTO
15:47:49  54  	  var_current_date
15:47:49  55  	FROM
15:47:49  56  	  dual
15:47:49  57  	;
15:47:49  58  
15:47:49  59  	INSERT INTO CORE_OWNER.ITUNES_RECEIPT
15:47:49  60  	(
15:47:49  61  	  id,
15:47:49  62  	  subscription_id,
15:47:49  63  	  receipt,
15:47:49  64  	  status,
15:47:49  65  	  quantity,
15:47:49  66  	  product_id,
15:47:49  67  	  transaction_id,
15:47:49  68  	  purchase_date,
15:47:49  69  	  original_transaction_id,
15:47:49  70  	  original_purchase_date,
15:47:49  71  	  app_item_id,
15:47:49  72  	  version_external_id,
15:47:49  73  	  bid,
15:47:49  74  	  bvrs,
15:47:49  75  	  expires_date,
15:47:49  76  	  create_date,
15:47:49  77  	  created_by,
15:47:49  78  	  update_date,
15:47:49  79  	  updated_by,
15:47:49  80  	  last_check_date
15:47:49  81  	)
15:47:49  82  	VALUES
15:47:49  83  	(
15:47:49  84  	  out_id,
15:47:49  85  	  in_subscription_id,
15:47:49  86  	  in_receipt,
15:47:49  87  	  in_status,
15:47:49  88  	  in_quantity,
15:47:49  89  	  in_product_id,
15:47:49  90  	  in_transaction_id,
15:47:49  91  	  in_purchase_date,
15:47:49  92  	  in_original_transaction_id,
15:47:49  93  	  in_original_purchase_date,
15:47:49  94  	  in_app_item_id,
15:47:49  95  	  in_version_external_id,
15:47:49  96  	  in_bid,
15:47:49  97  	  in_bvrs,
15:47:49  98  	  in_expires_date,
15:47:49  99  	  var_current_date,
15:47:49 100  	  in_created_by,
15:47:49 101  	  var_current_date,
15:47:49 102  	  in_created_by,
15:47:49 103  	  var_current_date
15:47:49 104  	);
15:47:49 105  
15:47:49 106  EXCEPTION
15:47:49 107  WHEN ITUNES_ORG_TNX_USED THEN
15:47:49 108  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:49 109  	  SPROC_NAME, 'iTunes orginal transaction id already in use', SQLERRM);
15:47:49 110  WHEN DUP_VAL_ON_INDEX THEN
15:47:49 111  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:49 112  	  SPROC_NAME, 'Duplicate value', SQLERRM);
15:47:49 113  WHEN OTHERS THEN
15:47:49 114  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 115  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 116  END CREATE_RECEIPT;
15:47:49 117  
15:47:49 118  PROCEDURE UPDATE_RECEIPT(
15:47:49 119  /*
15:47:49 120  Throws exceptions:
15:47:49 121  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 122  */
15:47:49 123  	  in_id 	      IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE,
15:47:49 124  	  in_receipt	      IN CORE_OWNER.ITUNES_RECEIPT.RECEIPT%TYPE,
15:47:49 125  	  in_status	      IN CORE_OWNER.ITUNES_RECEIPT.STATUS%TYPE,
15:47:49 126  	  in_quantity	      IN CORE_OWNER.ITUNES_RECEIPT.QUANTITY%TYPE,
15:47:49 127  	  in_product_id       IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
15:47:49 128  	  in_transaction_id   IN CORE_OWNER.ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
15:47:49 129  	  in_purchase_date    IN CORE_OWNER.ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
15:47:49 130  	  in_original_transaction_id IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
15:47:49 131  	  in_original_purchase_date IN CORE_OWNER.ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
15:47:49 132  	  in_app_item_id      IN CORE_OWNER.ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
15:47:49 133  	  in_version_external_id IN CORE_OWNER.ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
15:47:49 134  	  in_bid	      IN CORE_OWNER.ITUNES_RECEIPT.BID%TYPE,
15:47:49 135  	  in_bvrs	      IN CORE_OWNER.ITUNES_RECEIPT.BVRS%TYPE,
15:47:49 136  	  in_expires_date     IN CORE_OWNER.ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
15:47:49 137  	  in_updated_by       IN CORE_OWNER.ITUNES_RECEIPT.UPDATED_BY%TYPE,
15:47:49 138  	  in_cancel_date      IN CORE_OWNER.ITUNES_RECEIPT.CANCEL_DATE%TYPE
15:47:49 139  ) AS
15:47:49 140  -- VARIABLES
15:47:49 141  SPROC_NAME	CONSTANT VARCHAR2(32) := 'UPDATE_RECEIPT';
15:47:49 142  var_current_date	    DATE;
15:47:49 143  BEGIN
15:47:49 144  
15:47:49 145  	SELECT
15:47:49 146  	  sysdate
15:47:49 147  	INTO
15:47:49 148  	  var_current_date
15:47:49 149  	FROM
15:47:49 150  	  dual
15:47:49 151  	;
15:47:49 152  
15:47:49 153  	FOR REC IN (SELECT * FROM CORE_OWNER.ITUNES_RECEIPT WHERE ID = in_id) LOOP
15:47:49 154  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_ITUNES_RECEIPT_HISTORY
15:47:49 155  	  (
15:47:49 156  	      rec.id,
15:47:49 157  	      rec.subscription_id,
15:47:49 158  	      rec.receipt,
15:47:49 159  	      rec.status,
15:47:49 160  	      rec.quantity,
15:47:49 161  	      rec.product_id,
15:47:49 162  	      rec.transaction_id,
15:47:49 163  	      rec.purchase_date,
15:47:49 164  	      rec.original_transaction_id,
15:47:49 165  	      rec.original_purchase_date,
15:47:49 166  	      rec.app_item_id,
15:47:49 167  	      rec.version_external_id,
15:47:49 168  	      rec.bid,
15:47:49 169  	      rec.bvrs,
15:47:49 170  	      rec.expires_date,
15:47:49 171  	      rec.create_date,
15:47:49 172  	      rec.created_by,
15:47:49 173  	      rec.update_date,
15:47:49 174  	      rec.updated_by,
15:47:49 175  	      rec.last_check_date,
15:47:49 176  	      rec.cancel_date
15:47:49 177  	  );
15:47:49 178  	END LOOP;
15:47:49 179  
15:47:49 180  	UPDATE CORE_OWNER.ITUNES_RECEIPT
15:47:49 181  	SET
15:47:49 182  	  receipt = in_receipt,
15:47:49 183  	  status = in_status,
15:47:49 184  	  quantity = in_quantity,
15:47:49 185  	  product_id = in_product_id,
15:47:49 186  	  transaction_id = in_transaction_id,
15:47:49 187  	  purchase_date = in_purchase_date,
15:47:49 188  	  original_transaction_id = in_original_transaction_id,
15:47:49 189  	  original_purchase_date = in_original_purchase_date,
15:47:49 190  	  app_item_id = in_app_item_id,
15:47:49 191  	  version_external_id = in_version_external_id,
15:47:49 192  	  bid = in_bid,
15:47:49 193  	  bvrs = in_bvrs,
15:47:49 194  	  expires_date = in_expires_date,
15:47:49 195  	  update_date = var_current_date,
15:47:49 196  	  updated_by = in_updated_by,
15:47:49 197  	  last_check_date = var_current_date,
15:47:49 198  	  cancel_date = in_cancel_date
15:47:49 199  	WHERE
15:47:49 200  	  id = in_id
15:47:49 201  	;
15:47:49 202  
15:47:49 203  EXCEPTION
15:47:49 204  WHEN DUP_VAL_ON_INDEX THEN
15:47:49 205  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:49 206  	  SPROC_NAME, 'Duplicate value', SQLERRM);
15:47:49 207  WHEN OTHERS THEN
15:47:49 208  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 209  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 210  
15:47:49 211  END UPDATE_RECEIPT;
15:47:49 212  
15:47:49 213  PROCEDURE LINK_ITUNES_RECEIPT(
15:47:49 214  /*
15:47:49 215  Throws exceptions:
15:47:49 216  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 217  */
15:47:49 218  	  in_id 	      IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE,
15:47:49 219  	  in_subscription_id  IN CORE_OWNER.ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:49 220  	  in_updated_by       IN CORE_OWNER.ITUNES_RECEIPT.UPDATED_BY%TYPE
15:47:49 221  ) AS
15:47:49 222  -- VARIABLES
15:47:49 223  SPROC_NAME	CONSTANT VARCHAR2(32) := 'LINK_ITUNES_RECEIPT';
15:47:49 224  var_current_date	    DATE;
15:47:49 225  BEGIN
15:47:49 226  
15:47:49 227  	      SELECT
15:47:49 228  	  sysdate
15:47:49 229  	      INTO
15:47:49 230  	  var_current_date
15:47:49 231  	      FROM
15:47:49 232  	  dual
15:47:49 233  	      ;
15:47:49 234  
15:47:49 235  	      FOR REC IN (SELECT * FROM CORE_OWNER.ITUNES_RECEIPT WHERE ID = in_id) LOOP
15:47:49 236  	      CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_ITUNES_RECEIPT_HISTORY
15:47:49 237  	      (
15:47:49 238  	    rec.id,
15:47:49 239  	    rec.subscription_id,
15:47:49 240  	    rec.receipt,
15:47:49 241  	    rec.status,
15:47:49 242  	    rec.quantity,
15:47:49 243  	    rec.product_id,
15:47:49 244  	    rec.transaction_id,
15:47:49 245  	    rec.purchase_date,
15:47:49 246  	    rec.original_transaction_id,
15:47:49 247  	    rec.original_purchase_date,
15:47:49 248  	    rec.app_item_id,
15:47:49 249  	    rec.version_external_id,
15:47:49 250  	    rec.bid,
15:47:49 251  	    rec.bvrs,
15:47:49 252  	    rec.expires_date,
15:47:49 253  	    rec.create_date,
15:47:49 254  	    rec.created_by,
15:47:49 255  	    rec.update_date,
15:47:49 256  	    rec.updated_by,
15:47:49 257  	    rec.last_check_date,
15:47:49 258  	    rec.cancel_date
15:47:49 259  	      );
15:47:49 260  	      END LOOP;
15:47:49 261  
15:47:49 262  	      UPDATE CORE_OWNER.ITUNES_RECEIPT
15:47:49 263  		SET
15:47:49 264  		      subscription_id = in_subscription_id,
15:47:49 265  		      update_date = var_current_date,
15:47:49 266  	      updated_by = in_updated_by,
15:47:49 267  	      last_check_date = var_current_date
15:47:49 268  	      WHERE
15:47:49 269  		  id = in_id
15:47:49 270  	      ;
15:47:49 271  
15:47:49 272  	      EXCEPTION
15:47:49 273  	      WHEN DUP_VAL_ON_INDEX THEN
15:47:49 274  		PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:49 275  		  SPROC_NAME, 'Duplicate value', SQLERRM);
15:47:49 276  	      WHEN OTHERS THEN
15:47:49 277  		PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 278  		  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 279  END LINK_ITUNES_RECEIPT;
15:47:49 280  
15:47:49 281  
15:47:49 282  PROCEDURE MARK_RECEIPT_CHECKED(
15:47:49 283  /*
15:47:49 284  Throws exceptions:
15:47:49 285  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 286  */
15:47:49 287  	  in_id       IN CORE_OWNER.ITUNES_RECEIPT.ID%TYPE
15:47:49 288  ) AS
15:47:49 289  SPROC_NAME	CONSTANT VARCHAR2(32) := 'MARK_RECEIPT_CHECKED';
15:47:49 290  BEGIN
15:47:49 291  	UPDATE
15:47:49 292  	  CORE_OWNER.ITUNES_RECEIPT
15:47:49 293  	SET
15:47:49 294  	  last_check_date = sysdate
15:47:49 295  	WHERE
15:47:49 296  	  id = in_id
15:47:49 297  	;
15:47:49 298  EXCEPTION
15:47:49 299  WHEN OTHERS THEN
15:47:49 300  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 301  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 302  END MARK_RECEIPT_CHECKED;
15:47:49 303  
15:47:49 304  END PROCS_ITUNES_RECEIPT_CRU_V22;
15:47:49 305  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.02
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LICENSE_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_LICENSE(
15:47:49   4  	out_license_id		    OUT LICENSE.ID%TYPE,
15:47:49   5  	in_license_id		    IN LICENSE.ID%TYPE DEFAULT NULL,
15:47:49   6  	in_license_status_id	    IN LICENSE.LICENSE_STATUS_ID%TYPE,
15:47:49   7  	in_needs_entitlements	    IN LICENSE.NEEDS_ENTITLEMENTS%TYPE,
15:47:49   8  	in_start_date		    IN LICENSE.START_DATE%TYPE,
15:47:49   9  	in_offer_id		    IN LICENSE.OFFER_ID%TYPE,
15:47:49  10  	in_subscription_id	    IN LICENSE.SUBSCRIPTION_ID%TYPE,
15:47:49  11  	in_invoice_id		    IN LICENSE.INVOICE_ID%TYPE,
15:47:49  12  	in_end_date		    IN LICENSE.END_DATE%TYPE,
15:47:49  13  	in_created_by		    IN LICENSE.CREATED_BY%TYPE,
15:47:49  14  	in_is_extension 	    IN LICENSE.IS_EXTENSION%TYPE,
15:47:49  15  	in_current_offer_index	    IN LICENSE.CURRENT_OFFER_INDEX%TYPE,
15:47:49  16  	in_current_offer_recurr_num IN LICENSE.CURRENT_OFFER_RECURR_NUM%TYPE
15:47:49  17  ) AS
15:47:49  18  -- VARIABLES
15:47:49  19  var_license_id LICENSE.ID%TYPE;
15:47:49  20  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:49  21  var_date DATE := SYSDATE;
15:47:49  22  BEGIN
15:47:49  23  	IF in_license_id IS NULL THEN
15:47:49  24  	  SELECT
15:47:49  25  	    LCN_ID_SEQ.nextVal into var_license_id
15:47:49  26  	  FROM DUAL;
15:47:49  27  	ELSE
15:47:49  28  	  var_license_id := in_license_id;
15:47:49  29  	END IF;
15:47:49  30  	INSERT INTO
15:47:49  31  	  LICENSE (
15:47:49  32  	    ID,
15:47:49  33  	    LICENSE_STATUS_ID,
15:47:49  34  	    NEEDS_ENTITLEMENTS,
15:47:49  35  	    START_DATE,
15:47:49  36  	    OFFER_ID,
15:47:49  37  	    SUBSCRIPTION_ID,
15:47:49  38  	    INVOICE_ID,
15:47:49  39  	    END_DATE,
15:47:49  40  	    CREATE_DATE,
15:47:49  41  	    CREATED_BY,
15:47:49  42  	    UPDATE_DATE,
15:47:49  43  	    UPDATED_BY,
15:47:49  44  	    IS_EXTENSION,
15:47:49  45  	    CURRENT_OFFER_INDEX,
15:47:49  46  	    CURRENT_OFFER_RECURR_NUM,
15:47:49  47  	    ENTITLEMENT_END_DATE
15:47:49  48  	  ) VALUES (
15:47:49  49  	    var_license_id,
15:47:49  50  	    in_license_status_id,
15:47:49  51  	    in_needs_entitlements,
15:47:49  52  	    in_start_date,
15:47:49  53  	    in_offer_id,
15:47:49  54  	    in_subscription_id,
15:47:49  55  	    in_invoice_id,
15:47:49  56  	    in_end_date,
15:47:49  57  	    var_date,
15:47:49  58  	    in_created_by,
15:47:49  59  	    var_date,
15:47:49  60  	    in_created_by,
15:47:49  61  	    in_is_extension,
15:47:49  62  	    in_current_offer_index,
15:47:49  63  	    in_current_offer_recurr_num,
15:47:49  64  	    in_end_date
15:47:49  65  	  );
15:47:49  66  
15:47:49  67  	out_license_id := var_license_id;
15:47:49  68  END CREATE_LICENSE;
15:47:49  69  
15:47:49  70  /********************************************************************/
15:47:49  71  
15:47:49  72  PROCEDURE UPDATE_LICENSE (
15:47:49  73  	in_license_id		    IN LICENSE.ID%TYPE,
15:47:49  74  	in_license_status_id	    IN LICENSE.LICENSE_STATUS_ID%TYPE DEFAULT NULL,
15:47:49  75  	in_needs_entitlements	    IN LICENSE.NEEDS_ENTITLEMENTS%TYPE DEFAULT NULL,
15:47:49  76  	in_start_date		    IN LICENSE.START_DATE%TYPE DEFAULT NULL,
15:47:49  77  	in_end_date		    IN LICENSE.END_DATE%TYPE DEFAULT NULL,
15:47:49  78  	in_updated_by		    IN LICENSE.CREATED_BY%TYPE,
15:47:49  79  	in_is_extension 	    IN LICENSE.IS_EXTENSION%TYPE DEFAULT NULL,
15:47:49  80  	in_current_offer_index	    IN LICENSE.CURRENT_OFFER_INDEX%TYPE DEFAULT NULL,
15:47:49  81  	in_current_offer_recurr_num IN LICENSE.CURRENT_OFFER_RECURR_NUM%TYPE DEFAULT NULL,
15:47:49  82  	in_entitlement_end_date     IN LICENSE.ENTITLEMENT_END_DATE%TYPE DEFAULT NULL,
15:47:49  83  	in_grace_start_date	    IN LICENSE.GRACE_START_DATE%TYPE DEFAULT NULL,
15:47:49  84  	in_grace_end_date	    IN LICENSE.GRACE_END_DATE%TYPE DEFAULT NULL
15:47:49  85  ) AS
15:47:49  86  BEGIN
15:47:49  87  	-- Create history
15:47:49  88  	PROCS_HISTORY_V22.CREATE_LICENSE_HISTORY(
15:47:49  89  	  in_license_id 	       => in_license_id,
15:47:49  90  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49  91  	);
15:47:49  92  
15:47:49  93  	UPDATE
15:47:49  94  	  LICENSE
15:47:49  95  	SET
15:47:49  96  	  LICENSE_STATUS_ID	   = NVL(in_license_status_id, LICENSE_STATUS_ID),
15:47:49  97  	  NEEDS_ENTITLEMENTS	   = NVL(in_needs_entitlements, NEEDS_ENTITLEMENTS),
15:47:49  98  	  START_DATE		   = NVL(in_start_date, START_DATE),
15:47:49  99  	  END_DATE		   = NVL(in_end_date, END_DATE),
15:47:49 100  	  UPDATE_DATE		   = SYSDATE,
15:47:49 101  	  UPDATED_BY		   = in_updated_by,
15:47:49 102  	  IS_EXTENSION		   = NVL(in_is_extension, IS_EXTENSION),
15:47:49 103  	  CURRENT_OFFER_INDEX	   = NVL(in_current_offer_index, CURRENT_OFFER_INDEX),
15:47:49 104  	  CURRENT_OFFER_RECURR_NUM = NVL(in_current_offer_recurr_num, CURRENT_OFFER_RECURR_NUM),
15:47:49 105  	  ENTITLEMENT_END_DATE	   = NVL(in_entitlement_end_date, ENTITLEMENT_END_DATE),
15:47:49 106  	  GRACE_START_DATE	   = NVL(in_grace_start_date, GRACE_START_DATE),
15:47:49 107  	  GRACE_END_DATE	   = NVL(in_grace_end_date, GRACE_END_DATE)
15:47:49 108  	WHERE
15:47:49 109  	  LICENSE.ID = in_license_id;
15:47:49 110  END UPDATE_LICENSE;
15:47:49 111  
15:47:49 112  END PROCS_LICENSE_CRU_V22;
15:47:49 113  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.01
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LINE_ITEMS_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_LINE_ITEM (
15:47:49   4  	inout_line_item_id  IN OUT LINE_ITEM.ID%TYPE,
15:47:49   5  	in_product_offer_id IN LINE_ITEM.PRODUCT_OFFER_ID%TYPE,
15:47:49   6  	in_invoice_id	    IN LINE_ITEM.INVOICE_ID%TYPE,
15:47:49   7  	in_amount	    IN LINE_ITEM.AMOUNT%TYPE,
15:47:49   8  	in_created_by	    IN LINE_ITEM.CREATED_BY%TYPE,
15:47:49   9  	in_discount_amount  IN LINE_ITEM.DISCOUNT_AMOUNT%TYPE,
15:47:49  10  	in_taxes_amount     IN LINE_ITEM.TAXES_AMOUNT%TYPE
15:47:49  11  ) AS
15:47:49  12  BEGIN
15:47:49  13  	IF inout_line_item_id IS NULL THEN
15:47:49  14  	  SELECT
15:47:49  15  	    LI_ID_SEQ.nextVal into inout_line_item_id
15:47:49  16  	  FROM DUAL;
15:47:49  17  	END IF;
15:47:49  18  	INSERT INTO LINE_ITEM (
15:47:49  19  	  ID,
15:47:49  20  	  PRODUCT_OFFER_ID,
15:47:49  21  	  INVOICE_ID,
15:47:49  22  	  AMOUNT,
15:47:49  23  	  QUANTITY,
15:47:49  24  	  CREATE_DATE,
15:47:49  25  	  CREATED_BY,
15:47:49  26  	  DISCOUNT_AMOUNT,
15:47:49  27  	  TAXES_AMOUNT
15:47:49  28  	) VALUES (
15:47:49  29  	  inout_line_item_id,
15:47:49  30  	  in_product_offer_id,
15:47:49  31  	  in_invoice_id,
15:47:49  32  	  in_amount,
15:47:49  33  	  1, -- [REVU]: Deprecated. Ignore this field
15:47:49  34  	  SYSDATE,
15:47:49  35  	  in_created_by,
15:47:49  36  	  in_discount_amount,
15:47:49  37  	  in_taxes_amount
15:47:49  38  	);
15:47:49  39  END CREATE_LINE_ITEM;
15:47:49  40  
15:47:49  41  /******************************************************************************/
15:47:49  42  
15:47:49  43  PROCEDURE UPDATE_LINE_ITEM (
15:47:49  44  	in_line_item_id     IN LINE_ITEM.ID%TYPE,
15:47:49  45  	in_amount	    IN LINE_ITEM.AMOUNT%TYPE DEFAULT NULL,
15:47:49  46  	in_discount_amount  IN LINE_ITEM.DISCOUNT_AMOUNT%TYPE  DEFAULT NULL,
15:47:49  47  	in_taxes_amount     IN LINE_ITEM.TAXES_AMOUNT%TYPE DEFAULT NULL
15:47:49  48  ) AS
15:47:49  49  BEGIN
15:47:49  50  	UPDATE
15:47:49  51  	  LINE_ITEM
15:47:49  52  	SET
15:47:49  53  	  LINE_ITEM.AMOUNT	    = NVL(in_amount, LINE_ITEM.AMOUNT),
15:47:49  54  	  LINE_ITEM.DISCOUNT_AMOUNT = NVL(in_discount_amount, LINE_ITEM.DISCOUNT_AMOUNT),
15:47:49  55  	  LINE_ITEM.TAXES_AMOUNT    = NVL(in_taxes_amount, LINE_ITEM.TAXES_AMOUNT)
15:47:49  56  	WHERE
15:47:49  57  	  LINE_ITEM.ID = in_line_item_id;
15:47:49  58  END UPDATE_LINE_ITEM;
15:47:49  59  
15:47:49  60  /******************************************************************************/
15:47:49  61  
15:47:49  62  PROCEDURE CREATE_DISCOUNT_LINE_ITEM (
15:47:49  63  	in_discount_id	IN DISCOUNT.ID%TYPE,
15:47:49  64  	in_line_item_id IN LINE_ITEM.ID%TYPE
15:47:49  65  ) AS
15:47:49  66  BEGIN
15:47:49  67  	INSERT INTO DISCOUNT_LINE_ITEM(
15:47:49  68  	  DISCOUNT_ID,
15:47:49  69  	  LINE_ITEM_ID
15:47:49  70  	) VALUES (
15:47:49  71  	  in_discount_id,
15:47:49  72  	  in_line_item_id
15:47:49  73  	);
15:47:49  74  END CREATE_DISCOUNT_LINE_ITEM;
15:47:49  75  
15:47:49  76  END PROCS_LINE_ITEMS_CRU_V22;
15:47:49  77  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.02
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_RECONCILIATION_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_CPT_CHARGEBACK_ACT (
15:47:49   4  	out_cpt_chargeback_act_id   OUT RCN_CPT_CHARGEBACK_ACT_DETAIL.ID%TYPE,
15:47:49   5  	in_cpt_chargeback_act_id    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ID%TYPE DEFAULT NULL,
15:47:49   6  	in_ext_source_log_id	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:49   7  	in_record_type		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.RECORD_TYPE%TYPE,
15:47:49   8  	in_entity_type		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ENTITY_TYPE%TYPE,
15:47:49   9  	in_entity_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ENTITY_NUMBER%TYPE,
15:47:49  10  	in_chargeback_amount_issuer IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_AMOUNT_ISSUER%TYPE,
15:47:49  11  	in_prev_partial_repres	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.PREV_PARTIAL_REPRESENTMENT%TYPE,
15:47:49  12  	in_presentment_currency     IN RCN_CPT_CHARGEBACK_ACT_DETAIL.PRESENTMENT_CURRENCY%TYPE,
15:47:49  13  	in_chargeback_category	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_CATEGORY%TYPE,
15:47:49  14  	in_status_flag		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.STATUS_FLAG%TYPE,
15:47:49  15  	in_sequence_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.SEQUENCE_NUMBER%TYPE,
15:47:49  16  	in_merchant_order_number    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
15:47:49  17  	in_account_number	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ACCOUNT_NUMBER%TYPE,
15:47:49  18  	in_reason_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.REASON_CODE%TYPE,
15:47:49  19  	in_transaction_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.TRANSACTION_DATE%TYPE,
15:47:49  20  	in_chargeback_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_DATE%TYPE,
15:47:49  21  	in_activity_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.ACTIVITY_DATE%TYPE,
15:47:49  22  	in_chargeback_amount_action IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_AMOUNT_ACTION%TYPE,
15:47:49  23  	in_fee_amount		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.FEE_AMOUNT%TYPE,
15:47:49  24  	in_usage_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.USAGE_CODE%TYPE,
15:47:49  25  	in_mop_code		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.MOP_CODE%TYPE,
15:47:49  26  	in_authorization_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.AUTHORIZATION_DATE%TYPE,
15:47:49  27  	in_chargeback_due_date	    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CHARGEBACK_DUE_DATE%TYPE,
15:47:49  28  	in_created_by		    IN RCN_CPT_CHARGEBACK_ACT_DETAIL.CREATED_BY%TYPE
15:47:49  29  ) AS
15:47:49  30  -- VARIABLES
15:47:49  31  var_cpt_chargeback_act_id RCN_CPT_CHARGEBACK_ACT_DETAIL.ID%TYPE;
15:47:49  32  var_date DATE := SYSDATE;
15:47:49  33  BEGIN
15:47:49  34  	IF in_cpt_chargeback_act_id IS NULL THEN
15:47:49  35  	  SELECT
15:47:49  36  	    RCN_CPT_CHRGBK_ACT_DETAIL_SEQ.nextVal into var_cpt_chargeback_act_id
15:47:49  37  	  FROM DUAL;
15:47:49  38  	ELSE
15:47:49  39  	  var_cpt_chargeback_act_id := in_cpt_chargeback_act_id;
15:47:49  40  	END IF;
15:47:49  41  	INSERT INTO
15:47:49  42  	  RCN_CPT_CHARGEBACK_ACT_DETAIL (
15:47:49  43  	    id,
15:47:49  44  	    rcn_ext_source_log_id,
15:47:49  45  	    record_type,
15:47:49  46  	    entity_type,
15:47:49  47  	    entity_number,
15:47:49  48  	    chargeback_amount_issuer,
15:47:49  49  	    prev_partial_representment,
15:47:49  50  	    presentment_currency,
15:47:49  51  	    chargeback_category,
15:47:49  52  	    status_flag,
15:47:49  53  	    sequence_number,
15:47:49  54  	    merchant_order_number,
15:47:49  55  	    account_number,
15:47:49  56  	    reason_code,
15:47:49  57  	    transaction_date,
15:47:49  58  	    chargeback_date,
15:47:49  59  	    activity_date,
15:47:49  60  	    chargeback_amount_action,
15:47:49  61  	    fee_amount,
15:47:49  62  	    usage_code,
15:47:49  63  	    mop_code,
15:47:49  64  	    authorization_date,
15:47:49  65  	    chargeback_due_date,
15:47:49  66  	    create_date,
15:47:49  67  	    created_by
15:47:49  68  	  ) VALUES (
15:47:49  69  	    var_cpt_chargeback_act_id,
15:47:49  70  	    in_ext_source_log_id,
15:47:49  71  	    in_record_type,
15:47:49  72  	    in_entity_type,
15:47:49  73  	    in_entity_number,
15:47:49  74  	    in_chargeback_amount_issuer,
15:47:49  75  	    in_prev_partial_repres,
15:47:49  76  	    in_presentment_currency,
15:47:49  77  	    in_chargeback_category,
15:47:49  78  	    in_status_flag,
15:47:49  79  	    in_sequence_number,
15:47:49  80  	    in_merchant_order_number,
15:47:49  81  	    in_account_number,
15:47:49  82  	    in_reason_code,
15:47:49  83  	    in_transaction_date,
15:47:49  84  	    in_chargeback_date,
15:47:49  85  	    in_activity_date,
15:47:49  86  	    in_chargeback_amount_action,
15:47:49  87  	    in_fee_amount,
15:47:49  88  	    in_usage_code,
15:47:49  89  	    in_mop_code,
15:47:49  90  	    in_authorization_date,
15:47:49  91  	    in_chargeback_due_date,
15:47:49  92  	    var_date,
15:47:49  93  	    in_created_by
15:47:49  94  	  );
15:47:49  95  
15:47:49  96  	out_cpt_chargeback_act_id := var_cpt_chargeback_act_id;
15:47:49  97  END CREATE_CPT_CHARGEBACK_ACT;
15:47:49  98  
15:47:49  99  PROCEDURE CREATE_EXT_SOURCE_LOG (
15:47:49 100  	out_ext_source_log_id	    OUT RCN_EXT_SOURCE_LOG.ID%TYPE,
15:47:49 101  	in_ext_source_log_id	    IN RCN_EXT_SOURCE_LOG.ID%TYPE DEFAULT NULL,
15:47:49 102  	in_extraction_timestamp     IN RCN_EXT_SOURCE_LOG.EXTRACTION_TIMESTAMP%TYPE,
15:47:49 103  	in_report_date		    IN RCN_EXT_SOURCE_LOG.REPORT_DATE%TYPE,
15:47:49 104  	in_report_gen_datetime	    IN RCN_EXT_SOURCE_LOG.REPORT_GENERATION_DATETIME%TYPE,
15:47:49 105  	in_record_type		    IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
15:47:49 106  	in_report_file_name	    IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE,
15:47:49 107  	in_created_by		    IN RCN_EXT_SOURCE_LOG.CREATED_BY%TYPE
15:47:49 108  ) AS
15:47:49 109  -- VARIABLES
15:47:49 110  var_ext_source_log_id RCN_EXT_SOURCE_LOG.ID%TYPE;
15:47:49 111  var_date DATE := SYSDATE;
15:47:49 112  BEGIN
15:47:49 113  	IF in_ext_source_log_id IS NULL THEN
15:47:49 114  	  SELECT
15:47:49 115  	    RCN_EXT_SOURCE_LOG_SEQ.nextVal into var_ext_source_log_id
15:47:49 116  	  FROM DUAL;
15:47:49 117  	ELSE
15:47:49 118  	  var_ext_source_log_id := in_ext_source_log_id;
15:47:49 119  	END IF;
15:47:49 120  	INSERT INTO
15:47:49 121  	  RCN_EXT_SOURCE_LOG (
15:47:49 122  	    id,
15:47:49 123  	    extraction_timestamp,
15:47:49 124  	    report_date,
15:47:49 125  	    report_generation_datetime,
15:47:49 126  	    record_type,
15:47:49 127  	    report_file_name,
15:47:49 128  	    create_date,
15:47:49 129  	    created_by
15:47:49 130  	  ) VALUES (
15:47:49 131  	    var_ext_source_log_id,
15:47:49 132  	    in_extraction_timestamp,
15:47:49 133  	    in_report_date,
15:47:49 134  	    in_report_gen_datetime,
15:47:49 135  	    in_record_type,
15:47:49 136  	    in_report_file_name,
15:47:49 137  	    var_date,
15:47:49 138  	    in_created_by
15:47:49 139  	  );
15:47:49 140  
15:47:49 141  	out_ext_source_log_id := var_ext_source_log_id;
15:47:49 142  END CREATE_EXT_SOURCE_LOG;
15:47:49 143  
15:47:49 144  PROCEDURE CREATE_CPT_SERVICE_CHARGE (
15:47:49 145  	out_cpt_service_charge_id   OUT RCN_CPT_SERVICE_CHARGE_DETAIL.ID%TYPE,
15:47:49 146  	in_cpt_service_charge_id    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ID%TYPE DEFAULT NULL,
15:47:49 147  	in_ext_source_log_id	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:49 148  	in_record_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.RECORD_TYPE%TYPE,
15:47:49 149  	in_category		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.CATEGORY%TYPE,
15:47:49 150  	in_sub_category 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SUB_CATEGORY%TYPE,
15:47:49 151  	in_entity_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ENTITY_TYPE%TYPE,
15:47:49 152  	in_entity_number	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ENTITY_NUMBER%TYPE,
15:47:49 153  	in_funds_trans_inst_number  IN RCN_CPT_SERVICE_CHARGE_DETAIL.FUNDS_TRANSFER_INST_NUMBER%TYPE,
15:47:49 154  	in_secure_ba_number	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SECURE_BA_NUMBER%TYPE,
15:47:49 155  	in_settlement_currency	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.SETTLEMENT_CURRENCY%TYPE,
15:47:49 156  	in_fee_schedule 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.FEE_SCHEDULE%TYPE,
15:47:49 157  	in_mop			    IN RCN_CPT_SERVICE_CHARGE_DETAIL.MOP%TYPE,
15:47:49 158  	in_interchange_qual	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.INTERCHANGE_QUALIFICATION%TYPE,
15:47:49 159  	in_fee_type_description     IN RCN_CPT_SERVICE_CHARGE_DETAIL.FEE_TYPE_DESCRIPTION%TYPE,
15:47:49 160  	in_action_type		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.ACTION_TYPE%TYPE,
15:47:49 161  	in_unit_quantity	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.UNIT_QUANTITY%TYPE,
15:47:49 162  	in_unit_fee		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.UNIT_FEE%TYPE,
15:47:49 163  	in_amount		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.AMOUNT%TYPE,
15:47:49 164  	in_percentage_rate	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.PERCENTAGE_RATE%TYPE,
15:47:49 165  	in_total_charge 	    IN RCN_CPT_SERVICE_CHARGE_DETAIL.TOTAL_CHARGE%TYPE,
15:47:49 166  	in_created_by		    IN RCN_CPT_SERVICE_CHARGE_DETAIL.CREATED_BY%TYPE
15:47:49 167  ) AS
15:47:49 168  -- VARIABLES
15:47:49 169  var_cpt_service_charge_id RCN_CPT_SERVICE_CHARGE_DETAIL.ID%TYPE;
15:47:49 170  var_date DATE := SYSDATE;
15:47:49 171  BEGIN
15:47:49 172  	IF in_cpt_service_charge_id IS NULL THEN
15:47:49 173  	  SELECT
15:47:49 174  	    RCN_CPT_SERV_CHARGE_DETAIL_SEQ.nextVal into var_cpt_service_charge_id
15:47:49 175  	  FROM DUAL;
15:47:49 176  	ELSE
15:47:49 177  	  var_cpt_service_charge_id := in_cpt_service_charge_id;
15:47:49 178  	END IF;
15:47:49 179  	INSERT INTO
15:47:49 180  	  RCN_CPT_SERVICE_CHARGE_DETAIL (
15:47:49 181  	    id,
15:47:49 182  	    rcn_ext_source_log_id,
15:47:49 183  	    record_type,
15:47:49 184  	    category,
15:47:49 185  	    sub_category,
15:47:49 186  	    entity_type,
15:47:49 187  	    entity_number,
15:47:49 188  	    funds_transfer_inst_number,
15:47:49 189  	    secure_ba_number,
15:47:49 190  	    settlement_currency,
15:47:49 191  	    fee_schedule,
15:47:49 192  	    mop,
15:47:49 193  	    interchange_qualification,
15:47:49 194  	    fee_type_description,
15:47:49 195  	    action_type,
15:47:49 196  	    unit_quantity,
15:47:49 197  	    unit_fee,
15:47:49 198  	    amount,
15:47:49 199  	    percentage_rate,
15:47:49 200  	    total_charge,
15:47:49 201  	    create_date,
15:47:49 202  	    created_by
15:47:49 203  	  ) VALUES (
15:47:49 204  	    var_cpt_service_charge_id,
15:47:49 205  	    in_ext_source_log_id,
15:47:49 206  	    in_record_type,
15:47:49 207  	    in_category,
15:47:49 208  	    in_sub_category,
15:47:49 209  	    in_entity_type,
15:47:49 210  	    in_entity_number,
15:47:49 211  	    in_funds_trans_inst_number,
15:47:49 212  	    in_secure_ba_number,
15:47:49 213  	    in_settlement_currency,
15:47:49 214  	    in_fee_schedule,
15:47:49 215  	    in_mop,
15:47:49 216  	    in_interchange_qual,
15:47:49 217  	    in_fee_type_description,
15:47:49 218  	    in_action_type,
15:47:49 219  	    in_unit_quantity,
15:47:49 220  	    in_unit_fee,
15:47:49 221  	    in_amount,
15:47:49 222  	    in_percentage_rate,
15:47:49 223  	    in_total_charge,
15:47:49 224  	    var_date,
15:47:49 225  	    in_created_by
15:47:49 226  	  );
15:47:49 227  
15:47:49 228  	out_cpt_service_charge_id := var_cpt_service_charge_id;
15:47:49 229  END CREATE_CPT_SERVICE_CHARGE;
15:47:49 230  
15:47:49 231  PROCEDURE CREATE_CPT_EXCEPTION (
15:47:49 232  	out_cpt_exception_id	 OUT RCN_CPT_EXCEPTION_DETAIL.ID%TYPE,
15:47:49 233  	in_cpt_exception_id	 IN RCN_CPT_EXCEPTION_DETAIL.ID%TYPE DEFAULT NULL,
15:47:49 234  	in_ext_source_log_id	 IN RCN_CPT_EXCEPTION_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:49 235  	in_record_type		 IN RCN_CPT_EXCEPTION_DETAIL.RECORD_TYPE%TYPE,
15:47:49 236  	in_submission_date	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_DATE%TYPE,
15:47:49 237  	in_pid_number		 IN RCN_CPT_EXCEPTION_DETAIL.PID_NUMBER%TYPE,
15:47:49 238  	in_pid_short_name	 IN RCN_CPT_EXCEPTION_DETAIL.PID_SHORT_NAME%TYPE,
15:47:49 239  	in_submission_number	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_NUMBER%TYPE,
15:47:49 240  	in_record_number	 IN RCN_CPT_EXCEPTION_DETAIL.RECORD_NUMBER%TYPE,
15:47:49 241  	in_entity_type		 IN RCN_CPT_EXCEPTION_DETAIL.ENTITY_TYPE%TYPE,
15:47:49 242  	in_entity_number	 IN RCN_CPT_EXCEPTION_DETAIL.ENTITY_NUMBER%TYPE,
15:47:49 243  	in_presentment_currency  IN RCN_CPT_EXCEPTION_DETAIL.PRESENTMENT_CURRENCY%TYPE,
15:47:49 244  	in_merchant_order_number IN RCN_CPT_EXCEPTION_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
15:47:49 245  	in_rdfi_number		 IN RCN_CPT_EXCEPTION_DETAIL.RDFI_NUMBER%TYPE,
15:47:49 246  	in_account_number	 IN RCN_CPT_EXCEPTION_DETAIL.ACCOUNT_NUMBER%TYPE,
15:47:49 247  	in_expiration_date	 IN RCN_CPT_EXCEPTION_DETAIL.EXPIRATION_DATE%TYPE,
15:47:49 248  	in_amount		 IN RCN_CPT_EXCEPTION_DETAIL.AMOUNT%TYPE,
15:47:49 249  	in_mop			 IN RCN_CPT_EXCEPTION_DETAIL.MOP%TYPE,
15:47:49 250  	in_action_code		 IN RCN_CPT_EXCEPTION_DETAIL.ACTION_CODE%TYPE,
15:47:49 251  	in_auth_date		 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_DATE%TYPE,
15:47:49 252  	in_auth_code		 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_CODE%TYPE,
15:47:49 253  	in_auth_response_code	 IN RCN_CPT_EXCEPTION_DETAIL.AUTH_RESPONSE_CODE%TYPE,
15:47:49 254  	in_trace_number 	 IN RCN_CPT_EXCEPTION_DETAIL.TRACE_NUMBER%TYPE,
15:47:49 255  	in_consumer_country_code IN RCN_CPT_EXCEPTION_DETAIL.CONSUMER_COUNTRY_CODE%TYPE,
15:47:49 256  	in_category		 IN RCN_CPT_EXCEPTION_DETAIL.CATEGORY%TYPE,
15:47:49 257  	in_mcc			 IN RCN_CPT_EXCEPTION_DETAIL.MCC%TYPE,
15:47:49 258  	in_reject_code		 IN RCN_CPT_EXCEPTION_DETAIL.REJECT_CODE%TYPE,
15:47:49 259  	in_submission_status	 IN RCN_CPT_EXCEPTION_DETAIL.SUBMISSION_STATUS%TYPE,
15:47:49 260  	in_created_by		 IN RCN_CPT_EXCEPTION_DETAIL.CREATED_BY%TYPE
15:47:49 261  ) AS
15:47:49 262  -- VARIABLES
15:47:49 263  var_cpt_exception_id RCN_CPT_EXCEPTION_DETAIL.ID%TYPE;
15:47:49 264  var_date DATE := SYSDATE;
15:47:49 265  BEGIN
15:47:49 266  	IF in_cpt_exception_id IS NULL THEN
15:47:49 267  	  SELECT
15:47:49 268  	    RCN_CPT_EXCEPTION_DETAIL_SEQ.nextVal into var_cpt_exception_id
15:47:49 269  	  FROM DUAL;
15:47:49 270  	ELSE
15:47:49 271  	  var_cpt_exception_id := in_cpt_exception_id;
15:47:49 272  	END IF;
15:47:49 273  	INSERT INTO
15:47:49 274  	  RCN_CPT_EXCEPTION_DETAIL (
15:47:49 275  	    id,
15:47:49 276  	    rcn_ext_source_log_id,
15:47:49 277  	    record_type,
15:47:49 278  	    submission_date,
15:47:49 279  	    pid_number,
15:47:49 280  	    pid_short_name,
15:47:49 281  	    submission_number,
15:47:49 282  	    record_number,
15:47:49 283  	    entity_type,
15:47:49 284  	    entity_number,
15:47:49 285  	    presentment_currency,
15:47:49 286  	    merchant_order_number,
15:47:49 287  	    rdfi_number,
15:47:49 288  	    account_number,
15:47:49 289  	    expiration_date,
15:47:49 290  	    amount,
15:47:49 291  	    mop,
15:47:49 292  	    action_code,
15:47:49 293  	    auth_date,
15:47:49 294  	    auth_code,
15:47:49 295  	    auth_response_code,
15:47:49 296  	    trace_number,
15:47:49 297  	    consumer_country_code,
15:47:49 298  	    category,
15:47:49 299  	    mcc,
15:47:49 300  	    reject_code,
15:47:49 301  	    submission_status,
15:47:49 302  	    create_date,
15:47:49 303  	    created_by
15:47:49 304  	  ) VALUES (
15:47:49 305  	    var_cpt_exception_id,
15:47:49 306  	    in_ext_source_log_id,
15:47:49 307  	    in_record_type,
15:47:49 308  	    in_submission_date,
15:47:49 309  	    in_pid_number,
15:47:49 310  	    in_pid_short_name,
15:47:49 311  	    in_submission_number,
15:47:49 312  	    in_record_number,
15:47:49 313  	    in_entity_type,
15:47:49 314  	    in_entity_number,
15:47:49 315  	    in_presentment_currency,
15:47:49 316  	    in_merchant_order_number,
15:47:49 317  	    in_rdfi_number,
15:47:49 318  	    in_account_number,
15:47:49 319  	    in_expiration_date,
15:47:49 320  	    in_amount,
15:47:49 321  	    in_mop,
15:47:49 322  	    in_action_code,
15:47:49 323  	    in_auth_date,
15:47:49 324  	    in_auth_code,
15:47:49 325  	    in_auth_response_code,
15:47:49 326  	    in_trace_number,
15:47:49 327  	    in_consumer_country_code,
15:47:49 328  	    in_category,
15:47:49 329  	    in_mcc,
15:47:49 330  	    in_reject_code,
15:47:49 331  	    in_submission_status,
15:47:49 332  	    var_date,
15:47:49 333  	    in_created_by
15:47:49 334  	  );
15:47:49 335  
15:47:49 336  	out_cpt_exception_id := var_cpt_exception_id;
15:47:49 337  END CREATE_CPT_EXCEPTION;
15:47:49 338  
15:47:49 339  PROCEDURE CREATE_CPT_DEPOSIT (
15:47:49 340  	out_cpt_deposit_id	  OUT RCN_CPT_DEPOSIT_DETAIL.ID%TYPE,
15:47:49 341  	in_cpt_deposit_id	  IN RCN_CPT_DEPOSIT_DETAIL.ID%TYPE DEFAULT NULL,
15:47:49 342  	in_ext_source_log_id	  IN RCN_CPT_DEPOSIT_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:49 343  	in_record_type		  IN RCN_CPT_DEPOSIT_DETAIL.RECORD_TYPE%TYPE,
15:47:49 344  	in_submission_date	  IN RCN_CPT_DEPOSIT_DETAIL.SUBMISSION_DATE%TYPE,
15:47:49 345  	in_pid_number		  IN RCN_CPT_DEPOSIT_DETAIL.PID_NUMBER%TYPE,
15:47:49 346  	in_pid_short_name	  IN RCN_CPT_DEPOSIT_DETAIL.PID_SHORT_NAME%TYPE,
15:47:49 347  	in_submission_number	  IN RCN_CPT_DEPOSIT_DETAIL.SUBMISSION_NUMBER%TYPE,
15:47:49 348  	in_record_number	  IN RCN_CPT_DEPOSIT_DETAIL.RECORD_NUMBER%TYPE,
15:47:49 349  	in_entity_type		  IN RCN_CPT_DEPOSIT_DETAIL.ENTITY_TYPE%TYPE,
15:47:49 350  	in_entity_number	  IN RCN_CPT_DEPOSIT_DETAIL.ENTITY_NUMBER%TYPE,
15:47:49 351  	in_presentment_currency   IN RCN_CPT_DEPOSIT_DETAIL.PRESENTMENT_CURRENCY%TYPE,
15:47:49 352  	in_merchant_order_number  IN RCN_CPT_DEPOSIT_DETAIL.MERCHANT_ORDER_NUMBER%TYPE,
15:47:49 353  	in_rdfi_number		  IN RCN_CPT_DEPOSIT_DETAIL.RDFI_NUMBER%TYPE,
15:47:49 354  	in_account_number	  IN RCN_CPT_DEPOSIT_DETAIL.ACCOUNT_NUMBER%TYPE,
15:47:49 355  	in_expiration_date	  IN RCN_CPT_DEPOSIT_DETAIL.EXPIRATION_DATE%TYPE,
15:47:49 356  	in_amount		  IN RCN_CPT_DEPOSIT_DETAIL.AMOUNT%TYPE,
15:47:49 357  	in_mop			  IN RCN_CPT_DEPOSIT_DETAIL.MOP%TYPE,
15:47:49 358  	in_action_code		  IN RCN_CPT_DEPOSIT_DETAIL.ACTION_CODE%TYPE,
15:47:49 359  	in_auth_date		  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_DATE%TYPE,
15:47:49 360  	in_auth_code		  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_CODE%TYPE,
15:47:49 361  	in_auth_response_code	  IN RCN_CPT_DEPOSIT_DETAIL.AUTH_RESPONSE_CODE%TYPE,
15:47:49 362  	in_trace_number 	  IN RCN_CPT_DEPOSIT_DETAIL.TRACE_NUMBER%TYPE,
15:47:49 363  	in_consumer_country_code  IN RCN_CPT_DEPOSIT_DETAIL.CONSUMER_COUNTRY_CODE%TYPE,
15:47:49 364  	in_mcc			  IN RCN_CPT_DEPOSIT_DETAIL.MCC%TYPE,
15:47:49 365  	in_fee_code		  IN RCN_CPT_DEPOSIT_DETAIL.FEE_CODE%TYPE,
15:47:49 366  	in_unit_fee		  IN RCN_CPT_DEPOSIT_DETAIL.UNIT_FEE%TYPE,
15:47:49 367  	in_percent_fee		  IN RCN_CPT_DEPOSIT_DETAIL.PERCENT_FEE%TYPE,
15:47:49 368  	in_total_interchange_fee  IN RCN_CPT_DEPOSIT_DETAIL.TOTAL_INTERCHANGE_FEE%TYPE,
15:47:49 369  	in_total_assessment_fee   IN RCN_CPT_DEPOSIT_DETAIL.TOTAL_ASSESSMENT_FEE%TYPE,
15:47:49 370  	in_other_fee		  IN RCN_CPT_DEPOSIT_DETAIL.OTHER_FEE%TYPE,
15:47:49 371  	in_created_by		  IN RCN_CPT_DEPOSIT_DETAIL.CREATED_BY%TYPE
15:47:49 372  ) AS
15:47:49 373  -- VARIABLES
15:47:49 374  var_cpt_deposit_id RCN_CPT_DEPOSIT_DETAIL.ID%TYPE;
15:47:49 375  var_date DATE := SYSDATE;
15:47:49 376  BEGIN
15:47:49 377  	IF in_cpt_deposit_id IS NULL THEN
15:47:49 378  	  SELECT
15:47:49 379  	    RCN_CPT_DEPOSIT_DETAIL_SEQ.nextVal into var_cpt_deposit_id
15:47:49 380  	  FROM DUAL;
15:47:49 381  	ELSE
15:47:49 382  	  var_cpt_deposit_id := in_cpt_deposit_id;
15:47:49 383  	END IF;
15:47:49 384  	INSERT INTO
15:47:49 385  	  RCN_CPT_DEPOSIT_DETAIL (
15:47:49 386  	    id,
15:47:49 387  	    rcn_ext_source_log_id,
15:47:49 388  	    record_type,
15:47:49 389  	    submission_date,
15:47:49 390  	    pid_number,
15:47:49 391  	    pid_short_name,
15:47:49 392  	    submission_number,
15:47:49 393  	    record_number,
15:47:49 394  	    entity_type,
15:47:49 395  	    entity_number,
15:47:49 396  	    presentment_currency,
15:47:49 397  	    merchant_order_number,
15:47:49 398  	    rdfi_number,
15:47:49 399  	    account_number,
15:47:49 400  	    expiration_date,
15:47:49 401  	    amount,
15:47:49 402  	    mop,
15:47:49 403  	    action_code,
15:47:49 404  	    auth_date,
15:47:49 405  	    auth_code,
15:47:49 406  	    auth_response_code,
15:47:49 407  	    trace_number,
15:47:49 408  	    consumer_country_code,
15:47:49 409  	    mcc,
15:47:49 410  	    fee_code,
15:47:49 411  	    unit_fee,
15:47:49 412  	    percent_fee,
15:47:49 413  	    total_interchange_fee,
15:47:49 414  	    total_assessment_fee,
15:47:49 415  	    other_fee,
15:47:49 416  	    create_date,
15:47:49 417  	    created_by
15:47:49 418  	  ) VALUES (
15:47:49 419  	    var_cpt_deposit_id,
15:47:49 420  	    in_ext_source_log_id,
15:47:49 421  	    in_record_type,
15:47:49 422  	    in_submission_date,
15:47:49 423  	    in_pid_number,
15:47:49 424  	    in_pid_short_name,
15:47:49 425  	    in_submission_number,
15:47:49 426  	    in_record_number,
15:47:49 427  	    in_entity_type,
15:47:49 428  	    in_entity_number,
15:47:49 429  	    in_presentment_currency,
15:47:49 430  	    in_merchant_order_number,
15:47:49 431  	    in_rdfi_number,
15:47:49 432  	    in_account_number,
15:47:49 433  	    in_expiration_date,
15:47:49 434  	    in_amount,
15:47:49 435  	    in_mop,
15:47:49 436  	    in_action_code,
15:47:49 437  	    in_auth_date,
15:47:49 438  	    in_auth_code,
15:47:49 439  	    in_auth_response_code,
15:47:49 440  	    in_trace_number,
15:47:49 441  	    in_consumer_country_code,
15:47:49 442  	    in_mcc,
15:47:49 443  	    in_fee_code,
15:47:49 444  	    in_unit_fee,
15:47:49 445  	    in_percent_fee,
15:47:49 446  	    in_total_interchange_fee,
15:47:49 447  	    in_total_assessment_fee,
15:47:49 448  	    in_other_fee,
15:47:49 449  	    var_date,
15:47:49 450  	    in_created_by
15:47:49 451  	  );
15:47:49 452  
15:47:49 453  	out_cpt_deposit_id := var_cpt_deposit_id;
15:47:49 454  END CREATE_CPT_DEPOSIT;
15:47:49 455  
15:47:49 456  PROCEDURE CREATE_PP_SETTLEMENT (
15:47:49 457  	out_pp_settlement_id	   OUT RCN_PP_SETTLEMENT.ID%TYPE,
15:47:49 458  	in_pp_settlement_id	   IN RCN_PP_SETTLEMENT.ID%TYPE DEFAULT NULL,
15:47:49 459  	in_ext_source_log_id	   IN RCN_PP_SETTLEMENT.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:49 460  	in_transaction_id	   IN RCN_PP_SETTLEMENT.TRANSACTION_ID%TYPE,
15:47:49 461  	in_invoice_id		   IN RCN_PP_SETTLEMENT.INVOICE_ID%TYPE,
15:47:49 462  	in_pp_ref_id		   IN RCN_PP_SETTLEMENT.PP_REF_ID%TYPE,
15:47:49 463  	in_pp_ref_id_type	   IN RCN_PP_SETTLEMENT.PP_REF_ID_TYPE%TYPE,
15:47:49 464  	in_trans_event_code	   IN RCN_PP_SETTLEMENT.TRANS_EVENT_CODE%TYPE,
15:47:49 465  	in_trans_init_date	   IN RCN_PP_SETTLEMENT.TRANS_INIT_DATE%TYPE,
15:47:49 466  	in_trans_comp_date	   IN RCN_PP_SETTLEMENT.TRANS_COMP_DATE%TYPE,
15:47:49 467  	in_trans_deb_or_cred	   IN RCN_PP_SETTLEMENT.TRANS_DEB_OR_CRED%TYPE,
15:47:49 468  	in_gross_trans_amount	   IN RCN_PP_SETTLEMENT.GROSS_TRANS_AMOUNT%TYPE,
15:47:49 469  	in_gross_trans_currency    IN RCN_PP_SETTLEMENT.GROSS_TRANS_CURRENCY%TYPE,
15:47:49 470  	in_fee_deb_or_cred	   IN RCN_PP_SETTLEMENT.FEE_DEB_OR_CRED%TYPE,
15:47:49 471  	in_fee_amount		   IN RCN_PP_SETTLEMENT.FEE_AMOUNT%TYPE,
15:47:49 472  	in_fee_currency 	   IN RCN_PP_SETTLEMENT.FEE_CURRENCY%TYPE,
15:47:49 473  	in_custom_field 	   IN RCN_PP_SETTLEMENT.CUSTOM_FIELD%TYPE,
15:47:49 474  	in_created_by		   IN RCN_PP_SETTLEMENT.CREATED_BY%TYPE
15:47:49 475  ) AS
15:47:49 476  -- VARIABLES
15:47:49 477  var_pp_settlement_id RCN_PP_SETTLEMENT.ID%TYPE;
15:47:49 478  var_date DATE := SYSDATE;
15:47:49 479  BEGIN
15:47:49 480  	IF in_pp_settlement_id IS NULL THEN
15:47:49 481  	  SELECT
15:47:49 482  	    RCN_PP_SETTLEMENT_SEQ.nextVal into var_pp_settlement_id
15:47:49 483  	  FROM DUAL;
15:47:49 484  	ELSE
15:47:49 485  	  var_pp_settlement_id := in_pp_settlement_id;
15:47:49 486  	END IF;
15:47:49 487  	INSERT INTO
15:47:49 488  	  RCN_PP_SETTLEMENT (
15:47:49 489  	    id,
15:47:49 490  	    rcn_ext_source_log_id,
15:47:49 491  	    transaction_id,
15:47:49 492  	    invoice_id,
15:47:49 493  	    pp_ref_id,
15:47:49 494  	    pp_ref_id_type,
15:47:49 495  	    trans_event_code,
15:47:49 496  	    trans_init_date,
15:47:49 497  	    trans_comp_date,
15:47:49 498  	    trans_deb_or_cred,
15:47:49 499  	    gross_trans_amount,
15:47:49 500  	    gross_trans_currency,
15:47:49 501  	    fee_deb_or_cred,
15:47:49 502  	    fee_amount,
15:47:49 503  	    fee_currency,
15:47:49 504  	    custom_field,
15:47:49 505  	    create_date,
15:47:49 506  	    created_by
15:47:49 507  	  ) VALUES (
15:47:49 508  	    var_pp_settlement_id,
15:47:49 509  	    in_ext_source_log_id,
15:47:49 510  	    in_transaction_id,
15:47:49 511  	    in_invoice_id,
15:47:49 512  	    in_pp_ref_id,
15:47:49 513  	    in_pp_ref_id_type,
15:47:49 514  	    in_trans_event_code,
15:47:49 515  	    in_trans_init_date,
15:47:49 516  	    in_trans_comp_date,
15:47:49 517  	    in_trans_deb_or_cred,
15:47:49 518  	    in_gross_trans_amount,
15:47:49 519  	    in_gross_trans_currency,
15:47:49 520  	    in_fee_deb_or_cred,
15:47:49 521  	    in_fee_amount,
15:47:49 522  	    in_fee_currency,
15:47:49 523  	    in_custom_field,
15:47:49 524  	    var_date,
15:47:49 525  	    in_created_by
15:47:49 526  	  );
15:47:49 527  
15:47:49 528  	out_pp_settlement_id := var_pp_settlement_id;
15:47:49 529  END CREATE_PP_SETTLEMENT;
15:47:49 530  
15:47:49 531  PROCEDURE CREATE_PP_DISPUTE (
15:47:49 532  	out_pp_dispute_id	     OUT RCN_PP_DISPUTE.ID%TYPE,
15:47:49 533  	in_pp_dispute_id	     IN RCN_PP_DISPUTE.ID%TYPE DEFAULT NULL,
15:47:49 534  	in_ext_source_log_id	     IN RCN_PP_DISPUTE.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:49 535  	in_dispute_type 	     IN RCN_PP_DISPUTE.DISPUTE_TYPE%TYPE,
15:47:49 536  	in_claimant_name	     IN RCN_PP_DISPUTE.CLAIMANT_NAME%TYPE,
15:47:49 537  	in_claimant_email	     IN RCN_PP_DISPUTE.CLAIMANT_EMAIL%TYPE,
15:47:49 538  	in_transaction_id	     IN RCN_PP_DISPUTE.TRANSACTION_ID%TYPE,
15:47:49 539  	in_trans_date		     IN RCN_PP_DISPUTE.TRANS_DATE%TYPE,
15:47:49 540  	in_disputed_amount	     IN RCN_PP_DISPUTE.DISPUTED_AMOUNT%TYPE,
15:47:49 541  	in_disputed_amount_currency  IN RCN_PP_DISPUTE.DISPUTED_AMOUNT_CURRENCY%TYPE,
15:47:49 542  	in_dispute_reason	     IN RCN_PP_DISPUTE.DISPUTE_REASON%TYPE,
15:47:49 543  	in_dispute_filing_date	     IN RCN_PP_DISPUTE.DISPUTE_FILING_DATE%TYPE,
15:47:49 544  	in_dispute_status	     IN RCN_PP_DISPUTE.DISPUTE_STATUS%TYPE,
15:47:49 545  	in_dispute_case_id	     IN RCN_PP_DISPUTE.DISPUTE_CASE_ID%TYPE,
15:47:49 546  	in_invoice_id		     IN RCN_PP_DISPUTE.INVOICE_ID%TYPE,
15:47:49 547  	in_created_by		     IN RCN_PP_DISPUTE.CREATED_BY%TYPE
15:47:49 548  ) AS
15:47:49 549  -- VARIABLES
15:47:49 550  var_pp_dispute_id RCN_PP_DISPUTE.ID%TYPE;
15:47:49 551  var_date DATE := SYSDATE;
15:47:49 552  BEGIN
15:47:49 553  	IF in_pp_dispute_id IS NULL THEN
15:47:49 554  	  SELECT
15:47:49 555  	    RCN_PP_DISPUTE_SEQ.nextVal into var_pp_dispute_id
15:47:49 556  	  FROM DUAL;
15:47:49 557  	ELSE
15:47:49 558  	  var_pp_dispute_id := in_pp_dispute_id;
15:47:49 559  	END IF;
15:47:49 560  	INSERT INTO
15:47:49 561  	  RCN_PP_DISPUTE (
15:47:49 562  	    id,
15:47:49 563  	    rcn_ext_source_log_id,
15:47:49 564  	    dispute_type,
15:47:49 565  	    claimant_name,
15:47:49 566  	    claimant_email,
15:47:49 567  	    transaction_id,
15:47:49 568  	    trans_date,
15:47:49 569  	    disputed_amount,
15:47:49 570  	    disputed_amount_currency,
15:47:49 571  	    dispute_reason,
15:47:49 572  	    dispute_filing_date,
15:47:49 573  	    dispute_status,
15:47:49 574  	    dispute_case_id,
15:47:49 575  	    invoice_id,
15:47:49 576  	    create_date,
15:47:49 577  	    created_by
15:47:49 578  	  ) VALUES (
15:47:49 579  	    var_pp_dispute_id,
15:47:49 580  	    in_ext_source_log_id,
15:47:49 581  	    in_dispute_type,
15:47:49 582  	    in_claimant_name,
15:47:49 583  	    in_claimant_email,
15:47:49 584  	    in_transaction_id,
15:47:49 585  	    in_trans_date,
15:47:49 586  	    in_disputed_amount,
15:47:49 587  	    in_disputed_amount_currency,
15:47:49 588  	    in_dispute_reason,
15:47:49 589  	    in_dispute_filing_date,
15:47:49 590  	    in_dispute_status,
15:47:49 591  	    in_dispute_case_id,
15:47:49 592  	    in_invoice_id,
15:47:49 593  	    var_date,
15:47:49 594  	    in_created_by
15:47:49 595  	  );
15:47:49 596  
15:47:49 597  	out_pp_dispute_id := var_pp_dispute_id;
15:47:49 598  END CREATE_PP_DISPUTE;
15:47:49 599  
15:47:49 600  PROCEDURE CREATE_PP_TRANS_DETAIL (
15:47:49 601  	out_pp_trans_detail_id	     OUT RCN_PP_TRANS_DETAIL.ID%TYPE,
15:47:49 602  	in_pp_trans_detail_id	     IN RCN_PP_TRANS_DETAIL.ID%TYPE DEFAULT NULL,
15:47:49 603  	in_ext_source_log_id	     IN RCN_PP_TRANS_DETAIL.RCN_EXT_SOURCE_LOG_ID%TYPE,
15:47:49 604  	in_invoice_id		     IN RCN_PP_TRANS_DETAIL.INVOICE_ID%TYPE,
15:47:49 605  	in_transaction_id	     IN RCN_PP_TRANS_DETAIL.TRANSACTION_ID%TYPE,
15:47:49 606  	in_pp_ref_id		     IN RCN_PP_TRANS_DETAIL.PP_REF_ID%TYPE,
15:47:49 607  	in_trans_deb_or_cred	     IN RCN_PP_TRANS_DETAIL.TRANS_DEB_OR_CRED%TYPE,
15:47:49 608  	in_trans_init_date	     IN RCN_PP_TRANS_DETAIL.TRANS_INIT_DATE%TYPE,
15:47:49 609  	in_trans_comp_date	     IN RCN_PP_TRANS_DETAIL.TRANS_COMP_DATE%TYPE,
15:47:49 610  	in_gross_trans_amount	     IN RCN_PP_TRANS_DETAIL.GROSS_TRANS_AMOUNT%TYPE,
15:47:49 611  	in_gross_trans_currency      IN RCN_PP_TRANS_DETAIL.GROSS_TRANS_CURRENCY%TYPE,
15:47:49 612  	in_fee_amount		     IN RCN_PP_TRANS_DETAIL.FEE_AMOUNT%TYPE,
15:47:49 613  	in_fee_currency 	     IN RCN_PP_TRANS_DETAIL.FEE_CURRENCY%TYPE,
15:47:49 614  	in_fee_deb_or_cred	     IN RCN_PP_TRANS_DETAIL.FEE_DEB_OR_CRED%TYPE,
15:47:49 615  	in_trans_event_code	     IN RCN_PP_TRANS_DETAIL.TRANS_EVENT_CODE%TYPE,
15:47:49 616  	in_trans_status 	     IN RCN_PP_TRANS_DETAIL.TRANS_STATUS%TYPE,
15:47:49 617  	in_insurance_amount	     IN RCN_PP_TRANS_DETAIL.INSURANCE_AMOUNT%TYPE,
15:47:49 618  	in_sales_tax_amount	     IN RCN_PP_TRANS_DETAIL.SALES_TAX_AMOUNT%TYPE,
15:47:49 619  	in_shipping_amount	     IN RCN_PP_TRANS_DETAIL.SHIPPING_AMOUNT%TYPE,
15:47:49 620  	in_trans_subject	     IN RCN_PP_TRANS_DETAIL.TRANS_SUBJECT%TYPE,
15:47:49 621  	in_trans_note		     IN RCN_PP_TRANS_DETAIL.TRANS_NOTE%TYPE,
15:47:49 622  	in_payer_acct_id	     IN RCN_PP_TRANS_DETAIL.PAYER_ACCT_ID%TYPE,
15:47:49 623  	in_payer_addr_status	     IN RCN_PP_TRANS_DETAIL.PAYER_ADDR_STATUS%TYPE,
15:47:49 624  	in_item_name		     IN RCN_PP_TRANS_DETAIL.ITEM_NAME%TYPE,
15:47:49 625  	in_item_id		     IN RCN_PP_TRANS_DETAIL.ITEM_ID%TYPE,
15:47:49 626  	in_option_1_name	     IN RCN_PP_TRANS_DETAIL.OPTION_1_NAME%TYPE,
15:47:49 627  	in_option_1_value	     IN RCN_PP_TRANS_DETAIL.OPTION_1_VALUE%TYPE,
15:47:49 628  	in_option_2_name	     IN RCN_PP_TRANS_DETAIL.OPTION_2_NAME%TYPE,
15:47:49 629  	in_option_2_value	     IN RCN_PP_TRANS_DETAIL.OPTION_2_VALUE%TYPE,
15:47:49 630  	in_auction_site 	     IN RCN_PP_TRANS_DETAIL.AUCTION_SITE%TYPE,
15:47:49 631  	in_auction_buyer_id	     IN RCN_PP_TRANS_DETAIL.AUCTION_BUYER_ID%TYPE,
15:47:49 632  	in_auction_closing_date      IN RCN_PP_TRANS_DETAIL.AUCTION_CLOSING_DATE%TYPE,
15:47:49 633  	in_shipping_addr_line_1      IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_LINE_1%TYPE,
15:47:49 634  	in_shipping_addr_line_2      IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_LINE_2%TYPE,
15:47:49 635  	in_shipping_addr_city	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_CITY%TYPE,
15:47:49 636  	in_shipping_addr_state	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_STATE%TYPE,
15:47:49 637  	in_shipping_addr_zip	     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_ZIP%TYPE,
15:47:49 638  	in_shipping_addr_country     IN RCN_PP_TRANS_DETAIL.SHIPPING_ADDR_COUNTRY%TYPE,
15:47:49 639  	in_custom_field 	     IN RCN_PP_TRANS_DETAIL.CUSTOM_FIELD%TYPE,
15:47:49 640  	in_created_by		     IN RCN_PP_TRANS_DETAIL.CREATED_BY%TYPE
15:47:49 641  ) AS
15:47:49 642  -- VARIABLES
15:47:49 643  var_pp_trans_detail_id RCN_PP_TRANS_DETAIL.ID%TYPE;
15:47:49 644  var_date DATE := SYSDATE;
15:47:49 645  BEGIN
15:47:49 646  	IF in_pp_trans_detail_id IS NULL THEN
15:47:49 647  	  SELECT
15:47:49 648  	    RCN_PP_TRANS_DETAIL_SEQ.nextVal into var_pp_trans_detail_id
15:47:49 649  	  FROM DUAL;
15:47:49 650  	ELSE
15:47:49 651  	  var_pp_trans_detail_id := in_pp_trans_detail_id;
15:47:49 652  	END IF;
15:47:49 653  	INSERT INTO
15:47:49 654  	  RCN_PP_TRANS_DETAIL (
15:47:49 655  	    id,
15:47:49 656  	    rcn_ext_source_log_id,
15:47:49 657  	    transaction_id,
15:47:49 658  	    invoice_id,
15:47:49 659  	    pp_ref_id,
15:47:49 660  	    trans_event_code,
15:47:49 661  	    trans_init_date,
15:47:49 662  	    trans_comp_date,
15:47:49 663  	    trans_deb_or_cred,
15:47:49 664  	    gross_trans_amount,
15:47:49 665  	    gross_trans_currency,
15:47:49 666  	    fee_deb_or_cred,
15:47:49 667  	    fee_amount,
15:47:49 668  	    fee_currency,
15:47:49 669  	    trans_status,
15:47:49 670  	    insurance_amount,
15:47:49 671  	    sales_tax_amount,
15:47:49 672  	    shipping_amount,
15:47:49 673  	    trans_subject,
15:47:49 674  	    trans_note,
15:47:49 675  	    payer_acct_id,
15:47:49 676  	    payer_addr_status,
15:47:49 677  	    item_name,
15:47:49 678  	    item_id,
15:47:49 679  	    option_1_name,
15:47:49 680  	    option_1_value,
15:47:49 681  	    option_2_name,
15:47:49 682  	    option_2_value,
15:47:49 683  	    auction_site,
15:47:49 684  	    auction_buyer_id,
15:47:49 685  	    auction_closing_date,
15:47:49 686  	    shipping_addr_line_1,
15:47:49 687  	    shipping_addr_line_2,
15:47:49 688  	    shipping_addr_city,
15:47:49 689  	    shipping_addr_state,
15:47:49 690  	    shipping_addr_zip,
15:47:49 691  	    shipping_addr_country,
15:47:49 692  	    custom_field,
15:47:49 693  	    create_date,
15:47:49 694  	    created_by
15:47:49 695  	  ) VALUES (
15:47:49 696  	    var_pp_trans_detail_id,
15:47:49 697  	    in_ext_source_log_id,
15:47:49 698  	    in_transaction_id,
15:47:49 699  	    in_invoice_id,
15:47:49 700  	    in_pp_ref_id,
15:47:49 701  	    in_trans_event_code,
15:47:49 702  	    in_trans_init_date,
15:47:49 703  	    in_trans_comp_date,
15:47:49 704  	    in_trans_deb_or_cred,
15:47:49 705  	    in_gross_trans_amount,
15:47:49 706  	    in_gross_trans_currency,
15:47:49 707  	    in_fee_deb_or_cred,
15:47:49 708  	    in_fee_amount,
15:47:49 709  	    in_fee_currency,
15:47:49 710  	    in_trans_status,
15:47:49 711  	    in_insurance_amount,
15:47:49 712  	    in_sales_tax_amount,
15:47:49 713  	    in_shipping_amount,
15:47:49 714  	    in_trans_subject,
15:47:49 715  	    in_trans_note,
15:47:49 716  	    in_payer_acct_id,
15:47:49 717  	    in_payer_addr_status,
15:47:49 718  	    in_item_name,
15:47:49 719  	    in_item_id,
15:47:49 720  	    in_option_1_name,
15:47:49 721  	    in_option_1_value,
15:47:49 722  	    in_option_2_name,
15:47:49 723  	    in_option_2_value,
15:47:49 724  	    in_auction_site,
15:47:49 725  	    in_auction_buyer_id,
15:47:49 726  	    in_auction_closing_date,
15:47:49 727  	    in_shipping_addr_line_1,
15:47:49 728  	    in_shipping_addr_line_2,
15:47:49 729  	    in_shipping_addr_city,
15:47:49 730  	    in_shipping_addr_state,
15:47:49 731  	    in_shipping_addr_zip,
15:47:49 732  	    in_shipping_addr_country,
15:47:49 733  	    in_custom_field,
15:47:49 734  	    var_date,
15:47:49 735  	    in_created_by
15:47:49 736  	  );
15:47:49 737  
15:47:49 738  	out_pp_trans_detail_id := var_pp_trans_detail_id;
15:47:49 739  END CREATE_PP_TRANS_DETAIL;
15:47:49 740  
15:47:49 741  PROCEDURE DELETE_EXT_SOURCE_LOG (
15:47:49 742  	in_record_type		 IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
15:47:49 743  	in_report_file_name	 IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE
15:47:49 744  ) AS
15:47:49 745  BEGIN
15:47:49 746  	DELETE FROM
15:47:49 747  	  RCN_EXT_SOURCE_LOG
15:47:49 748  	WHERE
15:47:49 749  	  RCN_EXT_SOURCE_LOG.RECORD_TYPE = in_record_type AND
15:47:49 750  	  RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME = in_report_file_name;
15:47:49 751  END DELETE_EXT_SOURCE_LOG;
15:47:49 752  
15:47:49 753  PROCEDURE GET_EXT_SOURCE_LOG (
15:47:49 754  	in_record_type		 IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
15:47:49 755  	in_report_file_name	 IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE,
15:47:49 756  	out_result_set		 OUT SYS_REFCURSOR
15:47:49 757  ) AS
15:47:49 758  BEGIN
15:47:49 759  	OPEN out_result_set FOR
15:47:49 760  	SELECT * FROM
15:47:49 761  	  RCN_EXT_SOURCE_LOG
15:47:49 762  	WHERE
15:47:49 763  	  RCN_EXT_SOURCE_LOG.RECORD_TYPE = in_record_type AND
15:47:49 764  	  RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME = in_report_file_name;
15:47:49 765  END GET_EXT_SOURCE_LOG;
15:47:49 766  
15:47:49 767  FUNCTION CHECK_EXT_SOURCE_LOG (
15:47:49 768  	in_record_type		 IN RCN_EXT_SOURCE_LOG.RECORD_TYPE%TYPE,
15:47:49 769  	in_report_file_name	 IN RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME%TYPE
15:47:49 770  ) RETURN NUMBER AS
15:47:49 771  var_exists NUMBER;
15:47:49 772  BEGIN
15:47:49 773  	SELECT count(1) INTO var_exists
15:47:49 774  	FROM
15:47:49 775  	  RCN_EXT_SOURCE_LOG
15:47:49 776  	WHERE
15:47:49 777  	  RCN_EXT_SOURCE_LOG.RECORD_TYPE = in_record_type AND
15:47:49 778  	  RCN_EXT_SOURCE_LOG.REPORT_FILE_NAME = in_report_file_name;
15:47:49 779  
15:47:49 780  	IF var_exists > 1 THEN
15:47:49 781  	  var_exists := 1;
15:47:49 782  	END IF;
15:47:49 783  
15:47:49 784  	RETURN var_exists;
15:47:49 785  END;
15:47:49 786  
15:47:49 787  PROCEDURE CREATE_AMEX_CHARGEBACK (
15:47:49 788  	  in_rcn_ext_source_log_id IN RCN_EXT_SOURCE_LOG.ID%TYPE,
15:47:49 789  	  in_resolution IN RCN_AMEX_CHARGEBACK.RESOLUTION%TYPE,
15:47:49 790  	  in_from_system IN RCN_AMEX_CHARGEBACK.FROM_SYSTEM%TYPE,
15:47:49 791  	  in_rejects_to_system IN RCN_AMEX_CHARGEBACK.REJECTS_TO_SYSTEM%TYPE,
15:47:49 792  	  in_disputes_to_system IN RCN_AMEX_CHARGEBACK.DISPUTES_TO_SYSTEM%TYPE,
15:47:49 793  	  in_date_of_adjustment IN RCN_AMEX_CHARGEBACK.DATE_OF_ADJUSTMENT%TYPE,
15:47:49 794  	  in_date_of_charge IN RCN_AMEX_CHARGEBACK.DATE_OF_CHARGE%TYPE,
15:47:49 795  	  in_case_type IN RCN_AMEX_CHARGEBACK.CASE_TYPE%TYPE,
15:47:49 796  	  in_cb_reas_code IN RCN_AMEX_CHARGEBACK.CB_REAS_CODE%TYPE,
15:47:49 797  	  in_cb_amount IN RCN_AMEX_CHARGEBACK.CB_AMOUNT%TYPE,
15:47:49 798  	  in_cb_adjustment_number IN RCN_AMEX_CHARGEBACK.CB_ADJUSTMENT_NUMBER%TYPE,
15:47:49 799  	  in_billed_amount IN RCN_AMEX_CHARGEBACK.BILLED_AMOUNT%TYPE,
15:47:49 800  	  in_soc_amount IN RCN_AMEX_CHARGEBACK.SOC_AMOUNT%TYPE,
15:47:49 801  	  in_foreign_amount IN RCN_AMEX_CHARGEBACK.FOREIGN_AMOUNT%TYPE,
15:47:49 802  	  in_currency IN RCN_AMEX_CHARGEBACK.CURRENCY%TYPE,
15:47:49 803  	  in_note1 IN RCN_AMEX_CHARGEBACK.NOTE1%TYPE,
15:47:49 804  	  in_note2 IN RCN_AMEX_CHARGEBACK.NOTE2%TYPE,
15:47:49 805  	  in_note3 IN RCN_AMEX_CHARGEBACK.NOTE3%TYPE,
15:47:49 806  	  in_note4 IN RCN_AMEX_CHARGEBACK.NOTE4%TYPE,
15:47:49 807  	  in_note5 IN RCN_AMEX_CHARGEBACK.NOTE5%TYPE,
15:47:49 808  	  in_note6 IN RCN_AMEX_CHARGEBACK.NOTE6%TYPE,
15:47:49 809  	  in_note7 IN RCN_AMEX_CHARGEBACK.NOTE7%TYPE,
15:47:49 810  	  in_ind_ref_number IN RCN_AMEX_CHARGEBACK.IND_REF_NUMBER%TYPE,
15:47:49 811  	  in_created_by IN RCN_AMEX_CHARGEBACK.CREATED_BY%TYPE
15:47:49 812  ) AS
15:47:49 813  var_amex_chargeback_id RCN_AMEX_CHARGEBACK.ID%TYPE;
15:47:49 814  var_date DATE := SYSDATE;
15:47:49 815  BEGIN
15:47:49 816  	SELECT
15:47:49 817  	  RCNAMEXCB_ID_SEQ.nextVal into var_amex_chargeback_id
15:47:49 818  	FROM DUAL;
15:47:49 819  
15:47:49 820  	INSERT INTO
15:47:49 821  	  RCN_AMEX_CHARGEBACK (
15:47:49 822  	    id,
15:47:49 823  	    rcn_ext_source_log_id,
15:47:49 824  	    resolution,
15:47:49 825  	    from_system,
15:47:49 826  	    rejects_to_system,
15:47:49 827  	    disputes_to_system,
15:47:49 828  	    date_of_adjustment,
15:47:49 829  	    date_of_charge,
15:47:49 830  	    case_type,
15:47:49 831  	    cb_reas_code,
15:47:49 832  	    cb_amount,
15:47:49 833  	    cb_adjustment_number,
15:47:49 834  	    billed_amount,
15:47:49 835  	    soc_amount,
15:47:49 836  	    foreign_amount,
15:47:49 837  	    currency,
15:47:49 838  	    note1,
15:47:49 839  	    note2,
15:47:49 840  	    note3,
15:47:49 841  	    note4,
15:47:49 842  	    note5,
15:47:49 843  	    note6,
15:47:49 844  	    note7,
15:47:49 845  	    ind_ref_number,
15:47:49 846  	    create_date,
15:47:49 847  	    created_by,
15:47:49 848  	    update_date,
15:47:49 849  	    updated_by
15:47:49 850  	  ) VALUES (
15:47:49 851  	    var_amex_chargeback_id,
15:47:49 852  	    in_rcn_ext_source_log_id,
15:47:49 853  	    in_resolution,
15:47:49 854  	    in_from_system,
15:47:49 855  	    in_rejects_to_system,
15:47:49 856  	    in_disputes_to_system,
15:47:49 857  	    in_date_of_adjustment,
15:47:49 858  	    in_date_of_charge,
15:47:49 859  	    in_case_type,
15:47:49 860  	    in_cb_reas_code,
15:47:49 861  	    in_cb_amount,
15:47:49 862  	    in_cb_adjustment_number,
15:47:49 863  	    in_billed_amount,
15:47:49 864  	    in_soc_amount,
15:47:49 865  	    in_foreign_amount,
15:47:49 866  	    in_currency,
15:47:49 867  	    in_note1,
15:47:49 868  	    in_note2,
15:47:49 869  	    in_note3,
15:47:49 870  	    in_note4,
15:47:49 871  	    in_note5,
15:47:49 872  	    in_note6,
15:47:49 873  	    in_note7,
15:47:49 874  	    in_ind_ref_number,
15:47:49 875  	    var_date,
15:47:49 876  	    in_created_by,
15:47:49 877  	    var_date,
15:47:49 878  	    in_created_by
15:47:49 879  	  );
15:47:49 880  
15:47:49 881  END CREATE_AMEX_CHARGEBACK;
15:47:49 882  
15:47:49 883  END PROCS_RECONCILIATION_CRU_V22;
15:47:49 884  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.12
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SUBSCRIPTION_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_SUBSCRIPTION(
15:47:49   4  	out_subscription_id	     OUT SUBSCRIPTION.ID%TYPE,
15:47:49   5  	in_subscription_id	     IN SUBSCRIPTION.ID%TYPE DEFAULT NULL,
15:47:49   6  	in_suspend_date 	     IN SUBSCRIPTION.SUSPEND_DATE%TYPE DEFAULT NULL,
15:47:49   7  	in_account_id		     IN SUBSCRIPTION.ACCOUNT_ID%TYPE,
15:47:49   8  	in_purchase_date	     IN SUBSCRIPTION.PURCHASE_DATE%TYPE,
15:47:49   9  	in_offer_chain_id	     IN SUBSCRIPTION.OFFER_CHAIN_ID%TYPE,
15:47:49  10  	in_termination_date	     IN SUBSCRIPTION.TERMINATION_DATE%TYPE DEFAULT NULL,
15:47:49  11  	in_days_remainning_ajustment IN SUBSCRIPTION.DAYS_REMAINING_ADJUSTMENT%TYPE DEFAULT NULL,
15:47:49  12  	in_sct_id		     IN SUBSCRIPTION.SCT_ID%TYPE DEFAULT NULL,
15:47:49  13  	in_created_by		     IN SUBSCRIPTION.CREATED_BY%TYPE,
15:47:49  14  	in_instrument_type_id	     IN SUBSCRIPTION.INSTRUMENT_TYPE_ID%TYPE,
15:47:49  15  	in_instrument_id	     IN SUBSCRIPTION.INSTRUMENT_ID%TYPE,
15:47:49  16  	in_subscription_status_id    IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE,
15:47:49  17  	in_cancelation_date	     IN SUBSCRIPTION.CANCELLATION_DATE%TYPE DEFAULT NULL,
15:47:49  18  	in_reactivation_date	     IN SUBSCRIPTION.REACTIVATION_DATE%TYPE DEFAULT NULL
15:47:49  19  ) AS
15:47:49  20  -- VARIABLES
15:47:49  21  var_new_subscription_id SUBSCRIPTION.ID%TYPE;
15:47:49  22  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:49  23  var_date DATE := SYSDATE;
15:47:49  24  BEGIN
15:47:49  25  	IF in_subscription_id IS NULL THEN
15:47:49  26  	  SELECT
15:47:49  27  	    SUB_ID_SEQ.nextVal into var_new_subscription_id
15:47:49  28  	  FROM DUAL;
15:47:49  29  	ELSE
15:47:49  30  	  var_new_subscription_id := in_subscription_id;
15:47:49  31  	END IF;
15:47:49  32  	INSERT INTO SUBSCRIPTION (
15:47:49  33  	  ID,
15:47:49  34  	  SUSPEND_DATE,
15:47:49  35  	  ACCOUNT_ID,
15:47:49  36  	  PURCHASE_DATE,
15:47:49  37  	  OFFER_CHAIN_ID,
15:47:49  38  	  TERMINATION_DATE,
15:47:49  39  	  DAYS_REMAINING_ADJUSTMENT,
15:47:49  40  	  SCT_ID,
15:47:49  41  	  CREATE_DATE,
15:47:49  42  	  CREATED_BY,
15:47:49  43  	  UPDATE_DATE,
15:47:49  44  	  UPDATED_BY,
15:47:49  45  	  INSTRUMENT_TYPE_ID,
15:47:49  46  	  INSTRUMENT_ID,
15:47:49  47  	  SUBSCRIPTION_STATUS_ID,
15:47:49  48  	  CANCELLATION_DATE,
15:47:49  49  	  REACTIVATION_DATE
15:47:49  50  	) VALUES (
15:47:49  51  	  var_new_subscription_id,
15:47:49  52  	  in_suspend_date,
15:47:49  53  	  in_account_id,
15:47:49  54  	  in_purchase_date,
15:47:49  55  	  in_offer_chain_id,
15:47:49  56  	  in_termination_date,
15:47:49  57  	  in_days_remainning_ajustment,
15:47:49  58  	  in_sct_id,
15:47:49  59  	  var_date,
15:47:49  60  	  in_created_by,
15:47:49  61  	  var_date,
15:47:49  62  	  in_created_by,
15:47:49  63  	  in_instrument_type_id,
15:47:49  64  	  in_instrument_id,
15:47:49  65  	  in_subscription_status_id,
15:47:49  66  	  in_cancelation_date,
15:47:49  67  	  in_reactivation_date
15:47:49  68  	);
15:47:49  69  
15:47:49  70  	out_subscription_id := var_new_subscription_id;
15:47:49  71  END CREATE_SUBSCRIPTION;
15:47:49  72  
15:47:49  73  /******************************************************************************/
15:47:49  74  
15:47:49  75  PROCEDURE UPDATE_SUBSCRIPTION(
15:47:49  76  	in_subscription_id	     IN SUBSCRIPTION.ID%TYPE,
15:47:49  77  	in_suspend_date 	     IN SUBSCRIPTION.SUSPEND_DATE%TYPE DEFAULT NULL,
15:47:49  78  	in_purchase_date	     IN SUBSCRIPTION.PURCHASE_DATE%TYPE DEFAULT NULL,
15:47:49  79  	in_termination_date	     IN SUBSCRIPTION.TERMINATION_DATE%TYPE DEFAULT NULL,
15:47:49  80  	in_days_remainning_ajustment IN SUBSCRIPTION.DAYS_REMAINING_ADJUSTMENT%TYPE DEFAULT NULL,
15:47:49  81  	in_sct_id		     IN SUBSCRIPTION.SCT_ID%TYPE DEFAULT NULL,
15:47:49  82  	in_updated_by		     IN SUBSCRIPTION.CREATED_BY%TYPE,
15:47:49  83  	in_instrument_type_id	     IN SUBSCRIPTION.INSTRUMENT_TYPE_ID%TYPE DEFAULT NULL,
15:47:49  84  	in_instrument_id	     IN SUBSCRIPTION.INSTRUMENT_ID%TYPE DEFAULT NULL,
15:47:49  85  	in_subscription_status_id    IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE DEFAULT NULL,
15:47:49  86  	in_cancelation_date	     IN SUBSCRIPTION.CANCELLATION_DATE%TYPE DEFAULT NULL,
15:47:49  87  	in_reactivation_date	     IN SUBSCRIPTION.REACTIVATION_DATE%TYPE DEFAULT NULL
15:47:49  88  ) AS
15:47:49  89  BEGIN
15:47:49  90  	-- Create history
15:47:49  91  	PROCS_HISTORY_V22.CREATE_SUBSCRIPTION_HISTORY(
15:47:49  92  	  in_subscription_id	       => in_subscription_id,
15:47:49  93  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49  94  	);
15:47:49  95  
15:47:49  96  	UPDATE SUBSCRIPTION SET
15:47:49  97  	  SUSPEND_DATE		    = NVL(in_suspend_date, SUSPEND_DATE),
15:47:49  98  	  PURCHASE_DATE 	    = NVL(in_purchase_date, PURCHASE_DATE),
15:47:49  99  	  TERMINATION_DATE	    = NVL(in_termination_date, TERMINATION_DATE),
15:47:49 100  	  DAYS_REMAINING_ADJUSTMENT = NVL(days_remaining_adjustment, DAYS_REMAINING_ADJUSTMENT),
15:47:49 101  	  SCT_ID		    = NVL(in_sct_id, SCT_ID),
15:47:49 102  	  UPDATE_DATE		    = SYSDATE,
15:47:49 103  	  UPDATED_BY		    = in_updated_by,
15:47:49 104  	  INSTRUMENT_TYPE_ID	    = NVL(in_instrument_type_id, INSTRUMENT_TYPE_ID),
15:47:49 105  	  INSTRUMENT_ID 	    = NVL(in_instrument_id, INSTRUMENT_ID),
15:47:49 106  	  SUBSCRIPTION_STATUS_ID    = NVL(in_subscription_status_id, SUBSCRIPTION_STATUS_ID),
15:47:49 107  	  CANCELLATION_DATE	    = NVL(in_cancelation_date, CANCELLATION_DATE),
15:47:49 108  	  REACTIVATION_DATE	    = NVL(in_reactivation_date, REACTIVATION_DATE)
15:47:49 109  	WHERE
15:47:49 110  	  ID = in_subscription_id;
15:47:49 111  END UPDATE_SUBSCRIPTION;
15:47:49 112  
15:47:49 113  /******************************************************************************/
15:47:49 114  
15:47:49 115  PROCEDURE CREATE_SUBSCRIPTION_NOTE (
15:47:49 116  	inout_subscription_note_id IN OUT SUBSCRIPTION_NOTE.ID%TYPE,
15:47:49 117  	in_agent_id		   IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
15:47:49 118  	in_subscription_id	   IN SUBSCRIPTION_NOTE.ID%TYPE,
15:47:49 119  	in_note 		   IN SUBSCRIPTION_NOTE.NOTE%TYPE,
15:47:49 120  	in_created_by		   IN SUBSCRIPTION_NOTE.CREATED_BY%TYPE
15:47:49 121  ) AS
15:47:49 122  BEGIN
15:47:49 123  	IF inout_subscription_note_id IS NULL THEN
15:47:49 124  	  SELECT
15:47:49 125  	    SUBN_ID_SEQ.nextVal into inout_subscription_note_id
15:47:49 126  	  FROM DUAL;
15:47:49 127  	END IF;
15:47:49 128  	INSERT INTO SUBSCRIPTION_NOTE (
15:47:49 129  	  ID,
15:47:49 130  	  AGENT_ID,
15:47:49 131  	  SUBSCRIPTION_ID,
15:47:49 132  	  NOTE,
15:47:49 133  	  CREATE_DATE,
15:47:49 134  	  CREATED_BY
15:47:49 135  	) VALUES (
15:47:49 136  	  inout_subscription_note_id,
15:47:49 137  	  in_agent_id,
15:47:49 138  	  in_subscription_id,
15:47:49 139  	  in_note,
15:47:49 140  	  SYSDATE,
15:47:49 141  	  in_created_by
15:47:49 142  	);
15:47:49 143  END CREATE_SUBSCRIPTION_NOTE;
15:47:49 144  
15:47:49 145  END PROCS_SUBSCRIPTION_CRU_V22;
15:47:49 146  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_TAXES_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_TAX (
15:47:49   4  	inout_tax_id		 IN OUT NUMBER,
15:47:49   5  	in_tax_type_id		 IN NUMBER,
15:47:49   6  	in_calculated_amount	 IN NUMBER,
15:47:49   7  	in_created_by		 IN VARCHAR2,
15:47:49   8  	in_line_item_id 	 IN NUMBER,
15:47:49   9  	in_effective_rate	 IN VARCHAR2,
15:47:49  10  	in_taxable_amount	 IN NUMBER,
15:47:49  11  	in_tax_rule_id		 IN NUMBER,
15:47:49  12  	in_jurisdiction_level_id IN NUMBER,
15:47:49  13  	in_jurisdiction_name	 IN VARCHAR2,
15:47:49  14  	in_jurisdiction_id	 IN VARCHAR2,
15:47:49  15  	in_ext_tax_type 	 IN VARCHAR2,
15:47:49  16  	in_ext_result		 IN VARCHAR2,
15:47:49  17  	in_imposition_type	 IN VARCHAR2,
15:47:49  18  	in_imposition		 IN VARCHAR2
15:47:49  19  ) AS
15:47:49  20  var_date DATE := SYSDATE;
15:47:49  21  BEGIN
15:47:49  22  
15:47:49  23  	IF inout_tax_id IS NULL THEN
15:47:49  24  	  SELECT
15:47:49  25  	    TAX_ID_SEQ.nextVal into inout_tax_id
15:47:49  26  	  FROM DUAL;
15:47:49  27  	END IF;
15:47:49  28  
15:47:49  29  	INSERT INTO TAX (
15:47:49  30  	  ID,
15:47:49  31  	  TAX_TYPE_ID,
15:47:49  32  	  CALCULATED_AMOUNT,
15:47:49  33  	  CREATE_DATE,
15:47:49  34  	  CREATED_BY,
15:47:49  35  	  LINE_ITEM_ID,
15:47:49  36  	  EFFECTIVE_RATE,
15:47:49  37  	  TAXABLE_AMOUNT,
15:47:49  38  	  TAX_RULE_ID,
15:47:49  39  	  JURISDICTION_LEVEL_ID,
15:47:49  40  	  JURISDICTION_NAME,
15:47:49  41  	  JURISDICTION_ID,
15:47:49  42  	  EXT_TAX_TYPE,
15:47:49  43  	  EXT_RESULT,
15:47:49  44  	  IMPOSITION_TYPE,
15:47:49  45  	  IMPOSITION
15:47:49  46  	) VALUES (
15:47:49  47  	  inout_tax_id,
15:47:49  48  	  in_tax_type_id,
15:47:49  49  	  in_calculated_amount,
15:47:49  50  	  var_date,
15:47:49  51  	  in_created_by,
15:47:49  52  	  in_line_item_id,
15:47:49  53  	  in_effective_rate,
15:47:49  54  	  in_taxable_amount,
15:47:49  55  	  in_tax_rule_id,
15:47:49  56  	  in_jurisdiction_level_id,
15:47:49  57  	  in_jurisdiction_name,
15:47:49  58  	  in_jurisdiction_id,
15:47:49  59  	  in_ext_tax_type,
15:47:49  60  	  in_ext_result,
15:47:49  61  	  in_imposition_type,
15:47:49  62  	  in_imposition
15:47:49  63  	);
15:47:49  64  
15:47:49  65  END CREATE_TAX;
15:47:49  66  
15:47:49  67  END PROCS_TAXES_CRU_V22;
15:47:49  68  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.00
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_TRANSACTION_CRU_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_TRANSACTION (
15:47:49   4  	out_transaction_id	 OUT TRANSACTION.ID%TYPE,
15:47:49   5  	in_transaction_id	 IN TRANSACTION.ID%TYPE DEFAULT NULL,
15:47:49   6  	in_transaction_status_id IN TRANSACTION.TRANSACTION_STATUS_ID%TYPE,
15:47:49   7  	in_transaction_amount	 IN TRANSACTION.TRANSACTION_AMOUNT%TYPE,
15:47:49   8  	in_created_by		 IN TRANSACTION.CREATED_BY%TYPE,
15:47:49   9  	in_order_id		 IN TRANSACTION.ORDER_ID%TYPE,
15:47:49  10  	in_is_refund		 IN TRANSACTION.IS_REFUND%TYPE DEFAULT GLOBAL_CONSTANTS_V22.FALSE,
15:47:49  11  	in_transaction_type_code IN TRANSACTION.TRANSACTION_TYPE_CODE%TYPE DEFAULT NULL
15:47:49  12  ) AS
15:47:49  13  -- VARIABLES
15:47:49  14  var_transaction_id TRANSACTION.ID%TYPE;
15:47:49  15  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:49  16  var_date DATE := SYSDATE;
15:47:49  17  BEGIN
15:47:49  18  	IF in_transaction_id IS NULL THEN
15:47:49  19  	  SELECT
15:47:49  20  	    TRN_ID_SEQ.nextVal into var_transaction_id
15:47:49  21  	  FROM DUAL;
15:47:49  22  	ELSE
15:47:49  23  	  var_transaction_id := in_transaction_id;
15:47:49  24  	END IF;
15:47:49  25  	INSERT INTO
15:47:49  26  	  TRANSACTION (
15:47:49  27  	    ID,
15:47:49  28  	    TRANSACTION_STATUS_ID,
15:47:49  29  	    TRANSACTION_AMOUNT,
15:47:49  30  	    CREATE_DATE,
15:47:49  31  	    CREATED_BY,
15:47:49  32  	    UPDATE_DATE,
15:47:49  33  	    UPDATED_BY,
15:47:49  34  	    ORDER_ID,
15:47:49  35  	    IS_REFUND,
15:47:49  36  	    TRANSACTION_TYPE_CODE
15:47:49  37  	  ) VALUES (
15:47:49  38  	    var_transaction_id,
15:47:49  39  	    in_transaction_status_id,
15:47:49  40  	    in_transaction_amount,
15:47:49  41  	    var_date,
15:47:49  42  	    in_created_by,
15:47:49  43  	    var_date,
15:47:49  44  	    in_created_by,
15:47:49  45  	    in_order_id,
15:47:49  46  	    in_is_refund,
15:47:49  47  	    in_transaction_type_code
15:47:49  48  	  );
15:47:49  49  
15:47:49  50  	out_transaction_id := var_transaction_id;
15:47:49  51  END CREATE_TRANSACTION;
15:47:49  52  
15:47:49  53  /*******************************************************************/
15:47:49  54  
15:47:49  55  PROCEDURE UPDATE_TRANSACTION (
15:47:49  56  	in_transaction_id	 IN TRANSACTION.ID%TYPE,
15:47:49  57  	in_transaction_status_id IN TRANSACTION.TRANSACTION_STATUS_ID%TYPE DEFAULT NULL,
15:47:49  58  	in_transaction_amount	 IN TRANSACTION.TRANSACTION_AMOUNT%TYPE DEFAULT NULL,
15:47:49  59  	in_updated_by		 IN TRANSACTION.CREATED_BY%TYPE,
15:47:49  60  	in_order_id		 IN TRANSACTION.ORDER_ID%TYPE DEFAULT NULL,
15:47:49  61  	in_is_settled		 IN TRANSACTION.IS_SETTLED%TYPE DEFAULT NULL
15:47:49  62  ) AS
15:47:49  63  BEGIN
15:47:49  64  	-- Create history
15:47:49  65  	PROCS_HISTORY_V22.CREATE_TRANSACTION_HISTORY(
15:47:49  66  	  in_transaction_id	       => in_transaction_id,
15:47:49  67  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49  68  	);
15:47:49  69  	UPDATE
15:47:49  70  	  TRANSACTION
15:47:49  71  	SET
15:47:49  72  	  TRANSACTION_STATUS_ID = NVL(in_transaction_status_id, TRANSACTION_STATUS_ID),
15:47:49  73  	  TRANSACTION_AMOUNT	= NVL(in_transaction_amount, TRANSACTION_AMOUNT),
15:47:49  74  	  UPDATE_DATE		= SYSDATE,
15:47:49  75  	  UPDATED_BY		= in_updated_by,
15:47:49  76  	  ORDER_ID		= NVL(in_order_id, ORDER_ID),
15:47:49  77  	  IS_SETTLED		= NVL(in_is_settled, IS_SETTLED)
15:47:49  78  	WHERE
15:47:49  79  	  ID = in_transaction_id;
15:47:49  80  END UPDATE_TRANSACTION;
15:47:49  81  
15:47:49  82  /*******************************************************************/
15:47:49  83  
15:47:49  84  PROCEDURE READ_TRANSACTION (
15:47:49  85  	in_transaction_id IN TRANSACTION.ID%TYPE,
15:47:49  86  	out_result_set	  OUT SYS_REFCURSOR
15:47:49  87  ) AS
15:47:49  88  BEGIN
15:47:49  89  	OPEN out_result_set FOR
15:47:49  90  	SELECT
15:47:49  91  	  ID,
15:47:49  92  	  TRANSACTION_STATUS_ID,
15:47:49  93  	  TRANSACTION_TYPE_CODE,
15:47:49  94  	  TRANSACTION_AMOUNT,
15:47:49  95  	  CREATE_DATE,
15:47:49  96  	  CREATED_BY,
15:47:49  97  	  UPDATE_DATE,
15:47:49  98  	  UPDATED_BY,
15:47:49  99  	  ORDER_ID,
15:47:49 100  	  IS_REFUND,
15:47:49 101  	  IS_SETTLED
15:47:49 102  	FROM
15:47:49 103  	  TRANSACTION
15:47:49 104  	WHERE
15:47:49 105  	  ID = in_transaction_id;
15:47:49 106  END READ_TRANSACTION;
15:47:49 107  
15:47:49 108  /*******************************************************************/
15:47:49 109  
15:47:49 110  PROCEDURE CREATE_TRANSACTION_ATTEMPT(
15:47:49 111  	inout_transaction_attempt_id IN OUT TRANSACTION_ATTEMPT.ID%TYPE,
15:47:49 112  	in_transaction_id	     IN TRANSACTION_ATTEMPT.TRANSACTION_ID%TYPE,
15:47:49 113  	in_external_status_code      IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE%TYPE DEFAULT NULL,
15:47:49 114  	in_external_status_message   IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE%TYPE DEFAULT NULL,
15:47:49 115  	in_created_by		     IN TRANSACTION_ATTEMPT.CREATED_BY%TYPE,
15:47:49 116  	in_external_transaction_id   IN TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID%TYPE DEFAULT NULL,
15:47:49 117  	in_transaction_start_time    IN TRANSACTION_ATTEMPT.TRANSACTION_START_TIME%TYPE DEFAULT NULL,
15:47:49 118  	in_status_id		     IN TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID%TYPE
15:47:49 119  ) AS
15:47:49 120  BEGIN
15:47:49 121  	IF inout_transaction_attempt_id IS NULL THEN
15:47:49 122  	  SELECT
15:47:49 123  	    TRNA_ID_SEQ.nextVal into inout_transaction_attempt_id
15:47:49 124  	  FROM DUAL;
15:47:49 125  	END IF;
15:47:49 126  	INSERT INTO TRANSACTION_ATTEMPT (
15:47:49 127  	  ID,
15:47:49 128  	  TRANSACTION_ID,
15:47:49 129  	  EXTERNAL_STATUS_CODE,
15:47:49 130  	  EXTERNAL_STATUS_MESSAGE,
15:47:49 131  	  CREATE_DATE,
15:47:49 132  	  CREATED_BY,
15:47:49 133  	  EXTERNAL_TRANSACTION_ID,
15:47:49 134  	  TRANSACTION_START_TIME,
15:47:49 135  	  TRANSACTION_ATTEMPT_STATUS_ID
15:47:49 136  	) VALUES (
15:47:49 137  	  inout_transaction_attempt_id,
15:47:49 138  	  in_transaction_id,
15:47:49 139  	  in_external_status_code,
15:47:49 140  	  in_external_status_message,
15:47:49 141  	  SYSDATE,
15:47:49 142  	  in_created_by,
15:47:49 143  	  in_external_transaction_id,
15:47:49 144  	  in_transaction_start_time,
15:47:49 145  	  in_status_id
15:47:49 146  	);
15:47:49 147  END;
15:47:49 148  
15:47:49 149  /*******************************************************************/
15:47:49 150  
15:47:49 151  PROCEDURE UPDATE_TRANSACTION_ATTEMPT (
15:47:49 152  	in_transaction_attempt_id  IN TRANSACTION_ATTEMPT.ID%TYPE,
15:47:49 153  	in_external_status_code    IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE%TYPE DEFAULT NULL,
15:47:49 154  	in_external_status_message IN TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE%TYPE DEFAULT NULL,
15:47:49 155  	in_external_transaction_id IN TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID%TYPE DEFAULT NULL,
15:47:49 156  	in_transaction_start_time  IN TRANSACTION_ATTEMPT.TRANSACTION_START_TIME%TYPE DEFAULT NULL,
15:47:49 157  	in_status_id		   IN TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID%TYPE
15:47:49 158  ) AS
15:47:49 159  BEGIN
15:47:49 160  	UPDATE
15:47:49 161  	  TRANSACTION_ATTEMPT
15:47:49 162  	SET
15:47:49 163  	  EXTERNAL_STATUS_CODE		= NVL(in_external_status_code, EXTERNAL_STATUS_CODE),
15:47:49 164  	  EXTERNAL_STATUS_MESSAGE	= NVL(in_external_status_message, EXTERNAL_STATUS_MESSAGE),
15:47:49 165  	  EXTERNAL_TRANSACTION_ID	= NVL(in_external_transaction_id, EXTERNAL_TRANSACTION_ID),
15:47:49 166  	  TRANSACTION_START_TIME	= NVL(in_transaction_start_time, TRANSACTION_START_TIME),
15:47:49 167  	  TRANSACTION_ATTEMPT_STATUS_ID = NVL(in_status_id, TRANSACTION_ATTEMPT_STATUS_ID)
15:47:49 168  	WHERE
15:47:49 169  	  ID = in_transaction_attempt_id;
15:47:49 170  END;
15:47:49 171  
15:47:49 172  /*******************************************************************/
15:47:49 173  
15:47:49 174  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
15:47:49 175  /*
15:47:49 176  Throws exceptions:
15:47:49 177  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:49 178  APP_EXCEPTION_CODES_V22.INTRNAL_ERROR
15:47:49 179  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 180  */
15:47:49 181  	in_transaction_id IN TRANSACTION.ID%TYPE,
15:47:49 182  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
15:47:49 183  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
15:47:49 184  ) AS
15:47:49 185  SPROC_NAME CONSTANT VARCHAR2(27) := 'UPDATE_TRANSACTION_ORDER_ID';
15:47:49 186  -- EXCEPTIONS
15:47:49 187  BAD_TRANSACTION_ID EXCEPTION;
15:47:49 188  BEGIN
15:47:49 189  
15:47:49 190  	PROCS_HISTORY_V22.CREATE_TRANSACTION_HISTORY(
15:47:49 191  	  in_transaction_id	       => in_transaction_id,
15:47:49 192  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49 193  	);
15:47:49 194  
15:47:49 195  	UPDATE
15:47:49 196  	  TRANSACTION
15:47:49 197  	SET
15:47:49 198  	  TRANSACTION.ORDER_ID	 = in_order_id,
15:47:49 199  	  TRANSACTION.UPDATED_BY = in_updated_by,
15:47:49 200  	  TRANSACTION.UPDATE_DATE= SYSDATE
15:47:49 201  	WHERE
15:47:49 202  	  TRANSACTION.ID = in_transaction_id
15:47:49 203  	  AND TRANSACTION.ORDER_ID IS NULL;
15:47:49 204  
15:47:49 205  	IF SQL%ROWCOUNT = 0 THEN
15:47:49 206  	  RAISE BAD_TRANSACTION_ID;
15:47:49 207  	END IF;
15:47:49 208  EXCEPTION
15:47:49 209  WHEN BAD_TRANSACTION_ID THEN
15:47:49 210  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 211  	  SPROC_NAME, 'No such transaction');
15:47:49 212  END UPDATE_TRANSACTION_ORDER_ID;
15:47:49 213  
15:47:49 214  END PROCS_TRANSACTION_CRU_V22;
15:47:49 215  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.02
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ADDRESS_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_ADDRESS(
15:47:49   4  /*
15:47:49   5  Throws exceptions:
15:47:49   6  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49   7  */
15:47:49   8  	  out_address_id	OUT NUMBER,
15:47:49   9  	  in_address1		IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
15:47:49  10  	  in_address2		IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
15:47:49  11  	  in_city		IN ADDRESS.CITY%TYPE DEFAULT NULL,
15:47:49  12  	  in_state		IN ADDRESS.STATE%TYPE DEFAULT NULL,
15:47:49  13  	  in_postal_code	IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:49  14  	  in_country		IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
15:47:49  15  	  in_created_by 	IN ADDRESS.CREATED_BY%TYPE
15:47:49  16  ) AS
15:47:49  17  -- VARIABLES
15:47:49  18  SPROC_NAME	 CONSTANT VARCHAR2(14) := 'CREATE_ADDRESS';
15:47:49  19  -- EXCEPTIONS
15:47:49  20  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49  21  BEGIN
15:47:49  22  
15:47:49  23  	CORE_OWNER.PROCS_ADDRESS_CRU_V22.CREATE_ADDRESS(
15:47:49  24  	  out_address_id      => out_address_id,
15:47:49  25  	  in_address_id       => null,
15:47:49  26  	  in_address1	      => in_address1,
15:47:49  27  	  in_address2	      => in_address2,
15:47:49  28  	  in_city	      => in_city,
15:47:49  29  	  in_state	      => in_state,
15:47:49  30  	  in_postal_code      => in_postal_code,
15:47:49  31  	  in_country	      => in_country,
15:47:49  32  	  in_created_by       => in_created_by
15:47:49  33  	);
15:47:49  34  
15:47:49  35  END CREATE_ADDRESS;
15:47:49  36  
15:47:49  37  PROCEDURE UPDATE_ADDRESS(
15:47:49  38  /*
15:47:49  39  Throws exceptions:
15:47:49  40  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49  41  */
15:47:49  42  	  in_address_id 	IN ADDRESS.ID%TYPE,
15:47:49  43  	  in_address1		IN ADDRESS.ADDRESS1%TYPE DEFAULT NULL,
15:47:49  44  	  in_address2		IN ADDRESS.ADDRESS2%TYPE DEFAULT NULL,
15:47:49  45  	  in_city		IN ADDRESS.CITY%TYPE DEFAULT NULL,
15:47:49  46  	  in_state		IN ADDRESS.STATE%TYPE DEFAULT NULL,
15:47:49  47  	  in_postal_code	IN ADDRESS.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:49  48  	  in_country		IN ADDRESS.COUNTRY%TYPE DEFAULT NULL,
15:47:49  49  	  in_updated_by 	IN ADDRESS.UPDATED_BY%TYPE
15:47:49  50  ) AS
15:47:49  51  BEGIN
15:47:49  52  	CORE_OWNER.PROCS_ADDRESS_CRU_V22.UPDATE_ADDRESS(
15:47:49  53  	  in_address_id 	=> in_address_id,
15:47:49  54  	  in_address1		=> in_address1,
15:47:49  55  	  in_address2		=> in_address2,
15:47:49  56  	  in_city		=> in_city,
15:47:49  57  	  in_state		=> in_state,
15:47:49  58  	  in_postal_code	=> in_postal_code,
15:47:49  59  	  in_country		=> in_country,
15:47:49  60  	  in_updated_by 	=> in_updated_by
15:47:49  61  	);
15:47:49  62  END UPDATE_ADDRESS;
15:47:49  63  
15:47:49  64  PROCEDURE GET_ADDRESS (
15:47:49  65  /*
15:47:49  66  Throws exceptions:
15:47:49  67  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49  68  */
15:47:49  69  	  in_id 		IN ADDRESS.ID%TYPE,
15:47:49  70  	  out_result_set	OUT SYS_REFCURSOR
15:47:49  71  ) AS
15:47:49  72  SPROC_NAME CONSTANT VARCHAR2(11) := 'GET_ADDRESS';
15:47:49  73  BEGIN
15:47:49  74  
15:47:49  75  OPEN out_result_set FOR
15:47:49  76  SELECT * FROM ADDRESS WHERE ADDRESS.ID = in_id;
15:47:49  77  
15:47:49  78  END GET_ADDRESS;
15:47:49  79  
15:47:49  80  END PROCS_ADDRESS_V22;
15:47:49  81  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.00
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ADJUSTMENTS_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_INVOICE_ADJUSTMENT (
15:47:49   4  	in_invoice_id		  IN NUMBER,
15:47:49   5  	in_adjustment_reason	  IN VARCHAR2,
15:47:49   6  	in_is_credit		  IN NUMBER,
15:47:49   7  	in_charge_id		  IN NUMBER,
15:47:49   8  	in_business_date	  IN DATE,
15:47:49   9  	in_created_by		  IN VARCHAR2,
15:47:49  10  	out_invoice_adjustment_id OUT NUMBER
15:47:49  11  ) AS
15:47:49  12  SPROC_NAME CONSTANT VARCHAR2(25) := 'CREATE_INVOICE_ADJUSTMENT';
15:47:49  13  -- VARIABLES
15:47:49  14  var_current_date	    DATE := SYSDATE;
15:47:49  15  var_new_entity_id     NUMBER;
15:47:49  16  var_inv_adj_reason_id NUMBER;
15:47:49  17  -- EXCEPTIONS
15:47:49  18  BAD_IN_IS_CREDIT_VALUE EXCEPTION;
15:47:49  19  DAB_ADJUSTMENT_REASON  EXCEPTION;
15:47:49  20  BEGIN
15:47:49  21  
15:47:49  22  	IF in_is_credit != GLOBAL_CONSTANTS_V22.TRUE AND in_is_credit != GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:49  23  	  RAISE BAD_IN_IS_CREDIT_VALUE;
15:47:49  24  	END IF;
15:47:49  25  
15:47:49  26  	BEGIN
15:47:49  27  	  SELECT
15:47:49  28  	    ID into var_inv_adj_reason_id
15:47:49  29  	  FROM
15:47:49  30  	    INVOICE_ADJUSTMENT_REASON
15:47:49  31  	  WHERE
15:47:49  32  	    UPPER(VALUE) = UPPER(in_adjustment_reason);
15:47:49  33  	  EXCEPTION
15:47:49  34  	    WHEN NO_DATA_FOUND THEN
15:47:49  35  	      RAISE DAB_ADJUSTMENT_REASON;
15:47:49  36  	END;
15:47:49  37  
15:47:49  38  	SELECT
15:47:49  39  	  INV_ADJ_ID_SEQ.nextVal into var_new_entity_id
15:47:49  40  	FROM
15:47:49  41  	  DUAL;
15:47:49  42  
15:47:49  43  	INSERT INTO INVOICE_ADJUSTMENT (
15:47:49  44  	  ID,
15:47:49  45  	  INVOICE_ID,
15:47:49  46  	  INVOICE_ADJUSTMENT_REASON_ID,
15:47:49  47  	  IS_CREDIT,
15:47:49  48  	  CHARGE_ID,
15:47:49  49  	  ADJUSTMENT_DATE,
15:47:49  50  	  CREATE_DATE,
15:47:49  51  	  CREATED_BY,
15:47:49  52  	  UPDATE_DATE,
15:47:49  53  	  UPDATED_BY
15:47:49  54  	)
15:47:49  55  	VALUES (
15:47:49  56  	  var_new_entity_id,
15:47:49  57  	  in_invoice_id,
15:47:49  58  	  var_inv_adj_reason_id,
15:47:49  59  	  in_is_credit,
15:47:49  60  	  in_charge_id,
15:47:49  61  	  in_business_date,
15:47:49  62  	  var_current_date,
15:47:49  63  	  in_created_by,
15:47:49  64  	  var_current_date,
15:47:49  65  	  in_created_by
15:47:49  66  	);
15:47:49  67  
15:47:49  68  	out_invoice_adjustment_id := var_new_entity_id;
15:47:49  69  
15:47:49  70  EXCEPTION
15:47:49  71  WHEN BAD_IN_IS_CREDIT_VALUE THEN
15:47:49  72  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:49  73  	  SPROC_NAME, 'Bad in_is_credit value');
15:47:49  74  WHEN DAB_ADJUSTMENT_REASON THEN
15:47:49  75  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:49  76  	  SPROC_NAME, 'Bad adjustment reason');
15:47:49  77  WHEN OTHERS THEN
15:47:49  78  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49  79  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49  80  END CREATE_INVOICE_ADJUSTMENT;
15:47:49  81  
15:47:49  82  /******************************************************************************/
15:47:49  83  
15:47:49  84  PROCEDURE UPDATE_INVOICE_ADJUSTMENT (
15:47:49  85  	  in_invoice_id 	    IN NUMBER,
15:47:49  86  	  in_original_charge_id     IN NUMBER,
15:47:49  87  	  in_charge_id		    IN NUMBER,
15:47:49  88  	  in_updated_by 	    IN VARCHAR2
15:47:49  89  ) AS
15:47:49  90  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_INVOICE_ADJUSTMENT';
15:47:49  91  var_invoice_adjustment_id NUMBER;
15:47:49  92  BEGIN
15:47:49  93  	SELECT
15:47:49  94  	  id into var_invoice_adjustment_id
15:47:49  95  	FROM
15:47:49  96  	  INVOICE_ADJUSTMENT
15:47:49  97  	WHERE INVOICE_ID = in_invoice_id
15:47:49  98  	      AND CHARGE_ID = in_original_charge_id;
15:47:49  99  
15:47:49 100  	--create history
15:47:49 101  	PROCS_HISTORY_V22.CREATE_INVOICE_ADJ_HISTORY(
15:47:49 102  	  in_invoice_adjustment_id    => var_invoice_adjustment_id,
15:47:49 103  	  in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49 104  	);
15:47:49 105  
15:47:49 106  	UPDATE INVOICE_ADJUSTMENT
15:47:49 107  	SET CHARGE_ID = in_charge_id, UPDATE_DATE=sysdate, UPDATED_BY=in_updated_by
15:47:49 108  	WHERE ID = var_invoice_adjustment_id;
15:47:49 109  
15:47:49 110  EXCEPTION
15:47:49 111  WHEN NO_DATA_FOUND THEN
15:47:49 112  	    NULL;
15:47:49 113  END UPDATE_INVOICE_ADJUSTMENT;
15:47:49 114  
15:47:49 115  /******************************************************************************/
15:47:49 116  
15:47:49 117  PROCEDURE CREATE_LINE_ITEM_ADJUSTMENT (
15:47:49 118  	in_line_item_id 	    IN NUMBER,
15:47:49 119  	in_invoice_adjustment_id    IN NUMBER,
15:47:49 120  	in_amount		    IN NUMBER,
15:47:49 121  	in_tax			    IN NUMBER,
15:47:49 122  	in_discount		    IN NUMBER,
15:47:49 123  	in_created_by		    IN VARCHAR2,
15:47:49 124  	out_line_item_adjustment_id OUT NUMBER
15:47:49 125  ) AS
15:47:49 126  SPROC_NAME CONSTANT VARCHAR2(30) := 'CREATE_LINE_ITEM_ADJUSTMENT';
15:47:49 127  -- VARIABLES
15:47:49 128  var_current_date DATE := SYSDATE;
15:47:49 129  var_new_entity_id NUMBER;
15:47:49 130  BEGIN
15:47:49 131  
15:47:49 132  	SELECT
15:47:49 133  	  LI_ADJ_ID_SEQ.nextVal into var_new_entity_id
15:47:49 134  	FROM
15:47:49 135  	  DUAL;
15:47:49 136  
15:47:49 137  	INSERT INTO LINE_ITEM_ADJUSTMENT (
15:47:49 138  	  ID,
15:47:49 139  	  LINE_ITEM_ID,
15:47:49 140  	  INVOICE_ADJUSTMENT_ID,
15:47:49 141  	  AMOUNT,
15:47:49 142  	  TAX,
15:47:49 143  	  DISCOUNT,
15:47:49 144  	  CREATE_DATE,
15:47:49 145  	  CREATED_BY
15:47:49 146  	)
15:47:49 147  	VALUES (
15:47:49 148  	  var_new_entity_id,
15:47:49 149  	  in_line_item_id,
15:47:49 150  	  in_invoice_adjustment_id,
15:47:49 151  	  in_amount,
15:47:49 152  	  in_tax,
15:47:49 153  	  in_discount,
15:47:49 154  	  var_current_date,
15:47:49 155  	  in_created_by
15:47:49 156  	);
15:47:49 157  
15:47:49 158  	out_line_item_adjustment_id := var_new_entity_id;
15:47:49 159  
15:47:49 160  EXCEPTION
15:47:49 161  WHEN OTHERS THEN
15:47:49 162  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 163  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 164  END CREATE_LINE_ITEM_ADJUSTMENT;
15:47:49 165  
15:47:49 166  /******************************************************************************/
15:47:49 167  
15:47:49 168  PROCEDURE CREATE_TAX_ADJUSTMENT (
15:47:49 169  	in_tax_id		   IN NUMBER,
15:47:49 170  	in_line_item_adjustment_id IN NUMBER,
15:47:49 171  	in_amount		   IN NUMBER,
15:47:49 172  	in_created_by		   IN VARCHAR2,
15:47:49 173  	out_tax_adjustment_id	   OUT NUMBER
15:47:49 174  ) AS
15:47:49 175  SPROC_NAME CONSTANT VARCHAR2(30) := 'CREATE_TAX_ADJUSTMENT';
15:47:49 176  -- VARIABLES
15:47:49 177  var_current_date DATE := SYSDATE;
15:47:49 178  var_new_entity_id NUMBER;
15:47:49 179  BEGIN
15:47:49 180  
15:47:49 181  	SELECT
15:47:49 182  	  TAXADJ_ID_SEQ.nextVal into var_new_entity_id
15:47:49 183  	FROM
15:47:49 184  	  DUAL;
15:47:49 185  
15:47:49 186  	INSERT INTO TAX_ADJUSTMENT (
15:47:49 187  	  ID,
15:47:49 188  	  TAX_ID,
15:47:49 189  	  LINE_ITEM_ADJUSTMENT_ID,
15:47:49 190  	  AMOUNT,
15:47:49 191  	  CREATE_DATE,
15:47:49 192  	  CREATED_BY
15:47:49 193  	)
15:47:49 194  	VALUES (
15:47:49 195  	  var_new_entity_id,
15:47:49 196  	  in_tax_id,
15:47:49 197  	  in_line_item_adjustment_id,
15:47:49 198  	  in_amount,
15:47:49 199  	  var_current_date,
15:47:49 200  	  in_created_by
15:47:49 201  	);
15:47:49 202  
15:47:49 203  	out_tax_adjustment_id := var_new_entity_id;
15:47:49 204  
15:47:49 205  EXCEPTION
15:47:49 206  WHEN OTHERS THEN
15:47:49 207  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 208  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 209  END CREATE_TAX_ADJUSTMENT;
15:47:49 210  
15:47:49 211  /******************************************************************************/
15:47:49 212  
15:47:49 213  PROCEDURE CREATE_DISCOUNT_LI_ADJUSTMENT (
15:47:49 214  	in_discount_id		   NUMBER,
15:47:49 215  	in_line_item_id 	   NUMBER,
15:47:49 216  	in_line_item_adjustment_id IN NUMBER,
15:47:49 217  	in_amount		   IN NUMBER,
15:47:49 218  	in_created_by		   IN VARCHAR2,
15:47:49 219  	out_discount_li_id	   OUT NUMBER
15:47:49 220  ) AS
15:47:49 221  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_DISCOUNT_LI_ADJUSTMENT';
15:47:49 222  -- VARIABLES
15:47:49 223  var_current_date DATE := SYSDATE;
15:47:49 224  var_new_entity_id NUMBER;
15:47:49 225  BEGIN
15:47:49 226  
15:47:49 227  	SELECT
15:47:49 228  	  DLIADJ_ID_SEQ.nextVal into var_new_entity_id
15:47:49 229  	FROM
15:47:49 230  	  DUAL;
15:47:49 231  
15:47:49 232  	INSERT INTO DISCOUNT_LINEITEM_ADJUSTMENT (
15:47:49 233  	  ID,
15:47:49 234  	  DISCOUNT_ID,
15:47:49 235  	  LINE_ITEM_ID,
15:47:49 236  	  LINE_ITEM_ADJUSTMENT_ID,
15:47:49 237  	  AMOUNT,
15:47:49 238  	  CREATE_DATE,
15:47:49 239  	  CREATED_BY
15:47:49 240  	)
15:47:49 241  	VALUES (
15:47:49 242  	  var_new_entity_id,
15:47:49 243  	  in_discount_id,
15:47:49 244  	  in_line_item_id,
15:47:49 245  	  in_line_item_adjustment_id,
15:47:49 246  	  in_amount,
15:47:49 247  	  var_current_date,
15:47:49 248  	  in_created_by
15:47:49 249  	);
15:47:49 250  
15:47:49 251  	out_discount_li_id := var_new_entity_id;
15:47:49 252  
15:47:49 253  EXCEPTION
15:47:49 254  WHEN OTHERS THEN
15:47:49 255  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 256  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 257  END CREATE_DISCOUNT_LI_ADJUSTMENT;
15:47:49 258  
15:47:49 259  END PROCS_ADJUSTMENTS_V22;
15:47:49 260  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ADX_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE GET_SUB_ADX_INFO (
15:47:49   4  /*
15:47:49   5  Throws exceptions:
15:47:49   6  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49   7  */
15:47:49   8  	out_result_set	    OUT SYS_REFCURSOR,
15:47:49   9  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE
15:47:49  10  ) AS
15:47:49  11  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_SUB_ADX_INFO';
15:47:49  12  BEGIN
15:47:49  13  OPEN out_result_set FOR
15:47:49  14  SELECT /*+ FIRST_ROWS(5) */
15:47:49  15  	s.offer_chain_id,
15:47:49  16  	s.create_date,
15:47:49  17  	decode(s.subscription_status_id, 1, 'a', 'c') status,
15:47:49  18  	ocmd.value,
15:47:49  19  	a.group_id,
15:47:49  20  	s.id subscription_id
15:47:49  21  FROM
15:47:49  22  	account a,
15:47:49  23  	subscription s,
15:47:49  24  	offer_chain_meta_data ocmd,
15:47:49  25  	group_account g,
15:47:49  26  	subscription_share ss,
15:47:49  27  	account a2
15:47:49  28  WHERE
15:47:49  29  	s.account_id = a.id and
15:47:49  30  	s.offer_chain_id = ocmd.offer_chain_id and
15:47:49  31  	g.id = ss.group_account_id and
15:47:49  32  	ss.borrower_account_id = a2.id and
15:47:49  33  	s.id = g.subscription_id and
15:47:49  34  	ocmd.name = 'ADX_BUNDLE' and
15:47:49  35  	a2.group_id = in_group_id and
15:47:49  36  	rownum < 5
15:47:49  37  union all
15:47:49  38  SELECT /*+ FIRST_ROWS(5) */
15:47:49  39  	s.offer_chain_id,
15:47:49  40  	s.create_date,
15:47:49  41  	decode(s.subscription_status_id, 1, 'a', 'c') status,
15:47:49  42  	ocmd.value,
15:47:49  43  	a.group_id,
15:47:49  44  	s.id subscription_id
15:47:49  45  FROM
15:47:49  46  	account a,
15:47:49  47  	subscription s,
15:47:49  48  	offer_chain_meta_data ocmd
15:47:49  49  WHERE
15:47:49  50  	s.account_id = a.id and
15:47:49  51  	s.offer_chain_id = ocmd.offer_chain_id and
15:47:49  52  	ocmd.name = 'ADX_BUNDLE' and
15:47:49  53  	a.group_id = in_group_id and
15:47:49  54  	rownum < 5
15:47:49  55  ;
15:47:49  56  
15:47:49  57  END GET_SUB_ADX_INFO;
15:47:49  58  
15:47:49  59  END PROCS_ADX_V22;
15:47:49  60  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.01
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_AMAZON_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE AASR_PURCHASE_TOKEN_USED(
15:47:49   4  	in_purchase_token IN AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE,
15:47:49   5  	out_data	  OUT NUMBER
15:47:49   6  ) AS
15:47:49   7  SPROC_NAME CONSTANT VARCHAR2(32) := 'AASR_PURCHASE_TOKEN_USED';
15:47:49   8  BEGIN
15:47:49   9  	SELECT
15:47:49  10  	  COUNT(1)
15:47:49  11  	INTO OUT_DATA
15:47:49  12  	FROM AMAZON_APPSTORE_RECEIPT
15:47:49  13  	WHERE PURCHASE_TOKEN = in_purchase_token;
15:47:49  14  	EXCEPTION
15:47:49  15  	WHEN NO_DATA_FOUND THEN
15:47:49  16  	out_data := 0;
15:47:49  17  END;
15:47:49  18  
15:47:49  19  PROCEDURE UPDATE_AASR_LAST_CHECK_DATE(
15:47:49  20  	in_id	      IN AMAZON_APPSTORE_RECEIPT.ID%TYPE,
15:47:49  21  	in_updated_by IN AMAZON_APPSTORE_RECEIPT.UPDATED_BY%TYPE
15:47:49  22  ) AS
15:47:49  23  BEGIN
15:47:49  24  	CORE_OWNER.PROCS_AMAZON_CRU_V22.UPDATE_AMAZON_APPSTORE_RECEIPT(
15:47:49  25  	  in_id 	     => in_id,
15:47:49  26  	  in_updated_by      => in_updated_by,
15:47:49  27  	  in_last_check_date => SYSDATE
15:47:49  28  	);
15:47:49  29  END UPDATE_AASR_LAST_CHECK_DATE;
15:47:49  30  
15:47:49  31  PROCEDURE EXPIRED_AASR_SUB_IDS(
15:47:49  32  	out_data   OUT SYS_REFCURSOR
15:47:49  33  ) AS
15:47:49  34  SPROC_NAME CONSTANT VARCHAR2(32) := 'EXPIRED_AASR_SUB_IDS';
15:47:49  35  BEGIN
15:47:49  36  	OPEN out_data FOR
15:47:49  37  	SELECT
15:47:49  38  	  *
15:47:49  39  	FROM
15:47:49  40  	  (
15:47:49  41  	    SELECT
15:47:49  42  	      AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID
15:47:49  43  	    FROM AMAZON_APPSTORE_RECEIPT
15:47:49  44  	      INNER JOIN SUBSCRIPTION ON SUBSCRIPTION.ID = AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID
15:47:49  45  	    WHERE
15:47:49  46  	      AMAZON_APPSTORE_RECEIPT.END_DATE <= SYSDATE AND
15:47:49  47  	      SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:49  48  	    ORDER BY dbms_random.value
15:47:49  49  	  )
15:47:49  50  	WHERE
15:47:49  51  	  ROWNUM <= 1000;
15:47:49  52  END EXPIRED_AASR_SUB_IDS;
15:47:49  53  
15:47:49  54  PROCEDURE UPDATE_AASR_PURCHASE_TOKEN(
15:47:49  55  	in_id		  IN AMAZON_APPSTORE_RECEIPT.ID%TYPE,
15:47:49  56  	in_purchase_token IN AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE,
15:47:49  57  	in_updated_by	  IN AMAZON_APPSTORE_RECEIPT.UPDATED_BY%TYPE
15:47:49  58  ) AS
15:47:49  59  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_AASR_PURCHASE_TOKEN';
15:47:49  60  BEGIN
15:47:49  61  	  CORE_OWNER.PROCS_AMAZON_CRU_V22.UPDATE_AMAZON_APPSTORE_RECEIPT(
15:47:49  62  	      in_id		  => in_id,
15:47:49  63  	      in_updated_by	  => in_updated_by,
15:47:49  64  	      in_purchase_token   => in_purchase_token
15:47:49  65  	  );
15:47:49  66  END UPDATE_AASR_PURCHASE_TOKEN;
15:47:49  67  
15:47:49  68  PROCEDURE UPDATE_AASR_END_DATE(
15:47:49  69  	in_id	      IN AMAZON_APPSTORE_RECEIPT.ID%TYPE,
15:47:49  70  	in_end_date   IN AMAZON_APPSTORE_RECEIPT.END_DATE%TYPE,
15:47:49  71  	in_updated_by IN AMAZON_APPSTORE_RECEIPT.UPDATED_BY%TYPE
15:47:49  72  ) AS
15:47:49  73  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_AASR_END_DATE';
15:47:49  74  BEGIN
15:47:49  75  	CORE_OWNER.PROCS_AMAZON_CRU_V22.UPDATE_AMAZON_APPSTORE_RECEIPT(
15:47:49  76  	    in_id	  => in_id,
15:47:49  77  	    in_updated_by => in_updated_by,
15:47:49  78  	    in_end_date   => in_end_date
15:47:49  79  	);
15:47:49  80  END UPDATE_AASR_END_DATE;
15:47:49  81  
15:47:49  82  PROCEDURE AASR_RECEIPTS_WITH_ACTIVE_SUBS(
15:47:49  83  	out_data   OUT SYS_REFCURSOR,
15:47:49  84  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:49  85  ) AS
15:47:49  86  SPROC_NAME CONSTANT VARCHAR2(32) := 'AASR_RECEIPTS_WITH_ACTIVE_SUBS';
15:47:49  87  BEGIN
15:47:49  88  	OPEN out_data FOR
15:47:49  89  	SELECT
15:47:49  90  	  *
15:47:49  91  	FROM (
15:47:49  92  	  SELECT
15:47:49  93  	    AMAZON_APPSTORE_RECEIPT.ID,
15:47:49  94  	    AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID,
15:47:49  95  	    AMAZON_APPSTORE_RECEIPT.USER_ID,
15:47:49  96  	    AMAZON_APPSTORE_RECEIPT.ITEM_TYPE,
15:47:49  97  	    AMAZON_APPSTORE_RECEIPT.START_DATE,
15:47:49  98  	    AMAZON_APPSTORE_RECEIPT.END_DATE,
15:47:49  99  	    AMAZON_APPSTORE_RECEIPT.SKU,
15:47:49 100  	    AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN,
15:47:49 101  	    AMAZON_APPSTORE_RECEIPT.CREATE_DATE,
15:47:49 102  	    AMAZON_APPSTORE_RECEIPT.CREATED_BY,
15:47:49 103  	    AMAZON_APPSTORE_RECEIPT.UPDATE_DATE,
15:47:49 104  	    AMAZON_APPSTORE_RECEIPT.UPDATED_BY,
15:47:49 105  	    AMAZON_APPSTORE_RECEIPT.LAST_CHECK_DATE
15:47:49 106  	  FROM AMAZON_APPSTORE_RECEIPT
15:47:49 107  	    INNER JOIN SUBSCRIPTION ON SUBSCRIPTION.ID = AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID
15:47:49 108  	  WHERE
15:47:49 109  	    SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:49 110  	    AND NOT EXISTS
15:47:49 111  	    (
15:47:49 112  		SELECT
15:47:49 113  		  NULL
15:47:49 114  		FROM PROCESS_RETRY_THROTTLE
15:47:49 115  		WHERE PROCESS_NAME = in_process_name
15:47:49 116  		      AND GENERIC_ID = AMAZON_APPSTORE_RECEIPT.ID
15:47:49 117  	    )
15:47:49 118  	  ORDER BY dbms_random.value
15:47:49 119  	)
15:47:49 120  	WHERE
15:47:49 121  	  ROWNUM <= 1000;
15:47:49 122  END AASR_RECEIPTS_WITH_ACTIVE_SUBS;
15:47:49 123  
15:47:49 124  PROCEDURE ADD_AMAZON_APPSTORE_RECEIPT(
15:47:49 125  	in_subscription_id IN AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:49 126  	in_user_id	   IN AMAZON_APPSTORE_RECEIPT.USER_ID%TYPE,
15:47:49 127  	in_item_type	   IN AMAZON_APPSTORE_RECEIPT.ITEM_TYPE%TYPE,
15:47:49 128  	in_start_date	   IN AMAZON_APPSTORE_RECEIPT.START_DATE%TYPE,
15:47:49 129  	in_end_date	   IN AMAZON_APPSTORE_RECEIPT.END_DATE%TYPE DEFAULT NULL,
15:47:49 130  	in_sku		   IN AMAZON_APPSTORE_RECEIPT.SKU%TYPE,
15:47:49 131  	in_purchase_token  IN AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE,
15:47:49 132  	in_created_by	   IN AMAZON_APPSTORE_RECEIPT.CREATED_BY%TYPE
15:47:49 133  ) AS
15:47:49 134  SPROC_NAME	 CONSTANT VARCHAR2(32) := 'ADD_AMAZON_APPSTORE_RECEIPT';
15:47:49 135  BEGIN
15:47:49 136  	CORE_OWNER.PROCS_AMAZON_CRU_V22.ADD_AMAZON_APPSTORE_RECEIPT(
15:47:49 137  	    in_subscription_id =>  in_subscription_id,
15:47:49 138  	    in_user_id	       =>  in_user_id,
15:47:49 139  	    in_item_type       =>  in_item_type,
15:47:49 140  	    in_start_date      =>  in_start_date,
15:47:49 141  	    in_end_date        =>  in_end_date,
15:47:49 142  	    in_sku	       =>  in_sku,
15:47:49 143  	    in_purchase_token  =>  in_purchase_token,
15:47:49 144  	    in_created_by      =>  in_created_by
15:47:49 145  	);
15:47:49 146  END ADD_AMAZON_APPSTORE_RECEIPT;
15:47:49 147  
15:47:49 148  PROCEDURE AMAZON_APPSTORE_RECEIPTS(
15:47:49 149  	in_user_id IN AMAZON_APPSTORE_RECEIPT.USER_ID%TYPE,
15:47:49 150  	in_sku	   IN AMAZON_APPSTORE_RECEIPT.SKU%TYPE,
15:47:49 151  	out_data   OUT SYS_REFCURSOR
15:47:49 152  ) AS
15:47:49 153  SPROC_NAME CONSTANT VARCHAR2(32) := 'AMAZON_APPSTORE_RECEIPTS';
15:47:49 154  BEGIN
15:47:49 155  	OPEN out_data FOR
15:47:49 156  	SELECT
15:47:49 157  	  AMAZON_APPSTORE_RECEIPT.ID,
15:47:49 158  	  AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID,
15:47:49 159  	  AMAZON_APPSTORE_RECEIPT.USER_ID,
15:47:49 160  	  AMAZON_APPSTORE_RECEIPT.ITEM_TYPE,
15:47:49 161  	  AMAZON_APPSTORE_RECEIPT.START_DATE,
15:47:49 162  	  AMAZON_APPSTORE_RECEIPT.END_DATE,
15:47:49 163  	  AMAZON_APPSTORE_RECEIPT.SKU,
15:47:49 164  	  AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN,
15:47:49 165  	  AMAZON_APPSTORE_RECEIPT.CREATE_DATE,
15:47:49 166  	  AMAZON_APPSTORE_RECEIPT.CREATED_BY,
15:47:49 167  	  AMAZON_APPSTORE_RECEIPT.UPDATE_DATE,
15:47:49 168  	  AMAZON_APPSTORE_RECEIPT.UPDATED_BY,
15:47:49 169  	  AMAZON_APPSTORE_RECEIPT.LAST_CHECK_DATE
15:47:49 170  	FROM AMAZON_APPSTORE_RECEIPT
15:47:49 171  	  INNER JOIN SUBSCRIPTION ON SUBSCRIPTION.ID = AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID
15:47:49 172  	WHERE AMAZON_APPSTORE_RECEIPT.USER_ID = in_user_id AND
15:47:49 173  	      AMAZON_APPSTORE_RECEIPT.SKU = in_sku AND
15:47:49 174  	      SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE;
15:47:49 175  END AMAZON_APPSTORE_RECEIPTS;
15:47:49 176  
15:47:49 177  	PROCEDURE CREATE_AMAZON_SUB(
15:47:49 178  	  out_id	      OUT NUMBER,
15:47:49 179  	  in_subscription_id  IN AMAZON_SUB.SUBSCRIPTION_ID%TYPE,
15:47:49 180  	  in_amazon_id	      IN AMAZON_SUB.AMAZON_ID%TYPE,
15:47:49 181  	  in_created_by       IN AMAZON_SUB.CREATED_BY%TYPE
15:47:49 182  ) AS
15:47:49 183  -- VARIABLES
15:47:49 184  SPROC_NAME	 CONSTANT VARCHAR2(32) := 'CREATE_AMAZON_SUB';
15:47:49 185  -- EXCEPTIONS
15:47:49 186  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49 187  BEGIN
15:47:49 188  
15:47:49 189  	CORE_OWNER.PROCS_AMAZON_CRU_V22.CREATE_AMAZON_SUB(
15:47:49 190  	  out_id	      =>  out_id,
15:47:49 191  	  in_subscription_id  =>  in_subscription_id,
15:47:49 192  	  in_amazon_id	      =>  in_amazon_id,
15:47:49 193  	  in_created_by       =>  in_created_by
15:47:49 194  	);
15:47:49 195  
15:47:49 196  END CREATE_AMAZON_SUB;
15:47:49 197  
15:47:49 198  PROCEDURE GET_ACTIVE_SUB_IDS (
15:47:49 199  	out_result_set	    OUT SYS_REFCURSOR,
15:47:49 200  	in_amazon_id	IN AMAZON_SUB.AMAZON_ID%TYPE
15:47:49 201  ) AS
15:47:49 202  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ACTIVE_SUB_IDS';
15:47:49 203  BEGIN
15:47:49 204  OPEN out_result_set FOR
15:47:49 205  SELECT s.id
15:47:49 206  FROM subscription s, amazon_sub am
15:47:49 207  WHERE
15:47:49 208  	s.id = am.subscription_id
15:47:49 209  	and s.subscription_status_id = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:49 210  	and am.amazon_id = in_amazon_id
15:47:49 211  ;
15:47:49 212  
15:47:49 213  END GET_ACTIVE_SUB_IDS;
15:47:49 214  
15:47:49 215  PROCEDURE GET_ACTIVE_GROUP_IDS (
15:47:49 216  	out_result_set	    OUT SYS_REFCURSOR,
15:47:49 217  	in_amazon_id	IN AMAZON_SUB.AMAZON_ID%TYPE
15:47:49 218  ) AS
15:47:49 219  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ACTIVE_GROUP_IDS';
15:47:49 220  BEGIN
15:47:49 221  OPEN out_result_set FOR
15:47:49 222  SELECT distinct a.group_id id
15:47:49 223  FROM subscription s, amazon_sub am, account a
15:47:49 224  WHERE
15:47:49 225  	s.id = am.subscription_id
15:47:49 226  	and a.id = s.account_id
15:47:49 227  	and s.subscription_status_id = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:49 228  	and am.amazon_id = in_amazon_id
15:47:49 229  ;
15:47:49 230  
15:47:49 231  END GET_ACTIVE_GROUP_IDS;
15:47:49 232  
15:47:49 233  END PROCS_AMAZON_V22;
15:47:49 234  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_CUPY" AS
15:47:49   2  
15:47:49   3  	/****************************************************************************/
15:47:49   4  
15:47:49   5  	PROCEDURE POPULATE_REQUEST_INFO(
15:47:49   6  	  in_hours_prior    IN	NUMBER,
15:47:49   7  	  in_filename	    IN	CC_REQUEST_FILE.FILE_NAME%TYPE,
15:47:49   8  	  in_creator	    IN	CC_REQUEST_FILE.UPDATED_BY%TYPE
15:47:49   9  	) AS
15:47:49  10  	SPROC_NAME CONSTANT VARCHAR2(32) := 'POPULATE_REQUEST_INFO';
15:47:49  11  	var_start_date	    DATE := SYSDATE;
15:47:49  12  	var_end_date	    DATE := var_start_date + (in_hours_prior/24);
15:47:49  13  	var_request_file_id NUMBER := 0;
15:47:49  14  	var_license_count   NUMBER := 0;
15:47:49  15  	var_cc_update_count NUMBER := 0;
15:47:49  16  	BEGIN
15:47:49  17  	    SELECT CC_REQUEST_FILE_ID_SEQ.NEXTVAL INTO var_request_file_id  FROM DUAL;
15:47:49  18  	    INSERT INTO CC_REQUEST_FILE (ID,
15:47:49  19  					 FILE_NAME,
15:47:49  20  					 CC_REQUEST_FILE_STATUS,
15:47:49  21  					 CREATE_DATE,
15:47:49  22  					 CREATED_BY,
15:47:49  23  					 UPDATE_DATE,
15:47:49  24  					 UPDATED_BY)
15:47:49  25  					 VALUES (
15:47:49  26  					 var_request_file_id,
15:47:49  27  					 in_filename,
15:47:49  28  					 'NOT_CREATED',
15:47:49  29  					 var_start_date,
15:47:49  30  					 in_creator,
15:47:49  31  					 var_start_date,
15:47:49  32  					 in_creator);
15:47:49  33  
15:47:49  34  	   FOR record IN (SELECT
15:47:49  35  			    l.ID LICENSE_ID, cc.ID CREDIT_CARD_ID
15:47:49  36  			  FROM
15:47:49  37  			    LICENSE l INNER JOIN SUBSCRIPTION s ON L.SUBSCRIPTION_ID = s.ID
15:47:49  38  				      INNER JOIN CREDIT_CARD cc ON S.INSTRUMENT_ID   = cc.ID
15:47:49  39  			  WHERE
15:47:49  40  			    s.INSTRUMENT_TYPE_ID	 = 1
15:47:49  41  			    AND cc.CREDIT_CARD_STATUS_ID = 1
15:47:49  42  			    AND s.SUBSCRIPTION_STATUS_ID = 1
15:47:49  43  			    AND l.LICENSE_STATUS_ID	 = 2
15:47:49  44  			    AND cc.CREDIT_CARD_TYPE_ID IN (2,3)
15:47:49  45  			    AND l.END_DATE BETWEEN var_start_date AND var_end_date
15:47:49  46  			    AND l.ID NOT IN (SELECT LICENSE_ID FROM CC_UPDATE))
15:47:49  47  	   LOOP
15:47:49  48  	     var_license_count := 0;
15:47:49  49  	     SELECT COUNT(1) INTO  var_license_count FROM CC_UPDATE WHERE LICENSE_ID = record.LICENSE_ID;
15:47:49  50  
15:47:49  51  	     IF var_license_count = 0 THEN
15:47:49  52  		INSERT INTO CC_UPDATE (ID,
15:47:49  53  				       CREDIT_CARD_ID,
15:47:49  54  				       LICENSE_ID,
15:47:49  55  				       CC_UPDATE_STATUS,
15:47:49  56  				       CC_REQUEST_FILE_ID,
15:47:49  57  				       CREATE_DATE,
15:47:49  58  				       UPDATE_DATE,
15:47:49  59  				       CREATED_BY,
15:47:49  60  				       UPDATED_BY
15:47:49  61  				       ) VALUES (
15:47:49  62  				       CC_UPDATE_SEQ.NEXTVAL,
15:47:49  63  				       record.CREDIT_CARD_ID,
15:47:49  64  				       record.LICENSE_ID,
15:47:49  65  				       'NOT_ADDED_TO_FILE',
15:47:49  66  				       var_request_file_id,
15:47:49  67  				       var_start_date,
15:47:49  68  				       var_start_date,
15:47:49  69  				       in_creator,
15:47:49  70  				       in_creator
15:47:49  71  				       );
15:47:49  72  	     END IF;
15:47:49  73  	   END LOOP;
15:47:49  74  
15:47:49  75  	   SELECT COUNT(1) INTO var_cc_update_count
15:47:49  76  	   FROM CC_UPDATE
15:47:49  77  	   WHERE CC_REQUEST_FILE_ID = var_request_file_id;
15:47:49  78  	   IF var_cc_update_count <= 0 THEN
15:47:49  79  	     UPDATE CC_REQUEST_FILE
15:47:49  80  	     SET CC_REQUEST_FILE_STATUS = 'EMPTY'
15:47:49  81  	     WHERE ID = var_request_file_id;
15:47:49  82  	   END IF;
15:47:49  83  
15:47:49  84  	END POPULATE_REQUEST_INFO;
15:47:49  85  
15:47:49  86  	/****************************************************************************/
15:47:49  87  
15:47:49  88  	PROCEDURE CHASE_PROFILE_BY_REQ_FILE_ID(
15:47:49  89  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
15:47:49  90  	  in_start	     IN NUMBER,
15:47:49  91  	  in_end	     IN NUMBER,
15:47:49  92  	  out_result_set     OUT SYS_REFCURSOR
15:47:49  93  	) AS
15:47:49  94  	SPROC_NAME CONSTANT VARCHAR2(32) := 'CHASE_PROFILE_BY_REQ_FILE_ID';
15:47:49  95  	var_range_diff	    NUMBER := 0;
15:47:49  96  	var_upper_bond_diff NUMBER := 0;
15:47:49  97  	var_l_start	    NUMBER := 0;
15:47:49  98  	var_l_end	    NUMBER := 0;
15:47:49  99  	BEGIN
15:47:49 100  	  --Normalize the end points [START]
15:47:49 101  	  IF (in_start IS NULL OR in_start < 0) Then
15:47:49 102  	    var_l_start := 0;
15:47:49 103  	  ELSE
15:47:49 104  	    var_l_start := in_start;
15:47:49 105  	  END IF;
15:47:49 106  
15:47:49 107  	  IF (in_end IS NULL) Then
15:47:49 108  	    var_l_end := 500;
15:47:49 109  	  ELSE
15:47:49 110  	    var_l_end := in_end;
15:47:49 111  	  END IF;
15:47:49 112  
15:47:49 113  	  var_l_start := var_l_start + 1;
15:47:49 114  	  var_l_end   := var_l_end   + 1;
15:47:49 115  
15:47:49 116  	  var_range_diff  := var_l_end - var_l_start;
15:47:49 117  	  var_upper_bond_diff :=  var_range_diff - 1000;
15:47:49 118  
15:47:49 119  	  IF (var_upper_bond_diff > 0) Then
15:47:49 120  	    var_l_end := var_l_end - var_upper_bond_diff;
15:47:49 121  	  END IF;
15:47:49 122  	  --Normalize the end points [END]
15:47:49 123  
15:47:49 124  	  OPEN out_result_set FOR
15:47:49 125  	    SELECT CHASE_PROFILE_ID FROM
15:47:49 126  	      (SELECT rownum rnum, q.* FROM
15:47:49 127  		 (SELECT
15:47:49 128  		    cc.CHASE_PROFILE_ID
15:47:49 129  		  FROM
15:47:49 130  		    CREDIT_CARD cc,
15:47:49 131  		    CC_UPDATE ccu
15:47:49 132  		  WHERE
15:47:49 133  		    ccu.CC_REQUEST_FILE_ID = in_request_file_id
15:47:49 134  		    AND ccu.CREDIT_CARD_ID = cc.id
15:47:49 135  		) Q
15:47:49 136  	      WHERE rownum <= var_l_end)
15:47:49 137  	    WHERE rnum >= var_l_Start;
15:47:49 138  	END CHASE_PROFILE_BY_REQ_FILE_ID;
15:47:49 139  
15:47:49 140  	/****************************************************************************/
15:47:49 141  
15:47:49 142  	PROCEDURE UPDATE_REQUEST_FILE_STATUS(
15:47:49 143  	  in_request_file_id IN CC_REQUEST_FILE.ID%TYPE,
15:47:49 144  	  in_status	     IN CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
15:47:49 145  	  in_updated_by      IN CC_REQUEST_FILE.UPDATED_BY%TYPE
15:47:49 146  	)AS
15:47:49 147  	SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_REQUEST_FILE_STATUS';
15:47:49 148  	BEGIN
15:47:49 149  	  UPDATE CC_REQUEST_FILE
15:47:49 150  	  SET CC_REQUEST_FILE_STATUS = in_status,
15:47:49 151  	      UPDATE_DATE = SYSDATE,
15:47:49 152  	      UPDATED_BY  = in_updated_by
15:47:49 153  	  WHERE ID = in_request_file_id;
15:47:49 154  	END UPDATE_REQUEST_FILE_STATUS;
15:47:49 155  
15:47:49 156  	/****************************************************************************/
15:47:49 157  
15:47:49 158  	PROCEDURE UPDATE_CC_REQUEST_STATUS(
15:47:49 159  	  in_request_file_id IN CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
15:47:49 160  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
15:47:49 161  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
15:47:49 162  	) AS
15:47:49 163  	SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_CC_REQUEST_STATUS';
15:47:49 164  	BEGIN
15:47:49 165  	  UPDATE CC_UPDATE
15:47:49 166  	  SET CC_UPDATE_STATUS = in_status,
15:47:49 167  	      UPDATE_DATE      = SYSDATE,
15:47:49 168  	      UPDATED_BY       = in_updated_by
15:47:49 169  	  WHERE
15:47:49 170  	    CC_REQUEST_FILE_ID = in_request_file_id;
15:47:49 171  	END UPDATE_CC_REQUEST_STATUS;
15:47:49 172  
15:47:49 173  	/****************************************************************************/
15:47:49 174  
15:47:49 175  	PROCEDURE REQUEST_FILES_BY_STATUS (
15:47:49 176  	  in_status	      IN  CC_REQUEST_FILE.CC_REQUEST_FILE_STATUS%TYPE,
15:47:49 177  	  in_older_than_hours IN  NUMBER DEFAULT -288,
15:47:49 178  	  out_request_files   OUT SYS_REFCURSOR
15:47:49 179  	) AS
15:47:49 180  	var_older_than_hours NUMBER := in_older_than_hours;
15:47:49 181  	BEGIN
15:47:49 182  	 IF (var_older_than_hours IS NULL) THEN
15:47:49 183  	   var_older_than_hours := -288;
15:47:49 184  	 END IF;
15:47:49 185  
15:47:49 186  	 OPEN out_request_files FOR
15:47:49 187  	 SELECT
15:47:49 188  	   ID,
15:47:49 189  	   FILE_NAME
15:47:49 190  	 FROM
15:47:49 191  	   CC_REQUEST_FILE
15:47:49 192  	 WHERE
15:47:49 193  	   CC_REQUEST_FILE_STATUS = in_status
15:47:49 194  	 AND
15:47:49 195  	   UPDATE_DATE < SYSDATE - (var_older_than_hours / 24);
15:47:49 196  	END REQUEST_FILES_BY_STATUS;
15:47:49 197  
15:47:49 198  	/****************************************************************************/
15:47:49 199  
15:47:49 200  	PROCEDURE COUNT_BY_REQUEST_FILE_ID (
15:47:49 201  	  in_id     IN	CC_UPDATE.CC_REQUEST_FILE_ID%TYPE,
15:47:49 202  	  out_count OUT NUMBER
15:47:49 203  	) AS
15:47:49 204  	SPROC_NAME CONSTANT VARCHAR2(32) := 'COUNT_BY_REQUEST_FILE_ID';
15:47:49 205  	BEGIN
15:47:49 206  	  SELECT COUNT(1) INTO out_count
15:47:49 207  	  FROM CC_UPDATE
15:47:49 208  	  WHERE CC_REQUEST_FILE_ID = in_id;
15:47:49 209  	END COUNT_BY_REQUEST_FILE_ID;
15:47:49 210  
15:47:49 211  	/****************************************************************************/
15:47:49 212  
15:47:49 213  	PROCEDURE GET_CREDIT_CARD_INFO (
15:47:49 214  	  in_chase_profile_id  IN  CREDIT_CARD.CHASE_PROFILE_ID%TYPE,
15:47:49 215  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE DEFAULT NULL,
15:47:49 216  	  out_card_info        OUT SYS_REFCURSOR
15:47:49 217  	) AS
15:47:49 218  	BEGIN
15:47:49 219  	  OPEN out_card_info FOR
15:47:49 220  	  SELECT
15:47:49 221  	    u.LICENSE_ID,
15:47:49 222  	    cc.ACCOUNT_ID,
15:47:49 223  	    cc.ID CREDIT_CARD_ID,
15:47:49 224  	    cc.CHASE_PROFILE_ID,
15:47:49 225  	    cc.LAST_FOUR_CC CREDIT_CARD_LAST_DIGITS,
15:47:49 226  	    cc.UPDATE_DATE CREDIT_CARD_UPDATE_DATE,
15:47:49 227  	    cc.UPDATED_BY CREDIT_CARD_UPDATED_BY,
15:47:49 228  	    cc.EXPIRATION_DATE CREDIT_CARD_EXPIRATION_DATE,
15:47:49 229  	    u.ID CC_UPDATE_ID,
15:47:49 230  	    DECODE(cc.CREDIT_CARD_STATUS_ID, 1, 1, 0) ACTIVE
15:47:49 231  	  FROM CREDIT_CARD cc, CC_UPDATE u, CC_REQUEST_FILE rf
15:47:49 232  	  WHERE cc.ID = u.CREDIT_CARD_ID
15:47:49 233  	  AND u.CC_REQUEST_FILE_ID = rf.ID
15:47:49 234  	  AND rf.CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE', 'NO_RESPONSE')
15:47:49 235  	  AND rf.FILE_NAME = NVL(in_request_filename, rf.FILE_NAME)
15:47:49 236  	  AND upper(cc.CHASE_PROFILE_ID) = in_chase_profile_id
15:47:49 237  	  AND u.CC_UPDATE_STATUS NOT IN ('NO_UPDATE', 'UPDATED')
15:47:49 238  	  ORDER BY cc.UPDATE_DATE DESC;
15:47:49 239  	END GET_CREDIT_CARD_INFO;
15:47:49 240  
15:47:49 241  	/****************************************************************************/
15:47:49 242  
15:47:49 243  	PROCEDURE UPDATE_CC_UPDATE(
15:47:49 244  	  in_id 	     IN CC_UPDATE.ID%TYPE,
15:47:49 245  	  in_status	     IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
15:47:49 246  	  in_action	     IN CC_UPDATE.CC_UPDATE_ACTION%TYPE DEFAULT NULL,
15:47:49 247  	  in_reason	     IN CC_UPDATE.CC_UPDATE_REASON%TYPE DEFAULT NULL,
15:47:49 248  	  in_response_proc_status_code IN CC_UPDATE.RESPONSE_PROC_STATUS_CODE%TYPE DEFAULT NULL,
15:47:49 249  	  in_response_proc_status_msg  IN CC_UPDATE.RESPONSE_PROC_STATUS_MESSAGE%TYPE DEFAULT NULL,
15:47:49 250  	  in_updated_by      IN CC_UPDATE.UPDATED_BY%TYPE
15:47:49 251  	) AS
15:47:49 252  	BEGIN
15:47:49 253  	  UPDATE CC_UPDATE
15:47:49 254  	  SET CC_UPDATE_STATUS = in_status,
15:47:49 255  	  CC_UPDATE_ACTION = NVL(in_action, CC_UPDATE_ACTION),
15:47:49 256  	  CC_UPDATE_REASON = NVL(in_reason, CC_UPDATE_REASON),
15:47:49 257  	  RESPONSE_PROC_STATUS_CODE = NVL(RESPONSE_PROC_STATUS_CODE, in_response_proc_status_code),
15:47:49 258  	  RESPONSE_PROC_STATUS_MESSAGE = NVL(RESPONSE_PROC_STATUS_MESSAGE, in_response_proc_status_msg),
15:47:49 259  	  UPDATE_DATE = SYSDATE,
15:47:49 260  	  UPDATED_BY = in_updated_by
15:47:49 261  	  WHERE ID = in_id;
15:47:49 262  	END UPDATE_CC_UPDATE;
15:47:49 263  
15:47:49 264  	/****************************************************************************/
15:47:49 265  
15:47:49 266  	PROCEDURE UPDATE_CC_UPDATE_STATUS(
15:47:49 267  	  in_id 	IN CC_UPDATE.ID%TYPE,
15:47:49 268  	  in_status	IN CC_UPDATE.CC_UPDATE_STATUS%TYPE,
15:47:49 269  	  in_updated_by IN CC_UPDATE.UPDATED_BY%TYPE
15:47:49 270  	) AS
15:47:49 271  	BEGIN
15:47:49 272  	  UPDATE CC_UPDATE
15:47:49 273  	  SET CC_UPDATE_STATUS = in_status,
15:47:49 274  	  UPDATE_DATE = SYSDATE,
15:47:49 275  	  UPDATED_BY = in_updated_by
15:47:49 276  	  WHERE ID = in_id;
15:47:49 277  	END UPDATE_CC_UPDATE_STATUS;
15:47:49 278  
15:47:49 279  	/****************************************************************************/
15:47:49 280  
15:47:49 281  	PROCEDURE GET_REQUEST_FILE_BY_FILENAME (
15:47:49 282  	  in_request_filename  IN  CC_REQUEST_FILE.FILE_NAME%TYPE,
15:47:49 283  	  out_request_file     OUT SYS_REFCURSOR
15:47:49 284  	) AS
15:47:49 285  	BEGIN
15:47:49 286  	  OPEN out_request_file FOR
15:47:49 287  	  SELECT ID, FILE_NAME
15:47:49 288  	  FROM CC_REQUEST_FILE
15:47:49 289  	  WHERE FILE_NAME = in_request_filename;
15:47:49 290  	END GET_REQUEST_FILE_BY_FILENAME;
15:47:49 291  
15:47:49 292  	/****************************************************************************/
15:47:49 293  
15:47:49 294  	PROCEDURE SUSPEND_CREDIT_CARD (
15:47:49 295  	  in_credit_card_id  IN CREDIT_CARD.ID%TYPE,
15:47:49 296  	  in_updated_by      IN CREDIT_CARD.UPDATED_BY%TYPE
15:47:49 297  	) AS
15:47:49 298  	BEGIN
15:47:49 299  	  -- Create history
15:47:49 300  	  PROCS_HISTORY_V22.CREATE_CREDIT_CARD_HISTORY(
15:47:49 301  	      in_credit_card_id 	   => in_credit_card_id,
15:47:49 302  	      in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49 303  	  );
15:47:49 304  
15:47:49 305  	  UPDATE CREDIT_CARD
15:47:49 306  	  SET UPDATE_DATE = SYSDATE,
15:47:49 307  	  UPDATED_BY = in_updated_by,
15:47:49 308  	  CREDIT_CARD_STATUS_ID = GLOBAL_STATUSES_V22.CREDIT_CARD_DISABLED
15:47:49 309  	  WHERE ID = in_credit_card_id;
15:47:49 310  	END SUSPEND_CREDIT_CARD;
15:47:49 311  
15:47:49 312  	/****************************************************************************/
15:47:49 313  
15:47:49 314  	PROCEDURE UPDATE_CREDIT_CARD (
15:47:49 315  	  in_credit_card_id   IN CREDIT_CARD.ID%TYPE,
15:47:49 316  	  in_last_four_cc     IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
15:47:49 317  	  in_expiration_date  IN CREDIT_CARD.EXPIRATION_DATE%TYPE,
15:47:49 318  	  in_updated_by       IN CREDIT_CARD.UPDATED_BY%TYPE
15:47:49 319  	) AS
15:47:49 320  	BEGIN
15:47:49 321  	  -- Create history
15:47:49 322  	  PROCS_HISTORY_V22.CREATE_CREDIT_CARD_HISTORY(
15:47:49 323  	      in_credit_card_id 	   => in_credit_card_id,
15:47:49 324  	      in_system_activity_reason_id => GLOBAL_ENUMS_V22.SAC_SYSTEM_APPLIED_RULE
15:47:49 325  	  );
15:47:49 326  
15:47:49 327  	  UPDATE CREDIT_CARD
15:47:49 328  	  SET UPDATE_DATE = SYSDATE,
15:47:49 329  	  UPDATED_BY = in_updated_by,
15:47:49 330  	  LAST_FOUR_CC = NVL(in_last_four_cc, LAST_FOUR_CC),
15:47:49 331  	  EXPIRATION_DATE = NVL(in_expiration_date, EXPIRATION_DATE)
15:47:49 332  	  WHERE ID = in_credit_card_id;
15:47:49 333  	END UPDATE_CREDIT_CARD;
15:47:49 334  
15:47:49 335  	/****************************************************************************/
15:47:49 336  
15:47:49 337  	PROCEDURE COMPLETABLE_REQUESTS (
15:47:49 338  	  out_request_files OUT SYS_REFCURSOR
15:47:49 339  	) AS
15:47:49 340  	BEGIN
15:47:49 341  	  OPEN out_request_files FOR
15:47:49 342  	  SELECT DISTINCT rf.ID, rf.FILE_NAME
15:47:49 343  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
15:47:49 344  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
15:47:49 345  	  AND rf.ID = u.CC_REQUEST_FILE_ID
15:47:49 346  	  AND u.CC_UPDATE_STATUS IN ('UPDATED', 'NO_UPDATE')
15:47:49 347  	  MINUS
15:47:49 348  	  SELECT rf.ID, rf.FILE_NAME
15:47:49 349  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
15:47:49 350  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
15:47:49 351  	  AND rf.ID = u.CC_REQUEST_FILE_ID
15:47:49 352  	  AND u.CC_UPDATE_STATUS NOT IN ('UPDATED', 'NO_UPDATE');
15:47:49 353  	END COMPLETABLE_REQUESTS;
15:47:49 354  
15:47:49 355  	/****************************************************************************/
15:47:49 356  
15:47:49 357  	PROCEDURE COMPLETABLE_REQUESTS_W_FAILS (
15:47:49 358  	  in_max_hours_before_report IN  NUMBER,
15:47:49 359  	  out_request_files	     OUT SYS_REFCURSOR
15:47:49 360  	) AS
15:47:49 361  	BEGIN
15:47:49 362  	  OPEN out_request_files FOR
15:47:49 363  	  SELECT DISTINCT rf.ID, rf.FILE_NAME
15:47:49 364  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
15:47:49 365  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
15:47:49 366  	  AND rf.ID = u.CC_REQUEST_FILE_ID
15:47:49 367  	  AND u.CC_UPDATE_STATUS  = 'REQUEST_FAILED'
15:47:49 368  	  AND u.UPDATE_DATE < SYSDATE - (in_max_hours_before_report / 24)
15:47:49 369  	  MINUS
15:47:49 370  	  SELECT rf.ID, rf.FILE_NAME
15:47:49 371  	  FROM CC_REQUEST_FILE rf, CC_UPDATE u
15:47:49 372  	  WHERE CC_REQUEST_FILE_STATUS in ('SENT', 'RESPONSE_DOWNLOADED', 'REPORT_DOWNLOADED', 'RESPONSE_COMPLETE')
15:47:49 373  	  AND rf.ID = u.CC_REQUEST_FILE_ID
15:47:49 374  	  AND u.UPDATE_DATE < SYSDATE - (in_max_hours_before_report / 24)
15:47:49 375  	  AND u.CC_UPDATE_STATUS NOT IN ('UPDATED', 'NO_UPDATE', 'REQUEST_FAILED');
15:47:49 376  	END COMPLETABLE_REQUESTS_W_FAILS;
15:47:49 377  
15:47:49 378  	/****************************************************************************/
15:47:49 379  
15:47:49 380  	PROCEDURE GET_GROUP_ID_BY_ACCOUNT_ID (
15:47:49 381  	  in_account_id IN NUMBER,
15:47:49 382  	  out_group_id	OUT NUMBER
15:47:49 383  	) AS
15:47:49 384  	BEGIN
15:47:49 385  	  PROCS_ACCOUNT_V22.GET_GROUP_ID_BY_ACCOUNT_ID(
15:47:49 386  	    in_account_id => in_account_id,
15:47:49 387  	    out_group_id => out_group_id
15:47:49 388  	  );
15:47:49 389  	END GET_GROUP_ID_BY_ACCOUNT_ID;
15:47:49 390  
15:47:49 391  	/****************************************************************************/
15:47:49 392  
15:47:49 393  	PROCEDURE GET_LICENSE_BY_ID (
15:47:49 394  	  in_license_id  IN NUMBER,
15:47:49 395  	  out_result_set OUT SYS_REFCURSOR
15:47:49 396  	) AS
15:47:49 397  	BEGIN
15:47:49 398  	  PROCS_LICENSE_V22.GET_LICENSE_BY_ID(
15:47:49 399  	    in_license_id => in_license_id,
15:47:49 400  	    out_result_set => out_result_set
15:47:49 401  	  );
15:47:49 402  	END GET_LICENSE_BY_ID;
15:47:49 403  
15:47:49 404  END PROCS_CUPY;
15:47:49 405  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.09
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE
15:47:49   2  PACKAGE BODY PROCS_ENTITLEMENT_V22 AS
15:47:49   3  
15:47:49   4  	PROCEDURE GET_ARCHIVE_ENTITLEMENT_URI(
15:47:49   5  	  in_subscription_id IN NUMBER,
15:47:49   6  	  out_uri OUT VARCHAR2)
15:47:49   7  	AS
15:47:49   8  	  SPROC_NAME	  CONSTANT VARCHAR2(30) := 'GET_ARCHIVE_ENTITLEMENT_URI';
15:47:49   9  	  UNKNOWN_ERROR   EXCEPTION;
15:47:49  10  	BEGIN
15:47:49  11  	  SELECT
15:47:49  12  	    POMD.VALUE INTO out_uri
15:47:49  13  	  FROM
15:47:49  14  	     OFFER_PRODUCT_OFFERING OPO,
15:47:49  15  	     PRODUCT_OFFERING PO,
15:47:49  16  	     OFFER_OFFER_CHAIN OOC,
15:47:49  17  	     SUBSCRIPTION S,
15:47:49  18  	     LICENSE LL,
15:47:49  19  	     PRODUCT_OFFERING_META_DATA POMD
15:47:49  20  	  WHERE
15:47:49  21  	     OPO.OFFER_ID = OOC.OFFER_ID AND
15:47:49  22  	     OOC.OFFER_CHAIN_ID = S.OFFER_CHAIN_ID AND
15:47:49  23  	     S.ID = in_subscription_id AND
15:47:49  24  	     PO.ID = OPO.PRODUCT_OFFERING_ID AND
15:47:49  25  	     PO.ID = POMD.PRODUCT_OFFERING_ID AND
15:47:49  26  	     PO.CAPABILITY_ID = 1 AND
15:47:49  27  	     S.ID = LL.SUBSCRIPTION_ID AND
15:47:49  28  	     SYSDATE BETWEEN LL.START_DATE AND LL.ENTITLEMENT_END_DATE AND
15:47:49  29  	     NAME = 'entitlement_uri' AND
15:47:49  30  	     rownum < 2;
15:47:49  31  	EXCEPTION
15:47:49  32  	  WHEN OTHERS THEN
15:47:49  33  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49  34  	      SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49  35  	END GET_ARCHIVE_ENTITLEMENT_URI;
15:47:49  36  
15:47:49  37  	PROCEDURE GET_ALL_ENTITLEMENTS(
15:47:49  38  	  in_group_id	 IN  NUMBER,
15:47:49  39  	  out_result_set OUT SYS_REFCURSOR)
15:47:49  40  	AS
15:47:49  41  	  -- CONSTANTS
15:47:49  42  	  SPROC_NAME	  CONSTANT VARCHAR2(20) := 'GET_ALL_ENTITLEMENTS';
15:47:49  43  	  -- EXCEPTIONS
15:47:49  44  	  NOT_FOUND	  EXCEPTION;
15:47:49  45  	  UNKNOWN_ERROR   EXCEPTION;
15:47:49  46  	  -- VARIABLES
15:47:49  47  	  var_subs	  SYS_REFCURSOR;
15:47:49  48  	BEGIN
15:47:49  49  	  OPEN out_result_set FOR
15:47:49  50  
15:47:49  51  	SELECT
15:47:49  52  	  C.CODE NAME,
15:47:49  53  	  C.DESCRIPTION,
15:47:49  54  	  0 INHERITED,
15:47:49  55  	  C.SHAREABLE,
15:47:49  56  	  MAX(LIC.ENTITLEMENT_END_DATE) EXPIRES
15:47:49  57  	FROM
15:47:49  58  	  SUBSCRIPTION SB
15:47:49  59  	  INNER JOIN ACCOUNT AC ON AC.ID = SB.ACCOUNT_ID
15:47:49  60  	  INNER JOIN LICENSE LIC ON LIC.SUBSCRIPTION_ID = SB.ID
15:47:49  61  	  INNER JOIN OFFER_PRODUCT_OFFERING OPO ON OPO.OFFER_ID = LIC.OFFER_ID
15:47:49  62  	  INNER JOIN PRODUCT_OFFERING PO ON PO.ID = OPO.PRODUCT_OFFERING_ID
15:47:49  63  	  INNER JOIN CAPABILITY C ON PO.CAPABILITY_ID = C.ID
15:47:49  64  	WHERE
15:47:49  65  	  LIC.ENTITLEMENT_END_DATE >= TRUNC(SYSDATE)
15:47:49  66  	  AND LIC.START_DATE <= SYSDATE
15:47:49  67  	  AND AC.GROUP_ID = in_group_id
15:47:49  68  	GROUP BY
15:47:49  69  	  C.CODE, 0, C.SHAREABLE, C.DESCRIPTION
15:47:49  70  UNION ALL
15:47:49  71  	SELECT
15:47:49  72  	  C.CODE NAME,
15:47:49  73  	  C.DESCRIPTION,
15:47:49  74  	  1 INHERITED,
15:47:49  75  	  C.SHAREABLE,
15:47:49  76  	  MAX(LEAST(SS.END_DATE, LIC.ENTITLEMENT_END_DATE)) EXPIRES
15:47:49  77  	FROM
15:47:49  78  	  ACCOUNT BORROWER,
15:47:49  79  	  SUBSCRIPTION S,
15:47:49  80  	  LICENSE LIC,
15:47:49  81  	  OFFER_PRODUCT_OFFERING OPO,
15:47:49  82  	  PRODUCT_OFFERING PO,
15:47:49  83  	  CAPABILITY C,
15:47:49  84  	  GROUP_ACCOUNT GA,
15:47:49  85  	  SUBSCRIPTION_SHARE SS
15:47:49  86  	WHERE
15:47:49  87  	  BORROWER.GROUP_ID = in_group_id
15:47:49  88  	  AND LIC.SUBSCRIPTION_ID = S.ID
15:47:49  89  	  AND OPO.OFFER_ID = LIC.OFFER_ID
15:47:49  90  	  AND PO.ID = OPO.PRODUCT_OFFERING_ID
15:47:49  91  	  AND PO.CAPABILITY_ID = C.ID
15:47:49  92  	  AND GA.SUBSCRIPTION_ID = S.ID
15:47:49  93  	  AND SS.BORROWER_ACCOUNT_ID = BORROWER.ID
15:47:49  94  	  AND SS.GROUP_ACCOUNT_ID = GA.ID
15:47:49  95  	  AND SYSDATE BETWEEN SS.START_DATE AND SS.END_DATE
15:47:49  96  	  AND SYSDATE BETWEEN LIC.START_DATE AND LIC.ENTITLEMENT_END_DATE
15:47:49  97  	  AND C.SHAREABLE = 1
15:47:49  98  	GROUP BY
15:47:49  99  	  C.CODE, 0, C.SHAREABLE, C.DESCRIPTION;
15:47:49 100  
15:47:49 101  	EXCEPTION
15:47:49 102  	  WHEN OTHERS THEN
15:47:49 103  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 104  	      SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 105  	END GET_ALL_ENTITLEMENTS;
15:47:49 106  
15:47:49 107  	PROCEDURE GET_ITUNES_ENTITLEMENTS(
15:47:49 108  	  in_product_id IN CORE_OWNER.ITUNES_RECEIPT.PRODUCT_ID%TYPE,
15:47:49 109  	  out_result_set OUT SYS_REFCURSOR)
15:47:49 110  	AS
15:47:49 111  	  -- CONSTANTS
15:47:49 112  	  SPROC_NAME	  CONSTANT VARCHAR2(25) := 'GET_ITUNES_ENTITLEMENTS';
15:47:49 113  	  -- EXCEPTIONS
15:47:49 114  	  NOT_FOUND	  EXCEPTION;
15:47:49 115  	  UNKNOWN_ERROR   EXCEPTION;
15:47:49 116  	  -- VARIABLES
15:47:49 117  	  var_subs	  SYS_REFCURSOR;
15:47:49 118  	BEGIN
15:47:49 119  	  OPEN out_result_set FOR
15:47:49 120  
15:47:49 121  	      SELECT
15:47:49 122  		c.code NAME,
15:47:49 123  		C.DESCRIPTION,
15:47:49 124  		0 INHERITED,
15:47:49 125  		C.SHAREABLE,
15:47:49 126  		sysdate as EXPIRES
15:47:49 127  	      FROM
15:47:49 128  		offer_offer_chain ooc,
15:47:49 129  		offer o,
15:47:49 130  		offer_product_offering opo,
15:47:49 131  		product_offering po,
15:47:49 132  		capability c
15:47:49 133  	      WHERE
15:47:49 134  		o.id = ooc.offer_id AND
15:47:49 135  		opo.offer_id = o.id AND
15:47:49 136  		po.id = opo.product_offering_id AND
15:47:49 137  		c.id = po.capability_id AND
15:47:49 138  		c.id !=0 AND
15:47:49 139  		ooc.offer_chain_id =
15:47:49 140  		(SELECT
15:47:49 141  		    ocmd.offer_chain_id
15:47:49 142  		  FROM
15:47:49 143  		      offer_chain_meta_data ocmd
15:47:49 144  		  WHERE
15:47:49 145  			      ocmd.name = 'ITUNES_PRODUCT_ID' AND
15:47:49 146  		      ocmd.value = in_product_id AND
15:47:49 147  		      rownum < 2
15:47:49 148  		)
15:47:49 149  	      ;
15:47:49 150  
15:47:49 151  	EXCEPTION
15:47:49 152  	  WHEN OTHERS THEN
15:47:49 153  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 154  	      SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 155  	END GET_ITUNES_ENTITLEMENTS;
15:47:49 156  
15:47:49 157  END PROCS_ENTITLEMENT_V22;
15:47:49 158  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.00
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_HISTORY_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE CREATE_AASR_HISTORY(
15:47:49   4  	in_id			     IN CORE_OWNER.AMAZON_APPSTORE_RECEIPT.ID%TYPE,
15:47:49   5  	in_system_activity_reason_id IN NUMBER,
15:47:49   6  	in_created_by		     IN VARCHAR2
15:47:49   7  ) AS
15:47:49   8  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_AASR_HISTORY';
15:47:49   9  var_id		  AMAZON_APPSTORE_RECEIPT.ID%TYPE;
15:47:49  10  var_subscription_id AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID%TYPE;
15:47:49  11  var_user_id	  AMAZON_APPSTORE_RECEIPT.USER_ID%TYPE;
15:47:49  12  var_item_type	  AMAZON_APPSTORE_RECEIPT.ITEM_TYPE%TYPE;
15:47:49  13  var_start_date	  AMAZON_APPSTORE_RECEIPT.START_DATE%TYPE;
15:47:49  14  var_end_date	  AMAZON_APPSTORE_RECEIPT.END_DATE%TYPE;
15:47:49  15  var_sku		  AMAZON_APPSTORE_RECEIPT.SKU%TYPE;
15:47:49  16  var_purchase_token  AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN%TYPE;
15:47:49  17  var_create_date	  AMAZON_APPSTORE_RECEIPT.CREATE_DATE%TYPE;
15:47:49  18  var_created_by	  AMAZON_APPSTORE_RECEIPT.CREATED_BY%TYPE;
15:47:49  19  var_update_date	  AMAZON_APPSTORE_RECEIPT.UPDATE_DATE%TYPE;
15:47:49  20  var_updated_by	  AMAZON_APPSTORE_RECEIPT.UPDATED_BY%TYPE;
15:47:49  21  var_last_check_date AMAZON_APPSTORE_RECEIPT.LAST_CHECK_DATE%TYPE;
15:47:49  22  BEGIN
15:47:49  23  	SELECT
15:47:49  24  	  AMAZON_APPSTORE_RECEIPT.ID,
15:47:49  25  	  AMAZON_APPSTORE_RECEIPT.SUBSCRIPTION_ID,
15:47:49  26  	  AMAZON_APPSTORE_RECEIPT.USER_ID,
15:47:49  27  	  AMAZON_APPSTORE_RECEIPT.ITEM_TYPE,
15:47:49  28  	  AMAZON_APPSTORE_RECEIPT.START_DATE,
15:47:49  29  	  AMAZON_APPSTORE_RECEIPT.END_DATE,
15:47:49  30  	  AMAZON_APPSTORE_RECEIPT.SKU,
15:47:49  31  	  AMAZON_APPSTORE_RECEIPT.PURCHASE_TOKEN,
15:47:49  32  	  AMAZON_APPSTORE_RECEIPT.CREATE_DATE,
15:47:49  33  	  AMAZON_APPSTORE_RECEIPT.CREATED_BY,
15:47:49  34  	  AMAZON_APPSTORE_RECEIPT.UPDATE_DATE,
15:47:49  35  	  AMAZON_APPSTORE_RECEIPT.UPDATED_BY,
15:47:49  36  	  AMAZON_APPSTORE_RECEIPT.LAST_CHECK_DATE
15:47:49  37  	INTO
15:47:49  38  	  var_id,
15:47:49  39  	  var_subscription_id,
15:47:49  40  	  var_user_id,
15:47:49  41  	  var_item_type,
15:47:49  42  	  var_start_date,
15:47:49  43  	  var_end_date,
15:47:49  44  	  var_sku,
15:47:49  45  	  var_purchase_token,
15:47:49  46  	  var_create_date,
15:47:49  47  	  var_created_by,
15:47:49  48  	  var_update_date,
15:47:49  49  	  var_updated_by,
15:47:49  50  	  var_last_check_date
15:47:49  51  	FROM
15:47:49  52  	  AMAZON_APPSTORE_RECEIPT
15:47:49  53  	WHERE
15:47:49  54  	  AMAZON_APPSTORE_RECEIPT.ID = in_id;
15:47:49  55  
15:47:49  56  	CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_AASR_HISTORY(
15:47:49  57  	    var_id,
15:47:49  58  	    var_subscription_id,
15:47:49  59  	    var_user_id,
15:47:49  60  	    var_item_type,
15:47:49  61  	    var_start_date,
15:47:49  62  	    var_end_date,
15:47:49  63  	    var_sku,
15:47:49  64  	    var_purchase_token,
15:47:49  65  	    var_create_date,
15:47:49  66  	    var_created_by,
15:47:49  67  	    var_update_date,
15:47:49  68  	    var_updated_by,
15:47:49  69  	    in_system_activity_reason_id,
15:47:49  70  	    in_created_by,
15:47:49  71  	    var_last_check_date
15:47:49  72  	);
15:47:49  73  END CREATE_AASR_HISTORY;
15:47:49  74  
15:47:49  75  PROCEDURE CREATE_ADDRESS_HISTORY(
15:47:49  76  	in_address_id		     IN NUMBER,
15:47:49  77  	in_system_activity_reason_id IN NUMBER
15:47:49  78  ) AS
15:47:49  79  SPROC_NAME CONSTANT VARCHAR2(22) := 'CREATE_ADDRESS_HISTORY';
15:47:49  80  -- VARIABLES
15:47:49  81  var_address1    ADDRESS.ADDRESS1%TYPE;
15:47:49  82  var_address2    ADDRESS.ADDRESS2%TYPE;
15:47:49  83  var_city	      ADDRESS.CITY%TYPE;
15:47:49  84  var_state       ADDRESS.STATE%TYPE;
15:47:49  85  var_postal_code ADDRESS.POSTAL_CODE%TYPE;
15:47:49  86  var_country     ADDRESS.COUNTRY%TYPE;
15:47:49  87  var_created_by  ADDRESS.CREATED_BY%TYPE;
15:47:49  88  var_create_date ADDRESS.CREATE_DATE%TYPE;
15:47:49  89  var_updated_by  ADDRESS.UPDATED_BY%TYPE;
15:47:49  90  var_update_date ADDRESS.UPDATE_DATE%TYPE;
15:47:49  91  -- EXCEPTIONS
15:47:49  92  BAD_ADDRESS_ID	     EXCEPTION;
15:47:49  93  CAN_NOT_CREATE_HISTORY EXCEPTION;
15:47:49  94  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49  95  BEGIN
15:47:49  96  
15:47:49  97  	BEGIN
15:47:49  98  	  SELECT
15:47:49  99  	    ADDRESS.ADDRESS1,
15:47:49 100  	    ADDRESS.ADDRESS2,
15:47:49 101  	    ADDRESS.CITY,
15:47:49 102  	    ADDRESS.STATE,
15:47:49 103  	    ADDRESS.POSTAL_CODE,
15:47:49 104  	    ADDRESS.COUNTRY,
15:47:49 105  	    ADDRESS.CREATED_BY,
15:47:49 106  	    ADDRESS.CREATE_DATE,
15:47:49 107  	    ADDRESS.UPDATED_BY,
15:47:49 108  	    ADDRESS.UPDATE_DATE
15:47:49 109  	    into
15:47:49 110  	    var_address1,
15:47:49 111  	    var_address2,
15:47:49 112  	    var_city,
15:47:49 113  	    var_state,
15:47:49 114  	    var_postal_code,
15:47:49 115  	    var_country,
15:47:49 116  	    var_created_by,
15:47:49 117  	    var_create_date,
15:47:49 118  	    var_updated_by,
15:47:49 119  	    var_update_date
15:47:49 120  	  FROM
15:47:49 121  	    ADDRESS
15:47:49 122  	  WHERE
15:47:49 123  	    ADDRESS.ID = in_address_id;
15:47:49 124  	  EXCEPTION
15:47:49 125  	    WHEN NO_DATA_FOUND THEN
15:47:49 126  	      RAISE BAD_ADDRESS_ID;
15:47:49 127  	END;
15:47:49 128  
15:47:49 129  	BEGIN
15:47:49 130  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_ADDRESS_HISTORY(
15:47:49 131  	    in_address_id,
15:47:49 132  	    in_system_activity_reason_id,
15:47:49 133  	    var_address1,
15:47:49 134  	    var_address2,
15:47:49 135  	    var_city,
15:47:49 136  	    var_state,
15:47:49 137  	    var_postal_code,
15:47:49 138  	    var_country,
15:47:49 139  	    var_created_by,
15:47:49 140  	    var_create_date,
15:47:49 141  	    var_updated_by,
15:47:49 142  	    var_update_date
15:47:49 143  	  );
15:47:49 144  	  EXCEPTION
15:47:49 145  	    WHEN OTHERS THEN
15:47:49 146  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:49 147  	      RAISE CAN_NOT_CREATE_HISTORY;
15:47:49 148  	END;
15:47:49 149  
15:47:49 150  EXCEPTION
15:47:49 151  WHEN BAD_ADDRESS_ID THEN
15:47:49 152  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 153  	  SPROC_NAME, 'Bad recipientAddress id');
15:47:49 154  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:49 155  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 156  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:49 157  WHEN OTHERS THEN
15:47:49 158  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 159  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 160  END CREATE_ADDRESS_HISTORY;
15:47:49 161  
15:47:49 162  /********************************************************************/
15:47:49 163  
15:47:49 164  PROCEDURE CREATE_ACCOUNT_HISTORY(
15:47:49 165  	in_account_id		     IN NUMBER,
15:47:49 166  	in_system_activity_reason_id IN NUMBER
15:47:49 167  ) AS
15:47:49 168  SPROC_NAME CONSTANT VARCHAR2(22) := 'CREATE_ACCOUNT_HISTORY';
15:47:49 169  -- VARIABLES
15:47:49 170  var_account_status_id  NUMBER;
15:47:49 171  var_suspend_date	     DATE;
15:47:49 172  var_group_id	     NUMBER;
15:47:49 173  var_instrument_type_id NUMBER;
15:47:49 174  var_instrument_id      NUMBER;
15:47:49 175  var_updated_by	     VARCHAR2(255);
15:47:49 176  var_update_date	     DATE;
15:47:49 177  -- EXCEPTIONS
15:47:49 178  BAD_ACCOUNT_ID	     EXCEPTION;
15:47:49 179  CAN_NOT_CREATE_HISTORY EXCEPTION;
15:47:49 180  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49 181  BEGIN
15:47:49 182  
15:47:49 183  	BEGIN
15:47:49 184  	  SELECT
15:47:49 185  	    ACCOUNT.ACCOUNT_STATUS_ID,
15:47:49 186  	    ACCOUNT.GROUP_ID,
15:47:49 187  	    ACCOUNT.INSTRUMENT_TYPE_ID,
15:47:49 188  	    ACCOUNT.INSTRUMENT_ID,
15:47:49 189  	    ACCOUNT.UPDATED_BY,
15:47:49 190  	    ACCOUNT.UPDATE_DATE
15:47:49 191  	    into
15:47:49 192  	    var_account_status_id,
15:47:49 193  	    var_group_id,
15:47:49 194  	    var_instrument_type_id,
15:47:49 195  	    var_instrument_id,
15:47:49 196  	    var_updated_by,
15:47:49 197  	    var_update_date
15:47:49 198  	  FROM
15:47:49 199  	    ACCOUNT
15:47:49 200  	  WHERE
15:47:49 201  	    ACCOUNT.ID = in_account_id;
15:47:49 202  	  EXCEPTION
15:47:49 203  	    WHEN NO_DATA_FOUND THEN
15:47:49 204  	      RAISE BAD_ACCOUNT_ID;
15:47:49 205  	END;
15:47:49 206  
15:47:49 207  	BEGIN
15:47:49 208  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_ACCOUNT_HISTORY(
15:47:49 209  	    in_account_id,
15:47:49 210  	    var_suspend_date,
15:47:49 211  	    var_group_id,
15:47:49 212  	    var_updated_by,
15:47:49 213  	    var_update_date,
15:47:49 214  	    in_system_activity_reason_id,
15:47:49 215  	    var_account_status_id,
15:47:49 216  	    var_instrument_type_id,
15:47:49 217  	    var_instrument_id
15:47:49 218  	  );
15:47:49 219  	  EXCEPTION
15:47:49 220  	    WHEN OTHERS THEN
15:47:49 221  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:49 222  	      RAISE CAN_NOT_CREATE_HISTORY;
15:47:49 223  	END;
15:47:49 224  
15:47:49 225  EXCEPTION
15:47:49 226  WHEN BAD_ACCOUNT_ID THEN
15:47:49 227  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 228  	  SPROC_NAME, 'Bad account id');
15:47:49 229  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:49 230  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 231  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:49 232  WHEN OTHERS THEN
15:47:49 233  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 234  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 235  END CREATE_ACCOUNT_HISTORY;
15:47:49 236  
15:47:49 237  /********************************************************************/
15:47:49 238  
15:47:49 239  PROCEDURE CREATE_SUBSCRIPTION_HISTORY (
15:47:49 240  	in_subscription_id	     IN NUMBER,
15:47:49 241  	in_system_activity_reason_id IN NUMBER
15:47:49 242  ) AS
15:47:49 243  SPROC_NAME CONSTANT VARCHAR2(27) := 'CREATE_SUBSCRIPTION_HISTORY';
15:47:49 244  -- VARIABLES
15:47:49 245  var_account_id		    NUMBER;
15:47:49 246  var_purchase_date 	    DATE;
15:47:49 247  var_offer_chain_id	    NUMBER;
15:47:49 248  var_suspend_date		    DATE;
15:47:49 249  var_termination_date	    DATE;
15:47:49 250  var_days_ramaining_adjustment NUMBER;
15:47:49 251  var_sct_id		    NUMBER;
15:47:49 252  var_updated_by		    VARCHAR2(255);
15:47:49 253  var_update_date		    DATE;
15:47:49 254  -- EXCEPTIONS
15:47:49 255  BAD_SUBSCRIPTION_ID    EXCEPTION;
15:47:49 256  CAN_NOT_CREATE_HISTORY EXCEPTION;
15:47:49 257  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49 258  BEGIN
15:47:49 259  
15:47:49 260  	BEGIN
15:47:49 261  	  SELECT
15:47:49 262  	    SUBSCRIPTION.account_id,
15:47:49 263  	    SUBSCRIPTION.PURCHASE_DATE,
15:47:49 264  	    SUBSCRIPTION.OFFER_CHAIN_ID,
15:47:49 265  	    SUBSCRIPTION.SUSPEND_DATE,
15:47:49 266  	    SUBSCRIPTION.TERMINATION_DATE,
15:47:49 267  	    SUBSCRIPTION.DAYS_REMAINING_ADJUSTMENT,
15:47:49 268  	    SUBSCRIPTION.SCT_ID,
15:47:49 269  	    SUBSCRIPTION.UPDATED_BY,
15:47:49 270  	    SUBSCRIPTION.UPDATE_DATE
15:47:49 271  	    into
15:47:49 272  	    var_account_id,
15:47:49 273  	    var_purchase_date,
15:47:49 274  	    var_offer_chain_id,
15:47:49 275  	    var_suspend_date,
15:47:49 276  	    var_termination_date,
15:47:49 277  	    var_days_ramaining_adjustment,
15:47:49 278  	    var_sct_id,
15:47:49 279  	    var_updated_by,
15:47:49 280  	    var_update_date
15:47:49 281  	  FROM
15:47:49 282  	    SUBSCRIPTION
15:47:49 283  	  WHERE
15:47:49 284  	    SUBSCRIPTION.ID = in_subscription_id;
15:47:49 285  	  EXCEPTION
15:47:49 286  	    WHEN NO_DATA_FOUND THEN
15:47:49 287  	      RAISE BAD_SUBSCRIPTION_ID;
15:47:49 288  	END;
15:47:49 289  
15:47:49 290  	BEGIN
15:47:49 291  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_SUBSCRIPTION_HISTORY(
15:47:49 292  	    in_subscription_id,
15:47:49 293  	    var_account_id,
15:47:49 294  	    var_purchase_date,
15:47:49 295  	    var_offer_chain_id,
15:47:49 296  	    var_suspend_date,
15:47:49 297  	    var_termination_date,
15:47:49 298  	    var_days_ramaining_adjustment,
15:47:49 299  	    var_sct_id,
15:47:49 300  	    var_updated_by,
15:47:49 301  	    var_update_date,
15:47:49 302  	    in_system_activity_reason_id
15:47:49 303  	  );
15:47:49 304  	  EXCEPTION
15:47:49 305  	    WHEN OTHERS THEN
15:47:49 306  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:49 307  	      RAISE CAN_NOT_CREATE_HISTORY;
15:47:49 308  	END;
15:47:49 309  
15:47:49 310  EXCEPTION
15:47:49 311  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:49 312  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 313  	  SPROC_NAME, 'No such subscription');
15:47:49 314  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:49 315  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 316  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:49 317  WHEN OTHERS THEN
15:47:49 318  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 319  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 320  END CREATE_SUBSCRIPTION_HISTORY;
15:47:49 321  
15:47:49 322  /********************************************************************/
15:47:49 323  
15:47:49 324  PROCEDURE CREATE_CREDIT_CARD_HISTORY(
15:47:49 325  	in_credit_card_id	      IN NUMBER,
15:47:49 326  	in_system_activity_reason_id  IN NUMBER
15:47:49 327  ) AS
15:47:49 328  SPROC_NAME CONSTANT VARCHAR2(26) := 'CREATE_CREDIT_CARD_HISTORY';
15:47:49 329  -- VARIABLES
15:47:49 330  var_account_id		     NUMBER;
15:47:49 331  var_instrument_name	     VARCHAR2(255);
15:47:49 332  var_private_card_holder_name   VARCHAR2(256);
15:47:49 333  var_private_street_address     VARCHAR2(256);
15:47:49 334  var_private_street_address2    VARCHAR2(256);
15:47:49 335  var_state 		     VARCHAR2(50);
15:47:49 336  var_city			     VARCHAR2(50);
15:47:49 337  var_postal_code		     VARCHAR2(20);
15:47:49 338  var_country		     CHAR(2);
15:47:49 339  var_last_four_cc		     VARCHAR2(4);
15:47:49 340  var_expiration_date	     DATE;
15:47:49 341  var_credit_card_type_id	     NUMBER;
15:47:49 342  var_secret_token		     VARCHAR2(255);
15:47:49 343  var_chase_profile_id	     VARCHAR2(255);
15:47:49 344  var_credit_card_status_id      NUMBER;
15:47:49 345  var_updated_by		     VARCHAR2(255);
15:47:49 346  var_update_date		     DATE;
15:47:49 347  -- EXCEPTIONS
15:47:49 348  BAD_CREDIT_CARD_ID     EXCEPTION;
15:47:49 349  CAN_NOT_CREATE_HISTORY EXCEPTION;
15:47:49 350  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49 351  BEGIN
15:47:49 352  
15:47:49 353  	BEGIN
15:47:49 354  	  SELECT
15:47:49 355  	    ACCOUNT_ID,
15:47:49 356  	    INSTRUMENT_NAME,
15:47:49 357  	    PRIVATE_CARD_HOLDER_NAME,
15:47:49 358  	    PRIVATE_STREET_ADDRESS,
15:47:49 359  	    PRIVATE_STREET_ADDRESS2,
15:47:49 360  	    STATE,
15:47:49 361  	    CITY,
15:47:49 362  	    POSTAL_CODE,
15:47:49 363  	    COUNTRY,
15:47:49 364  	    LAST_FOUR_CC,
15:47:49 365  	    EXPIRATION_DATE,
15:47:49 366  	    CREDIT_CARD_TYPE_ID,
15:47:49 367  	    SECRET_TOKEN,
15:47:49 368  	    CHASE_PROFILE_ID,
15:47:49 369  	    CREDIT_CARD_STATUS_ID,
15:47:49 370  	    UPDATED_BY,
15:47:49 371  	    UPDATE_DATE
15:47:49 372  	    into
15:47:49 373  	    var_account_id,
15:47:49 374  	    var_instrument_name,
15:47:49 375  	    var_private_card_holder_name,
15:47:49 376  	    var_private_street_address,
15:47:49 377  	    var_private_street_address2,
15:47:49 378  	    var_state,
15:47:49 379  	    var_city,
15:47:49 380  	    var_postal_code,
15:47:49 381  	    var_country,
15:47:49 382  	    var_last_four_cc,
15:47:49 383  	    var_expiration_date,
15:47:49 384  	    var_credit_card_type_id,
15:47:49 385  	    var_secret_token,
15:47:49 386  	    var_chase_profile_id,
15:47:49 387  	    var_credit_card_status_id,
15:47:49 388  	    var_updated_by,
15:47:49 389  	    var_update_date
15:47:49 390  	  FROM
15:47:49 391  	    CREDIT_CARD
15:47:49 392  	  WHERE
15:47:49 393  	    CREDIT_CARD.ID = in_credit_card_id;
15:47:49 394  	  EXCEPTION
15:47:49 395  	    WHEN NO_DATA_FOUND THEN
15:47:49 396  	      RAISE BAD_CREDIT_CARD_ID;
15:47:49 397  	END;
15:47:49 398  
15:47:49 399  	BEGIN
15:47:49 400  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_CREDIT_CARD_HISTORY(
15:47:49 401  	    in_credit_card_id,
15:47:49 402  	    var_account_id,
15:47:49 403  	    var_instrument_name,
15:47:49 404  	    var_private_card_holder_name,
15:47:49 405  	    var_private_street_address,
15:47:49 406  	    var_private_street_address2,
15:47:49 407  	    var_state,
15:47:49 408  	    var_city,
15:47:49 409  	    var_postal_code,
15:47:49 410  	    var_country,
15:47:49 411  	    var_last_four_cc,
15:47:49 412  	    var_expiration_date,
15:47:49 413  	    var_credit_card_type_id,
15:47:49 414  	    var_secret_token,
15:47:49 415  	    var_chase_profile_id,
15:47:49 416  	    var_credit_card_status_id,
15:47:49 417  	    var_updated_by,
15:47:49 418  	    var_update_date,
15:47:49 419  	    in_system_activity_reason_id
15:47:49 420  	  );
15:47:49 421  	  EXCEPTION
15:47:49 422  	    WHEN OTHERS THEN
15:47:49 423  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:49 424  	      RAISE CAN_NOT_CREATE_HISTORY;
15:47:49 425  	END;
15:47:49 426  
15:47:49 427  EXCEPTION
15:47:49 428  WHEN BAD_CREDIT_CARD_ID THEN
15:47:49 429  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 430  	  SPROC_NAME, 'No such credit card');
15:47:49 431  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:49 432  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 433  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:49 434  WHEN OTHERS THEN
15:47:49 435  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 436  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 437  END CREATE_CREDIT_CARD_HISTORY;
15:47:49 438  
15:47:49 439  /********************************************************************/
15:47:49 440  
15:47:49 441  PROCEDURE CREATE_PAYPAL_HISTORY(
15:47:49 442  /*
15:47:49 443  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:49 444  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 445  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:49 446  */
15:47:49 447  	in_paypal_id		      IN NUMBER,
15:47:49 448  	in_system_activity_reason_id  IN NUMBER
15:47:49 449  ) AS
15:47:49 450  SPROC_NAME CONSTANT VARCHAR(21) := 'CREATE_PAYPAL_HISTORY';
15:47:49 451  -- VARIABLES
15:47:49 452  var_account_id		   PAYPAL.ACCOUNT_ID%TYPE;
15:47:49 453  var_instrument_name	   PAYPAL.INSTRUMENT_NAME%TYPE DEFAULT NULL;
15:47:49 454  var_private_email_address    PAYPAL.PRIVATE_EMAIL_ADDRESS%TYPE DEFAULT NULL;
15:47:49 455  var_created_by		   PAYPAL.CREATED_BY%TYPE;
15:47:49 456  var_paypal_status_id	   PAYPAL.PAYPAL_STATUS_ID%TYPE;
15:47:49 457  var_paypal_prvt_street_addr  PAYPAL.PRIVATE_STREET_ADDRESS%TYPE;
15:47:49 458  var_paypal_prvt_street_addr2 PAYPAL.PRIVATE_STREET_ADDRESS2%TYPE;
15:47:49 459  var_state 		   PAYPAL.STATE%TYPE;
15:47:49 460  var_city			   PAYPAL.CITY%TYPE;
15:47:49 461  var_postal_code		   PAYPAL.POSTAL_CODE%TYPE;
15:47:49 462  var_country		   PAYPAL.COUNTRY%TYPE;
15:47:49 463  var_expiration_date	   PAYPAL.EXPIRATION_DATE%TYPE;
15:47:49 464  var_update_date		   PAYPAL.UPDATE_DATE%TYPE;
15:47:49 465  var_updated_by		   PAYPAL.UPDATED_BY%TYPE;
15:47:49 466  var_secret_token		   PAYPAL.SECRET_TOKEN%TYPE;
15:47:49 467  -- EXCEPTION
15:47:49 468  BAD_PAYPAL_ID	  EXCEPTION;
15:47:49 469  CAN_NOT_ADD_HISTORY EXCEPTION;
15:47:49 470  EXCEPTION_MESSAGE   VARCHAR2(1024);
15:47:49 471  BEGIN
15:47:49 472  
15:47:49 473  	BEGIN
15:47:49 474  	  SELECT
15:47:49 475  	    ACCOUNT_ID,
15:47:49 476  	    INSTRUMENT_NAME,
15:47:49 477  	    PRIVATE_EMAIL_ADDRESS,
15:47:49 478  	    UPDATE_DATE,
15:47:49 479  	    UPDATED_BY,
15:47:49 480  	    PAYPAL_STATUS_ID,
15:47:49 481  	    PRIVATE_STREET_ADDRESS,
15:47:49 482  	    PRIVATE_STREET_ADDRESS2,
15:47:49 483  	    STATE,
15:47:49 484  	    CITY,
15:47:49 485  	    POSTAL_CODE,
15:47:49 486  	    COUNTRY,
15:47:49 487  	    EXPIRATION_DATE,
15:47:49 488  	    SECRET_TOKEN
15:47:49 489  	  INTO
15:47:49 490  	    var_account_id,
15:47:49 491  	    var_instrument_name,
15:47:49 492  	    var_private_email_address,
15:47:49 493  	    var_update_date,
15:47:49 494  	    var_updated_by,
15:47:49 495  	    var_paypal_status_id,
15:47:49 496  	    var_paypal_prvt_street_addr,
15:47:49 497  	    var_paypal_prvt_street_addr2,
15:47:49 498  	    var_state,
15:47:49 499  	    var_city,
15:47:49 500  	    var_postal_code,
15:47:49 501  	    var_country,
15:47:49 502  	    var_expiration_date,
15:47:49 503  	    var_secret_token
15:47:49 504  	  FROM
15:47:49 505  	    PAYPAL
15:47:49 506  	  WHERE
15:47:49 507  	    ID = in_paypal_id;
15:47:49 508  	  EXCEPTION
15:47:49 509  	    WHEN NO_DATA_FOUND THEN
15:47:49 510  	      RAISE BAD_PAYPAL_ID;
15:47:49 511  	END;
15:47:49 512  
15:47:49 513  	BEGIN
15:47:49 514  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_PAYPAL_HISTORY(
15:47:49 515  	    in_paypal_id,
15:47:49 516  	    var_account_id,
15:47:49 517  	    var_instrument_name,
15:47:49 518  	    var_private_email_address,
15:47:49 519  	    var_updated_by,
15:47:49 520  	    var_update_date,
15:47:49 521  	    var_paypal_status_id,
15:47:49 522  	    var_paypal_prvt_street_addr,
15:47:49 523  	    var_paypal_prvt_street_addr2,
15:47:49 524  	    var_state,
15:47:49 525  	    var_city,
15:47:49 526  	    var_postal_code,
15:47:49 527  	    var_country,
15:47:49 528  	    var_expiration_date,
15:47:49 529  	    in_system_activity_reason_id,
15:47:49 530  	    var_secret_token
15:47:49 531  	  );
15:47:49 532  	  EXCEPTION
15:47:49 533  	    WHEN OTHERS THEN
15:47:49 534  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:49 535  	      RAISE CAN_NOT_ADD_HISTORY;
15:47:49 536  	END;
15:47:49 537  
15:47:49 538  EXCEPTION
15:47:49 539  WHEN BAD_PAYPAL_ID THEN
15:47:49 540  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 541  	  SPROC_NAME, 'No such paypal');
15:47:49 542  WHEN CAN_NOT_ADD_HISTORY THEN
15:47:49 543  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 544  	  SPROC_NAME, 'Could not add history', EXCEPTION_MESSAGE);
15:47:49 545  WHEN OTHERS THEN
15:47:49 546  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 547  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 548  END CREATE_PAYPAL_HISTORY;
15:47:49 549  
15:47:49 550  /********************************************************************/
15:47:49 551  
15:47:49 552  PROCEDURE CREATE_GIFT_CERT_HISTORY(
15:47:49 553  	in_gift_certificate_id	      IN NUMBER,
15:47:49 554  	in_system_activity_reason_id  IN NUMBER
15:47:49 555  ) AS
15:47:49 556  SPROC_NAME CONSTANT VARCHAR2(24) := 'CREATE_GIFT_CERT_HISTORY';
15:47:49 557  -- VARIABLES
15:47:49 558  var_purchaser_group_id	     NUMBER;
15:47:49 559  var_purchase_invoice_id	     NUMBER;
15:47:49 560  var_offer_chain_id	     NUMBER;
15:47:49 561  var_expiration_date	     DATE;
15:47:49 562  var_purchase_date 	     DATE;
15:47:49 563  var_gift_certificate_status_id NUMBER;
15:47:49 564  var_code			     VARCHAR2(255);
15:47:49 565  var_recipient_name	     VARCHAR2(255);
15:47:49 566  var_gift_message		     VARCHAR2(500);
15:47:49 567  var_recipient_email	     VARCHAR2(255);
15:47:49 568  var_finalized_invoice_id	     NUMBER;
15:47:49 569  var_sender_email		     VARCHAR2(50);
15:47:49 570  var_sender_name		     VARCHAR2(50);
15:47:49 571  var_redemption_date	     DATE;
15:47:49 572  var_redeemer_group_id	     NUMBER;
15:47:49 573  var_cancelation_date	     DATE;
15:47:49 574  var_updated_by		     VARCHAR2(255);
15:47:49 575  var_update_date		     DATE;
15:47:49 576  var_recipient_address_id	     NUMBER;
15:47:49 577  var_redeemer_address_id	     NUMBER;
15:47:49 578  var_recipient_notify_date      DATE;
15:47:49 579  -- EXCEPTIONS
15:47:49 580  BAD_GIFT_CERTIFICATE_ID EXCEPTION;
15:47:49 581  CAN_NOT_CREATE_HISTORY  EXCEPTION;
15:47:49 582  EXCEPTION_MESSAGE       VARCHAR2(1024);
15:47:49 583  BEGIN
15:47:49 584  
15:47:49 585  	BEGIN
15:47:49 586  	  SELECT
15:47:49 587  	    GIFT_CERTIFICATE.PURCHASER_GROUP_ID,
15:47:49 588  	    GIFT_CERTIFICATE.PURCHASE_INVOICE_ID,
15:47:49 589  	    GIFT_CERTIFICATE.OFFER_CHAIN_ID,
15:47:49 590  	    GIFT_CERTIFICATE.EXPIRATION_DATE,
15:47:49 591  	    GIFT_CERTIFICATE.PURCHASE_DATE,
15:47:49 592  	    GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID,
15:47:49 593  	    GIFT_CERTIFICATE.CODE,
15:47:49 594  	    GIFT_CERTIFICATE.RECIPIENT_NAME,
15:47:49 595  	    GIFT_CERTIFICATE.GIFT_MESSAGE,
15:47:49 596  	    GIFT_CERTIFICATE.RECIPIENT_EMAIL,
15:47:49 597  	    GIFT_CERTIFICATE.FINALIZED_INVOICE_ID,
15:47:49 598  	    GIFT_CERTIFICATE.SENDER_EMAIL,
15:47:49 599  	    GIFT_CERTIFICATE.SENDER_NAME,
15:47:49 600  	    GIFT_CERTIFICATE.REDEMPTION_DATE,
15:47:49 601  	    GIFT_CERTIFICATE.REDEEMER_GROUP_ID,
15:47:49 602  	    GIFT_CERTIFICATE.CANCELATION_DATE,
15:47:49 603  	    GIFT_CERTIFICATE.UPDATED_BY,
15:47:49 604  	    GIFT_CERTIFICATE.UPDATE_DATE,
15:47:49 605  	    GIFT_CERTIFICATE.RECIPIENT_ADDRESS_ID,
15:47:49 606  	    GIFT_CERTIFICATE.REDEEMER_ADDRESS_ID,
15:47:49 607  	    GIFT_CERTIFICATE.RECIPIENT_NOTIFY_DATE
15:47:49 608  	    into
15:47:49 609  	    var_purchaser_group_id,
15:47:49 610  	    var_purchase_invoice_id,
15:47:49 611  	    var_offer_chain_id,
15:47:49 612  	    var_expiration_date,
15:47:49 613  	    var_purchase_date,
15:47:49 614  	    var_gift_certificate_status_id,
15:47:49 615  	    var_code,
15:47:49 616  	    var_recipient_name,
15:47:49 617  	    var_gift_message,
15:47:49 618  	    var_recipient_email,
15:47:49 619  	    var_finalized_invoice_id,
15:47:49 620  	    var_sender_email,
15:47:49 621  	    var_sender_name,
15:47:49 622  	    var_redemption_date,
15:47:49 623  	    var_redeemer_group_id,
15:47:49 624  	    var_cancelation_date,
15:47:49 625  	    var_updated_by,
15:47:49 626  	    var_update_date,
15:47:49 627  	    var_recipient_address_id,
15:47:49 628  	    var_redeemer_address_id,
15:47:49 629  	    var_recipient_notify_date
15:47:49 630  	  FROM
15:47:49 631  	    GIFT_CERTIFICATE
15:47:49 632  	  WHERE
15:47:49 633  	    GIFT_CERTIFICATE.ID = in_gift_certificate_id;
15:47:49 634  	END;
15:47:49 635  
15:47:49 636  	BEGIN
15:47:49 637  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_GIFT_CERT_HISTORY(
15:47:49 638  	    in_gift_certificate_id,
15:47:49 639  	    var_purchaser_group_id,
15:47:49 640  	    var_purchase_invoice_id,
15:47:49 641  	    var_offer_chain_id,
15:47:49 642  	    var_expiration_date,
15:47:49 643  	    var_purchase_date,
15:47:49 644  	    var_gift_certificate_status_id,
15:47:49 645  	    var_code,
15:47:49 646  	    var_updated_by,
15:47:49 647  	    var_update_date,
15:47:49 648  	    in_system_activity_reason_id,
15:47:49 649  	    var_recipient_name,
15:47:49 650  	    var_gift_message,
15:47:49 651  	    var_recipient_email,
15:47:49 652  	    var_finalized_invoice_id,
15:47:49 653  	    var_sender_email,
15:47:49 654  	    var_sender_name,
15:47:49 655  	    var_redemption_date,
15:47:49 656  	    var_redeemer_group_id,
15:47:49 657  	    var_cancelation_date,
15:47:49 658  	    var_recipient_address_id,
15:47:49 659  	    var_redeemer_address_id,
15:47:49 660  	    var_recipient_notify_date
15:47:49 661  	  );
15:47:49 662  	  EXCEPTION
15:47:49 663  	    WHEN OTHERS THEN
15:47:49 664  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:49 665  	      RAISE CAN_NOT_CREATE_HISTORY;
15:47:49 666  	END;
15:47:49 667  
15:47:49 668  EXCEPTION
15:47:49 669  WHEN BAD_GIFT_CERTIFICATE_ID THEN
15:47:49 670  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 671  	  SPROC_NAME, 'No such gift certificate');
15:47:49 672  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:49 673  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 674  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:49 675  WHEN OTHERS THEN
15:47:49 676  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 677  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 678  END CREATE_GIFT_CERT_HISTORY;
15:47:49 679  
15:47:49 680  /********************************************************************/
15:47:49 681  
15:47:49 682  PROCEDURE CREATE_TRANSACTION_HISTORY (
15:47:49 683  	in_transaction_id	     IN NUMBER,
15:47:49 684  	in_system_activity_reason_id IN NUMBER
15:47:49 685  ) AS
15:47:49 686  SPROC_NAME CONSTANT VARCHAR2(26) := 'CREATE_TRANSACTION_HISTORY';
15:47:49 687  -- VARIABLES
15:47:49 688  var_transaction_status_id  TRANSACTION.TRANSACTION_STATUS_ID%TYPE;
15:47:49 689  var_transaction_amount	 TRANSACTION.TRANSACTION_AMOUNT%TYPE;
15:47:49 690  var_updated_by		 TRANSACTION.UPDATED_BY%TYPE;
15:47:49 691  var_update_date		 TRANSACTION.UPDATE_DATE%TYPE;
15:47:49 692  var_order_id		 TRANSACTION.ORDER_ID%TYPE;
15:47:49 693  var_charge_id		 TRANSACTION.CHARGE_ID%TYPE;
15:47:49 694  var_is_refund		 TRANSACTION.IS_REFUND%TYPE;
15:47:49 695  var_is_settled		 TRANSACTION.IS_SETTLED%TYPE;
15:47:49 696  var_transaction_type_code  TRANSACTION.TRANSACTION_TYPE_CODE%TYPE;
15:47:49 697  -- EXCEPTIONS
15:47:49 698  BAD_TRANSACTION_ID     EXCEPTION;
15:47:49 699  CAN_NOT_CREATE_HISTORY EXCEPTION;
15:47:49 700  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49 701  BEGIN
15:47:49 702  
15:47:49 703  	BEGIN
15:47:49 704  	  SELECT
15:47:49 705  	    TRANSACTION.TRANSACTION_STATUS_ID,
15:47:49 706  	    TRANSACTION.TRANSACTION_AMOUNT,
15:47:49 707  	    TRANSACTION.UPDATED_BY,
15:47:49 708  	    TRANSACTION.UPDATE_DATE,
15:47:49 709  	    TRANSACTION.ORDER_ID,
15:47:49 710  	    TRANSACTION.CHARGE_ID,
15:47:49 711  	    TRANSACTION.IS_REFUND,
15:47:49 712  	    TRANSACTION.IS_SETTLED,
15:47:49 713  	    TRANSACTION.TRANSACTION_TYPE_CODE
15:47:49 714  	    into
15:47:49 715  	    var_transaction_status_id,
15:47:49 716  	    var_transaction_amount,
15:47:49 717  	    var_updated_by,
15:47:49 718  	    var_update_date,
15:47:49 719  	    var_order_id,
15:47:49 720  	    var_charge_id,
15:47:49 721  	    var_is_refund,
15:47:49 722  	    var_is_settled,
15:47:49 723  	    var_transaction_type_code
15:47:49 724  	  FROM
15:47:49 725  	    TRANSACTION
15:47:49 726  	  WHERE
15:47:49 727  	    TRANSACTION.ID = in_transaction_id;
15:47:49 728  	  EXCEPTION
15:47:49 729  	    WHEN NO_DATA_FOUND THEN
15:47:49 730  	      RAISE BAD_TRANSACTION_ID;
15:47:49 731  	END;
15:47:49 732  
15:47:49 733  	BEGIN
15:47:49 734  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_TRANSACTION_HISTORY(
15:47:49 735  	    in_transaction_id,
15:47:49 736  	    var_transaction_status_id,
15:47:49 737  	    var_transaction_amount,
15:47:49 738  	    var_updated_by,
15:47:49 739  	    var_update_date,
15:47:49 740  	    var_order_id,
15:47:49 741  	    var_charge_id,
15:47:49 742  	    var_is_refund,
15:47:49 743  	    var_is_settled,
15:47:49 744  	    var_transaction_type_code,
15:47:49 745  	    in_system_activity_reason_id
15:47:49 746  	  );
15:47:49 747  	  EXCEPTION
15:47:49 748  	    WHEN OTHERS THEN
15:47:49 749  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:49 750  	      RAISE CAN_NOT_CREATE_HISTORY;
15:47:49 751  	END;
15:47:49 752  
15:47:49 753  EXCEPTION
15:47:49 754  WHEN BAD_TRANSACTION_ID THEN
15:47:49 755  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 756  	  SPROC_NAME, 'No such transaction');
15:47:49 757  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:49 758  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 759  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:49 760  WHEN OTHERS THEN
15:47:49 761  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 762  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 763  END CREATE_TRANSACTION_HISTORY;
15:47:49 764  
15:47:49 765  /********************************************************************/
15:47:49 766  
15:47:49 767  PROCEDURE CREATE_INVOICE_HISTORY (
15:47:49 768  /*
15:47:49 769  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:49 770  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 771  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:49 772  */
15:47:49 773  	in_invoice_id		     IN NUMBER,
15:47:49 774  	in_system_activity_reason_id IN NUMBER
15:47:49 775  ) AS
15:47:49 776  SPROC_NAME CONSTANT VARCHAR2(22) := 'CREATE_INVOICE_HISTORY';
15:47:49 777  -- VARIABLES
15:47:49 778  var_invoice_status_id NUMBER;
15:47:49 779  var_updated_by	    VARCHAR2(255);
15:47:49 780  var_update_date	    DATE;
15:47:49 781  -- EXCEPTIONS
15:47:49 782  BAD_INVOICE_ID	     EXCEPTION;
15:47:49 783  CAN_NOT_CREATE_HISTORY EXCEPTION;
15:47:49 784  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49 785  BEGIN
15:47:49 786  
15:47:49 787  	BEGIN
15:47:49 788  	  SELECT
15:47:49 789  	    INVOICE.INVOICE_STATUS_ID,
15:47:49 790  	    INVOICE.UPDATED_BY,
15:47:49 791  	    INVOICE.UPDATE_DATE
15:47:49 792  	    into
15:47:49 793  	    var_invoice_status_id,
15:47:49 794  	    var_updated_by,
15:47:49 795  	    var_update_date
15:47:49 796  	  FROM
15:47:49 797  	    INVOICE
15:47:49 798  	  WHERE
15:47:49 799  	    INVOICE.ID = in_invoice_id;
15:47:49 800  	  EXCEPTION
15:47:49 801  	    WHEN NO_DATA_FOUND THEN
15:47:49 802  	      RAISE BAD_INVOICE_ID;
15:47:49 803  	END;
15:47:49 804  
15:47:49 805  	BEGIN
15:47:49 806  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_INVOICE_HISTORY(
15:47:49 807  	    in_invoice_id,
15:47:49 808  	    var_invoice_status_id,
15:47:49 809  	    var_updated_by,
15:47:49 810  	    var_update_date,
15:47:49 811  	    in_system_activity_reason_id
15:47:49 812  	  );
15:47:49 813  	  EXCEPTION
15:47:49 814  	    WHEN OTHERS THEN
15:47:49 815  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:49 816  	      RAISE CAN_NOT_CREATE_HISTORY;
15:47:49 817  	END;
15:47:49 818  
15:47:49 819  EXCEPTION
15:47:49 820  WHEN BAD_INVOICE_ID THEN
15:47:49 821  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 822  	  SPROC_NAME, 'No such invoice');
15:47:49 823  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:49 824  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 825  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:49 826  WHEN OTHERS THEN
15:47:49 827  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 828  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 829  END CREATE_INVOICE_HISTORY;
15:47:49 830  
15:47:49 831  /********************************************************************/
15:47:49 832  
15:47:49 833  PROCEDURE CREATE_LICENSE_HISTORY (
15:47:49 834  /*
15:47:49 835  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:49 836  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 837  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:49 838  */
15:47:49 839  	in_license_id		     IN NUMBER,
15:47:49 840  	in_system_activity_reason_id IN NUMBER
15:47:49 841  ) AS
15:47:49 842  SPROC_NAME CONSTANT VARCHAR2(22) := 'CREATE_LICENSE_HISTORY';
15:47:49 843  -- VARIABLES
15:47:49 844  var_license_status_id	    NUMBER;
15:47:49 845  var_needs_entitlements	    NUMBER;
15:47:49 846  var_start_date		    DATE;
15:47:49 847  var_offer_id		    NUMBER;
15:47:49 848  var_subscription_id	    NUMBER;
15:47:49 849  var_invoice_id		    NUMBER;
15:47:49 850  var_end_date		    DATE;
15:47:49 851  var_is_extension		    NUMBER;
15:47:49 852  var_current_offer_index	    NUMBER;
15:47:49 853  var_current_offer_recurr_num  NUMBER;
15:47:49 854  var_updated_by		    VARCHAR2(255);
15:47:49 855  var_update_date		    DATE;
15:47:49 856  var_entitlement_end_date	    DATE;
15:47:49 857  var_grace_start_date	    DATE;
15:47:49 858  var_grace_end_date	    DATE;
15:47:49 859  -- EXCEPTIONS
15:47:49 860  BAD_LICENSE_ID	     EXCEPTION;
15:47:49 861  CAN_NOT_CREATE_HISTORY EXCEPTION;
15:47:49 862  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49 863  BEGIN
15:47:49 864  
15:47:49 865  	BEGIN
15:47:49 866  	  SELECT
15:47:49 867  	    LICENSE.LICENSE_STATUS_ID,
15:47:49 868  	    LICENSE.NEEDS_ENTITLEMENTS,
15:47:49 869  	    LICENSE.START_DATE,
15:47:49 870  	    LICENSE.OFFER_ID,
15:47:49 871  	    LICENSE.SUBSCRIPTION_ID,
15:47:49 872  	    LICENSE.INVOICE_ID,
15:47:49 873  	    LICENSE.END_DATE,
15:47:49 874  	    LICENSE.IS_EXTENSION,
15:47:49 875  	    LICENSE.CURRENT_OFFER_INDEX,
15:47:49 876  	    LICENSE.CURRENT_OFFER_RECURR_NUM,
15:47:49 877  	    LICENSE.UPDATED_BY,
15:47:49 878  	    LICENSE.UPDATE_DATE,
15:47:49 879  	    LICENSE.ENTITLEMENT_END_DATE,
15:47:49 880  	    LICENSE.GRACE_START_DATE,
15:47:49 881  	    LICENSE.GRACE_END_DATE
15:47:49 882  	    into
15:47:49 883  	    var_license_status_id,
15:47:49 884  	    var_needs_entitlements,
15:47:49 885  	    var_start_date,
15:47:49 886  	    var_offer_id,
15:47:49 887  	    var_subscription_id,
15:47:49 888  	    var_invoice_id,
15:47:49 889  	    var_end_date,
15:47:49 890  	    var_is_extension,
15:47:49 891  	    var_current_offer_index,
15:47:49 892  	    var_current_offer_recurr_num,
15:47:49 893  	    var_updated_by,
15:47:49 894  	    var_update_date,
15:47:49 895  	    var_entitlement_end_date,
15:47:49 896  	    var_grace_start_date,
15:47:49 897  	    var_grace_end_date
15:47:49 898  	  FROM
15:47:49 899  	    LICENSE
15:47:49 900  	  WHERE
15:47:49 901  	    LICENSE.ID = in_license_id;
15:47:49 902  	  EXCEPTION
15:47:49 903  	    WHEN NO_DATA_FOUND THEN
15:47:49 904  	      RAISE BAD_LICENSE_ID;
15:47:49 905  	END;
15:47:49 906  
15:47:49 907  	BEGIN
15:47:49 908  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_LICENSE_HISTORY(
15:47:49 909  	    in_license_id,
15:47:49 910  	    var_license_status_id,
15:47:49 911  	    var_needs_entitlements,
15:47:49 912  	    var_start_date,
15:47:49 913  	    var_offer_id,
15:47:49 914  	    var_subscription_id,
15:47:49 915  	    var_invoice_id,
15:47:49 916  	    var_end_date,
15:47:49 917  	    var_updated_by,
15:47:49 918  	    var_update_date,
15:47:49 919  	    var_is_extension,
15:47:49 920  	    var_current_offer_index,
15:47:49 921  	    var_current_offer_recurr_num,
15:47:49 922  	    in_system_activity_reason_id,
15:47:49 923  	    var_entitlement_end_date,
15:47:49 924  	    var_grace_start_date,
15:47:49 925  	    var_grace_end_date
15:47:49 926  	  );
15:47:49 927  	  EXCEPTION
15:47:49 928  	    WHEN OTHERS THEN
15:47:49 929  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:49 930  	      RAISE CAN_NOT_CREATE_HISTORY;
15:47:49 931  	END;
15:47:49 932  
15:47:49 933  EXCEPTION
15:47:49 934  WHEN BAD_LICENSE_ID THEN
15:47:49 935  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 936  	  SPROC_NAME, 'No such license');
15:47:49 937  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:49 938  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 939  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:49 940  WHEN OTHERS THEN
15:47:49 941  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 942  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 943  END CREATE_LICENSE_HISTORY;
15:47:49 944  
15:47:49 945  /********************************************************************/
15:47:49 946  
15:47:49 947  PROCEDURE CREATE_CHARGE_HISTORY (
15:47:49 948  /*
15:47:49 949  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:49 950  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 951  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:49 952  */
15:47:49 953  	in_charge_id		    IN NUMBER,
15:47:49 954  	in_system_activity_reason_id IN NUMBER
15:47:49 955  ) AS
15:47:49 956  SPROC_NAME CONSTANT VARCHAR2(21) := 'CREATE_CHARGE_HISTORY';
15:47:49 957  -- VARIABLES
15:47:49 958  var_invoice_id	     NUMBER;
15:47:49 959  var_transaction_id     NUMBER;
15:47:49 960  var_instrument_type_id NUMBER;
15:47:49 961  var_instrument_id      NUMBER;
15:47:49 962  var_charge_amount      NUMBER;
15:47:49 963  var_charge_status_id   NUMBER;
15:47:49 964  var_updated_by	     VARCHAR2(255);
15:47:49 965  var_update_date	     DATE;
15:47:49 966  -- EXCEPTIONS
15:47:49 967  BAD_CHARGE_ID	     EXCEPTION;
15:47:49 968  CAN_NOT_CREATE_HISTORY EXCEPTION;
15:47:49 969  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49 970  BEGIN
15:47:49 971  
15:47:49 972  	BEGIN
15:47:49 973  	  SELECT
15:47:49 974  	    CHARGE.INVOICE_ID,
15:47:49 975  	    CHARGE.TRANSACTION_ID,
15:47:49 976  	    CHARGE.INSTRUMENT_TYPE_ID,
15:47:49 977  	    CHARGE.INSTRUMENT_ID,
15:47:49 978  	    CHARGE.CHARGE_AMOUNT,
15:47:49 979  	    CHARGE.CHARGE_STATUS_ID,
15:47:49 980  	    CHARGE.UPDATED_BY,
15:47:49 981  	    CHARGE.UPDATE_DATE
15:47:49 982  	    into
15:47:49 983  	    var_invoice_id,
15:47:49 984  	    var_transaction_id,
15:47:49 985  	    var_instrument_type_id,
15:47:49 986  	    var_instrument_id,
15:47:49 987  	    var_charge_amount,
15:47:49 988  	    var_charge_status_id,
15:47:49 989  	    var_updated_by,
15:47:49 990  	    var_update_date
15:47:49 991  	  FROM
15:47:49 992  	    CHARGE
15:47:49 993  	  WHERE
15:47:49 994  	    CHARGE.ID = in_charge_id;
15:47:49 995  	  EXCEPTION
15:47:49 996  	    WHEN NO_DATA_FOUND THEN
15:47:49 997  	      RAISE BAD_CHARGE_ID;
15:47:49 998  	END;
15:47:49 999  
15:47:49 1000  	 BEGIN
15:47:49 1001  	   CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_CHARGE_HISTORY (
15:47:49 1002  	     in_charge_id,
15:47:49 1003  	     var_invoice_id,
15:47:49 1004  	     var_transaction_id,
15:47:49 1005  	     var_instrument_type_id,
15:47:49 1006  	     var_instrument_id,
15:47:49 1007  	     var_charge_amount,
15:47:49 1008  	     var_updated_by,
15:47:49 1009  	     var_update_date,
15:47:49 1010  	     var_charge_status_id,
15:47:49 1011  	     in_system_activity_reason_id
15:47:49 1012  	   );
15:47:49 1013  	   EXCEPTION
15:47:49 1014  	     WHEN OTHERS THEN
15:47:49 1015  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:49 1016  	       RAISE CAN_NOT_CREATE_HISTORY;
15:47:49 1017  	 END;
15:47:49 1018  
15:47:49 1019  EXCEPTION
15:47:49 1020  WHEN BAD_CHARGE_ID THEN
15:47:49 1021  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 1022  	   SPROC_NAME, 'No such license');
15:47:49 1023  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:49 1024  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 1025  	   SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:49 1026  WHEN OTHERS THEN
15:47:49 1027  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 1028  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 1029  END CREATE_CHARGE_HISTORY;
15:47:49 1030  
15:47:49 1031  PROCEDURE CREATE_INVOICE_ADJ_HISTORY (
15:47:49 1032  /*
15:47:49 1033  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:49 1034  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 1035  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:49 1036  */
15:47:49 1037  	 in_invoice_adjustment_id  IN NUMBER,
15:47:49 1038  	 in_system_activity_reason_id IN NUMBER
15:47:49 1039  ) AS
15:47:49 1040  SPROC_NAME CONSTANT VARCHAR(32) := 'CREATE_INVOICE_ADJ_HISTORY';
15:47:49 1041  --VARIABLED
15:47:49 1042  var_invoice_adj_id	   INVOICE_ADJUSTMENT.ID%TYPE;
15:47:49 1043  var_invoice_id		   INVOICE_ADJUSTMENT.INVOICE_ID%TYPE;
15:47:49 1044  var_is_credit		   INVOICE_ADJUSTMENT.IS_CREDIT%TYPE;
15:47:49 1045  var_charge_id		   INVOICE_ADJUSTMENT.CHARGE_ID%TYPE;
15:47:49 1046  var_adjustment_date	   INVOICE_ADJUSTMENT.ADJUSTMENT_DATE%TYPE;
15:47:49 1047  var_create_date		   INVOICE_ADJUSTMENT.CREATE_DATE%TYPE;
15:47:49 1048  var_created_by		   INVOICE_ADJUSTMENT.CREATED_BY%TYPE;
15:47:49 1049  var_invoice_adj_reason_id INVOICE_ADJUSTMENT.INVOICE_ADJUSTMENT_REASON_ID%TYPE;
15:47:49 1050  var_update_date		   INVOICE_ADJUSTMENT.UPDATE_DATE%TYPE;
15:47:49 1051  var_updated_by		   INVOICE_ADJUSTMENT.UPDATED_BY%TYPE;
15:47:49 1052  BAD_INVOICE_ADJ_ID	   EXCEPTION;
15:47:49 1053  CAN_NOT_CREATE_HISTORY	   EXCEPTION;
15:47:49 1054  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49 1055  BEGIN
15:47:49 1056  
15:47:49 1057  	 BEGIN
15:47:49 1058  	   SELECT
15:47:49 1059  	     INVOICE_ADJUSTMENT.ID,
15:47:49 1060  	     INVOICE_ADJUSTMENT.INVOICE_ID,
15:47:49 1061  	     INVOICE_ADJUSTMENT.IS_CREDIT,
15:47:49 1062  	     INVOICE_ADJUSTMENT.CHARGE_ID,
15:47:49 1063  	     INVOICE_ADJUSTMENT.ADJUSTMENT_DATE,
15:47:49 1064  	     INVOICE_ADJUSTMENT.CREATE_DATE,
15:47:49 1065  	     INVOICE_ADJUSTMENT.CREATED_BY,
15:47:49 1066  	     INVOICE_ADJUSTMENT.INVOICE_ADJUSTMENT_REASON_ID,
15:47:49 1067  	     INVOICE_ADJUSTMENT.UPDATE_DATE,
15:47:49 1068  	     INVOICE_ADJUSTMENT.UPDATED_BY
15:47:49 1069  	     into
15:47:49 1070  	     var_invoice_adj_id,
15:47:49 1071  	     var_invoice_id,
15:47:49 1072  	     var_is_credit,
15:47:49 1073  	     var_charge_id,
15:47:49 1074  	     var_adjustment_date,
15:47:49 1075  	     var_create_date,
15:47:49 1076  	     var_created_by,
15:47:49 1077  	     var_invoice_adj_reason_id,
15:47:49 1078  	     var_update_date,
15:47:49 1079  	     var_updated_by
15:47:49 1080  	   FROM
15:47:49 1081  	     INVOICE_ADJUSTMENT
15:47:49 1082  	   WHERE
15:47:49 1083  	     INVOICE_ADJUSTMENT.ID = in_invoice_adjustment_id;
15:47:49 1084  	   EXCEPTION
15:47:49 1085  	     WHEN NO_DATA_FOUND THEN
15:47:49 1086  	       RAISE BAD_INVOICE_ADJ_ID;
15:47:49 1087  	 END;
15:47:49 1088  
15:47:49 1089  	 BEGIN
15:47:49 1090  	   CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_INVOICE_ADJ_HISTORY (
15:47:49 1091  	     var_invoice_adj_id,
15:47:49 1092  	     var_invoice_id,
15:47:49 1093  	     var_is_credit,
15:47:49 1094  	     var_charge_id,
15:47:49 1095  	     var_adjustment_date,
15:47:49 1096  	     var_create_date,
15:47:49 1097  	     var_created_by,
15:47:49 1098  	     var_invoice_adj_reason_id,
15:47:49 1099  	     var_update_date,
15:47:49 1100  	     var_updated_by
15:47:49 1101  	   );
15:47:49 1102  	   EXCEPTION
15:47:49 1103  	     WHEN OTHERS THEN
15:47:49 1104  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:49 1105  	       RAISE CAN_NOT_CREATE_HISTORY;
15:47:49 1106  	 END;
15:47:49 1107  
15:47:49 1108  EXCEPTION
15:47:49 1109  WHEN BAD_INVOICE_ADJ_ID THEN
15:47:49 1110  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:49 1111  	   SPROC_NAME, 'No such invoice adjustment');
15:47:49 1112  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:49 1113  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:49 1114  	   SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:49 1115  WHEN OTHERS THEN
15:47:49 1116  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:49 1117  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:49 1118  END CREATE_INVOICE_ADJ_HISTORY;
15:47:49 1119  
15:47:49 1120  END PROCS_HISTORY_V22;
15:47:49 1121  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.06
15:47:49 SQL> 
15:47:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ITUNES_RECEIPT_V22" AS
15:47:49   2  
15:47:49   3  PROCEDURE ITUNES_RECEIPT_SUBSCRIPTION (
15:47:49   4  /*
15:47:49   5  Throws exceptions:
15:47:49   6  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49   7  */
15:47:49   8  	in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
15:47:49   9  	out_result_set	    OUT SYS_REFCURSOR
15:47:49  10  ) AS
15:47:49  11  SPROC_NAME CONSTANT VARCHAR2(28) := 'ITUNES_RECEIPT_SUBSCRIPTION';
15:47:49  12  BEGIN
15:47:49  13  OPEN out_result_set FOR
15:47:49  14  	      SELECT
15:47:49  15  	      i.id as ITUNES_RECEIPT_ID,
15:47:49  16  	      s.id as SUBSCRIPTION_ID,
15:47:49  17  	      s.SUBSCRIPTION_STATUS_ID,
15:47:49  18  	      i.STATUS,
15:47:49  19  	      a.GROUP_ID
15:47:49  20  	      FROM ITUNES_RECEIPT i, SUBSCRIPTION s, ACCOUNT a
15:47:49  21  	      WHERE i.ORIGINAL_TRANSACTION_ID = in_original_transaction_id
15:47:49  22  	      AND s.ID(+) = i.SUBSCRIPTION_ID
15:47:49  23  	      AND a.ID(+) = s.ACCOUNT_ID;
15:47:49  24  END ITUNES_RECEIPT_SUBSCRIPTION;
15:47:49  25  
15:47:49  26  
15:47:49  27  PROCEDURE CREATE_RECEIPT(
15:47:49  28  /*
15:47:49  29  Throws exceptions:
15:47:49  30  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49  31  */
15:47:49  32  	  out_id      OUT NUMBER,
15:47:49  33  	  in_subscription_id  IN ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:49  34  	  in_receipt	      IN ITUNES_RECEIPT.RECEIPT%TYPE,
15:47:49  35  	  in_status	      IN ITUNES_RECEIPT.STATUS%TYPE,
15:47:49  36  	  in_quantity	      IN ITUNES_RECEIPT.QUANTITY%TYPE,
15:47:49  37  	  in_product_id       IN ITUNES_RECEIPT.PRODUCT_ID%TYPE,
15:47:49  38  	  in_transaction_id   IN ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
15:47:49  39  	  in_purchase_date    IN ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
15:47:49  40  	  in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
15:47:49  41  	  in_original_purchase_date IN ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
15:47:49  42  	  in_app_item_id      IN ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
15:47:49  43  	  in_version_external_id IN ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
15:47:49  44  	  in_bid	      IN ITUNES_RECEIPT.BID%TYPE,
15:47:49  45  	  in_bvrs	      IN ITUNES_RECEIPT.BVRS%TYPE,
15:47:49  46  	  in_expires_date     IN ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
15:47:49  47  	  in_created_by       IN ITUNES_RECEIPT.CREATED_BY%TYPE
15:47:49  48  ) AS
15:47:49  49  -- VARIABLES
15:47:49  50  SPROC_NAME	 CONSTANT VARCHAR2(14) := 'CREATE_RECEIPT';
15:47:49  51  -- EXCEPTIONS
15:47:49  52  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:49  53  BEGIN
15:47:49  54  
15:47:49  55  	CORE_OWNER.PROCS_ITUNES_RECEIPT_CRU_V22.CREATE_RECEIPT(
15:47:49  56  	  out_id	      =>  out_id,
15:47:49  57  	  in_subscription_id  =>  in_subscription_id,
15:47:49  58  	  in_receipt	      =>  in_receipt,
15:47:49  59  	  in_status	      =>  in_status,
15:47:49  60  	  in_quantity	      =>  in_quantity,
15:47:49  61  	  in_product_id       =>  in_product_id,
15:47:49  62  	  in_transaction_id   =>  in_transaction_id,
15:47:49  63  	  in_purchase_date    =>  in_purchase_date,
15:47:49  64  	  in_original_transaction_id  =>  in_original_transaction_id,
15:47:49  65  	  in_original_purchase_date => in_original_purchase_date,
15:47:49  66  	  in_app_item_id      =>  in_app_item_id,
15:47:49  67  	  in_version_external_id  =>  in_version_external_id,
15:47:49  68  	  in_bid	      =>  in_bid,
15:47:49  69  	  in_bvrs	      =>  in_bvrs,
15:47:49  70  	  in_expires_date     =>  in_expires_date,
15:47:49  71  	  in_created_by       =>  in_created_by
15:47:49  72  	);
15:47:49  73  
15:47:49  74  END CREATE_RECEIPT;
15:47:49  75  
15:47:49  76  PROCEDURE UPDATE_RECEIPT(
15:47:49  77  /*
15:47:49  78  Throws exceptions:
15:47:49  79  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49  80  */
15:47:49  81  	  in_id 	      IN ITUNES_RECEIPT.ID%TYPE,
15:47:49  82  	  in_receipt	      IN ITUNES_RECEIPT.RECEIPT%TYPE,
15:47:49  83  	  in_status	      IN ITUNES_RECEIPT.STATUS%TYPE,
15:47:49  84  	  in_quantity	      IN ITUNES_RECEIPT.QUANTITY%TYPE,
15:47:49  85  	  in_product_id       IN ITUNES_RECEIPT.PRODUCT_ID%TYPE,
15:47:49  86  	  in_transaction_id   IN ITUNES_RECEIPT.TRANSACTION_ID%TYPE,
15:47:49  87  	  in_purchase_date    IN ITUNES_RECEIPT.PURCHASE_DATE%TYPE,
15:47:49  88  	  in_original_transaction_id IN ITUNES_RECEIPT.ORIGINAL_TRANSACTION_ID%TYPE,
15:47:49  89  	  in_original_purchase_date IN ITUNES_RECEIPT.ORIGINAL_PURCHASE_DATE%TYPE,
15:47:49  90  	  in_app_item_id      IN ITUNES_RECEIPT.APP_ITEM_ID%TYPE,
15:47:49  91  	  in_version_external_id IN ITUNES_RECEIPT.VERSION_EXTERNAL_ID%TYPE,
15:47:49  92  	  in_bid	      IN ITUNES_RECEIPT.BID%TYPE,
15:47:49  93  	  in_bvrs	      IN ITUNES_RECEIPT.BVRS%TYPE,
15:47:49  94  	  in_expires_date     IN ITUNES_RECEIPT.EXPIRES_DATE%TYPE,
15:47:49  95  	  in_updated_by       IN ITUNES_RECEIPT.UPDATED_BY%TYPE,
15:47:49  96  	  in_is_expired       IN NUMBER
15:47:49  97  ) AS
15:47:49  98  CANCEL_DATE DATE;
15:47:49  99  BEGIN
15:47:49 100  	-- see if cancel date is already set
15:47:49 101  	BEGIN
15:47:49 102  	  SELECT
15:47:49 103  	    IR.CANCEL_DATE INTO CANCEL_DATE
15:47:49 104  	  FROM
15:47:49 105  	    ITUNES_RECEIPT IR
15:47:49 106  	  WHERE
15:47:49 107  	    IR.ID = in_id;
15:47:49 108  	EXCEPTION
15:47:49 109  	  WHEN NO_DATA_FOUND THEN
15:47:49 110  	    CANCEL_DATE := NULL;
15:47:49 111  	END;
15:47:49 112  
15:47:49 113  	-- only update cancel date if it isn't already set and the receipt is expired
15:47:49 114  	IF in_is_expired = 1 THEN
15:47:49 115  	  IF CANCEL_DATE IS NULL THEN
15:47:49 116  	    CANCEL_DATE := SYSDATE;
15:47:49 117  	  END IF;
15:47:49 118  	ELSE
15:47:49 119  	  CANCEL_DATE := NULL;
15:47:49 120  	END IF;
15:47:49 121  
15:47:49 122  	CORE_OWNER.PROCS_ITUNES_RECEIPT_CRU_V22.UPDATE_RECEIPT(
15:47:49 123  	  in_id => in_id,
15:47:49 124  	  in_receipt => in_receipt,
15:47:49 125  	  in_status => in_status,
15:47:49 126  	  in_quantity => in_quantity,
15:47:49 127  	  in_product_id => in_product_id,
15:47:49 128  	  in_transaction_id => in_transaction_id,
15:47:49 129  	  in_purchase_date => in_purchase_date,
15:47:49 130  	  in_original_transaction_id => in_original_transaction_id,
15:47:49 131  	  in_original_purchase_date => in_original_purchase_date,
15:47:49 132  	  in_app_item_id => in_app_item_id,
15:47:49 133  	  in_version_external_id => in_version_external_id,
15:47:49 134  	  in_bid => in_bid,
15:47:49 135  	  in_bvrs => in_bvrs,
15:47:49 136  	  in_expires_date => in_expires_date,
15:47:49 137  	  in_updated_by => in_updated_by,
15:47:49 138  	  in_cancel_date => CANCEL_DATE
15:47:49 139  	);
15:47:49 140  END UPDATE_RECEIPT;
15:47:49 141  
15:47:49 142  PROCEDURE LINK_ITUNES_RECEIPT(
15:47:49 143  /*
15:47:49 144  Throws exceptions:
15:47:49 145  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 146  */
15:47:49 147  	  in_id 	      IN ITUNES_RECEIPT.ID%TYPE,
15:47:49 148  	  in_subscription_id  IN ITUNES_RECEIPT.SUBSCRIPTION_ID%TYPE,
15:47:49 149  	  in_updated_by       IN ITUNES_RECEIPT.UPDATED_BY%TYPE
15:47:49 150  ) AS
15:47:49 151  BEGIN
15:47:49 152  	      CORE_OWNER.PROCS_ITUNES_RECEIPT_CRU_V22.LINK_ITUNES_RECEIPT(
15:47:49 153  		      in_id => in_id,
15:47:49 154  		      in_subscription_id => in_subscription_id,
15:47:49 155  		      in_updated_by => in_updated_by
15:47:49 156  		      );
15:47:49 157  END LINK_ITUNES_RECEIPT;
15:47:49 158  
15:47:49 159  PROCEDURE MARK_RECEIPT_CHECKED(
15:47:49 160  /*
15:47:49 161  Throws exceptions:
15:47:49 162  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 163  */
15:47:49 164  	  in_id       IN ITUNES_RECEIPT.ID%TYPE
15:47:49 165  ) AS
15:47:49 166  BEGIN
15:47:49 167  	CORE_OWNER.PROCS_ITUNES_RECEIPT_CRU_V22.MARK_RECEIPT_CHECKED(
15:47:49 168  	  in_id => in_id
15:47:49 169  	);
15:47:49 170  END MARK_RECEIPT_CHECKED;
15:47:49 171  
15:47:49 172  PROCEDURE GET_ITUNES_RECEIPTS (
15:47:49 173  /*
15:47:49 174  Throws exceptions:
15:47:49 175  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 176  */
15:47:49 177  	out_result_set	    OUT SYS_REFCURSOR,
15:47:49 178  	in_row_number	    IN NUMBER DEFAULT 500
15:47:49 179  ) AS
15:47:49 180  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_ITUNES_RECEIPTS';
15:47:49 181  BEGIN
15:47:49 182  OPEN out_result_set FOR
15:47:49 183  SELECT * FROM
15:47:49 184  (
15:47:49 185  	SELECT * FROM
15:47:49 186  	(
15:47:49 187  	  SELECT
15:47:49 188  	    IR.ID,
15:47:49 189  	    IR.SUBSCRIPTION_ID,
15:47:49 190  	    IR.RECEIPT,
15:47:49 191  	    IR.STATUS,
15:47:49 192  	    IR.QUANTITY,
15:47:49 193  	    IR.PRODUCT_ID,
15:47:49 194  	    IR.TRANSACTION_ID,
15:47:49 195  	    IR.PURCHASE_DATE,
15:47:49 196  	    IR.ORIGINAL_TRANSACTION_ID,
15:47:49 197  	    IR.ORIGINAL_PURCHASE_DATE,
15:47:49 198  	    IR.APP_ITEM_ID,
15:47:49 199  	    IR.VERSION_EXTERNAL_ID,
15:47:49 200  	    IR.BID,
15:47:49 201  	    IR.BVRS,
15:47:49 202  	    IR.EXPIRES_DATE,
15:47:49 203  	    IR.CREATE_DATe,
15:47:49 204  	    IR.CREATED_BY,
15:47:49 205  	    IR.UPDATE_DATE,
15:47:49 206  	    IR.UPDATED_BY,
15:47:49 207  	    IR.LAST_CHECK_DATE,
15:47:49 208  	    OC.VENDOR_SOURCE_ID
15:47:49 209  	  FROM
15:47:49 210  	    CORE_OWNER.ITUNES_RECEIPT IR
15:47:49 211  	    LEFT JOIN CORE_OWNER.SUBSCRIPTION S ON IR.subscription_id = S.id
15:47:49 212  	    LEFT JOIN CORE_OWNER.OFFER_CHAIN OC ON S.offer_chain_id = OC.id
15:47:49 213  	  WHERE
15:47:49 214  	    NOT EXISTS
15:47:49 215  	    (
15:47:49 216  	      SELECT NULL
15:47:49 217  	      FROM PROCESS_RETRY_THROTTLE
15:47:49 218  	      WHERE PROCESS_NAME = SPROC_NAME
15:47:49 219  		AND GENERIC_ID = IR.ID
15:47:49 220  	    ) AND
15:47:49 221  	    (S.subscription_status_id in (GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED, GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE) or (S.subscription_status_id is null and IR.status != 21006)) AND
15:47:49 222  	    ROWNUM <= in_row_number*10
15:47:49 223  	)
15:47:49 224  	ORDER BY dbms_random.value
15:47:49 225  )
15:47:49 226  WHERE
15:47:49 227  	ROWNUM <= in_row_number;
15:47:49 228  
15:47:49 229  END GET_ITUNES_RECEIPTS;
15:47:49 230  
15:47:49 231  PROCEDURE GET_VENDOR_FROM_ITUNES_PID(
15:47:49 232  /*
15:47:49 233  Throws exceptions:
15:47:49 234  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:49 235  */
15:47:49 236  	  out_vendor_source_id OUT OFFER_CHAIN.VENDOR_SOURCE_ID%TYPE,
15:47:49 237  	  in_itunes_pid        IN ITUNES_RECEIPT.PRODUCT_ID%TYPE
15:47:49 238  ) AS
15:47:49 239  BEGIN
15:47:49 240  
15:47:49 241  SELECT
15:47:49 242  	  oc.vendor_source_id
15:47:49 243  INTO
15:47:49 244  	  out_vendor_source_id
15:47:49 245  FROM
15:47:49 246  	  offer_chain_meta_data ocmd
15:47:49 247  JOIN
15:47:49 248  	  offer_chain oc
15:47:49 249  ON
15:47:49 250  	  ocmd.offer_chain_id = oc.id
15:47:49 251  WHERE
15:47:49 252  	  ocmd.name = 'ITUNES_PRODUCT_ID'
15:47:49 253  AND ocmd.value = in_itunes_pid
15:47:49 254  AND rownum <= 1;
15:47:49 255  
15:47:49 256  END GET_VENDOR_FROM_ITUNES_PID;
15:47:49 257  
15:47:49 258  END PROCS_ITUNES_RECEIPT_V22;
15:47:49 259  .
15:47:49 SQL> /

Package body created.

Elapsed: 00:00:00.11
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LINE_ITEMS_V22" AS
15:47:50   2  
15:47:50   3  PROCEDURE ADD_LINE_ITEMS(
15:47:50   4  /*
15:47:50   5  Throws exceptions:
15:47:50   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50   8  */
15:47:50   9  	in_invoice_id IN NUMBER,
15:47:50  10  	in_offer_id   IN NUMBER,
15:47:50  11  	in_created_by IN VARCHAR2
15:47:50  12  ) AS
15:47:50  13  -- VARIABLES
15:47:50  14  SPROC_NAME      CONSTANT VARCHAR2(14) := 'ADD_LINE_ITEMS';
15:47:50  15  temp_invoice_id NUMBER;
15:47:50  16  temp_offer_id   NUMBER;
15:47:50  17  
15:47:50  18  var_line_item_data SYS_REFCURSOR;
15:47:50  19  var_new_line_item_id NUMBER;
15:47:50  20  var_product_unit_price NUMBER (10,6);
15:47:50  21  var_product_offering_price NUMBER(10,6);
15:47:50  22  var_product_offering_oprice NUMBER(10,6);
15:47:50  23  var_product_quantity NUMBER;
15:47:50  24  var_product_offering_id NUMBER;
15:47:50  25  
15:47:50  26  var_line_item_price	  NUMBER(10,2);
15:47:50  27  var_discount_fixed_amount   NUMBER(10,6);
15:47:50  28  var_discount_percent_amount NUMBER(10,2);
15:47:50  29  
15:47:50  30  
15:47:50  31  -- EXCEPTIONS
15:47:50  32  BAD_INVOICE_ID EXCEPTION;
15:47:50  33  BAD_OFFER_ID EXCEPTION;
15:47:50  34  BAD_DISCOUNT EXCEPTION;
15:47:50  35  BEGIN
15:47:50  36  
15:47:50  37  	-- Check that given invoice exists
15:47:50  38  	BEGIN
15:47:50  39  	  SELECT
15:47:50  40  	    INVOICE.ID into temp_invoice_id
15:47:50  41  	  FROM
15:47:50  42  	    INVOICE
15:47:50  43  	  WHERE
15:47:50  44  	    INVOICE.ID = in_invoice_id;
15:47:50  45  
15:47:50  46  	  EXCEPTION
15:47:50  47  	    WHEN NO_DATA_FOUND THEN
15:47:50  48  	      RAISE BAD_INVOICE_ID;
15:47:50  49  	END;
15:47:50  50  
15:47:50  51  	-- Check that given offer exists
15:47:50  52  	BEGIN
15:47:50  53  	  SELECT
15:47:50  54  	    OFFER.ID into temp_offer_id
15:47:50  55  	  FROM
15:47:50  56  	    OFFER
15:47:50  57  	  WHERE
15:47:50  58  	    OFFER.ID = in_offer_id;
15:47:50  59  
15:47:50  60  	  EXCEPTION
15:47:50  61  	    WHEN NO_DATA_FOUND THEN
15:47:50  62  	      RAISE BAD_OFFER_ID;
15:47:50  63  	END;
15:47:50  64  
15:47:50  65  	-- Get product_offering data
15:47:50  66  	OPEN var_line_item_data FOR
15:47:50  67  	SELECT
15:47:50  68  	  PRODUCT_OFFERING.ID,
15:47:50  69  	  PRODUCT_OFFERING.UNIT_PRICE,
15:47:50  70  	  PRODUCT_OFFERING.QUANTITY
15:47:50  71  	FROM
15:47:50  72  	  OFFER_PRODUCT_OFFERING
15:47:50  73  	  INNER JOIN PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
15:47:50  74  	WHERE
15:47:50  75  	  OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id;
15:47:50  76  
15:47:50  77  	-- insert line items
15:47:50  78  	-- add discounts to line items
15:47:50  79  	LOOP
15:47:50  80  	  FETCH var_line_item_data INTO
15:47:50  81  	    var_product_offering_id,
15:47:50  82  	    var_product_unit_price,
15:47:50  83  	    var_product_quantity;
15:47:50  84  	  EXIT WHEN var_line_item_data%NOTFOUND;
15:47:50  85  
15:47:50  86  	  var_product_offering_oprice := var_product_unit_price * var_product_quantity;
15:47:50  87  	  var_product_offering_price := var_product_offering_oprice;
15:47:50  88  
15:47:50  89  	  -- Apply discounts to line_item
15:47:50  90  	  BEGIN
15:47:50  91  	    SELECT
15:47:50  92  	      SUM (DISCOUNT.FIXED_AMOUNT) into var_discount_fixed_amount
15:47:50  93  	    FROM
15:47:50  94  	      DISCOUNT_PRODUCT_OFFERING
15:47:50  95  	      INNER JOIN DISCOUNT ON DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID = DISCOUNT.ID
15:47:50  96  	    WHERE
15:47:50  97  	      DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = var_product_offering_id
15:47:50  98  	      AND DISCOUNT.FIXED_AMOUNT IS NOT NULL;
15:47:50  99  	    EXCEPTION
15:47:50 100  	    WHEN NO_DATA_FOUND THEN
15:47:50 101  	      var_discount_fixed_amount := NULL;
15:47:50 102  	  END;
15:47:50 103  
15:47:50 104  	  BEGIN
15:47:50 105  	    SELECT
15:47:50 106  	      SUM (DISCOUNT.PERCENT_AMOUNT) into var_discount_percent_amount
15:47:50 107  	    FROM
15:47:50 108  	      DISCOUNT_PRODUCT_OFFERING
15:47:50 109  	      INNER JOIN DISCOUNT ON DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID = DISCOUNT.ID
15:47:50 110  	    WHERE
15:47:50 111  	      DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = var_product_offering_id
15:47:50 112  	      AND DISCOUNT.PERCENT_AMOUNT IS NOT NULL;
15:47:50 113  	    EXCEPTION
15:47:50 114  	    WHEN NO_DATA_FOUND THEN
15:47:50 115  	      var_discount_percent_amount := NULL;
15:47:50 116  	  END;
15:47:50 117  
15:47:50 118  	  IF (var_discount_percent_amount IS NOT NULL) THEN
15:47:50 119  	    var_product_offering_price := var_product_offering_price * ( 1 - var_discount_percent_amount / 100 );
15:47:50 120  	  END IF;
15:47:50 121  
15:47:50 122  	  IF (var_discount_fixed_amount IS NOT NULL) THEN
15:47:50 123  	    var_product_offering_price := var_product_offering_price - var_discount_fixed_amount;
15:47:50 124  	  END IF;
15:47:50 125  
15:47:50 126  	  var_line_item_price := PROCS_COMMON_V22.ROUND_10_6_TO_10_2(var_product_offering_price);
15:47:50 127  
15:47:50 128  	  IF (var_line_item_price < 0) THEN
15:47:50 129  	      RAISE BAD_DISCOUNT;
15:47:50 130  	  END IF;
15:47:50 131  
15:47:50 132  	  var_new_line_item_id := NULL;
15:47:50 133  	  PROCS_LINE_ITEMS_CRU_V22.CREATE_LINE_ITEM(
15:47:50 134  	    inout_line_item_id	=> var_new_line_item_id,
15:47:50 135  	    in_product_offer_id => var_product_offering_id,
15:47:50 136  	    in_invoice_id	=> in_invoice_id,
15:47:50 137  	    in_amount		=> var_line_item_price,
15:47:50 138  	    in_created_by	=> in_created_by,
15:47:50 139  	    in_discount_amount	=> var_product_offering_oprice - var_line_item_price,
15:47:50 140  	    in_taxes_amount	=> NULL
15:47:50 141  	  );
15:47:50 142  
15:47:50 143  	  FOR f_discount IN (
15:47:50 144  	    SELECT
15:47:50 145  	      DISCOUNT.ID
15:47:50 146  	    FROM
15:47:50 147  	      DISCOUNT_PRODUCT_OFFERING
15:47:50 148  	      INNER JOIN DISCOUNT ON DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID = DISCOUNT.ID
15:47:50 149  	    WHERE
15:47:50 150  	      DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = var_product_offering_id
15:47:50 151  	  )
15:47:50 152  	  LOOP
15:47:50 153  	    PROCS_LINE_ITEMS_CRU_V22.CREATE_DISCOUNT_LINE_ITEM(
15:47:50 154  	      in_discount_id =>  f_discount.ID,
15:47:50 155  	      in_line_item_id => var_new_line_item_id
15:47:50 156  	    );
15:47:50 157  	  END LOOP;
15:47:50 158  	END LOOP;
15:47:50 159  
15:47:50 160  EXCEPTION
15:47:50 161  WHEN BAD_INVOICE_ID THEN
15:47:50 162  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 163  	  SPROC_NAME, 'No such license');
15:47:50 164  WHEN BAD_OFFER_ID THEN
15:47:50 165  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 166  	  SPROC_NAME, 'No such offer');
15:47:50 167  WHEN BAD_DISCOUNT THEN
15:47:50 168  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 169  	  SPROC_NAME, 'Bad Discount');
15:47:50 170  WHEN OTHERS THEN
15:47:50 171  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 172  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 173  END ADD_LINE_ITEMS;
15:47:50 174  
15:47:50 175  /******************************************************************************/
15:47:50 176  
15:47:50 177  PROCEDURE UPDATE_LINE_ITEM_AMOUNT (
15:47:50 178  	in_line_item_id    IN NUMBER,
15:47:50 179  	in_amount	   IN NUMBER,
15:47:50 180  	in_discount_amount IN NUMBER,
15:47:50 181  	in_taxes_amount    IN NUMBER
15:47:50 182  ) AS
15:47:50 183  SPROC_NAME CONSTANT VARCHAR2(24) := 'UPDATE_LINE_ITEM_AMOUNTS';
15:47:50 184  -- VARIABLES
15:47:50 185  temp_line_item_id NUMBER;
15:47:50 186  -- EXCEPTIONS
15:47:50 187  BAD_LINE_ITEM_ID EXCEPTION;
15:47:50 188  BEGIN
15:47:50 189  
15:47:50 190  	-- Check that line item exists
15:47:50 191  	BEGIN
15:47:50 192  	  SELECT
15:47:50 193  	    LINE_ITEM.ID into temp_line_item_id
15:47:50 194  	  FROM
15:47:50 195  	    LINE_ITEM
15:47:50 196  	  WHERE
15:47:50 197  	    LINE_ITEM.ID = in_line_item_id;
15:47:50 198  	  EXCEPTION
15:47:50 199  	    WHEN NO_DATA_FOUND THEN
15:47:50 200  	      RAISE BAD_LINE_ITEM_ID;
15:47:50 201  	END;
15:47:50 202  
15:47:50 203  	-- Update line item
15:47:50 204  	PROCS_LINE_ITEMS_CRU_V22.UPDATE_LINE_ITEM(
15:47:50 205  	  in_line_item_id    => in_line_item_id,
15:47:50 206  	  in_amount	     => in_amount,
15:47:50 207  	  in_discount_amount => in_discount_amount,
15:47:50 208  	  in_taxes_amount    => in_taxes_amount
15:47:50 209  	);
15:47:50 210  
15:47:50 211  EXCEPTION
15:47:50 212  WHEN BAD_LINE_ITEM_ID THEN
15:47:50 213  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 214  	  SPROC_NAME, 'No such line item');
15:47:50 215  WHEN OTHERS THEN
15:47:50 216  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 217  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 218  END UPDATE_LINE_ITEM_AMOUNT;
15:47:50 219  
15:47:50 220  /******************************************************************************/
15:47:50 221  
15:47:50 222  PROCEDURE GET_INVOICE_LINE_ITEMS (
15:47:50 223  /*
15:47:50 224  Throws exceptions:
15:47:50 225  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 226  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 227  */
15:47:50 228  	in_invoice_id  IN NUMBER,
15:47:50 229  	out_result_set OUT SYS_REFCURSOR
15:47:50 230  ) AS
15:47:50 231  -- VARIABLES
15:47:50 232  SPROC_NAME      CONSTANT VARCHAR2(22) := 'GET_INVOICE_LINE_ITEMS';
15:47:50 233  temp_invoice_id NUMBER;
15:47:50 234  
15:47:50 235  -- EXCEPTIONS
15:47:50 236  BAD_INVOICE_ID EXCEPTION;
15:47:50 237  BEGIN
15:47:50 238  
15:47:50 239  	-- Check that given invoice exists
15:47:50 240  	BEGIN
15:47:50 241  	  SELECT
15:47:50 242  	    INVOICE.ID into temp_invoice_id
15:47:50 243  	  FROM
15:47:50 244  	    INVOICE
15:47:50 245  	  WHERE
15:47:50 246  	    INVOICE.ID = in_invoice_id;
15:47:50 247  	  EXCEPTION
15:47:50 248  	    WHEN NO_DATA_FOUND THEN
15:47:50 249  	      RAISE BAD_INVOICE_ID;
15:47:50 250  	END;
15:47:50 251  
15:47:50 252  	-- Select line items
15:47:50 253  	OPEN out_result_set FOR
15:47:50 254  	SELECT
15:47:50 255  	  LINE_ITEM.ID,
15:47:50 256  	  LINE_ITEM.AMOUNT,
15:47:50 257  	  LINE_ITEM.CREATE_DATE,
15:47:50 258  	  LINE_ITEM.CREATED_BY,
15:47:50 259  	  LINE_ITEM.INVOICE_ID,
15:47:50 260  	  LINE_ITEM.DISCOUNT_AMOUNT,
15:47:50 261  	  LINE_ITEM.TAXES_AMOUNT,
15:47:50 262  	  LINE_ITEM.PRODUCT_OFFER_ID
15:47:50 263  	FROM
15:47:50 264  	  LINE_ITEM
15:47:50 265  	WHERE
15:47:50 266  	  LINE_ITEM.INVOICE_ID = in_invoice_id;
15:47:50 267  
15:47:50 268  EXCEPTION
15:47:50 269  WHEN BAD_INVOICE_ID THEN
15:47:50 270  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 271  	  SPROC_NAME, 'No such invoice');
15:47:50 272  WHEN OTHERS THEN
15:47:50 273  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 274  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 275  END GET_INVOICE_LINE_ITEMS;
15:47:50 276  
15:47:50 277  /******************************************************************************/
15:47:50 278  
15:47:50 279  PROCEDURE GET_LINE_ITEM_TAXES (
15:47:50 280  /*
15:47:50 281  Throws exceptions:
15:47:50 282  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 283  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 284  */
15:47:50 285  	in_line_item_id IN  NUMBER,
15:47:50 286  	out_result_set	OUT SYS_REFCURSOR
15:47:50 287  ) AS
15:47:50 288  -- VARIABLES
15:47:50 289  SPROC_NAME	CONSTANT VARCHAR2(19) := 'GET_LINE_ITEM_TAXES';
15:47:50 290  temp_line_item_id NUMBER;
15:47:50 291  -- EXCEPTIONS
15:47:50 292  BAD_LINE_ITEM_ID EXCEPTION;
15:47:50 293  BEGIN
15:47:50 294  
15:47:50 295  	-- Check that line item exists
15:47:50 296  	BEGIN
15:47:50 297  	  SELECT
15:47:50 298  	    LINE_ITEM.ID into temp_line_item_id
15:47:50 299  	  FROM
15:47:50 300  	    LINE_ITEM
15:47:50 301  	  WHERE
15:47:50 302  	    LINE_ITEM.ID = in_line_item_id;
15:47:50 303  	  EXCEPTION
15:47:50 304  	    WHEN NO_DATA_FOUND THEN
15:47:50 305  	      RAISE BAD_LINE_ITEM_ID;
15:47:50 306  	END;
15:47:50 307  
15:47:50 308  	-- Get all taxes for given line item
15:47:50 309  	OPEN out_result_set FOR
15:47:50 310  	SELECT
15:47:50 311  	  TAX.ID,
15:47:50 312  	  TAX.CALCULATED_AMOUNT,
15:47:50 313  	  TAX.CREATE_DATE,
15:47:50 314  	  TAX.CREATED_BY,
15:47:50 315  	  TAX.EFFECTIVE_RATE,
15:47:50 316  	  TAX.EXT_RESULT,
15:47:50 317  	  TAX.EXT_TAX_TYPE,
15:47:50 318  	  TAX.IMPOSITION,
15:47:50 319  	  TAX.IMPOSITION_TYPE,
15:47:50 320  	  TAX.JURISDICTION_ID,
15:47:50 321  	  TAX.JURISDICTION_LEVEL_ID,
15:47:50 322  	  TAX.JURISDICTION_NAME,
15:47:50 323  	  TAX.LINE_ITEM_ID,
15:47:50 324  	  TAX.TAX_RULE_ID,
15:47:50 325  	  TAX.TAX_TYPE_ID,
15:47:50 326  	  TAX.TAXABLE_AMOUNT
15:47:50 327  	FROM
15:47:50 328  	  TAX
15:47:50 329  	WHERE
15:47:50 330  	  TAX.LINE_ITEM_ID = in_line_item_id;
15:47:50 331  
15:47:50 332  EXCEPTION
15:47:50 333  WHEN BAD_LINE_ITEM_ID THEN
15:47:50 334  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 335  	  SPROC_NAME, 'No such line item');
15:47:50 336  WHEN OTHERS THEN
15:47:50 337  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 338  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 339  END GET_LINE_ITEM_TAXES;
15:47:50 340  
15:47:50 341  -- norlov: #38770
15:47:50 342  PROCEDURE GET_LINE_ITEM_DISCOUNTS (
15:47:50 343  /*
15:47:50 344  Throws exceptions:
15:47:50 345  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 346  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 347  */
15:47:50 348  	in_line_item_id IN  NUMBER,
15:47:50 349  	out_result_set	OUT SYS_REFCURSOR
15:47:50 350  ) AS
15:47:50 351  -- VARIABLES
15:47:50 352  SPROC_NAME	CONSTANT VARCHAR2(23) := 'GET_LINE_ITEM_DISCOUNTS';
15:47:50 353  temp_line_item_id NUMBER;
15:47:50 354  -- EXCEPTIONS
15:47:50 355  BAD_LINE_ITEM_ID EXCEPTION;
15:47:50 356  BEGIN
15:47:50 357  
15:47:50 358  	-- Check that line item exists
15:47:50 359  	BEGIN
15:47:50 360  	  SELECT
15:47:50 361  	    LINE_ITEM.ID into temp_line_item_id
15:47:50 362  	  FROM
15:47:50 363  	    LINE_ITEM
15:47:50 364  	  WHERE
15:47:50 365  	    LINE_ITEM.ID = in_line_item_id;
15:47:50 366  	  EXCEPTION
15:47:50 367  	    WHEN NO_DATA_FOUND THEN
15:47:50 368  	      RAISE BAD_LINE_ITEM_ID;
15:47:50 369  	END;
15:47:50 370  
15:47:50 371  	-- Get all discounts for given line item
15:47:50 372  	OPEN out_result_set FOR
15:47:50 373  	SELECT
15:47:50 374  	  DISCOUNT.FIXED_AMOUNT,
15:47:50 375  	  DISCOUNT.NAME,
15:47:50 376  	  DISCOUNT.ID,
15:47:50 377  	  DISCOUNT.PERCENT_AMOUNT
15:47:50 378  	FROM
15:47:50 379  	  DISCOUNT_LINE_ITEM
15:47:50 380  	  INNER JOIN DISCOUNT ON DISCOUNT_LINE_ITEM.DISCOUNT_ID = DISCOUNT.ID
15:47:50 381  	WHERE
15:47:50 382  	  DISCOUNT_LINE_ITEM.LINE_ITEM_ID = in_line_item_id;
15:47:50 383  
15:47:50 384  EXCEPTION
15:47:50 385  WHEN BAD_LINE_ITEM_ID THEN
15:47:50 386  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 387  	  SPROC_NAME, 'No such line item');
15:47:50 388  WHEN OTHERS THEN
15:47:50 389  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 390  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 391  END GET_LINE_ITEM_DISCOUNTS;
15:47:50 392  /******************************************************************************/
15:47:50 393  
15:47:50 394  PROCEDURE CALCULATE_LINE_ITEM_AMOUNT (
15:47:50 395  /*
15:47:50 396  Throws exceptions:
15:47:50 397  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 398  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 399  */
15:47:50 400  	in_line_item_id     IN	NUMBER,
15:47:50 401  	out_amount	    OUT NUMBER
15:47:50 402  ) AS
15:47:50 403  -- VARIABLES
15:47:50 404  SPROC_NAME CONSTANT VARCHAR2(26) := 'CALCULATE_LINE_ITEM_AMOUNT';
15:47:50 405  -- EXCEPTIONS
15:47:50 406  BAD_LINE_ITEM_ID EXCEPTION;
15:47:50 407  BEGIN
15:47:50 408  
15:47:50 409  	BEGIN
15:47:50 410  	  SELECT
15:47:50 411  	    LINE_ITEM.AMOUNT into out_amount
15:47:50 412  	  FROM
15:47:50 413  	    LINE_ITEM
15:47:50 414  	  WHERE
15:47:50 415  	    LINE_ITEM.ID = in_line_item_id;
15:47:50 416  	  EXCEPTION
15:47:50 417  	    WHEN NO_DATA_FOUND THEN
15:47:50 418  	      RAISE BAD_LINE_ITEM_ID;
15:47:50 419  	END;
15:47:50 420  
15:47:50 421  EXCEPTION
15:47:50 422  WHEN BAD_LINE_ITEM_ID THEN
15:47:50 423  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 424  	  SPROC_NAME, 'No such line item');
15:47:50 425  WHEN OTHERS THEN
15:47:50 426  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 427  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 428  END CALCULATE_LINE_ITEM_AMOUNT;
15:47:50 429  
15:47:50 430  /******************************************************************************/
15:47:50 431  
15:47:50 432  FUNCTION F_CALCULATE_LINE_ITEM_AMOUNT (
15:47:50 433  /*
15:47:50 434  Throws exceptions:
15:47:50 435  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 436  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 437  */
15:47:50 438  	in_line_item_id     IN	NUMBER
15:47:50 439  ) RETURN NUMBER AS
15:47:50 440  var_invoice_amount NUMBER(10, 2);
15:47:50 441  BEGIN
15:47:50 442  	PROCS_LINE_ITEMS_V22.CALCULATE_LINE_ITEM_AMOUNT(in_line_item_id, var_invoice_amount);
15:47:50 443  	RETURN var_invoice_amount;
15:47:50 444  END F_CALCULATE_LINE_ITEM_AMOUNT;
15:47:50 445  
15:47:50 446  END PROCS_LINE_ITEMS_V22;
15:47:50 447  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.22
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LOCKING_V22" AS
15:47:50   2  
15:47:50   3  /*
15:47:50   4  PROCEDURE INITIALIZE_SYSTEM AS
15:47:50   5  SPROC_NAME CONSTANT VARCHAR2(17) := 'INITIALIZE_SYSTEM';
15:47:50   6  -- VARIABLES
15:47:50   7  var_account_ids SYS_REFCURSOR;
15:47:50   8  var_account_id  NUMBER;
15:47:50   9  BEGIN
15:47:50  10  
15:47:50  11  	OPEN var_account_ids FOR
15:47:50  12  	SELECT
15:47:50  13  	  ACCOUNT.ID
15:47:50  14  	FROM
15:47:50  15  	  ACCOUNT;
15:47:50  16  
15:47:50  17  	LOOP
15:47:50  18  	  FETCH var_account_ids into var_account_id;
15:47:50  19  	  EXIT WHEN var_account_ids%NOTFOUND;
15:47:50  20  	  BEGIN
15:47:50  21  	    INITIALIZE_ACCOUNT(var_account_id);
15:47:50  22  	    EXCEPTION
15:47:50  23  	      WHEN OTHERS THEN
15:47:50  24  		NULL;
15:47:50  25  	  END;
15:47:50  26  	END LOOP;
15:47:50  27  
15:47:50  28  END INITIALIZE_SYSTEM;
15:47:50  29  
15:47:50  30  PROCEDURE INITIALIZE_ACCOUNT (
15:47:50  31  	in_account_id IN NUMBER
15:47:50  32  ) AS
15:47:50  33  SPROC_NAME CONSTANT VARCHAR2(18) := 'INITIALIZE_ACCOUNT';
15:47:50  34  -- EXCEPTIONS
15:47:50  35  ACCOUNT_ALREADY_INITIALIZED EXCEPTION;
15:47:50  36  BEGIN
15:47:50  37  
15:47:50  38  	BEGIN
15:47:50  39  	  INSERT INTO ACCOUNT_LOCK(
15:47:50  40  	    ACCOUNT_ID,
15:47:50  41  	    LOCK_KEY,
15:47:50  42  	    END_DATE,
15:47:50  43  	    CREATED_BY,
15:47:50  44  	    REASON
15:47:50  45  	  ) VALUES (
15:47:50  46  	    in_account_id,
15:47:50  47  	    'initialization key',
15:47:50  48  	    SYSDATE,
15:47:50  49  	    'system',
15:47:50  50  	    'initialization'
15:47:50  51  	  );
15:47:50  52  	  EXCEPTION
15:47:50  53  	    WHEN DUP_VAL_ON_INDEX THEN
15:47:50  54  	      RAISE ACCOUNT_ALREADY_INITIALIZED;
15:47:50  55  	END;
15:47:50  56  
15:47:50  57  EXCEPTION
15:47:50  58  WHEN ACCOUNT_ALREADY_INITIALIZED THEN
15:47:50  59  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:50  60  	  SPROC_NAME, 'Account already initialized');
15:47:50  61  WHEN OTHERS THEN
15:47:50  62  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50  63  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50  64  END;
15:47:50  65  
15:47:50  66  PROCEDURE INITIALIZE_GROUP (
15:47:50  67  	in_group_id IN NUMBER
15:47:50  68  ) AS
15:47:50  69  SPROC_NAME CONSTANT VARCHAR2(16) := 'INITIALIZE_GROUP';
15:47:50  70  -- VARIABLES
15:47:50  71  var_account_id NUMBER;
15:47:50  72  -- EXCEPTIONS
15:47:50  73  BAD_GROUP_ID		EXCEPTION;
15:47:50  74  GROUP_ALREADY_INITIALIZED EXCEPTION;
15:47:50  75  BEGIN
15:47:50  76  
15:47:50  77  	BEGIN
15:47:50  78  	  SELECT
15:47:50  79  	    ACCOUNT.ID into var_account_id
15:47:50  80  	  FROM
15:47:50  81  	    ACCOUNT
15:47:50  82  	  WHERE
15:47:50  83  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:50  84  	  EXCEPTION
15:47:50  85  	    WHEN NO_DATA_FOUND THEN
15:47:50  86  	     RAISE BAD_GROUP_ID;
15:47:50  87  	END;
15:47:50  88  
15:47:50  89  	BEGIN
15:47:50  90  	  INSERT INTO ACCOUNT_LOCK (
15:47:50  91  	    ACCOUNT_ID,
15:47:50  92  	    LOCK_KEY,
15:47:50  93  	    END_DATE,
15:47:50  94  	    CREATED_BY,
15:47:50  95  	    REASON
15:47:50  96  	  ) VALUES (
15:47:50  97  	    var_account_id,
15:47:50  98  	    'initialization key',
15:47:50  99  	    SYSDATE,
15:47:50 100  	    'system',
15:47:50 101  	    'initialization'
15:47:50 102  	  );
15:47:50 103  	  EXCEPTION
15:47:50 104  	    WHEN DUP_VAL_ON_INDEX THEN
15:47:50 105  	      RAISE GROUP_ALREADY_INITIALIZED;
15:47:50 106  	END;
15:47:50 107  
15:47:50 108  EXCEPTION
15:47:50 109  WHEN BAD_GROUP_ID THEN
15:47:50 110  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 111  	  SPROC_NAME, 'No such account with given group id');
15:47:50 112  WHEN GROUP_ALREADY_INITIALIZED THEN
15:47:50 113  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:50 114  	  SPROC_NAME, 'Group already initialized');
15:47:50 115  WHEN OTHERS THEN
15:47:50 116  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 117  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 118  END INITIALIZE_GROUP;
15:47:50 119  */
15:47:50 120  
15:47:50 121  PROCEDURE LOCK_ACCOUNT (
15:47:50 122  	in_group_id    IN NUMBER,
15:47:50 123  	in_lock_key    IN VARCHAR2,
15:47:50 124  	in_seconds_num IN NUMBER,
15:47:50 125  	in_created_by  IN VARCHAR2,
15:47:50 126  	in_reason      IN VARCHAR2
15:47:50 127  ) AS
15:47:50 128  SPROC_NAME CONSTANT VARCHAR2(12) := 'LOCK_ACCOUNT';
15:47:50 129  -- CONSTANTS
15:47:50 130  one_second_interval CONSTANT INTERVAL DAY TO SECOND := INTERVAL '0 00:00:01' DAY TO SECOND;
15:47:50 131  -- VARIABLES
15:47:50 132  var_account_id NUMBER;
15:47:50 133  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:50 134  var_date		DATE := SYSDATE;
15:47:50 135  var_lock_end_date DATE;
15:47:50 136  -- EXCEPTIONS
15:47:50 137  BAD_GROUP_ID   EXCEPTION;
15:47:50 138  ALREADY_LOCKED EXCEPTION;
15:47:50 139  BEGIN
15:47:50 140  
15:47:50 141  	BEGIN
15:47:50 142  	  SELECT
15:47:50 143  	    ACCOUNT.ID into var_account_id
15:47:50 144  	  FROM
15:47:50 145  	    ACCOUNT
15:47:50 146  	  WHERE
15:47:50 147  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:50 148  	  EXCEPTION
15:47:50 149  	    WHEN NO_DATA_FOUND THEN
15:47:50 150  	      RAISE BAD_GROUP_ID;
15:47:50 151  	END;
15:47:50 152  
15:47:50 153  	var_lock_end_date := var_date + ( in_seconds_num * one_second_interval );
15:47:50 154  
15:47:50 155  	BEGIN
15:47:50 156  
15:47:50 157  	  INSERT INTO ACCOUNT_LOCK (
15:47:50 158  	    ACCOUNT_ID,
15:47:50 159  	    LOCK_KEY,
15:47:50 160  	    END_DATE,
15:47:50 161  	    CREATED_BY,
15:47:50 162  	    REASON
15:47:50 163  	  ) VALUES (
15:47:50 164  	    var_account_id,
15:47:50 165  	    in_lock_key,
15:47:50 166  	    var_lock_end_date,
15:47:50 167  	    in_created_by,
15:47:50 168  	    in_reason
15:47:50 169  	  );
15:47:50 170  
15:47:50 171  	  EXCEPTION
15:47:50 172  	    WHEN DUP_VAL_ON_INDEX THEN
15:47:50 173  	      -- This rows was created before... I will try to update it
15:47:50 174  	      BEGIN
15:47:50 175  
15:47:50 176  		UPDATE
15:47:50 177  		  ACCOUNT_LOCK
15:47:50 178  		SET
15:47:50 179  		  ACCOUNT_LOCK.LOCK_KEY = in_lock_key,
15:47:50 180  		  ACCOUNT_LOCK.END_DATE = var_lock_end_date,
15:47:50 181  		  ACCOUNT_LOCK.CREATED_BY = in_created_by,
15:47:50 182  		  ACCOUNT_LOCK.REASON = in_reason
15:47:50 183  		WHERE
15:47:50 184  		  ACCOUNT_LOCK.ACCOUNT_ID = var_account_id
15:47:50 185  		  AND ACCOUNT_LOCK.END_DATE <= var_date;
15:47:50 186  
15:47:50 187  		IF SQL%ROWCOUNT = 0 THEN
15:47:50 188  		  RAISE ALREADY_LOCKED;
15:47:50 189  		END IF;
15:47:50 190  
15:47:50 191  	      END;
15:47:50 192  	END;
15:47:50 193  
15:47:50 194  EXCEPTION
15:47:50 195  WHEN BAD_GROUP_ID THEN
15:47:50 196  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 197  	  SPROC_NAME, 'No such group id');
15:47:50 198  WHEN ALREADY_LOCKED THEN
15:47:50 199  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:50 200  	  SPROC_NAME, 'Account already locked');
15:47:50 201  WHEN OTHERS THEN
15:47:50 202  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 203  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 204  END LOCK_ACCOUNT;
15:47:50 205  
15:47:50 206  /******************************************************************************/
15:47:50 207  
15:47:50 208  PROCEDURE RELEASE_LOCK (
15:47:50 209  	in_group_id IN NUMBER,
15:47:50 210  	in_lock_key IN VARCHAR2
15:47:50 211  ) AS
15:47:50 212  SPROC_NAME CONSTANT VARCHAR2(12) := 'RELEASE_LOCK';
15:47:50 213  -- VARIABLES
15:47:50 214  var_account_id NUMBER;
15:47:50 215  -- arosolovskiy: using data variable instead of direct get data calls (#38860)
15:47:50 216  var_date DATE := SYSDATE;
15:47:50 217  -- EXCEPTIONS
15:47:50 218  BAD_GROUP_ID		EXCEPTION;
15:47:50 219  COULD_NOT_RELEASE_ACCOUNT EXCEPTION;
15:47:50 220  BEGIN
15:47:50 221  
15:47:50 222  	BEGIN
15:47:50 223  	  SELECT
15:47:50 224  	    ACCOUNT.ID into var_account_id
15:47:50 225  	  FROM
15:47:50 226  	    ACCOUNT
15:47:50 227  	  WHERE
15:47:50 228  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:50 229  	  EXCEPTION
15:47:50 230  	    WHEN NO_DATA_FOUND THEN
15:47:50 231  	      RAISE BAD_GROUP_ID;
15:47:50 232  	END;
15:47:50 233  
15:47:50 234  	UPDATE
15:47:50 235  	  ACCOUNT_LOCK
15:47:50 236  	SET
15:47:50 237  	  ACCOUNT_LOCK.END_DATE = var_date
15:47:50 238  	WHERE
15:47:50 239  	  ACCOUNT_LOCK.ACCOUNT_ID = var_account_id
15:47:50 240  	  -- AND ACCOUNT_LOCK.END_DATE > var_date
15:47:50 241  	  AND ACCOUNT_LOCK.LOCK_KEY = in_lock_key;
15:47:50 242  
15:47:50 243  	IF SQL%ROWCOUNT = 0 THEN
15:47:50 244  	  RAISE COULD_NOT_RELEASE_ACCOUNT;
15:47:50 245  	END IF;
15:47:50 246  
15:47:50 247  EXCEPTION
15:47:50 248  WHEN BAD_GROUP_ID THEN
15:47:50 249  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 250  	  SPROC_NAME, 'No such group id');
15:47:50 251  WHEN COULD_NOT_RELEASE_ACCOUNT THEN
15:47:50 252  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:50 253  	  SPROC_NAME, 'Could not release account. Maybe you are not owner of this lock, or lock is expired');
15:47:50 254  WHEN OTHERS THEN
15:47:50 255  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 256  	  SPROC_NAME, 'Unknown error');
15:47:50 257  END RELEASE_LOCK;
15:47:50 258  
15:47:50 259  END PROCS_LOCKING_V22;
15:47:50 260  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.07
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_OFFER_CHAIN_V22" AS
15:47:50   2  
15:47:50   3  PROCEDURE OC_ID_BY_ITUNES_PRODUCT_ID(
15:47:50   4  	in_itunes_product_id IN  OFFER_CHAIN.ITUNES_PRODUCT_ID%TYPE,
15:47:50   5  	out_data	     OUT OFFER_CHAIN.ID%TYPE
15:47:50   6  ) AS
15:47:50   7  	SPROC_NAME CONSTANT VARCHAR2(32) := 'OC_ID_BY_ITUNES_PRODUCT_ID';
15:47:50   8  BEGIN
15:47:50   9  	SELECT
15:47:50  10  	  ID INTO out_data
15:47:50  11  	FROM
15:47:50  12  	  OFFER_CHAIN
15:47:50  13  	WHERE
15:47:50  14  	  ITUNES_PRODUCT_ID = in_itunes_product_id;
15:47:50  15  EXCEPTION
15:47:50  16  	WHEN NO_DATA_FOUND THEN NULL;
15:47:50  17  END OC_ID_BY_ITUNES_PRODUCT_ID;
15:47:50  18  
15:47:50  19  PROCEDURE OFFER_CHAIN_ID_BY_AMAZON_SKU(
15:47:50  20  	in_amazon_appstore_sku IN  OFFER_CHAIN.AMAZON_APPSTORE_SKU%TYPE,
15:47:50  21  	out_data	       OUT OFFER_CHAIN.ID%TYPE
15:47:50  22  ) AS
15:47:50  23  SPROC_NAME CONSTANT VARCHAR2(32) := 'OFFER_CHAIN_ID_BY_AMAZON_SKU';
15:47:50  24  BEGIN
15:47:50  25  	SELECT
15:47:50  26  	  ID INTO out_data
15:47:50  27  	FROM
15:47:50  28  	  OFFER_CHAIN
15:47:50  29  	WHERE
15:47:50  30  	  AMAZON_APPSTORE_SKU = in_amazon_appstore_sku;
15:47:50  31  EXCEPTION
15:47:50  32  	WHEN NO_DATA_FOUND THEN NULL;
15:47:50  33  END OFFER_CHAIN_ID_BY_AMAZON_SKU;
15:47:50  34  
15:47:50  35  PROCEDURE GET_OFFER_CHAIN_BY_ID (
15:47:50  36  	in_offer_chain_id IN   NUMBER,
15:47:50  37  	out_result_set	  OUT  SYS_REFCURSOR
15:47:50  38  ) AS
15:47:50  39  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_OFFER_CHAIN_BY_ID';
15:47:50  40  BEGIN
15:47:50  41  
15:47:50  42  	-- Get offer chain informations
15:47:50  43  	OPEN out_result_set FOR
15:47:50  44  	  SELECT
15:47:50  45  	    OC.ID,
15:47:50  46  	    OC.NAME,
15:47:50  47  	    OC.ADOPTABILITY_WINDOW_START_DATE,
15:47:50  48  	    OC.ADOPTABILITY_WINDOW_END_DATE,
15:47:50  49  	    OC.DESCRIPTION,
15:47:50  50  	    OC.IS_GIFT_CERTIFICATE,
15:47:50  51  	    OC.OFFER_CHAIN_STATUS_ID,
15:47:50  52  	    OC.PRODUCT_URI,
15:47:50  53  	    OC.BILLING_SOURCE_ID,
15:47:50  54  	    OC.VENDOR_SOURCE_ID,
15:47:50  55  	    OC.GROUP_ACCOUNT_TYPE_ID,
15:47:50  56  	    DECODE(OC.IS_ADDRESS_REQUIRED,1,'true','false') IS_ADDRESS_REQUIRED,
15:47:50  57  	    OC.AMAZON_APPSTORE_SKU,
15:47:50  58  	    OC.ITUNES_PRODUCT_ID
15:47:50  59  	  FROM
15:47:50  60  	    OFFER_CHAIN OC
15:47:50  61  	  WHERE
15:47:50  62  	    OC.ID = in_offer_chain_id
15:47:50  63  	    AND ROWNUM <= 1;
15:47:50  64  
15:47:50  65  EXCEPTION
15:47:50  66  WHEN OTHERS THEN
15:47:50  67  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50  68  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50  69  END GET_OFFER_CHAIN_BY_ID;
15:47:50  70  
15:47:50  71  PROCEDURE GET_OFFER_CHAINS_BY_IDS (
15:47:50  72  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
15:47:50  73  	out_result_set	   OUT SYS_REFCURSOR
15:47:50  74  ) AS
15:47:50  75  SPROC_NAME CONSTANT VARCHAR2(23) := 'GET_OFFER_CHAINS_BY_IDS';
15:47:50  76  -- EXCEPTIONS
15:47:50  77  BAD_OFFER_CHAINS_IDS EXCEPTION;
15:47:50  78  BEGIN
15:47:50  79  
15:47:50  80  	IF (in_offer_chain_ids IS NULL) THEN
15:47:50  81  	  RAISE BAD_OFFER_CHAINS_IDS;
15:47:50  82  	END IF;
15:47:50  83  
15:47:50  84  	OPEN out_result_set FOR
15:47:50  85  	SELECT
15:47:50  86  	  OCH.ID,
15:47:50  87  	  OCH.NAME,
15:47:50  88  	  OCH.DESCRIPTION,
15:47:50  89  	  OCH.OFFER_CHAIN_STATUS_ID,
15:47:50  90  	  OCH.ADOPTABILITY_WINDOW_START_DATE,
15:47:50  91  	  OCH.ADOPTABILITY_WINDOW_END_DATE,
15:47:50  92  	  OCH.IS_GIFT_CERTIFICATE,
15:47:50  93  	  PROCS_OFFER_CHAIN_V22.CALCULATE_OFFER_CHAIN_AMOUNT(OCH.ID) AS PRICE,
15:47:50  94  	  PROCS_OFFER_CHAIN_V22.IS_OFFER_CHAIN_CANCELABLE(OCH.ID) AS IS_CANCELABLE,
15:47:50  95  	  OCH.VENDOR_SOURCE_ID,
15:47:50  96  	  DECODE(OCH.IS_ADDRESS_REQUIRED,1,'true','false') IS_ADDRESS_REQUIRED
15:47:50  97  	FROM
15:47:50  98  	  OFFER_CHAIN OCH
15:47:50  99  	WHERE
15:47:50 100  	  OCH.ID IN (SELECT * FROM TABLE(in_offer_chain_ids));
15:47:50 101  
15:47:50 102  EXCEPTION
15:47:50 103  WHEN BAD_OFFER_CHAINS_IDS THEN
15:47:50 104  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:50 105  	  SPROC_NAME, 'Invalid offer chains ids');
15:47:50 106  WHEN OTHERS THEN
15:47:50 107  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 108  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 109  END GET_OFFER_CHAINS_BY_IDS;
15:47:50 110  
15:47:50 111  PROCEDURE GET_OFFER_CHAINS_PRODUCTS (
15:47:50 112  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
15:47:50 113  	out_result_set	   OUT SYS_REFCURSOR
15:47:50 114  ) AS
15:47:50 115  SPROC_NAME CONSTANT VARCHAR2(25) := 'GET_OFFER_CHAINS_PRODUCTS';
15:47:50 116  -- EXCEPTIONS
15:47:50 117  BAD_OFFER_CHAINS_IDS EXCEPTION;
15:47:50 118  BEGIN
15:47:50 119  
15:47:50 120  	IF (in_offer_chain_ids IS NULL) THEN
15:47:50 121  	  RAISE BAD_OFFER_CHAINS_IDS;
15:47:50 122  	END IF;
15:47:50 123  
15:47:50 124  	OPEN out_result_set FOR
15:47:50 125  	SELECT
15:47:50 126  	  OOCH.OFFER_CHAIN_ID,
15:47:50 127  	  PO.PRODUCT_ID
15:47:50 128  	FROM
15:47:50 129  	  PRODUCT_OFFERING PO
15:47:50 130  	  INNER JOIN OFFER_PRODUCT_OFFERING OPO ON OPO.PRODUCT_OFFERING_ID = PO.ID
15:47:50 131  	  INNER JOIN OFFER_OFFER_CHAIN OOCH ON OOCH.OFFER_ID = OPO.OFFER_ID
15:47:50 132  	WHERE
15:47:50 133  	  OOCH.OFFER_CHAIN_ID IN (SELECT * FROM TABLE (in_offer_chain_ids));
15:47:50 134  
15:47:50 135  EXCEPTION
15:47:50 136  WHEN BAD_OFFER_CHAINS_IDS THEN
15:47:50 137  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:50 138  	  SPROC_NAME, 'Invalid offer chains ids');
15:47:50 139  WHEN OTHERS THEN
15:47:50 140  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 141  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 142  END GET_OFFER_CHAINS_PRODUCTS;
15:47:50 143  
15:47:50 144  PROCEDURE GET_OFFER_CHAINS_OFFERS (
15:47:50 145  	in_offer_chain_ids IN core_owner.NUMBER_TABLE,
15:47:50 146  	out_result_set	   OUT SYS_REFCURSOR
15:47:50 147  ) AS
15:47:50 148  SPROC_NAME CONSTANT VARCHAR2(23) := 'GET_OFFER_CHAINS_OFFERS';
15:47:50 149  -- EXCEPTIONS
15:47:50 150  BAD_OFFER_CHAINS_IDS EXCEPTION;
15:47:50 151  BEGIN
15:47:50 152  
15:47:50 153  	IF (in_offer_chain_ids IS NULL) THEN
15:47:50 154  	  RAISE BAD_OFFER_CHAINS_IDS;
15:47:50 155  	END IF;
15:47:50 156  
15:47:50 157  	OPEN out_result_set FOR
15:47:50 158  	SELECT
15:47:50 159  	  OOCH.OFFER_CHAIN_ID,
15:47:50 160  	  OOCH.OFFER_ID,
15:47:50 161  	  OOCH.INDEX_VALUE,
15:47:50 162  	  OOCH.NUM_RECURRENCES,
15:47:50 163  	  O.ENTITLEMENT_DURATION,
15:47:50 164  	  PROCS_OFFER_CHAIN_V22.CALCULATE_OFFER_AMOUNT(OOCH.OFFER_ID) AS PRICE
15:47:50 165  	FROM
15:47:50 166  	  OFFER O
15:47:50 167  	  INNER JOIN OFFER_OFFER_CHAIN OOCH ON OOCH.OFFER_ID = O.ID
15:47:50 168  	WHERE
15:47:50 169  	  OOCH.OFFER_CHAIN_ID IN (SELECT * FROM TABLE (in_offer_chain_ids));
15:47:50 170  
15:47:50 171  EXCEPTION
15:47:50 172  WHEN BAD_OFFER_CHAINS_IDS THEN
15:47:50 173  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:50 174  	  SPROC_NAME, 'Invalid offer chains ids');
15:47:50 175  WHEN OTHERS THEN
15:47:50 176  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 177  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 178  END GET_OFFER_CHAINS_OFFERS;
15:47:50 179  
15:47:50 180  PROCEDURE GET_OFFER_CHAINS_BY_PRODUCT (
15:47:50 181  	in_product_id  IN  NUMBER,
15:47:50 182  	out_result_set OUT SYS_REFCURSOR
15:47:50 183  )AS
15:47:50 184  -- VARIBLES
15:47:50 185  SPROC_NAME      CONSTANT VARCHAR2(27) := 'GET_OFFER_CHAINS_BY_PRODUCT';
15:47:50 186  temp_product_id NUMBER;
15:47:50 187  
15:47:50 188  -- EXCEPTIONS
15:47:50 189  BAD_PRODUCT_ID EXCEPTION;
15:47:50 190  BEGIN
15:47:50 191  
15:47:50 192  	-- Check that given product exists
15:47:50 193  	BEGIN
15:47:50 194  	  SELECT
15:47:50 195  	    PRODUCT.ID into temp_product_id
15:47:50 196  	  FROM
15:47:50 197  	    PRODUCT
15:47:50 198  	  WHERE
15:47:50 199  	    PRODUCT.ID = in_product_id;
15:47:50 200  	  EXCEPTION
15:47:50 201  	    WHEN NO_DATA_FOUND THEN
15:47:50 202  	      RAISE BAD_PRODUCT_ID;
15:47:50 203  	END;
15:47:50 204  
15:47:50 205  	-- Select all offer chains that contains given product
15:47:50 206  	OPEN out_result_set FOR
15:47:50 207  	SELECT
15:47:50 208  	  OFFER_CHAIN.ID,
15:47:50 209  	  OFFER_CHAIN.NAME,
15:47:50 210  	  OFFER_CHAIN.DESCRIPTION,
15:47:50 211  	  OFFER_CHAIN.ADOPTABILITY_WINDOW_START_DATE,
15:47:50 212  	  OFFER_CHAIN.ADOPTABILITY_WINDOW_END_DATE,
15:47:50 213  	  OFFER_CHAIN.OFFER_CHAIN_STATUS_ID,
15:47:50 214  	  OFFER_CHAIN.IS_GIFT_CERTIFICATE
15:47:50 215  	FROM
15:47:50 216  	  OFFER_CHAIN
15:47:50 217  	WHERE
15:47:50 218  	  OFFER_CHAIN.ID IN (
15:47:50 219  	    SELECT DISTINCT
15:47:50 220  	      OFFER_OFFER_CHAIN.OFFER_CHAIN_ID
15:47:50 221  	    FROM
15:47:50 222  	      OFFER_OFFER_CHAIN
15:47:50 223  	    WHERE
15:47:50 224  	      OFFER_OFFER_CHAIN.OFFER_ID IN (
15:47:50 225  		SELECT DISTINCT
15:47:50 226  		  OFFER_PRODUCT_OFFERING.OFFER_ID
15:47:50 227  		FROM
15:47:50 228  		  OFFER_PRODUCT_OFFERING
15:47:50 229  		WHERE
15:47:50 230  		  OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = in_product_id
15:47:50 231  	      )
15:47:50 232  	  );
15:47:50 233  
15:47:50 234  EXCEPTION
15:47:50 235  WHEN BAD_PRODUCT_ID THEN
15:47:50 236  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 237  	  SPROC_NAME, 'No such product');
15:47:50 238  WHEN OTHERS THEN
15:47:50 239  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 240  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 241  END GET_OFFER_CHAINS_BY_PRODUCT;
15:47:50 242  
15:47:50 243  PROCEDURE GET_OFFER_CHAIN_PRICE (
15:47:50 244  	in_offer_chain_id IN NUMBER,
15:47:50 245  	out_price	  OUT NUMBER
15:47:50 246  ) AS
15:47:50 247  -- VARIABLES
15:47:50 248  SPROC_NAME	  CONSTANT VARCHAR2(21) := 'GET_OFFER_CHAIN_PRICE';
15:47:50 249  temp_offer_chain_id NUMBER;
15:47:50 250  
15:47:50 251  -- EXCEPTION
15:47:50 252  BAD_OFFER_CHAIN_ID       EXCEPTION;
15:47:50 253  CAN_NOT_CALCULATE_AMOUNT EXCEPTION;
15:47:50 254  EXCEPTION_MESSAGE        VARCHAR2(1024);
15:47:50 255  BEGIN
15:47:50 256  
15:47:50 257  	-- Check that given offer chain exists
15:47:50 258  	BEGIN
15:47:50 259  	  SELECT
15:47:50 260  	    OFFER_CHAIN.ID into temp_offer_chain_id
15:47:50 261  	  FROM
15:47:50 262  	    OFFER_CHAIN
15:47:50 263  	  WHERE
15:47:50 264  	    OFFER_CHAIN.ID = in_offer_chain_id;
15:47:50 265  
15:47:50 266  	  EXCEPTION
15:47:50 267  	  WHEN NO_DATA_FOUND THEN
15:47:50 268  	    RAISE BAD_OFFER_CHAIN_ID;
15:47:50 269  	END;
15:47:50 270  
15:47:50 271  	BEGIN
15:47:50 272  	  out_price := CALCULATE_OFFER_CHAIN_AMOUNT(in_offer_chain_id);
15:47:50 273  	  EXCEPTION
15:47:50 274  	    WHEN OTHERS THEN
15:47:50 275  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:50 276  	      RAISE CAN_NOT_CALCULATE_AMOUNT;
15:47:50 277  	END;
15:47:50 278  
15:47:50 279  EXCEPTION
15:47:50 280  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:50 281  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 282  	  SPROC_NAME, 'Bad offer chain id');
15:47:50 283  WHEN CAN_NOT_CALCULATE_AMOUNT THEN
15:47:50 284  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:50 285  	  SPROC_NAME, 'Caould not calculate offer chain amount', EXCEPTION_MESSAGE);
15:47:50 286  WHEN OTHERS THEN
15:47:50 287  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 288  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 289  END GET_OFFER_CHAIN_PRICE;
15:47:50 290  
15:47:50 291  PROCEDURE GET_FIRST_OFFER(
15:47:50 292  	in_offer_chain_id IN  NUMBER,
15:47:50 293  	out_offer_id	  OUT NUMBER
15:47:50 294  ) AS
15:47:50 295  SPROC_NAME CONSTANT VARCHAR2(15) := 'GET_FIRST_OFFER';
15:47:50 296  BEGIN
15:47:50 297  	-- Seect first offer in offer chain
15:47:50 298  	SELECT
15:47:50 299  	  OFFER_ID into out_offer_id
15:47:50 300  	FROM (
15:47:50 301  	  SELECT
15:47:50 302  	    OFFER_OFFER_CHAIN.OFFER_ID
15:47:50 303  	  FROM
15:47:50 304  	    OFFER_OFFER_CHAIN
15:47:50 305  	  WHERE
15:47:50 306  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 307  	  ORDER BY
15:47:50 308  	    OFFER_OFFER_CHAIN.INDEX_VALUE ASC
15:47:50 309  	)
15:47:50 310  	WHERE
15:47:50 311  	  ROWNUM <= 1;
15:47:50 312  
15:47:50 313  EXCEPTION
15:47:50 314  WHEN NO_DATA_FOUND THEN
15:47:50 315  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 316  	  SPROC_NAME, 'No such offer chain');
15:47:50 317  WHEN OTHERS THEN
15:47:50 318  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 319  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 320  END GET_FIRST_OFFER;
15:47:50 321  
15:47:50 322  PROCEDURE GET_ACTIVE_OFFER_CHAINS (
15:47:50 323  	out_result_set OUT SYS_REFCURSOR
15:47:50 324  ) AS
15:47:50 325  SPROC_NAME CONSTANT VARCHAR2(23) := 'GET_ACTIVE_OFFER_CHAINS';
15:47:50 326  BEGIN
15:47:50 327  	OPEN out_result_set FOR
15:47:50 328  	SELECT
15:47:50 329  	  OFFER_CHAIN.ID,
15:47:50 330  	  OFFER_CHAIN.NAME,
15:47:50 331  	  OFFER_CHAIN.DESCRIPTION,
15:47:50 332  	  OFFER_CHAIN.ADOPTABILITY_WINDOW_START_DATE,
15:47:50 333  	  OFFER_CHAIN.ADOPTABILITY_WINDOW_END_DATE,
15:47:50 334  	  OFFER_CHAIN.OFFER_CHAIN_STATUS_ID,
15:47:50 335  	  OFFER_CHAIN.IS_GIFT_CERTIFICATE,
15:47:50 336  	  PROCS_OFFER_CHAIN_V22.IS_OFFER_CHAIN_CANCELABLE(OFFER_CHAIN.ID) AS "IS_CANCELABLE",
15:47:50 337  	  PRODUCT_OFFERING.PRODUCT_ID
15:47:50 338  	FROM
15:47:50 339  	  OFFER_CHAIN,
15:47:50 340  	  OFFER_OFFER_CHAIN,
15:47:50 341  	  OFFER_PRODUCT_OFFERING,
15:47:50 342  	  PRODUCT_OFFERING
15:47:50 343  	WHERE
15:47:50 344  	  OFFER_CHAIN.ID = OFFER_OFFER_CHAIN.OFFER_CHAIN_ID
15:47:50 345  	  and OFFER_OFFER_CHAIN.OFFER_ID = OFFER_PRODUCT_OFFERING.OFFER_ID
15:47:50 346  	  and OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
15:47:50 347  	  and OFFER_CHAIN.OFFER_CHAIN_STATUS_ID = GLOBAL_STATUSES_V22.OFFER_CHAIN_ACTIVE;
15:47:50 348  
15:47:50 349  EXCEPTION
15:47:50 350  WHEN OTHERS THEN
15:47:50 351  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 352  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 353  END GET_ACTIVE_OFFER_CHAINS;
15:47:50 354  
15:47:50 355  PROCEDURE GET_OFFER_CHAIN_PRODUCTS (
15:47:50 356  	in_offer_chain_id IN NUMBER,
15:47:50 357  	out_result_set	  OUT SYS_REFCURSOR
15:47:50 358  ) AS
15:47:50 359  -- VARIABLES
15:47:50 360  SPROC_NAME	  CONSTANT VARCHAR2(24) := 'GET_OFFER_CHAIN_PRODUCTS';
15:47:50 361  temp_offer_chain_id NUMBER;
15:47:50 362  
15:47:50 363  -- EXCEPTIONS
15:47:50 364  BAD_OFFER_CHAIN EXCEPTION;
15:47:50 365  BEGIN
15:47:50 366  
15:47:50 367  	-- Check that offer chain exists
15:47:50 368  	BEGIN
15:47:50 369  	  SELECT
15:47:50 370  	    OFFER_CHAIN.ID into temp_offer_chain_id
15:47:50 371  	  FROM
15:47:50 372  	    OFFER_CHAIN
15:47:50 373  	  WHERE
15:47:50 374  	    OFFER_CHAIN.ID = in_offer_chain_id
15:47:50 375  	    AND ROWNUM <= 1;
15:47:50 376  
15:47:50 377  	  EXCEPTION
15:47:50 378  	    WHEN OTHERS THEN
15:47:50 379  	      RAISE BAD_OFFER_CHAIN;
15:47:50 380  	END;
15:47:50 381  
15:47:50 382  	-- Select all products for given offer chain
15:47:50 383  	OPEN out_result_set FOR
15:47:50 384  	SELECT DISTINCT
15:47:50 385  	  PRODUCT_OFFERING.PRODUCT_ID
15:47:50 386  	FROM
15:47:50 387  	  PRODUCT_OFFERING
15:47:50 388  	WHERE
15:47:50 389  	  PRODUCT_OFFERING.ID IN (
15:47:50 390  	    SELECT DISTINCT
15:47:50 391  	      OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
15:47:50 392  	    FROM
15:47:50 393  	      OFFER_PRODUCT_OFFERING
15:47:50 394  	    WHERE
15:47:50 395  	      OFFER_PRODUCT_OFFERING.OFFER_ID IN (
15:47:50 396  		SELECT
15:47:50 397  		  OFFER_OFFER_CHAIN.OFFER_ID
15:47:50 398  		FROM
15:47:50 399  		  OFFER_OFFER_CHAIN
15:47:50 400  		WHERE
15:47:50 401  		  OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 402  	      )
15:47:50 403  	  );
15:47:50 404  
15:47:50 405  EXCEPTION
15:47:50 406  WHEN BAD_OFFER_CHAIN THEN
15:47:50 407  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 408  	  SPROC_NAME, 'No such offer chain');
15:47:50 409  WHEN OTHERS THEN
15:47:50 410  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 411  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 412  END GET_OFFER_CHAIN_PRODUCTS;
15:47:50 413  
15:47:50 414  FUNCTION CALCULATE_OFFER_CHAIN_END_DATE (
15:47:50 415  	in_offer_chain_id	  IN NUMBER,
15:47:50 416  	in_offer_chain_start_date IN DATE
15:47:50 417  ) RETURN DATE AS
15:47:50 418  -- VARIABLES
15:47:50 419  SPROC_NAME	     CONSTANT VARCHAR2(30) := 'CALCULATE_OFFER_CHAIN_END_DATE';
15:47:50 420  temp_offer_chain_id    NUMBER;
15:47:50 421  var_offer_chain_length NUMBER;
15:47:50 422  var_offer_duration     VARCHAR2(30);
15:47:50 423  var_offer_recurrences  NUMBER;
15:47:50 424  var_end_date	     DATE;
15:47:50 425  
15:47:50 426  var_offer_ym_interval INTERVAL YEAR TO MONTH;
15:47:50 427  var_offer_ds_interval INTERVAL DAY(3) TO SECOND;
15:47:50 428  var_offer_years	    NUMBER;
15:47:50 429  var_offer_months	    NUMBER;
15:47:50 430  var_offer_days	    NUMBER;
15:47:50 431  var_infinity_offers_count NUMBER;
15:47:50 432  
15:47:50 433  var_offers_set SYS_REFCURSOR;
15:47:50 434  
15:47:50 435  -- EXCEPTIONS
15:47:50 436  BAD_OFFER_CHAIN_ID EXCEPTION;
15:47:50 437  BEGIN
15:47:50 438  
15:47:50 439  	var_end_date := in_offer_chain_start_date;
15:47:50 440  
15:47:50 441  	-- Check that offer chain exists
15:47:50 442  	BEGIN
15:47:50 443  	  SELECT
15:47:50 444  	    OFFER_CHAIN.ID into temp_offer_chain_id
15:47:50 445  	  FROM
15:47:50 446  	    OFFER_CHAIN
15:47:50 447  	  WHERE
15:47:50 448  	    OFFER_CHAIN.ID = in_offer_chain_id;
15:47:50 449  	  EXCEPTION
15:47:50 450  	    WHEN NO_DATA_FOUND
15:47:50 451  	      THEN RAISE BAD_OFFER_CHAIN_ID;
15:47:50 452  	END;
15:47:50 453  
15:47:50 454  	SELECT
15:47:50 455  	  COUNT(*) into var_infinity_offers_count
15:47:50 456  	FROM
15:47:50 457  	  OFFER_OFFER_CHAIN
15:47:50 458  	WHERE
15:47:50 459  	  OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 460  	  AND OFFER_OFFER_CHAIN.NUM_RECURRENCES = GLOBAL_ENUMS_V22.OFFER_REC_INFINITY;
15:47:50 461  
15:47:50 462  	IF var_infinity_offers_count > 0 THEN
15:47:50 463  	  -- Offer chain contains offers with infinity num of recurrences
15:47:50 464  	  RETURN NULL;
15:47:50 465  	END IF;
15:47:50 466  
15:47:50 467  	-- Select offers durations
15:47:50 468  	OPEN var_offers_set FOR
15:47:50 469  	SELECT
15:47:50 470  	  OFFER.ENTITLEMENT_DURATION,
15:47:50 471  	  OFFER_OFFER_CHAIN.NUM_RECURRENCES
15:47:50 472  	FROM
15:47:50 473  	  OFFER_OFFER_CHAIN
15:47:50 474  	  INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
15:47:50 475  	WHERE
15:47:50 476  	  OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id;
15:47:50 477  
15:47:50 478  	-- Calculate sum of offers durations
15:47:50 479  	LOOP
15:47:50 480  	  FETCH var_offers_set INTO var_offer_duration, var_offer_recurrences;
15:47:50 481  	  EXIT WHEN var_offers_set%NOTFOUND;
15:47:50 482  	  PROCS_COMMON_V22.ISO8601DURATION_TO_INTERVALS(var_offer_duration, var_offer_years, var_offer_months, var_offer_days);
15:47:50 483  	  var_offer_ym_interval := var_offer_years||'-'||var_offer_months;
15:47:50 484  	  var_offer_ds_interval := var_offer_days||' 0:0:0';
15:47:50 485  	  var_end_date := var_end_date + ( var_offer_ym_interval * ( var_offer_recurrences + 1) ) + ( var_offer_ds_interval * ( var_offer_recurrences + 1) );
15:47:50 486  	END LOOP;
15:47:50 487  
15:47:50 488  	RETURN var_end_date;
15:47:50 489  
15:47:50 490  EXCEPTION
15:47:50 491  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:50 492  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 493  	  SPROC_NAME, 'No such offer chain');
15:47:50 494  WHEN OTHERS THEN
15:47:50 495  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 496  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 497  END CALCULATE_OFFER_CHAIN_END_DATE;
15:47:50 498  
15:47:50 499  FUNCTION CALCULATE_OFFER_AMOUNT (
15:47:50 500  	in_offer_id IN NUMBER
15:47:50 501  ) RETURN NUMBER AS
15:47:50 502  -- VARIABLES
15:47:50 503  SPROC_NAME    CONSTANT VARCHAR2(22) := 'CALCULATE_OFFER_AMOUNT';
15:47:50 504  temp_offer_id NUMBER;
15:47:50 505  
15:47:50 506  var_product_offering_set	    SYS_REFCURSOR;
15:47:50 507  var_product_offering_id	    NUMBER;
15:47:50 508  var_product_offering_price    NUMBER(10,6);
15:47:50 509  var_product_offering_t_amount NUMBER(10,6);
15:47:50 510  var_product_offering_quantity NUMBER;
15:47:50 511  
15:47:50 512  var_total_amount NUMBER(10,6);
15:47:50 513  var_final_amount NUMBER(10,2);
15:47:50 514  
15:47:50 515  var_percent_discount NUMBER(10,2);
15:47:50 516  var_fixed_discount NUMBER(10,6);
15:47:50 517  
15:47:50 518  -- EXCEPTIONS
15:47:50 519  BAD_OFFER_ID EXCEPTION;
15:47:50 520  BEGIN
15:47:50 521  
15:47:50 522  	BEGIN
15:47:50 523  	  SELECT
15:47:50 524  	    OFFER.ID into temp_offer_id
15:47:50 525  	  FROM
15:47:50 526  	    OFFER
15:47:50 527  	  WHERE
15:47:50 528  	    OFFER.ID = in_offer_id;
15:47:50 529  	  EXCEPTION
15:47:50 530  	    WHEN NO_DATA_FOUND THEN
15:47:50 531  	      RAISE BAD_OFFER_ID;
15:47:50 532  	END;
15:47:50 533  
15:47:50 534  	OPEN var_product_offering_set FOR
15:47:50 535  	SELECT
15:47:50 536  	  OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID,
15:47:50 537  	  PRODUCT_OFFERING.UNIT_PRICE,
15:47:50 538  	  PRODUCT_OFFERING.QUANTITY
15:47:50 539  	FROM
15:47:50 540  	  OFFER_PRODUCT_OFFERING
15:47:50 541  	  INNER JOIN PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
15:47:50 542  	WHERE
15:47:50 543  	  OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id;
15:47:50 544  
15:47:50 545  	var_total_amount := 0;
15:47:50 546  
15:47:50 547  	LOOP
15:47:50 548  	  FETCH var_product_offering_set into
15:47:50 549  	    var_product_offering_id,
15:47:50 550  	    var_product_offering_price,
15:47:50 551  	    var_product_offering_quantity;
15:47:50 552  	  EXIT WHEN var_product_offering_set%NOTFOUND;
15:47:50 553  
15:47:50 554  	  SELECT
15:47:50 555  	    SUM(DISCOUNT.FIXED_AMOUNT) into var_fixed_discount
15:47:50 556  	  FROM
15:47:50 557  	    DISCOUNT_PRODUCT_OFFERING
15:47:50 558  	    INNER JOIN DISCOUNT ON DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID = DISCOUNT.ID
15:47:50 559  	  WHERE
15:47:50 560  	    DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = var_product_offering_id
15:47:50 561  	    AND DISCOUNT.FIXED_AMOUNT IS NOT NULL;
15:47:50 562  
15:47:50 563  	  SELECT
15:47:50 564  	    SUM(DISCOUNT.PERCENT_AMOUNT) into var_percent_discount
15:47:50 565  	  FROM
15:47:50 566  	    DISCOUNT_PRODUCT_OFFERING
15:47:50 567  	    INNER JOIN DISCOUNT ON DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID = DISCOUNT.ID
15:47:50 568  	  WHERE
15:47:50 569  	    DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = var_product_offering_id
15:47:50 570  	    AND DISCOUNT.PERCENT_AMOUNT IS NOT NULL;
15:47:50 571  
15:47:50 572  	  var_product_offering_t_amount := var_product_offering_price * var_product_offering_quantity;
15:47:50 573  
15:47:50 574  	  IF var_percent_discount IS NOT NULL THEN
15:47:50 575  	    var_product_offering_t_amount := var_product_offering_t_amount - ( var_product_offering_t_amount * var_percent_discount / 100 );
15:47:50 576  	  END IF;
15:47:50 577  
15:47:50 578  	  IF var_fixed_discount IS NOT NULL THEN
15:47:50 579  	    var_product_offering_t_amount := var_product_offering_t_amount - var_fixed_discount;
15:47:50 580  	  END IF;
15:47:50 581  
15:47:50 582  	  var_total_amount := var_total_amount + var_product_offering_t_amount;
15:47:50 583  	END LOOP;
15:47:50 584  	var_final_amount := var_total_amount;
15:47:50 585  	RETURN var_final_amount;
15:47:50 586  
15:47:50 587  EXCEPTION
15:47:50 588  WHEN BAD_OFFER_ID THEN
15:47:50 589  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 590  	  SPROC_NAME, 'No such offer');
15:47:50 591  WHEN OTHERS THEN
15:47:50 592  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 593  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 594  END CALCULATE_OFFER_AMOUNT;
15:47:50 595  
15:47:50 596  FUNCTION CALCULATE_OFFER_CHAIN_AMOUNT (
15:47:50 597  	in_offer_chain_id IN NUMBER
15:47:50 598  ) RETURN NUMBER AS
15:47:50 599  -- VARIABLES
15:47:50 600  SPROC_NAME	     CONSTANT VARCHAR2(28) := 'CALCULATE_OFFER_CHAIN_AMOUNT';
15:47:50 601  temp_offer_chain_id    NUMBER;
15:47:50 602  var_first_offer_id     NUMBER;
15:47:50 603  -- EXCEPTIONS
15:47:50 604  BAD_OFFER_CHAIN_ID      EXCEPTION;
15:47:50 605  CAN_NOT_GET_FIRST_OFFER EXCEPTION;
15:47:50 606  EXCEPTION_MESSAGE       VARCHAR2(1024);
15:47:50 607  BEGIN
15:47:50 608  
15:47:50 609  	BEGIN
15:47:50 610  	  SELECT
15:47:50 611  	    OFFER_CHAIN.ID into temp_offer_chain_id
15:47:50 612  	  FROM
15:47:50 613  	    OFFER_CHAIN
15:47:50 614  	  WHERE
15:47:50 615  	    OFFER_CHAIN.ID = in_offer_chain_id;
15:47:50 616  	  EXCEPTION
15:47:50 617  	    WHEN NO_DATA_FOUND THEN
15:47:50 618  	      RAISE BAD_OFFER_CHAIN_ID;
15:47:50 619  	END;
15:47:50 620  
15:47:50 621  	BEGIN
15:47:50 622  	  PROCS_OFFER_CHAIN_V22.GET_FIRST_OFFER(
15:47:50 623  	    in_offer_chain_id => in_offer_chain_id,
15:47:50 624  	    out_offer_id      => var_first_offer_id
15:47:50 625  	  );
15:47:50 626  	  EXCEPTION
15:47:50 627  	    WHEN OTHERS THEN
15:47:50 628  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:50 629  	      RAISE CAN_NOT_GET_FIRST_OFFER;
15:47:50 630  	END;
15:47:50 631  
15:47:50 632  	RETURN CALCULATE_OFFER_AMOUNT(var_first_offer_id);
15:47:50 633  
15:47:50 634  EXCEPTION
15:47:50 635  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:50 636  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 637  	  SPROC_NAME, 'No such offer chain');
15:47:50 638  WHEN CAN_NOT_GET_FIRST_OFFER THEN
15:47:50 639  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 640  	  SPROC_NAME, 'Could not find first offer', EXCEPTION_MESSAGE);
15:47:50 641  WHEN OTHERS THEN
15:47:50 642  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 643  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 644  END CALCULATE_OFFER_CHAIN_AMOUNT;
15:47:50 645  
15:47:50 646  FUNCTION GET_FIRST_OFFER_INDEX (
15:47:50 647  	in_offer_chain_id IN NUMBER
15:47:50 648  ) RETURN NUMBER AS
15:47:50 649  -- VARIABLES
15:47:50 650  SPROC_NAME	    CONSTANT VARCHAR2(21) := 'GET_FIRST_OFFER_INDEX';
15:47:50 651  var_first_offer_index NUMBER;
15:47:50 652  BEGIN
15:47:50 653  
15:47:50 654  	SELECT
15:47:50 655  	  INDEX_VALUE into var_first_offer_index
15:47:50 656  	FROM (
15:47:50 657  	  SELECT
15:47:50 658  	    OFFER_OFFER_CHAIN.INDEX_VALUE
15:47:50 659  	  FROM
15:47:50 660  	    OFFER_OFFER_CHAIN
15:47:50 661  	  WHERE
15:47:50 662  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 663  	  ORDER BY
15:47:50 664  	    OFFER_OFFER_CHAIN.INDEX_VALUE ASC
15:47:50 665  	)
15:47:50 666  	WHERE
15:47:50 667  	  ROWNUM <= 1;
15:47:50 668  
15:47:50 669  	RETURN var_first_offer_index;
15:47:50 670  
15:47:50 671  EXCEPTION
15:47:50 672  WHEN NO_DATA_FOUND THEN
15:47:50 673  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 674  	  SPROC_NAME, 'No such offer chain');
15:47:50 675  WHEN OTHERS THEN
15:47:50 676  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 677  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 678  END GET_FIRST_OFFER_INDEX;
15:47:50 679  
15:47:50 680  FUNCTION GET_NEXT_OFFER_INDEX (
15:47:50 681  	in_offer_chain_id	     IN NUMBER,
15:47:50 682  	in_offer_chain_current_index IN NUMBER
15:47:50 683  ) RETURN NUMBER AS
15:47:50 684  -- VARIABLES
15:47:50 685  SPROC_NAME		     CONSTANT VARCHAR2(20) := 'GET_NEXT_OFFER_INDEX';
15:47:50 686  temp_offer_chain_id	     NUMBER;
15:47:50 687  temp_offer_chain_current_index NUMBER;
15:47:50 688  var_result		     NUMBER;
15:47:50 689  -- EXCEPTIONS
15:47:50 690  BAD_OFFER_CHAIN_ID      EXCEPTION;
15:47:50 691  BAD_CURRENT_INDEX_VALUE EXCEPTION;
15:47:50 692  BEGIN
15:47:50 693  
15:47:50 694  	-- Check that offer chain exists
15:47:50 695  	BEGIN
15:47:50 696  	  SELECT
15:47:50 697  	    OFFER_CHAIN.ID into temp_offer_chain_id
15:47:50 698  	  FROM
15:47:50 699  	    OFFER_CHAIN
15:47:50 700  	  WHERE
15:47:50 701  	    OFFER_CHAIN.ID = in_offer_chain_id;
15:47:50 702  	  EXCEPTION
15:47:50 703  	    WHEN NO_DATA_FOUND THEN
15:47:50 704  	      RAISE BAD_OFFER_CHAIN_ID;
15:47:50 705  	END;
15:47:50 706  
15:47:50 707  	-- Check that current offer index exists
15:47:50 708  	BEGIN
15:47:50 709  	  SELECT
15:47:50 710  	    OFFER_OFFER_CHAIN.INDEX_VALUE into temp_offer_chain_current_index
15:47:50 711  	  FROM
15:47:50 712  	    OFFER_OFFER_CHAIN
15:47:50 713  	  WHERE
15:47:50 714  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 715  	    AND OFFER_OFFER_CHAIN.INDEX_VALUE = in_offer_chain_current_index
15:47:50 716  	    -- TODO: delete next line
15:47:50 717  	    AND ROWNUM <= 1;
15:47:50 718  	  EXCEPTION
15:47:50 719  	    WHEN NO_DATA_FOUND THEN
15:47:50 720  	      RAISE BAD_CURRENT_INDEX_VALUE;
15:47:50 721  	END;
15:47:50 722  
15:47:50 723  	-- Get next offer index
15:47:50 724  	BEGIN
15:47:50 725  	  SELECT
15:47:50 726  	    INDEX_VALUE into var_result
15:47:50 727  	  FROM (
15:47:50 728  	    SELECT
15:47:50 729  	      OFFER_OFFER_CHAIN.INDEX_VALUE
15:47:50 730  	    FROM
15:47:50 731  	      OFFER_OFFER_CHAIN
15:47:50 732  	    WHERE
15:47:50 733  	      OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 734  	      AND OFFER_OFFER_CHAIN.INDEX_VALUE > in_offer_chain_current_index
15:47:50 735  	    ORDER BY
15:47:50 736  	      OFFER_OFFER_CHAIN.INDEX_VALUE ASC
15:47:50 737  	  )
15:47:50 738  	  WHERE
15:47:50 739  	    ROWNUM <= 1;
15:47:50 740  	  EXCEPTION
15:47:50 741  	    WHEN NO_DATA_FOUND THEN
15:47:50 742  	      var_result := NULL;
15:47:50 743  	END;
15:47:50 744  
15:47:50 745  	RETURN var_result;
15:47:50 746  
15:47:50 747  EXCEPTION
15:47:50 748  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:50 749  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 750  	  SPROC_NAME, 'No such offer chain');
15:47:50 751  WHEN BAD_CURRENT_INDEX_VALUE THEN
15:47:50 752  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:50 753  	  SPROC_NAME, 'Bad current index value');
15:47:50 754  WHEN OTHERS THEN
15:47:50 755  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 756  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 757  END GET_NEXT_OFFER_INDEX;
15:47:50 758  
15:47:50 759  PROCEDURE P_GET_NEXT_OFFER_INDEX (
15:47:50 760  	in_offer_chain_id	     IN NUMBER,
15:47:50 761  	in_offer_chain_current_index IN NUMBER,
15:47:50 762  	out_next_offer_index	     OUT NUMBER
15:47:50 763  ) AS
15:47:50 764  BEGIN
15:47:50 765  	out_next_offer_index := GET_NEXT_OFFER_INDEX(
15:47:50 766  	  in_offer_chain_id,
15:47:50 767  	  in_offer_chain_current_index
15:47:50 768  	);
15:47:50 769  END P_GET_NEXT_OFFER_INDEX;
15:47:50 770  
15:47:50 771  PROCEDURE GET_NEXT_OFFER_INDEX_BY_LCNS (
15:47:50 772  	in_license_id		     IN NUMBER,
15:47:50 773  	in_offer_chain_current_index IN NUMBER,
15:47:50 774  	out_next_offer_index	     OUT NUMBER
15:47:50 775  ) AS
15:47:50 776  -- VARIABLES
15:47:50 777  SPROC_NAME	 CONSTANT VARCHAR2(28) := 'GET_NEXT_OFFER_INDEX_BY_LCNS';
15:47:50 778  var_offer_chain_id NUMBER;
15:47:50 779  -- EXCEPTIONS
15:47:50 780  BAD_LICENSE_ID		   EXCEPTION;
15:47:50 781  CAN_NOT_GET_NEXT_OFFER_INDEX EXCEPTION;
15:47:50 782  EXCEPTION_MESSAGE 	   VARCHAR2(1024);
15:47:50 783  BEGIN
15:47:50 784  
15:47:50 785  	BEGIN
15:47:50 786  	  SELECT
15:47:50 787  	    SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain_id
15:47:50 788  	  FROM
15:47:50 789  	    SUBSCRIPTION
15:47:50 790  	  WHERE
15:47:50 791  	    SUBSCRIPTION.ID = (
15:47:50 792  	      SELECT
15:47:50 793  		LICENSE.SUBSCRIPTION_ID
15:47:50 794  	      FROM
15:47:50 795  		LICENSE
15:47:50 796  	      WHERE
15:47:50 797  		LICENSE.ID = in_license_id
15:47:50 798  	    );
15:47:50 799  	  EXCEPTION
15:47:50 800  	    WHEN NO_DATA_FOUND THEN
15:47:50 801  	      RAISE BAD_LICENSE_ID;
15:47:50 802  	END;
15:47:50 803  
15:47:50 804  	BEGIN
15:47:50 805  	  out_next_offer_index := GET_NEXT_OFFER_INDEX(
15:47:50 806  	    var_offer_chain_id,
15:47:50 807  	    in_offer_chain_current_index
15:47:50 808  	  );
15:47:50 809  	  EXCEPTION
15:47:50 810  	    WHEN OTHERS THEN
15:47:50 811  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:50 812  	      RAISE CAN_NOT_GET_NEXT_OFFER_INDEX;
15:47:50 813  	END;
15:47:50 814  
15:47:50 815  EXCEPTION
15:47:50 816  WHEN BAD_LICENSE_ID THEN
15:47:50 817  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 818  	  SPROC_NAME, 'No such license');
15:47:50 819  WHEN CAN_NOT_GET_NEXT_OFFER_INDEX THEN
15:47:50 820  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:50 821  	  SPROC_NAME, 'Could not get next offer index', EXCEPTION_MESSAGE);
15:47:50 822  WHEN OTHERS THEN
15:47:50 823  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 824  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 825  END GET_NEXT_OFFER_INDEX_BY_LCNS;
15:47:50 826  
15:47:50 827  FUNCTION IS_OFFER_INDEX_EXISTS (
15:47:50 828  	in_offer_chain_id	   IN NUMBER,
15:47:50 829  	in_offer_chain_offer_index IN NUMBER
15:47:50 830  ) RETURN NUMBER AS
15:47:50 831  -- VARIABLES
15:47:50 832  SPROC_NAME CONSTANT VARCHAR2(21) := 'IS_OFFER_INDEX_EXISTS';
15:47:50 833  temp_count NUMBER;
15:47:50 834  BEGIN
15:47:50 835  
15:47:50 836  	SELECT
15:47:50 837  	  COUNT(*) into temp_count
15:47:50 838  	FROM
15:47:50 839  	  OFFER_OFFER_CHAIN
15:47:50 840  	WHERE
15:47:50 841  	  OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 842  	  AND OFFER_OFFER_CHAIN.INDEX_VALUE = in_offer_chain_offer_index;
15:47:50 843  
15:47:50 844  	IF temp_count > 0 THEN
15:47:50 845  	  RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:50 846  	ELSE
15:47:50 847  	  RETURN GLOBAL_CONSTANTS_V22.FALSE;
15:47:50 848  	END IF;
15:47:50 849  
15:47:50 850  EXCEPTION
15:47:50 851  WHEN OTHERS THEN
15:47:50 852  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 853  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 854  END IS_OFFER_INDEX_EXISTS;
15:47:50 855  
15:47:50 856  PROCEDURE GET_OFFER_LENGTH (
15:47:50 857  	in_offer_id IN NUMBER,
15:47:50 858  	out_years   OUT NUMBER,
15:47:50 859  	out_months  OUT NUMBER,
15:47:50 860  	out_days    OUT NUMBER
15:47:50 861  ) AS
15:47:50 862  -- VARIABLES
15:47:50 863  var_offer_duration VARCHAR2(30);
15:47:50 864  SPROC_NAME	 CONSTANT VARCHAR2(16) := 'GET_OFFER_LENGTH';
15:47:50 865  -- EXCEPTIONS
15:47:50 866  BAD_OFFER_ID	     EXCEPTION;
15:47:50 867  CAN_NOT_PARSE_DURATION EXCEPTION;
15:47:50 868  EXCEPTION_MESSAGE       VARCHAR2(1024);
15:47:50 869  BEGIN
15:47:50 870  
15:47:50 871  	BEGIN
15:47:50 872  	  SELECT
15:47:50 873  	    OFFER.ENTITLEMENT_DURATION into var_offer_duration
15:47:50 874  	  FROM
15:47:50 875  	    OFFER
15:47:50 876  	  WHERE
15:47:50 877  	    OFFER.ID = in_offer_id;
15:47:50 878  	  EXCEPTION
15:47:50 879  	    WHEN NO_DATA_FOUND THEN
15:47:50 880  	      RAISE BAD_OFFER_ID;
15:47:50 881  	END;
15:47:50 882  
15:47:50 883  	BEGIN
15:47:50 884  	  PROCS_COMMON_V22.ISO8601DURATION_TO_INTERVALS(
15:47:50 885  	    var_offer_duration,
15:47:50 886  	    out_years,
15:47:50 887  	    out_months,
15:47:50 888  	    out_days
15:47:50 889  	  );
15:47:50 890  	  EXCEPTION
15:47:50 891  	    WHEN OTHERS THEN
15:47:50 892  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:50 893  	      RAISE CAN_NOT_PARSE_DURATION;
15:47:50 894  	END;
15:47:50 895  
15:47:50 896  EXCEPTION
15:47:50 897  WHEN BAD_OFFER_ID THEN
15:47:50 898  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 899  	  SPROC_NAME, 'No such offer');
15:47:50 900  WHEN CAN_NOT_PARSE_DURATION THEN
15:47:50 901  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:50 902  	  SPROC_NAME, 'Can not parse offer duration', EXCEPTION_MESSAGE);
15:47:50 903  WHEN OTHERS THEN
15:47:50 904  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 905  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 906  END GET_OFFER_LENGTH;
15:47:50 907  
15:47:50 908  PROCEDURE GET_OFFER_LENGTH_IN_DAYS (
15:47:50 909  	in_offer_id   IN NUMBER,
15:47:50 910  	in_start_date IN DATE DEFAULT SYSDATE,
15:47:50 911  	out_days      OUT NUMBER
15:47:50 912  ) AS
15:47:50 913  SPROC_NAME CONSTANT VARCHAR2(24) := 'GET_OFFER_LENGTH_IN_DAYS';
15:47:50 914  -- VARIABLES
15:47:50 915  var_offer_duration VARCHAR2(30);
15:47:50 916  var_offer_years	 NUMBER;
15:47:50 917  var_offer_months	 NUMBER;
15:47:50 918  var_offer_days	 NUMBER;
15:47:50 919  var_offer_end_date DATE;
15:47:50 920  -- EXCEPTIONS
15:47:50 921  BAD_OFFER_ID EXCEPTION;
15:47:50 922  BEGIN
15:47:50 923  
15:47:50 924  	BEGIN
15:47:50 925  	  SELECT
15:47:50 926  	    OFFER.ENTITLEMENT_DURATION into var_offer_duration
15:47:50 927  	  FROM
15:47:50 928  	    OFFER
15:47:50 929  	  WHERE
15:47:50 930  	    OFFER.ID = in_offer_id;
15:47:50 931  	  EXCEPTION
15:47:50 932  	    WHEN NO_DATA_FOUND THEN
15:47:50 933  	      RAISE BAD_OFFER_ID;
15:47:50 934  	END;
15:47:50 935  
15:47:50 936  	PROCS_COMMON_V22.ISO8601DURATION_TO_INTERVALS (
15:47:50 937  	  var_offer_duration,
15:47:50 938  	  var_offer_years,
15:47:50 939  	  var_offer_months,
15:47:50 940  	  var_offer_days
15:47:50 941  	);
15:47:50 942  
15:47:50 943  	var_offer_end_date := ( ( in_start_date
15:47:50 944  	  + GLOBAL_CONSTANTS_V22.ONE_DAY_INTERVAL * var_offer_days )
15:47:50 945  	  + GLOBAL_CONSTANTS_V22.ONE_MONTH_INTERVAL * var_offer_months )
15:47:50 946  	  + GLOBAL_CONSTANTS_V22.ONE_YEAR_INTERVAL * var_offer_years;
15:47:50 947  
15:47:50 948  	out_days := var_offer_end_date - in_start_date;
15:47:50 949  
15:47:50 950  EXCEPTION
15:47:50 951  WHEN BAD_OFFER_ID THEN
15:47:50 952  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 953  	  SPROC_NAME, 'No such offer');
15:47:50 954  WHEN OTHERS THEN
15:47:50 955  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 956  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 957  END GET_OFFER_LENGTH_IN_DAYS;
15:47:50 958  
15:47:50 959  PROCEDURE GET_OFFER_PRODUCTS (
15:47:50 960  	in_offer_id    IN NUMBER,
15:47:50 961  	out_result_set OUT SYS_REFCURSOR
15:47:50 962  ) AS
15:47:50 963  -- VARIABLES
15:47:50 964  SPROC_NAME     CONSTANT VARCHAR2(18) := 'GET_OFFER_PRODUCTS';
15:47:50 965  temp_offerr_id NUMBER;
15:47:50 966  -- EXCEPTIONS
15:47:50 967  BAD_OFFER_ID EXCEPTION;
15:47:50 968  BEGIN
15:47:50 969  
15:47:50 970  	BEGIN
15:47:50 971  	  SELECT
15:47:50 972  	    OFFER.ID into temp_offerr_id
15:47:50 973  	  FROM
15:47:50 974  	    OFFER
15:47:50 975  	  WHERE
15:47:50 976  	    OFFER.ID = in_offer_id;
15:47:50 977  	  EXCEPTION
15:47:50 978  	    WHEN NO_DATA_FOUND THEN
15:47:50 979  	      RAISE BAD_OFFER_ID;
15:47:50 980  	END;
15:47:50 981  
15:47:50 982  	OPEN out_result_set FOR
15:47:50 983  	SELECT DISTINCT
15:47:50 984  	  PRODUCT.ID,
15:47:50 985  	  PRODUCT.NAME
15:47:50 986  	FROM
15:47:50 987  	  PRODUCT
15:47:50 988  	WHERE
15:47:50 989  	  PRODUCT.ID IN (
15:47:50 990  	      SELECT
15:47:50 991  		PRODUCT_OFFERING.PRODUCT_ID
15:47:50 992  	      FROM
15:47:50 993  		OFFER_PRODUCT_OFFERING
15:47:50 994  		INNER JOIN PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
15:47:50 995  	      WHERE
15:47:50 996  		OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id
15:47:50 997  	    );
15:47:50 998  
15:47:50 999  EXCEPTION
15:47:50 1000  WHEN BAD_OFFER_ID THEN
15:47:50 1001  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1002  	   SPROC_NAME, 'No such offer');
15:47:50 1003  WHEN OTHERS THEN
15:47:50 1004  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1005  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1006  END GET_OFFER_PRODUCTS;
15:47:50 1007  
15:47:50 1008  PROCEDURE GET_OFFER_CHAIN_PROD_OFFERINGS (
15:47:50 1009  	 in_offer_chain_id IN NUMBER,
15:47:50 1010  	 out_result_set    OUT SYS_REFCURSOR
15:47:50 1011  ) AS
15:47:50 1012  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_OFFER_CHAIN_PROD_OFFERINGS';
15:47:50 1013  -- VARIABLES
15:47:50 1014  temp_offer_chain_id NUMBER;
15:47:50 1015  -- EXCEPTIONS
15:47:50 1016  BAD_OFFER_CHAIN_ID EXCEPTION;
15:47:50 1017  BEGIN
15:47:50 1018  
15:47:50 1019  	 BEGIN
15:47:50 1020  	   SELECT
15:47:50 1021  	     OFFER_CHAIN.ID into temp_offer_chain_id
15:47:50 1022  	   FROM
15:47:50 1023  	     OFFER_CHAIN
15:47:50 1024  	   WHERE
15:47:50 1025  	     OFFER_CHAIN.ID = in_offer_chain_id;
15:47:50 1026  	   EXCEPTION
15:47:50 1027  	     WHEN NO_DATA_FOUND THEN
15:47:50 1028  	       RAISE BAD_OFFER_CHAIN_ID;
15:47:50 1029  	 END;
15:47:50 1030  
15:47:50 1031  	 OPEN out_result_set FOR
15:47:50 1032  	 SELECT
15:47:50 1033  	   PRODUCT_OFFERING.ID,
15:47:50 1034  	   PRODUCT_OFFERING.PRODUCT_ID,
15:47:50 1035  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
15:47:50 1036  	   PRODUCT_OFFERING.UNIT_PRICE,
15:47:50 1037  	   PRODUCT_OFFERING.QUANTITY,
15:47:50 1038  	   PRODUCT_OFFERING.CREATE_DATE,
15:47:50 1039  	   PRODUCT_OFFERING.CREATED_BY,
15:47:50 1040  	   PRODUCT.NAME,
15:47:50 1041  	   PRODUCT.PRODUCT_URI,
15:47:50 1042  	   CAPABILITY.ID CAP_ID,
15:47:50 1043  	   CAPABILITY.CODE CAP_CODE,
15:47:50 1044  	   CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
15:47:50 1045  	   CAPABILITY.SHAREABLE CAP_SHAREABLE
15:47:50 1046  	 FROM
15:47:50 1047  	   PRODUCT_OFFERING
15:47:50 1048  	   INNER JOIN PRODUCT ON PRODUCT_OFFERING.PRODUCT_ID = PRODUCT.ID
15:47:50 1049  	   INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
15:47:50 1050  	 WHERE
15:47:50 1051  	   PRODUCT_OFFERING.ID IN (
15:47:50 1052  	     SELECT DISTINCT
15:47:50 1053  	       PRODUCT_OFFERING_ID
15:47:50 1054  	     FROM
15:47:50 1055  	       OFFER_PRODUCT_OFFERING
15:47:50 1056  	     WHERE
15:47:50 1057  	       OFFER_PRODUCT_OFFERING.OFFER_ID IN (
15:47:50 1058  		 SELECT DISTINCT
15:47:50 1059  		   OFFER_ID
15:47:50 1060  		 FROM
15:47:50 1061  		   OFFER_OFFER_CHAIN
15:47:50 1062  		 WHERE
15:47:50 1063  		   OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 1064  	       )
15:47:50 1065  	   );
15:47:50 1066  
15:47:50 1067  EXCEPTION
15:47:50 1068  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:50 1069  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1070  	   SPROC_NAME, 'Bad offer chain id');
15:47:50 1071  WHEN OTHERS THEN
15:47:50 1072  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1073  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1074  END GET_OFFER_CHAIN_PROD_OFFERINGS;
15:47:50 1075  
15:47:50 1076  FUNCTION CHECK_FOR_SAME_PRODUCTS (
15:47:50 1077  	 in_offer_chain_1	  IN OFFER_CHAIN.ID%TYPE,
15:47:50 1078  	 in_offer_chain_2	  IN OFFER_CHAIN.ID%TYPE,
15:47:50 1079  	 in_use_eligibility_rules IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE
15:47:50 1080  ) RETURN NUMBER AS
15:47:50 1081  SPROC_NAME CONSTANT VARCHAR2(23) := 'CHECK_FOR_SAME_PRODUCTS';
15:47:50 1082  -- CONSTANTS
15:47:50 1083  PRODUCT_ELIGIBILITY_NAME CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
15:47:50 1084  -- VARIABLES
15:47:50 1085  temp_offer_chain_id	OFFER_CHAIN.ID%TYPE;
15:47:50 1086  var_same_products	SYS_REFCURSOR;
15:47:50 1087  var_same_product_id	NUMBER;
15:47:50 1088  same_product_count	NUMBER;
15:47:50 1089  var_product_eligibility_limit NUMBER;
15:47:50 1090  s_product_eligibility_limit   VARCHAR2(100);
15:47:50 1091  -- EXCEPTIONS
15:47:50 1092  BAD_FIRST_OFFER_CHAIN	      EXCEPTION;
15:47:50 1093  BAD_SECOND_OFFER_CHAIN	      EXCEPTION;
15:47:50 1094  BEGIN
15:47:50 1095  
15:47:50 1096  	 -- Check that first offer chain exists
15:47:50 1097  	 BEGIN
15:47:50 1098  	   SELECT
15:47:50 1099  	     OFFER_CHAIN.ID into temp_offer_chain_id
15:47:50 1100  	   FROM
15:47:50 1101  	     OFFER_CHAIN
15:47:50 1102  	   WHERE
15:47:50 1103  	     OFFER_CHAIN.ID = in_offer_chain_1;
15:47:50 1104  	   EXCEPTION
15:47:50 1105  	     WHEN NO_DATA_FOUND THEN
15:47:50 1106  	       RAISE BAD_FIRST_OFFER_CHAIN;
15:47:50 1107  	 END;
15:47:50 1108  
15:47:50 1109  	 -- Check that second offer chain exists
15:47:50 1110  	 BEGIN
15:47:50 1111  	   SELECT
15:47:50 1112  	     OFFER_CHAIN.ID into temp_offer_chain_id
15:47:50 1113  	   FROM
15:47:50 1114  	     OFFER_CHAIN
15:47:50 1115  	   WHERE
15:47:50 1116  	     OFFER_CHAIN.ID = in_offer_chain_2;
15:47:50 1117  	   EXCEPTION
15:47:50 1118  	     WHEN NO_DATA_FOUND THEN
15:47:50 1119  	       RAISE BAD_SECOND_OFFER_CHAIN;
15:47:50 1120  	 END;
15:47:50 1121  
15:47:50 1122  	 PROCS_OFFER_CHAIN_V22.GET_OFF_CHAINS_SAME_PRODUCTS(
15:47:50 1123  	   in_offer_chain_1 => in_offer_chain_1,
15:47:50 1124  	   in_offer_chain_2 => in_offer_chain_2,
15:47:50 1125  	   out_result_set   => var_same_products
15:47:50 1126  	 );
15:47:50 1127  
15:47:50 1128  	 LOOP
15:47:50 1129  	   FETCH var_same_products INTO var_same_product_id, same_product_count;
15:47:50 1130  	   EXIT WHEN var_same_products%NOTFOUND;
15:47:50 1131  
15:47:50 1132  	   IF in_use_eligibility_rules = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:50 1133  	     -- Return false because this offer chains having same products
15:47:50 1134  	     RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:50 1135  	   ELSE
15:47:50 1136  
15:47:50 1137  	     -- Get eligibility rule for given product
15:47:50 1138  	     BEGIN
15:47:50 1139  	       SELECT
15:47:50 1140  		 PRODUCT_ELIGIBILITY.VALUE into s_product_eligibility_limit
15:47:50 1141  	       FROM
15:47:50 1142  		 PRODUCT_ELIGIBILITY
15:47:50 1143  	       WHERE
15:47:50 1144  		 PRODUCT_ELIGIBILITY.PRODUCT_ID = var_same_product_id
15:47:50 1145  		 AND PRODUCT_ELIGIBILITY.NAME = PRODUCT_ELIGIBILITY_NAME;
15:47:50 1146  
15:47:50 1147  	       -- REVU: What should to be here? 1?
15:47:50 1148  	       EXCEPTION
15:47:50 1149  		 WHEN NO_DATA_FOUND THEN
15:47:50 1150  		   s_product_eligibility_limit := '1';
15:47:50 1151  	     END;
15:47:50 1152  
15:47:50 1153  	     IF UPPER(s_product_eligibility_limit) = GLOBAL_CONSTANTS_V22.MAX_CONSURRENT_PRD_UNLIM THEN
15:47:50 1154  	       RETURN GLOBAL_CONSTANTS_V22.FALSE;
15:47:50 1155  	     END IF;
15:47:50 1156  
15:47:50 1157  	     var_product_eligibility_limit := TO_NUMBER(s_product_eligibility_limit);
15:47:50 1158  
15:47:50 1159  	     -- Check for limit
15:47:50 1160  	     IF var_product_eligibility_limit < same_product_count THEN
15:47:50 1161  	       RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:50 1162  	     END IF;
15:47:50 1163  
15:47:50 1164  	   END IF;
15:47:50 1165  	 END LOOP;
15:47:50 1166  
15:47:50 1167  	 RETURN GLOBAL_CONSTANTS_V22.FALSE;
15:47:50 1168  
15:47:50 1169  EXCEPTION
15:47:50 1170  WHEN BAD_FIRST_OFFER_CHAIN THEN
15:47:50 1171  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1172  	   SPROC_NAME, 'First offer chain not found');
15:47:50 1173  WHEN BAD_SECOND_OFFER_CHAIN THEN
15:47:50 1174  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1175  	   SPROC_NAME, 'Second offer chain not found');
15:47:50 1176  WHEN OTHERS THEN
15:47:50 1177  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1178  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1179  END CHECK_FOR_SAME_PRODUCTS;
15:47:50 1180  
15:47:50 1181  FUNCTION IS_OFFER_CHAIN_CANCELABLE (
15:47:50 1182  	 in_offer_chain_id IN NUMBER
15:47:50 1183  ) RETURN NUMBER AS
15:47:50 1184  SPROC_NAME CONSTANT VARCHAR2(25) := 'IS_OFFER_CHAIN_CANCELABLE';
15:47:50 1185  -- VARIABLES
15:47:50 1186  var_is_cancelable_str VARCHAR2(1);
15:47:50 1187  var_is_cancelable     NUMBER;
15:47:50 1188  BEGIN
15:47:50 1189  
15:47:50 1190  	 BEGIN
15:47:50 1191  	   SELECT
15:47:50 1192  	     VALUE INTO var_is_cancelable_str
15:47:50 1193  	   FROM (
15:47:50 1194  	     SELECT
15:47:50 1195  	       VALUE, NAME
15:47:50 1196  	     FROM
15:47:50 1197  	       OFFER_CHAIN_META_DATA
15:47:50 1198  	     WHERE
15:47:50 1199  	       OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 1200  	     )
15:47:50 1201  	   WHERE
15:47:50 1202  	     UPPER(NAME) = 'CANCELABLE';
15:47:50 1203  	   var_is_cancelable := TO_NUMBER(var_is_cancelable_str);
15:47:50 1204  	   EXCEPTION
15:47:50 1205  	     WHEN NO_DATA_FOUND THEN
15:47:50 1206  	       var_is_cancelable := GLOBAL_CONSTANTS_V22.FALSE;
15:47:50 1207  	 END;
15:47:50 1208  
15:47:50 1209  	 IF var_is_cancelable = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:50 1210  	   RETURN GLOBAL_CONSTANTS_V22.FALSE;
15:47:50 1211  	 END IF;
15:47:50 1212  
15:47:50 1213  	 RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:50 1214  
15:47:50 1215  EXCEPTION
15:47:50 1216  WHEN OTHERS THEN
15:47:50 1217  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1218  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1219  END IS_OFFER_CHAIN_CANCELABLE;
15:47:50 1220  
15:47:50 1221  FUNCTION GET_OFFER_CHAIN_MAX_CONC_SUBSC (
15:47:50 1222  	 in_offer_chain_id IN NUMBER
15:47:50 1223  ) RETURN NUMBER AS
15:47:50 1224  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_OFFER_CHAIN_MAX_CONC_SUBSC';
15:47:50 1225  -- VARIABLES
15:47:50 1226  var_max_concurrent_subs_str VARCHAR2(100);
15:47:50 1227  var_max_concurrent_subs	   NUMBER;
15:47:50 1228  BEGIN
15:47:50 1229  
15:47:50 1230  	 BEGIN
15:47:50 1231  	   SELECT
15:47:50 1232  	     VALUE into var_max_concurrent_subs_str
15:47:50 1233  	   FROM
15:47:50 1234  	     (
15:47:50 1235  	       SELECT
15:47:50 1236  		 NAME,
15:47:50 1237  		 VALUE
15:47:50 1238  	       FROM
15:47:50 1239  		 OFFER_CHAIN_ELIGIBILITY
15:47:50 1240  	       WHERE
15:47:50 1241  		 OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 1242  	     )
15:47:50 1243  	   WHERE
15:47:50 1244  	     NAME LIKE GLOBAL_CONSTANTS_V22.MAX_CONCURRENT_SUBS;
15:47:50 1245  
15:47:50 1246  	   IF var_max_concurrent_subs_str = GLOBAL_CONSTANTS_V22.MAX_CONCURRENT_SUBS_UNLIM THEN
15:47:50 1247  	     var_max_concurrent_subs := GLOBAL_CONSTANTS_V22.INFINITY;
15:47:50 1248  	   ELSE
15:47:50 1249  	     var_max_concurrent_subs := TO_NUMBER(var_max_concurrent_subs_str);
15:47:50 1250  	   END IF;
15:47:50 1251  
15:47:50 1252  	   EXCEPTION
15:47:50 1253  	     WHEN NO_DATA_FOUND THEN
15:47:50 1254  	       var_max_concurrent_subs := 1;
15:47:50 1255  	 END;
15:47:50 1256  
15:47:50 1257  	 RETURN var_max_concurrent_subs;
15:47:50 1258  
15:47:50 1259  EXCEPTION
15:47:50 1260  WHEN OTHERS THEN
15:47:50 1261  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1262  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1263  END GET_OFFER_CHAIN_MAX_CONC_SUBSC;
15:47:50 1264  
15:47:50 1265  PROCEDURE GET_OFFER_CHAIN_ELIGIBILITY (
15:47:50 1266  	 in_offer_chain_id   IN NUMBER,
15:47:50 1267  	 in_eligibility_name IN VARCHAR2,
15:47:50 1268  	 out_result_set      OUT SYS_REFCURSOR
15:47:50 1269  ) AS
15:47:50 1270  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_OFFER_CHAIN_ELIGIBILITY';
15:47:50 1271  -- VARIABLES
15:47:50 1272  temp_offer_chain_id NUMBER;
15:47:50 1273  var_eligibility_name OFFER_CHAIN_ELIGIBILITY.NAME%TYPE;
15:47:50 1274  -- EXCEPTIONS
15:47:50 1275  BAD_OFFER_CHAIN_ID EXCEPTION;
15:47:50 1276  BEGIN
15:47:50 1277  
15:47:50 1278  	 BEGIN
15:47:50 1279  	   SELECT
15:47:50 1280  	     OFFER_CHAIN.ID into temp_offer_chain_id
15:47:50 1281  	   FROM
15:47:50 1282  	     OFFER_CHAIN
15:47:50 1283  	   WHERE
15:47:50 1284  	     OFFER_CHAIN.ID = in_offer_chain_id;
15:47:50 1285  	   EXCEPTION
15:47:50 1286  	     WHEN NO_DATA_FOUND THEN
15:47:50 1287  	       RAISE BAD_OFFER_CHAIN_ID;
15:47:50 1288  	 END;
15:47:50 1289  
15:47:50 1290  	 var_eligibility_name := UPPER(in_eligibility_name);
15:47:50 1291  
15:47:50 1292  	 OPEN out_result_set FOR
15:47:50 1293  	 SELECT
15:47:50 1294  	   OFFER_CHAIN_ELIGIBILITY.ID,
15:47:50 1295  	   OFFER_CHAIN_ELIGIBILITY.NAME,
15:47:50 1296  	   OFFER_CHAIN_ELIGIBILITY.VALUE,
15:47:50 1297  	   OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID,
15:47:50 1298  	   OFFER_CHAIN_ELIGIBILITY.CREATE_DATE,
15:47:50 1299  	   OFFER_CHAIN_ELIGIBILITY.CREATED_BY
15:47:50 1300  	 FROM
15:47:50 1301  	   OFFER_CHAIN_ELIGIBILITY
15:47:50 1302  	 WHERE
15:47:50 1303  	   OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 1304  	   AND UPPER(OFFER_CHAIN_ELIGIBILITY.NAME) = var_eligibility_name;
15:47:50 1305  
15:47:50 1306  EXCEPTION
15:47:50 1307  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:50 1308  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1309  	   SPROC_NAME, 'No such offer chain');
15:47:50 1310  WHEN OTHERS THEN
15:47:50 1311  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1312  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1313  END GET_OFFER_CHAIN_ELIGIBILITY;
15:47:50 1314  
15:47:50 1315  PROCEDURE GET_OFFER_CHAINS_ELIGIBILITY (
15:47:50 1316  	 in_offer_chain_ids  IN VARCHAR2,
15:47:50 1317  	 in_eligibility_name IN VARCHAR2,
15:47:50 1318  	 out_result_set      OUT SYS_REFCURSOR
15:47:50 1319  ) AS
15:47:50 1320  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_OFFER_CHAINS_ELIGIBILITY';
15:47:50 1321  -- VARIABLES
15:47:50 1322  var_eligibility_name OFFER_CHAIN_ELIGIBILITY.NAME%TYPE;
15:47:50 1323  BEGIN
15:47:50 1324  
15:47:50 1325  	 var_eligibility_name := UPPER(in_eligibility_name);
15:47:50 1326  
15:47:50 1327  	 -- TODO: Reveiw this procedure and fine a normal way to implement this feature
15:47:50 1328  
15:47:50 1329  	 open out_result_set for
15:47:50 1330  	 'SELECT
15:47:50 1331  	   ID,
15:47:50 1332  	   NAME,
15:47:50 1333  	   VALUE,
15:47:50 1334  	   OFFER_CHAIN_ID,
15:47:50 1335  	   CREATE_DATE,
15:47:50 1336  	   CREATED_BY
15:47:50 1337  	 FROM
15:47:50 1338  	   OFFER_CHAIN_ELIGIBILITY
15:47:50 1339  	 WHERE
15:47:50 1340  	   OFFER_CHAIN_ID in ( '|| in_offer_chain_ids ||' )
15:47:50 1341  	   AND UPPER(NAME) = :1'
15:47:50 1342  	 using var_eligibility_name;
15:47:50 1343  
15:47:50 1344  EXCEPTION
15:47:50 1345  WHEN OTHERS THEN
15:47:50 1346  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1347  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1348  END GET_OFFER_CHAINS_ELIGIBILITY;
15:47:50 1349  
15:47:50 1350  PROCEDURE GET_OFFER_CHAINS_META_DATA (
15:47:50 1351  	 in_offer_chain_ids IN VARCHAR2,
15:47:50 1352  	 in_meta_data_name  IN VARCHAR2,
15:47:50 1353  	 out_result_set     OUT SYS_REFCURSOR
15:47:50 1354  ) AS
15:47:50 1355  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_OFFER_CHAINS_META_DATA';
15:47:50 1356  -- VARIABLES
15:47:50 1357  var_meta_data_name  OFFER_CHAIN_META_DATA.NAME%TYPE;
15:47:50 1358  BEGIN
15:47:50 1359  
15:47:50 1360  	 var_meta_data_name := UPPER(in_meta_data_name);
15:47:50 1361  
15:47:50 1362  	 open out_result_set for
15:47:50 1363  	 'select
15:47:50 1364  	   ID,
15:47:50 1365  	   NAME,
15:47:50 1366  	   VALUE,
15:47:50 1367  	   OFFER_CHAIN_ID,
15:47:50 1368  	   CREATED_BY,
15:47:50 1369  	   CREATE_DATE
15:47:50 1370  	 from
15:47:50 1371  	   OFFER_CHAIN_META_DATA
15:47:50 1372  	 where
15:47:50 1373  	   OFFER_CHAIN_ID in ( '||in_offer_chain_ids||' )
15:47:50 1374  	   and UPPER(OFFER_CHAIN_META_DATA.NAME) = :1'
15:47:50 1375  	 using var_meta_data_name;
15:47:50 1376  
15:47:50 1377  EXCEPTION
15:47:50 1378  WHEN OTHERS THEN
15:47:50 1379  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1380  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1381  END GET_OFFER_CHAINS_META_DATA;
15:47:50 1382  
15:47:50 1383  PROCEDURE GET_OFFER_CHAIN_META_DATA (
15:47:50 1384  	 in_offer_chain_id IN NUMBER,
15:47:50 1385  	 in_meta_data_name IN VARCHAR2,
15:47:50 1386  	 out_result_set    OUT SYS_REFCURSOR
15:47:50 1387  ) AS
15:47:50 1388  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_OFFER_CHAIN_META_DATA';
15:47:50 1389  -- VARIABLES
15:47:50 1390  temp_offer_chain_id NUMBER;
15:47:50 1391  var_meta_data_name  OFFER_CHAIN_META_DATA.NAME%TYPE;
15:47:50 1392  -- EXCEPTIONS
15:47:50 1393  BAD_OFFER_CHAIN_ID EXCEPTION;
15:47:50 1394  BEGIN
15:47:50 1395  
15:47:50 1396  	 BEGIN
15:47:50 1397  	   SELECT
15:47:50 1398  	     OFFER_CHAIN.ID into temp_offer_chain_id
15:47:50 1399  	   FROM
15:47:50 1400  	     OFFER_CHAIN
15:47:50 1401  	   WHERE
15:47:50 1402  	     OFFER_CHAIN.ID = in_offer_chain_id;
15:47:50 1403  	   EXCEPTION
15:47:50 1404  	     WHEN NO_DATA_FOUND THEN
15:47:50 1405  	       RAISE BAD_OFFER_CHAIN_ID;
15:47:50 1406  	 END;
15:47:50 1407  
15:47:50 1408  	 var_meta_data_name := UPPER(in_meta_data_name);
15:47:50 1409  
15:47:50 1410  	 OPEN out_result_set FOR
15:47:50 1411  	 SELECT
15:47:50 1412  	   OFFER_CHAIN_META_DATA.ID,
15:47:50 1413  	   OFFER_CHAIN_META_DATA.NAME,
15:47:50 1414  	   OFFER_CHAIN_META_DATA.VALUE,
15:47:50 1415  	   OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID,
15:47:50 1416  	   OFFER_CHAIN_META_DATA.CREATED_BY,
15:47:50 1417  	   OFFER_CHAIN_META_DATA.CREATE_DATE
15:47:50 1418  	 FROM
15:47:50 1419  	   OFFER_CHAIN_META_DATA
15:47:50 1420  	 WHERE
15:47:50 1421  	   OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 1422  	   AND UPPER(OFFER_CHAIN_META_DATA.NAME) = var_meta_data_name;
15:47:50 1423  
15:47:50 1424  EXCEPTION
15:47:50 1425  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:50 1426  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1427  	   SPROC_NAME, 'No such offer chain');
15:47:50 1428  WHEN OTHERS THEN
15:47:50 1429  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1430  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1431  END GET_OFFER_CHAIN_META_DATA;
15:47:50 1432  
15:47:50 1433  PROCEDURE GET_PROD_OFFERINGS_BY_OFFER_ID (
15:47:50 1434  	 in_offer_id	IN NUMBER,
15:47:50 1435  	 out_result_set OUT SYS_REFCURSOR
15:47:50 1436  ) AS
15:47:50 1437  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PROD_OFFERINGS_BY_OFFER_ID';
15:47:50 1438  -- VARIABLES
15:47:50 1439  temp_offer_id NUMBER;
15:47:50 1440  -- EXCEPTIONS
15:47:50 1441  BAD_OFFER_ID EXCEPTION;
15:47:50 1442  BEGIN
15:47:50 1443  
15:47:50 1444  	 BEGIN
15:47:50 1445  	   SELECT
15:47:50 1446  	     OFFER.ID into temp_offer_id
15:47:50 1447  	   FROM
15:47:50 1448  	     OFFER
15:47:50 1449  	   WHERE
15:47:50 1450  	     OFFER.ID = in_offer_id;
15:47:50 1451  	   EXCEPTION
15:47:50 1452  	     WHEN NO_DATA_FOUND THEN
15:47:50 1453  	       RAISE BAD_OFFER_ID;
15:47:50 1454  	 END;
15:47:50 1455  
15:47:50 1456  	 OPEN out_result_set FOR
15:47:50 1457  	 SELECT DISTINCT
15:47:50 1458  	   PRODUCT_OFFERING.ID,
15:47:50 1459  	   PRODUCT_OFFERING.PRODUCT_ID,
15:47:50 1460  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
15:47:50 1461  	   PRODUCT_OFFERING.UNIT_PRICE,
15:47:50 1462  	   PRODUCT_OFFERING.QUANTITY,
15:47:50 1463  	   PRODUCT_OFFERING.CREATE_DATE,
15:47:50 1464  	   PRODUCT_OFFERING.CREATED_BY,
15:47:50 1465  	   CAPABILITY.ID CAP_ID,
15:47:50 1466  	   CAPABILITY.CODE CAP_CODE,
15:47:50 1467  	   CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
15:47:50 1468  	   CAPABILITY.SHAREABLE CAP_SHAREABLE
15:47:50 1469  	 FROM
15:47:50 1470  	   OFFER_PRODUCT_OFFERING
15:47:50 1471  	   INNER JOIN PRODUCT_OFFERING ON PRODUCT_OFFERING.ID = OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
15:47:50 1472  	   INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
15:47:50 1473  	 WHERE
15:47:50 1474  	   OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id;
15:47:50 1475  
15:47:50 1476  EXCEPTION
15:47:50 1477  WHEN BAD_OFFER_ID THEN
15:47:50 1478  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1479  	   SPROC_NAME, 'No such offer');
15:47:50 1480  WHEN OTHERS THEN
15:47:50 1481  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1482  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1483  END GET_PROD_OFFERINGS_BY_OFFER_ID;
15:47:50 1484  
15:47:50 1485  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
15:47:50 1486  	 in_product_offering_id IN NUMBER,
15:47:50 1487  	 in_meta_data_name	IN VARCHAR2 DEFAULT NULL,
15:47:50 1488  	 out_result_set 	OUT SYS_REFCURSOR
15:47:50 1489  ) AS
15:47:50 1490  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PRODUCT_OFFERING_META_DATA';
15:47:50 1491  -- VARIABLES
15:47:50 1492  temp_product_offering_id NUMBER;
15:47:50 1493  -- EXCEPTIONS
15:47:50 1494  BAD_PRODUCT_OFFERING_ID EXCEPTION;
15:47:50 1495  BEGIN
15:47:50 1496  
15:47:50 1497  	 BEGIN
15:47:50 1498  	   SELECT
15:47:50 1499  	     PRODUCT_OFFERING.ID into temp_product_offering_id
15:47:50 1500  	   FROM
15:47:50 1501  	     PRODUCT_OFFERING
15:47:50 1502  	   WHERE
15:47:50 1503  	     PRODUCT_OFFERING.ID = in_product_offering_id;
15:47:50 1504  	   EXCEPTION
15:47:50 1505  	     WHEN NO_DATA_FOUND THEN
15:47:50 1506  	       RAISE BAD_PRODUCT_OFFERING_ID;
15:47:50 1507  	 END;
15:47:50 1508  
15:47:50 1509  	 OPEN out_result_set FOR
15:47:50 1510  	 SELECT
15:47:50 1511  	   PRODUCT_OFFERING_META_DATA.ID,
15:47:50 1512  	   PRODUCT_OFFERING_META_DATA.NAME,
15:47:50 1513  	   PRODUCT_OFFERING_META_DATA.VALUE,
15:47:50 1514  	   PRODUCT_OFFERING_META_DATA.PRODUCT_OFFERING_ID,
15:47:50 1515  	   PRODUCT_OFFERING_META_DATA.CREATE_DATE,
15:47:50 1516  	   PRODUCT_OFFERING_META_DATA.CREATED_BY
15:47:50 1517  	 FROM
15:47:50 1518  	   PRODUCT_OFFERING_META_DATA
15:47:50 1519  	 WHERE
15:47:50 1520  	   PRODUCT_OFFERING_META_DATA.PRODUCT_OFFERING_ID = in_product_offering_id
15:47:50 1521  	   AND UPPER(PRODUCT_OFFERING_META_DATA.NAME) = UPPER(NVL(in_meta_data_name, PRODUCT_OFFERING_META_DATA.NAME));
15:47:50 1522  
15:47:50 1523  EXCEPTION
15:47:50 1524  WHEN BAD_PRODUCT_OFFERING_ID THEN
15:47:50 1525  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1526  	   SPROC_NAME, 'No such product offering');
15:47:50 1527  END GET_PRODUCT_OFFERING_META_DATA;
15:47:50 1528  
15:47:50 1529  PROCEDURE GET_OFF_CHAINS_SAME_PRODUCTS (
15:47:50 1530  	 in_offer_chain_1 IN NUMBER,
15:47:50 1531  	 in_offer_chain_2 IN NUMBER,
15:47:50 1532  	 out_result_set   OUT SYS_REFCURSOR
15:47:50 1533  ) AS
15:47:50 1534  BEGIN
15:47:50 1535  
15:47:50 1536  	 OPEN out_result_set FOR
15:47:50 1537  	 SELECT
15:47:50 1538  	   PRODUCT_ID_IN_OFFER_CH_1 AS "PRODUCT_ID",
15:47:50 1539  	   COUNT_1 + COUNT_2	    AS "COUNT"
15:47:50 1540  	 FROM
15:47:50 1541  	   (
15:47:50 1542  	     SELECT
15:47:50 1543  	       PRODUCT_OFFERING.PRODUCT_ID as "PRODUCT_ID_IN_OFFER_CH_1",
15:47:50 1544  	       COUNT(*) 		   as "COUNT_1"
15:47:50 1545  	     FROM
15:47:50 1546  	       (
15:47:50 1547  		 SELECT OFFER_ID as "OFFER_OFFER_CHAIN_OFFER_ID" FROM OFFER_OFFER_CHAIN WHERE OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_1
15:47:50 1548  	       )
15:47:50 1549  	       INNER JOIN OFFER_PRODUCT_OFFERING ON OFFER_OFFER_CHAIN_OFFER_ID = OFFER_PRODUCT_OFFERING.OFFER_ID
15:47:50 1550  	       INNER JOIN PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
15:47:50 1551  	     GROUP BY
15:47:50 1552  	       PRODUCT_OFFERING.PRODUCT_ID
15:47:50 1553  	   )
15:47:50 1554  	   INNER JOIN
15:47:50 1555  	   (
15:47:50 1556  	     SELECT
15:47:50 1557  	       PRODUCT_OFFERING.PRODUCT_ID as "PRODUCT_ID_IN_OFFER_CH_2",
15:47:50 1558  	       COUNT(*) 		   as "COUNT_2"
15:47:50 1559  	     FROM
15:47:50 1560  	       (
15:47:50 1561  		 SELECT OFFER_ID as "OFFER_OFFER_CHAIN_OFFER_ID" FROM OFFER_OFFER_CHAIN WHERE OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_2
15:47:50 1562  	       )
15:47:50 1563  	       INNER JOIN OFFER_PRODUCT_OFFERING ON OFFER_OFFER_CHAIN_OFFER_ID = OFFER_PRODUCT_OFFERING.OFFER_ID
15:47:50 1564  	       INNER JOIN PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
15:47:50 1565  	     GROUP BY
15:47:50 1566  	       PRODUCT_OFFERING.PRODUCT_ID
15:47:50 1567  	   ) ON PRODUCT_ID_IN_OFFER_CH_1 = PRODUCT_ID_IN_OFFER_CH_2;
15:47:50 1568  
15:47:50 1569  END GET_OFF_CHAINS_SAME_PRODUCTS;
15:47:50 1570  
15:47:50 1571  PROCEDURE GET_OFFER_CHAIN_MD_VALUE (
15:47:50 1572  	 in_offer_chain_id IN NUMBER,
15:47:50 1573  	 in_meta_data_name IN VARCHAR2,
15:47:50 1574  	 out_value	   OUT VARCHAR2
15:47:50 1575  ) AS
15:47:50 1576  BEGIN
15:47:50 1577  	 BEGIN
15:47:50 1578  	   SELECT
15:47:50 1579  	     OFFER_CHAIN_META_DATA.VALUE into out_value
15:47:50 1580  	   FROM
15:47:50 1581  	     OFFER_CHAIN_META_DATA
15:47:50 1582  	   WHERE
15:47:50 1583  	     OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 1584  	     AND UPPER(OFFER_CHAIN_META_DATA.NAME) = UPPER(in_meta_data_name);
15:47:50 1585  
15:47:50 1586  	   EXCEPTION
15:47:50 1587  	     WHEN NO_DATA_FOUND THEN
15:47:50 1588  	       out_value := NULL;
15:47:50 1589  	 END;
15:47:50 1590  END GET_OFFER_CHAIN_MD_VALUE;
15:47:50 1591  
15:47:50 1592  PROCEDURE GET_OFFER_CHAIN_EL_VALUE (
15:47:50 1593  	 in_offer_chain_id   IN NUMBER,
15:47:50 1594  	 in_eligibility_name IN VARCHAR2,
15:47:50 1595  	 out_value	     OUT VARCHAR2
15:47:50 1596  ) AS
15:47:50 1597  BEGIN
15:47:50 1598  	 BEGIN
15:47:50 1599  	   SELECT
15:47:50 1600  	     OFFER_CHAIN_ELIGIBILITY.VALUE into out_value
15:47:50 1601  	   FROM
15:47:50 1602  	     OFFER_CHAIN_ELIGIBILITY
15:47:50 1603  	   WHERE
15:47:50 1604  	     OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 1605  	     AND UPPER(OFFER_CHAIN_ELIGIBILITY.NAME) = UPPER(in_eligibility_name);
15:47:50 1606  
15:47:50 1607  	   EXCEPTION
15:47:50 1608  	     WHEN NO_DATA_FOUND THEN
15:47:50 1609  	       out_value := NULL;
15:47:50 1610  	 END;
15:47:50 1611  END GET_OFFER_CHAIN_EL_VALUE;
15:47:50 1612  
15:47:50 1613  PROCEDURE GET_OFFER_PRODUCT_OFFERINGS (
15:47:50 1614  	 in_offer_id	IN NUMBER,
15:47:50 1615  	 out_result_set OUT SYS_REFCURSOR
15:47:50 1616  ) AS
15:47:50 1617  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_OFFER_PRODUCT_OFFERINGS';
15:47:50 1618  -- VARIABLES
15:47:50 1619  temp_offer_id NUMBER;
15:47:50 1620  -- EXCEPTIONS
15:47:50 1621  BAD_OFFER_ID EXCEPTION;
15:47:50 1622  BEGIN
15:47:50 1623  
15:47:50 1624  	 BEGIN
15:47:50 1625  	   SELECT
15:47:50 1626  	     OFFER.ID into temp_offer_id
15:47:50 1627  	   FROM
15:47:50 1628  	     OFFER
15:47:50 1629  	   WHERE
15:47:50 1630  	     OFFER.ID = in_offer_id;
15:47:50 1631  	   EXCEPTION
15:47:50 1632  	     WHEN NO_DATA_FOUND THEN
15:47:50 1633  	       RAISE BAD_OFFER_ID;
15:47:50 1634  	 END;
15:47:50 1635  
15:47:50 1636  	 OPEN out_result_set FOR
15:47:50 1637  	 SELECT
15:47:50 1638  	   PRODUCT_OFFERING.ID,
15:47:50 1639  	   PRODUCT_OFFERING.PRODUCT_ID,
15:47:50 1640  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
15:47:50 1641  	   PRODUCT_OFFERING.UNIT_PRICE,
15:47:50 1642  	   PRODUCT_OFFERING.QUANTITY,
15:47:50 1643  	   PRODUCT_OFFERING.CREATE_DATE,
15:47:50 1644  	   PRODUCT_OFFERING.CREATED_BY,
15:47:50 1645  	   PRODUCT_OFFERING.TAX_POLICY_TYPE_ID
15:47:50 1646  	 FROM
15:47:50 1647  	   PRODUCT_OFFERING
15:47:50 1648  	   INNER JOIN OFFER_PRODUCT_OFFERING ON PRODUCT_OFFERING.ID = OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
15:47:50 1649  	 WHERE
15:47:50 1650  	   OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id;
15:47:50 1651  
15:47:50 1652  EXCEPTION
15:47:50 1653  WHEN BAD_OFFER_ID THEN
15:47:50 1654  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1655  	   SPROC_NAME, 'No such offer');
15:47:50 1656  WHEN OTHERS THEN
15:47:50 1657  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1658  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1659  END GET_OFFER_PRODUCT_OFFERINGS;
15:47:50 1660  
15:47:50 1661  PROCEDURE GET_OFFER_CHAINS_BY_META_DATA (
15:47:50 1662  	 in_meta_data_name  IN VARCHAR2,
15:47:50 1663  	 in_meta_data_value IN VARCHAR2,
15:47:50 1664  	 out_result_set     OUT SYS_REFCURSOR
15:47:50 1665  ) AS
15:47:50 1666  SPROC_NAME CONSTANT VARCHAR2(29) := 'GET_OFFER_CHAINS_BY_META_DATA';
15:47:50 1667  -- VARIABLES
15:47:50 1668  v_meta_data_name  CONSTANT OFFER_CHAIN_META_DATA.NAME%TYPE  := UPPER(in_meta_data_name);
15:47:50 1669  v_meta_data_value CONSTANT OFFER_CHAIN_META_DATA.VALUE%TYPE := UPPER(in_meta_data_value);
15:47:50 1670  BEGIN
15:47:50 1671  
15:47:50 1672  	 OPEN out_result_set FOR
15:47:50 1673  	 SELECT
15:47:50 1674  	   och.ID,
15:47:50 1675  	   och.NAME,
15:47:50 1676  	   och.DESCRIPTION,
15:47:50 1677  	   och.OFFER_CHAIN_STATUS_ID,
15:47:50 1678  	   PROCS_OFFER_CHAIN_V22.CALCULATE_OFFER_CHAIN_AMOUNT(och.id) as amount,
15:47:50 1679  	   och.ADOPTABILITY_WINDOW_START_DATE,
15:47:50 1680  	   och.ADOPTABILITY_WINDOW_END_DATE,
15:47:50 1681  	   PROCS_OFFER_CHAIN_V22.IS_OFFER_CHAIN_CANCELABLE(och.id) as is_cancelable,
15:47:50 1682  	   och.IS_GIFT_CERTIFICATE,
15:47:50 1683  	   'false' as comf_offer_chain, -- TODO
15:47:50 1684  	   po.PRODUCT_ID,
15:47:50 1685  	   och.GROUP_ACCOUNT_TYPE_ID
15:47:50 1686  	 FROM
15:47:50 1687  	   OFFER_CHAIN och,
15:47:50 1688  	   OFFER_OFFER_CHAIN ooch,
15:47:50 1689  	   OFFER_PRODUCT_OFFERING opo,
15:47:50 1690  	   PRODUCT_OFFERING po
15:47:50 1691  	 WHERE
15:47:50 1692  	   och.ID = ooch.OFFER_CHAIN_ID
15:47:50 1693  	   and ooch.OFFER_ID = opo.OFFER_ID
15:47:50 1694  	   and opo.PRODUCT_OFFERING_ID = po.ID
15:47:50 1695  	   and och.OFFER_CHAIN_STATUS_ID = GLOBAL_STATUSES_V22.OFFER_CHAIN_ACTIVE
15:47:50 1696  	   and och.id in (
15:47:50 1697  	     SELECT DISTINCT
15:47:50 1698  	       och2.id
15:47:50 1699  	     from
15:47:50 1700  	       offer_chain och2
15:47:50 1701  	       inner join offer_chain_meta_data ochmd on och2.id = ochmd.offer_chain_id
15:47:50 1702  	     where
15:47:50 1703  	       UPPER(ochmd.name) = v_meta_data_name
15:47:50 1704  	       AND UPPER(ochmd.value) = v_meta_data_value
15:47:50 1705  	   );
15:47:50 1706  
15:47:50 1707  EXCEPTION
15:47:50 1708  WHEN OTHERS THEN
15:47:50 1709  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1710  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1711  END GET_OFFER_CHAINS_BY_META_DATA;
15:47:50 1712  
15:47:50 1713  PROCEDURE GET_ALL_META_DATA (
15:47:50 1714  	 in_offer_chain_id IN NUMBER,
15:47:50 1715  	 out_result_set    OUT SYS_REFCURSOR
15:47:50 1716  ) AS
15:47:50 1717  SPROC_NAME CONSTANT VARCHAR2(17) := 'GET_ALL_META_DATA';
15:47:50 1718  -- Variables
15:47:50 1719  temp_offer_chain_id NUMBER;
15:47:50 1720  -- Exceptions
15:47:50 1721  BAD_OFFER_CHAIN_ID EXCEPTION;
15:47:50 1722  BEGIN
15:47:50 1723  
15:47:50 1724  	 BEGIN
15:47:50 1725  	   SELECT
15:47:50 1726  	     OCH.ID into temp_offer_chain_id
15:47:50 1727  	   FROM
15:47:50 1728  	     OFFER_CHAIN OCH
15:47:50 1729  	   WHERE
15:47:50 1730  	     OCH.ID = in_offer_chain_id;
15:47:50 1731  	   EXCEPTION
15:47:50 1732  	     WHEN NO_DATA_FOUND THEN
15:47:50 1733  	       RAISE BAD_OFFER_CHAIN_ID;
15:47:50 1734  	 END;
15:47:50 1735  
15:47:50 1736  	 OPEN out_result_set FOR
15:47:50 1737  	 SELECT
15:47:50 1738  	   OCHMD.ID,
15:47:50 1739  	   OCHMD.OFFER_CHAIN_ID,
15:47:50 1740  	   OCHMD.NAME,
15:47:50 1741  	   OCHMD.VALUE,
15:47:50 1742  	   OCHMD.CREATE_DATE,
15:47:50 1743  	   OCHMD.CREATED_BY
15:47:50 1744  	 FROM
15:47:50 1745  	   OFFER_CHAIN_META_DATA OCHMD
15:47:50 1746  	 WHERE
15:47:50 1747  	   OCHMD.OFFER_CHAIN_ID = in_offer_chain_id;
15:47:50 1748  
15:47:50 1749  EXCEPTION
15:47:50 1750  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:50 1751  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1752  	   SPROC_NAME, 'No such offer chain', SQLERRM);
15:47:50 1753  WHEN OTHERS THEN
15:47:50 1754  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1755  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1756  END GET_ALL_META_DATA;
15:47:50 1757  
15:47:50 1758  PROCEDURE CHECK_PRODUCT_ELIGIBILITY (
15:47:50 1759  	 in_group_id	   IN NUMBER,
15:47:50 1760  	 in_offer_chain_id IN NUMBER,
15:47:50 1761  	 out_is_eligible   OUT NUMBER,
15:47:50 1762  	 out_concurrent_subscription_id OUT NUMBER
15:47:50 1763  ) AS
15:47:50 1764  SPROC_NAME CONSTANT VARCHAR2(25) := 'CHECK_PRODUCT_ELIGIBILITY';
15:47:50 1765  -- Variables
15:47:50 1766  var_account_id  NUMBER;
15:47:50 1767  var_is_eligible NUMBER;
15:47:50 1768  var_is_gc       NUMBER;
15:47:50 1769  -- Exceptions
15:47:50 1770  BAD_GROUP_ID		   EXCEPTION;
15:47:50 1771  CAN_NOT_CHECK_SAME_PRODUCTS EXCEPTION;
15:47:50 1772  BAD_OC_ID		   EXCEPTION;
15:47:50 1773  EXCEPTION_MESSAGE	   VARCHAR(1024);
15:47:50 1774  BEGIN
15:47:50 1775  
15:47:50 1776  	 var_is_eligible := GLOBAL_CONSTANTS_V22.TRUE;
15:47:50 1777  
15:47:50 1778  	 out_concurrent_subscription_id := NULL;
15:47:50 1779  
15:47:50 1780  	 BEGIN
15:47:50 1781  	   SELECT
15:47:50 1782  	     OC.IS_GIFT_CERTIFICATE into var_is_gc
15:47:50 1783  	   FROM
15:47:50 1784  	     OFFER_CHAIN OC
15:47:50 1785  	   WHERE
15:47:50 1786  	     OC.ID = in_offer_chain_id;
15:47:50 1787  	   EXCEPTION
15:47:50 1788  	     WHEN NO_DATA_FOUND THEN
15:47:50 1789  	       RAISE BAD_OC_ID;
15:47:50 1790  	 END;
15:47:50 1791  
15:47:50 1792  	 -- only check eligibility if this is not a gift certificate
15:47:50 1793  	 IF (var_is_gc IS NULL OR var_is_gc != 1) THEN
15:47:50 1794  	   BEGIN
15:47:50 1795  	     SELECT
15:47:50 1796  	       A.ID into var_account_id
15:47:50 1797  	     FROM
15:47:50 1798  	       ACCOUNT A
15:47:50 1799  	     WHERE
15:47:50 1800  	       A.GROUP_ID = in_group_id;
15:47:50 1801  	     EXCEPTION
15:47:50 1802  	       WHEN NO_DATA_FOUND THEN
15:47:50 1803  		 RAISE BAD_GROUP_ID;
15:47:50 1804  	   END;
15:47:50 1805  
15:47:50 1806  
15:47:50 1807  	   FOR f_offer_chain IN (
15:47:50 1808  	       SELECT
15:47:50 1809  		 S.ID as SUBSCRIPTION_ID,
15:47:50 1810  		 S.OFFER_CHAIN_ID
15:47:50 1811  	       FROM
15:47:50 1812  		 SUBSCRIPTION S
15:47:50 1813  	       WHERE
15:47:50 1814  		 S.ACCOUNT_ID = var_account_id
15:47:50 1815  		 AND (S.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:50 1816  		      OR S.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD)
15:47:50 1817  	   )
15:47:50 1818  	   LOOP
15:47:50 1819  	     BEGIN
15:47:50 1820  	       IF (
15:47:50 1821  		 PROCS_OFFER_CHAIN_V22.CHECK_FOR_SAME_PRODUCTS(
15:47:50 1822  		   in_offer_chain_id,
15:47:50 1823  		   f_offer_chain.offer_chain_id,
15:47:50 1824  		   GLOBAL_CONSTANTS_V22.TRUE
15:47:50 1825  		 ) = GLOBAL_CONSTANTS_V22.TRUE
15:47:50 1826  	       ) THEN
15:47:50 1827  		 var_is_eligible := GLOBAL_CONSTANTS_V22.FALSE;
15:47:50 1828  		 out_concurrent_subscription_id := f_offer_chain.SUBSCRIPTION_ID;
15:47:50 1829  	       END IF;
15:47:50 1830  	       EXCEPTION
15:47:50 1831  		 WHEN OTHERS THEN
15:47:50 1832  		   EXCEPTION_MESSAGE := SQLERRM;
15:47:50 1833  		   RAISE CAN_NOT_CHECK_SAME_PRODUCTS;
15:47:50 1834  	     END;
15:47:50 1835  	   END LOOP;
15:47:50 1836  	 END IF;
15:47:50 1837  	 out_is_eligible := var_is_eligible;
15:47:50 1838  
15:47:50 1839  EXCEPTION
15:47:50 1840  WHEN BAD_GROUP_ID THEN
15:47:50 1841  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1842  	   SPROC_NAME, 'No such offer chain', SQLERRM);
15:47:50 1843  WHEN BAD_OC_ID THEN
15:47:50 1844  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1845  	   SPROC_NAME, 'No such offer chain', SQLERRM);
15:47:50 1846  WHEN CAN_NOT_CHECK_SAME_PRODUCTS THEN
15:47:50 1847  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:50 1848  	   SPROC_NAME, 'Could not check offers for same products', EXCEPTION_MESSAGE);
15:47:50 1849  WHEN OTHERS THEN
15:47:50 1850  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1851  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1852  END CHECK_PRODUCT_ELIGIBILITY;
15:47:50 1853  
15:47:50 1854  PROCEDURE GET_NOTIFICATION_TYPE_ID (
15:47:50 1855  	 in_offer_chain_id	  IN NUMBER,
15:47:50 1856  	 in_action_name 	  IN VARCHAR2,
15:47:50 1857  	 out_notification_type_id OUT NUMBER
15:47:50 1858  ) AS
15:47:50 1859  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_NOTIFICATION_TEMPLATE_ID';
15:47:50 1860  -- Variables
15:47:50 1861  var_action_id NUMBER;
15:47:50 1862  -- Exceptions
15:47:50 1863  BAD_ACTION_NAME	      EXCEPTION;
15:47:50 1864  MULTIPLY_ACTIONS_FOUND EXCEPTION;
15:47:50 1865  BEGIN
15:47:50 1866  
15:47:50 1867  	 BEGIN
15:47:50 1868  	   SELECT
15:47:50 1869  	     A.ID into var_action_id
15:47:50 1870  	   FROM
15:47:50 1871  	     ACTION A
15:47:50 1872  	   WHERE
15:47:50 1873  	     UPPER(A.NAME) = UPPER(in_action_name);
15:47:50 1874  	   EXCEPTION
15:47:50 1875  	     WHEN NO_DATA_FOUND THEN
15:47:50 1876  	       RAISE BAD_ACTION_NAME;
15:47:50 1877  	     WHEN TOO_MANY_ROWS THEN
15:47:50 1878  	       RAISE MULTIPLY_ACTIONS_FOUND;
15:47:50 1879  	 END;
15:47:50 1880  
15:47:50 1881  	 SELECT
15:47:50 1882  	   OCNT.NOTIFICATION_TYPE_ID into out_notification_type_id
15:47:50 1883  	 FROM
15:47:50 1884  	   OFFER_CHAIN_NOTIFICATION_TYPE OCNT
15:47:50 1885  	 WHERE
15:47:50 1886  	   OCNT.OFFER_CHAIN_ID = in_offer_chain_id
15:47:50 1887  	   AND OCNT.ACTION_ID = var_action_id;
15:47:50 1888  
15:47:50 1889  EXCEPTION
15:47:50 1890  WHEN NO_DATA_FOUND THEN
15:47:50 1891  	 out_notification_type_id := NULL;
15:47:50 1892  WHEN BAD_ACTION_NAME THEN
15:47:50 1893  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:50 1894  	   SPROC_NAME, 'Bad action name', SQLERRM);
15:47:50 1895  WHEN MULTIPLY_ACTIONS_FOUND THEN
15:47:50 1896  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:50 1897  	   SPROC_NAME, 'Found more then one action with given name', SQLERRM);
15:47:50 1898  WHEN OTHERS THEN
15:47:50 1899  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1900  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1901  END GET_NOTIFICATION_TYPE_ID;
15:47:50 1902  
15:47:50 1903  END PROCS_OFFER_CHAIN_V22;
15:47:50 1904  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_POLLING_SYNC"
15:47:50   2  AS
15:47:50   3  	  --------------------------------------------------------------------------------
15:47:50   4  PROCEDURE GATHER_SYNC_EVENTS
15:47:50   5  	  (
15:47:50   6  	      in_last_timestamp TIMESTAMP,
15:47:50   7  	      out_new_timestamp OUT TIMESTAMP)
15:47:50   8  IS
15:47:50   9  BEGIN
15:47:50  10  	  out_new_timestamp := systimestamp;
15:47:50  11  	  GATHER_SYNC_EVENTS_RANGE(in_last_timestamp, out_new_timestamp, (3 / 24 / 60));
15:47:50  12  END;
15:47:50  13  	  --------------------------------------------------------------------------------
15:47:50  14  PROCEDURE GATHER_SYNC_EVENTS_RANGE(in_start_ts timestamp, in_end_ts timestamp, in_offset number)
15:47:50  15  IS
15:47:50  16  BEGIN
15:47:50  17  	  INSERT
15:47:50  18  	  INTO
15:47:50  19  	      core_owner.polling_sync
15:47:50  20  	      (
15:47:50  21  		  account_id,
15:47:50  22  		  group_id,
15:47:50  23  		  event_type,
15:47:50  24  		  event_date
15:47:50  25  	      )
15:47:50  26  	  select id, group_id, event_type, event_date from (
15:47:50  27  	      SELECT
15:47:50  28  		  a.id,
15:47:50  29  		  a.group_id,
15:47:50  30  		  'I' event_type,
15:47:50  31  		  in_end_ts event_date,
15:47:50  32  		  max(cl.change_time) last_change_time
15:47:50  33  	      FROM
15:47:50  34  		  core_hist_owner.change_log cl,
15:47:50  35  		  core_owner.credit_card cc,
15:47:50  36  		  core_owner.account a
15:47:50  37  	      WHERE
15:47:50  38  		  cl.change_time between in_start_ts-in_offset and in_end_ts
15:47:50  39  	      AND cl.item = 'CREDIT_CARD'
15:47:50  40  	      AND cl.id = cc.id
15:47:50  41  	      AND cc.account_id = a.id
15:47:50  42  	      GROUP BY a.id, a.group_id
15:47:50  43  	      UNION ALL
15:47:50  44  	      SELECT
15:47:50  45  		  a.id,
15:47:50  46  		  a.group_id,
15:47:50  47  		  'I',
15:47:50  48  		  in_end_ts,
15:47:50  49  		  max(cl.change_time) last_change_time
15:47:50  50  	      FROM
15:47:50  51  		  core_hist_owner.change_log cl,
15:47:50  52  		  core_owner.paypal p,
15:47:50  53  		  core_owner.account a
15:47:50  54  	      WHERE
15:47:50  55  		  cl.change_time between in_start_ts-in_offset and in_end_ts
15:47:50  56  	      AND cl.item = 'PAYPAL'
15:47:50  57  	      AND cl.id = p.id
15:47:50  58  	      AND p.account_id = a.id
15:47:50  59  	      GROUP BY a.id, a.group_id
15:47:50  60  	      UNION ALL
15:47:50  61  	      SELECT
15:47:50  62  		  a.id,
15:47:50  63  		  a.group_id,
15:47:50  64  		  'S',
15:47:50  65  		  in_end_ts,
15:47:50  66  		  max(cl.change_time) last_change_time
15:47:50  67  	      FROM
15:47:50  68  		  core_hist_owner.change_log cl,
15:47:50  69  		  core_owner.subscription s,
15:47:50  70  		  core_owner.account a
15:47:50  71  	      WHERE
15:47:50  72  		  cl.change_time between in_start_ts-in_offset and in_end_ts
15:47:50  73  	      AND cl.item = 'SUBSCRIPTION'
15:47:50  74  	      AND cl.id = s.id
15:47:50  75  	      AND s.account_id = a.id
15:47:50  76  	      GROUP BY a.id, a.group_id
15:47:50  77  	      UNION ALL
15:47:50  78  	      SELECT
15:47:50  79  		  a.id,
15:47:50  80  		  a.group_id,
15:47:50  81  		  'G',
15:47:50  82  		  in_end_ts,
15:47:50  83  		  max(cl.change_time) last_change_time
15:47:50  84  	      FROM
15:47:50  85  		  core_hist_owner.change_log cl,
15:47:50  86  		  core_owner.gift_certificate gc,
15:47:50  87  		  core_owner.account a
15:47:50  88  	      WHERE
15:47:50  89  		  cl.change_time between in_start_ts-in_offset and in_end_ts
15:47:50  90  	      AND cl.item = 'GIFT_CERTIFICATE'
15:47:50  91  	      AND cl.id = gc.id
15:47:50  92  	      AND gc.purchaser_group_id = a.group_id
15:47:50  93  	      GROUP BY a.id, a.group_id
15:47:50  94  	  ) t
15:47:50  95  	  where not exists (
15:47:50  96  	      select 1 --ps.account_id, ps.group_id, ps.event_type
15:47:50  97  	      from polling_sync ps
15:47:50  98  	      where ps.account_id = t.id
15:47:50  99  		and ps.group_id = t.group_id
15:47:50 100  		and ps.event_type = t.event_type
15:47:50 101  		and ps.event_date >= t.last_change_time
15:47:50 102  	  )
15:47:50 103  	  ;
15:47:50 104  END;
15:47:50 105  --------------------------------------------------------------------------------
15:47:50 106  FUNCTION CREATE_NEW_TRANSFER_SET
15:47:50 107  	  (
15:47:50 108  	      in_set_maximum NUMBER)
15:47:50 109  	  RETURN core_owner.polling_sync.set_id%type
15:47:50 110  IS
15:47:50 111  	  pragma autonomous_transaction;
15:47:50 112  	  v_set_id core_owner.polling_sync.set_id%type;
15:47:50 113  BEGIN
15:47:50 114  	  SELECT
15:47:50 115  	      pollsync_setid_seq.nextval
15:47:50 116  	  INTO
15:47:50 117  	      v_set_id
15:47:50 118  	  FROM
15:47:50 119  	      dual;
15:47:50 120  	  update
15:47:50 121  	    core_owner.polling_sync ps
15:47:50 122  	  set
15:47:50 123  	    ps.set_id = v_set_id
15:47:50 124  	  where
15:47:50 125  	    ps.set_id IS NULL and
15:47:50 126  	    rownum <= in_set_maximum
15:47:50 127  	  ;
15:47:50 128  	  COMMIT;
15:47:50 129  	  RETURN v_set_id;
15:47:50 130  END;
15:47:50 131  --------------------------------------------------------------------------------
15:47:50 132  FUNCTION RETREIVE_TRANSFER_SET
15:47:50 133  	  (
15:47:50 134  	      in_set_id core_owner.polling_sync.set_id%type)
15:47:50 135  	  RETURN sys_refcursor
15:47:50 136  IS
15:47:50 137  	  v_refcursor sys_refcursor;
15:47:50 138  BEGIN
15:47:50 139  	  UPDATE
15:47:50 140  	      core_owner.polling_sync ps
15:47:50 141  	  SET
15:47:50 142  	      ps.last_send_date = sysdate,
15:47:50 143  	      ps.num_calls = ps.num_calls + 1
15:47:50 144  	  WHERE
15:47:50 145  	      ps.set_id = in_set_id ;
15:47:50 146  	  OPEN v_refcursor FOR
15:47:50 147  	  SELECT
15:47:50 148  	      ps.set_id,
15:47:50 149  	      ps.group_id,
15:47:50 150  	      ps.event_type,
15:47:50 151  	      ps.event_date
15:47:50 152  	  FROM
15:47:50 153  	      core_owner.polling_sync ps
15:47:50 154  	  WHERE
15:47:50 155  	      ps.set_id = in_set_id
15:47:50 156  	  AND ps.group_id IS NOT NULL ;
15:47:50 157  	  RETURN v_refcursor;
15:47:50 158  END;
15:47:50 159  --------------------------------------------------------------------------------
15:47:50 160  PROCEDURE GET_TRANSFER_SET
15:47:50 161  	  (
15:47:50 162  	      in_set_maximum NUMBER,
15:47:50 163  	      in_max_retries NUMBER,
15:47:50 164  	      out_refcursor OUT sys_refcursor)
15:47:50 165  IS
15:47:50 166  	  v_set_id core_owner.polling_sync.set_id%type;
15:47:50 167  BEGIN
15:47:50 168  	  /* Look for previously sent but unconfirmed sets and
15:47:50 169  	  send again until max_retries calls */
15:47:50 170  	  FOR x IN
15:47:50 171  	  (
15:47:50 172  	      SELECT
15:47:50 173  		  ps.set_id,
15:47:50 174  		  COUNT( *) set_size
15:47:50 175  	      FROM
15:47:50 176  		  core_owner.polling_sync ps
15:47:50 177  	      WHERE
15:47:50 178  		  ps.event_date > sysdate - 14
15:47:50 179  	      AND ps.confirm_date IS NULL
15:47:50 180  	      AND ps.last_send_date IS NOT NULL
15:47:50 181  	      AND ps.num_calls < in_max_retries
15:47:50 182  	      GROUP BY
15:47:50 183  		  ps.set_id
15:47:50 184  	      ORDER BY
15:47:50 185  		  ps.set_id
15:47:50 186  	  )
15:47:50 187  	  LOOP
15:47:50 188  	      out_refcursor := Retreive_Transfer_Set(x.set_id) ;
15:47:50 189  	      RETURN;
15:47:50 190  	  END LOOP;
15:47:50 191  	  v_set_id := Create_New_Transfer_Set(in_set_maximum) ;
15:47:50 192  	  out_refcursor := Retreive_Transfer_Set(v_set_id) ;
15:47:50 193  	  RETURN;
15:47:50 194  END;
15:47:50 195  --------------------------------------------------------------------------------
15:47:50 196  PROCEDURE CONFIRM_TRANSFER_SET
15:47:50 197  	  (
15:47:50 198  	      in_set_id core_owner.polling_sync.set_id%type)
15:47:50 199  IS
15:47:50 200  	  v_unconfirmable EXCEPTION;
15:47:50 201  BEGIN
15:47:50 202  	  UPDATE
15:47:50 203  	      core_owner.polling_sync ps
15:47:50 204  	  SET
15:47:50 205  	      ps.confirm_date = systimestamp
15:47:50 206  	  WHERE
15:47:50 207  	      ps.set_id = in_set_id
15:47:50 208  	  AND ps.confirm_date IS NULL ;
15:47:50 209  	  IF(sql%rowcount < 1) THEN
15:47:50 210  	      raise v_unconfirmable;
15:47:50 211  	  END IF;
15:47:50 212  END;
15:47:50 213  PROCEDURE SET_LAST_RUN(ts in timestamp)
15:47:50 214  IS
15:47:50 215  BEGIN
15:47:50 216  	  UPDATE POLLING_SYNC_LASTRUN
15:47:50 217  	  SET last_run = current_timestamp;
15:47:50 218  	  IF ( sql%rowcount = 0 )
15:47:50 219  	  THEN
15:47:50 220  	    INSERT INTO POLLING_SYNC_LASTRUN VALUES (ts);
15:47:50 221  	  END if;
15:47:50 222  	  COMMIT;
15:47:50 223  END;
15:47:50 224  PROCEDURE GET_LAST_RUN(ts out timestamp)
15:47:50 225  IS
15:47:50 226  BEGIN
15:47:50 227  	  SELECT LAST_RUN INTO ts
15:47:50 228  	  FROM POLLING_SYNC_LASTRUN
15:47:50 229  	  WHERE ROWNUM < 2;
15:47:50 230  EXCEPTION
15:47:50 231  	WHEN NO_DATA_FOUND
15:47:50 232  	THEN
15:47:50 233  	  ts := current_timestamp;
15:47:50 234  END;
15:47:50 235  END PROCS_POLLING_SYNC;
15:47:50 236  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_PRODUCT_V22" AS
15:47:50   2  
15:47:50   3  PROCEDURE GET_PRODUCTS (
15:47:50   4  /*
15:47:50   5  Throws exceptions:
15:47:50   6  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50   7  */
15:47:50   8  	in_status_id   IN  NUMBER,
15:47:50   9  	out_result_set OUT SYS_REFCURSOR
15:47:50  10  ) AS
15:47:50  11  SPROC_NAME CONSTANT VARCHAR2(12) := 'GET_PRODUCTS';
15:47:50  12  BEGIN
15:47:50  13  	OPEN out_result_set FOR
15:47:50  14  	SELECT
15:47:50  15  	  PRODUCT.ID,
15:47:50  16  	  PRODUCT.NAME,
15:47:50  17  	  PRODUCT.UNIT_PRICE,
15:47:50  18  	  PRODUCT.PRODUCTION_COST,
15:47:50  19  	  PRODUCT.CREATE_DATE,
15:47:50  20  	  PRODUCT.CREATED_BY,
15:47:50  21  	  PRODUCT.PRODUCT_STATUS_ID,
15:47:50  22  	  PRODUCT.PRODUCT_URI
15:47:50  23  	FROM
15:47:50  24  	  PRODUCT
15:47:50  25   WHERE
15:47:50  26  	  PRODUCT.PRODUCT_STATUS_ID = NVL(in_status_id, PRODUCT.PRODUCT_STATUS_ID);
15:47:50  27  EXCEPTION
15:47:50  28  WHEN OTHERS THEN
15:47:50  29  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50  30  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50  31  END GET_PRODUCTS;
15:47:50  32  
15:47:50  33  /******************************************************************************/
15:47:50  34  
15:47:50  35  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
15:47:50  36  	in_product_offering_id	IN NUMBER,
15:47:50  37  	out_result_set OUT SYS_REFCURSOR
15:47:50  38  ) AS
15:47:50  39  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PRODUCT_OFFERING_META_DATA';
15:47:50  40  -- VARIABLES
15:47:50  41  temp_product_offering_id NUMBER;
15:47:50  42  -- EXCEPTIONS
15:47:50  43  BAD_PRODUCT_OFFERING_ID EXCEPTION;
15:47:50  44  BEGIN
15:47:50  45  
15:47:50  46  	-- Check that product offering exists
15:47:50  47  	BEGIN
15:47:50  48  	  SELECT
15:47:50  49  	    PRODUCT_OFFERING.ID into temp_product_offering_id
15:47:50  50  	  FROM
15:47:50  51  	    PRODUCT_OFFERING
15:47:50  52  	  WHERE
15:47:50  53  	    PRODUCT_OFFERING.ID = in_product_offering_id;
15:47:50  54  	  EXCEPTION
15:47:50  55  	    WHEN NO_DATA_FOUND THEN
15:47:50  56  	      RAISE BAD_PRODUCT_OFFERING_ID;
15:47:50  57  	END;
15:47:50  58  
15:47:50  59  	OPEN out_result_set FOR
15:47:50  60  	SELECT
15:47:50  61  	  PRODUCT_OFFERING_META_DATA.ID,
15:47:50  62  	  PRODUCT_OFFERING_META_DATA.NAME,
15:47:50  63  	  PRODUCT_OFFERING_META_DATA.VALUE,
15:47:50  64  	  PRODUCT_OFFERING_META_DATA.CREATED_BY,
15:47:50  65  	  PRODUCT_OFFERING_META_DATA.CREATE_DATE
15:47:50  66  	FROM
15:47:50  67  	  PRODUCT_OFFERING_META_DATA
15:47:50  68  	WHERE
15:47:50  69  	  PRODUCT_OFFERING_META_DATA.PRODUCT_OFFERING_ID = in_product_offering_id;
15:47:50  70  
15:47:50  71  EXCEPTION
15:47:50  72  WHEN BAD_PRODUCT_OFFERING_ID THEN
15:47:50  73  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50  74  	  SPROC_NAME, 'No such product offering id');
15:47:50  75  WHEN OTHERS THEN
15:47:50  76  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50  77  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50  78  END GET_PRODUCT_OFFERING_META_DATA;
15:47:50  79  
15:47:50  80  /******************************************************************************/
15:47:50  81  
15:47:50  82  PROCEDURE GET_PRODUCT_ELIGIBIL_BY_NAME (
15:47:50  83  /*
15:47:50  84  Throws exceptions:
15:47:50  85  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50  86  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50  87  */
15:47:50  88  	in_product_id	    IN NUMBER,
15:47:50  89  	in_eligibility_name IN VARCHAR2 DEFAULT NULL,
15:47:50  90  	out_result_set	    OUT SYS_REFCURSOR
15:47:50  91  ) AS
15:47:50  92  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_PRODUCT_ELIGIBIL_BY_NAME';
15:47:50  93  -- VARIABLES
15:47:50  94  temp_product_id NUMBER;
15:47:50  95  -- EXCEPTIONS
15:47:50  96  BAD_PRODUCT_ID EXCEPTION;
15:47:50  97  BEGIN
15:47:50  98  
15:47:50  99  	BEGIN
15:47:50 100  	  SELECT
15:47:50 101  	    PRODUCT.ID into temp_product_id
15:47:50 102  	  FROM
15:47:50 103  	    PRODUCT
15:47:50 104  	  WHERE
15:47:50 105  	    PRODUCT.ID = in_product_id;
15:47:50 106  	  EXCEPTION
15:47:50 107  	    WHEN NO_DATA_FOUND THEN
15:47:50 108  	      RAISE BAD_PRODUCT_ID;
15:47:50 109  	END;
15:47:50 110  
15:47:50 111  	OPEN out_result_set FOR
15:47:50 112  	SELECT
15:47:50 113  	  PRODUCT_ELIGIBILITY.ID
15:47:50 114  	FROM
15:47:50 115  	  PRODUCT_ELIGIBILITY
15:47:50 116  	WHERE
15:47:50 117  	  PRODUCT_ELIGIBILITY.ID = in_product_id
15:47:50 118  	  AND UPPER(PRODUCT_ELIGIBILITY.NAME) = UPPER(NVL(in_eligibility_name, PRODUCT_ELIGIBILITY.NAME));
15:47:50 119  
15:47:50 120  EXCEPTION
15:47:50 121  WHEN BAD_PRODUCT_ID THEN
15:47:50 122  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 123  	  SPROC_NAME, 'No such product');
15:47:50 124  WHEN OTHERS THEN
15:47:50 125  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 126  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 127  END GET_PRODUCT_ELIGIBIL_BY_NAME;
15:47:50 128  
15:47:50 129  /******************************************************************************/
15:47:50 130  
15:47:50 131  PROCEDURE GET_PRODUCT_BY_ID (
15:47:50 132  	in_product_id  IN NUMBER,
15:47:50 133  	out_result_set OUT SYS_REFCURSOR
15:47:50 134  ) AS
15:47:50 135  SPROC_NAME CONSTANT VARCHAR2(17) := 'GET_PRODUCT_BY_ID';
15:47:50 136  -- VARIABLES
15:47:50 137  temp_product_id NUMBER;
15:47:50 138  -- EXCEPTIONS
15:47:50 139  BAD_PRODUCT_ID EXCEPTION;
15:47:50 140  BEGIN
15:47:50 141  
15:47:50 142  	BEGIN
15:47:50 143  	  SELECT
15:47:50 144  	    PRODUCT.ID into temp_product_id
15:47:50 145  	  FROM
15:47:50 146  	    PRODUCT
15:47:50 147  	  WHERE
15:47:50 148  	    PRODUCT.ID = in_product_id;
15:47:50 149  	  EXCEPTION
15:47:50 150  	    WHEN NO_DATA_FOUND THEN
15:47:50 151  	      RAISE BAD_PRODUCT_ID;
15:47:50 152  	END;
15:47:50 153  
15:47:50 154  	OPEN out_result_set FOR
15:47:50 155  	SELECT
15:47:50 156  	  PRODUCT.ID,
15:47:50 157  	  PRODUCT.NAME,
15:47:50 158  	  PRODUCT.PRODUCT_STATUS_ID,
15:47:50 159  	  PRODUCT.PRODUCT_URI,
15:47:50 160  	  PRODUCT.PRODUCTION_COST,
15:47:50 161  	  PRODUCT.UNIT_PRICE,
15:47:50 162  	  PRODUCT.CREATE_DATE,
15:47:50 163  	  PRODUCT.CREATED_BY
15:47:50 164  	FROM
15:47:50 165  	  PRODUCT
15:47:50 166  	WHERE
15:47:50 167  	  PRODUCT.ID = in_product_id;
15:47:50 168  
15:47:50 169  EXCEPTION
15:47:50 170  WHEN BAD_PRODUCT_ID THEN
15:47:50 171  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 172  	  SPROC_NAME, 'No such product');
15:47:50 173  WHEN OTHERS THEN
15:47:50 174  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 175  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 176  END GET_PRODUCT_BY_ID;
15:47:50 177  
15:47:50 178  /******************************************************************************/
15:47:50 179  
15:47:50 180  PROCEDURE GET_PRD_OFFERING_BY_LINE_IT_ID (
15:47:50 181  	in_line_item_id IN NUMBER,
15:47:50 182  	out_result_set	OUT SYS_REFCURSOR
15:47:50 183  ) AS
15:47:50 184  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PRD_OFFERING_BY_LINE_IT_ID';
15:47:50 185  -- VARIABLES
15:47:50 186  temp_line_item_id NUMBER;
15:47:50 187  -- EXCEPTIONS
15:47:50 188  BAD_LINE_ITEM_ID EXCEPTION;
15:47:50 189  BEGIN
15:47:50 190  
15:47:50 191  	BEGIN
15:47:50 192  	  SELECT
15:47:50 193  	    LINE_ITEM.ID into temp_line_item_id
15:47:50 194  	  FROM
15:47:50 195  	    LINE_ITEM
15:47:50 196  	  WHERE
15:47:50 197  	    LINE_ITEM.ID = in_line_item_id;
15:47:50 198  	  EXCEPTION
15:47:50 199  	    WHEN NO_DATA_FOUND THEN
15:47:50 200  	      RAISE BAD_LINE_ITEM_ID;
15:47:50 201  	END;
15:47:50 202  
15:47:50 203  	OPEN out_result_set FOR
15:47:50 204  	SELECT
15:47:50 205  	  PRODUCT_OFFERING.ID,
15:47:50 206  	  PRODUCT_OFFERING.PRODUCT_ID,
15:47:50 207  	  PRODUCT_OFFERING.QUANTITY,
15:47:50 208  	  PRODUCT_OFFERING.UNIT_PRICE,
15:47:50 209  	  PRODUCT_OFFERING.TAX_CATEGORY_ID,
15:47:50 210  	  PRODUCT_OFFERING.CREATE_DATE,
15:47:50 211  	  PRODUCT_OFFERING.CREATED_BY,
15:47:50 212  	  PRODUCT_OFFERING.TAX_POLICY_TYPE_ID,
15:47:50 213  	  CAPABILITY.ID CAP_ID,
15:47:50 214  	  CAPABILITY.CODE CAP_CODE,
15:47:50 215  	  CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
15:47:50 216  	  CAPABILITY.SHAREABLE CAP_SHAREABLE
15:47:50 217  	FROM
15:47:50 218  	  PRODUCT_OFFERING
15:47:50 219  	  INNER JOIN LINE_ITEM ON LINE_ITEM.PRODUCT_OFFER_ID = PRODUCT_OFFERING.ID
15:47:50 220  	  INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
15:47:50 221  	WHERE
15:47:50 222  	  LINE_ITEM.ID = in_line_item_id;
15:47:50 223  
15:47:50 224  EXCEPTION
15:47:50 225  WHEN BAD_LINE_ITEM_ID THEN
15:47:50 226  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 227  	  SPROC_NAME, 'No such line item');
15:47:50 228  WHEN OTHERS THEN
15:47:50 229  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 230  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 231  END GET_PRD_OFFERING_BY_LINE_IT_ID;
15:47:50 232  
15:47:50 233  /******************************************************************************/
15:47:50 234  
15:47:50 235  PROCEDURE GET_PRD_OFFERING_BY_ID (
15:47:50 236  	in_product_offering_id IN NUMBER,
15:47:50 237  	out_result_set	OUT SYS_REFCURSOR
15:47:50 238  ) AS
15:47:50 239  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PRD_OFFERING_BY_ID';
15:47:50 240  BEGIN
15:47:50 241  	OPEN out_result_set FOR
15:47:50 242  	SELECT
15:47:50 243  	  PRODUCT_OFFERING.ID,
15:47:50 244  	  PRODUCT_OFFERING.PRODUCT_ID,
15:47:50 245  	  PRODUCT_OFFERING.QUANTITY,
15:47:50 246  	  PRODUCT_OFFERING.UNIT_PRICE,
15:47:50 247  	  PRODUCT_OFFERING.TAX_CATEGORY_ID,
15:47:50 248  	  PRODUCT_OFFERING.CREATE_DATE,
15:47:50 249  	  PRODUCT_OFFERING.CREATED_BY,
15:47:50 250  	  CAPABILITY.ID CAP_ID,
15:47:50 251  	  CAPABILITY.CODE CAP_CODE,
15:47:50 252  	  CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
15:47:50 253  	  CAPABILITY.SHAREABLE CAP_SHAREABLE
15:47:50 254  	FROM
15:47:50 255  	  PRODUCT_OFFERING
15:47:50 256  	  INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
15:47:50 257  	WHERE
15:47:50 258  	  PRODUCT_OFFERING.ID = in_product_offering_id;
15:47:50 259  
15:47:50 260  EXCEPTION
15:47:50 261  WHEN OTHERS THEN
15:47:50 262  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 263  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 264  END GET_PRD_OFFERING_BY_ID;
15:47:50 265  
15:47:50 266  /******************************************************************************/
15:47:50 267  
15:47:50 268  PROCEDURE GET_PRODUCT_OFFERING_DISCOUNTS(
15:47:50 269  	in_product_offering_id IN NUMBER,
15:47:50 270  	out_result_set	       OUT SYS_REFCURSOR
15:47:50 271  ) AS
15:47:50 272  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PRODUCT_OFFERING_DISCOUNTS';
15:47:50 273  -- VARIABLES
15:47:50 274  temp_product_offering_id NUMBER;
15:47:50 275  -- EXCEPTIONS
15:47:50 276  BAD_PRODUCT_OFFERING_ID EXCEPTION;
15:47:50 277  BEGIN
15:47:50 278  
15:47:50 279  	BEGIN
15:47:50 280  	  SELECT
15:47:50 281  	    PRODUCT_OFFERING.ID into temp_product_offering_id
15:47:50 282  	  FROM
15:47:50 283  	    PRODUCT_OFFERING
15:47:50 284  	  WHERE
15:47:50 285  	    PRODUCT_OFFERING.ID = in_product_offering_id;
15:47:50 286  	  EXCEPTION
15:47:50 287  	    WHEN NO_DATA_FOUND THEN
15:47:50 288  	      RAISE BAD_PRODUCT_OFFERING_ID;
15:47:50 289  	END;
15:47:50 290  
15:47:50 291  	OPEN out_result_set FOR
15:47:50 292  	SELECT
15:47:50 293  	  DISCOUNT.ID,
15:47:50 294  	  DISCOUNT.NAME,
15:47:50 295  	  DISCOUNT.FIXED_AMOUNT,
15:47:50 296  	  DISCOUNT.PERCENT_AMOUNT,
15:47:50 297  	  DISCOUNT.DISCOUNT_TYPE_ID,
15:47:50 298  	  DISCOUNT.CREATE_DATE,
15:47:50 299  	  DISCOUNT.CREATED_BY,
15:47:50 300  	  DISCOUNT.DESCRIPTION
15:47:50 301  	FROM
15:47:50 302  	  DISCOUNT
15:47:50 303  	  INNER JOIN DISCOUNT_PRODUCT_OFFERING on DISCOUNT.ID = DISCOUNT_PRODUCT_OFFERING.DISCOUNT_ID
15:47:50 304  	WHERE
15:47:50 305  	  DISCOUNT_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = in_product_offering_id;
15:47:50 306  
15:47:50 307  EXCEPTION
15:47:50 308  WHEN BAD_PRODUCT_OFFERING_ID THEN
15:47:50 309  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 310  	  SPROC_NAME, 'No such product offering');
15:47:50 311  WHEN OTHERS THEN
15:47:50 312  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 313  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 314  END GET_PRODUCT_OFFERING_DISCOUNTS;
15:47:50 315  
15:47:50 316  END PROCS_PRODUCT_V22;
15:47:50 317  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE
15:47:50   2  PACKAGE BODY PROCS_REPORTING AS
15:47:50   3  
15:47:50   4  ----
15:47:50   5  --------------------------------------------------------------------------------
15:47:50   6  ----
15:47:50   7  	  procedure ext_charge(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50   8  	  is
15:47:50   9  	  begin
15:47:50  10  	      open out_cursor for
15:47:50  11  		  with ids as ( select id from change_log cl where cl.item = 'CHARGE' and cl.change_time between in_start_date and in_end_date group by id )
15:47:50  12  		  select c.id charge_id, c.invoice_id, c.transaction_id, c.instrument_type_id, it.value instrument_type
15:47:50  13  			,c.instrument_id, c.charge_amount, c.charge_status_id, cs.value charge_status
15:47:50  14  			,c.create_date, c.update_date
15:47:50  15  		  from charge c
15:47:50  16  		      ,charge_status cs
15:47:50  17  		      ,instrument_type it
15:47:50  18  		      ,ids
15:47:50  19  		  where c.id = ids.id
15:47:50  20  		    and c.charge_status_id = cs.id
15:47:50  21  		    and c.instrument_type_id = it.id
15:47:50  22  	      ;
15:47:50  23  	  end;
15:47:50  24  ----
15:47:50  25  --------------------------------------------------------------------------------
15:47:50  26  ----
15:47:50  27  	  procedure ext_license(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50  28  	  is
15:47:50  29  	  begin
15:47:50  30  	      open out_cursor for
15:47:50  31  		  with ids as (select id from change_log cl where cl.item = 'LICENSE' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50  32  		  select l.id license_id, l.start_date, l.end_date, l.offer_id, l.subscription_id, l.invoice_id
15:47:50  33  			,l.license_status_id, ls.value license_status ,l.create_date, l.update_date
15:47:50  34  			,l.current_offer_index, l.current_offer_recurr_num, l.entitlement_end_date, l.grace_start_date, l.grace_end_date
15:47:50  35  		  from license l
15:47:50  36  		      ,license_status ls
15:47:50  37  		      ,ids
15:47:50  38  		  where l.id = ids.id
15:47:50  39  		    and l.license_status_id = ls.id
15:47:50  40  	      ;
15:47:50  41  	  end;
15:47:50  42  ----
15:47:50  43  --------------------------------------------------------------------------------
15:47:50  44  ----
15:47:50  45  	  procedure ext_invoice(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50  46  	  is
15:47:50  47  	  begin
15:47:50  48  	      open out_cursor for
15:47:50  49  		  with ids as ( select id from change_log cl where cl.item = 'INVOICE' and cl.change_time between in_start_date and in_end_date group by id )
15:47:50  50  		  select
15:47:50  51  		    i.id invoice_id,
15:47:50  52  		    i.create_date,
15:47:50  53  		    i.update_date,
15:47:50  54  		    i.invoice_status_id,
15:47:50  55  		    istat.value invoice_status,
15:47:50  56  		    NVL(
15:47:50  57  		       (select offer_chain_id from gift_certificate g where g.purchase_invoice_id = i.id and rownum <= 1),
15:47:50  58  		       (select offer_chain_id from subscription s, license l where l.subscription_id = s.id and l.invoice_id = i.id and rownum <= 1)
15:47:50  59  		    ) offer_chain_id
15:47:50  60  		  from	   invoice i
15:47:50  61  		      join invoice_status istat ON istat.id = i.invoice_status_id
15:47:50  62  		      join ids			on ids.id = i.id
15:47:50  63  		  where 1 = 1
15:47:50  64  	      ;
15:47:50  65  	  end;
15:47:50  66  ----
15:47:50  67  --------------------------------------------------------------------------------
15:47:50  68  ----
15:47:50  69  	  procedure ext_line_item(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50  70  	  is
15:47:50  71  	  begin
15:47:50  72  	      open out_cursor for
15:47:50  73  		  with ids as ( select id from change_log cl where cl.item = 'LINE_ITEM' and cl.change_time between in_start_date and in_end_date group by id )
15:47:50  74  		  select li.id line_item_id, li.invoice_id, li.product_offer_id, li.amount, li.quantity
15:47:50  75  		    ,li.discount_amount, li.taxes_amount, li.create_date
15:47:50  76  		  from line_item li
15:47:50  77  		    , ids
15:47:50  78  		  where li.id = ids.id
15:47:50  79  	      ;
15:47:50  80  	  end;
15:47:50  81  ----
15:47:50  82  --------------------------------------------------------------------------------
15:47:50  83  ----
15:47:50  84  	  procedure ext_account(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50  85  	  is
15:47:50  86  	  begin
15:47:50  87  	      open out_cursor for
15:47:50  88  		  with ids as (select id from change_log cl where cl.item = 'ACCOUNT' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50  89  		  select a.id account_id, a.account_status_id, astat.value account_status, a.group_id, a.suspend_date
15:47:50  90  			,a.create_date, a.update_date, a.instrument_type_id, it.value instrument_type
15:47:50  91  			,a.instrument_id, a.tax_exempt_id
15:47:50  92  			-- need system category??
15:47:50  93  		  from account a
15:47:50  94  		      ,account_status astat
15:47:50  95  		      ,instrument_type it
15:47:50  96  		      , ids
15:47:50  97  		  where a.id = ids.id
15:47:50  98  		    and astat.id = a.account_status_id
15:47:50  99  		    and a.instrument_type_id = it.id(+)
15:47:50 100  	      ;
15:47:50 101  	  end;
15:47:50 102  ----
15:47:50 103  --------------------------------------------------------------------------------
15:47:50 104  ----
15:47:50 105  	  procedure ext_subscription(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 106  	  is
15:47:50 107  	  begin
15:47:50 108  	      open out_cursor for
15:47:50 109  		  with ids as (select id from change_log cl where cl.item = 'SUBSCRIPTION' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 110  		  select s.id subscription_id, s.account_id, s.purchase_date, s.offer_chain_id
15:47:50 111  			,s.cancellation_date, sct.value cancellation_reason,0 cancellation_is_credit
15:47:50 112  			,s.create_date, s.update_date, s.subscription_status_id, ss.value subscription_status
15:47:50 113  			,s.instrument_type_id, it.value instrument_type, s.instrument_id, s.updated_by
15:47:50 114  		  from subscription s
15:47:50 115  		      ,subscription_status ss
15:47:50 116  		      ,subscription_cancel_reason sct
15:47:50 117  		      ,instrument_type it
15:47:50 118  		      , ids
15:47:50 119  		  where s.id = ids.id
15:47:50 120  		    and ss.id = s.subscription_status_id
15:47:50 121  		    and s.instrument_type_id = it.id
15:47:50 122  		    and sct.id(+) = s.sct_id
15:47:50 123  	      ;
15:47:50 124  	  end;
15:47:50 125  ----
15:47:50 126  --------------------------------------------------------------------------------
15:47:50 127  ----
15:47:50 128  	  procedure ext_transaction(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 129  	  is
15:47:50 130  	  begin
15:47:50 131  	      open out_cursor for
15:47:50 132  		  with ids as (select id from change_log cl where cl.item = 'TRANSACTION' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 133  		  select t.id transaction_id, t.transaction_amount
15:47:50 134  			,t.transaction_status_id, ts.value transaction_status, t.order_id
15:47:50 135  			,t.create_date, t.update_date, t.is_settled
15:47:50 136  		  from transaction t
15:47:50 137  		      ,transaction_status ts
15:47:50 138  		      , ids
15:47:50 139  		  where t.id = ids.id
15:47:50 140  		    and t.transaction_status_id = ts.id
15:47:50 141  	      ;
15:47:50 142  	  end;
15:47:50 143  ----
15:47:50 144  --------------------------------------------------------------------------------
15:47:50 145  ----
15:47:50 146  	  procedure ext_offer_chain(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 147  	  is
15:47:50 148  	  begin
15:47:50 149  	      open out_cursor for
15:47:50 150  		  with ids as (select id from change_log cl where cl.item = 'OFFER_CHAIN' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 151  		  select oc.id offer_chain_id, oc.name, oc.description, oc.offer_chain_status_id, ocs.value offer_chain_status
15:47:50 152  			,oc.adoptability_window_start_date adoptability_start_date, oc.adoptability_window_end_date adoptability_end_date
15:47:50 153  			,oc.is_gift_certificate, oc.product_uri, oc.create_date, oc.update_date, oc.vendor_source_id, vs.name vendor_source_name
15:47:50 154  			,oc.billing_source_id, bs.name billing_source_name
15:47:50 155  			,oc.is_seat_license,oc.group_account_type_id
15:47:50 156  		  from offer_chain oc
15:47:50 157  		      , offer_chain_status ocs
15:47:50 158  		      , ids
15:47:50 159  		      , vendor_source vs
15:47:50 160  		      , billing_source bs
15:47:50 161  		  where oc.id = ids.id
15:47:50 162  		    and oc.offer_chain_status_id = ocs.id
15:47:50 163  		    and oc.vendor_source_id = vs.id
15:47:50 164  		    and oc.billing_source_id = bs.id
15:47:50 165  	      ;
15:47:50 166  	  end;
15:47:50 167  ----
15:47:50 168  --------------------------------------------------------------------------------
15:47:50 169  ----
15:47:50 170  	  procedure ext_offer_offer_chain(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 171  	  is
15:47:50 172  	  begin
15:47:50 173  	      open out_cursor for
15:47:50 174  		  with ids as (select combined_id id from change_log cl where cl.item = 'OFFER_OFFER_CHAIN' and cl.change_time between in_start_date and in_end_date group by combined_id)
15:47:50 175  		  select ooc.offer_id||'~'||ooc.offer_chain_id offer_offer_chain_id, ooc.offer_id, ooc.offer_chain_id
15:47:50 176  			,ooc.index_value, ooc.num_recurrences, ooc.create_date, ooc.update_date
15:47:50 177  		  from offer_offer_chain ooc
15:47:50 178  		  , ids
15:47:50 179  		  where ooc.offer_id||'~'||ooc.offer_chain_id = ids.id
15:47:50 180  	      ;
15:47:50 181  	  end;
15:47:50 182  ----
15:47:50 183  --------------------------------------------------------------------------------
15:47:50 184  ----
15:47:50 185  	  procedure ext_offer(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 186  	  is
15:47:50 187  	  begin
15:47:50 188  	      open out_cursor for
15:47:50 189  		  with ids as (select id from change_log cl where cl.item = 'OFFER' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 190  		  select o.id offer_id, o.offer_status_id, os.value offer_status, o.entitlement_duration, o.create_date, o.update_date
15:47:50 191  		  from offer o
15:47:50 192  		      ,offer_status os
15:47:50 193  		      , ids
15:47:50 194  		  where o.id = ids.id
15:47:50 195  		    and o.offer_status_id = os.id
15:47:50 196  	      ;
15:47:50 197  	  end;
15:47:50 198  ----
15:47:50 199  --------------------------------------------------------------------------------
15:47:50 200  ----
15:47:50 201  	  procedure ext_gift_certificate(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 202  	  is
15:47:50 203  	  begin
15:47:50 204  	      open out_cursor for
15:47:50 205  		  with ids as (select id from change_log cl where cl.item = 'GIFT_CERTIFICATE' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 206  		  select  gc.id gift_certificate_id, gc.purchaser_group_id, gc.purchase_invoice_id, gc.offer_chain_id
15:47:50 207  			 ,gc.expiration_date, gc.purchase_date
15:47:50 208  			 ,gc.gift_certificate_status_id, gcs.value gift_certificate_status, gc.redeemer_group_id
15:47:50 209  			 ,gc.finalized_invoice_id, gc.create_date, gc.update_date
15:47:50 210  			 ,recipient_address_id
15:47:50 211  			 ,redeemer_address_id
15:47:50 212  			 ,recipient_notify_date
15:47:50 213  			 ,recipient_name
15:47:50 214  			 ,redemption_date
15:47:50 215  			 ,recipient_email
15:47:50 216  		  from gift_certificate gc
15:47:50 217  		      ,gift_certificate_status gcs
15:47:50 218  		      , ids
15:47:50 219  		  where gc.id = ids.id
15:47:50 220  		    and gc.gift_certificate_status_id = gcs.id
15:47:50 221  	      ;
15:47:50 222  	  end;
15:47:50 223  ----
15:47:50 224  --------------------------------------------------------------------------------
15:47:50 225  ----
15:47:50 226  	  procedure ext_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 227  	  is
15:47:50 228  	  begin
15:47:50 229  	      open out_cursor for
15:47:50 230  		  with ids as (select id from change_log cl where cl.item = 'PRODUCT_OFFERING' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 231  		  select po.id product_offering_id, po.product_id, po.unit_price, po.quantity, po.create_date
15:47:50 232  		  from product_offering po
15:47:50 233  		  , ids
15:47:50 234  		  where po.id = ids.id
15:47:50 235  	      ;
15:47:50 236  	  end;
15:47:50 237  ----
15:47:50 238  --------------------------------------------------------------------------------
15:47:50 239  ----
15:47:50 240  	  procedure ext_product(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 241  	  is
15:47:50 242  	  begin
15:47:50 243  	      open out_cursor for
15:47:50 244  		  with ids as (select id from change_log cl where cl.item = 'PRODUCT' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 245  		  select p.id product_id, p.name, p.unit_price, p.production_cost, p.product_status_id, ps.value product_status
15:47:50 246  			,product_uri, p.create_date
15:47:50 247  		  from product p
15:47:50 248  		      ,product_status ps
15:47:50 249  		      , ids
15:47:50 250  		  where p.id = ids.id
15:47:50 251  		    and p.product_status_id = ps.id
15:47:50 252  	      ;
15:47:50 253  	  end;
15:47:50 254  ----
15:47:50 255  --------------------------------------------------------------------------------
15:47:50 256  ----
15:47:50 257  	  procedure ext_offer_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 258  	  is
15:47:50 259  	  begin
15:47:50 260  	      open out_cursor for
15:47:50 261  		  with ids as (select combined_id id from change_log cl where cl.item = 'OFFER_PRODUCT_OFFERING' and cl.change_time between in_start_date and in_end_date group by combined_id)
15:47:50 262  		  select opo.product_offering_id||'~'||opo.offer_id, opo.product_offering_id, opo.offer_id, opo.create_date
15:47:50 263  		  from offer_product_offering opo
15:47:50 264  		  , ids
15:47:50 265  		  where opo.product_offering_id||'~'||opo.offer_id = ids.id
15:47:50 266  	      ;
15:47:50 267  	  end;
15:47:50 268  ----
15:47:50 269  --------------------------------------------------------------------------------
15:47:50 270  ----
15:47:50 271  	  procedure ext_discount_product_offering(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 272  	  is
15:47:50 273  	  begin
15:47:50 274  	      open out_cursor for
15:47:50 275  		  with ids as (select combined_id id from change_log cl where cl.item = 'DISCOUNT_PRODUCT_OFFERING' and cl.change_time between in_start_date and in_end_date group by combined_id)
15:47:50 276  		  select dpo.discount_id||'~'||dpo.product_offering_id, dpo.discount_id, dpo.product_offering_id, dpo.create_date
15:47:50 277  		  from discount_product_offering dpo
15:47:50 278  		  , ids
15:47:50 279  		  where dpo.discount_id||'~'||dpo.product_offering_id = ids.id
15:47:50 280  	      ;
15:47:50 281  	  end;
15:47:50 282  ----
15:47:50 283  --------------------------------------------------------------------------------
15:47:50 284  ----
15:47:50 285  	  procedure ext_discount(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 286  	  is
15:47:50 287  	  begin
15:47:50 288  	      open out_cursor for
15:47:50 289  		  with ids as (select id from change_log cl where cl.item = 'DISCOUNT' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 290  		  select d.id discount_id, d.name, d.description, d.fixed_amount, d.percent_amount
15:47:50 291  			,d.discount_type_id, dt.value discount_type, d.create_date
15:47:50 292  		  from discount d
15:47:50 293  		      ,discount_type dt
15:47:50 294  		      , ids
15:47:50 295  		  where d.id = ids.id
15:47:50 296  		    and d.discount_type_id = dt.id
15:47:50 297  	      ;
15:47:50 298  	  end;
15:47:50 299  ----
15:47:50 300  --------------------------------------------------------------------------------
15:47:50 301  ----
15:47:50 302  	  procedure ext_product_eligibility(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 303  	  is
15:47:50 304  	  begin
15:47:50 305  	      open out_cursor for
15:47:50 306  		  with ids as (select id from change_log cl where cl.item = 'PRODUCT_ELIGIBILITY' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 307  		  select pg.id product_eligibility_id, pg.product_id, pg.name, pg.value, pg.create_date
15:47:50 308  		  from product_eligibility pg
15:47:50 309  		  , ids
15:47:50 310  		  where pg.id = ids.id
15:47:50 311  	      ;
15:47:50 312  	  end;
15:47:50 313  ----
15:47:50 314  --------------------------------------------------------------------------------
15:47:50 315  ----
15:47:50 316  	  procedure ext_offer_chain_eligibility(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 317  	  is
15:47:50 318  	  begin
15:47:50 319  	      open out_cursor for
15:47:50 320  		  with ids as (select id from change_log cl where cl.item = 'OFFER_CHAIN_ELIGIBILITY' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 321  		  select oce.id offer_chain_eligibility_id, oce.offer_chain_id, oce.name, oce.value, oce.create_date
15:47:50 322  		  from offer_chain_eligibility oce
15:47:50 323  		  , ids
15:47:50 324  		  where oce.id = ids.id
15:47:50 325  	      ;
15:47:50 326  	  end;
15:47:50 327  ----
15:47:50 328  --------------------------------------------------------------------------------
15:47:50 329  ----
15:47:50 330  	  procedure ext_offer_chain_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 331  	  is
15:47:50 332  	  begin
15:47:50 333  	      open out_cursor for
15:47:50 334  		  with ids as (select id from change_log cl where cl.item = 'OFFER_CHAIN_META_DATA' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 335  		  select ocm.id offer_chain_meta_data_id, ocm.offer_chain_id, ocm.name, ocm.value, ocm.create_date
15:47:50 336  		  from offer_chain_meta_data ocm
15:47:50 337  		  , ids
15:47:50 338  		  where ocm.id = ids.id
15:47:50 339  	      ;
15:47:50 340  	  end;
15:47:50 341  ----
15:47:50 342  --------------------------------------------------------------------------------
15:47:50 343  ----
15:47:50 344  	  procedure ext_product_offering_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 345  	  is
15:47:50 346  	  begin
15:47:50 347  	      open out_cursor for
15:47:50 348  		  with ids as (select id from change_log cl where cl.item = 'PRODUCT_OFFERING_META_DATA' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 349  		  select pom.id prod_offer_meta_data_id, pom.product_offering_id, pom.name, pom.value, pom.create_date
15:47:50 350  		  from product_offering_meta_data pom
15:47:50 351  		  , ids
15:47:50 352  		  where pom.id = ids.id
15:47:50 353  	      ;
15:47:50 354  	  end;
15:47:50 355  ----
15:47:50 356  --------------------------------------------------------------------------------
15:47:50 357  ----
15:47:50 358  	  procedure ext_subscription_metadata(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 359  	  is
15:47:50 360  	  begin
15:47:50 361  	      open out_cursor for
15:47:50 362  		  with ids as (select id from change_log cl where cl.item = 'SUBSCRIPTION_META_DATA' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 363  		  select sm.id subscription_meta_data_id, sm.subscription_id, sm.name, sm.value, sm.create_date
15:47:50 364  		  from subscription_meta_data sm
15:47:50 365  		  , ids
15:47:50 366  		  where sm.id = ids.id
15:47:50 367  	      ;
15:47:50 368  	  end;
15:47:50 369  ----
15:47:50 370  --------------------------------------------------------------------------------
15:47:50 371  ----
15:47:50 372  	  procedure ext_credit_card(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 373  	  is
15:47:50 374  	  begin
15:47:50 375  	      open out_cursor for
15:47:50 376  		  with ids as (select id from change_log cl where cl.item = 'CREDIT_CARD' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 377  		  select cc.id credit_card_id, cc.account_id, cc.instrument_name, cc.state, cc.city, cc.postal_code
15:47:50 378  			,cc.country, cc.expiration_date, cc.credit_card_type_id, cct.value credit_card_type
15:47:50 379  			,cc.credit_card_status_id, ccs.value credit_card_status, cc.create_date, cc.update_date
15:47:50 380  		  from credit_card cc
15:47:50 381  		      ,credit_card_type cct
15:47:50 382  		      ,credit_card_status ccs
15:47:50 383  		      , ids
15:47:50 384  		  where cc.id = ids.id
15:47:50 385  		    and cc.credit_card_type_id = cct.id(+)
15:47:50 386  		    and cc.credit_card_status_id = ccs.id
15:47:50 387  	      ;
15:47:50 388  	  end;
15:47:50 389  ----
15:47:50 390  --------------------------------------------------------------------------------
15:47:50 391  ----
15:47:50 392  	  procedure ext_transaction_attempt(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 393  	  is
15:47:50 394  	  begin
15:47:50 395  	      open out_cursor for
15:47:50 396  		  with ids as (select id from change_log cl where cl.item = 'TRANSACTION_ATTEMPT' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 397  		  select ta.id transaction_attempt_id, ta.transaction_id, ta.external_transaction_id
15:47:50 398  			,ta.transaction_start_time, ta.external_status_code, ta.external_status_message
15:47:50 399  			,ta.transaction_attempt_status_id trans_attempt_status_id, tas.value transaction_attempt_status
15:47:50 400  			,ta.create_date
15:47:50 401  		  from transaction_attempt ta
15:47:50 402  		      ,transaction_attempt_status tas
15:47:50 403  		      , ids
15:47:50 404  		  where ta.id = ids.id
15:47:50 405  		    and ta.transaction_attempt_status_id = tas.id
15:47:50 406  	      ;
15:47:50 407  	  end;
15:47:50 408  ----
15:47:50 409  --------------------------------------------------------------------------------
15:47:50 410  ----
15:47:50 411  	  procedure ext_invoice_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 412  	  is
15:47:50 413  	  begin
15:47:50 414  	      open out_cursor for
15:47:50 415  		  with ids as (select id from change_log cl where cl.item = 'INVOICE_ADJUSTMENT' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 416  		  select ia.id invoice_adjustment_id, ia.invoice_id, ia.is_credit, ir.value adjustment_reason, ia.charge_id
15:47:50 417  			,ia.adjustment_date, ia.create_date
15:47:50 418  		  from invoice_adjustment ia, invoice_adjustment_reason ir
15:47:50 419  		  , ids
15:47:50 420  		  where ia.id = ids.id
15:47:50 421  		  and ir.id = ia.invoice_adjustment_reason_id
15:47:50 422  	      ;
15:47:50 423  	  end;
15:47:50 424  ----
15:47:50 425  --------------------------------------------------------------------------------
15:47:50 426  ----
15:47:50 427  
15:47:50 428  	  procedure ext_line_item_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 429  	  is
15:47:50 430  	  begin
15:47:50 431  	      open out_cursor for
15:47:50 432  		  with ids as (select id from change_log cl where cl.item = 'LINE_ITEM_ADJUSTMENT' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 433  		  select lia.id line_item_adjustment_id, lia.line_item_id, lia.invoice_adjustment_id, lia.amount, lia.tax, lia.discount, lia.create_date
15:47:50 434  		  from line_item_adjustment lia
15:47:50 435  		  , ids
15:47:50 436  		  where lia.id = ids.id
15:47:50 437  	      ;
15:47:50 438  	  end;
15:47:50 439  ----
15:47:50 440  --------------------------------------------------------------------------------
15:47:50 441  ----
15:47:50 442  
15:47:50 443  	  procedure ext_tax(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 444  	  is
15:47:50 445  	  begin
15:47:50 446  	      open out_cursor for
15:47:50 447  		  with ids as (select id from change_log cl where cl.item = 'TAX' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 448  		  select
15:47:50 449  		    tax.id tax_id,
15:47:50 450  		    ttype.code tax_type,
15:47:50 451  		    tax.calculated_amount,
15:47:50 452  		    tax.create_date,
15:47:50 453  		    tax.line_item_id,
15:47:50 454  		    tax.effective_rate,
15:47:50 455  		    tax.taxable_amount,
15:47:50 456  		    tax.tax_rule_id,
15:47:50 457  		    j.name jurisdiction_level,
15:47:50 458  		    tax.jurisdiction_name,
15:47:50 459  		    tax.jurisdiction_id,
15:47:50 460  		    tax.ext_tax_type,
15:47:50 461  		    tax.ext_result,
15:47:50 462  		    tax.imposition_type,
15:47:50 463  		    tax.imposition
15:47:50 464  		  from tax
15:47:50 465  		  , tax_type ttype
15:47:50 466  		  , jurisdiction_level j
15:47:50 467  		  , ids
15:47:50 468  		  where tax.id = ids.id and ttype.id = tax.tax_type_id and j.id = tax.jurisdiction_level_id
15:47:50 469  	      ;
15:47:50 470  	  end;
15:47:50 471  ----
15:47:50 472  --------------------------------------------------------------------------------
15:47:50 473  ----
15:47:50 474  	  procedure ext_tax_adjustment(in_start_date date, in_end_date date, out_cursor out sys_refcursor)
15:47:50 475  	  is
15:47:50 476  	  begin
15:47:50 477  	      open out_cursor for
15:47:50 478  		  with ids as (select id from change_log cl where cl.item = 'TAX_ADJUSTMENT' and cl.change_time between in_start_date and in_end_date group by id)
15:47:50 479  		  select
15:47:50 480  		    tax.id tad_adjustment_id,
15:47:50 481  		    tax.tax_id tax_id,
15:47:50 482  		    tax.line_item_adjustment_id line_item_adjustment_id,
15:47:50 483  		    tax.amount tax_amount,
15:47:50 484  		    tax.create_date create_date
15:47:50 485  		  from tax_adjustment tax
15:47:50 486  		  , ids
15:47:50 487  		  where tax.id = ids.id
15:47:50 488  	      ;
15:47:50 489  	  end;
15:47:50 490  ----
15:47:50 491  --------------------------------------------------------------------------------
15:47:50 492  ----
15:47:50 493  /**/
15:47:50 494  	  procedure ext_rcn_ext_source_log(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 495  	  BEGIN
15:47:50 496  	    OPEN OUT_CURSOR FOR
15:47:50 497  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_EXT_SOURCE_LOG' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 498  	    SELECT
15:47:50 499  		t.id rcn_ext_source_log_id
15:47:50 500  	      , t.extraction_timestamp
15:47:50 501  	      , t.report_date
15:47:50 502  	      , t.report_generation_datetime
15:47:50 503  	      , t.record_type
15:47:50 504  	      , t.report_file_name
15:47:50 505  	      , t.create_date
15:47:50 506  	      , t.created_by
15:47:50 507  	    FROM rcn_ext_source_log t, ids
15:47:50 508  	    WHERE ids.id = t.id;
15:47:50 509  	  END;
15:47:50 510  
15:47:50 511  	  procedure ext_rcn_cpt_svc_chg_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 512  	  BEGIN
15:47:50 513  	    OPEN OUT_CURSOR FOR
15:47:50 514  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_CPT_SERVICE_CHARGE_DETAIL' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 515  	    SELECT
15:47:50 516  		t.id rcn_cpt_svc_chg_dtl_id
15:47:50 517  	      , t.rcn_ext_source_log_id
15:47:50 518  	      , t.record_type
15:47:50 519  	      , t.category
15:47:50 520  	      , t.sub_category
15:47:50 521  	      , t.entity_type
15:47:50 522  	      , t.entity_number
15:47:50 523  	      , t.funds_transfer_inst_number
15:47:50 524  	      , t.secure_ba_number
15:47:50 525  	      , t.settlement_currency
15:47:50 526  	      , t.fee_schedule
15:47:50 527  	      , t.mop
15:47:50 528  	      , t.interchange_qualification
15:47:50 529  	      , t.fee_type_description
15:47:50 530  	      , t.action_type
15:47:50 531  	      , t.unit_quantity
15:47:50 532  	      , t.unit_fee
15:47:50 533  	      , t.amount
15:47:50 534  	      , t.percentage_rate
15:47:50 535  	      , t.total_charge
15:47:50 536  	      , t.create_date
15:47:50 537  	      , t.created_by
15:47:50 538  	    FROM rcn_cpt_service_charge_detail t, ids
15:47:50 539  	    WHERE ids.id = t.id;
15:47:50 540  	  END;
15:47:50 541  ----
15:47:50 542  --------------------------------------------------------------------------------
15:47:50 543  ----
15:47:50 544  
15:47:50 545  	  procedure ext_rcn_cpt_excpt_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 546  	  BEGIN
15:47:50 547  	    OPEN OUT_CURSOR FOR
15:47:50 548  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_CPT_EXCEPTION_DETAIL' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 549  	    SELECT
15:47:50 550  		t.id rcn_cpt_excp_dtl_id
15:47:50 551  	      , t.rcn_ext_source_log_id
15:47:50 552  	      , t.record_type
15:47:50 553  	      , t.submission_date
15:47:50 554  	      , t.pid_number
15:47:50 555  	      , t.pid_short_name
15:47:50 556  	      , t.submission_number
15:47:50 557  	      , t.record_number
15:47:50 558  	      , t.entity_type
15:47:50 559  	      , t.entity_number
15:47:50 560  	      , t.presentment_currency
15:47:50 561  	      , t.merchant_order_number
15:47:50 562  	      , t.rdfi_number
15:47:50 563  	      , t.account_number
15:47:50 564  	      , t.expiration_date
15:47:50 565  	      , t.amount
15:47:50 566  	      , t.mop
15:47:50 567  	      , t.action_code
15:47:50 568  	      , t.auth_date
15:47:50 569  	      , t.auth_code
15:47:50 570  	      , t.auth_response_code
15:47:50 571  	      , t.trace_number
15:47:50 572  	      , t.consumer_country_code
15:47:50 573  	      , t.category
15:47:50 574  	      , t.mcc
15:47:50 575  	      , t.reject_code
15:47:50 576  	      , t.submission_status
15:47:50 577  	      , t.create_date
15:47:50 578  	      , t.created_by
15:47:50 579  	    FROM rcn_cpt_exception_detail t, ids
15:47:50 580  	    WHERE ids.id = t.id;
15:47:50 581  	  END;
15:47:50 582  ----
15:47:50 583  --------------------------------------------------------------------------------
15:47:50 584  ----
15:47:50 585  
15:47:50 586  	  procedure ext_rcn_cpt_dpst_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 587  	  BEGIN
15:47:50 588  	    OPEN OUT_CURSOR FOR
15:47:50 589  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_CPT_DEPOSIT_DETAIL' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 590  	      SELECT
15:47:50 591  		t.id rcn_cpt_deposit_dtl_id
15:47:50 592  	      , t.rcn_ext_source_log_id
15:47:50 593  	      , t.record_type
15:47:50 594  	      , t.submission_date
15:47:50 595  	      , t.pid_number
15:47:50 596  	      , t.pid_short_name
15:47:50 597  	      , t.submission_number
15:47:50 598  	      , t.record_number
15:47:50 599  	      , t.entity_type
15:47:50 600  	      , t.entity_number
15:47:50 601  	      , t.presentment_currency
15:47:50 602  	      , t.merchant_order_number
15:47:50 603  	      , t.rdfi_number
15:47:50 604  	      , t.account_number
15:47:50 605  	      , t.expiration_date
15:47:50 606  	      , t.amount
15:47:50 607  	      , t.mop
15:47:50 608  	      , t.action_code
15:47:50 609  	      , t.auth_date
15:47:50 610  	      , t.auth_code
15:47:50 611  	      , t.auth_response_code
15:47:50 612  	      , t.trace_number
15:47:50 613  	      , t.consumer_country_code
15:47:50 614  	      , t.mcc
15:47:50 615  	      , t.create_date
15:47:50 616  	      , t.created_by
15:47:50 617  	      , t.fee_code
15:47:50 618  	      , t.unit_fee
15:47:50 619  	      , t.percent_fee
15:47:50 620  	      , t.total_interchange_fee
15:47:50 621  	      , t.total_assessment_fee
15:47:50 622  	      , t.other_fee
15:47:50 623  	    FROM rcn_cpt_deposit_detail t, ids
15:47:50 624  	    WHERE ids.id = t.id;
15:47:50 625  	  END;
15:47:50 626  ----
15:47:50 627  --------------------------------------------------------------------------------
15:47:50 628  ----
15:47:50 629  
15:47:50 630  	  procedure ext_rcn_cpt_chgbk_act_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 631  	  BEGIN
15:47:50 632  	    OPEN OUT_CURSOR FOR
15:47:50 633  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_CPT_CHARGEBACK_ACT_DETAIL' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 634  	    SELECT
15:47:50 635  		t.id rcn_cpt_chgbk_act_dtl_id
15:47:50 636  	      , t.rcn_ext_source_log_id
15:47:50 637  	      , t.record_type
15:47:50 638  	      , t.entity_type
15:47:50 639  	      , t.entity_number
15:47:50 640  	      , t.chargeback_amount_issuer
15:47:50 641  	      , t.prev_partial_representment
15:47:50 642  	      , t.presentment_currency
15:47:50 643  	      , t.chargeback_category
15:47:50 644  	      , t.status_flag
15:47:50 645  	      , t.sequence_number
15:47:50 646  	      , t.merchant_order_number
15:47:50 647  	      , t.account_number
15:47:50 648  	      , t.reason_code
15:47:50 649  	      , t.transaction_date
15:47:50 650  	      , t.chargeback_date
15:47:50 651  	      , t.activity_date
15:47:50 652  	      , t.chargeback_amount_action
15:47:50 653  	      , t.fee_amount
15:47:50 654  	      , t.usage_code
15:47:50 655  	      , t.mop_code
15:47:50 656  	      , t.authorization_date
15:47:50 657  	      , t.chargeback_due_date
15:47:50 658  	      , t.create_date
15:47:50 659  	      , t.created_by
15:47:50 660  	    FROM rcn_cpt_chargeback_act_detail t, ids
15:47:50 661  	    WHERE ids.id = t.id;
15:47:50 662  	  END;
15:47:50 663  ----
15:47:50 664  --------------------------------------------------------------------------------
15:47:50 665  ----
15:47:50 666  
15:47:50 667  	  procedure ext_rcn_pp_sttlmnt(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 668  	  BEGIN
15:47:50 669  	    OPEN OUT_CURSOR FOR
15:47:50 670  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_PP_SETTLEMENT' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 671  	    SELECT
15:47:50 672  		t.id rcn_pp_settlement_id
15:47:50 673  	      , t.rcn_ext_source_log_id
15:47:50 674  	      , t.transaction_id
15:47:50 675  	      , t.invoice_id
15:47:50 676  	      , t.pp_ref_id
15:47:50 677  	      , t.pp_ref_id_type
15:47:50 678  	      , t.trans_event_code
15:47:50 679  	      , t.trans_init_date
15:47:50 680  	      , t.trans_comp_date
15:47:50 681  	      , t.trans_deb_or_cred
15:47:50 682  	      , t.gross_trans_amount
15:47:50 683  	      , t.gross_trans_currency
15:47:50 684  	      , t.fee_deb_or_cred
15:47:50 685  	      , t.fee_amount
15:47:50 686  	      , t.fee_currency
15:47:50 687  	      , t.custom_field
15:47:50 688  	      , t.create_date
15:47:50 689  	      , t.created_by
15:47:50 690  	    FROM rcn_pp_settlement t, ids
15:47:50 691  	    WHERE ids.id = t.id;
15:47:50 692  	  END;
15:47:50 693  ----
15:47:50 694  --------------------------------------------------------------------------------
15:47:50 695  ----
15:47:50 696  
15:47:50 697  	  procedure ext_rcn_pp_dispute(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 698  	  BEGIN
15:47:50 699  	    OPEN OUT_CURSOR FOR
15:47:50 700  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_PP_DISPUTE' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 701  	    SELECT
15:47:50 702  		t.id rcn_pp_dispute_id
15:47:50 703  	      , t.rcn_ext_source_log_id
15:47:50 704  	      , t.dispute_type
15:47:50 705  	      , t.claimant_name
15:47:50 706  	      , t.claimant_email
15:47:50 707  	      , t.transaction_id
15:47:50 708  	      , t.trans_date
15:47:50 709  	      , t.disputed_amount
15:47:50 710  	      , t.disputed_amount_currency
15:47:50 711  	      , t.dispute_reason
15:47:50 712  	      , t.dispute_filing_date
15:47:50 713  	      , t.dispute_status
15:47:50 714  	      , t.dispute_case_id
15:47:50 715  	      , t.invoice_id
15:47:50 716  	      , t.create_date
15:47:50 717  	      , t.created_by
15:47:50 718  	    FROM
15:47:50 719  	    rcn_pp_dispute t, ids
15:47:50 720  	    WHERE ids.id = t.id;
15:47:50 721  	  END;
15:47:50 722  ----
15:47:50 723  --------------------------------------------------------------------------------
15:47:50 724  ----
15:47:50 725  
15:47:50 726  	  procedure ext_rcn_pp_trns_dtl(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 727  	  BEGIN
15:47:50 728  	    OPEN OUT_CURSOR FOR
15:47:50 729  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_PP_TRANS_DETAIL' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 730  	    SELECT
15:47:50 731  		t.id rcn_pp_trans_dtl_id
15:47:50 732  	      , t.rcn_ext_source_log_id
15:47:50 733  	      , t.transaction_id
15:47:50 734  	      , t.invoice_id
15:47:50 735  	      , t.pp_ref_id
15:47:50 736  	      , t.trans_event_code
15:47:50 737  	      , t.trans_init_date
15:47:50 738  	      , t.trans_comp_date
15:47:50 739  	      , t.trans_deb_or_cred
15:47:50 740  	      , t.gross_trans_amount
15:47:50 741  	      , t.gross_trans_currency
15:47:50 742  	      , t.fee_deb_or_cred
15:47:50 743  	      , t.fee_amount
15:47:50 744  	      , t.fee_currency
15:47:50 745  	      , t.trans_status
15:47:50 746  	      , t.insurance_amount
15:47:50 747  	      , t.sales_tax_amount
15:47:50 748  	      , t.shipping_amount
15:47:50 749  	      , t.trans_subject
15:47:50 750  	      , t.trans_note
15:47:50 751  	      , t.payer_acct_id
15:47:50 752  	      , t.payer_addr_status
15:47:50 753  	      , t.item_name
15:47:50 754  	      , t.item_id
15:47:50 755  	      , t.option_1_name
15:47:50 756  	      , t.option_1_value
15:47:50 757  	      , t.option_2_name
15:47:50 758  	      , t.option_2_value
15:47:50 759  	      , t.auction_site
15:47:50 760  	      , t.auction_buyer_id
15:47:50 761  	      , t.auction_closing_date
15:47:50 762  	      , t.shipping_addr_line_1
15:47:50 763  	      , t.shipping_addr_line_2
15:47:50 764  	      , t.shipping_addr_city
15:47:50 765  	      , t.shipping_addr_state
15:47:50 766  	      , t.shipping_addr_zip
15:47:50 767  	      , t.shipping_addr_country
15:47:50 768  	      , t.custom_field
15:47:50 769  	      , t.create_date
15:47:50 770  	      , t.created_by
15:47:50 771  	    FROM rcn_pp_trans_detail t, ids
15:47:50 772  	    WHERE ids.id = t.id;
15:47:50 773  	  END;
15:47:50 774  ----
15:47:50 775  --------------------------------------------------------------------------------
15:47:50 776  ----
15:47:50 777  	  procedure ext_rcn_amex_chargeback(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 778  	  BEGIN
15:47:50 779  	    OPEN OUT_CURSOR FOR
15:47:50 780  	    with ids As ( SELECT cl.id FROM change_log cl where cl.item = 'RCN_AMEX_CHARGEBACK' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 781  	    SELECT
15:47:50 782  	      rac.id
15:47:50 783  	    , rac.rcn_ext_source_log_id
15:47:50 784  	    , rac.resolution
15:47:50 785  	    , rac.from_system
15:47:50 786  	    , rac.rejects_to_system
15:47:50 787  	    , rac.disputes_to_system
15:47:50 788  	    , rac.date_of_adjustment
15:47:50 789  	    , rac.date_of_charge
15:47:50 790  	    , rac.case_type
15:47:50 791  	    , rac.cb_reas_code
15:47:50 792  	    , rac.cb_amount
15:47:50 793  	    , rac.cb_adjustment_number
15:47:50 794  	    , rac.billed_amount
15:47:50 795  	    , rac.soc_amount
15:47:50 796  	    , rac.foreign_amount
15:47:50 797  	    , rac.currency
15:47:50 798  	    , rac.note1
15:47:50 799  	    , rac.note2
15:47:50 800  	    , rac.note3
15:47:50 801  	    , rac.note4
15:47:50 802  	    , rac.note5
15:47:50 803  	    , rac.note6
15:47:50 804  	    , rac.note7
15:47:50 805  	    , rac.ind_ref_number
15:47:50 806  	    , rac.create_date
15:47:50 807  	    , rac.created_by
15:47:50 808  	    , rac.update_date
15:47:50 809  	    , rac.updated_by
15:47:50 810  	    FROM rcn_amex_chargeback rac, ids
15:47:50 811  	    WHERE ids.id = rac.id;
15:47:50 812  	  END;
15:47:50 813  ----
15:47:50 814  --------------------------------------------------------------------------------
15:47:50 815  ----
15:47:50 816  	  procedure ext_paypal(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 817  	  BEGIN
15:47:50 818  	    OPEN OUT_CURSOR FOR
15:47:50 819  	    with ids as ( SELECT cl.id FROM change_log cl where cl.item = 'PAYPAL' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 820  	    SELECT
15:47:50 821  		t.ID PAYPAL_ID
15:47:50 822  	      , ACCOUNT_ID
15:47:50 823  	      , INSTRUMENT_NAME
15:47:50 824  	      , CREATE_DATE
15:47:50 825  	      , CREATED_BY
15:47:50 826  	      , UPDATE_DATE
15:47:50 827  	      , UPDATED_BY
15:47:50 828  	      , s.value PAYPAL_STATUS
15:47:50 829  	      , STATE
15:47:50 830  	      , CITY
15:47:50 831  	      , POSTAL_CODE
15:47:50 832  	      , COUNTRY
15:47:50 833  	      , EXPIRATION_DATE
15:47:50 834  	    FROM paypal t, paypal_status s, ids
15:47:50 835  	    WHERE ids.id = t.id and t.paypal_status_id = s.id;
15:47:50 836  	  END;
15:47:50 837  ----
15:47:50 838  --------------------------------------------------------------------------------
15:47:50 839  ----
15:47:50 840  	  procedure ext_address(in_start_date date, in_end_date date, out_cursor out sys_refcursor) IS
15:47:50 841  	  BEGIN
15:47:50 842  	    OPEN OUT_CURSOR FOR
15:47:50 843  	    with ids as ( SELECT cl.id FROM change_log cl where cl.item = 'ADDRESS' and change_time between in_start_date and in_end_date group by cl.id )
15:47:50 844  	    SELECT
15:47:50 845  	      a.id ADDRESS_ID,
15:47:50 846  	      address1,
15:47:50 847  	      address2,
15:47:50 848  	      city,
15:47:50 849  	      state,
15:47:50 850  	      postal_code,
15:47:50 851  	      country,
15:47:50 852  	      create_date,
15:47:50 853  	      created_by,
15:47:50 854  	      update_date,
15:47:50 855  	      updated_by
15:47:50 856  	    FROM address a, ids
15:47:50 857  	    WHERE ids.id = a.id;
15:47:50 858  	  END;
15:47:50 859  ----
15:47:50 860  --------------------------------------------------------------------------------
15:47:50 861  ----
15:47:50 862  /**/
15:47:50 863  END PROCS_REPORTING;
15:47:50 864  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.18
15:47:50 SQL> 
15:47:50 SQL> create or replace PACKAGE BODY		  "PROCS_REPORTING_1A" AS
15:47:50   2  
15:47:50   3  ----
15:47:50   4  --------------------------------------------------------------------------------
15:47:50   5  ----
15:47:50   6  	  function getDiscountAmount(in_line_item_id line_item.id%type)
15:47:50   7  	      return line_item.amount%type
15:47:50   8  	  is
15:47:50   9  	      v_discount  line_item.amount%type := 0;
15:47:50  10  	  begin
15:47:50  11  	      for x in (
15:47:50  12  		  select d.id discount_id
15:47:50  13  			,nvl(d.fixed_amount, d.percent_amount * (po.quantity * po.unit_price)) discount_amount
15:47:50  14  		  from discount d
15:47:50  15  		      join discount_line_item dli	      on dli.discount_id = d.id
15:47:50  16  		      join discount_product_offering dop      on dop.discount_id = d.id
15:47:50  17  		      join product_offering po		      on po.id = dop.product_offering_id
15:47:50  18  		      join line_item li 		      on li.id = dli.line_item_id and li.product_offer_id = po.id
15:47:50  19  		  where dli.line_item_id = in_line_item_id
15:47:50  20  	      )
15:47:50  21  	      loop
15:47:50  22  		  v_discount := v_discount + x.discount_amount;
15:47:50  23  	      end loop;
15:47:50  24  
15:47:50  25  	      return v_discount;
15:47:50  26  	  end;
15:47:50  27  ----
15:47:50  28  --------------------------------------------------------------------------------
15:47:50  29  ----
15:47:50  30  	  function getRefundAmount(in_line_item_id line_item.id%type)
15:47:50  31  	      return line_item.amount%type
15:47:50  32  	  is
15:47:50  33  	      v_li_total  line_item.amount%type;
15:47:50  34  	      v_inv_total line_item.amount%type;
15:47:50  35  	      v_ref_total line_item.amount%type;
15:47:50  36  	  begin
15:47:50  37  
15:47:50  38  	      for li in (
15:47:50  39  		  select li.invoice_id, po.*
15:47:50  40  		  from line_item li
15:47:50  41  			  join core_owner.product_offering po on li.product_offer_id = po.id
15:47:50  42  		  where li.id = in_line_item_id
15:47:50  43  	      )
15:47:50  44  	      loop
15:47:50  45  		  v_li_total := (li.quantity * li.unit_price) - getDiscountAmount(in_line_item_id);
15:47:50  46  
15:47:50  47  		  v_inv_total := 0;
15:47:50  48  		  v_ref_total := 0;
15:47:50  49  		  for x in (
15:47:50  50  		      select case when c.charge_amount < 0 then -1 else 1 end type, sum(c.charge_amount) total
15:47:50  51  		      from charge c
15:47:50  52  		      where c.invoice_id = li.invoice_id
15:47:50  53  		      group by case when c.charge_amount < 0 then -1 else 1 end
15:47:50  54  		  )
15:47:50  55  		  loop
15:47:50  56  		      if (x.type = 1) then
15:47:50  57  			  v_inv_total := x.total;
15:47:50  58  		      else
15:47:50  59  			  v_ref_total := x.total;
15:47:50  60  		      end if;
15:47:50  61  		  end loop;
15:47:50  62  
15:47:50  63  		  if (v_inv_total > 0) then
15:47:50  64  		      return (v_ref_total / v_inv_total) * v_li_total;
15:47:50  65  		  else
15:47:50  66  		      return 0;
15:47:50  67  		  end if;
15:47:50  68  
15:47:50  69  	      end loop;
15:47:50  70  
15:47:50  71  	      return 0;
15:47:50  72  	  end;
15:47:50  73  ----
15:47:50  74  --------------------------------------------------------------------------------
15:47:50  75  ----
15:47:50  76  	PROCEDURE EXTRACT_LINE_ITEMS(
15:47:50  77  	  in_lower_date_bound DATE,
15:47:50  78  	  in_upper_date_bound DATE,
15:47:50  79  	  out_lic_cur OUT sys_refcursor
15:47:50  80  	) AS
15:47:50  81  	BEGIN
15:47:50  82  	  OPEN out_lic_cur FOR
15:47:50  83  	  with liq as (
15:47:50  84  		SELECT li2.id
15:47:50  85  		      FROM
15:47:50  86  			   line_item li2
15:47:50  87  		      WHERE
15:47:50  88  		      TRUNC(li2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
15:47:50  89  		UNION
15:47:50  90  		SELECT li2.id
15:47:50  91  		      FROM
15:47:50  92  			   line_item li2
15:47:50  93  		      JOIN invoice i2 ON i2.id = li2.invoice_id
15:47:50  94  		      WHERE
15:47:50  95  		      TRUNC(i2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
15:47:50  96  		UNION
15:47:50  97  		SELECT li2.id
15:47:50  98  		      FROM
15:47:50  99  			   line_item li2
15:47:50 100  		      JOIN license l2 ON li2.invoice_id = l2.invoice_id
15:47:50 101  		      WHERE
15:47:50 102  		      TRUNC(l2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
15:47:50 103  		UNION
15:47:50 104  		SELECT li2.id
15:47:50 105  		      FROM
15:47:50 106  			   line_item li2
15:47:50 107  		      JOIN license l2 ON li2.invoice_id = l2.invoice_id
15:47:50 108  		      JOIN subscription s2 ON s2.id = l2.subscription_id
15:47:50 109  		      WHERE
15:47:50 110  		      TRUNC(s2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
15:47:50 111  		UNION
15:47:50 112  		SELECT li2.id
15:47:50 113  		      FROM
15:47:50 114  			   line_item li2
15:47:50 115  		      JOIN invoice i2 ON i2.id = li2.invoice_id
15:47:50 116  		      JOIN charge c2 ON i2.id = c2.invoice_id
15:47:50 117  		      WHERE
15:47:50 118  		      TRUNC(c2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
15:47:50 119  		UNION
15:47:50 120  		SELECT li2.id
15:47:50 121  		      FROM
15:47:50 122  			   line_item li2
15:47:50 123  		      JOIN invoice i2 ON i2.id = li2.invoice_id
15:47:50 124  		      JOIN charge c2 ON i2.id = c2.invoice_id
15:47:50 125  		      JOIN transaction t2 ON t2.id = c2.transaction_id
15:47:50 126  		      WHERE
15:47:50 127  		      TRUNC(t2.create_date, 'HH') BETWEEN TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
15:47:50 128  	  )
15:47:50 129  	  SELECT distinct
15:47:50 130  	    line_item.id				 line_item_id
15:47:50 131  	  , product.name				 product_name
15:47:50 132  	  , product.unit_price				 product_unit_price
15:47:50 133  	  , product.production_cost			 product_production_cost
15:47:50 134  	  , offer_chain.name				 offer_chain_name
15:47:50 135  	  , offer_chain_meta_data.value 		 offer_chain_metadata
15:47:50 136  	  , gclicense.purchase_date			 subscription_start_date
15:47:50 137  	  , gclicense.start_date			 license_start_date
15:47:50 138  	  , gclicense.end_date				 license_end_date
15:47:50 139  	  , credit_card.city				 cc_city
15:47:50 140  	  , credit_card.state				 cc_state
15:47:50 141  	  , credit_card.postal_code			 cc_postal_code
15:47:50 142  	  , line_item.create_date			 line_item_purchase_date
15:47:50 143  	  , gclicense.account_regi_id
15:47:50 144  	  , product_offering.quantity			 purchase_quantity
15:47:50 145  	  , case when charge.charge_amount > 0 then charge.charge_amount else 0 end purchase_amount
15:47:50 146  	  , PROCS_REPORTING_1A.getDiscountAmount(line_item.id) discount_amount
15:47:50 147  	  , PROCS_REPORTING_1A.getRefundAmount(line_item.id) refund_amount
15:47:50 148  	  , decode(gclicense.sct_id,null,0, 1)		 is_refund_cancel
15:47:50 149  	  , 0						 purchase_tax_amount
15:47:50 150  	  , transaction_attempt.external_transaction_id  external_transaction_id
15:47:50 151  	  , invoice.id					 invoice_number
15:47:50 152  	  , NVL2(transaction.id, 1, 0)			 has_transaction
15:47:50 153  	  , NVL2(credit_card.id, 1, 0)			 is_cc_transaction
15:47:50 154  	  , NVL2(gift_certificate.id, 1, 0)		 is_gc_transaction
15:47:50 155  	  FROM
15:47:50 156  	       line_item
15:47:50 157  	  JOIN invoice				ON invoice.id	       = line_item.invoice_id
15:47:50 158  	  JOIN product_offering 		ON product_offering.id = line_item.product_offer_id
15:47:50 159  	  JOIN product				ON product.id	       = product_offering.product_id
15:47:50 160  	  join (
15:47:50 161  		select license.invoice_id, subscription.offer_chain_id, subscription.purchase_date
15:47:50 162  		      ,subscription.sct_id, license.start_date, license.end_date
15:47:50 163  		      ,account.group_id account_regi_id
15:47:50 164  		from	 license
15:47:50 165  		    join subscription ON subscription.id = license.subscription_id
15:47:50 166  		    join account      ON account.id	 = subscription.account_id
15:47:50 167  		union all
15:47:50 168  		select gc.purchase_invoice_id invoice_id, gc.offer_chain_id, gc.purchase_date
15:47:50 169  		      ,null sct_id, gc.purchase_date start_date, gc.expiration_date end_date
15:47:50 170  		      ,gc.purchaser_group_id account_regi_id
15:47:50 171  		from	 gift_certificate gc
15:47:50 172  		where
15:47:50 173  		      TRUNC(gc.create_date, 'HH') between TRUNC(in_lower_date_bound,'HH') AND TRUNC(in_upper_date_bound,'HH')
15:47:50 174  
15:47:50 175  	  ) gclicense
15:47:50 176  						on gclicense.invoice_id = invoice.id
15:47:50 177  	  JOIN offer_chain			ON offer_chain.id      = gclicense.offer_chain_id
15:47:50 178  	  JOIN charge				ON invoice.id	       = charge.invoice_id and charge.charge_status_id = 2
15:47:50 179  	  JOIN transaction			ON transaction.id      = charge.transaction_id and transaction.transaction_status_id = 2
15:47:50 180  	  JOIN transaction_attempt		ON transaction.id	= transaction_attempt.transaction_id AND transaction_attempt.transaction_attempt_status_id = 2
15:47:50 181  	  LEFT OUTER JOIN credit_card		ON charge.instrument_id = credit_card.id AND charge.instrument_type_id = 1
15:47:50 182  	  LEFT OUTER JOIN gift_certificate	ON charge.instrument_id = gift_certificate.id AND charge.instrument_type_id = 3
15:47:50 183  	  LEFT OUTER JOIN offer_chain_meta_data ON offer_chain.id	= offer_chain_meta_data.offer_chain_id
15:47:50 184  	  join liq				on line_item.id 	= liq.id
15:47:50 185  	    ;
15:47:50 186  	END EXTRACT_LINE_ITEMS;
15:47:50 187  ----
15:47:50 188  --------------------------------------------------------------------------------
15:47:50 189  ----
15:47:50 190  END PROCS_REPORTING_1A;
15:47:50 191  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.05
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_REPORTS_V22" AS
15:47:50   2  
15:47:50   3  FUNCTION GET_PRODUCT_NAMES(
15:47:50   4  	in_offer_id IN NUMBER
15:47:50   5  ) RETURN VARCHAR2 AS
15:47:50   6  var_result_names VARCHAR2(1024);
15:47:50   7  BEGIN
15:47:50   8  
15:47:50   9  	var_result_names := NULL;
15:47:50  10  
15:47:50  11  	FOR f_product IN (
15:47:50  12  	  SELECT
15:47:50  13  	    PRODUCT.NAME
15:47:50  14  	  FROM
15:47:50  15  	    PRODUCT
15:47:50  16  	    INNER JOIN PRODUCT_OFFERING ON PRODUCT_OFFERING.PRODUCT_ID = PRODUCT.ID
15:47:50  17  	    INNER JOIN OFFER_PRODUCT_OFFERING ON OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID = PRODUCT_OFFERING.ID
15:47:50  18  	  WHERE
15:47:50  19  	    OFFER_PRODUCT_OFFERING.OFFER_ID = in_offer_id
15:47:50  20  	)
15:47:50  21  	LOOP
15:47:50  22  
15:47:50  23  	  IF var_result_names IS NULL THEN
15:47:50  24  	    var_result_names := f_product.NAME;
15:47:50  25  	  ELSE
15:47:50  26  	    var_result_names := var_result_names || ',' || CHR(13) || f_product.NAME;
15:47:50  27  	  END IF;
15:47:50  28  
15:47:50  29  	END LOOP;
15:47:50  30  
15:47:50  31  	RETURN var_result_names;
15:47:50  32  
15:47:50  33  END GET_PRODUCT_NAMES;
15:47:50  34  
15:47:50  35  /******************************************************************************/
15:47:50  36  
15:47:50  37  PROCEDURE GET_FULL_FLASH_REPORT_PURCH (
15:47:50  38  	in_start_date  IN DATE,
15:47:50  39  	in_end_date    IN DATE,
15:47:50  40  	out_result_set OUT SYS_REFCURSOR
15:47:50  41  ) AS
15:47:50  42  -- CONSTANTS
15:47:50  43  const_license_process_name CONSTANT VARCHAR2(9) := 'LICENSING';
15:47:50  44  BEGIN
15:47:50  45  
15:47:50  46  	OPEN out_result_set FOR
15:47:50  47  	SELECT
15:47:50  48  	  GET_PRODUCT_NAMES("Offer_Id") as "Product_Names",
15:47:50  49  	  "Offer_Id",
15:47:50  50  	  "New_Purchases_Num",
15:47:50  51  	  "Number_Of_renewals",
15:47:50  52  	  FLR_TOTAL_DOLLAR_VALUE("Offer_Id", in_start_date, in_end_date) as "Total_Dollar_Value",
15:47:50  53  	  FLR_UNIQUE_PURCHASERS("Offer_Id", in_start_date, in_end_date) as "Unique_Purchasers_num"
15:47:50  54  	FROM (
15:47:50  55  	  SELECT
15:47:50  56  	    "Offer_Id",
15:47:50  57  	    "Number_Of_renewals",
15:47:50  58  	    "New_Purchases_Num"
15:47:50  59  	  FROM (
15:47:50  60  	    SELECT
15:47:50  61  	      OFFER.ID as "Offer_Id",
15:47:50  62  	      FLR_RENEWALS_NUM(offer.id, in_start_date, in_end_date) as "Number_Of_renewals",
15:47:50  63  	      FLR_NEW_PURCHASERS_NUM(offer.id, in_start_date, in_end_date) as "New_Purchases_Num"
15:47:50  64  	    FROM
15:47:50  65  	      OFFER
15:47:50  66  	  )
15:47:50  67  	  WHERE
15:47:50  68  	    "New_Purchases_Num" > 0
15:47:50  69  	    OR "Number_Of_renewals" > 0
15:47:50  70  	);
15:47:50  71  
15:47:50  72  	/*
15:47:50  73  	OPEN out_result_set FOR
15:47:50  74  	SELECT
15:47:50  75  	  "Product_Names",
15:47:50  76  	  "Offer_Id",
15:47:50  77  	  "New_Purchases_Num",
15:47:50  78  	  "Number_Of_renewals",
15:47:50  79  	  "Total_Dollar_Value",
15:47:50  80  	  "Unique_Purchasers_num"
15:47:50  81  	FROM (
15:47:50  82  	  SELECT
15:47:50  83  	    GET_PRODUCT_NAMES(offer.id) as "Product_Names",
15:47:50  84  	    offer.id as "Offer_Id",
15:47:50  85  	    FLR_NEW_PURCHASERS_NUM(offer.id, in_start_date, in_end_date) as "New_Purchases_Num",
15:47:50  86  	    FLR_RENEWALS_NUM(offer.id, in_start_date, in_end_date) as "Number_Of_renewals",
15:47:50  87  	    FLR_TOTAL_DOLLAR_VALUE(offer.id, in_start_date, in_end_date) as "Total_Dollar_Value",
15:47:50  88  	    FLR_UNIQUE_PURCHASERS(offer.id, in_start_date, in_end_date) as "Unique_Purchasers_num"
15:47:50  89  	  FROM
15:47:50  90  	    OFFER
15:47:50  91  	)
15:47:50  92  	WHERE
15:47:50  93  	  "New_Purchases_Num" > 0
15:47:50  94  	  OR "Number_Of_renewals" > 0
15:47:50  95  	  OR "Total_Dollar_Value" > 0
15:47:50  96  	  OR "Unique_Purchasers_num" > 0;
15:47:50  97  	*/
15:47:50  98  
15:47:50  99  END GET_FULL_FLASH_REPORT_PURCH;
15:47:50 100  
15:47:50 101  /******************************************************************************/
15:47:50 102  
15:47:50 103  PROCEDURE GET_FLASH_REPORT_PURCHASES (
15:47:50 104  	in_offer_id	       IN NUMBER,
15:47:50 105  	in_start_date	       IN DATE,
15:47:50 106  	in_end_date	       IN DATE,
15:47:50 107  	out_new_purchasers_num OUT NUMBER,
15:47:50 108  	out_renewals_num       OUT NUMBER,
15:47:50 109  	out_product_names      OUT VARCHAR2,
15:47:50 110  	out_total_dollar_value OUT NUMBER,
15:47:50 111  	out_unique_purchasers  OUT NUMBER
15:47:50 112  ) AS
15:47:50 113  -- CONSTANTS
15:47:50 114  const_license_process_name CONSTANT VARCHAR2(9) := 'LICENSING';
15:47:50 115  BEGIN
15:47:50 116  
15:47:50 117  	out_product_names := GET_PRODUCT_NAMES(in_offer_id);
15:47:50 118  
15:47:50 119  	out_total_dollar_value := FLR_TOTAL_DOLLAR_VALUE(
15:47:50 120  	  in_offer_id,
15:47:50 121  	  in_start_date,
15:47:50 122  	  in_end_date
15:47:50 123  	);
15:47:50 124  
15:47:50 125  	out_new_purchasers_num := FLR_NEW_PURCHASERS_NUM(
15:47:50 126  	  in_offer_id,
15:47:50 127  	  in_start_date,
15:47:50 128  	  in_end_date
15:47:50 129  	);
15:47:50 130  
15:47:50 131  	out_renewals_num := FLR_RENEWALS_NUM(
15:47:50 132  	  in_offer_id,
15:47:50 133  	  in_start_date,
15:47:50 134  	  in_end_date
15:47:50 135  	);
15:47:50 136  
15:47:50 137  	out_unique_purchasers := FLR_UNIQUE_PURCHASERS(
15:47:50 138  	  in_offer_id,
15:47:50 139  	  in_start_date,
15:47:50 140  	  in_end_date
15:47:50 141  	);
15:47:50 142  
15:47:50 143  END GET_FLASH_REPORT_PURCHASES;
15:47:50 144  
15:47:50 145  /******************************************************************************/
15:47:50 146  
15:47:50 147  FUNCTION FLR_NEW_PURCHASERS_NUM (
15:47:50 148  	in_offer_id	       IN NUMBER,
15:47:50 149  	in_start_date	       IN DATE,
15:47:50 150  	in_end_date	       IN DATE
15:47:50 151  ) RETURN NUMBER AS
15:47:50 152  -- CONSTANTS
15:47:50 153  const_license_process_name CONSTANT VARCHAR2(9) := 'LICENSING';
15:47:50 154  -- VARIABLES
15:47:50 155  var_new_purchases_num NUMBER;
15:47:50 156  BEGIN
15:47:50 157  	SELECT
15:47:50 158  	  COUNT(LICENSE.ID)
15:47:50 159  	  into
15:47:50 160  	  var_new_purchases_num
15:47:50 161  	FROM
15:47:50 162  	  LICENSE
15:47:50 163  	  INNER JOIN CHARGE ON LICENSE.INVOICE_ID = CHARGE.INVOICE_ID
15:47:50 164  	WHERE
15:47:50 165  	  LICENSE.CREATED_BY NOT LIKE const_license_process_name
15:47:50 166  	  AND LICENSE.OFFER_ID = in_offer_id
15:47:50 167  	  AND CHARGE.CHARGE_AMOUNT > 0
15:47:50 168  	  AND PROCS_CHARGE_V22.IS_CHARGE_COLLECTED(CHARGE.ID) = 1 -- GLOBAL_CONSTANTS_V22.TRUE
15:47:50 169  	  AND LICENSE.START_DATE BETWEEN in_start_date AND in_end_date;
15:47:50 170  
15:47:50 171  	RETURN var_new_purchases_num;
15:47:50 172  END FLR_NEW_PURCHASERS_NUM;
15:47:50 173  
15:47:50 174  /******************************************************************************/
15:47:50 175  
15:47:50 176  FUNCTION FLR_RENEWALS_NUM (
15:47:50 177  	in_offer_id	       IN NUMBER,
15:47:50 178  	in_start_date	       IN DATE,
15:47:50 179  	in_end_date	       IN DATE
15:47:50 180  ) RETURN NUMBER AS
15:47:50 181  -- CONSTANTS
15:47:50 182  const_license_process_name CONSTANT VARCHAR2(9) := 'LICENSING';
15:47:50 183  -- VARIABLES
15:47:50 184  var_renewals_num NUMBER;
15:47:50 185  BEGIN
15:47:50 186  	SELECT
15:47:50 187  	  COUNT(LICENSE.ID)
15:47:50 188  	  into
15:47:50 189  	  var_renewals_num
15:47:50 190  	FROM
15:47:50 191  	  LICENSE
15:47:50 192  	  INNER JOIN CHARGE ON LICENSE.INVOICE_ID = CHARGE.INVOICE_ID
15:47:50 193  	WHERE
15:47:50 194  	  LICENSE.CREATED_BY LIKE const_license_process_name
15:47:50 195  	  AND LICENSE.OFFER_ID = in_offer_id
15:47:50 196  	  AND CHARGE.CHARGE_AMOUNT > 0
15:47:50 197  	  AND PROCS_CHARGE_V22.IS_CHARGE_COLLECTED(CHARGE.ID) = 1 -- GLOBAL_CONSTANTS_V22.TRUE
15:47:50 198  	  AND LICENSE.START_DATE BETWEEN in_start_date AND in_end_date;
15:47:50 199  
15:47:50 200  	RETURN var_renewals_num;
15:47:50 201  END FLR_RENEWALS_NUM;
15:47:50 202  
15:47:50 203  /******************************************************************************/
15:47:50 204  
15:47:50 205  FUNCTION FLR_TOTAL_DOLLAR_VALUE (
15:47:50 206  	in_offer_id	       IN NUMBER,
15:47:50 207  	in_start_date	       IN DATE,
15:47:50 208  	in_end_date	       IN DATE
15:47:50 209  ) RETURN NUMBER AS
15:47:50 210  var_dollar_value NUMBER(10,2);
15:47:50 211  BEGIN
15:47:50 212  	SELECT
15:47:50 213  	  SUM(CHARGE.CHARGE_AMOUNT)
15:47:50 214  	  into
15:47:50 215  	  var_dollar_value
15:47:50 216  	FROM
15:47:50 217  	  LICENSE
15:47:50 218  	  INNER JOIN CHARGE ON LICENSE.INVOICE_ID = CHARGE.INVOICE_ID
15:47:50 219  	WHERE
15:47:50 220  	  LICENSE.OFFER_ID = in_offer_id
15:47:50 221  	  AND CHARGE.CHARGE_AMOUNT > 0
15:47:50 222  	  AND PROCS_CHARGE_V22.IS_CHARGE_COLLECTED(CHARGE.ID) = 1 -- GLOBAL_CONSTANTS_V22.TRUE
15:47:50 223  	  AND LICENSE.START_DATE BETWEEN in_start_date AND in_end_date;
15:47:50 224  
15:47:50 225  	RETURN var_dollar_value;
15:47:50 226  END FLR_TOTAL_DOLLAR_VALUE;
15:47:50 227  
15:47:50 228  /******************************************************************************/
15:47:50 229  
15:47:50 230  FUNCTION FLR_UNIQUE_PURCHASERS (
15:47:50 231  	in_offer_id	       IN NUMBER,
15:47:50 232  	in_start_date	       IN DATE,
15:47:50 233  	in_end_date	       IN DATE
15:47:50 234  ) RETURN NUMBER AS
15:47:50 235  -- CONSTANTS
15:47:50 236  const_license_process_name CONSTANT VARCHAR2(9) := 'LICENSING';
15:47:50 237  -- VARIABLES
15:47:50 238  var_unique_purchasers NUMBER;
15:47:50 239  BEGIN
15:47:50 240  	SELECT
15:47:50 241  	  COUNT(DISTINCT SUBSCRIPTION.ACCOUNT_ID) into var_unique_purchasers
15:47:50 242  	FROM
15:47:50 243  	  LICENSE
15:47:50 244  	  INNER JOIN CHARGE ON LICENSE.INVOICE_ID = CHARGE.INVOICE_ID
15:47:50 245  	  INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:50 246  	WHERE
15:47:50 247  	  LICENSE.CREATED_BY NOT LIKE const_license_process_name
15:47:50 248  	  AND LICENSE.OFFER_ID = in_offer_id
15:47:50 249  	  AND CHARGE.CHARGE_AMOUNT > 0
15:47:50 250  	  AND PROCS_CHARGE_V22.IS_CHARGE_COLLECTED(CHARGE.ID) = 1 -- GLOBAL_CONSTANTS_V22.TRUE
15:47:50 251  	  AND LICENSE.START_DATE BETWEEN in_start_date AND in_end_date;
15:47:50 252  
15:47:50 253  	RETURN var_unique_purchasers;
15:47:50 254  END;
15:47:50 255  
15:47:50 256  END PROCS_REPORTS_V22;
15:47:50 257  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.05
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SYSTEM_V22" AS
15:47:50   2  
15:47:50   3  PROCEDURE INCREMENT_VERSION
15:47:50   4  /*
15:47:50   5  Throws exceptions:
15:47:50   6  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50   7  */
15:47:50   8  AS
15:47:50   9  BEGIN
15:47:50  10  
15:47:50  11  	UPDATE SYS_VERSION SET version=version+1;
15:47:50  12  
15:47:50  13  END INCREMENT_VERSION;
15:47:50  14  
15:47:50  15  /*************************************************************/
15:47:50  16  
15:47:50  17  PROCEDURE CHECK_VERSION(
15:47:50  18  	  in_vers    IN NUMBER,
15:47:50  19  	  out_result OUT NUMBER
15:47:50  20  ) AS
15:47:50  21  	current_version NUMBER;
15:47:50  22  BEGIN
15:47:50  23  	SELECT version INTO current_version FROM SYS_VERSION;
15:47:50  24  	IF(current_version != in_vers) THEN
15:47:50  25  	  out_result := 1;
15:47:50  26  	ELSE
15:47:50  27  	  out_result := 0;
15:47:50  28  	END IF;
15:47:50  29  END CHECK_VERSION;
15:47:50  30  
15:47:50  31  END PROCS_SYSTEM_V22;
15:47:50  32  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.01
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_TAXES_V22" AS
15:47:50   2  
15:47:50   3  PROCEDURE ADD_TAX (
15:47:50   4  	in_tax_type_id		 IN NUMBER,
15:47:50   5  	in_calculated_amount	 IN NUMBER,
15:47:50   6  	in_created_by		 IN VARCHAR2,
15:47:50   7  	in_line_item_id 	 IN NUMBER,
15:47:50   8  	in_effective_rate	 IN VARCHAR2,
15:47:50   9  	in_taxable_amount	 IN NUMBER,
15:47:50  10  	in_tax_rule_id		 IN NUMBER,
15:47:50  11  	in_jurisdiction_level_id IN NUMBER,
15:47:50  12  	in_jurisdiction_name	 IN VARCHAR2,
15:47:50  13  	in_jurisdiction_id	 IN VARCHAR2,
15:47:50  14  	in_ext_tax_type 	 IN VARCHAR2,
15:47:50  15  	in_ext_result		 IN VARCHAR2,
15:47:50  16  	in_imposition_type	 IN VARCHAR2,
15:47:50  17  	in_imposition		 IN VARCHAR2
15:47:50  18  ) AS
15:47:50  19  SPROC_NAME CONSTANT VARCHAR2(7) := 'ADD_TAX';
15:47:50  20  -- VARIABLES
15:47:50  21  var_new_tax_id	NUMBER;
15:47:50  22  temp_line_item_id NUMBER;
15:47:50  23  -- EXCEPTIONS
15:47:50  24  BAD_LINE_ITEM_ID EXCEPTION;
15:47:50  25  BEGIN
15:47:50  26  
15:47:50  27  	BEGIN
15:47:50  28  	  SELECT
15:47:50  29  	    LINE_ITEM.ID into temp_line_item_id
15:47:50  30  	  FROM
15:47:50  31  	    LINE_ITEM
15:47:50  32  	  WHERE
15:47:50  33  	    LINE_ITEM.ID = in_line_item_id;
15:47:50  34  	  EXCEPTION
15:47:50  35  	    WHEN NO_DATA_FOUND THEN
15:47:50  36  	      RAISE BAD_LINE_ITEM_ID;
15:47:50  37  	END;
15:47:50  38  
15:47:50  39  	var_new_tax_id := NULL;
15:47:50  40  
15:47:50  41  	PROCS_TAXES_CRU_V22.CREATE_TAX(
15:47:50  42  	  var_new_tax_id,
15:47:50  43  	  in_tax_type_id,
15:47:50  44  	  in_calculated_amount,
15:47:50  45  	  in_created_by,
15:47:50  46  	  in_line_item_id,
15:47:50  47  	  in_effective_rate,
15:47:50  48  	  in_taxable_amount,
15:47:50  49  	  in_tax_rule_id,
15:47:50  50  	  in_jurisdiction_level_id,
15:47:50  51  	  in_jurisdiction_name,
15:47:50  52  	  in_jurisdiction_id,
15:47:50  53  	  in_ext_tax_type,
15:47:50  54  	  in_ext_result,
15:47:50  55  	  in_imposition_type,
15:47:50  56  	  in_imposition
15:47:50  57  	);
15:47:50  58  
15:47:50  59  EXCEPTION
15:47:50  60  WHEN BAD_LINE_ITEM_ID THEN
15:47:50  61  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50  62  	  SPROC_NAME, 'No such line item');
15:47:50  63  WHEN OTHERS THEN
15:47:50  64  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50  65  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50  66  END ADD_TAX;
15:47:50  67  
15:47:50  68  /******************************************************************************/
15:47:50  69  
15:47:50  70  PROCEDURE CHECK_COUNTRY_FOR_EXCLUSION (
15:47:50  71  	in_country_code IN CHAR,
15:47:50  72  	in_check_date IN DATE,
15:47:50  73  	out_is_founded	OUT NUMBER -- GLOBAL_CONSTANT.TRUE of GLOBAL_CONSTANTS_V22.FALSE
15:47:50  74  ) AS
15:47:50  75  SPROC_NAME CONSTANT VARCHAR2(27) := 'CHECK_COUNTRY_FOR_EXCLUSION';
15:47:50  76  -- VARIABLES
15:47:50  77  var_countries_count NUMBER;
15:47:50  78  var_result	  NUMBER;
15:47:50  79  BEGIN
15:47:50  80  
15:47:50  81  	SELECT
15:47:50  82  	  COUNT(1) into var_countries_count
15:47:50  83  	FROM
15:47:50  84  	  TAX_COUNTRY_EXCLUSION_LIST
15:47:50  85  	WHERE
15:47:50  86  	  country_code = in_country_code
15:47:50  87  	  AND TRUNC(EFFECTIVE_DATE) <= TRUNC(in_check_date)
15:47:50  88  	  AND (
15:47:50  89  	    end_date is null
15:47:50  90  	    OR TRUNC(END_DATE) >= TRUNC(in_check_date)
15:47:50  91  	  );
15:47:50  92  
15:47:50  93  	IF var_countries_count > 1 THEN
15:47:50  94  	  -- [REVU] Should not happen. DB structure error
15:47:50  95  	  var_result := GLOBAL_CONSTANTS_V22.TRUE;
15:47:50  96  	ELSIF var_countries_count = 1 THEN
15:47:50  97  	  var_result := GLOBAL_CONSTANTS_V22.TRUE;
15:47:50  98  	ELSE
15:47:50  99  	  var_result := GLOBAL_CONSTANTS_V22.FALSE;
15:47:50 100  	END IF;
15:47:50 101  
15:47:50 102  	out_is_founded := var_result;
15:47:50 103  
15:47:50 104  EXCEPTION
15:47:50 105  WHEN OTHERS THEN
15:47:50 106  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 107  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 108  END CHECK_COUNTRY_FOR_EXCLUSION;
15:47:50 109  
15:47:50 110  /******************************************************************************/
15:47:50 111  
15:47:50 112  PROCEDURE GET_TAX_CATEGORY (
15:47:50 113  	in_tax_category_id IN NUMBER,
15:47:50 114  	out_result_set	   OUT SYS_REFCURSOR
15:47:50 115  ) AS
15:47:50 116  SPROC_NAME CONSTANT VARCHAR2(16) := 'GET_TAX_CATEGORY';
15:47:50 117  BEGIN
15:47:50 118  
15:47:50 119  	OPEN out_result_set FOR
15:47:50 120  	SELECT
15:47:50 121  	  ID,
15:47:50 122  	  CODE,
15:47:50 123  	  DESCRIPTION
15:47:50 124  	FROM
15:47:50 125  	  TAX_CATEGORY
15:47:50 126  	WHERE
15:47:50 127  	  ID = in_tax_category_id;
15:47:50 128  
15:47:50 129  EXCEPTION
15:47:50 130  WHEN OTHERS THEN
15:47:50 131  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 132  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 133  END GET_TAX_CATEGORY;
15:47:50 134  
15:47:50 135  END PROCS_TAXES_V22;
15:47:50 136  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_TRANSACTION_V22" AS
15:47:50   2  
15:47:50   3  PROCEDURE CREATE_TRANSACTION (
15:47:50   4  /*
15:47:50   5  Throws exceptions:
15:47:50   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50   8  */
15:47:50   9  	in_transaction_id	  IN NUMBER,
15:47:50  10  	in_status_id		  IN NUMBER,
15:47:50  11  	in_amount		  IN NUMBER,
15:47:50  12  	in_created_by		  IN VARCHAR2,
15:47:50  13  	in_order_id		  IN VARCHAR2,
15:47:50  14  	in_is_refund		  IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE,
15:47:50  15  	in_transaction_type_code  IN VARCHAR2 DEFAULT NULL,
15:47:50  16  	out_transaction_id	  OUT NUMBER
15:47:50  17  ) AS
15:47:50  18  -- VARIABLES
15:47:50  19  SPROC_NAME	     CONSTANT VARCHAR2(18) := 'CREATE_TRANSACTION';
15:47:50  20  var_transaction_count  NUMBER;
15:47:50  21  -- EXCEPTIONS
15:47:50  22  BAD_TRANSACTION_ID     EXCEPTION;
15:47:50  23  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:50  24  BEGIN
15:47:50  25  
15:47:50  26  	IF in_transaction_id IS NOT NULL THEN
15:47:50  27  	  SELECT
15:47:50  28  	    COUNT(*) into var_transaction_count
15:47:50  29  	  FROM
15:47:50  30  	    TRANSACTION
15:47:50  31  	  WHERE
15:47:50  32  	    TRANSACTION.ID = in_transaction_id;
15:47:50  33  	  IF var_transaction_count > 0 THEN
15:47:50  34  	    RAISE BAD_TRANSACTION_ID;
15:47:50  35  	  END IF;
15:47:50  36  	END IF;
15:47:50  37  
15:47:50  38  	PROCS_TRANSACTION_CRU_V22.CREATE_TRANSACTION(
15:47:50  39  	  out_transaction_id	   => out_transaction_id,
15:47:50  40  	  in_transaction_id	   => in_transaction_id,
15:47:50  41  	  in_transaction_status_id => in_status_id,
15:47:50  42  	  in_transaction_amount    => in_amount,
15:47:50  43  	  in_created_by 	   => in_created_by,
15:47:50  44  	  in_order_id		   => in_order_id,
15:47:50  45  	  in_is_refund		   => in_is_refund,
15:47:50  46  	  in_transaction_type_code => in_transaction_type_code
15:47:50  47  	);
15:47:50  48  
15:47:50  49  EXCEPTION
15:47:50  50  WHEN BAD_TRANSACTION_ID THEN
15:47:50  51  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:50  52  	  SPROC_NAME, 'Transaction with given id already exists');
15:47:50  53  WHEN OTHERS THEN
15:47:50  54  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50  55  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50  56  END CREATE_TRANSACTION;
15:47:50  57  
15:47:50  58  /******************************************************************************/
15:47:50  59  
15:47:50  60  PROCEDURE CREATE_TRANSACTION_ATTEMPT (
15:47:50  61  /*
15:47:50  62  Throws exceptions:
15:47:50  63  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50  64  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50  65  */
15:47:50  66  	in_transaction_id	   IN NUMBER,
15:47:50  67  	in_trans_attempt_status    IN NUMBER,
15:47:50  68  	in_external_status_code    IN VARCHAR2,
15:47:50  69  	in_external_status_message IN VARCHAR2,
15:47:50  70  	in_created_by		   IN VARCHAR2,
15:47:50  71  	in_ext_transaction_id	   IN VARCHAR2,
15:47:50  72  	out_transaction_attempt_id OUT NUMBER
15:47:50  73  ) AS
15:47:50  74  -- VARIABLES
15:47:50  75  SPROC_NAME		 CONSTANT VARCHAR2(26) := 'CREATE_TRANSACTION_ATTEMPT';
15:47:50  76  var_transaction_create_date DATE;
15:47:50  77  var_transaction_attempt_id  NUMBER;
15:47:50  78  
15:47:50  79  -- EXCEPTIONS
15:47:50  80  BAD_TRANS_ATTEMPT_STATUS EXCEPTION;
15:47:50  81  BAD_TRANSACTION_ID       EXCEPTION;
15:47:50  82  BEGIN
15:47:50  83  
15:47:50  84  	-- Check that transaction exists
15:47:50  85  	BEGIN
15:47:50  86  	  SELECT
15:47:50  87  	    TRANSACTION.CREATE_DATE into var_transaction_create_date
15:47:50  88  	  FROM
15:47:50  89  	    TRANSACTION
15:47:50  90  	  WHERE
15:47:50  91  	    TRANSACTION.ID = in_transaction_id;
15:47:50  92  	  EXCEPTION
15:47:50  93  	    WHEN OTHERS THEN
15:47:50  94  	      RAISE BAD_TRANSACTION_ID;
15:47:50  95  	END;
15:47:50  96  
15:47:50  97  	-- Check that transaction status is correct
15:47:50  98  	IF in_trans_attempt_status != GLOBAL_STATUSES_V22.TRANS_ATTEMPT_IN_PROGRESS
15:47:50  99  	  AND in_trans_attempt_status != GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS
15:47:50 100  	  AND in_trans_attempt_status != GLOBAL_STATUSES_V22.TRANS_ATTEMPT_FAILED THEN
15:47:50 101  	  RAISE BAD_TRANS_ATTEMPT_STATUS;
15:47:50 102  	END IF;
15:47:50 103  
15:47:50 104  	var_transaction_attempt_id := NULL;
15:47:50 105  	PROCS_TRANSACTION_CRU_V22.CREATE_TRANSACTION_ATTEMPT(
15:47:50 106  	  inout_transaction_attempt_id => var_transaction_attempt_id,
15:47:50 107  	  in_transaction_id	       => in_transaction_id,
15:47:50 108  	  in_external_status_code      => in_external_status_code,
15:47:50 109  	  in_external_status_message   => in_external_status_message,
15:47:50 110  	  in_created_by 	       => in_created_by,
15:47:50 111  	  in_external_transaction_id   => in_ext_transaction_id,
15:47:50 112  	  in_transaction_start_time    => var_transaction_create_date,
15:47:50 113  	  in_status_id		       => in_trans_attempt_status
15:47:50 114  	);
15:47:50 115  
15:47:50 116  	PROCS_TRANSACTION_CRU_V22.UPDATE_TRANSACTION(
15:47:50 117  	  in_transaction_id => in_transaction_id,
15:47:50 118  	  in_updated_by     => in_created_by
15:47:50 119  	);
15:47:50 120  
15:47:50 121  	out_transaction_attempt_id := var_transaction_attempt_id;
15:47:50 122  
15:47:50 123  EXCEPTION
15:47:50 124  WHEN BAD_TRANSACTION_ID THEN
15:47:50 125  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 126  	  SPROC_NAME, 'No such transaction');
15:47:50 127  WHEN BAD_TRANS_ATTEMPT_STATUS THEN
15:47:50 128  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:50 129  	  SPROC_NAME, 'Bad transaction attempt status');
15:47:50 130  WHEN OTHERS THEN
15:47:50 131  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 132  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 133  END CREATE_TRANSACTION_ATTEMPT;
15:47:50 134  
15:47:50 135  /******************************************************************************/
15:47:50 136  
15:47:50 137  PROCEDURE UPDATE_TRANSACTION_STATUS (
15:47:50 138  /*
15:47:50 139  Throws exceptions:
15:47:50 140  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 141  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 142  */
15:47:50 143  	in_transaction_id	 IN NUMBER,
15:47:50 144  	in_updated_by		 IN VARCHAR2,
15:47:50 145  	in_transaction_status_id IN NUMBER
15:47:50 146  ) AS
15:47:50 147  -- VARIABLES
15:47:50 148  SPROC_NAME	  CONSTANT VARCHAR2(25) := 'UPDATE_TRANSACTION_STATUS';
15:47:50 149  temp_transaction_id NUMBER;
15:47:50 150  
15:47:50 151  -- EXCEPTIONS
15:47:50 152  BAD_TRANSACTION_ID     EXCEPTION;
15:47:50 153  BAD_TRANSACTION_STATUS EXCEPTION;
15:47:50 154  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:50 155  BEGIN
15:47:50 156  
15:47:50 157  	-- Check that transaction exists
15:47:50 158  	BEGIN
15:47:50 159  	  SELECT
15:47:50 160  	    TRANSACTION.ID into temp_transaction_id
15:47:50 161  	  FROM
15:47:50 162  	    TRANSACTION
15:47:50 163  	  WHERE
15:47:50 164  	    TRANSACTION.ID = in_transaction_id;
15:47:50 165  	  EXCEPTION
15:47:50 166  	    WHEN OTHERS THEN
15:47:50 167  	      RAISE BAD_TRANSACTION_ID;
15:47:50 168  	END;
15:47:50 169  
15:47:50 170  	-- Check that transaction status is correct
15:47:50 171  	IF    in_transaction_status_id != GLOBAL_STATUSES_V22.TRANSACTION_PENDING
15:47:50 172  	  AND in_transaction_status_id != GLOBAL_STATUSES_V22.TRANSACTION_CLOSED
15:47:50 173  	  AND in_transaction_status_id != GLOBAL_STATUSES_V22.TRANSACTION_CHARGEBACK
15:47:50 174  	  AND in_transaction_status_id != GLOBAL_STATUSES_V22.TRANSACTION_DECLINED THEN
15:47:50 175  	  RAISE BAD_TRANSACTION_STATUS;
15:47:50 176  	END IF;
15:47:50 177  
15:47:50 178  	PROCS_TRANSACTION_CRU_V22.UPDATE_TRANSACTION(
15:47:50 179  	  in_transaction_id	   => in_transaction_id,
15:47:50 180  	  in_updated_by 	   => in_updated_by,
15:47:50 181  	  in_transaction_status_id => in_transaction_status_id
15:47:50 182  	);
15:47:50 183  
15:47:50 184  EXCEPTION
15:47:50 185  WHEN BAD_TRANSACTION_ID THEN
15:47:50 186  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 187  	  SPROC_NAME, 'No such transaction');
15:47:50 188  WHEN BAD_TRANSACTION_STATUS THEN
15:47:50 189  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:50 190  	  SPROC_NAME, 'Bad transaction status');
15:47:50 191  WHEN OTHERS THEN
15:47:50 192  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 193  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 194  END UPDATE_TRANSACTION_STATUS;
15:47:50 195  
15:47:50 196  /******************************************************************************/
15:47:50 197  
15:47:50 198  PROCEDURE UPDATE_TRANSACTION_SETTLED (
15:47:50 199  /*
15:47:50 200  Throws exceptions:
15:47:50 201  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 202  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 203  */
15:47:50 204  	in_transaction_id	 IN NUMBER,
15:47:50 205  	in_updated_by		 IN VARCHAR2,
15:47:50 206  	in_is_settled		 IN NUMBER
15:47:50 207  ) AS
15:47:50 208  -- VARIABLES
15:47:50 209  SPROC_NAME	  CONSTANT VARCHAR2(26) := 'UPDATE_TRANSACTION_SETTLED';
15:47:50 210  temp_transaction_id NUMBER;
15:47:50 211  
15:47:50 212  -- EXCEPTIONS
15:47:50 213  BAD_TRANSACTION_ID     EXCEPTION;
15:47:50 214  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:50 215  BEGIN
15:47:50 216  
15:47:50 217  	-- Check that transaction exists
15:47:50 218  	BEGIN
15:47:50 219  	  SELECT
15:47:50 220  	    TRANSACTION.ID into temp_transaction_id
15:47:50 221  	  FROM
15:47:50 222  	    TRANSACTION
15:47:50 223  	  WHERE
15:47:50 224  	    TRANSACTION.ID = in_transaction_id;
15:47:50 225  	  EXCEPTION
15:47:50 226  	    WHEN OTHERS THEN
15:47:50 227  	      RAISE BAD_TRANSACTION_ID;
15:47:50 228  	END;
15:47:50 229  
15:47:50 230  	PROCS_TRANSACTION_CRU_V22.UPDATE_TRANSACTION(
15:47:50 231  	  in_transaction_id	   => in_transaction_id,
15:47:50 232  	  in_updated_by 	   => in_updated_by,
15:47:50 233  	  in_is_settled 	   => in_is_settled
15:47:50 234  	);
15:47:50 235  
15:47:50 236  EXCEPTION
15:47:50 237  WHEN BAD_TRANSACTION_ID THEN
15:47:50 238  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 239  	  SPROC_NAME, 'No such transaction');
15:47:50 240  WHEN OTHERS THEN
15:47:50 241  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 242  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 243  END UPDATE_TRANSACTION_SETTLED;
15:47:50 244  
15:47:50 245  /******************************************************************************/
15:47:50 246  
15:47:50 247  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_TIME (
15:47:50 248  /*
15:47:50 249  Throws exceptions:
15:47:50 250  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 251  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 252  */
15:47:50 253  	in_transaction_attempt_id IN NUMBER,
15:47:50 254  	in_updated_by		  IN VARCHAR2
15:47:50 255  ) AS
15:47:50 256  SPROC_NAME CONSTANT VARCHAR2(27) := 'UPDATE_TRNSCTN_ATTEMPT_TIME';
15:47:50 257  -- VARIABLES
15:47:50 258  var_transaction_id NUMBER;
15:47:50 259  -- EXCEPTION
15:47:50 260  BAD_TRANSACTION_ATTEMPT_ID EXCEPTION;
15:47:50 261  BEGIN
15:47:50 262  
15:47:50 263  	BEGIN
15:47:50 264  	  SELECT
15:47:50 265  	    TRANSACTION_ATTEMPT.TRANSACTION_ID into var_transaction_id
15:47:50 266  	  FROM
15:47:50 267  	    TRANSACTION_ATTEMPT
15:47:50 268  	  WHERE
15:47:50 269  	    TRANSACTION_ATTEMPT.ID = in_transaction_attempt_id;
15:47:50 270  	  EXCEPTION
15:47:50 271  	    WHEN NO_DATA_FOUND THEN
15:47:50 272  	      RAISE BAD_TRANSACTION_ATTEMPT_ID;
15:47:50 273  	END;
15:47:50 274  
15:47:50 275  	PROCS_TRANSACTION_CRU_V22.UPDATE_TRANSACTION(
15:47:50 276  	  in_transaction_id => var_transaction_id,
15:47:50 277  	  in_updated_by     => in_updated_by
15:47:50 278  	);
15:47:50 279  
15:47:50 280  EXCEPTION
15:47:50 281  WHEN BAD_TRANSACTION_ATTEMPT_ID THEN
15:47:50 282  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 283  	  SPROC_NAME, 'No such transaction attempt');
15:47:50 284  WHEN OTHERS THEN
15:47:50 285  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 286  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 287  END UPDATE_TRNSCTN_ATTEMPT_TIME;
15:47:50 288  
15:47:50 289  /******************************************************************************/
15:47:50 290  
15:47:50 291  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_STATUS (
15:47:50 292  /*
15:47:50 293  Throws exceptions:
15:47:50 294  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 295  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 296  */
15:47:50 297  	in_transaction_attempt_id     IN NUMBER,
15:47:50 298  	in_transaction_attempt_status IN NUMBER
15:47:50 299  ) AS
15:47:50 300  -- VARIABLES
15:47:50 301  SPROC_NAME		  CONSTANT VARCHAR2(29) := 'UPDATE_TRNSCTN_ATTEMPT_STATUS';
15:47:50 302  temp_transaction_attempt_id NUMBER;
15:47:50 303  
15:47:50 304  -- EXCEPTION
15:47:50 305  BAD_TRANSACTION_ATTEMPT_ID EXCEPTION;
15:47:50 306  BAD_TRANS_ATTEMPT_STATUS	 EXCEPTION;
15:47:50 307  BEGIN
15:47:50 308  
15:47:50 309  	-- Check that transaction attempt exists
15:47:50 310  	BEGIN
15:47:50 311  	  SELECT
15:47:50 312  	    TRANSACTION_ATTEMPT.ID into temp_transaction_attempt_id
15:47:50 313  	  FROM
15:47:50 314  	    TRANSACTION_ATTEMPT
15:47:50 315  	  WHERE
15:47:50 316  	    TRANSACTION_ATTEMPT.ID = in_transaction_attempt_id;
15:47:50 317  	  EXCEPTION
15:47:50 318  	    WHEN NO_DATA_FOUND THEN
15:47:50 319  	      RAISE BAD_TRANSACTION_ATTEMPT_ID;
15:47:50 320  	END;
15:47:50 321  
15:47:50 322  	-- Check that transaction attempt is correct
15:47:50 323  	IF in_transaction_attempt_status != GLOBAL_STATUSES_V22.TRANS_ATTEMPT_IN_PROGRESS
15:47:50 324  	  AND in_transaction_attempt_status != GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS
15:47:50 325  	  AND in_transaction_attempt_status != GLOBAL_STATUSES_V22.TRANS_ATTEMPT_FAILED THEN
15:47:50 326  	  RAISE BAD_TRANS_ATTEMPT_STATUS;
15:47:50 327  	END IF;
15:47:50 328  
15:47:50 329  	PROCS_TRANSACTION_CRU_V22.UPDATE_TRANSACTION_ATTEMPT(
15:47:50 330  	  in_transaction_attempt_id => in_transaction_attempt_id,
15:47:50 331  	  in_status_id		    => in_transaction_attempt_status
15:47:50 332  	);
15:47:50 333  
15:47:50 334  EXCEPTION
15:47:50 335  WHEN BAD_TRANSACTION_ATTEMPT_ID THEN
15:47:50 336  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 337  	  SPROC_NAME, 'No such transaction attempt');
15:47:50 338  WHEN BAD_TRANS_ATTEMPT_STATUS THEN
15:47:50 339  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:50 340  	  SPROC_NAME, 'Bad transaction attempt status');
15:47:50 341  WHEN OTHERS THEN
15:47:50 342  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 343  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 344  END UPDATE_TRNSCTN_ATTEMPT_STATUS;
15:47:50 345  
15:47:50 346  /******************************************************************************/
15:47:50 347  
15:47:50 348  PROCEDURE GET_TRNSCTN_ATTEMPTS_BY_STATUS (
15:47:50 349  /*
15:47:50 350  Throws exceptions:
15:47:50 351  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 352  */
15:47:50 353  	in_transaction_id	      IN NUMBER,
15:47:50 354  	in_transaction_attempt_status IN NUMBER,
15:47:50 355  	out_result_set		      OUT SYS_REFCURSOR
15:47:50 356  ) AS
15:47:50 357  -- VARIABLES
15:47:50 358  SPROC_NAME	  CONSTANT VARCHAR2(30) := 'GET_TRNSCTN_ATTEMPTS_BY_STATUS';
15:47:50 359  temp_transaction_id NUMBER;
15:47:50 360  -- EXCEPTIONS
15:47:50 361  BAD_TRANSACTION_ID       EXCEPTION;
15:47:50 362  BAD_TRANS_ATTEMPT_STATUS EXCEPTION;
15:47:50 363  BEGIN
15:47:50 364  
15:47:50 365  	-- Check that transaction exists
15:47:50 366  	BEGIN
15:47:50 367  	  SELECT
15:47:50 368  	    TRANSACTION.ID into temp_transaction_id
15:47:50 369  	  FROM
15:47:50 370  	    TRANSACTION
15:47:50 371  	  WHERE
15:47:50 372  	    TRANSACTION.ID = in_transaction_id;
15:47:50 373  	  EXCEPTION
15:47:50 374  	    WHEN OTHERS THEN
15:47:50 375  	      RAISE BAD_TRANSACTION_ID;
15:47:50 376  	END;
15:47:50 377  
15:47:50 378  	-- Check that transaction attempt status is correct
15:47:50 379  	IF in_transaction_attempt_status != GLOBAL_STATUSES_V22.TRANS_ATTEMPT_IN_PROGRESS
15:47:50 380  	  AND in_transaction_attempt_status != GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS
15:47:50 381  	  AND in_transaction_attempt_status != GLOBAL_STATUSES_V22.TRANS_ATTEMPT_FAILED THEN
15:47:50 382  	  RAISE BAD_TRANS_ATTEMPT_STATUS;
15:47:50 383  	END IF;
15:47:50 384  
15:47:50 385  	OPEN out_result_set FOR
15:47:50 386  	SELECT
15:47:50 387  	  TRANSACTION_ATTEMPT.ID,
15:47:50 388  	  TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE,
15:47:50 389  	  TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE,
15:47:50 390  	  TRANSACTION_ATTEMPT.CREATE_DATE,
15:47:50 391  	  TRANSACTION_ATTEMPT.CREATED_BY,
15:47:50 392  	  TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID,
15:47:50 393  	  TRANSACTION_ATTEMPT.TRANSACTION_START_TIME,
15:47:50 394  	  TRANSACTION.TRANSACTION_AMOUNT,
15:47:50 395  	  TRANSACTION.ID as "TRANSACTION_ID",
15:47:50 396  	  TRANSACTION.UPDATE_DATE as "TRANSACTION_UPDATE_TIME"
15:47:50 397  	FROM
15:47:50 398  	  TRANSACTION_ATTEMPT
15:47:50 399  	  INNER JOIN TRANSACTION ON TRANSACTION_ATTEMPT.TRANSACTION_ID = TRANSACTION.ID
15:47:50 400  	WHERE
15:47:50 401  	  TRANSACTION_ATTEMPT.TRANSACTION_ID = in_transaction_id
15:47:50 402  	  AND TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID = in_transaction_attempt_status;
15:47:50 403  
15:47:50 404  EXCEPTION
15:47:50 405  WHEN BAD_TRANSACTION_ID THEN
15:47:50 406  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 407  	  SPROC_NAME, 'No such transaction');
15:47:50 408  WHEN BAD_TRANS_ATTEMPT_STATUS THEN
15:47:50 409  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:50 410  	  SPROC_NAME, 'Bad transaction attempt status');
15:47:50 411  WHEN OTHERS THEN
15:47:50 412  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 413  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 414  END GET_TRNSCTN_ATTEMPTS_BY_STATUS;
15:47:50 415  
15:47:50 416  /******************************************************************************/
15:47:50 417  
15:47:50 418  PROCEDURE UPDATE_TRANSACTION_ATTEMPT_INF (
15:47:50 419  /*
15:47:50 420  Throws exceptions:
15:47:50 421  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 422  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 423  */
15:47:50 424  	in_transaction_attempt_id IN NUMBER,
15:47:50 425  	in_ext_status_code	  IN VARCHAR2,
15:47:50 426  	in_ext_status_message	  IN VARCHAR2,
15:47:50 427  	in_ext_transaction_id	  IN VARCHAR2
15:47:50 428  ) AS
15:47:50 429  -- VARIABLES
15:47:50 430  SPROC_NAME	       CONSTANT VARCHAR2(30) := 'UPDATE_TRANSACTION_ATTEMPT_INF';
15:47:50 431  temp_trans_attempt_count NUMBER;
15:47:50 432  -- EXCEPTIONS
15:47:50 433  BAD_ATTEMPT_ID EXCEPTION;
15:47:50 434  BEGIN
15:47:50 435  
15:47:50 436  	SELECT
15:47:50 437  	  COUNT(*) into temp_trans_attempt_count
15:47:50 438  	FROM
15:47:50 439  	  TRANSACTION_ATTEMPT
15:47:50 440  	WHERE
15:47:50 441  	  TRANSACTION_ATTEMPT.ID = in_transaction_attempt_id;
15:47:50 442  
15:47:50 443  	IF temp_trans_attempt_count = 0 THEN
15:47:50 444  	  RAISE BAD_ATTEMPT_ID;
15:47:50 445  	END IF;
15:47:50 446  
15:47:50 447  	PROCS_TRANSACTION_CRU_V22.UPDATE_TRANSACTION_ATTEMPT(
15:47:50 448  	  in_transaction_attempt_id  => in_transaction_attempt_id,
15:47:50 449  	  in_external_status_code    => in_ext_status_code,
15:47:50 450  	  in_external_status_message => in_ext_status_message,
15:47:50 451  	  in_external_transaction_id => in_ext_transaction_id
15:47:50 452  	);
15:47:50 453  
15:47:50 454  EXCEPTION
15:47:50 455  WHEN BAD_ATTEMPT_ID THEN
15:47:50 456  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 457  	  SPROC_NAME, 'No such attempt');
15:47:50 458  WHEN OTHERS THEN
15:47:50 459  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 460  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 461  END UPDATE_TRANSACTION_ATTEMPT_INF;
15:47:50 462  
15:47:50 463  /******************************************************************************/
15:47:50 464  
15:47:50 465  PROCEDURE GET_FAILED_ATTEMPTS_NUMBER (
15:47:50 466  /*
15:47:50 467  Throws exceptions:
15:47:50 468  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 469  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 470  */
15:47:50 471  	in_transaction_id IN  NUMBER,
15:47:50 472  	out_attempts_num  OUT NUMBER
15:47:50 473  ) AS
15:47:50 474  -- VARIABLES
15:47:50 475  SPROC_NAME	     CONSTANT VARCHAR2(26) := 'GET_FAILED_ATTEMPTS_NUMBER';
15:47:50 476  temp_transaction_count NUMBER;
15:47:50 477  
15:47:50 478  -- EXCEPTIONS
15:47:50 479  BAD_TRANSACTION_ID EXCEPTION;
15:47:50 480  BEGIN
15:47:50 481  
15:47:50 482  	SELECT
15:47:50 483  	  COUNT(*) into temp_transaction_count
15:47:50 484  	FROM
15:47:50 485  	  TRANSACTION
15:47:50 486  	WHERE
15:47:50 487  	  TRANSACTION.ID = in_transaction_id;
15:47:50 488  
15:47:50 489  	IF temp_transaction_count = 0 THEN
15:47:50 490  	  RAISE BAD_TRANSACTION_ID;
15:47:50 491  	END IF;
15:47:50 492  
15:47:50 493  	SELECT
15:47:50 494  	  COUNT(*) into out_attempts_num
15:47:50 495  	FROM
15:47:50 496  	  TRANSACTION_ATTEMPT
15:47:50 497  	WHERE
15:47:50 498  	  TRANSACTION_ATTEMPT.TRANSACTION_ID = in_transaction_id
15:47:50 499  	  AND TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID = GLOBAL_STATUSES_V22.TRANS_ATTEMPT_FAILED;
15:47:50 500  
15:47:50 501  EXCEPTION
15:47:50 502  WHEN BAD_TRANSACTION_ID THEN
15:47:50 503  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 504  	  SPROC_NAME, 'No such transaction');
15:47:50 505  WHEN OTHERS THEN
15:47:50 506  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 507  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 508  END GET_FAILED_ATTEMPTS_NUMBER;
15:47:50 509  /******************************************************************************/
15:47:50 510  
15:47:50 511  PROCEDURE IS_TRANSACTION_SUCCESSFULL (
15:47:50 512  /*
15:47:50 513  Throws exceptions:
15:47:50 514  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 515  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 516  */
15:47:50 517  	in_transaction_id IN  NUMBER,
15:47:50 518  	out_is_successfull  OUT NUMBER
15:47:50 519  ) AS
15:47:50 520  -- VARIABLES
15:47:50 521  SPROC_NAME	     CONSTANT VARCHAR2(26) := 'IS_TRANSACTION_SUCCESSFULL';
15:47:50 522  temp_transaction_count NUMBER;
15:47:50 523  
15:47:50 524  -- EXCEPTIONS
15:47:50 525  BAD_TRANSACTION_ID EXCEPTION;
15:47:50 526  BEGIN
15:47:50 527  
15:47:50 528  	SELECT
15:47:50 529  	  COUNT(*) into temp_transaction_count
15:47:50 530  	FROM
15:47:50 531  	  TRANSACTION
15:47:50 532  	WHERE
15:47:50 533  	  TRANSACTION.ID = in_transaction_id;
15:47:50 534  
15:47:50 535  	IF temp_transaction_count = 0 THEN
15:47:50 536  	  RAISE BAD_TRANSACTION_ID;
15:47:50 537  	END IF;
15:47:50 538  
15:47:50 539  	SELECT
15:47:50 540  	  COUNT(*) into out_is_successfull
15:47:50 541  	FROM
15:47:50 542  	  TRANSACTION_ATTEMPT
15:47:50 543  	WHERE
15:47:50 544  	  TRANSACTION_ATTEMPT.TRANSACTION_ID = in_transaction_id
15:47:50 545  	  AND TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID = GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS;
15:47:50 546  
15:47:50 547  EXCEPTION
15:47:50 548  WHEN BAD_TRANSACTION_ID THEN
15:47:50 549  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 550  	  SPROC_NAME, 'No such transaction');
15:47:50 551  WHEN OTHERS THEN
15:47:50 552  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 553  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 554  END IS_TRANSACTION_SUCCESSFULL;
15:47:50 555  /******************************************************************************/
15:47:50 556  
15:47:50 557  PROCEDURE GET_TRANSACTION_AMOUNT (
15:47:50 558  /*
15:47:50 559  Throws exceptions:
15:47:50 560  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 561  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 562  */
15:47:50 563  	in_transaction_id      IN  NUMBER,
15:47:50 564  	out_transaction_amount OUT NUMBER
15:47:50 565  ) AS
15:47:50 566  SPROC_NAME CONSTANT VARCHAR2(22) := 'GET_TRANSACTION_AMOUNT';
15:47:50 567  BEGIN
15:47:50 568  
15:47:50 569  	SELECT
15:47:50 570  	  TRANSACTION.TRANSACTION_AMOUNT into out_transaction_amount
15:47:50 571  	FROM
15:47:50 572  	  TRANSACTION
15:47:50 573  	WHERE
15:47:50 574  	  TRANSACTION.ID = in_transaction_id;
15:47:50 575  
15:47:50 576  EXCEPTION
15:47:50 577  WHEN NO_DATA_FOUND THEN
15:47:50 578  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 579  	  SPROC_NAME, 'No such transaction');
15:47:50 580  WHEN OTHERS THEN
15:47:50 581  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 582  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 583  END GET_TRANSACTION_AMOUNT;
15:47:50 584  
15:47:50 585  /******************************************************************************/
15:47:50 586  
15:47:50 587  PROCEDURE GET_TRANSACTIONS_BY_CHARGE_ID (
15:47:50 588  /*
15:47:50 589  Throws exceptions:
15:47:50 590  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 591  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 592  */
15:47:50 593  	in_charge_id   IN  NUMBER,
15:47:50 594  	out_result_set OUT SYS_REFCURSOR
15:47:50 595  ) AS
15:47:50 596  -- VARIABLES
15:47:50 597  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_TRANSACTIONS_BY_CHARGE_ID';
15:47:50 598  temp_charge_id NUMBER;
15:47:50 599  -- EXCEPTIONS
15:47:50 600  BAD_CHARGE_ID EXCEPTION;
15:47:50 601  BEGIN
15:47:50 602  
15:47:50 603  	BEGIN
15:47:50 604  	  SELECT
15:47:50 605  	    CHARGE.ID into temp_charge_id
15:47:50 606  	  FROM
15:47:50 607  	    CHARGE
15:47:50 608  	  WHERE
15:47:50 609  	    CHARGE.ID = in_charge_id;
15:47:50 610  	  EXCEPTION
15:47:50 611  	    WHEN NO_DATA_FOUND THEN
15:47:50 612  	      RAISE BAD_CHARGE_ID;
15:47:50 613  	END;
15:47:50 614  
15:47:50 615  	OPEN out_result_set FOR
15:47:50 616  	SELECT DISTINCT
15:47:50 617  	  TRANSACTION.ID,
15:47:50 618  	  TRANSACTION.TRANSACTION_STATUS_ID,
15:47:50 619  	  TRANSACTION.CREATE_DATE,
15:47:50 620  	  TRANSACTION.TRANSACTION_AMOUNT,
15:47:50 621  	  TRANSACTION.IS_REFUND,
15:47:50 622  	  TRANSACTION.ORDER_ID
15:47:50 623  	FROM
15:47:50 624  	  CHARGE INNER JOIN TRANSACTION ON
15:47:50 625  	      CHARGE.TRANSACTION_ID = TRANSACTION.ID
15:47:50 626  	WHERE
15:47:50 627  	  CHARGE.ID = in_charge_id;
15:47:50 628  
15:47:50 629  EXCEPTION
15:47:50 630  WHEN BAD_CHARGE_ID THEN
15:47:50 631  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 632  	  SPROC_NAME, 'No such charge');
15:47:50 633  WHEN OTHERS THEN
15:47:50 634  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 635  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 636  END GET_TRANSACTIONS_BY_CHARGE_ID;
15:47:50 637  /******************************************************************************/
15:47:50 638  
15:47:50 639  PROCEDURE GET_TRANSACTION_BY_ORDER_ID (
15:47:50 640  /*
15:47:50 641  Throws exceptions:
15:47:50 642  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 643  */
15:47:50 644  	in_order_id   IN  TRANSACTION.ORDER_ID%TYPE,
15:47:50 645  	out_result_set OUT SYS_REFCURSOR
15:47:50 646  ) AS
15:47:50 647  -- VARIABLES
15:47:50 648  SPROC_NAME     CONSTANT VARCHAR2(27) := 'GET_TRANSACTION_BY_ORDER_ID';
15:47:50 649  BEGIN
15:47:50 650  	OPEN out_result_set FOR
15:47:50 651  	SELECT DISTINCT
15:47:50 652  	  TRANSACTION.ID
15:47:50 653  	FROM
15:47:50 654  	  TRANSACTION
15:47:50 655  	WHERE
15:47:50 656  	  TRANSACTION.ORDER_ID = in_order_id;
15:47:50 657  
15:47:50 658  EXCEPTION
15:47:50 659  WHEN OTHERS THEN
15:47:50 660  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 661  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 662  END GET_TRANSACTION_BY_ORDER_ID;
15:47:50 663  /******************************************************************************/
15:47:50 664  
15:47:50 665  PROCEDURE GET_TRANSACTIONS_BY_ORDER_ID (
15:47:50 666  /*
15:47:50 667  Throws exceptions:
15:47:50 668  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 669  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 670  */
15:47:50 671  	in_order_id   IN  TRANSACTION.ORDER_ID%TYPE,
15:47:50 672  	out_result_set OUT SYS_REFCURSOR
15:47:50 673  ) AS
15:47:50 674  -- VARIABLES
15:47:50 675  SPROC_NAME     CONSTANT VARCHAR2(28) := 'GET_TRANSACTIONS_BY_ORDER_ID';
15:47:50 676  temp_order_id TRANSACTION.ORDER_ID%TYPE;
15:47:50 677  -- EXCEPTIONS
15:47:50 678  BAD_ORDER_ID EXCEPTION;
15:47:50 679  BEGIN
15:47:50 680  
15:47:50 681  	--TODO BOO, REMOVE ME
15:47:50 682  	BEGIN
15:47:50 683  	  SELECT
15:47:50 684  	    distinct TRANSACTION.ORDER_ID INTO temp_order_id
15:47:50 685  	  FROM
15:47:50 686  	    TRANSACTION
15:47:50 687  	  WHERE
15:47:50 688  	    TRANSACTION.ORDER_ID = in_order_id;
15:47:50 689  	  EXCEPTION
15:47:50 690  	    WHEN NO_DATA_FOUND THEN
15:47:50 691  	      RAISE BAD_ORDER_ID;
15:47:50 692  	END;
15:47:50 693  
15:47:50 694  	OPEN out_result_set FOR
15:47:50 695  	SELECT c.ID CHARGE_ID,
15:47:50 696  	  c.CHARGE_AMOUNT,
15:47:50 697  	  c.CHARGE_STATUS_ID,
15:47:50 698  	  c.INSTRUMENT_ID,
15:47:50 699  	  c.INSTRUMENT_TYPE_ID,
15:47:50 700  	  c.INVOICE_ID,
15:47:50 701  	  t.ID TRANSACTION_ID,
15:47:50 702  	  t.IS_REFUND,
15:47:50 703  	  t.IS_SETTLED,
15:47:50 704  	  t.ORDER_ID,
15:47:50 705  	  t.TRANSACTION_AMOUNT,
15:47:50 706  	  t.TRANSACTION_STATUS_ID,
15:47:50 707  	  t.CREATE_DATE TRANSACTION_CREATE_DATE,
15:47:50 708  	  t.CREATED_BY TRANSACTION_CREATED_BY,
15:47:50 709  	  t.UPDATE_DATE TRANSACTION_UPDATE_DATE,
15:47:50 710  	  t.UPDATED_BY TRANSACTION_UPDATED_BY
15:47:50 711  	FROM CHARGE c
15:47:50 712  	JOIN TRANSACTION t ON c.TRANSACTION_ID = t.ID
15:47:50 713  	WHERE TRANSACTION_ID IN (
15:47:50 714  	  SELECT ID FROM TRANSACTION WHERE ORDER_ID = in_order_id
15:47:50 715  	);
15:47:50 716  
15:47:50 717  EXCEPTION
15:47:50 718  WHEN BAD_ORDER_ID THEN
15:47:50 719  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 720  	  SPROC_NAME, 'No such order');
15:47:50 721  WHEN OTHERS THEN
15:47:50 722  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 723  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 724  END GET_TRANSACTIONS_BY_ORDER_ID;
15:47:50 725  /******************************************************************************/
15:47:50 726  
15:47:50 727  PROCEDURE GET_CLOSED_REFUNDS_BY_INVOICE (
15:47:50 728  /*
15:47:50 729  Throws exceptions:
15:47:50 730  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 731  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 732  */
15:47:50 733  	in_invoice_id	IN  NUMBER,
15:47:50 734  	out_result_set OUT SYS_REFCURSOR
15:47:50 735  ) AS
15:47:50 736  -- VARIABLES
15:47:50 737  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_CLOSED_REFUNDS_BY_INVOICE';
15:47:50 738  temp_invoice_id NUMBER;
15:47:50 739  -- EXCEPTIONS
15:47:50 740  BAD_INVOICE_ID EXCEPTION;
15:47:50 741  BEGIN
15:47:50 742  
15:47:50 743  	BEGIN
15:47:50 744  	  SELECT
15:47:50 745  	    INVOICE.ID into temp_invoice_id
15:47:50 746  	  FROM
15:47:50 747  	    INVOICE
15:47:50 748  	  WHERE
15:47:50 749  	    INVOICE.ID = in_invoice_id;
15:47:50 750  	  EXCEPTION
15:47:50 751  	    WHEN NO_DATA_FOUND THEN
15:47:50 752  	      RAISE BAD_INVOICE_ID;
15:47:50 753  	END;
15:47:50 754  
15:47:50 755  	OPEN out_result_set FOR
15:47:50 756  	SELECT DISTINCT
15:47:50 757  	  TRANSACTION.ID,
15:47:50 758  	  TRANSACTION.TRANSACTION_STATUS_ID,
15:47:50 759  	  TRANSACTION.CREATE_DATE,
15:47:50 760  	  TRANSACTION.UPDATE_DATE,
15:47:50 761  	  TRANSACTION.ORDER_ID,
15:47:50 762  	  TRANSACTION.TRANSACTION_AMOUNT
15:47:50 763  	FROM
15:47:50 764  	  INVOICE INNER JOIN CHARGE ON	(INVOICE.ID = CHARGE.INVOICE_ID)
15:47:50 765  	  INNER JOIN TRANSACTION ON (CHARGE.TRANSACTION_ID = TRANSACTION.ID)
15:47:50 766  	WHERE
15:47:50 767  	  INVOICE.ID = in_invoice_id
15:47:50 768  	  AND TRANSACTION.IS_REFUND = GLOBAL_CONSTANTS_V22.TRUE
15:47:50 769  	  AND TRANSACTION.TRANSACTION_AMOUNT <= 0
15:47:50 770  	  AND TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V22.TRANSACTION_CLOSED;
15:47:50 771  
15:47:50 772  EXCEPTION
15:47:50 773  WHEN BAD_INVOICE_ID THEN
15:47:50 774  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 775  	  SPROC_NAME, 'No such invoice');
15:47:50 776  WHEN OTHERS THEN
15:47:50 777  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 778  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 779  END GET_CLOSED_REFUNDS_BY_INVOICE;
15:47:50 780  
15:47:50 781  /******************************************************************************/
15:47:50 782  
15:47:50 783  PROCEDURE GET_TRANSACTION_ATTEMPTS (
15:47:50 784  /*
15:47:50 785  Throws exceptions:
15:47:50 786  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 787  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 788  */
15:47:50 789  	in_transaction_id IN  NUMBER,
15:47:50 790  	out_result_set	  OUT SYS_REFCURSOR
15:47:50 791  ) AS
15:47:50 792  -- VARIABLES
15:47:50 793  SPROC_NAME	  CONSTANT VARCHAR2(24) := 'GET_TRANSACTION_ATTEMPTS';
15:47:50 794  temp_transaction_id NUMBER;
15:47:50 795  -- EXCEPTIONS
15:47:50 796  BAD_TRANSACTION_ID EXCEPTION;
15:47:50 797  BEGIN
15:47:50 798  
15:47:50 799  	BEGIN
15:47:50 800  	  SELECT
15:47:50 801  	    TRANSACTION.ID into temp_transaction_id
15:47:50 802  	  FROM
15:47:50 803  	    TRANSACTION
15:47:50 804  	  WHERE
15:47:50 805  	    TRANSACTION.ID = in_transaction_id;
15:47:50 806  	  EXCEPTION
15:47:50 807  	    WHEN NO_DATA_FOUND THEN
15:47:50 808  	      RAISE BAD_TRANSACTION_ID;
15:47:50 809  	END;
15:47:50 810  
15:47:50 811  	OPEN out_result_set FOR
15:47:50 812  	SELECT
15:47:50 813  	  TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID,
15:47:50 814  	  TRANSACTION_ATTEMPT.EXTERNAL_STATUS_CODE,
15:47:50 815  	  TRANSACTION_ATTEMPT.EXTERNAL_STATUS_MESSAGE,
15:47:50 816  	  TRANSACTION_ATTEMPT.CREATE_DATE,
15:47:50 817  	  TRANSACTION_ATTEMPT.EXTERNAL_TRANSACTION_ID
15:47:50 818  	FROM
15:47:50 819  	  TRANSACTION_ATTEMPT
15:47:50 820  	WHERE
15:47:50 821  	  TRANSACTION_ATTEMPT.TRANSACTION_ID = in_transaction_id;
15:47:50 822  
15:47:50 823  EXCEPTION
15:47:50 824  WHEN BAD_TRANSACTION_ID THEN
15:47:50 825  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 826  	  SPROC_NAME, 'No such transaction');
15:47:50 827  WHEN OTHERS THEN
15:47:50 828  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 829  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 830  END GET_TRANSACTION_ATTEMPTS;
15:47:50 831  
15:47:50 832  /******************************************************************************/
15:47:50 833  
15:47:50 834  PROCEDURE RESERVE_TRANSACTION_ID (
15:47:50 835  /*
15:47:50 836  Throws exceptions:
15:47:50 837  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 838  */
15:47:50 839  	out_transaction_id OUT NUMBER
15:47:50 840  ) AS
15:47:50 841  SPROC_NAME CONSTANT VARCHAR2(22) := 'RESERVE_TRANSACTION_ID';
15:47:50 842  BEGIN
15:47:50 843  	SELECT
15:47:50 844  	  TRN_ID_SEQ.nextVal into out_transaction_id
15:47:50 845  	FROM DUAL;
15:47:50 846  EXCEPTION
15:47:50 847  WHEN OTHERS THEN
15:47:50 848  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 849  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 850  END RESERVE_TRANSACTION_ID;
15:47:50 851  
15:47:50 852  /******************************************************************************/
15:47:50 853  
15:47:50 854  PROCEDURE GET_TRANSACTION_BY_ID (
15:47:50 855  /*
15:47:50 856  Throws exceptions:
15:47:50 857  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 858  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 859  */
15:47:50 860  	in_transaction_id IN NUMBER,
15:47:50 861  	out_result_set	  OUT SYS_REFCURSOR
15:47:50 862  ) AS
15:47:50 863  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_TRANSACTION_BY_ID';
15:47:50 864  -- VARIABLES
15:47:50 865  temp_transaction_id NUMBER;
15:47:50 866  -- EXCPTIONS
15:47:50 867  BAD_TRANSACTION_ID EXCEPTION;
15:47:50 868  BEGIN
15:47:50 869  	BEGIN
15:47:50 870  	  SELECT
15:47:50 871  	    TRANSACTION.ID into temp_transaction_id
15:47:50 872  	  FROM
15:47:50 873  	    TRANSACTION
15:47:50 874  	  WHERE
15:47:50 875  	    TRANSACTION.ID = in_transaction_id;
15:47:50 876  	  EXCEPTION
15:47:50 877  	    WHEN NO_DATA_FOUND THEN
15:47:50 878  	      RAISE BAD_TRANSACTION_ID;
15:47:50 879  	END;
15:47:50 880  
15:47:50 881  	PROCS_TRANSACTION_CRU_V22.READ_TRANSACTION(
15:47:50 882  	  in_transaction_id => in_transaction_id,
15:47:50 883  	  out_result_set    => out_result_set
15:47:50 884  	);
15:47:50 885  
15:47:50 886  EXCEPTION
15:47:50 887  WHEN NO_DATA_FOUND THEN
15:47:50 888  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 889  	  SPROC_NAME, 'No such transaction');
15:47:50 890  WHEN OTHERS THEN
15:47:50 891  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 892  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 893  END GET_TRANSACTION_BY_ID;
15:47:50 894  
15:47:50 895  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
15:47:50 896  /*
15:47:50 897  Throws exceptions:
15:47:50 898  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 899  APP_EXCEPTION_CODES_V22.INTRNAL_ERROR
15:47:50 900  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 901  */
15:47:50 902  	in_transaction_id IN TRANSACTION.ID%TYPE,
15:47:50 903  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
15:47:50 904  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
15:47:50 905  ) AS
15:47:50 906  SPROC_NAME CONSTANT VARCHAR2(27) := 'UPDATE_TRANSACTION_ORDER_ID';
15:47:50 907  -- VARIABLES
15:47:50 908  temp_transaction_id TRANSACTION.ID%TYPE;
15:47:50 909  -- EXCEPTIONS
15:47:50 910  BAD_TRANSACTION_ID   EXCEPTION;
15:47:50 911  ORDER_ID_IS_NOT_NULL EXCEPTION;
15:47:50 912  CRU_UNKNOWN_ERROR    EXCEPTION;
15:47:50 913  EXCEPTION_MESSAGE VARCHAR2(1024);
15:47:50 914  BEGIN
15:47:50 915  	BEGIN
15:47:50 916  	  SELECT
15:47:50 917  	    TRANSACTION.ID into temp_transaction_id
15:47:50 918  	  FROM
15:47:50 919  	    TRANSACTION
15:47:50 920  	  WHERE
15:47:50 921  	    TRANSACTION.ID = in_transaction_id;
15:47:50 922  	  EXCEPTION
15:47:50 923  	    WHEN NO_DATA_FOUND THEN
15:47:50 924  	      RAISE BAD_TRANSACTION_ID;
15:47:50 925  	END;
15:47:50 926  
15:47:50 927  	BEGIN
15:47:50 928  	  PROCS_TRANSACTION_CRU_V22.UPDATE_TRANSACTION_ORDER_ID(
15:47:50 929  	    in_transaction_id => in_transaction_id,
15:47:50 930  	    in_order_id       => in_order_id,
15:47:50 931  	    in_updated_by     => in_updated_by
15:47:50 932  	  );
15:47:50 933  	  EXCEPTION
15:47:50 934  	    WHEN OTHERS THEN
15:47:50 935  	      IF SQLCODE = APP_EXCEPTION_CODES_V22.NOT_FOUND THEN
15:47:50 936  		RAISE ORDER_ID_IS_NOT_NULL;
15:47:50 937  	      ELSE
15:47:50 938  		EXCEPTION_MESSAGE := SQLERRM;
15:47:50 939  		RAISE CRU_UNKNOWN_ERROR;
15:47:50 940  	      END IF;
15:47:50 941  	END;
15:47:50 942  
15:47:50 943  EXCEPTION
15:47:50 944  WHEN BAD_TRANSACTION_ID THEN
15:47:50 945  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 946  	  SPROC_NAME, 'No such transaction');
15:47:50 947  WHEN ORDER_ID_IS_NOT_NULL THEN
15:47:50 948  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:50 949  	  SPROC_NAME, 'Order id is not null');
15:47:50 950  WHEN CRU_UNKNOWN_ERROR THEN
15:47:50 951  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:50 952  	  SPROC_NAME, 'Unknown error while updating order id', EXCEPTION_MESSAGE);
15:47:50 953  WHEN OTHERS THEN
15:47:50 954  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 955  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 956  END UPDATE_TRANSACTION_ORDER_ID;
15:47:50 957  
15:47:50 958  /******************************************************************************/
15:47:50 959  
15:47:50 960  FUNCTION GET_TRANSACTION_TAX_AMOUNT (
15:47:50 961  	in_transaction_id IN NUMBER
15:47:50 962  ) RETURN NUMBER AS
15:47:50 963  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_TRANSACTION_TAX_AMOUNT';
15:47:50 964  -- Variables
15:47:50 965  var_tax_amount NUMBER(10,2);
15:47:50 966  BEGIN
15:47:50 967  
15:47:50 968  	SELECT
15:47:50 969  	  SUM(LI.TAXES_AMOUNT) into var_tax_amount
15:47:50 970  	FROM
15:47:50 971  	  LINE_ITEM LI
15:47:50 972  	  INNER JOIN INVOICE I ON LI.INVOICE_ID = I.ID
15:47:50 973  	  INNER JOIN CHARGE CH ON CH.INVOICE_ID = I.ID
15:47:50 974  	WHERE
15:47:50 975  	  CH.TRANSACTION_ID = in_transaction_id;
15:47:50 976  
15:47:50 977  	IF var_tax_amount IS NULL THEN
15:47:50 978  	  var_tax_amount := 0;
15:47:50 979  	END IF;
15:47:50 980  
15:47:50 981  	RETURN var_tax_amount;
15:47:50 982  
15:47:50 983  END GET_TRANSACTION_TAX_AMOUNT;
15:47:50 984  
15:47:50 985  /******************************************************************************/
15:47:50 986  
15:47:50 987  FUNCTION GET_TRANSACTION_INTRL_TAXES (
15:47:50 988  	in_transaction_id IN NUMBER
15:47:50 989  ) RETURN NUMBER AS
15:47:50 990  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_TRANSACTION_INTRL_TAXES';
15:47:50 991  -- Variables
15:47:50 992  var_intrl_tax_amount NUMBER(10, 2);
15:47:50 993  BEGIN
15:47:50 994  
15:47:50 995  	SELECT SUM(T.CALCULATED_AMOUNT) into var_intrl_tax_amount
15:47:50 996  	FROM
15:47:50 997  	  LINE_ITEM LI
15:47:50 998  	  INNER JOIN INVOICE I ON LI.INVOICE_ID = I.ID
15:47:50 999  	  INNER JOIN CHARGE CH ON CH.INVOICE_ID=  I.ID
15:47:50 1000  	   INNER JOIN TAX T ON T.LINE_ITEM_ID = LI.ID
15:47:50 1001  	 WHERE
15:47:50 1002  	   CH.TRANSACTION_ID = in_transaction_id
15:47:50 1003  	   AND T.TAX_TYPE_ID IN (
15:47:50 1004  	     SELECT GLOBAL_ENUMS_V22.TAX_TYPE_VAT FROM DUAL
15:47:50 1005  	   );
15:47:50 1006  
15:47:50 1007  	 IF var_intrl_tax_amount IS NULL THEN
15:47:50 1008  	   var_intrl_tax_amount := 0;
15:47:50 1009  	 END IF;
15:47:50 1010  
15:47:50 1011  	 RETURN var_intrl_tax_amount;
15:47:50 1012  
15:47:50 1013  END GET_TRANSACTION_INTRL_TAXES;
15:47:50 1014  
15:47:50 1015  /******************************************************************************/
15:47:50 1016  -- norlov: #38796
15:47:50 1017  PROCEDURE GET_TRANSACTIONS (
15:47:50 1018  /*
15:47:50 1019  Throws exceptions:
15:47:50 1020  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 1021  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 1022  */
15:47:50 1023  	 in_group_id	       IN  NUMBER,
15:47:50 1024  	 in_invoice_id	       IN NUMBER DEFAULT NULL,
15:47:50 1025  	 in_subscription_id    IN NUMBER DEFAULT NULL,
15:47:50 1026  	 in_start_date	       IN TRANSACTION.CREATE_DATE%TYPE DEFAULT NULL,
15:47:50 1027  	 in_end_date	       IN TRANSACTION.CREATE_DATE%TYPE DEFAULT NULL,
15:47:50 1028  	 in_transaction_status IN NUMBER DEFAULT NULL,
15:47:50 1029  	 out_result_set        OUT SYS_REFCURSOR
15:47:50 1030  ) AS
15:47:50 1031  SPROC_NAME CONSTANT VARCHAR2(16) := 'GET_TRANSACTIONS';
15:47:50 1032  -- VARIABLES
15:47:50 1033  var_account_id ACCOUNT.ID%TYPE;
15:47:50 1034  statement VARCHAR2(2000);
15:47:50 1035  -- EXCEPTIONS
15:47:50 1036  BAD_GROUP_ID   EXCEPTION;
15:47:50 1037  BEGIN
15:47:50 1038  	-- check group id
15:47:50 1039  	BEGIN
15:47:50 1040  	   SELECT
15:47:50 1041  	     ACCOUNT.ID into var_account_id
15:47:50 1042  	   FROM
15:47:50 1043  	     ACCOUNT
15:47:50 1044  	   WHERE
15:47:50 1045  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:50 1046  	   EXCEPTION
15:47:50 1047  	     WHEN NO_DATA_FOUND THEN
15:47:50 1048  	       RAISE BAD_GROUP_ID;
15:47:50 1049  	 END;
15:47:50 1050  
15:47:50 1051  	 OPEN out_result_set FOR
15:47:50 1052  	 SELECT
15:47:50 1053  	   TRANSACTION.ID,
15:47:50 1054  	   TRANSACTION.TRANSACTION_STATUS_ID,
15:47:50 1055  	   TRANSACTION.TRANSACTION_AMOUNT,
15:47:50 1056  	   TRANSACTION.CREATE_DATE,
15:47:50 1057  	   TRANSACTION.CREATED_BY,
15:47:50 1058  	   TRANSACTION.IS_REFUND,
15:47:50 1059  	   GET_TRANSACTION_TAX_AMOUNT(TRANSACTION.ID) as TRANSACTION_TAX_AMOUNT,
15:47:50 1060  	   GET_TRANSACTION_INTRL_TAXES(TRANSACTION.ID) as INTERNATIONAL_TOTAL
15:47:50 1061  	 FROM
15:47:50 1062  	   TRANSACTION
15:47:50 1063  	   INNER JOIN CHARGE ON TRANSACTION.ID = CHARGE.TRANSACTION_ID
15:47:50 1064  	   INNER JOIN INVOICE ON INVOICE.ID = CHARGE.INVOICE_ID
15:47:50 1065  	 WHERE
15:47:50 1066  	   -- Filter by invoice ID
15:47:50 1067  	   (
15:47:50 1068  	     INVOICE.ID IN (
15:47:50 1069  	       -- Gift certificate invoices
15:47:50 1070  	       SELECT
15:47:50 1071  		 GIFT_CERTIFICATE.PURCHASE_INVOICE_ID
15:47:50 1072  	       FROM
15:47:50 1073  		 GIFT_CERTIFICATE
15:47:50 1074  	       WHERE
15:47:50 1075  		 GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id
15:47:50 1076  		 -- If subscription_id is set then return nothing
15:47:50 1077  		 AND EXISTS (SELECT 1 FROM DUAL WHERE in_subscription_id IS NULL)
15:47:50 1078  	     )
15:47:50 1079  	     OR
15:47:50 1080  	     INVOICE.ID IN (
15:47:50 1081  	       SELECT
15:47:50 1082  		 LICENSE.INVOICE_ID
15:47:50 1083  	       FROM
15:47:50 1084  		 LICENSE
15:47:50 1085  		 INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:50 1086  	       WHERE
15:47:50 1087  		 SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:50 1088  		 -- Filter by subscription id
15:47:50 1089  		 AND SUBSCRIPTION.ID = NVL(in_subscription_id, SUBSCRIPTION.ID)
15:47:50 1090  	     )
15:47:50 1091  	   )
15:47:50 1092  	   -- Filter by invoice id
15:47:50 1093  	   AND INVOICE.ID = NVL(in_invoice_id, INVOICE.ID)
15:47:50 1094  	   -- Filter by start date
15:47:50 1095  	   AND TRANSACTION.CREATE_DATE >= NVL(in_start_date, TRANSACTION.CREATE_DATE)
15:47:50 1096  	   -- Filter by end date
15:47:50 1097  	   AND TRANSACTION.CREATE_DATE <= NVL(in_end_date, TRANSACTION.CREATE_DATE)
15:47:50 1098  	   -- Filter by transaction status
15:47:50 1099  	   AND TRANSACTION.TRANSACTION_STATUS_ID IN ( SELECT NVL(in_transaction_status, TRANSACTION.TRANSACTION_STATUS_ID) FROM DUAL);
15:47:50 1100  
15:47:50 1101  /*
15:47:50 1102  
15:47:50 1103  statement :=  'select distinct '||CHR(10)
15:47:50 1104  || ' TRANSACTION.ID,'||CHR(10)
15:47:50 1105  || ' TRANSACTION.TRANSACTION_STATUS_ID, '||CHR(10)
15:47:50 1106  || ' TRANSACTION.TRANSACTION_AMOUNT, '||CHR(10)
15:47:50 1107  || ' TRANSACTION.CREATE_DATE, '||CHR(10)
15:47:50 1108  || ' TRANSACTION.CREATED_BY, '||CHR(10)
15:47:50 1109  || ' TRANSACTION.IS_REFUND from TRANSACTION '||CHR(10)
15:47:50 1110  || ' inner join CHARGE on (CHARGE.TRANSACTION_ID = TRANSACTION.ID)'||CHR(10)
15:47:50 1111  || ' inner join INVOICE on (INVOICE.ID = CHARGE.INVOICE_ID)'||CHR(10)
15:47:50 1112  || ' inner join LICENSE on (LICENSE.INVOICE_ID = INVOICE.ID)'||CHR(10)
15:47:50 1113  || ' inner join SUBSCRIPTION on (SUBSCRIPTION.ID = LICENSE.SUBSCRIPTION_ID)'||CHR(10)
15:47:50 1114  || ' inner join ACCOUNT on (ACCOUNT.ID = SUBSCRIPTION.ACCOUNT_ID)'||CHR(10)
15:47:50 1115  || ' where ACCOUNT.GROUP_ID = '||in_group_id;
15:47:50 1116  
15:47:50 1117  IF (in_transaction_status IS NOT NULL) THEN
15:47:50 1118  	 statement := statement || CHR(10) || 'AND TRANSACTION.TRANSACTION_STATUS_ID=' || in_transaction_status;
15:47:50 1119  END IF;
15:47:50 1120  
15:47:50 1121  IF (in_invoice_id IS NOT NULL) THEN
15:47:50 1122  	 statement := statement || CHR(10) || 'AND INVOICE.ID=' || in_invoice_id;
15:47:50 1123  END IF;
15:47:50 1124  
15:47:50 1125  IF (in_subscription_id IS NOT NULL) THEN
15:47:50 1126  	 statement := statement || CHR(10) || 'AND SUBSCRIPTION.ID=' || in_subscription_id;
15:47:50 1127  END IF;
15:47:50 1128  
15:47:50 1129  IF (in_start_date IS NOT NULL) THEN
15:47:50 1130  	 statement := statement || CHR(10) || 'AND TRANSACTION.CREATE_DATE>= TO_DATE(''' || TO_CHAR(in_start_date,'yyyy/mm/dd:hh:mi:ss') || ''',''yyyy/mm/dd:hh:mi:ss'')';  -- norlov: ??
15:47:50 1131  END IF;
15:47:50 1132  
15:47:50 1133  IF (in_end_date IS NOT NULL) THEN
15:47:50 1134  	 statement := statement || CHR(10) || 'AND TRANSACTION.CREATE_DATE<= TO_DATE(''' || TO_CHAR(in_end_date,'yyyy/mm/dd:hh:mi:ss') || ''',''yyyy/mm/dd:hh:mi:ss'')'; -- norlov: ??
15:47:50 1135  END IF;
15:47:50 1136  dbms_output.put_line(statement);
15:47:50 1137  OPEN out_result_set FOR statement;
15:47:50 1138  
15:47:50 1139  */
15:47:50 1140  
15:47:50 1141  EXCEPTION
15:47:50 1142  WHEN BAD_GROUP_ID THEN
15:47:50 1143  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1144  	   SPROC_NAME, 'No such group');
15:47:50 1145  WHEN OTHERS THEN
15:47:50 1146  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1147  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1148  END GET_TRANSACTIONS;
15:47:50 1149  
15:47:50 1150  FUNCTION IS_TRANSACTION_COLLECTED (
15:47:50 1151  /*
15:47:50 1152  Throws:
15:47:50 1153  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 1154  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 1155  Returns:
15:47:50 1156  GLOBAL_CONST.TRUE if transaction collected,
15:47:50 1157  GLOBAL_CONST.FALSE else
15:47:50 1158  */
15:47:50 1159  	 in_transaction_id IN NUMBER
15:47:50 1160  ) RETURN NUMBER AS
15:47:50 1161  SPROC_NAME CONSTANT VARCHAR2(24) := 'IS_TRANSACTION_COLLECTED';
15:47:50 1162  -- VARIABLES
15:47:50 1163  temp_transaction_id     NUMBER;
15:47:50 1164  var_success_attemps_num NUMBER;
15:47:50 1165  -- EXCEPTIONS
15:47:50 1166  BAD_TRANSACTION_ID EXCEPTION;
15:47:50 1167  BEGIN
15:47:50 1168  
15:47:50 1169  	 BEGIN
15:47:50 1170  	   SELECT
15:47:50 1171  	     TRANSACTION.ID into temp_transaction_id
15:47:50 1172  	   FROM
15:47:50 1173  	     TRANSACTION
15:47:50 1174  	   WHERE
15:47:50 1175  	     TRANSACTION.ID = in_transaction_id;
15:47:50 1176  	   EXCEPTION
15:47:50 1177  	     WHEN NO_DATA_FOUND THEN
15:47:50 1178  	       RAISE BAD_TRANSACTION_ID;
15:47:50 1179  	 END;
15:47:50 1180  
15:47:50 1181  	 SELECT
15:47:50 1182  	   COUNT(*) into var_success_attemps_num
15:47:50 1183  	 FROM
15:47:50 1184  	   TRANSACTION_ATTEMPT
15:47:50 1185  	 WHERE
15:47:50 1186  	   TRANSACTION_ATTEMPT.TRANSACTION_ID = in_transaction_id
15:47:50 1187  	   AND TRANSACTION_ATTEMPT.TRANSACTION_ATTEMPT_STATUS_ID IN ( SELECT GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS FROM DUAL );
15:47:50 1188  
15:47:50 1189  	 IF var_success_attemps_num > 0 THEN
15:47:50 1190  	   RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:50 1191  	 ELSE
15:47:50 1192  	   RETURN GLOBAL_CONSTANTS_V22.FALSE;
15:47:50 1193  	 END IF;
15:47:50 1194  
15:47:50 1195  EXCEPTION
15:47:50 1196  WHEN BAD_TRANSACTION_ID THEN
15:47:50 1197  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1198  	   SPROC_NAME, 'No such transaction');
15:47:50 1199  WHEN OTHERS THEN
15:47:50 1200  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1201  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1202  END IS_TRANSACTION_COLLECTED;
15:47:50 1203  
15:47:50 1204  
15:47:50 1205  /******************************************************************************/
15:47:50 1206  PROCEDURE GET_NEXT_ATTEMPT_NUMBER (
15:47:50 1207  /*
15:47:50 1208  Throws exceptions:
15:47:50 1209  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 1210  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 1211  */
15:47:50 1212  	 in_charge_id	in  number,
15:47:50 1213  	 out_attempt_count OUT NUMBER
15:47:50 1214  ) AS
15:47:50 1215  -- VARIABLES
15:47:50 1216  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_NEXT_ATTEMPT_NUMBER';
15:47:50 1217  temp_transaction_id NUMBER;
15:47:50 1218  -- EXCEPTIONS
15:47:50 1219  BAD_CHARGE_ID EXCEPTION;
15:47:50 1220  BEGIN
15:47:50 1221  
15:47:50 1222  	 BEGIN
15:47:50 1223  	   SELECT
15:47:50 1224  	     TRANSACTION_ID into temp_transaction_id
15:47:50 1225  	   FROM
15:47:50 1226  	     CHARGE
15:47:50 1227  	   WHERE
15:47:50 1228  	     CHARGE.ID = in_charge_id;
15:47:50 1229  	   EXCEPTION
15:47:50 1230  	     WHEN NO_DATA_FOUND THEN
15:47:50 1231  	       RAISE BAD_CHARGE_ID;
15:47:50 1232  	 END;
15:47:50 1233  
15:47:50 1234  	 select
15:47:50 1235  	   count(1)
15:47:50 1236  	 into
15:47:50 1237  	   out_attempt_count
15:47:50 1238  	 from
15:47:50 1239  	   transaction tr
15:47:50 1240  	 inner join
15:47:50 1241  	   transaction_attempt ta
15:47:50 1242  	 on (tr.id = ta.transaction_id)
15:47:50 1243  	 where
15:47:50 1244  	   tr.ID = temp_transaction_id;
15:47:50 1245  
15:47:50 1246  	 out_attempt_count := out_attempt_count + 1;
15:47:50 1247  
15:47:50 1248  EXCEPTION
15:47:50 1249  WHEN BAD_CHARGE_ID THEN
15:47:50 1250  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 1251  	   SPROC_NAME, 'No such charge');
15:47:50 1252  WHEN OTHERS THEN
15:47:50 1253  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 1254  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 1255  end GET_NEXT_ATTEMPT_NUMBER;
15:47:50 1256  /******************************************************************************/
15:47:50 1257  
15:47:50 1258  END PROCS_TRANSACTION_V22;
15:47:50 1259  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:00.10
15:47:50 SQL> 
15:47:50 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LICENSE_V22" AS
15:47:50   2  
15:47:50   3  PROCEDURE CREATE_LICENSE(
15:47:50   4  /*
15:47:50   5  Throws exceptions:
15:47:50   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50   8  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:50   9  */
15:47:50  10  	in_status_id		    IN NUMBER,
15:47:50  11  	in_needs_entitlements	    IN NUMBER,
15:47:50  12  	in_start_date		    IN DATE,
15:47:50  13  	in_end_date		    IN DATE,
15:47:50  14  	in_offer_id		    IN NUMBER,
15:47:50  15  	in_subscription_id	    IN NUMBER,
15:47:50  16  	in_invoice_id		    IN NUMBER,
15:47:50  17  	in_created_by		    IN VARCHAR2,
15:47:50  18  	in_is_extension 	    IN NUMBER,
15:47:50  19  	in_current_offer_index	    IN NUMBER,
15:47:50  20  	in_current_offer_recurr_num IN NUMBER,
15:47:50  21  	out_license_id		    OUT NUMBER
15:47:50  22  ) AS
15:47:50  23  -- VARIABLES
15:47:50  24  SPROC_NAME	   CONSTANT VARCHAR2(14) := 'CREATE_LICENSE';
15:47:50  25  temp_offer_id	   NUMBER;
15:47:50  26  temp_subscription_id NUMBER;
15:47:50  27  temp_invoice_id	   NUMBER;
15:47:50  28  
15:47:50  29  var_new_license_id NUMBER;
15:47:50  30  var_offer_duration VARCHAR2(30);
15:47:50  31  
15:47:50  32  var_offer_ym_interval INTERVAL YEAR TO MONTH;
15:47:50  33  var_offer_ds_interval INTERVAL DAY(3) TO SECOND;
15:47:50  34  var_offer_years	    NUMBER;
15:47:50  35  var_offer_months	    NUMBER;
15:47:50  36  var_offer_days	    NUMBER;
15:47:50  37  
15:47:50  38  -- EXCEPTIONS
15:47:50  39  BAD_OFFER_ID	     EXCEPTION;
15:47:50  40  BAD_SUBSCRIPTION_ID    EXCEPTION;
15:47:50  41  BAD_INVOICE_ID	     EXCEPTION;
15:47:50  42  BAD_OFFER_DURATION     EXCEPTION;
15:47:50  43  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:50  44  BEGIN
15:47:50  45  
15:47:50  46  	-- TODO:
15:47:50  47  	---- check incoming data: in_current_offer_index, in_current_offer_recurr_num, in_is_extension
15:47:50  48  
15:47:50  49  	out_license_id := NULL;
15:47:50  50  
15:47:50  51  	-- get offer id and offer entitlement duration
15:47:50  52  	BEGIN
15:47:50  53  	  SELECT
15:47:50  54  	    OFFER.ID,
15:47:50  55  	    OFFER.ENTITLEMENT_DURATION
15:47:50  56  	    into
15:47:50  57  	    temp_offer_id,
15:47:50  58  	    var_offer_duration
15:47:50  59  	  FROM
15:47:50  60  	    OFFER
15:47:50  61  	  WHERE
15:47:50  62  	    OFFER.ID = in_offer_id;
15:47:50  63  	  EXCEPTION
15:47:50  64  	  WHEN NO_DATA_FOUND THEN
15:47:50  65  	    RAISE BAD_OFFER_ID;
15:47:50  66  	END;
15:47:50  67  
15:47:50  68  	-- Check that subscription exists
15:47:50  69  	BEGIN
15:47:50  70  	  SELECT
15:47:50  71  	    SUBSCRIPTION.ID into temp_subscription_id
15:47:50  72  	  FROM
15:47:50  73  	    SUBSCRIPTION
15:47:50  74  	  WHERE
15:47:50  75  	    SUBSCRIPTION.ID = in_subscription_id;
15:47:50  76  	  EXCEPTION
15:47:50  77  	  WHEN NO_DATA_FOUND THEN
15:47:50  78  	    RAISE BAD_SUBSCRIPTION_ID;
15:47:50  79  	END;
15:47:50  80  
15:47:50  81  	-- Check that invoice exists
15:47:50  82  	BEGIN
15:47:50  83  	  SELECT
15:47:50  84  	    INVOICE.ID into temp_invoice_id
15:47:50  85  	  FROM
15:47:50  86  	    INVOICE
15:47:50  87  	  WHERE
15:47:50  88  	    INVOICE.ID = in_invoice_id;
15:47:50  89  	  EXCEPTION
15:47:50  90  	  WHEN NO_DATA_FOUND THEN
15:47:50  91  	    RAISE BAD_INVOICE_ID;
15:47:50  92  	END;
15:47:50  93  
15:47:50  94  	-- convert offer duration into intervals
15:47:50  95  	BEGIN
15:47:50  96  	  PROCS_COMMON_V22.ISO8601DURATION_TO_INTERVALS(
15:47:50  97  	    var_offer_duration,
15:47:50  98  	    var_offer_years,
15:47:50  99  	    var_offer_months,
15:47:50 100  	    var_offer_days);
15:47:50 101  	  var_offer_ym_interval := var_offer_years||'-'||var_offer_months;
15:47:50 102  	  var_offer_ds_interval := var_offer_days||' 0:0:0';
15:47:50 103  	  EXCEPTION
15:47:50 104  	    WHEN OTHERS THEN
15:47:50 105  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:50 106  	      RAISE BAD_OFFER_DURATION;
15:47:50 107  	END;
15:47:50 108  
15:47:50 109  	-- insert new row into license table
15:47:50 110  	PROCS_LICENSE_CRU_V22.CREATE_LICENSE(
15:47:50 111  	  out_license_id	      => var_new_license_id,
15:47:50 112  	  in_license_status_id	      => in_status_id,
15:47:50 113  	  in_needs_entitlements       => in_needs_entitlements,
15:47:50 114  	  in_start_date 	      => in_start_date,
15:47:50 115  	  in_offer_id		      => in_offer_id,
15:47:50 116  	  in_subscription_id	      => in_subscription_id,
15:47:50 117  	  in_invoice_id 	      => in_invoice_id,
15:47:50 118  	  in_end_date		      => NVL(in_end_date, in_start_date + var_offer_ym_interval + var_offer_ds_interval),
15:47:50 119  	  in_created_by 	      => in_created_by,
15:47:50 120  	  in_is_extension	      => in_is_extension,
15:47:50 121  	  in_current_offer_index      => in_current_offer_index,
15:47:50 122  	  in_current_offer_recurr_num => in_current_offer_recurr_num
15:47:50 123  	);
15:47:50 124  
15:47:50 125  	out_license_id := var_new_license_id;
15:47:50 126  
15:47:50 127  EXCEPTION
15:47:50 128  WHEN BAD_OFFER_DURATION THEN
15:47:50 129  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:50 130  	  SPROC_NAME, 'Bad offer duration format', EXCEPTION_MESSAGE);
15:47:50 131  WHEN BAD_OFFER_ID THEN
15:47:50 132  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 133  	  SPROC_NAME, 'No such offer');
15:47:50 134  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:50 135  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 136  	  SPROC_NAME, 'No such subscription');
15:47:50 137  WHEN BAD_INVOICE_ID THEN
15:47:50 138  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 139  	  SPROC_NAME, 'No such invoice');
15:47:50 140  WHEN OTHERS THEN
15:47:50 141  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 142  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 143  END;
15:47:50 144  
15:47:50 145  /******************************************************************************/
15:47:50 146  
15:47:50 147  PROCEDURE UPDATE_LICENSE_STATUS(
15:47:50 148  	  in_license_id     IN NUMBER,
15:47:50 149  	  in_license_status IN NUMBER,
15:47:50 150  	  in_updated_by     IN VARCHAR2,
15:47:50 151  	  in_ent_end	    IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE
15:47:50 152  ) AS
15:47:50 153  SPROC_NAME CONSTANT VARCHAR2(21) := 'UPDATE_LICENSE_STATUS';
15:47:50 154  -- VARIABLES
15:47:50 155  temp_license_id NUMBER;
15:47:50 156  -- EXCEPTIONS
15:47:50 157  BAD_LICENSE_ID	     EXCEPTION;
15:47:50 158  BAD_LICENSE_STATUS     EXCEPTION;
15:47:50 159  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:50 160  BEGIN
15:47:50 161  
15:47:50 162  	BEGIN
15:47:50 163  	  SELECT
15:47:50 164  	    ID into temp_license_id
15:47:50 165  	  FROM
15:47:50 166  	    LICENSE
15:47:50 167  	  WHERE
15:47:50 168  	    LICENSE.ID = in_license_id;
15:47:50 169  	  EXCEPTION
15:47:50 170  	    WHEN NO_DATA_FOUND THEN
15:47:50 171  	      RAISE BAD_LICENSE_ID;
15:47:50 172  	END;
15:47:50 173  
15:47:50 174  	IF in_license_status != GLOBAL_STATUSES_V22.LICENSE_CLOSED
15:47:50 175  	   AND in_license_status != GLOBAL_STATUSES_V22.LICENSE_ACTIVE
15:47:50 176  	   AND in_license_status != GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD THEN
15:47:50 177  	  RAISE BAD_LICENSE_STATUS;
15:47:50 178  	END IF;
15:47:50 179  
15:47:50 180  	IF (in_ent_end is not null and in_ent_end = GLOBAL_CONSTANTS_V22.TRUE) then
15:47:50 181  	  PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:50 182  	    in_license_id	 => in_license_id,
15:47:50 183  	    in_updated_by	 => in_updated_by,
15:47:50 184  	    in_license_status_id => in_license_status,
15:47:50 185  	    in_entitlement_end_date	 => sysdate
15:47:50 186  	  );
15:47:50 187  	ELSE
15:47:50 188  	  PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:50 189  	    in_license_id	 => in_license_id,
15:47:50 190  	    in_updated_by	 => in_updated_by,
15:47:50 191  	    in_license_status_id => in_license_status
15:47:50 192  	  );
15:47:50 193  	END IF;
15:47:50 194  
15:47:50 195  EXCEPTION
15:47:50 196  WHEN BAD_LICENSE_STATUS THEN
15:47:50 197  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:50 198  	  SPROC_NAME, 'Bad status id');
15:47:50 199  WHEN BAD_LICENSE_ID THEN
15:47:50 200  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 201  	  SPROC_NAME, 'No such license');
15:47:50 202  WHEN OTHERS THEN
15:47:50 203  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 204  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 205  END UPDATE_LICENSE_STATUS;
15:47:50 206  
15:47:50 207  /******************************************************************************/
15:47:50 208  
15:47:50 209  PROCEDURE GET_ENDING_LICENSES (
15:47:50 210  	in_hours_number IN NUMBER,
15:47:50 211  	out_result_set	OUT SYS_REFCURSOR
15:47:50 212  ) AS
15:47:50 213  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDING_LICENSES';
15:47:50 214  -- VARIABLES
15:47:50 215  var_days		NUMBER;
15:47:50 216  var_hours 	NUMBER;
15:47:50 217  var_time_interval INTERVAL DAY (3) TO SECOND;
15:47:50 218  BEGIN
15:47:50 219  
15:47:50 220  	var_hours := mod(in_hours_number,24);
15:47:50 221  	var_days := (in_hours_number - var_hours) / 24;
15:47:50 222  	var_time_interval := var_days||' '||var_hours||':0:0';
15:47:50 223  
15:47:50 224  	OPEN out_result_set FOR
15:47:50 225  SELECT * FROM
15:47:50 226  (
15:47:50 227  	SELECT
15:47:50 228  	  LICENSE.ID,
15:47:50 229  	  LICENSE.CREATE_DATE,
15:47:50 230  	  LICENSE.CREATED_BY,
15:47:50 231  	  LICENSE.CURRENT_OFFER_INDEX,
15:47:50 232  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
15:47:50 233  	  LICENSE.END_DATE,
15:47:50 234  	  LICENSE.ENTITLEMENT_END_DATE,
15:47:50 235  	  LICENSE.INVOICE_ID,
15:47:50 236  	  LICENSE.IS_EXTENSION,
15:47:50 237  	  LICENSE.LICENSE_STATUS_ID,
15:47:50 238  	  LICENSE.OFFER_ID,
15:47:50 239  	  LICENSE.START_DATE,
15:47:50 240  	  LICENSE.SUBSCRIPTION_ID,
15:47:50 241  	  LICENSE.UPDATE_DATE,
15:47:50 242  	  LICENSE.UPDATED_BY
15:47:50 243  	FROM
15:47:50 244  	  LICENSE
15:47:50 245  	WHERE
15:47:50 246  	  TO_DATE(LICENSE.END_DATE) <= (current_timestamp + var_time_interval)
15:47:50 247  	  AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
15:47:50 248  	  AND NOT EXISTS
15:47:50 249  	  (
15:47:50 250  	    SELECT NULL
15:47:50 251  	    FROM PROCESS_RETRY_THROTTLE
15:47:50 252  	    WHERE PROCESS_NAME = SPROC_NAME
15:47:50 253  	      AND GENERIC_ID = LICENSE.ID
15:47:50 254  	  )
15:47:50 255  	  AND ROWNUM <= 40000
15:47:50 256  	  ORDER BY dbms_random.value
15:47:50 257  ) WHERE
15:47:50 258  	  ROWNUM <= 4000;
15:47:50 259  EXCEPTION
15:47:50 260  WHEN OTHERS THEN
15:47:50 261  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 262  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 263  END GET_ENDING_LICENSES;
15:47:50 264  
15:47:50 265  
15:47:50 266  /******************************************************************************/
15:47:50 267  
15:47:50 268  PROCEDURE GET_ENDING_LICENSES_CC (
15:47:50 269  	in_hours_number IN NUMBER,
15:47:50 270  	out_result_set	OUT SYS_REFCURSOR,
15:47:50 271  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:50 272  ) AS
15:47:50 273  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDING_LICENSES_CC';
15:47:50 274  -- VARIABLES
15:47:50 275  var_days		NUMBER;
15:47:50 276  var_hours 	NUMBER;
15:47:50 277  var_time_interval INTERVAL DAY (3) TO SECOND;
15:47:50 278  BEGIN
15:47:50 279  
15:47:50 280  	var_hours := mod(in_hours_number,24);
15:47:50 281  	var_days := (in_hours_number - var_hours) / 24;
15:47:50 282  	var_time_interval := var_days||' '||var_hours||':0:0';
15:47:50 283  
15:47:50 284  	OPEN out_result_set FOR
15:47:50 285  SELECT * FROM
15:47:50 286  (
15:47:50 287  	SELECT
15:47:50 288  	  LICENSE.ID,
15:47:50 289  	  LICENSE.CREATE_DATE,
15:47:50 290  	  LICENSE.CREATED_BY,
15:47:50 291  	  LICENSE.CURRENT_OFFER_INDEX,
15:47:50 292  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
15:47:50 293  	  LICENSE.END_DATE,
15:47:50 294  	  LICENSE.ENTITLEMENT_END_DATE,
15:47:50 295  	  LICENSE.INVOICE_ID,
15:47:50 296  	  LICENSE.IS_EXTENSION,
15:47:50 297  	  LICENSE.LICENSE_STATUS_ID,
15:47:50 298  	  LICENSE.OFFER_ID,
15:47:50 299  	  LICENSE.START_DATE,
15:47:50 300  	  LICENSE.SUBSCRIPTION_ID,
15:47:50 301  	  LICENSE.UPDATE_DATE,
15:47:50 302  	  LICENSE.UPDATED_BY
15:47:50 303  	FROM
15:47:50 304  	  LICENSE
15:47:50 305  	WHERE
15:47:50 306  	  TO_DATE(LICENSE.END_DATE) <= (current_timestamp + var_time_interval)
15:47:50 307  	  AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
15:47:50 308  	  AND NOT EXISTS
15:47:50 309  	  (
15:47:50 310  	    SELECT NULL
15:47:50 311  	    FROM PROCESS_RETRY_THROTTLE
15:47:50 312  	    WHERE PROCESS_NAME = in_process_name
15:47:50 313  	      AND GENERIC_ID = LICENSE.INVOICE_ID
15:47:50 314  	  )
15:47:50 315  	  AND ROWNUM <= 10000
15:47:50 316  	  ORDER BY dbms_random.value
15:47:50 317  ) WHERE
15:47:50 318  	  ROWNUM <= 1000
15:47:50 319  	  ;
15:47:50 320  EXCEPTION
15:47:50 321  WHEN OTHERS THEN
15:47:50 322  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 323  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 324  END GET_ENDING_LICENSES_CC;
15:47:50 325  
15:47:50 326  /******************************************************************************/
15:47:50 327  
15:47:50 328  PROCEDURE GET_RECURRING_OFFER (
15:47:50 329  	in_license_id  IN NUMBER,
15:47:50 330  	out_result_set OUT SYS_REFCURSOR
15:47:50 331  ) AS
15:47:50 332  -- VARIABLES
15:47:50 333  SPROC_NAME		    CONSTANT VARCHAR2(19) := 'GET_RECURRING_OFFER';
15:47:50 334  var_offer_chain_id	    NUMBER;
15:47:50 335  var_offer_id		    NUMBER;
15:47:50 336  var_offer_num_recurrences     NUMBER;
15:47:50 337  var_license_cur_offer_rec_num NUMBER;
15:47:50 338  var_offer_index		    NUMBER;
15:47:50 339  -- EXCEPTIONS
15:47:50 340  BAD_LICENSE_ID	     EXCEPTION;
15:47:50 341  CAN_NOT_GET_OFFER_INFO EXCEPTION;
15:47:50 342  BEGIN
15:47:50 343  
15:47:50 344  	BEGIN
15:47:50 345  	  SELECT
15:47:50 346  	    SUBSCRIPTION.OFFER_CHAIN_ID,
15:47:50 347  	    LICENSE.OFFER_ID,
15:47:50 348  	    LICENSE.CURRENT_OFFER_RECURR_NUM
15:47:50 349  	    into
15:47:50 350  	    var_offer_chain_id,
15:47:50 351  	    var_offer_id,
15:47:50 352  	    var_license_cur_offer_rec_num
15:47:50 353  	  FROM
15:47:50 354  	    LICENSE
15:47:50 355  	    INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:50 356  	  WHERE
15:47:50 357  	    LICENSE.ID = in_license_id;
15:47:50 358  	  EXCEPTION
15:47:50 359  	    WHEN NO_DATA_FOUND THEN
15:47:50 360  	      RAISE BAD_LICENSE_ID;
15:47:50 361  	END;
15:47:50 362  
15:47:50 363  	BEGIN
15:47:50 364  	  SELECT
15:47:50 365  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES,
15:47:50 366  	    OFFER_OFFER_CHAIN.INDEX_VALUE
15:47:50 367  	    into
15:47:50 368  	    var_offer_num_recurrences,
15:47:50 369  	    var_offer_index
15:47:50 370  	  FROM
15:47:50 371  	    OFFER_OFFER_CHAIN
15:47:50 372  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
15:47:50 373  	  WHERE
15:47:50 374  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
15:47:50 375  	    AND OFFER_OFFER_CHAIN.OFFER_ID = var_offer_id;
15:47:50 376  	  EXCEPTION
15:47:50 377  	    WHEN NO_DATA_FOUND THEN
15:47:50 378  	      RAISE CAN_NOT_GET_OFFER_INFO;
15:47:50 379  	END;
15:47:50 380  
15:47:50 381  	IF var_offer_num_recurrences = 0 THEN
15:47:50 382  	  --out_result_set := NULL;
15:47:50 383  	  -- TODO: Remove this hardcode
15:47:50 384  	  OPEN out_result_set FOR
15:47:50 385  	  SELECT
15:47:50 386  	    OFFER.ID,
15:47:50 387  	    OFFER.OFFER_STATUS_ID,
15:47:50 388  	    OFFER.ENTITLEMENT_DURATION,
15:47:50 389  	    OFFER.CREATED_BY,
15:47:50 390  	    OFFER.CREATE_DATE,
15:47:50 391  	    OFFER.UPDATED_BY,
15:47:50 392  	    OFFER.UPDATE_DATE,
15:47:50 393  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
15:47:50 394  	    var_offer_index as "OFFER_INDEX"
15:47:50 395  	  FROM
15:47:50 396  	    OFFER_OFFER_CHAIN
15:47:50 397  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
15:47:50 398  	  WHERE ROWNUM = 0;
15:47:50 399  	ELSIF var_license_cur_offer_rec_num = var_offer_num_recurrences THEN
15:47:50 400  	  --out_result_set := NULL;
15:47:50 401  	  -- TODO: Remove this hardcode
15:47:50 402  	  OPEN out_result_set FOR
15:47:50 403  	  SELECT
15:47:50 404  	    OFFER.ID,
15:47:50 405  	    OFFER.OFFER_STATUS_ID,
15:47:50 406  	    OFFER.ENTITLEMENT_DURATION,
15:47:50 407  	    OFFER.CREATED_BY,
15:47:50 408  	    OFFER.CREATE_DATE,
15:47:50 409  	    OFFER.UPDATED_BY,
15:47:50 410  	    OFFER.UPDATE_DATE,
15:47:50 411  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
15:47:50 412  	    var_offer_index as "OFFER_INDEX"
15:47:50 413  	  FROM
15:47:50 414  	    OFFER_OFFER_CHAIN
15:47:50 415  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
15:47:50 416  	  WHERE ROWNUM = 0;
15:47:50 417  	ELSE
15:47:50 418  	  OPEN out_result_set FOR
15:47:50 419  	  SELECT
15:47:50 420  	    OFFER.ID,
15:47:50 421  	    OFFER.OFFER_STATUS_ID,
15:47:50 422  	    OFFER.ENTITLEMENT_DURATION,
15:47:50 423  	    OFFER.CREATED_BY,
15:47:50 424  	    OFFER.CREATE_DATE,
15:47:50 425  	    OFFER.UPDATED_BY,
15:47:50 426  	    OFFER.UPDATE_DATE,
15:47:50 427  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
15:47:50 428  	    var_offer_index as "OFFER_INDEX"
15:47:50 429  	  FROM
15:47:50 430  	    OFFER
15:47:50 431  	  WHERE
15:47:50 432  	    OFFER.ID = var_offer_id;
15:47:50 433  	END IF;
15:47:50 434  
15:47:50 435  EXCEPTION
15:47:50 436  WHEN BAD_LICENSE_ID THEN
15:47:50 437  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 438  	  SPROC_NAME, 'No such license');
15:47:50 439  WHEN CAN_NOT_GET_OFFER_INFO THEN
15:47:50 440  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 441  	  SPROC_NAME, 'Could not get offer information. Offer id = '||var_offer_id||', Offer chain id = '||var_offer_chain_id);
15:47:50 442  WHEN OTHERS THEN
15:47:50 443  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 444  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 445  END GET_RECURRING_OFFER;
15:47:50 446  
15:47:50 447  /******************************************************************************/
15:47:50 448  
15:47:50 449  PROCEDURE GET_NEXT_OFFER (
15:47:50 450  /*
15:47:50 451  Throws exceptions:
15:47:50 452  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:50 453  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:50 454  */
15:47:50 455  	in_license_id  IN NUMBER,
15:47:50 456  	out_result_set OUT SYS_REFCURSOR
15:47:50 457  ) AS
15:47:50 458  -- VARIABLES
15:47:50 459  SPROC_NAME		CONSTANT VARCHAR2(14) := 'GET_NEXT_OFFER';
15:47:50 460  var_offer_chain_id	NUMBER;
15:47:50 461  var_offer_id		NUMBER;
15:47:50 462  var_license_current_index NUMBER;
15:47:50 463  var_next_offer_index	NUMBER;
15:47:50 464  -- EXCEPTIONS
15:47:50 465  BAD_LICENSE_ID	      EXCEPTION;
15:47:50 466  CAN_NOT_FIND_NEXT_OFFER EXCEPTION;
15:47:50 467  EXCEPTION_MESSAGE       VARCHAR2(1024);
15:47:50 468  BEGIN
15:47:50 469  
15:47:50 470  	BEGIN
15:47:50 471  	  SELECT
15:47:50 472  	    SUBSCRIPTION.OFFER_CHAIN_ID,
15:47:50 473  	    LICENSE.OFFER_ID,
15:47:50 474  	    LICENSE.CURRENT_OFFER_INDEX
15:47:50 475  	    into
15:47:50 476  	    var_offer_chain_id,
15:47:50 477  	    var_offer_id,
15:47:50 478  	    var_license_current_index
15:47:50 479  	  FROM
15:47:50 480  	    LICENSE
15:47:50 481  	    INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:50 482  	  WHERE
15:47:50 483  	    LICENSE.ID = in_license_id;
15:47:50 484  	  EXCEPTION
15:47:50 485  	    WHEN NO_DATA_FOUND THEN
15:47:50 486  	      RAISE BAD_LICENSE_ID;
15:47:50 487  	END;
15:47:50 488  
15:47:50 489  	BEGIN
15:47:50 490  	  var_next_offer_index := PROCS_OFFER_CHAIN_V22.GET_NEXT_OFFER_INDEX(
15:47:50 491  	    var_offer_chain_id,
15:47:50 492  	    var_license_current_index
15:47:50 493  	  );
15:47:50 494  	  EXCEPTION
15:47:50 495  	    WHEN OTHERS THEN
15:47:50 496  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:50 497  	      RAISE CAN_NOT_FIND_NEXT_OFFER;
15:47:50 498  	END;
15:47:50 499  
15:47:50 500  	IF var_next_offer_index IS NULL THEN
15:47:50 501  	  -- RETURN NULL;
15:47:50 502  	  -- TODO: Remove this hardcode
15:47:50 503  	  OPEN out_result_set FOR
15:47:50 504  	  SELECT
15:47:50 505  	    OFFER.ID,
15:47:50 506  	    OFFER.OFFER_STATUS_ID,
15:47:50 507  	    OFFER.ENTITLEMENT_DURATION,
15:47:50 508  	    OFFER.CREATED_BY,
15:47:50 509  	    OFFER.CREATE_DATE,
15:47:50 510  	    OFFER.UPDATED_BY,
15:47:50 511  	    OFFER.UPDATE_DATE,
15:47:50 512  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES as "RECURRENCE_NUMBER"
15:47:50 513  	  FROM
15:47:50 514  	    OFFER_OFFER_CHAIN
15:47:50 515  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
15:47:50 516  	  WHERE
15:47:50 517  	    1=2;
15:47:50 518  	ELSE
15:47:50 519  	  OPEN out_result_set FOR
15:47:50 520  	  SELECT
15:47:50 521  	    OFFER.ID,
15:47:50 522  	    OFFER.OFFER_STATUS_ID,
15:47:50 523  	    OFFER.ENTITLEMENT_DURATION,
15:47:50 524  	    OFFER.CREATED_BY,
15:47:50 525  	    OFFER.CREATE_DATE,
15:47:50 526  	    OFFER.UPDATED_BY,
15:47:50 527  	    OFFER.UPDATE_DATE,
15:47:50 528  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES as "RECURRENCE_NUMBER"
15:47:50 529  	  FROM
15:47:50 530  	    OFFER_OFFER_CHAIN
15:47:50 531  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
15:47:50 532  	  WHERE
15:47:50 533  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
15:47:50 534  	    AND OFFER_OFFER_CHAIN.INDEX_VALUE = var_next_offer_index;
15:47:50 535  	END IF;
15:47:50 536  
15:47:50 537  EXCEPTION
15:47:50 538  WHEN BAD_LICENSE_ID THEN
15:47:50 539  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 540  	  SPROC_NAME, 'No such license');
15:47:50 541  WHEN CAN_NOT_FIND_NEXT_OFFER THEN
15:47:50 542  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:50 543  	  SPROC_NAME, 'Could not find next offer', EXCEPTION_MESSAGE);
15:47:50 544  WHEN OTHERS THEN
15:47:50 545  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 546  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 547  END GET_NEXT_OFFER;
15:47:50 548  
15:47:50 549  /******************************************************************************/
15:47:50 550  
15:47:50 551  PROCEDURE GET_GROUP_ID_BY_LICENSE_ID (
15:47:50 552  	in_license_id IN NUMBER,
15:47:50 553  	out_group_id  OUT NUMBER
15:47:50 554  ) AS
15:47:50 555  -- VARIABLES
15:47:50 556  SPROC_NAME	  CONSTANT VARCHAR2(26) := 'GET_GROUP_ID_BY_LICENSE_ID';
15:47:50 557  var_subscription_id NUMBER;
15:47:50 558  var_group_id	  NUMBER;
15:47:50 559  -- EXCEPTIONS
15:47:50 560  BAD_LICENSE_ID	   EXCEPTION;
15:47:50 561  CAN_NOT_GET_GROUP_ID EXCEPTION;
15:47:50 562  BEGIN
15:47:50 563  
15:47:50 564  	-- Get subscription id
15:47:50 565  	BEGIN
15:47:50 566  	  SELECT
15:47:50 567  	    LICENSE.SUBSCRIPTION_ID into var_subscription_id
15:47:50 568  	  FROM
15:47:50 569  	    LICENSE
15:47:50 570  	  WHERE
15:47:50 571  	    LICENSE.ID = in_license_id;
15:47:50 572  	  EXCEPTION
15:47:50 573  	    WHEN NO_DATA_FOUND THEN
15:47:50 574  	      RAISE BAD_LICENSE_ID;
15:47:50 575  	END;
15:47:50 576  
15:47:50 577  	-- Get group id
15:47:50 578  	BEGIN
15:47:50 579  	  SELECT
15:47:50 580  	    ACCOUNT.GROUP_ID into var_group_id
15:47:50 581  	  FROM
15:47:50 582  	    SUBSCRIPTION
15:47:50 583  	    INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
15:47:50 584  	  WHERE
15:47:50 585  	    SUBSCRIPTION.ID = var_subscription_id;
15:47:50 586  	  EXCEPTION
15:47:50 587  	    WHEN NO_DATA_FOUND THEN
15:47:50 588  	      RAISE CAN_NOT_GET_GROUP_ID;
15:47:50 589  	END;
15:47:50 590  
15:47:50 591  	out_group_id := var_group_id;
15:47:50 592  
15:47:50 593  EXCEPTION
15:47:50 594  WHEN BAD_LICENSE_ID THEN
15:47:50 595  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 596  	  SPROC_NAME, 'No such license');
15:47:50 597  WHEN CAN_NOT_GET_GROUP_ID THEN
15:47:50 598  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 599  	  SPROC_NAME, 'Could not get group id');
15:47:50 600  WHEN OTHERS THEN
15:47:50 601  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 602  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 603  END GET_GROUP_ID_BY_LICENSE_ID;
15:47:50 604  
15:47:50 605  /******************************************************************************/
15:47:50 606  
15:47:50 607  PROCEDURE GET_NEED_ENTITLEMENTS_LICENSES (
15:47:50 608  	out_result_set OUT SYS_REFCURSOR
15:47:50 609  ) AS
15:47:50 610  BEGIN
15:47:50 611  	OPEN out_result_set FOR
15:47:50 612  SELECT * FROM
15:47:50 613  (
15:47:50 614  	SELECT
15:47:50 615  	  LICENSE.ID,
15:47:50 616  	  LICENSE.INVOICE_ID,
15:47:50 617  	  LICENSE.IS_EXTENSION,
15:47:50 618  	  LICENSE.START_DATE,
15:47:50 619  	  LICENSE.END_DATE,
15:47:50 620  	  LICENSE.ENTITLEMENT_END_DATE,
15:47:50 621  	  LICENSE.CURRENT_OFFER_INDEX,
15:47:50 622  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
15:47:50 623  	  LICENSE.CREATE_DATE,
15:47:50 624  	  LICENSE.CREATED_BY,
15:47:50 625  	  LICENSE.LICENSE_STATUS_ID,
15:47:50 626  	  LICENSE.OFFER_ID,
15:47:50 627  	  LICENSE.SUBSCRIPTION_ID,
15:47:50 628  	  LICENSE.UPDATE_DATE,
15:47:50 629  	  LICENSE.UPDATED_BY,
15:47:50 630  	  LICENSE.NEEDS_ENTITLEMENTS
15:47:50 631  	FROM
15:47:50 632  	  LICENSE
15:47:50 633  	WHERE
15:47:50 634  	  LICENSE.NEEDS_ENTITLEMENTS = GLOBAL_CONSTANTS_V22.TRUE
15:47:50 635  	AND ROWNUM <= 5000
15:47:50 636  	ORDER BY dbms_random.value
15:47:50 637  ) WHERE
15:47:50 638  	ROWNUM <= 500;
15:47:50 639  
15:47:50 640  END GET_NEED_ENTITLEMENTS_LICENSES;
15:47:50 641  
15:47:50 642  /******************************************************************************/
15:47:50 643  
15:47:50 644  PROCEDURE UPDATE_NEED_ENTITLEMENTS_FLAG (
15:47:50 645  	in_license_id	      IN NUMBER,
15:47:50 646  	in_needs_entitlements IN NUMBER,
15:47:50 647  	in_updated_by	      IN VARCHAR2
15:47:50 648  ) AS
15:47:50 649  SPROC_NAME CONSTANT VARCHAR2(29) := 'UPDATE_NEED_ENTITLEMENTS_FLAG';
15:47:50 650  -- VARIABLES
15:47:50 651  temp_license_id NUMBER;
15:47:50 652  -- EXCEPTIONS
15:47:50 653  BAD_LICENSE_ID	     EXCEPTION;
15:47:50 654  BAD_ENTITLEMENTS_FLAG  EXCEPTION;
15:47:50 655  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:50 656  BEGIN
15:47:50 657  
15:47:50 658  	IF in_needs_entitlements != GLOBAL_CONSTANTS_V22.TRUE
15:47:50 659  	  AND in_needs_entitlements != GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:50 660  	  RAISE BAD_ENTITLEMENTS_FLAG;
15:47:50 661  	END IF;
15:47:50 662  
15:47:50 663  	BEGIN
15:47:50 664  	  SELECT
15:47:50 665  	    LICENSE.ID into temp_license_id
15:47:50 666  	  FROM
15:47:50 667  	    LICENSE
15:47:50 668  	  WHERE
15:47:50 669  	    LICENSE.ID = in_license_id;
15:47:50 670  	  EXCEPTION
15:47:50 671  	    WHEN NO_DATA_FOUND THEN
15:47:50 672  	      RAISE BAD_LICENSE_ID;
15:47:50 673  	END;
15:47:50 674  
15:47:50 675  	PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:50 676  	  in_license_id 	=> in_license_id,
15:47:50 677  	  in_needs_entitlements => in_needs_entitlements,
15:47:50 678  	  in_updated_by 	=> in_updated_by
15:47:50 679  	);
15:47:50 680  
15:47:50 681  EXCEPTION
15:47:50 682  WHEN BAD_ENTITLEMENTS_FLAG THEN
15:47:50 683  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:50 684  	  SPROC_NAME, 'Bad entitlements flag value');
15:47:50 685  WHEN BAD_LICENSE_ID THEN
15:47:50 686  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 687  	  SPROC_NAME, 'No such license');
15:47:50 688  WHEN OTHERS THEN
15:47:50 689  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 690  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 691  END UPDATE_NEED_ENTITLEMENTS_FLAG;
15:47:50 692  
15:47:50 693  
15:47:50 694  /******************************************************************************/
15:47:50 695  
15:47:50 696  PROCEDURE GET_ENDED_GC_LICENSES (
15:47:50 697  	out_result_set		OUT SYS_REFCURSOR,
15:47:50 698  	in_hours_number 	IN NUMBER DEFAULT 14*24,
15:47:50 699  	in_num_rows		IN NUMBER DEFAULT 10000,
15:47:50 700  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:50 701  ) AS
15:47:50 702  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDED_GC_INVOICES';
15:47:50 703  var_days		NUMBER;
15:47:50 704  var_hours 	NUMBER;
15:47:50 705  var_time_interval INTERVAL DAY (3) TO SECOND;
15:47:50 706  BEGIN
15:47:50 707  	var_hours := mod(in_hours_number,24);
15:47:50 708  	var_days := (in_hours_number - var_hours) / 24;
15:47:50 709  	var_time_interval := var_days||' '||var_hours||':0:0';
15:47:50 710  	OPEN out_result_set FOR
15:47:50 711  SELECT * FROM
15:47:50 712  (
15:47:50 713  	SELECT
15:47:50 714  	  l.ID,
15:47:50 715  	  l.CREATE_DATE,
15:47:50 716  	  l.CREATED_BY,
15:47:50 717  	  l.CURRENT_OFFER_INDEX,
15:47:50 718  	  l.CURRENT_OFFER_RECURR_NUM,
15:47:50 719  	  l.END_DATE,
15:47:50 720  	  l.ENTITLEMENT_END_DATE,
15:47:50 721  	  l.INVOICE_ID,
15:47:50 722  	  l.IS_EXTENSION,
15:47:50 723  	  l.LICENSE_STATUS_ID,
15:47:50 724  	  l.OFFER_ID,
15:47:50 725  	  l.START_DATE,
15:47:50 726  	  l.SUBSCRIPTION_ID,
15:47:50 727  	  l.UPDATE_DATE,
15:47:50 728  	  l.UPDATED_BY
15:47:50 729  	FROM
15:47:50 730  	  GIFT_CERTIFICATE gc
15:47:50 731  	  INNER JOIN INVOICE i ON i.id = gc.PURCHASE_INVOICE_ID
15:47:50 732  	  INNER JOIN LICENSE l ON l.invoice_id = i.id
15:47:50 733  	  LEFT JOIN SUBSCRIPTION s ON s.id = l.subscription_id
15:47:50 734  	WHERE
15:47:50 735  	  l.LICENSE_STATUS_ID != GLOBAL_STATUSES_V22.LICENSE_ACTIVE
15:47:50 736  	  AND l.ENTITLEMENT_END_DATE <= (current_timestamp)
15:47:50 737  	  AND l.ENTITLEMENT_END_DATE > (current_timestamp - var_time_interval)
15:47:50 738  	  AND s.subscription_status_id = GLOBAL_STATUSES_V22.SUBSCRIPTION_CLOSED
15:47:50 739  	  AND NOT EXISTS (
15:47:50 740  	    SELECT NULL
15:47:50 741  	    FROM PROCESS_RETRY_THROTTLE
15:47:50 742  	    WHERE PROCESS_NAME = in_process_name
15:47:50 743  	      AND GENERIC_ID = l.ID
15:47:50 744  	  )
15:47:50 745  	  AND ROWNUM <= in_num_rows*10
15:47:50 746  	  ORDER BY dbms_random.value
15:47:50 747  ) WHERE
15:47:50 748  	  ROWNUM <= in_num_rows
15:47:50 749  	  GROUP BY SUBSCRIPTION_ID;
15:47:50 750  EXCEPTION
15:47:50 751  WHEN OTHERS THEN
15:47:50 752  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 753  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 754  END GET_ENDED_GC_LICENSES;
15:47:50 755  
15:47:50 756  PROCEDURE GET_LICENSE_BY_ID (
15:47:50 757  	in_license_id  IN NUMBER,
15:47:50 758  	out_result_set OUT SYS_REFCURSOR
15:47:50 759  ) AS
15:47:50 760  SPROC_NAME CONSTANT VARCHAR2(17) := 'GET_LICENSE_BY_ID';
15:47:50 761  -- VARIABLES
15:47:50 762  temp_license_id NUMBER;
15:47:50 763  -- EXCEPTIONS
15:47:50 764  BAD_LICENSE_ID EXCEPTION;
15:47:50 765  BEGIN
15:47:50 766  
15:47:50 767  	BEGIN
15:47:50 768  	  SELECT
15:47:50 769  	    l.id into temp_license_id
15:47:50 770  	  FROM
15:47:50 771  	    license l
15:47:50 772  	  WHERE
15:47:50 773  	    l.id = in_license_id;
15:47:50 774  	  EXCEPTION
15:47:50 775  	    WHEN NO_DATA_FOUND THEN
15:47:50 776  	      RAISE BAD_LICENSE_ID;
15:47:50 777  	END;
15:47:50 778  
15:47:50 779  	OPEN out_result_set FOR
15:47:50 780  	SELECT
15:47:50 781  	  l.id,
15:47:50 782  	  l.license_status_id,
15:47:50 783  	  l.subscription_id,
15:47:50 784  	  l.invoice_id,
15:47:50 785  	  l.offer_id,
15:47:50 786  	  l.start_date,
15:47:50 787  	  l.end_date,
15:47:50 788  	  l.entitlement_end_date,
15:47:50 789  	  l.is_extension,
15:47:50 790  	  l.create_date,
15:47:50 791  	  l.created_by,
15:47:50 792  	  l.update_date,
15:47:50 793  	  l.updated_by,
15:47:50 794  	  l.current_offer_index,
15:47:50 795  	  l.current_offer_recurr_num,
15:47:50 796  	  l.needs_entitlements
15:47:50 797  	FROM
15:47:50 798  	  LICENSE l
15:47:50 799  	WHERE
15:47:50 800  	  l.id = in_license_id;
15:47:50 801  
15:47:50 802  EXCEPTION
15:47:50 803  WHEN BAD_LICENSE_ID THEN
15:47:50 804  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:50 805  	  SPROC_NAME, 'No such license');
15:47:50 806  WHEN OTHERS THEN
15:47:50 807  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 808  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 809  END GET_LICENSE_BY_ID;
15:47:50 810  
15:47:50 811  PROCEDURE UP_LATEST_LICE_END_BY_SUBID (
15:47:50 812  	in_subscription_id IN NUMBER,
15:47:50 813  	in_end_date IN DATE,
15:47:50 814  	in_updated_by IN VARCHAR2
15:47:50 815  ) AS
15:47:50 816  SPROC_NAME CONSTANT VARCHAR2(32) := 'UP_LATEST_LICE_END_BY_SUBID';
15:47:50 817  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:50 818  var_latest_lice NUMBER;
15:47:50 819  BEGIN
15:47:50 820  	SELECT max(id)
15:47:50 821  	INTO  var_latest_lice
15:47:50 822  	FROM LICENSE
15:47:50 823  	WHERE
15:47:50 824  	  subscription_id = in_subscription_id
15:47:50 825  	;
15:47:50 826  
15:47:50 827  	PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:50 828  	  in_license_id        => var_latest_lice,
15:47:50 829  	  in_updated_by        => in_updated_by,
15:47:50 830  	  in_needs_entitlements => GLOBAL_CONSTANTS_V22.TRUE,
15:47:50 831  	  in_end_date	       => in_end_date,
15:47:50 832  	  in_entitlement_end_date => in_end_date
15:47:50 833  	);
15:47:50 834  
15:47:50 835  EXCEPTION
15:47:50 836  WHEN NO_DATA_FOUND THEN
15:47:50 837  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 838  	  SPROC_NAME, 'No licenses from subscription', SQLERRM);
15:47:50 839  WHEN OTHERS THEN
15:47:50 840  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:50 841  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:50 842  END UP_LATEST_LICE_END_BY_SUBID;
15:47:50 843  
15:47:50 844  PROCEDURE GET_GRACE_LICE_FOR_FINAL_TRANS (
15:47:50 845  	in_days_before_close	 IN NUMBER,
15:47:50 846  	in_num_licenses_to_fetch IN NUMBER,
15:47:50 847  	out_result_set		 OUT SYS_REFCURSOR
15:47:50 848  ) AS
15:47:50 849  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRACE_LICE_FOR_FINAL_TRANS';
15:47:50 850  BEGIN
15:47:50 851  	OPEN out_result_set FOR
15:47:50 852  	SELECT
15:47:50 853  	    *
15:47:50 854  	FROM
15:47:50 855  	    (
15:47:50 856  		SELECT
15:47:50 857  		    l.id
15:47:50 858  		FROM
15:47:50 859  		    license l
15:47:50 860  		JOIN
15:47:50 861  		    invoice i
15:47:50 862  		ON
15:47:50 863  		    l.invoice_id = i.id
15:47:50 864  		WHERE
15:47:50 865  		    i.invoice_status_id = GLOBAL_STATUSES_V22.INVOICE_OPEN
15:47:50 866  		AND l.license_status_id = GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD
15:47:50 867  		AND SYSDATE + in_days_before_close >= l.grace_end_date
15:47:50 868  		AND NOT EXISTS
15:47:50 869  		    (
15:47:50 870  			SELECT
15:47:50 871  			    1
15:47:50 872  			FROM
15:47:50 873  			    charge c
15:47:50 874  			WHERE
15:47:50 875  			    c.invoice_id = i.id
15:47:50 876  			AND c.charge_status_id = GLOBAL_STATUSES_V22.CHARGE_OPENED)
15:47:50 877  		AND rownum <= in_num_licenses_to_fetch * 10
15:47:50 878  		ORDER BY
15:47:50 879  		    dbms_random.value)
15:47:50 880  	WHERE
15:47:50 881  	    rownum <= in_num_licenses_to_fetch;
15:47:50 882  END GET_GRACE_LICE_FOR_FINAL_TRANS;
15:47:50 883  
15:47:50 884  END PROCS_LICENSE_V22;
15:47:50 885  .
15:47:50 SQL> /

Package body created.

Elapsed: 00:00:01.54
15:47:52 SQL> 
15:47:52 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_CHARGE_V22" AS
15:47:52   2  
15:47:52   3  PROCEDURE CREATE_CHARGE(
15:47:52   4  /*
15:47:52   5  Throws exceptions:
15:47:52   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52   8  */
15:47:52   9  	in_invoice_id	      IN NUMBER,
15:47:52  10  	in_transaction_id     IN NUMBER,
15:47:52  11  	in_instrument_type_id IN NUMBER,
15:47:52  12  	in_instrument_id      IN NUMBER,
15:47:52  13  	in_charge_amount      IN NUMBER,
15:47:52  14  	in_created_by	      IN VARCHAR2,
15:47:52  15  	in_charge_status_id   IN NUMBER,
15:47:52  16  	out_charge_id	      OUT NUMBER
15:47:52  17  ) AS
15:47:52  18  PROCS_NAME	  CONSTANT VARCHAR2(13) := 'CREATE_CHARGE';
15:47:52  19  -- VARIABLES
15:47:52  20  temp_invoice_id	  NUMBER;
15:47:52  21  temp_transaction_id NUMBER;
15:47:52  22  var_new_charge_id   NUMBER;
15:47:52  23  -- EXCEPTIONS
15:47:52  24  BAD_INVOICE_ID	     EXCEPTION;
15:47:52  25  BAD_TRANSACTION_ID     EXCEPTION;
15:47:52  26  BAD_PAYPAL_ID	     EXCEPTION;
15:47:52  27  BAD_CREDIT_CARD_ID     EXCEPTION;
15:47:52  28  BAD_INSTRUMENT_TYPE    EXCEPTION;
15:47:52  29  BAD_CHARGE_STATUS_ID   EXCEPTION;
15:47:52  30  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:52  31  BEGIN
15:47:52  32  	-- Check that incoming data is correct
15:47:52  33  	IF in_instrument_type_id != GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD
15:47:52  34  	  AND in_instrument_type_id != GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL THEN
15:47:52  35  	  RAISE BAD_INSTRUMENT_TYPE;
15:47:52  36  	END IF;
15:47:52  37  
15:47:52  38  	-- Check that status is correct
15:47:52  39  	IF in_charge_status_id != GLOBAL_STATUSES_V22.CHARGE_OPENED
15:47:52  40  	  AND in_charge_status_id != GLOBAL_STATUSES_V22.CHARGE_PROCESSED
15:47:52  41  	  AND in_charge_status_id != GLOBAL_STATUSES_V22.CHARGE_CANCELED THEN
15:47:52  42  	  RAISE BAD_CHARGE_STATUS_ID;
15:47:52  43  	END IF;
15:47:52  44  
15:47:52  45  	-- Check that invoice exists
15:47:52  46  	BEGIN
15:47:52  47  	  SELECT
15:47:52  48  	    INVOICE.ID into temp_invoice_id
15:47:52  49  	  FROM
15:47:52  50  	    INVOICE
15:47:52  51  	  WHERE
15:47:52  52  	    INVOICE.ID = in_invoice_id;
15:47:52  53  	  EXCEPTION
15:47:52  54  	    WHEN NO_DATA_FOUND THEN
15:47:52  55  	      RAISE BAD_INVOICE_ID;
15:47:52  56  	END;
15:47:52  57  
15:47:52  58  	-- Check that transaction exists
15:47:52  59  	BEGIN
15:47:52  60  	  SELECT
15:47:52  61  	    TRANSACTION.ID into temp_transaction_id
15:47:52  62  	  FROM
15:47:52  63  	    TRANSACTION
15:47:52  64  	  WHERE
15:47:52  65  	    TRANSACTION.ID = in_transaction_id;
15:47:52  66  	  EXCEPTION
15:47:52  67  	    WHEN NO_DATA_FOUND THEN
15:47:52  68  	      RAISE BAD_TRANSACTION_ID;
15:47:52  69  	END;
15:47:52  70  
15:47:52  71  	-- Check that instrument exists
15:47:52  72  	IF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD THEN
15:47:52  73  	  IF PROCS_FIN_INSTRUMENTS_V22.IS_CREDIT_CARD_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52  74  	    RAISE BAD_CREDIT_CARD_ID;
15:47:52  75  	  END IF;
15:47:52  76  	ELSIF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL THEN
15:47:52  77  	  IF PROCS_FIN_INSTRUMENTS_V22.IS_PAYPAL_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52  78  	    RAISE BAD_PAYPAL_ID;
15:47:52  79  	  END IF;
15:47:52  80  	END IF;
15:47:52  81  
15:47:52  82  	-- Create new charge
15:47:52  83  	PROCS_CHARGE_CRU_V22.CREATE_CHARGE(
15:47:52  84  	  out_charge_id 	=> var_new_charge_id,
15:47:52  85  	  in_invoice_id 	=> in_invoice_id,
15:47:52  86  	  in_transaction_id	=> in_transaction_id,
15:47:52  87  	  in_instrument_type_id => in_instrument_type_id,
15:47:52  88  	  in_instrument_id	=> in_instrument_id,
15:47:52  89  	  in_charge_amount	=> in_charge_amount,
15:47:52  90  	  in_charge_status_id	=> in_charge_status_id,
15:47:52  91  	  in_created_by 	=> in_created_by
15:47:52  92  	);
15:47:52  93  
15:47:52  94  	out_charge_id := var_new_charge_id;
15:47:52  95  
15:47:52  96  EXCEPTION
15:47:52  97  WHEN BAD_CHARGE_STATUS_ID THEN
15:47:52  98  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52  99  	  PROCS_NAME, 'Bad charge status: '||in_charge_status_id);
15:47:52 100  WHEN BAD_INSTRUMENT_TYPE THEN
15:47:52 101  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 102  	  PROCS_NAME, 'Bad instrument type id');
15:47:52 103  WHEN BAD_INVOICE_ID THEN
15:47:52 104  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 105  	  PROCS_NAME, 'No such invoice');
15:47:52 106  WHEN BAD_TRANSACTION_ID THEN
15:47:52 107  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 108  	  PROCS_NAME, 'No such transaction');
15:47:52 109  WHEN BAD_PAYPAL_ID THEN
15:47:52 110  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 111  	  PROCS_NAME, 'No such paypal');
15:47:52 112  WHEN BAD_CREDIT_CARD_ID THEN
15:47:52 113  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 114  	  PROCS_NAME, 'No such credit card');
15:47:52 115  WHEN OTHERS THEN
15:47:52 116  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 117  	  PROCS_NAME, 'Unknown error', SQLERRM);
15:47:52 118  END CREATE_CHARGE;
15:47:52 119  
15:47:52 120  /********************************************************/
15:47:52 121  -- norlov #38562 :
15:47:52 122  PROCEDURE GET_PENDING_REFUND_CHARGES (
15:47:52 123  /*
15:47:52 124  Throws exceptions:
15:47:52 125  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 126  */
15:47:52 127  	out_result_set	    OUT SYS_REFCURSOR,
15:47:52 128  	in_row_number	    IN NUMBER DEFAULT NULL
15:47:52 129  ) AS
15:47:52 130  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_PENDING_REFUND_CHARGES';
15:47:52 131  -- COMSTANTS
15:47:52 132  DEFAULT_ROW_NUMBER CONSTANT NUMBER := 1;
15:47:52 133  -- VARIABLES
15:47:52 134  var_row_number NUMBER;
15:47:52 135  BEGIN
15:47:52 136  	IF in_row_number IS NULL THEN
15:47:52 137  	  var_row_number := DEFAULT_ROW_NUMBER;
15:47:52 138  	ELSE
15:47:52 139  	  var_row_number := in_row_number;
15:47:52 140  	END IF;
15:47:52 141  
15:47:52 142  	-- Select charges
15:47:52 143  	OPEN out_result_set FOR
15:47:52 144  SELECT * FROM
15:47:52 145  (
15:47:52 146  	SELECT
15:47:52 147  	  CHARGE.ID,
15:47:52 148  	  CHARGE.TRANSACTION_ID,
15:47:52 149  	  CHARGE.INSTRUMENT_ID,
15:47:52 150  	  CHARGE.INSTRUMENT_TYPE_ID,
15:47:52 151  	  CHARGE.CHARGE_AMOUNT,
15:47:52 152  	  CHARGE.CREATE_DATE,
15:47:52 153  	  CHARGE.CREATED_BY,
15:47:52 154  	  CHARGE.INVOICE_ID
15:47:52 155  	FROM
15:47:52 156  	  CHARGE
15:47:52 157  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
15:47:52 158  	WHERE
15:47:52 159  	  TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V22.TRANSACTION_PENDING
15:47:52 160  	  AND TRANSACTION.IS_REFUND = GLOBAL_CONSTANTS_V22.TRUE
15:47:52 161  	  AND TRANSACTION.TRANSACTION_AMOUNT < 0
15:47:52 162  	  AND NOT EXISTS
15:47:52 163  	  (
15:47:52 164  	    SELECT NULL
15:47:52 165  	    FROM PROCESS_RETRY_THROTTLE
15:47:52 166  	    WHERE PROCESS_NAME = SPROC_NAME
15:47:52 167  	      AND GENERIC_ID = CHARGE.ID
15:47:52 168  	  )
15:47:52 169  	  AND ROWNUM <= var_row_number*10
15:47:52 170  	  ORDER BY dbms_random.value
15:47:52 171  ) WHERE
15:47:52 172  	  ROWNUM <= var_row_number;
15:47:52 173  
15:47:52 174  END GET_PENDING_REFUND_CHARGES;
15:47:52 175  /******************************************************************************/
15:47:52 176  
15:47:52 177  PROCEDURE GET_UNPROCESSED_CHARGES (
15:47:52 178  /*
15:47:52 179  Throws exceptions:
15:47:52 180  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 181  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 182  */
15:47:52 183  	in_invoice_id  IN NUMBER,
15:47:52 184  	out_result_set OUT SYS_REFCURSOR
15:47:52 185  ) AS
15:47:52 186  SPROC_NAME      CONSTANT VARCHAR2(24) := 'GET_UNPROCESSED_CHARGES';
15:47:52 187  -- VARIABLES
15:47:52 188  temp_invoice_id NUMBER;
15:47:52 189  -- EXCEPTIONS
15:47:52 190  BAD_INVOICE_ID EXCEPTION;
15:47:52 191  BEGIN
15:47:52 192  
15:47:52 193  	-- Check that invoice exists
15:47:52 194  	BEGIN
15:47:52 195  	  SELECT
15:47:52 196  	    INVOICE.ID into temp_invoice_id
15:47:52 197  	  FROM
15:47:52 198  	    INVOICE
15:47:52 199  	  WHERE
15:47:52 200  	    INVOICE.ID = in_invoice_id;
15:47:52 201  	  EXCEPTION
15:47:52 202  	    WHEN NO_DATA_FOUND THEN
15:47:52 203  	      RAISE BAD_INVOICE_ID;
15:47:52 204  	END;
15:47:52 205  
15:47:52 206  	-- Select charges
15:47:52 207  	OPEN out_result_set FOR
15:47:52 208  	SELECT
15:47:52 209  	  CHARGE.ID,
15:47:52 210  	  CHARGE.TRANSACTION_ID,
15:47:52 211  	  CHARGE.INSTRUMENT_ID,
15:47:52 212  	  CHARGE.INSTRUMENT_TYPE_ID,
15:47:52 213  	  CHARGE.CHARGE_AMOUNT,
15:47:52 214  	  CHARGE.CREATE_DATE,
15:47:52 215  	  CHARGE.CREATED_BY,
15:47:52 216  	  CHARGE.INVOICE_ID
15:47:52 217  	FROM
15:47:52 218  	  CHARGE
15:47:52 219  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
15:47:52 220  	WHERE
15:47:52 221  	  CHARGE.INVOICE_ID = in_invoice_id
15:47:52 222  	  AND CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_OPENED
15:47:52 223  	  AND
15:47:52 224  	    TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V22.TRANSACTION_PENDING;
15:47:52 225  
15:47:52 226  EXCEPTION
15:47:52 227  WHEN BAD_INVOICE_ID THEN
15:47:52 228  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 229  	  SPROC_NAME, 'No such invoice');
15:47:52 230  WHEN OTHERS THEN
15:47:52 231  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 232  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 233  END GET_UNPROCESSED_CHARGES;
15:47:52 234  
15:47:52 235  /******************************************************************************/
15:47:52 236  
15:47:52 237  PROCEDURE GET_PROCESSED_CHARGES (
15:47:52 238  /*
15:47:52 239  Throws exceptions:
15:47:52 240  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 241  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 242  */
15:47:52 243  	in_invoice_id  IN NUMBER,
15:47:52 244  	out_result_set OUT SYS_REFCURSOR
15:47:52 245  ) AS
15:47:52 246  SPROC_NAME      CONSTANT VARCHAR2(21) := 'GET_PROCESSED_CHARGES';
15:47:52 247  -- VARIABLES
15:47:52 248  temp_invoice_id NUMBER;
15:47:52 249  -- EXCEPTIONS
15:47:52 250  BAD_INVOICE_ID  EXCEPTION;
15:47:52 251  BEGIN
15:47:52 252  
15:47:52 253  	-- Check that invoice exists
15:47:52 254  	BEGIN
15:47:52 255  	  SELECT
15:47:52 256  	    INVOICE.ID into temp_invoice_id
15:47:52 257  	  FROM
15:47:52 258  	    INVOICE
15:47:52 259  	  WHERE
15:47:52 260  	    INVOICE.ID = in_invoice_id;
15:47:52 261  	  EXCEPTION
15:47:52 262  	    WHEN NO_DATA_FOUND THEN
15:47:52 263  	      RAISE BAD_INVOICE_ID;
15:47:52 264  	END;
15:47:52 265  
15:47:52 266  	-- Select charges
15:47:52 267  	OPEN out_result_set FOR
15:47:52 268  	SELECT /*+ STAR_TRANSFORMATION */
15:47:52 269  	  CHARGE.ID,
15:47:52 270  	  CHARGE.TRANSACTION_ID,
15:47:52 271  	  CHARGE.INSTRUMENT_ID,
15:47:52 272  	  CHARGE.INSTRUMENT_TYPE_ID,
15:47:52 273  	  CHARGE.CHARGE_AMOUNT,
15:47:52 274  	  CHARGE.CREATE_DATE,
15:47:52 275  	  CHARGE.CREATED_BY,
15:47:52 276  	  CHARGE.INVOICE_ID
15:47:52 277  	FROM
15:47:52 278  	  CHARGE
15:47:52 279  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
15:47:52 280  	WHERE
15:47:52 281  	  CHARGE.INVOICE_ID = in_invoice_id
15:47:52 282  	  AND CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_PROCESSED
15:47:52 283  	  AND TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V22.TRANSACTION_CLOSED;
15:47:52 284  
15:47:52 285  EXCEPTION
15:47:52 286  WHEN BAD_INVOICE_ID THEN
15:47:52 287  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 288  	  SPROC_NAME, 'No such invoice');
15:47:52 289  WHEN OTHERS THEN
15:47:52 290  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 291  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 292  END GET_PROCESSED_CHARGES;
15:47:52 293  
15:47:52 294  /******************************************************************************/
15:47:52 295  
15:47:52 296  PROCEDURE GET_SUBSCR_ID_BY_CHARGE_ID (
15:47:52 297  /*
15:47:52 298  Throws exceptions:
15:47:52 299  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 300  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 301  */
15:47:52 302  	in_charge_id	    IN NUMBER,
15:47:52 303  	out_subscription_id OUT NUMBER
15:47:52 304  ) AS
15:47:52 305  SPROC_NAME	  CONSTANT VARCHAR2(26) := 'GET_SUBSCR_ID_BY_CHARGE_ID';
15:47:52 306  -- VARIABLES
15:47:52 307  var_invoice_id	  NUMBER;
15:47:52 308  var_subscription_id NUMBER;
15:47:52 309  -- EXCEPTIONS
15:47:52 310  BAD_CHARGE_ID		EXCEPTION;
15:47:52 311  CAN_NOT_FIND_SUBSCRIPTION EXCEPTION;
15:47:52 312  BEGIN
15:47:52 313  
15:47:52 314  	BEGIN
15:47:52 315  	  SELECT
15:47:52 316  	    CHARGE.INVOICE_ID into var_invoice_id
15:47:52 317  	  FROM
15:47:52 318  	    CHARGE
15:47:52 319  	  WHERE
15:47:52 320  	    CHARGE.ID = in_charge_id;
15:47:52 321  	  EXCEPTION
15:47:52 322  	    WHEN NO_DATA_FOUND THEN
15:47:52 323  	      RAISE BAD_CHARGE_ID;
15:47:52 324  	END;
15:47:52 325  
15:47:52 326  	BEGIN
15:47:52 327  	  SELECT
15:47:52 328  	    LICENSE.SUBSCRIPTION_ID into var_subscription_id
15:47:52 329  	  FROM
15:47:52 330  	    LICENSE
15:47:52 331  	  WHERE
15:47:52 332  	    LICENSE.INVOICE_ID = var_invoice_id
15:47:52 333  	    AND ROWNUM <= 1; -- That's because many licenses could be pointed to the same invoice
15:47:52 334  	  EXCEPTION
15:47:52 335  	    WHEN NO_DATA_FOUND THEN
15:47:52 336  	      RAISE CAN_NOT_FIND_SUBSCRIPTION;
15:47:52 337  	END;
15:47:52 338  
15:47:52 339  	out_subscription_id := var_subscription_id;
15:47:52 340  
15:47:52 341  EXCEPTION
15:47:52 342  WHEN BAD_CHARGE_ID THEN
15:47:52 343  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 344  	  SPROC_NAME, 'No such charge');
15:47:52 345  WHEN CAN_NOT_FIND_SUBSCRIPTION THEN
15:47:52 346  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 347  	  SPROC_NAME, 'Could not find subscription for given charge');
15:47:52 348  WHEN OTHERS THEN
15:47:52 349  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 350  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 351  END GET_SUBSCR_ID_BY_CHARGE_ID;
15:47:52 352  
15:47:52 353  /******************************************************************************/
15:47:52 354  
15:47:52 355  PROCEDURE UPDATE_CHARGE_STATUS (
15:47:52 356  /*
15:47:52 357  Throws exceptions:
15:47:52 358  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 359  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 360  */
15:47:52 361  	in_charge_id	    IN CHARGE.ID%TYPE,
15:47:52 362  	in_charge_status_id IN CHARGE.CHARGE_STATUS_ID%TYPE,
15:47:52 363  	in_updated_by	    IN CHARGE.UPDATED_BY%TYPE
15:47:52 364  ) AS
15:47:52 365  SPROC_NAME CONSTANT VARCHAR2(20) := 'UPDATE_CHARGE_STATUS';
15:47:52 366  -- EXCEPTIONS
15:47:52 367  BAD_CHARGE_ID	     EXCEPTION;
15:47:52 368  BAD_STATUS_ID	     EXCEPTION;
15:47:52 369  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:52 370  BEGIN
15:47:52 371  
15:47:52 372  	IF in_charge_status_id != GLOBAL_STATUSES_V22.CHARGE_OPENED
15:47:52 373  	  AND in_charge_status_id != GLOBAL_STATUSES_V22.CHARGE_PROCESSED
15:47:52 374  	  AND in_charge_status_id != GLOBAL_STATUSES_V22.CHARGE_CANCELED THEN
15:47:52 375  	  RAISE BAD_STATUS_ID;
15:47:52 376  	END IF;
15:47:52 377  
15:47:52 378  	PROCS_CHARGE_CRU_V22.UPDATE_CHARGE(
15:47:52 379  	  in_charge_id	      => in_charge_id,
15:47:52 380  	  in_charge_status_id => in_charge_status_id,
15:47:52 381  	  in_updated_by       => in_updated_by
15:47:52 382  	);
15:47:52 383  
15:47:52 384  	IF SQL%ROWCOUNT = 0 THEN
15:47:52 385  	  RAISE BAD_CHARGE_ID;
15:47:52 386  	END IF;
15:47:52 387  
15:47:52 388  EXCEPTION
15:47:52 389  WHEN BAD_CHARGE_ID THEN
15:47:52 390  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 391  	  SPROC_NAME, 'No such charge');
15:47:52 392  WHEN BAD_STATUS_ID THEN
15:47:52 393  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 394  	  SPROC_NAME, 'Bad status id');
15:47:52 395  WHEN OTHERS THEN
15:47:52 396  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 397  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 398  END UPDATE_CHARGE_STATUS;
15:47:52 399  
15:47:52 400  FUNCTION IS_CHARGE_COLLECTED (
15:47:52 401  /*
15:47:52 402  Throws:
15:47:52 403  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 404  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 405  Returns:
15:47:52 406  GLOBAL_CONST.TRUE if transaction collected,
15:47:52 407  GLOBAL_CONST.FALSE else
15:47:52 408  */
15:47:52 409  	in_charge_id IN NUMBER
15:47:52 410  ) RETURN NUMBER AS
15:47:52 411  SPROC_NAME CONSTANT VARCHAR2(19) := 'IS_CHARGE_COLLECTED';
15:47:52 412  -- VARIABLES
15:47:52 413  var_transaction_id NUMBER;
15:47:52 414  is_transaction_collected NUMBER;
15:47:52 415  -- EXCEPTIONS
15:47:52 416  BAD_CHARGE_ID	       EXCEPTION;
15:47:52 417  CAN_NOT_CHECK_TRANSACTION EXCEPTION;
15:47:52 418  EXCEPTION_MESSAGE        VARCHAR2(1024);
15:47:52 419  BEGIN
15:47:52 420  
15:47:52 421  	BEGIN
15:47:52 422  	  SELECT
15:47:52 423  	    CHARGE.TRANSACTION_ID into var_transaction_id
15:47:52 424  	  FROM
15:47:52 425  	    CHARGE
15:47:52 426  	  WHERE
15:47:52 427  	    CHARGE.ID = in_charge_id;
15:47:52 428  	  EXCEPTION
15:47:52 429  	    WHEN NO_DATA_FOUND THEN
15:47:52 430  	      RAISE BAD_CHARGE_ID;
15:47:52 431  	END;
15:47:52 432  
15:47:52 433  	BEGIN
15:47:52 434  	  is_transaction_collected := PROCS_TRANSACTION_V22.IS_TRANSACTION_COLLECTED(var_transaction_id);
15:47:52 435  	  EXCEPTION
15:47:52 436  	    WHEN OTHERS THEN
15:47:52 437  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 438  	      RAISE CAN_NOT_CHECK_TRANSACTION;
15:47:52 439  	END;
15:47:52 440  
15:47:52 441  	RETURN is_transaction_collected;
15:47:52 442  
15:47:52 443  EXCEPTION
15:47:52 444  WHEN BAD_CHARGE_ID THEN
15:47:52 445  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 446  	  SPROC_NAME, 'No such charge');
15:47:52 447  WHEN CAN_NOT_CHECK_TRANSACTION THEN
15:47:52 448  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 449  	  SPROC_NAME, 'Could not check if transaction was collected', EXCEPTION_MESSAGE);
15:47:52 450  WHEN OTHERS THEN
15:47:52 451  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 452  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 453  END;
15:47:52 454  
15:47:52 455  PROCEDURE GET_COLLECTED_CHARGES (
15:47:52 456  /*
15:47:52 457  Throws exceptions:
15:47:52 458  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 459  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 460  */
15:47:52 461  	in_invoice_id  IN NUMBER,
15:47:52 462  	out_result_set OUT SYS_REFCURSOR
15:47:52 463  ) AS
15:47:52 464  SPROC_NAME      CONSTANT VARCHAR2(21) := 'GET_COLLECTED_CHARGES';
15:47:52 465  -- VARIABLES
15:47:52 466  temp_invoice_id NUMBER;
15:47:52 467  -- EXCEPTIONS
15:47:52 468  BAD_INVOICE_ID  EXCEPTION;
15:47:52 469  BEGIN
15:47:52 470  
15:47:52 471  	-- Check that invoice exists
15:47:52 472  	BEGIN
15:47:52 473  	  SELECT
15:47:52 474  	    INVOICE.ID into temp_invoice_id
15:47:52 475  	  FROM
15:47:52 476  	    INVOICE
15:47:52 477  	  WHERE
15:47:52 478  	    INVOICE.ID = in_invoice_id;
15:47:52 479  	  EXCEPTION
15:47:52 480  	    WHEN NO_DATA_FOUND THEN
15:47:52 481  	      RAISE BAD_INVOICE_ID;
15:47:52 482  	END;
15:47:52 483  
15:47:52 484  	-- Select charges
15:47:52 485  	OPEN out_result_set FOR
15:47:52 486  	SELECT
15:47:52 487  	  CHARGE.ID,
15:47:52 488  	  CHARGE.TRANSACTION_ID,
15:47:52 489  	  CHARGE.INSTRUMENT_ID,
15:47:52 490  	  CHARGE.INSTRUMENT_TYPE_ID,
15:47:52 491  	  CHARGE.CHARGE_AMOUNT,
15:47:52 492  	  CHARGE.CREATE_DATE,
15:47:52 493  	  CHARGE.CREATED_BY,
15:47:52 494  	  CHARGE.INVOICE_ID
15:47:52 495  	FROM
15:47:52 496  	  CHARGE
15:47:52 497  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
15:47:52 498  	WHERE
15:47:52 499  	  CHARGE.INVOICE_ID = in_invoice_id
15:47:52 500  	  AND CHARGE.CHARGE_STATUS_ID IN (SELECT GLOBAL_STATUSES_V22.CHARGE_PROCESSED FROM DUAL)
15:47:52 501  	  AND PROCS_CHARGE_V22.IS_CHARGE_COLLECTED(CHARGE.ID) = GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 502  
15:47:52 503  EXCEPTION
15:47:52 504  WHEN BAD_INVOICE_ID THEN
15:47:52 505  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 506  	  SPROC_NAME, 'No such invoice');
15:47:52 507  WHEN OTHERS THEN
15:47:52 508  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 509  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 510  END GET_COLLECTED_CHARGES;
15:47:52 511  
15:47:52 512  END PROCS_CHARGE_V22;
15:47:52 513  .
15:47:52 SQL> /

Package body created.

Elapsed: 00:00:00.02
15:47:52 SQL> 
15:47:52 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_SUBSCRIPTION_V22" AS
15:47:52   2  
15:47:52   3  PROCEDURE START_GRACE_BY_INVOICE_ID(
15:47:52   4  	in_invoice_id	     IN LICENSE.INVOICE_ID%TYPE,
15:47:52   5  	in_updater	     IN VARCHAR2,
15:47:52   6  	in_duration_in_hours IN NUMBER
15:47:52   7  ) AS
15:47:52   8  SPROC_NAME CONSTANT VARCHAR2(32) := 'START_GRACE_BY_INVOICE_ID';
15:47:52   9  var_subs_id	  SUBSCRIPTION.ID%TYPE;
15:47:52  10  var_lic_id	  LICENSE.ID%TYPE;
15:47:52  11  var_grace_start	  DATE;
15:47:52  12  var_grace_end	  DATE;
15:47:52  13  BEGIN
15:47:52  14  	SELECT
15:47:52  15  	  ID,
15:47:52  16  	  SUBSCRIPTION_ID,
15:47:52  17  	  START_DATE,
15:47:52  18  	  START_DATE + (in_duration_in_hours / 24)
15:47:52  19  	INTO var_lic_id, var_subs_id, var_grace_start, var_grace_end
15:47:52  20  	FROM
15:47:52  21  	  LICENSE
15:47:52  22  	WHERE
15:47:52  23  	  INVOICE_ID = in_invoice_id
15:47:52  24  	  AND ROWNUM <= 1;
15:47:52  25  
15:47:52  26  	PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:52  27  	    in_license_id	    => var_lic_id,
15:47:52  28  	    in_updated_by	    => in_updater,
15:47:52  29  	    in_grace_start_date     => var_grace_start,
15:47:52  30  	    in_grace_end_date	    => var_grace_end,
15:47:52  31  	    in_entitlement_end_date => var_grace_end,
15:47:52  32  	    in_license_status_id    => GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD
15:47:52  33  	);
15:47:52  34  
15:47:52  35  	PROCS_SUBSCRIPTION_CRU_V22.UPDATE_SUBSCRIPTION(
15:47:52  36  	    in_subscription_id	      => var_subs_id,
15:47:52  37  	    in_updated_by	      => in_updater,
15:47:52  38  	    in_subscription_status_id => GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD
15:47:52  39  	  );
15:47:52  40  END START_GRACE_BY_INVOICE_ID;
15:47:52  41  
15:47:52  42  PROCEDURE STOP_GRACE_BY_INVOICE_ID(
15:47:52  43  	in_invoice_id IN LICENSE.INVOICE_ID%TYPE,
15:47:52  44  	in_updater    IN VARCHAR2
15:47:52  45  ) AS
15:47:52  46  SPROC_NAME CONSTANT VARCHAR2(32) := 'START_GRACE_BY_INVOICE_ID';
15:47:52  47  var_subs_id	  SUBSCRIPTION.ID%TYPE;
15:47:52  48  var_lic_id	  LICENSE.ID%TYPE;
15:47:52  49  var_lic_end_date	  DATE;
15:47:52  50  BEGIN
15:47:52  51  	SELECT
15:47:52  52  	  ID,
15:47:52  53  	  SUBSCRIPTION_ID,
15:47:52  54  	  END_DATE
15:47:52  55  	INTO var_lic_id, var_subs_id, var_lic_end_date
15:47:52  56  	FROM
15:47:52  57  	  LICENSE
15:47:52  58  	WHERE
15:47:52  59  	  INVOICE_ID = in_invoice_id
15:47:52  60  	  AND ROWNUM <= 1;
15:47:52  61  
15:47:52  62  	PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:52  63  	    in_license_id	    => var_lic_id,
15:47:52  64  	    in_updated_by	    => in_updater,
15:47:52  65  	    in_grace_end_date	    => SYSDATE,
15:47:52  66  	    in_entitlement_end_date => var_lic_end_date,
15:47:52  67  	    in_license_status_id    => GLOBAL_STATUSES_V22.LICENSE_ACTIVE
15:47:52  68  	);
15:47:52  69  
15:47:52  70  	PROCS_SUBSCRIPTION_CRU_V22.UPDATE_SUBSCRIPTION(
15:47:52  71  	    in_subscription_id	      => var_subs_id,
15:47:52  72  	    in_updated_by	      => in_updater,
15:47:52  73  	    in_subscription_status_id => GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52  74  	);
15:47:52  75  END STOP_GRACE_BY_INVOICE_ID;
15:47:52  76  
15:47:52  77  
15:47:52  78  PROCEDURE START_SUBSCRIPTION_CREATION (
15:47:52  79  	in_group_id	      IN NUMBER,
15:47:52  80  	in_created_by	      IN VARCHAR2,
15:47:52  81  	in_offer_chain_id     IN NUMBER,
15:47:52  82  	in_instrument_type_id IN NUMBER,
15:47:52  83  	in_instrument_id      IN NUMBER,
15:47:52  84  	in_agent_id	      IN NUMBER,
15:47:52  85  	in_note 	      IN VARCHAR2,
15:47:52  86  	out_subscription_id   OUT NUMBER,
15:47:52  87  	out_invoice_id	      OUT NUMBER,
15:47:52  88  	out_new_license_id    OUT NUMBER,
15:47:52  89  	in_check_dupe_products	 IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.TRUE
15:47:52  90  ) AS
15:47:52  91  SPROC_NAME CONSTANT VARCHAR2(27) := 'START_SUBSCRIPTION_CREATION';
15:47:52  92  -- VARIABLES
15:47:52  93  var_account_id		 NUMBER;
15:47:52  94  var_account_status	 NUMBER;
15:47:52  95  var_offer_chain_status_id  NUMBER;
15:47:52  96  var_is_gift_certificate	 NUMBER;
15:47:52  97  var_is_for_redemption	 NUMBER;
15:47:52  98  var_same_offer_chains_num  NUMBER;
15:47:52  99  var_max_concurrent_subscrs NUMBER;
15:47:52 100  var_first_offer_id	 NUMBER;
15:47:52 101  var_new_invoice_id	 NUMBER;
15:47:52 102  var_new_subscription_id	 NUMBER;
15:47:52 103  var_date			 DATE := SYSDATE;
15:47:52 104  var_account_tax_exempt_id  VARCHAR2(255);
15:47:52 105  var_concur_subscription_id NUMBER;
15:47:52 106  -- EXCEPTIONS
15:47:52 107  BAD_GROUP_ID		    EXCEPTION;
15:47:52 108  CAN_NOT_CREATE_FOR_DISABLE    EXCEPTION;
15:47:52 109  BAD_OFFER_CHAIN		    EXCEPTION;
15:47:52 110  BAD_OFFER_CHAIN_STATUS	    EXCEPTION;
15:47:52 111  CAN_NOT_SUBSCRIBE_TO_GC	    EXCEPTION;
15:47:52 112  CAN_NOT_SUBSCRIBE_TO_RGC	    EXCEPTION;
15:47:52 113  LIMIT_REACHED		    EXCEPTION;
15:47:52 114  PRODUCT_ALREADY_PURCHASED     EXCEPTION;
15:47:52 115  CAN_NOT_GET_FIRST_OFFER_CHAIN EXCEPTION;
15:47:52 116  CAN_NOT_CREATE_INVOICE	    EXCEPTION;
15:47:52 117  CAN_NOT_CREATE_LINE_ITEMS     EXCEPTION;
15:47:52 118  CAN_NOT_CREATE_LICENSE	    EXCEPTION;
15:47:52 119  CAN_NOT_CREATE_NOTE	    EXCEPTION;
15:47:52 120  
15:47:52 121  EXCEPTION_MESSAGE VARCHAR2(1024);
15:47:52 122  BEGIN
15:47:52 123  
15:47:52 124  	-- Get account id and status
15:47:52 125  	BEGIN
15:47:52 126  	  SELECT
15:47:52 127  	    ACCOUNT.ID,
15:47:52 128  	    ACCOUNT.ACCOUNT_STATUS_ID,
15:47:52 129  	    ACCOUNT.TAX_EXEMPT_ID
15:47:52 130  	    into
15:47:52 131  	    var_account_id,
15:47:52 132  	    var_account_status,
15:47:52 133  	    var_account_tax_exempt_id
15:47:52 134  	  FROM
15:47:52 135  	    ACCOUNT
15:47:52 136  	  WHERE
15:47:52 137  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:52 138  	  EXCEPTION
15:47:52 139  	  WHEN NO_DATA_FOUND THEN
15:47:52 140  	    RAISE BAD_GROUP_ID;
15:47:52 141  	END;
15:47:52 142  
15:47:52 143  	-- Could not create subscription for disabled account
15:47:52 144  	IF var_account_status = GLOBAL_STATUSES_V22.ACCOUNT_DISABLED THEN
15:47:52 145  	  RAISE CAN_NOT_CREATE_FOR_DISABLE;
15:47:52 146  	END IF;
15:47:52 147  
15:47:52 148  	-- Get offer chain status
15:47:52 149  	BEGIN
15:47:52 150  	  SELECT
15:47:52 151  	    OFFER_CHAIN.OFFER_CHAIN_STATUS_ID,
15:47:52 152  	    OFFER_CHAIN.IS_GIFT_CERTIFICATE
15:47:52 153  	    into
15:47:52 154  	    var_offer_chain_status_id,
15:47:52 155  	    var_is_gift_certificate
15:47:52 156  	  FROM
15:47:52 157  	    OFFER_CHAIN
15:47:52 158  	  WHERE
15:47:52 159  	    OFFER_CHAIN.ID = in_offer_chain_id;
15:47:52 160  
15:47:52 161  	  EXCEPTION
15:47:52 162  	    WHEN NO_DATA_FOUND THEN
15:47:52 163  	      RAISE BAD_OFFER_CHAIN;
15:47:52 164  	END;
15:47:52 165  
15:47:52 166  	-- Could not subscribe to inactive/disabled offer chain
15:47:52 167  	IF var_offer_chain_status_id != GLOBAL_STATUSES_V22.OFFER_CHAIN_ACTIVE THEN
15:47:52 168  	  RAISE BAD_OFFER_CHAIN_STATUS;
15:47:52 169  	END IF;
15:47:52 170  
15:47:52 171  	-- Can not subscribe to Offer Chain for a Gift Certfiicate
15:47:52 172  	IF var_is_gift_certificate = GLOBAL_CONSTANTS_V22.TRUE THEN
15:47:52 173  	  RAISE CAN_NOT_SUBSCRIBE_TO_GC;
15:47:52 174  	END IF;
15:47:52 175  
15:47:52 176  	-- check if the OC is for Redemption:
15:47:52 177  	SELECT
15:47:52 178  	  COUNT(*) into var_is_for_redemption
15:47:52 179  	FROM
15:47:52 180  	  OFFER_CHAIN_ELIGIBILITY
15:47:52 181  	WHERE
15:47:52 182  	  OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID = in_offer_chain_id
15:47:52 183  	  AND OFFER_CHAIN_ELIGIBILITY.NAME = GLOBAL_CONSTANTS_V22.GIFT_CERTIFICATE_REQUIRED
15:47:52 184  	  AND OFFER_CHAIN_ELIGIBILITY.VALUE = GLOBAL_CONSTANTS_V22.ELIGIBILITY_FLAG_SET;
15:47:52 185  
15:47:52 186  	IF var_is_for_redemption > 0 THEN
15:47:52 187  	  RAISE CAN_NOT_SUBSCRIBE_TO_RGC;
15:47:52 188  	END IF;
15:47:52 189  
15:47:52 190  	SELECT
15:47:52 191  	  COUNT(*) into var_same_offer_chains_num
15:47:52 192  	FROM
15:47:52 193  	  SUBSCRIPTION
15:47:52 194  	WHERE
15:47:52 195  	  SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:52 196  	  AND SUBSCRIPTION.OFFER_CHAIN_ID = in_offer_chain_id
15:47:52 197  	  AND (SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 198  	       OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD);
15:47:52 199  
15:47:52 200  	-- ELIGIBILITY LOGIC CHANGED TO:
15:47:52 201  	-- FOR EACH offer chain eligibility rule in OC:
15:47:52 202  	--   IF offer chain eligibility rule fails:
15:47:52 203  	--     deny purchase;
15:47:52 204  	--   END IF
15:47:52 205  	-- END FOR
15:47:52 206  	-- FOR EACH product eligibility rule in OC:
15:47:52 207  	--   IF product eligibilty rule fails:
15:47:52 208  	--     deny purchase;
15:47:52 209  	--   END IF
15:47:52 210  	-- END FOR
15:47:52 211  	-- allow purchase;
15:47:52 212  
15:47:52 213  	-- if user have any active existing subscriptions to the offer chain
15:47:52 214  	-- and if MAX_CONCURRENT_SUBS <= [user's subscription count for the offer chain]
15:47:52 215  	-- then deny purchase
15:47:52 216  	var_max_concurrent_subscrs := PROCS_OFFER_CHAIN_V22.GET_OFFER_CHAIN_MAX_CONC_SUBSC(in_offer_chain_id);
15:47:52 217  	IF var_max_concurrent_subscrs != GLOBAL_CONSTANTS_V22.INFINITY
15:47:52 218  	  AND var_max_concurrent_subscrs <= var_same_offer_chains_num THEN
15:47:52 219  	  -- Find first concurrent subscription id:
15:47:52 220  	  SELECT
15:47:52 221  	    ID into var_concur_subscription_id
15:47:52 222  	  FROM (
15:47:52 223  	    SELECT
15:47:52 224  	      ID
15:47:52 225  	    FROM
15:47:52 226  	      SUBSCRIPTION
15:47:52 227  	    WHERE
15:47:52 228  	      SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:52 229  	      AND SUBSCRIPTION.OFFER_CHAIN_ID = in_offer_chain_id
15:47:52 230  	      AND (SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 231  		   OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD)
15:47:52 232  	    ORDER BY
15:47:52 233  	      ID
15:47:52 234  	  )
15:47:52 235  	  WHERE
15:47:52 236  	    ROWNUM <= 1;
15:47:52 237  	  RAISE LIMIT_REACHED;
15:47:52 238  	END IF;
15:47:52 239  
15:47:52 240  	-- if user does not have any active existing subscriptions to the offer chain
15:47:52 241  	-- and if product from the offer chain is already owned from another offer chain
15:47:52 242  	-- then deny purchase
15:47:52 243  	IF (in_check_dupe_products != GLOBAL_CONSTANTS_V22.FALSE) THEN
15:47:52 244  	  FOR f_account_offer_chains IN (
15:47:52 245  	    SELECT DISTINCT
15:47:52 246  	      OFFER_CHAIN_ID
15:47:52 247  	    FROM
15:47:52 248  	      SUBSCRIPTION
15:47:52 249  	    WHERE
15:47:52 250  	      ACCOUNT_ID = var_account_id
15:47:52 251  	      AND (
15:47:52 252  		SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 253  		OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED
15:47:52 254  		OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD)
15:47:52 255  	  )
15:47:52 256  	  LOOP
15:47:52 257  	    IF PROCS_OFFER_CHAIN_V22.CHECK_FOR_SAME_PRODUCTS(
15:47:52 258  	      in_offer_chain_1	       => in_offer_chain_id,
15:47:52 259  	      in_offer_chain_2	       => f_account_offer_chains.OFFER_CHAIN_ID,
15:47:52 260  	      in_use_eligibility_rules => GLOBAL_CONSTANTS_V22.TRUE
15:47:52 261  	    ) = GLOBAL_CONSTANTS_V22.TRUE THEN
15:47:52 262  
15:47:52 263  	      -- Find first concurrent subscription id:
15:47:52 264  	      SELECT
15:47:52 265  		ID into var_concur_subscription_id
15:47:52 266  	      FROM (
15:47:52 267  		SELECT
15:47:52 268  		  ID
15:47:52 269  		FROM
15:47:52 270  		  SUBSCRIPTION
15:47:52 271  		WHERE
15:47:52 272  		  SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:52 273  		  AND SUBSCRIPTION.OFFER_CHAIN_ID = f_account_offer_chains.OFFER_CHAIN_ID
15:47:52 274  		  AND (
15:47:52 275  		    SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 276  		    OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED
15:47:52 277  		    OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD)
15:47:52 278  		ORDER BY
15:47:52 279  		  ID
15:47:52 280  	      )
15:47:52 281  	      WHERE
15:47:52 282  		ROWNUM <= 1;
15:47:52 283  
15:47:52 284  	      RAISE PRODUCT_ALREADY_PURCHASED;
15:47:52 285  	    END IF;
15:47:52 286  	  END LOOP;
15:47:52 287  	END IF;
15:47:52 288  
15:47:52 289  	BEGIN
15:47:52 290  	  PROCS_OFFER_CHAIN_V22.GET_FIRST_OFFER(in_offer_chain_id, var_first_offer_id);
15:47:52 291  	  EXCEPTION
15:47:52 292  	    WHEN OTHERS THEN
15:47:52 293  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 294  	      RAISE CAN_NOT_GET_FIRST_OFFER_CHAIN;
15:47:52 295  	END;
15:47:52 296  
15:47:52 297  	BEGIN
15:47:52 298  	  PROCS_INVOICE_V22.CREATE_INVOICE(
15:47:52 299  	    in_invoice_status => GLOBAL_STATUSES_V22.INVOICE_OPEN,
15:47:52 300  	    in_created_by     => in_created_by,
15:47:52 301  	    in_tax_exempt_id  => var_account_tax_exempt_id,
15:47:52 302  	    out_invoice_id    => var_new_invoice_id
15:47:52 303  	  );
15:47:52 304  	  EXCEPTION
15:47:52 305  	    WHEN OTHERS THEN
15:47:52 306  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 307  	      RAISE CAN_NOT_CREATE_INVOICE;
15:47:52 308  	END;
15:47:52 309  
15:47:52 310  	BEGIN
15:47:52 311  	  PROCS_LINE_ITEMS_V22.ADD_LINE_ITEMS(
15:47:52 312  	    in_invoice_id => var_new_invoice_id,
15:47:52 313  	    in_offer_id   => var_first_offer_id,
15:47:52 314  	    in_created_by => in_created_by
15:47:52 315  	  );
15:47:52 316  	  EXCEPTION
15:47:52 317  	    WHEN OTHERS THEN
15:47:52 318  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 319  	      RAISE CAN_NOT_CREATE_LINE_ITEMS;
15:47:52 320  	END;
15:47:52 321  
15:47:52 322  	PROCS_SUBSCRIPTION_CRU_V22.CREATE_SUBSCRIPTION(
15:47:52 323  	  out_subscription_id	    => var_new_subscription_id,
15:47:52 324  	  in_account_id 	    => var_account_id,
15:47:52 325  	  in_purchase_date	    => var_date,
15:47:52 326  	  in_offer_chain_id	    => in_offer_chain_id,
15:47:52 327  	  in_created_by 	    => in_created_by,
15:47:52 328  	  in_instrument_type_id     => in_instrument_type_id,
15:47:52 329  	  in_instrument_id	    => in_instrument_id,
15:47:52 330  	  in_subscription_status_id => GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 331  	);
15:47:52 332  
15:47:52 333  	BEGIN
15:47:52 334  	  PROCS_SUBSCRIPTION_V22.ANNOTATE_SUBSCRIPTION(
15:47:52 335  	    in_subscription_id => var_new_subscription_id,
15:47:52 336  	    in_agent_id        => in_agent_id,
15:47:52 337  	    in_note	       => in_note,
15:47:52 338  	    in_created_by      => in_created_by
15:47:52 339  	  );
15:47:52 340  	  EXCEPTION
15:47:52 341  	   WHEN OTHERS THEN
15:47:52 342  	     EXCEPTION_MESSAGE := SQLERRM;
15:47:52 343  	     RAISE CAN_NOT_CREATE_NOTE;
15:47:52 344  	END;
15:47:52 345  
15:47:52 346  	BEGIN
15:47:52 347  	  PROCS_LICENSE_V22.CREATE_LICENSE(
15:47:52 348  	    in_status_id		=> GLOBAL_STATUSES_V22.LICENSE_ACTIVE,
15:47:52 349  	    in_needs_entitlements	=> GLOBAL_CONSTANTS_V22.TRUE,
15:47:52 350  	    in_start_date		=> var_date,
15:47:52 351  	    in_end_date 		=> NULL, -- Will be calculated automatically
15:47:52 352  	    in_offer_id 		=> var_first_offer_id,
15:47:52 353  	    in_subscription_id		=> var_new_subscription_id,
15:47:52 354  	    in_invoice_id		=> var_new_invoice_id,
15:47:52 355  	    in_created_by		=> in_created_by,
15:47:52 356  	    in_is_extension		=> GLOBAL_CONSTANTS_V22.FALSE,
15:47:52 357  	    in_current_offer_index	=> PROCS_OFFER_CHAIN_V22.GET_FIRST_OFFER_INDEX(in_offer_chain_id),
15:47:52 358  	    in_current_offer_recurr_num => 1,
15:47:52 359  	    out_license_id		=> out_new_license_id
15:47:52 360  	  );
15:47:52 361  	  EXCEPTION
15:47:52 362  	    WHEN OTHERS THEN
15:47:52 363  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 364  	      RAISE CAN_NOT_CREATE_LICENSE;
15:47:52 365  	END;
15:47:52 366  
15:47:52 367  	out_subscription_id := var_new_subscription_id;
15:47:52 368  	out_invoice_id := var_new_invoice_id;
15:47:52 369  
15:47:52 370  EXCEPTION
15:47:52 371  WHEN BAD_OFFER_CHAIN_STATUS THEN
15:47:52 372  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 373  	  SPROC_NAME, 'Offer chain is not active');
15:47:52 374  WHEN LIMIT_REACHED THEN
15:47:52 375  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.CONFLICT_ERROR,
15:47:52 376  	  SPROC_NAME, 'Limit reached for given offer chain. Concurrent subscription id: ' || var_concur_subscription_id);
15:47:52 377  WHEN CAN_NOT_CREATE_FOR_DISABLE THEN
15:47:52 378  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 379  	  SPROC_NAME, 'Can not create subsscription for disabled account');
15:47:52 380  WHEN CAN_NOT_SUBSCRIBE_TO_GC THEN
15:47:52 381  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 382  	  SPROC_NAME, 'Can not subscribe to Offer Chain for Gift Certificate');
15:47:52 383  WHEN CAN_NOT_SUBSCRIBE_TO_RGC THEN
15:47:52 384  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 385  	  SPROC_NAME, 'Can not subscribe to Offer Chain that is for redemption');
15:47:52 386  WHEN BAD_OFFER_CHAIN THEN
15:47:52 387  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 388  	  SPROC_NAME, 'No such offer chain');
15:47:52 389  WHEN PRODUCT_ALREADY_PURCHASED THEN
15:47:52 390  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.CONFLICT_ERROR,
15:47:52 391  	  SPROC_NAME, 'User already subscribed to some product in given offer chain. Concurrent subscription id: ' || var_concur_subscription_id);
15:47:52 392  WHEN CAN_NOT_GET_FIRST_OFFER_CHAIN THEN
15:47:52 393  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 394  	  SPROC_NAME, 'Could not find first offer in offer chain', EXCEPTION_MESSAGE);
15:47:52 395  WHEN CAN_NOT_CREATE_INVOICE THEN
15:47:52 396  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 397  	  SPROC_NAME, 'Could not create invoice', EXCEPTION_MESSAGE);
15:47:52 398  WHEN CAN_NOT_CREATE_LINE_ITEMS THEN
15:47:52 399  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 400  	  SPROC_NAME, 'Could not create line items', EXCEPTION_MESSAGE);
15:47:52 401  WHEN CAN_NOT_CREATE_LICENSE THEN
15:47:52 402  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 403  	  SPROC_NAME, 'Could not create new license', EXCEPTION_MESSAGE);
15:47:52 404  WHEN BAD_GROUP_ID THEN
15:47:52 405  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 406  	  SPROC_NAME, 'Bad group id');
15:47:52 407  WHEN CAN_NOT_CREATE_NOTE THEN
15:47:52 408  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 409  	  SPROC_NAME, 'Could not annotate subscription', EXCEPTION_MESSAGE);
15:47:52 410  WHEN OTHERS THEN
15:47:52 411  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 412  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 413  END START_SUBSCRIPTION_CREATION;
15:47:52 414  
15:47:52 415  /******************************************************************************/
15:47:52 416  
15:47:52 417  PROCEDURE FINALIZE_SUBSCRIPTION_CREATION (
15:47:52 418  	in_subscription_id    IN NUMBER,
15:47:52 419  	in_invoice_id	      IN NUMBER,
15:47:52 420  	in_instrument_type_id IN NUMBER,
15:47:52 421  	in_instrument_id      IN NUMBER,
15:47:52 422  	in_created_by	      IN VARCHAR2
15:47:52 423  ) AS
15:47:52 424  SPROC_NAME CONSTANT VARCHAR2(30) := 'FINALIZE_SUBSCRIPTION_CREATION';
15:47:52 425  -- VARIABLES
15:47:52 426  var_invoice_amount     NUMBER(10, 2);
15:47:52 427  var_new_transaction_id NUMBER;
15:47:52 428  var_new_charge_id      NUMBER;
15:47:52 429  -- EXCEPTIONS
15:47:52 430  CAN_NOT_USE_FCINSTR	  EXCEPTION;
15:47:52 431  CAN_NOT_CALC_INVOICE_AMOUNT EXCEPTION;
15:47:52 432  CAN_NOT_CREATE_TRANSACTION  EXCEPTION;
15:47:52 433  CAN_NOT_CREATE_CHARGE	  EXCEPTION;
15:47:52 434  
15:47:52 435  EXCEPTION_MESSAGE VARCHAR2(1024);
15:47:52 436  BEGIN
15:47:52 437  
15:47:52 438  	-- Calculate invoice amount ( + discounts, taxes)
15:47:52 439  	BEGIN
15:47:52 440  	  PROCS_INVOICE_V22.CALCULATE_INVOICE_AMOUNT(
15:47:52 441  	    in_invoice_id => in_invoice_id,
15:47:52 442  	    out_amount	  => var_invoice_amount
15:47:52 443  	  );
15:47:52 444  	  EXCEPTION
15:47:52 445  	   WHEN OTHERS THEN
15:47:52 446  	     EXCEPTION_MESSAGE := SQLERRM;
15:47:52 447  	     RAISE CAN_NOT_CALC_INVOICE_AMOUNT;
15:47:52 448  	END;
15:47:52 449  
15:47:52 450  	IF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_ZCI_INSTRUMENT
15:47:52 451  	  AND var_invoice_amount > 0 THEN
15:47:52 452  	  RAISE CAN_NOT_USE_FCINSTR;
15:47:52 453  	END IF;
15:47:52 454  
15:47:52 455  	IF var_invoice_amount = 0 THEN
15:47:52 456  	  -- UPDATE INVOICE. SET STATUS TO PROCESSED
15:47:52 457  	  PROCS_INVOICE_CRU_V22.UPDATE_INVOICE(
15:47:52 458  	    in_invoice_id		   => in_invoice_id,
15:47:52 459  	    in_updated_by		   => in_created_by,
15:47:52 460  	    in_invoice_status_id	   => GLOBAL_STATUSES_V22.INVOICE_CLOSED
15:47:52 461  	  );
15:47:52 462  	ELSE
15:47:52 463  	  -- Create transaction and charge
15:47:52 464  	  BEGIN
15:47:52 465  	    PROCS_TRANSACTION_V22.CREATE_TRANSACTION(
15:47:52 466  	      in_transaction_id 	=> NULL,
15:47:52 467  	      in_status_id		=> GLOBAL_STATUSES_V22.TRANSACTION_PENDING,
15:47:52 468  	      in_amount 		=> var_invoice_amount,
15:47:52 469  	      in_created_by		=> in_created_by,
15:47:52 470  	      in_order_id		=> NULL,
15:47:52 471  	      in_transaction_type_code	=> 'START_SUBSCRIPTION',
15:47:52 472  	      out_transaction_id	=> var_new_transaction_id
15:47:52 473  	    );
15:47:52 474  	    EXCEPTION
15:47:52 475  	      WHEN OTHERS THEN
15:47:52 476  		EXCEPTION_MESSAGE := SQLERRM;
15:47:52 477  		RAISE CAN_NOT_CREATE_TRANSACTION;
15:47:52 478  	  END;
15:47:52 479  
15:47:52 480  	  BEGIN
15:47:52 481  	    PROCS_CHARGE_V22.CREATE_CHARGE(
15:47:52 482  	      in_invoice_id	    => in_invoice_id,
15:47:52 483  	      in_transaction_id     => var_new_transaction_id,
15:47:52 484  	      in_instrument_type_id => in_instrument_type_id,
15:47:52 485  	      in_instrument_id	    => in_instrument_id,
15:47:52 486  	      in_charge_amount	    => var_invoice_amount,
15:47:52 487  	      in_created_by	    => in_created_by,
15:47:52 488  	      in_charge_status_id   => GLOBAL_STATUSES_V22.CHARGE_OPENED,
15:47:52 489  	      out_charge_id	    => var_new_charge_id
15:47:52 490  	    );
15:47:52 491  	    EXCEPTION
15:47:52 492  	      WHEN OTHERS THEN
15:47:52 493  		EXCEPTION_MESSAGE := SQLERRM;
15:47:52 494  		RAISE CAN_NOT_CREATE_CHARGE;
15:47:52 495  	  END;
15:47:52 496  	END IF;
15:47:52 497  
15:47:52 498  EXCEPTION
15:47:52 499  WHEN CAN_NOT_USE_FCINSTR THEN
15:47:52 500  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 501  	  SPROC_NAME, 'Could not use "free charge instrument" for non-zero invoice');
15:47:52 502  WHEN CAN_NOT_CALC_INVOICE_AMOUNT THEN
15:47:52 503  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 504  	  SPROC_NAME, 'Could not calculate invoice amount', EXCEPTION_MESSAGE);
15:47:52 505  WHEN CAN_NOT_CREATE_TRANSACTION THEN
15:47:52 506  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 507  	  SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
15:47:52 508  WHEN CAN_NOT_CREATE_CHARGE THEN
15:47:52 509  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 510  	  SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
15:47:52 511  WHEN OTHERS THEN
15:47:52 512  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 513  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 514  END FINALIZE_SUBSCRIPTION_CREATION;
15:47:52 515  
15:47:52 516  /******************************************************************************/
15:47:52 517  
15:47:52 518  PROCEDURE SUSPEND_SUBSCRIPTION(
15:47:52 519  /*
15:47:52 520  Throws exceptions:
15:47:52 521  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 522  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:52 523  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 524  */
15:47:52 525  	  in_subs_id	IN NUMBER,
15:47:52 526  	  in_updated_by IN VARCHAR2
15:47:52 527  ) AS
15:47:52 528  SPROC_NAME		  CONSTANT VARCHAR2(20) := 'SUSPEND_SUBSCRIPTION';
15:47:52 529  var_subscription_status_id  NUMBER;
15:47:52 530  var_license_id		  NUMBER;
15:47:52 531  var_offer_id		  NUMBER;
15:47:52 532  var_license_start_date	  DATE;
15:47:52 533  var_license_end_date	  DATE;
15:47:52 534  
15:47:52 535  var_entitlement_dupration   VARCHAR2(30);
15:47:52 536  var_d_entitlement_dupration NUMBER;
15:47:52 537  
15:47:52 538  var_ym_interval INTERVAL YEAR TO MONTH;
15:47:52 539  var_ds_interval INTERVAL DAY(3) TO SECOND;
15:47:52 540  
15:47:52 541  -- EXCEPTIONS
15:47:52 542  BAD_SUBSCRIPTION_ID     EXCEPTION;
15:47:52 543  BAD_SUBSCRIPTION_STATUS EXCEPTION;
15:47:52 544  NO_LICENSE_FOUND	      EXCEPTION;
15:47:52 545  NO_OFFER_FOUND	      EXCEPTION;
15:47:52 546  EXCEPTION_MESSAGE       VARCHAR2(1024);
15:47:52 547  BEGIN
15:47:52 548  	-- TODO: Finish this prcedure (in Phase II)
15:47:52 549  
15:47:52 550  	-- Get subscription by id. FAULT if no such subscription.
15:47:52 551  	-- begin TX
15:47:52 552  	--   Get for update associated license (subscription.license_id). FAULT if not found.
15:47:52 553  	--   Set status to PROCESSED.
15:47:52 554  	--   updated record.
15:47:52 555  	--   compute days remaining in the subscription: original end_date - today = days_remaining_adjustment
15:47:52 556  	--   new subscription status is SUSPENDED.
15:47:52 557  	--   suspend_date is now.
15:47:52 558  	--   update subscription record.
15:47:52 559  	-- end TX
15:47:52 560  
15:47:52 561  	BEGIN
15:47:52 562  	  SELECT
15:47:52 563  	    SUBSCRIPTION.SUBSCRIPTION_STATUS_ID into var_subscription_status_id
15:47:52 564  	  FROM
15:47:52 565  	    SUBSCRIPTION
15:47:52 566  	  WHERE
15:47:52 567  	    SUBSCRIPTION.ID = in_subs_id;
15:47:52 568  	  EXCEPTION
15:47:52 569  	  WHEN NO_DATA_FOUND THEN
15:47:52 570  	    RAISE BAD_SUBSCRIPTION_ID;
15:47:52 571  	END;
15:47:52 572  
15:47:52 573  	IF var_subscription_status_id != GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE THEN
15:47:52 574  	  RAISE BAD_SUBSCRIPTION_STATUS;
15:47:52 575  	END IF;
15:47:52 576  
15:47:52 577  	BEGIN
15:47:52 578  	  SELECT
15:47:52 579  	    LICENSE.ID,
15:47:52 580  	    LICENSE.OFFER_ID,
15:47:52 581  	    LICENSE.START_DATE
15:47:52 582  	    into
15:47:52 583  	    var_license_id,
15:47:52 584  	    var_offer_id,
15:47:52 585  	    var_license_start_date
15:47:52 586  	  FROM
15:47:52 587  	    LICENSE
15:47:52 588  	  WHERE
15:47:52 589  	    LICENSE.SUBSCRIPTION_ID = in_subs_id
15:47:52 590  	      AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE;
15:47:52 591  	  EXCEPTION
15:47:52 592  	  WHEN NO_DATA_FOUND THEN
15:47:52 593  	    RAISE NO_LICENSE_FOUND;
15:47:52 594  	END;
15:47:52 595  
15:47:52 596  	PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:52 597  	  in_license_id        => var_license_id,
15:47:52 598  	  in_updated_by        => in_updated_by,
15:47:52 599  	  in_license_status_id => GLOBAL_STATUSES_V22.LICENSE_CLOSED
15:47:52 600  	);
15:47:52 601  
15:47:52 602  	BEGIN
15:47:52 603  	  SELECT
15:47:52 604  	    OFFER.ENTITLEMENT_DURATION into var_entitlement_dupration
15:47:52 605  	  FROM
15:47:52 606  	    OFFER
15:47:52 607  	  WHERE
15:47:52 608  	    OFFER.ID = var_offer_id;
15:47:52 609  	  EXCEPTION
15:47:52 610  	  WHEN NO_DATA_FOUND THEN
15:47:52 611  	    RAISE NO_OFFER_FOUND;
15:47:52 612  	END;
15:47:52 613  
15:47:52 614  	var_ym_interval := substr(var_entitlement_dupration, 0, 4);
15:47:52 615  	var_ds_interval := substr(var_entitlement_dupration, 4);
15:47:52 616  
15:47:52 617  	var_license_end_date := var_license_start_date + var_ym_interval + var_ds_interval;
15:47:52 618  
15:47:52 619  	var_d_entitlement_dupration := var_license_end_date - current_date;
15:47:52 620  
15:47:52 621  	PROCS_SUBSCRIPTION_CRU_V22.UPDATE_SUBSCRIPTION(
15:47:52 622  	  in_subscription_id	       => in_subs_id,
15:47:52 623  	  in_updated_by 	       => in_updated_by,
15:47:52 624  	  in_suspend_date	       => SYSDATE,
15:47:52 625  	  in_subscription_status_id    => GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED,
15:47:52 626  	  in_days_remainning_ajustment => var_d_entitlement_dupration
15:47:52 627  	);
15:47:52 628  
15:47:52 629  EXCEPTION
15:47:52 630  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 631  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 632  	  SPROC_NAME, 'No such subscription');
15:47:52 633  WHEN BAD_SUBSCRIPTION_STATUS THEN
15:47:52 634  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 635  	  SPROC_NAME, 'Subscription is not active');
15:47:52 636  WHEN NO_LICENSE_FOUND THEN
15:47:52 637  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 638  	  SPROC_NAME, 'Can not find license associated with given subscription ID');
15:47:52 639  WHEN NO_OFFER_FOUND THEN
15:47:52 640  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 641  	  SPROC_NAME, 'Can not find offer associated with given subscription ID');
15:47:52 642  WHEN OTHERS THEN
15:47:52 643  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 644  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 645  END SUSPEND_SUBSCRIPTION;
15:47:52 646  
15:47:52 647  /******************************************************************************/
15:47:52 648  
15:47:52 649  PROCEDURE REACTIVATE_SUBSCRIPTION (
15:47:52 650  	in_subscription_id IN  NUMBER,
15:47:52 651  	in_updated_by	   IN  VARCHAR2
15:47:52 652  ) AS
15:47:52 653  BEGIN
15:47:52 654  	-- TODO: finish this function (in Phase II)
15:47:52 655  	NULL;
15:47:52 656  END REACTIVATE_SUBSCRIPTION;
15:47:52 657  
15:47:52 658  /******************************************************************************/
15:47:52 659  
15:47:52 660  PROCEDURE GET_SUBSCRIPTION_INFO (
15:47:52 661  /*
15:47:52 662  Throws exceptions:
15:47:52 663  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 664  */
15:47:52 665  	  in_subscription_id  IN  NUMBER,
15:47:52 666  	  out_result_set      OUT SYS_REFCURSOR
15:47:52 667  ) AS
15:47:52 668  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_SUBSCRIPTION_INFO';
15:47:52 669  -- VARIABLES
15:47:52 670  temp_subscription_id NUMBER;
15:47:52 671  -- EXCEPTIONS
15:47:52 672  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 673  BEGIN
15:47:52 674  	-- Find subscription by id
15:47:52 675  	-- Return its details
15:47:52 676  
15:47:52 677  	BEGIN
15:47:52 678  	  SELECT
15:47:52 679  	    SUBSCRIPTION.ID into temp_subscription_id
15:47:52 680  	  FROM
15:47:52 681  	    SUBSCRIPTION
15:47:52 682  	  WHERE
15:47:52 683  	    SUBSCRIPTION.ID = in_subscription_id;
15:47:52 684  	  EXCEPTION
15:47:52 685  	    WHEN NO_DATA_FOUND THEN
15:47:52 686  	      RAISE BAD_SUBSCRIPTION_ID;
15:47:52 687  	END;
15:47:52 688  
15:47:52 689  	OPEN out_result_set FOR
15:47:52 690  	SELECT
15:47:52 691  	  SUBSCRIPTION.ID AS "SUBSCRIPTION_ID",
15:47:52 692  	  SUBSCRIPTION.SUBSCRIPTION_STATUS_ID,
15:47:52 693  	  SUBSCRIPTION.PURCHASE_DATE,
15:47:52 694  	  SUBSCRIPTION.SUSPEND_DATE,
15:47:52 695  	  SUBSCRIPTION.REACTIVATION_DATE,
15:47:52 696  	  SUBSCRIPTION.CANCELLATION_DATE,
15:47:52 697  	  SUBSCRIPTION_CANCEL_REASON.VALUE as "CANCEL_TYPE",
15:47:52 698  	  OFFER_CHAIN.ID AS "OFFER_CHAIN_ID",
15:47:52 699  	  OFFER_CHAIN.NAME,
15:47:52 700  	  OFFER_CHAIN.DESCRIPTION,
15:47:52 701  	  OFFER_CHAIN.PRODUCT_URI,
15:47:52 702  	  SUBSCRIPTION.INSTRUMENT_ID,
15:47:52 703  	  SUBSCRIPTION.INSTRUMENT_TYPE_ID,
15:47:52 704  	  PROCS_SUBSCRIPTION_V22.CALC_SUBSCRIPTION_END_DATE(SUBSCRIPTION.ID) as "END_DATE",
15:47:52 705  	  PROCS_SUBSCRIPTION_V22.GET_RECENT_CHARGE(SUBSCRIPTION.ID) AS "RECENT_CHARGE",
15:47:52 706  	  PROCS_SUBSCRIPTION_V22.GET_RENEWAL_DATE(SUBSCRIPTION.ID) AS "RENEWAL_DATE",
15:47:52 707  	  PROCS_SUBSCRIPTION_V22.GET_BILLING_CYCLE(SUBSCRIPTION.ID) AS "BILLING_CYCLE",
15:47:52 708  	  (
15:47:52 709  	    SELECT
15:47:52 710  	      ACCOUNT.GROUP_ID
15:47:52 711  	      FROM ACCOUNT
15:47:52 712  	      WHERE ACCOUNT.ID = SUBSCRIPTION.ACCOUNT_ID
15:47:52 713  	  ) as "GROUP_ID",
15:47:52 714  	  (
15:47:52 715  	    SELECT
15:47:52 716  	      MAX(ENTITLEMENT_END_DATE)
15:47:52 717  	      FROM LICENSE
15:47:52 718  	      WHERE LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:52 719  	  )
15:47:52 720  	  as "ENT_END_DATE",
15:47:52 721  	  (
15:47:52 722  	    SELECT
15:47:52 723  	      MIN(START_DATE)
15:47:52 724  	      FROM LICENSE
15:47:52 725  	      WHERE LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:52 726  	  )
15:47:52 727  	  as "ENT_START_DATE",
15:47:52 728  	  PROCS_SUBSCRIPTION_V22.IS_SUBSCRIPTION_CANCELABLE(SUBSCRIPTION.ID) AS "IS_CANCELABLE",
15:47:52 729  	  ITUNES_RECEIPT.ID AS "ITUNES_RECEIPT_ID",
15:47:52 730  	  GROUP_ACCOUNT.ID GA_ID,
15:47:52 731  	  GROUP_ACCOUNT.SUBSCRIPTION_ID GA_SUBSCRIPTION_ID,
15:47:52 732  	  GROUP_ACCOUNT.GROUP_NAME GA_GROUP_NAME,
15:47:52 733  	  GROUP_ACCOUNT.FIRST_NAME GA_FIRST_NAME,
15:47:52 734  	  GROUP_ACCOUNT.LAST_NAME GA_LAST_NAME,
15:47:52 735  	  GROUP_ACCOUNT.EMAIL GA_EMAIL,
15:47:52 736  	  GROUP_ACCOUNT.PHONE GA_PHONE,
15:47:52 737  	  GROUP_ACCOUNT.ORGANIZATION_TYPE GA_ORGANIZATION_TYPE,
15:47:52 738  	  GROUP_ACCOUNT.SEATS GA_SEATS,
15:47:52 739  	  PROCS_GROUP_ACCOUNT_V22.F_GET_NUM_OCCUPIED_GROUP_SEATS(GROUP_ACCOUNT.ID) GA_SEATS_USED,
15:47:52 740  	  GROUP_ACCOUNT.IP GA_IP,
15:47:52 741  	  PROCS_SUBSCRIPTION_V22.GET_GIFT_CERT_CODE_BY_SUB_ID(SUBSCRIPTION.ID) gift_certificate_code,
15:47:52 742  	  PROCS_ACCOUNT_V22.GET_GRACE_START_DATE(SUBSCRIPTION.ID) GRACE_START_DATE,
15:47:52 743  	  PROCS_ACCOUNT_V22.GET_GRACE_END_DATE(SUBSCRIPTION.ID) GRACE_END_DATE
15:47:52 744  	FROM
15:47:52 745  	  SUBSCRIPTION
15:47:52 746  	  INNER JOIN OFFER_CHAIN ON SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:52 747  	  LEFT JOIN SUBSCRIPTION_CANCEL_REASON ON SUBSCRIPTION.SCT_ID = SUBSCRIPTION_CANCEL_REASON.ID
15:47:52 748  	  LEFT JOIN ITUNES_RECEIPT ON SUBSCRIPTION.ID = ITUNES_RECEIPT.SUBSCRIPTION_ID
15:47:52 749  	  LEFT JOIN GROUP_ACCOUNT ON SUBSCRIPTION.ID = GROUP_ACCOUNT.SUBSCRIPTION_ID
15:47:52 750  	WHERE
15:47:52 751  	  SUBSCRIPTION.ID = in_subscription_id;
15:47:52 752  
15:47:52 753  EXCEPTION
15:47:52 754  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 755  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 756  	  SPROC_NAME, 'No such subscription');
15:47:52 757  WHEN OTHERS THEN
15:47:52 758  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 759  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 760  END GET_SUBSCRIPTION_INFO;
15:47:52 761  
15:47:52 762  /******************************************************************************/
15:47:52 763  
15:47:52 764  PROCEDURE GET_SUBSCRIPTION_INVOICES (
15:47:52 765  /*
15:47:52 766  Throws exceptions:
15:47:52 767  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 768  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 769  */
15:47:52 770  	in_subscription_id  IN	NUMBER,
15:47:52 771  	out_result_set	    OUT SYS_REFCURSOR
15:47:52 772  ) AS
15:47:52 773  SPROC_NAME	   CONSTANT VARCHAR2(25) := 'GET_SUBSCRIPTION_INVOICES';
15:47:52 774  temp_subscription_id NUMBER;
15:47:52 775  BEGIN
15:47:52 776  	-- Note: A subscription has one or more associated licenses, each of which has an associated invoice.
15:47:52 777  	-- Find associated LICENSES for the subscription by "LICENSE.subscription_id"
15:47:52 778  	--   for each license
15:47:52 779  	--     get associated invoice
15:47:52 780  	--     add to results list
15:47:52 781  	--   end loop
15:47:52 782  	-- end
15:47:52 783  
15:47:52 784  	SELECT
15:47:52 785  	  SUBSCRIPTION.ID into temp_subscription_id
15:47:52 786  	FROM
15:47:52 787  	  SUBSCRIPTION
15:47:52 788  	WHERE
15:47:52 789  	  SUBSCRIPTION.ID = in_subscription_id;
15:47:52 790  
15:47:52 791  	OPEN out_result_set FOR
15:47:52 792  	SELECT
15:47:52 793  	  INVOICE.ID,
15:47:52 794  	  INVOICE.INVOICE_STATUS_ID,
15:47:52 795  	  INVOICE.CREATE_DATE,
15:47:52 796  	  INVOICE.CREATED_BY,
15:47:52 797  	  INVOICE.UPDATE_DATE,
15:47:52 798  	  INVOICE.UPDATED_BY,
15:47:52 799  	  INVOICE.TAX_EXEMPT_ID
15:47:52 800  	FROM
15:47:52 801  	  LICENSE
15:47:52 802  	    INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
15:47:52 803  	WHERE
15:47:52 804  	  LICENSE.SUBSCRIPTION_ID = in_subscription_id;
15:47:52 805  
15:47:52 806  EXCEPTION
15:47:52 807  WHEN NO_DATA_FOUND THEN
15:47:52 808  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 809  	  SPROC_NAME, 'Could not find subscription with given ID');
15:47:52 810  WHEN OTHERS THEN
15:47:52 811  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 812  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 813  END GET_SUBSCRIPTION_INVOICES;
15:47:52 814  
15:47:52 815  /******************************************************************************/
15:47:52 816  
15:47:52 817  PROCEDURE GET_SUBSCRIPTION_NOTES (
15:47:52 818  /*
15:47:52 819  Throws exceptions:
15:47:52 820  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 821  */
15:47:52 822  	in_subscription_id  IN	NUMBER,
15:47:52 823  	out_result_set	    OUT SYS_REFCURSOR
15:47:52 824  ) AS
15:47:52 825  -- VARIABLES
15:47:52 826  SPROC_NAME	   CONSTANT VARCHAR2(22) := 'GET_SUBSCRIPTION_NOTES';
15:47:52 827  temp_subscription_id NUMBER;
15:47:52 828  -- EXCEPTIONS
15:47:52 829  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 830  BEGIN
15:47:52 831  
15:47:52 832  	-- Check that subscription exists
15:47:52 833  	BEGIN
15:47:52 834  	  SELECT
15:47:52 835  	    SUBSCRIPTION.ID into temp_subscription_id
15:47:52 836  	  FROM
15:47:52 837  	    SUBSCRIPTION
15:47:52 838  	  WHERE
15:47:52 839  	    SUBSCRIPTION.ID = in_subscription_id;
15:47:52 840  	  EXCEPTION
15:47:52 841  	    WHEN NO_DATA_FOUND THEN
15:47:52 842  	      RAISE BAD_SUBSCRIPTION_ID;
15:47:52 843  	END;
15:47:52 844  
15:47:52 845  	OPEN out_result_set FOR
15:47:52 846  	SELECT
15:47:52 847  	  SUBSCRIPTION_NOTE.NOTE,
15:47:52 848  	  SUBSCRIPTION_NOTE.CREATED_BY,
15:47:52 849  	  SUBSCRIPTION_NOTE.CREATE_DATE
15:47:52 850  	FROM
15:47:52 851  	  SUBSCRIPTION_NOTE
15:47:52 852  	WHERE
15:47:52 853  	  SUBSCRIPTION_NOTE.SUBSCRIPTION_ID = in_subscription_id
15:47:52 854  	ORDER BY
15:47:52 855  	  SUBSCRIPTION_NOTE.CREATE_DATE ASC;
15:47:52 856  
15:47:52 857  EXCEPTION
15:47:52 858  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 859  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 860  	  SPROC_NAME, 'No such subscription');
15:47:52 861  WHEN OTHERS THEN
15:47:52 862  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 863  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 864  END GET_SUBSCRIPTION_NOTES;
15:47:52 865  
15:47:52 866  /******************************************************************************/
15:47:52 867  
15:47:52 868  PROCEDURE ANNOTATE_SUBSCRIPTION (
15:47:52 869  /*
15:47:52 870  Throws exceptions:
15:47:52 871  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 872  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 873  */
15:47:52 874  	in_subscription_id IN  NUMBER,
15:47:52 875  	in_agent_id	   IN  NUMBER,
15:47:52 876  	in_note 	   IN  VARCHAR2,
15:47:52 877  	in_created_by	   IN  VARCHAR2
15:47:52 878  ) AS
15:47:52 879  -- VARIABLES
15:47:52 880  SPROC_NAME	       CONSTANT VARCHAR2(21) := 'ANNOTATE_SUBSCRIPTION';
15:47:52 881  temp_subscription_id     NUMBER;
15:47:52 882  var_subscription_note_id NUMBER;
15:47:52 883  -- EXCEPTIONS
15:47:52 884  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 885  BEGIN
15:47:52 886  
15:47:52 887  	-- Check that subscription exists
15:47:52 888  	BEGIN
15:47:52 889  	  SELECT
15:47:52 890  	    SUBSCRIPTION.ID into temp_subscription_id
15:47:52 891  	  FROM
15:47:52 892  	    SUBSCRIPTION
15:47:52 893  	  WHERE
15:47:52 894  	    SUBSCRIPTION.ID = in_subscription_id;
15:47:52 895  	  EXCEPTION
15:47:52 896  	    WHEN NO_DATA_FOUND THEN
15:47:52 897  	      RAISE BAD_SUBSCRIPTION_ID;
15:47:52 898  	END;
15:47:52 899  
15:47:52 900  	PROCS_SUBSCRIPTION_CRU_V22.CREATE_SUBSCRIPTION_NOTE(
15:47:52 901  	  inout_subscription_note_id => var_subscription_note_id,
15:47:52 902  	  in_agent_id		     => in_agent_id,
15:47:52 903  	  in_subscription_id	     => in_subscription_id,
15:47:52 904  	  in_note		     => in_note,
15:47:52 905  	  in_created_by 	     => in_created_by
15:47:52 906  	);
15:47:52 907  
15:47:52 908  EXCEPTION
15:47:52 909  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 910  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 911  	  SPROC_NAME, 'No such subscription');
15:47:52 912  WHEN OTHERS THEN
15:47:52 913  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 914  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 915  END ANNOTATE_SUBSCRIPTION;
15:47:52 916  
15:47:52 917  /******************************************************************************/
15:47:52 918  
15:47:52 919  PROCEDURE GET_CANCEL_REASONS (
15:47:52 920  	out_result_set	  OUT SYS_REFCURSOR
15:47:52 921  ) AS
15:47:52 922  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_CANCEL_REASONS';
15:47:52 923  BEGIN
15:47:52 924  	OPEN out_result_set FOR
15:47:52 925  	SELECT
15:47:52 926  	  SUBSCRIPTION_CANCEL_REASON.ID,
15:47:52 927  	  SUBSCRIPTION_CANCEL_REASON.VALUE,
15:47:52 928  	  SUBSCRIPTION_CANCEL_REASON.DESCRIPTION,
15:47:52 929  	  SUBSCRIPTION_CANCEL_REASON.CANCELATION_STATUS_ID AS STATUS_ID
15:47:52 930  	FROM
15:47:52 931  	  SUBSCRIPTION_CANCEL_REASON;
15:47:52 932  
15:47:52 933  END GET_CANCEL_REASONS;
15:47:52 934  
15:47:52 935  /******************************************************************************/
15:47:52 936  
15:47:52 937  FUNCTION GET_RENEWAL_DATE (
15:47:52 938  /*
15:47:52 939  Throws exceptions:
15:47:52 940  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 941  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 942  */
15:47:52 943  	in_subscription_id in NUMBER
15:47:52 944  ) RETURN DATE AS
15:47:52 945  -- VARIABLES
15:47:52 946  SPROC_NAME	      CONSTANT VARCHAR2(16) := 'GET_RENEWAL_DATE';
15:47:52 947  var_subscription_status NUMBER;
15:47:52 948  var_licenses_count      NUMBER;
15:47:52 949  var_license_end_date    DATE;
15:47:52 950  var_last_offer_id       NUMBER;
15:47:52 951  var_offer_chain_id      NUMBER;
15:47:52 952  var_last_license_id     NUMBER;
15:47:52 953  var_current_offer_index NUMBER;
15:47:52 954  var_current_offer_recurr_num NUMBER;
15:47:52 955  var_offer_recurr_num    NUMBER;
15:47:52 956  -- EXCEPTIONS
15:47:52 957  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 958  NO_LICENSES_FOUND EXCEPTION;
15:47:52 959  BEGIN
15:47:52 960  
15:47:52 961  	-- Get subscription id and offer chain id
15:47:52 962  	BEGIN
15:47:52 963  	  SELECT
15:47:52 964  	    SUBSCRIPTION.SUBSCRIPTION_STATUS_ID,
15:47:52 965  	    SUBSCRIPTION.OFFER_CHAIN_ID
15:47:52 966  	    into
15:47:52 967  	    var_subscription_status,
15:47:52 968  	    var_offer_chain_id
15:47:52 969  	  FROM
15:47:52 970  	    SUBSCRIPTION
15:47:52 971  	  WHERE
15:47:52 972  	    SUBSCRIPTION.ID = in_subscription_id;
15:47:52 973  	  EXCEPTION
15:47:52 974  	    WHEN NO_DATA_FOUND THEN
15:47:52 975  	      RAISE BAD_SUBSCRIPTION_ID;
15:47:52 976  	END;
15:47:52 977  
15:47:52 978  	IF var_subscription_status != GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE THEN
15:47:52 979  	  -- TODO: Is suspended subscription has renewal date? (For the phase II)
15:47:52 980  	  -- AND var_subscription_status != GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED THEN
15:47:52 981  	  RETURN NULL;
15:47:52 982  	END IF;
15:47:52 983  
15:47:52 984  	BEGIN
15:47:52 985  	  SELECT
15:47:52 986  	    LICENSE_ID,
15:47:52 987  	    END_DATE,
15:47:52 988  	    OFFER_ID,
15:47:52 989  	    CURRENT_OFFER_INDEX,
15:47:52 990  	    CURRENT_OFFER_RECURR_NUM
15:47:52 991  	    into
15:47:52 992  	    var_last_license_id,
15:47:52 993  	    var_license_end_date,
15:47:52 994  	    var_last_offer_id,
15:47:52 995  	    var_current_offer_index,
15:47:52 996  	    var_current_offer_recurr_num
15:47:52 997  	  FROM
15:47:52 998  	    (
15:47:52 999  	      SELECT
15:47:52 1000  		 LICENSE.ID as "LICENSE_ID",
15:47:52 1001  		 LICENSE.END_DATE,
15:47:52 1002  		 LICENSE.OFFER_ID,
15:47:52 1003  		 LICENSE.CURRENT_OFFER_INDEX,
15:47:52 1004  		 LICENSE.CURRENT_OFFER_RECURR_NUM
15:47:52 1005  	       FROM
15:47:52 1006  		 LICENSE
15:47:52 1007  	       WHERE
15:47:52 1008  		 LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
15:47:52 1009  		 AND LICENSE.SUBSCRIPTION_ID = in_subscription_id
15:47:52 1010  	       ORDER BY END_DATE DESC
15:47:52 1011  	     )
15:47:52 1012  	     INNER JOIN OFFER ON OFFER_ID = OFFER.ID
15:47:52 1013  	   WHERE
15:47:52 1014  	     ROWNUM <= 1;
15:47:52 1015  
15:47:52 1016  	   EXCEPTION
15:47:52 1017  	     WHEN NO_DATA_FOUND THEN
15:47:52 1018  	       -- RAISE NO_LICENSES_FOUND;
15:47:52 1019  	       RETURN NULL;
15:47:52 1020  	 END;
15:47:52 1021  
15:47:52 1022  	 SELECT
15:47:52 1023  	   OFFER_OFFER_CHAIN.NUM_RECURRENCES into var_offer_recurr_num
15:47:52 1024  	 FROM
15:47:52 1025  	   OFFER_OFFER_CHAIN
15:47:52 1026  	 WHERE
15:47:52 1027  	   OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
15:47:52 1028  	   AND OFFER_OFFER_CHAIN.OFFER_ID = var_last_offer_id;
15:47:52 1029  
15:47:52 1030  	 IF PROCS_OFFER_CHAIN_V22.GET_NEXT_OFFER_INDEX(var_offer_chain_id, var_current_offer_index) IS NULL
15:47:52 1031  	   AND var_offer_recurr_num = var_current_offer_recurr_num THEN
15:47:52 1032  	   -- There is no next offer for this subscription
15:47:52 1033  	   RETURN NULL;
15:47:52 1034  	 END IF;
15:47:52 1035  
15:47:52 1036  	 RETURN var_license_end_date;
15:47:52 1037  
15:47:52 1038  EXCEPTION
15:47:52 1039  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 1040  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1041  	   SPROC_NAME, 'No such subscription');
15:47:52 1042  WHEN NO_LICENSES_FOUND THEN
15:47:52 1043  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1044  	   SPROC_NAME, 'No licenses found');
15:47:52 1045  WHEN OTHERS THEN
15:47:52 1046  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1047  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1048  END GET_RENEWAL_DATE;
15:47:52 1049  
15:47:52 1050  /******************************************************************************/
15:47:52 1051  
15:47:52 1052  FUNCTION GET_RECENT_CHARGE (
15:47:52 1053  /*
15:47:52 1054  Throws exceptions:
15:47:52 1055  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 1056  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 1057  */
15:47:52 1058  	 in_subscription_id IN NUMBER
15:47:52 1059  ) RETURN NUMBER AS
15:47:52 1060  -- VARIABLES
15:47:52 1061  SPROC_NAME	    CONSTANT VARCHAR2(17) := 'GET_RECENT_CHARGE';
15:47:52 1062  temp_subscription_id NUMBER;
15:47:52 1063  var_recent_charge    NUMBER(10,2);
15:47:52 1064  
15:47:52 1065  -- EXCEPTIONS
15:47:52 1066  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 1067  BEGIN
15:47:52 1068  
15:47:52 1069  	 BEGIN
15:47:52 1070  	   SELECT
15:47:52 1071  	     SUBSCRIPTION.ID into temp_subscription_id
15:47:52 1072  	   FROM
15:47:52 1073  	     SUBSCRIPTION
15:47:52 1074  	   WHERE
15:47:52 1075  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 1076  	   EXCEPTION
15:47:52 1077  	     WHEN NO_DATA_FOUND THEN
15:47:52 1078  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 1079  	 END;
15:47:52 1080  
15:47:52 1081  	 BEGIN
15:47:52 1082  	   SELECT
15:47:52 1083  	     CHARGE.CHARGE_AMOUNT into var_recent_charge
15:47:52 1084  	   FROM
15:47:52 1085  	     LICENSE
15:47:52 1086  	     INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:52 1087  	     INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
15:47:52 1088  	     INNER JOIN CHARGE ON CHARGE.INVOICE_ID = INVOICE.ID
15:47:52 1089  	   WHERE
15:47:52 1090  	     -- TODO: Review
15:47:52 1091  	     -- LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_PROCESSED
15:47:52 1092  	     -- AND
15:47:52 1093  	     SUBSCRIPTION.ID = in_subscription_id
15:47:52 1094  	     AND CHARGE.CHARGE_AMOUNT >= 0
15:47:52 1095  	     AND ROWNUM <= 1
15:47:52 1096  	   ORDER BY
15:47:52 1097  	     LICENSE.ID ASC, CHARGE.ID DESC;
15:47:52 1098  	   EXCEPTION
15:47:52 1099  	     WHEN NO_DATA_FOUND THEN
15:47:52 1100  	       var_recent_charge := 0;
15:47:52 1101  	 END;
15:47:52 1102  
15:47:52 1103  	 RETURN var_recent_charge;
15:47:52 1104  
15:47:52 1105  EXCEPTION
15:47:52 1106  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 1107  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1108  	   SPROC_NAME, 'No such subscription');
15:47:52 1109  WHEN OTHERS THEN
15:47:52 1110  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1111  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1112  END GET_RECENT_CHARGE;
15:47:52 1113  
15:47:52 1114  /******************************************************************************/
15:47:52 1115  
15:47:52 1116  FUNCTION GET_BILLING_CYCLE (
15:47:52 1117  	 in_subscription_id IN NUMBER
15:47:52 1118  ) RETURN VARCHAR2 AS
15:47:52 1119  -- VARIABLES
15:47:52 1120  SPROC_NAME	    CONSTANT VARCHAR2(17) := 'GET_BILLING_CYCLE';
15:47:52 1121  temp_subscription_id NUMBER;
15:47:52 1122  var_offer_duration   VARCHAR2(30);
15:47:52 1123  
15:47:52 1124  -- EXCEPTIONS
15:47:52 1125  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 1126  BEGIN
15:47:52 1127  
15:47:52 1128  	 BEGIN
15:47:52 1129  	   SELECT
15:47:52 1130  	     SUBSCRIPTION.ID into temp_subscription_id
15:47:52 1131  	   FROM
15:47:52 1132  	     SUBSCRIPTION
15:47:52 1133  	   WHERE
15:47:52 1134  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 1135  	   EXCEPTION
15:47:52 1136  	     WHEN NO_DATA_FOUND THEN
15:47:52 1137  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 1138  	 END;
15:47:52 1139  
15:47:52 1140  	 SELECT
15:47:52 1141  	   OFFER.ENTITLEMENT_DURATION into var_offer_duration
15:47:52 1142  	 FROM
15:47:52 1143  	   LICENSE
15:47:52 1144  	   INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:52 1145  	   INNER JOIN OFFER ON LICENSE.OFFER_ID = OFFER.ID
15:47:52 1146  	 WHERE
15:47:52 1147  	   --LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_PROCESSED
15:47:52 1148  	   --AND
15:47:52 1149  	   SUBSCRIPTION.ID = in_subscription_id
15:47:52 1150  	   AND ROWNUM <= 1
15:47:52 1151  	 ORDER BY
15:47:52 1152  	   LICENSE.ID ASC;
15:47:52 1153  
15:47:52 1154  	 RETURN var_offer_duration;
15:47:52 1155  
15:47:52 1156  EXCEPTION
15:47:52 1157  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 1158  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1159  	   SPROC_NAME, 'No such subscription');
15:47:52 1160  WHEN OTHERS THEN
15:47:52 1161  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1162  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1163  END GET_BILLING_CYCLE;
15:47:52 1164  
15:47:52 1165  /******************************************************************************/
15:47:52 1166  
15:47:52 1167  PROCEDURE REFUND_SUBSCRIPTION (
15:47:52 1168  /*
15:47:52 1169  Throws exceptions:
15:47:52 1170  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 1171  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 1172  */
15:47:52 1173  	 in_subscription_id IN NUMBER,
15:47:52 1174  	 in_invoice_id	    IN NUMBER,
15:47:52 1175  	 in_refund_amount   IN NUMBER,
15:47:52 1176  	 in_note	    IN VARCHAR2,
15:47:52 1177  	 in_created_by	    IN VARCHAR2,
15:47:52 1178  	 out_charge_id	    OUT NUMBER
15:47:52 1179  ) AS
15:47:52 1180  -- VARIABLES
15:47:52 1181  SPROC_NAME	      CONSTANT VARCHAR2(19) := 'REFUND_SUBSCRIPTION';
15:47:52 1182  var_invoice_status_id  NUMBER;
15:47:52 1183  var_account_id	      NUMBER;
15:47:52 1184  var_account_status_id  NUMBER;
15:47:52 1185  var_new_transaction_id NUMBER;
15:47:52 1186  var_instrument_type_id NUMBER;
15:47:52 1187  var_instrument_id      NUMBER;
15:47:52 1188  var_new_charge_id      NUMBER;
15:47:52 1189  var_invoice_amount     NUMBER(10,2);
15:47:52 1190  var_refunds_before     NUMBER(10,2);
15:47:52 1191  var_charges_amount     NUMBER(10,2);
15:47:52 1192  -- EXCEPTIONS
15:47:52 1193  BAD_SUBSCRIPTION_ID	     EXCEPTION;
15:47:52 1194  ACCOUNT_IS_FROZEN	     EXCEPTION;
15:47:52 1195  BAD_INVOICE_ID		     EXCEPTION;
15:47:52 1196  CAN_NOT_CREATE_TRANSACTION    EXCEPTION;
15:47:52 1197  CAN_NOT_CREATE_CHARGE	     EXCEPTION;
15:47:52 1198  CAN_NOT_CALC_INVOICE_AMOUNT   EXCEPTION;
15:47:52 1199  REFUND_IS_GREATER_THAN_ANOUNT EXCEPTION;
15:47:52 1200  CAN_NOT_ANNOTATE_SUBSCRIPTION EXCEPTION;
15:47:52 1201  TOT_REF_IS_GREATER_THAN_ANOUNT EXCEPTION;
15:47:52 1202  INVOICE_IS_NOT_CLOSED	     EXCEPTION;
15:47:52 1203  TOT_REF_IS_GRATER_THAN_CHARGES EXCEPTION;
15:47:52 1204  EXCEPTION_MESSAGE	      VARCHAR2(1024);
15:47:52 1205  BEGIN
15:47:52 1206  
15:47:52 1207  	 BEGIN
15:47:52 1208  	   SELECT
15:47:52 1209  	     SUBSCRIPTION.INSTRUMENT_ID,
15:47:52 1210  	     SUBSCRIPTION.INSTRUMENT_TYPE_ID,
15:47:52 1211  	     SUBSCRIPTION.ACCOUNT_ID
15:47:52 1212  	     into
15:47:52 1213  	     var_instrument_id,
15:47:52 1214  	     var_instrument_type_id,
15:47:52 1215  	     var_account_id
15:47:52 1216  	   FROM
15:47:52 1217  	     SUBSCRIPTION
15:47:52 1218  	   WHERE
15:47:52 1219  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 1220  	   EXCEPTION
15:47:52 1221  	     WHEN NO_DATA_FOUND THEN
15:47:52 1222  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 1223  	 END;
15:47:52 1224  
15:47:52 1225  	 -- Check account status. It should not to be frozen
15:47:52 1226  	 SELECT
15:47:52 1227  	   ACCOUNT.ACCOUNT_STATUS_ID into var_account_status_id
15:47:52 1228  	 FROM
15:47:52 1229  	   ACCOUNT
15:47:52 1230  	 WHERE
15:47:52 1231  	   ACCOUNT.ID = var_account_id;
15:47:52 1232  
15:47:52 1233  	 IF var_account_status_id = GLOBAL_STATUSES_V22.ACCOUNT_FROZEN THEN
15:47:52 1234  	   RAISE ACCOUNT_IS_FROZEN;
15:47:52 1235  	 END IF;
15:47:52 1236  
15:47:52 1237  	 BEGIN
15:47:52 1238  	   SELECT
15:47:52 1239  	     INVOICE.INVOICE_STATUS_ID into var_invoice_status_id
15:47:52 1240  	   FROM
15:47:52 1241  	     INVOICE
15:47:52 1242  	   WHERE
15:47:52 1243  	     INVOICE.ID = in_invoice_id;
15:47:52 1244  	   EXCEPTION
15:47:52 1245  	     WHEN NO_DATA_FOUND THEN
15:47:52 1246  	       RAISE BAD_INVOICE_ID;
15:47:52 1247  	 END;
15:47:52 1248  
15:47:52 1249  	 IF var_invoice_status_id != GLOBAL_STATUSES_V22.INVOICE_CLOSED THEN
15:47:52 1250  	   RAISE INVOICE_IS_NOT_CLOSED;
15:47:52 1251  	 END IF;
15:47:52 1252  
15:47:52 1253  	 BEGIN
15:47:52 1254  	   PROCS_INVOICE_V22.CALCULATE_INVOICE_AMOUNT (
15:47:52 1255  	     in_invoice_id => in_invoice_id,
15:47:52 1256  	     out_amount    => var_invoice_amount
15:47:52 1257  	   );
15:47:52 1258  	   EXCEPTION
15:47:52 1259  	     WHEN OTHERS THEN
15:47:52 1260  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1261  	       RAISE CAN_NOT_CALC_INVOICE_AMOUNT;
15:47:52 1262  	 END;
15:47:52 1263  
15:47:52 1264  	 IF ( in_refund_amount > var_invoice_amount ) THEN
15:47:52 1265  	   RAISE REFUND_IS_GREATER_THAN_ANOUNT;
15:47:52 1266  	 END IF;
15:47:52 1267  
15:47:52 1268  	 SELECT /*+ STAR_TRANSFORMATION */
15:47:52 1269  	   SUM(CHARGE.CHARGE_AMOUNT) into var_refunds_before
15:47:52 1270  	 FROM
15:47:52 1271  	   CHARGE
15:47:52 1272  	 WHERE
15:47:52 1273  	   CHARGE.INVOICE_ID = in_invoice_id
15:47:52 1274  	   AND (
15:47:52 1275  	     CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_OPENED
15:47:52 1276  	     OR CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_PROCESSED
15:47:52 1277  	   )
15:47:52 1278  	   AND CHARGE.CHARGE_AMOUNT < 0;
15:47:52 1279  
15:47:52 1280  	 -- Refunds are negative
15:47:52 1281  	 var_refunds_before := -var_refunds_before;
15:47:52 1282  
15:47:52 1283  	 var_charges_amount := 0;
15:47:52 1284  
15:47:52 1285  	 FOR f_processed_charges IN (
15:47:52 1286  	   SELECT
15:47:52 1287  	     CHARGE.CHARGE_AMOUNT
15:47:52 1288  	   FROM
15:47:52 1289  	     CHARGE
15:47:52 1290  	   WHERE
15:47:52 1291  	     CHARGE.INVOICE_ID = in_invoice_id
15:47:52 1292  	     AND CHARGE.CHARGE_STATUS_ID IN (SELECT GLOBAL_STATUSES_V22.CHARGE_PROCESSED FROM DUAL)
15:47:52 1293  	 )
15:47:52 1294  	 LOOP
15:47:52 1295  	   IF f_processed_charges.CHARGE_AMOUNT > 0 THEN
15:47:52 1296  	     var_charges_amount := var_charges_amount + f_processed_charges.CHARGE_AMOUNT;
15:47:52 1297  	   END IF;
15:47:52 1298  	 END LOOP;
15:47:52 1299  
15:47:52 1300  	 IF (in_refund_amount + var_refunds_before > var_invoice_amount) THEN
15:47:52 1301  	   RAISE TOT_REF_IS_GREATER_THAN_ANOUNT;
15:47:52 1302  	 END IF;
15:47:52 1303  
15:47:52 1304  	 IF (in_refund_amount + var_refunds_before > var_charges_amount) THEN
15:47:52 1305  	   RAISE TOT_REF_IS_GRATER_THAN_CHARGES;
15:47:52 1306  	 END IF;
15:47:52 1307  
15:47:52 1308  	 BEGIN
15:47:52 1309  	   PROCS_TRANSACTION_V22.CREATE_TRANSACTION(
15:47:52 1310  	     in_transaction_id	       => NULL,
15:47:52 1311  	     in_status_id	       => GLOBAL_STATUSES_V22.TRANSACTION_PREPARE,
15:47:52 1312  	     in_amount		       => -in_refund_amount,
15:47:52 1313  	     in_created_by	       => in_created_by,
15:47:52 1314  	     in_order_id	       => NULL,
15:47:52 1315  	     in_is_refund	       => GLOBAL_CONSTANTS_V22.TRUE,
15:47:52 1316  	     in_transaction_type_code  => 'REFUND',
15:47:52 1317  	     out_transaction_id        => var_new_transaction_id
15:47:52 1318  	   );
15:47:52 1319  	   EXCEPTION
15:47:52 1320  	     WHEN OTHERS THEN
15:47:52 1321  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1322  	       RAISE CAN_NOT_CREATE_TRANSACTION;
15:47:52 1323  	 END;
15:47:52 1324  
15:47:52 1325  	 BEGIN
15:47:52 1326  	   PROCS_CHARGE_V22.CREATE_CHARGE(
15:47:52 1327  	     in_invoice_id	   => in_invoice_id,
15:47:52 1328  	     in_transaction_id	   => var_new_transaction_id,
15:47:52 1329  	     in_instrument_type_id => var_instrument_type_id,
15:47:52 1330  	     in_instrument_id	   => var_instrument_id,
15:47:52 1331  	     in_charge_amount	   => -in_refund_amount,
15:47:52 1332  	     in_created_by	   => in_created_by,
15:47:52 1333  	     in_charge_status_id   => GLOBAL_STATUSES_V22.CHARGE_OPENED,
15:47:52 1334  	     out_charge_id	   => var_new_charge_id
15:47:52 1335  	   );
15:47:52 1336  	   EXCEPTION
15:47:52 1337  	     WHEN OTHERS THEN
15:47:52 1338  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1339  	       RAISE CAN_NOT_CREATE_CHARGE;
15:47:52 1340  	 END;
15:47:52 1341  
15:47:52 1342  	 IF in_note IS NOT NULL THEN
15:47:52 1343  	   BEGIN
15:47:52 1344  	     PROCS_SUBSCRIPTION_V22.ANNOTATE_SUBSCRIPTION(
15:47:52 1345  	       in_subscription_id => in_subscription_id,
15:47:52 1346  	       in_agent_id	  => 0, -- AGENT_ID??
15:47:52 1347  	       in_note		  => in_note,
15:47:52 1348  	       in_created_by	  => in_created_by
15:47:52 1349  	     );
15:47:52 1350  	     EXCEPTION
15:47:52 1351  	       WHEN OTHERS THEN
15:47:52 1352  		 EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1353  		 RAISE CAN_NOT_ANNOTATE_SUBSCRIPTION;
15:47:52 1354  	   END;
15:47:52 1355  	 END IF;
15:47:52 1356  
15:47:52 1357  	 out_charge_id := var_new_charge_id;
15:47:52 1358  
15:47:52 1359  EXCEPTION
15:47:52 1360  WHEN INVOICE_IS_NOT_CLOSED THEN
15:47:52 1361  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1362  	   SPROC_NAME, 'Invoice is not closed');
15:47:52 1363  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 1364  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1365  	   SPROC_NAME, 'No such subscription');
15:47:52 1366  WHEN ACCOUNT_IS_FROZEN THEN
15:47:52 1367  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1368  	   SPROC_NAME, 'Could not refund subscription for frozen account');
15:47:52 1369  WHEN BAD_INVOICE_ID THEN
15:47:52 1370  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1371  	   SPROC_NAME, 'No such invoice');
15:47:52 1372  WHEN CAN_NOT_CALC_INVOICE_AMOUNT THEN
15:47:52 1373  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1374  	   SPROC_NAME, 'Could not calculate invoice amount', EXCEPTION_MESSAGE);
15:47:52 1375  WHEN REFUND_IS_GREATER_THAN_ANOUNT THEN
15:47:52 1376  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1377  	   SPROC_NAME, 'Refund is greater than amount');
15:47:52 1378  WHEN TOT_REF_IS_GREATER_THAN_ANOUNT THEN
15:47:52 1379  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1380  	   SPROC_NAME, 'There were refunds before and sum of all refunds and new refund more than invoice amount');
15:47:52 1381  WHEN TOT_REF_IS_GRATER_THAN_CHARGES THEN
15:47:52 1382  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1383  	   SPROC_NAME, 'Total refund amount is greater than sum of processed charges');
15:47:52 1384  WHEN CAN_NOT_CREATE_TRANSACTION THEN
15:47:52 1385  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1386  	   SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
15:47:52 1387  WHEN CAN_NOT_CREATE_CHARGE THEN
15:47:52 1388  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1389  	   SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
15:47:52 1390  WHEN CAN_NOT_ANNOTATE_SUBSCRIPTION THEN
15:47:52 1391  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1392  	   SPROC_NAME, 'Could not annotate subscription', EXCEPTION_MESSAGE);
15:47:52 1393  WHEN OTHERS THEN
15:47:52 1394  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1395  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1396  END REFUND_SUBSCRIPTION;
15:47:52 1397  
15:47:52 1398  /******************************************************************************/
15:47:52 1399  
15:47:52 1400  PROCEDURE ADD_SUBSCRIPTION_EXTENSION (
15:47:52 1401  /*
15:47:52 1402  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 1403  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:52 1404  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 1405  */
15:47:52 1406  	 in_subscription_id	 IN NUMBER,
15:47:52 1407  	 in_effective_start_date IN DATE,
15:47:52 1408  	 in_effective_end_date	 IN DATE,
15:47:52 1409  	 in_note		 IN VARCHAR2,
15:47:52 1410  	 in_updated_by		 IN VARCHAR2
15:47:52 1411  ) AS
15:47:52 1412  -- VARIABLES
15:47:52 1413  SPROC_NAME		    CONSTANT VARCHAR2(26) := 'ADD_SUBSCRIPTION_EXTENSION';
15:47:52 1414  temp_subscription_id	    NUMBER;
15:47:52 1415  var_current_license_id	    NUMBER;
15:47:52 1416  var_current_license_start_date DATE;
15:47:52 1417  var_current_license_end_date DATE;
15:47:52 1418  var_current_offer_id	    NUMBER;
15:47:52 1419  var_current_invoice_id	    NUMBER;
15:47:52 1420  var_current_date 	    DATE;
15:47:52 1421  var_current_offer_index	    NUMBER;
15:47:52 1422  var_current_offer_recurr_num NUMBER;
15:47:52 1423  var_account_tax_exempt_id    VARCHAR2(255);
15:47:52 1424  
15:47:52 1425  var_free_invoice_id NUMBER;
15:47:52 1426  var_free_license_id NUMBER;
15:47:52 1427  var_new_license_id  NUMBER;
15:47:52 1428  var_ext_license_id  NUMBER;
15:47:52 1429  -- EXCEPTIONS
15:47:52 1430  BAD_SUBSCRIPTION_ID	     EXCEPTION;
15:47:52 1431  CAN_NOT_FIND_OFFER_OR_LICENSE EXCEPTION;
15:47:52 1432  CAN_NOT_CHANGE_LICENSE_STATUS EXCEPTION;
15:47:52 1433  CAN_NOT_CREATE_INVOICE	     EXCEPTION;
15:47:52 1434  CAN_NOT_CREATE_NEW_LICENSE    EXCEPTION;
15:47:52 1435  CAN_NOT_CREATE_END_LICENSE    EXCEPTION;
15:47:52 1436  CAN_NOT_ANNOTATE_SUBSCRIPTION EXCEPTION;
15:47:52 1437  EXTENS_START_DATE_IS_TOO_FAR  EXCEPTION;
15:47:52 1438  EXT_START_DATE_LATER_THEN_END EXCEPTION;
15:47:52 1439  EXTENS_START_DATE_IS_TOO_SMALL EXCEPTION;
15:47:52 1440  EXCEPTION_MESSAGE	     VARCHAR2(1024);
15:47:52 1441  BEGIN
15:47:52 1442  
15:47:52 1443  	 var_current_date := PROCS_COMMON_V22.NORMALIZE_DATE(SYSDATE);
15:47:52 1444  
15:47:52 1445  	 -- Check that subscription exists
15:47:52 1446  	 BEGIN
15:47:52 1447  	   SELECT
15:47:52 1448  	     SUBSCRIPTION.ID into temp_subscription_id
15:47:52 1449  	   FROM
15:47:52 1450  	     SUBSCRIPTION
15:47:52 1451  	   WHERE
15:47:52 1452  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 1453  	   EXCEPTION
15:47:52 1454  	     WHEN NO_DATA_FOUND THEN
15:47:52 1455  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 1456  	 END;
15:47:52 1457  
15:47:52 1458  	 -- Get account tax exempt id
15:47:52 1459  	 SELECT DISTINCT
15:47:52 1460  	   ACCOUNT.TAX_EXEMPT_ID into var_account_tax_exempt_id
15:47:52 1461  	 FROM
15:47:52 1462  	   ACCOUNT
15:47:52 1463  	   INNER JOIN SUBSCRIPTION ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
15:47:52 1464  	 WHERE
15:47:52 1465  	   SUBSCRIPTION.ID = in_subscription_id;
15:47:52 1466  
15:47:52 1467  	 -- Select current data
15:47:52 1468  	 BEGIN
15:47:52 1469  	   SELECT
15:47:52 1470  	     LICENSE.ID,
15:47:52 1471  	     LICENSE.START_DATE,
15:47:52 1472  	     LICENSE.END_DATE,
15:47:52 1473  	     LICENSE.CURRENT_OFFER_INDEX,
15:47:52 1474  	     LICENSE.CURRENT_OFFER_RECURR_NUM,
15:47:52 1475  	     OFFER.ID,
15:47:52 1476  	     INVOICE.ID
15:47:52 1477  	   INTO
15:47:52 1478  	     var_current_license_id,
15:47:52 1479  	     var_current_license_start_date,
15:47:52 1480  	     var_current_license_end_date,
15:47:52 1481  	     var_current_offer_index,
15:47:52 1482  	     var_current_offer_recurr_num,
15:47:52 1483  	     var_current_offer_id,
15:47:52 1484  	     var_current_invoice_id
15:47:52 1485  	   FROM
15:47:52 1486  	     LICENSE
15:47:52 1487  	     INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:52 1488  	     INNER JOIN OFFER ON LICENSE.OFFER_ID = OFFER.ID
15:47:52 1489  	     INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
15:47:52 1490  	   WHERE
15:47:52 1491  	     SUBSCRIPTION.ID = in_subscription_id
15:47:52 1492  	     AND PROCS_COMMON_V22.NORMALIZE_DATE(LICENSE.END_DATE) > var_current_date
15:47:52 1493  	     AND PROCS_COMMON_V22.NORMALIZE_DATE(LICENSE.START_DATE) <= var_current_date
15:47:52 1494  	     AND ROWNUM <= 1
15:47:52 1495  	   ORDER BY
15:47:52 1496  	     LICENSE.ID DESC;
15:47:52 1497  	   EXCEPTION
15:47:52 1498  	     WHEN NO_DATA_FOUND THEN
15:47:52 1499  	       RAISE CAN_NOT_FIND_OFFER_OR_LICENSE;
15:47:52 1500  	 END;
15:47:52 1501  
15:47:52 1502  	 IF var_current_license_end_date < in_effective_start_date THEN
15:47:52 1503  	   RAISE EXTENS_START_DATE_IS_TOO_FAR;
15:47:52 1504  	 END IF;
15:47:52 1505  
15:47:52 1506  	 IF var_current_license_start_date > in_effective_start_date THEN
15:47:52 1507  	   RAISE EXTENS_START_DATE_IS_TOO_SMALL;
15:47:52 1508  	 END IF;
15:47:52 1509  
15:47:52 1510  	 IF in_effective_start_date > in_effective_end_date THEN
15:47:52 1511  	   RAISE EXT_START_DATE_LATER_THEN_END;
15:47:52 1512  	 END IF;
15:47:52 1513  
15:47:52 1514  	 -- Closing curent license
15:47:52 1515  	 BEGIN
15:47:52 1516  	   PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:52 1517  	     in_license_id	   => var_current_license_id,
15:47:52 1518  	     in_updated_by	   => in_updated_by,
15:47:52 1519  	     in_license_status_id  => GLOBAL_STATUSES_V22.LICENSE_CLOSED,
15:47:52 1520  	     in_end_date	   => in_effective_start_date,
15:47:52 1521  	     in_needs_entitlements => GLOBAL_CONSTANTS_V22.TRUE
15:47:52 1522  	   );
15:47:52 1523  	   EXCEPTION
15:47:52 1524  	     WHEN OTHERS THEN
15:47:52 1525  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1526  	       RAISE CAN_NOT_CHANGE_LICENSE_STATUS;
15:47:52 1527  	 END;
15:47:52 1528  
15:47:52 1529  	 -- Creating new "free" invoice
15:47:52 1530  	 BEGIN
15:47:52 1531  	   PROCS_INVOICE_V22.CREATE_INVOICE(
15:47:52 1532  	     in_invoice_status => GLOBAL_STATUSES_V22.INVOICE_CLOSED,
15:47:52 1533  	     in_created_by     => in_updated_by,
15:47:52 1534  	     in_tax_exempt_id  => var_account_tax_exempt_id,
15:47:52 1535  	     out_invoice_id    => var_free_invoice_id
15:47:52 1536  	   );
15:47:52 1537  	   EXCEPTION
15:47:52 1538  	     WHEN OTHERS THEN
15:47:52 1539  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1540  	       RAISE CAN_NOT_CREATE_INVOICE;
15:47:52 1541  	 END;
15:47:52 1542  
15:47:52 1543  	 -- Creating new "free" license
15:47:52 1544  	 BEGIN
15:47:52 1545  	   PROCS_LICENSE_V22.CREATE_LICENSE (
15:47:52 1546  	     in_status_id		 => GLOBAL_STATUSES_V22.LICENSE_ACTIVE,
15:47:52 1547  	     in_needs_entitlements	 => GLOBAL_CONSTANTS_V22.TRUE,
15:47:52 1548  	     in_start_date		 => in_effective_start_date,
15:47:52 1549  	     in_end_date		 => in_effective_end_date,
15:47:52 1550  	     in_offer_id		 => var_current_offer_id,
15:47:52 1551  	     in_subscription_id 	 => in_subscription_id,
15:47:52 1552  	     in_invoice_id		 => var_free_invoice_id,
15:47:52 1553  	     in_created_by		 => in_updated_by,
15:47:52 1554  	     in_is_extension		 => GLOBAL_CONSTANTS_V22.TRUE,
15:47:52 1555  	     in_current_offer_index	 => var_current_offer_index,
15:47:52 1556  	     in_current_offer_recurr_num => var_current_offer_recurr_num,
15:47:52 1557  	     out_license_id		 => var_free_license_id
15:47:52 1558  	   );
15:47:52 1559  	   EXCEPTION
15:47:52 1560  	     WHEN OTHERS THEN
15:47:52 1561  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1562  	       RAISE CAN_NOT_CREATE_NEW_LICENSE;
15:47:52 1563  	 END;
15:47:52 1564  
15:47:52 1565  	 -- Creating new license
15:47:52 1566  	 IF PROCS_COMMON_V22.NORMALIZE_DATE(var_current_license_end_date) >
15:47:52 1567  	    PROCS_COMMON_V22.NORMALIZE_DATE(in_effective_start_date) THEN
15:47:52 1568  	   BEGIN
15:47:52 1569  	     PROCS_LICENSE_V22.CREATE_LICENSE (
15:47:52 1570  	       in_status_id		   => GLOBAL_STATUSES_V22.LICENSE_ACTIVE,
15:47:52 1571  	       in_needs_entitlements	   => GLOBAL_CONSTANTS_V22.TRUE,
15:47:52 1572  	       in_start_date		   => in_effective_end_date,
15:47:52 1573  	       in_end_date		   => var_current_license_end_date + (in_effective_end_date - in_effective_start_date),
15:47:52 1574  	       in_offer_id		   => var_current_offer_id,
15:47:52 1575  	       in_subscription_id	   => in_subscription_id,
15:47:52 1576  	       in_invoice_id		   => var_current_invoice_id,
15:47:52 1577  	       in_created_by		   => in_updated_by,
15:47:52 1578  	       in_is_extension		   => GLOBAL_CONSTANTS_V22.FALSE,
15:47:52 1579  	       in_current_offer_index	   => var_current_offer_index,
15:47:52 1580  	       in_current_offer_recurr_num => var_current_offer_recurr_num,
15:47:52 1581  	       out_license_id		   => var_ext_license_id
15:47:52 1582  	     );
15:47:52 1583  	     EXCEPTION
15:47:52 1584  	       WHEN OTHERS THEN
15:47:52 1585  		 EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1586  		 RAISE CAN_NOT_CREATE_END_LICENSE;
15:47:52 1587  	   END;
15:47:52 1588  	 END IF;
15:47:52 1589  
15:47:52 1590  	 -- Create new note for subscription
15:47:52 1591  	 BEGIN
15:47:52 1592  	   PROCS_SUBSCRIPTION_V22.ANNOTATE_SUBSCRIPTION (
15:47:52 1593  	     in_subscription_id => in_subscription_id,
15:47:52 1594  	     in_agent_id	=> 0, -- FIXME: What should to be here (agent id)?
15:47:52 1595  	     in_note		=> in_note,
15:47:52 1596  	     in_created_by	=> in_updated_by
15:47:52 1597  	   );
15:47:52 1598  	   EXCEPTION
15:47:52 1599  	     WHEN OTHERS THEN
15:47:52 1600  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1601  	       RAISE CAN_NOT_ANNOTATE_SUBSCRIPTION;
15:47:52 1602  	 END;
15:47:52 1603  
15:47:52 1604  EXCEPTION
15:47:52 1605  WHEN EXT_START_DATE_LATER_THEN_END THEN
15:47:52 1606  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1607  	   SPROC_NAME, 'Extension start date is bigger then end date');
15:47:52 1608  WHEN EXTENS_START_DATE_IS_TOO_FAR THEN
15:47:52 1609  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1610  	   SPROC_NAME, 'Extension start date is too far');
15:47:52 1611  WHEN EXTENS_START_DATE_IS_TOO_SMALL THEN
15:47:52 1612  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1613  	   SPROC_NAME, 'Extension start date is too small');
15:47:52 1614  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 1615  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1616  	   SPROC_NAME, 'No such subscription');
15:47:52 1617  WHEN CAN_NOT_FIND_OFFER_OR_LICENSE THEN
15:47:52 1618  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1619  	   SPROC_NAME, 'Could not find license and/or offer for given subscription');
15:47:52 1620  WHEN CAN_NOT_CHANGE_LICENSE_STATUS THEN
15:47:52 1621  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1622  	   SPROC_NAME, 'Could not change license status', EXCEPTION_MESSAGE);
15:47:52 1623  WHEN CAN_NOT_CREATE_INVOICE THEN
15:47:52 1624  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1625  	   SPROC_NAME, 'Could not create new invoice', EXCEPTION_MESSAGE);
15:47:52 1626  WHEN CAN_NOT_CREATE_NEW_LICENSE THEN
15:47:52 1627  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1628  	   SPROC_NAME, 'Could not create new license', EXCEPTION_MESSAGE);
15:47:52 1629  WHEN CAN_NOT_CREATE_END_LICENSE THEN
15:47:52 1630  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1631  	   SPROC_NAME, 'Could not create last license', EXCEPTION_MESSAGE);
15:47:52 1632  WHEN CAN_NOT_ANNOTATE_SUBSCRIPTION THEN
15:47:52 1633  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1634  	   SPROC_NAME, 'Could not create new note for subscription', EXCEPTION_MESSAGE);
15:47:52 1635  WHEN OTHERS THEN
15:47:52 1636  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1637  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1638  END ADD_SUBSCRIPTION_EXTENSION;
15:47:52 1639  
15:47:52 1640  /******************************************************************************/
15:47:52 1641  
15:47:52 1642  FUNCTION CALC_SUBSCRIPTION_END_DATE (
15:47:52 1643  /*
15:47:52 1644  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 1645  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:52 1646  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 1647  Returns:
15:47:52 1648  NULL if it is impossible to calculate end date (for example,
15:47:52 1649  	 offer chain includes offer with infinity recurrences number)
15:47:52 1650  DATE else
15:47:52 1651  */
15:47:52 1652  	 in_subscription_id IN NUMBER
15:47:52 1653  ) RETURN DATE AS
15:47:52 1654  -- VARIABLES
15:47:52 1655  SPROC_NAME		     CONSTANT VARCHAR2(26) := 'CALC_SUBSCRIPTION_END_DATE';
15:47:52 1656  last_license_id		     NUMBER;
15:47:52 1657  last_license_end_date	     DATE;
15:47:52 1658  last_license_offer_id	     NUMBER;
15:47:52 1659  last_license_offer_index      NUMBER;
15:47:52 1660  last_license_offer_recurr_num NUMBER;
15:47:52 1661  var_last_license_id	     NUMBER;
15:47:52 1662  var_offer_chain_id	     NUMBER;
15:47:52 1663  var_current_offer_rec_number  NUMBER;
15:47:52 1664  var_next_offers_set	     SYS_REFCURSOR;
15:47:52 1665  var_next_offer_duration	     VARCHAR2(30);
15:47:52 1666  var_next_offer_recur	     NUMBER;
15:47:52 1667  var_infinity_offers_number    NUMBER;
15:47:52 1668  
15:47:52 1669  var_result_date DATE;
15:47:52 1670  
15:47:52 1671  var_ym_interval	INTERVAL YEAR TO MONTH;
15:47:52 1672  var_ds_interval	INTERVAL DAY(3) TO SECOND;
15:47:52 1673  var_offer_years	NUMBER;
15:47:52 1674  var_offer_months NUMBER;
15:47:52 1675  var_offer_days	NUMBER;
15:47:52 1676  
15:47:52 1677  -- EXCEPTIONS
15:47:52 1678  BAD_SUBSCRIPTION_ID	  EXCEPTION;
15:47:52 1679  CAN_NOT_FIND_LAST_LICENSE  EXCEPTION;
15:47:52 1680  CAN_NOT_CALC_OFFER_LENGTH  EXCEPTION;
15:47:52 1681  CAN_NOT_CALC_OFFER_LENGTH2 EXCEPTION;
15:47:52 1682  EXCEPTION_MESSAGE	  VARCHAR2(1024);
15:47:52 1683  BEGIN
15:47:52 1684  
15:47:52 1685  	 BEGIN
15:47:52 1686  	   SELECT
15:47:52 1687  	     SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain_id
15:47:52 1688  	   FROM
15:47:52 1689  	     SUBSCRIPTION
15:47:52 1690  	   WHERE
15:47:52 1691  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 1692  	   EXCEPTION
15:47:52 1693  	     WHEN NO_DATA_FOUND THEN
15:47:52 1694  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 1695  	 END;
15:47:52 1696  
15:47:52 1697  	 BEGIN
15:47:52 1698  	   SELECT
15:47:52 1699  	     ID into var_last_license_id
15:47:52 1700  	   FROM
15:47:52 1701  	     (
15:47:52 1702  	       SELECT
15:47:52 1703  		 LICENSE.ID
15:47:52 1704  	       FROM
15:47:52 1705  		 LICENSE
15:47:52 1706  	       WHERE
15:47:52 1707  		 LICENSE.SUBSCRIPTION_ID = in_subscription_id
15:47:52 1708  	       ORDER BY
15:47:52 1709  		 LICENSE.END_DATE DESC
15:47:52 1710  	     )
15:47:52 1711  	   WHERE
15:47:52 1712  	     ROWNUM <= 1;
15:47:52 1713  	   EXCEPTION
15:47:52 1714  	     WHEN NO_DATA_FOUND THEN
15:47:52 1715  	       RAISE CAN_NOT_FIND_LAST_LICENSE;
15:47:52 1716  	 END;
15:47:52 1717  
15:47:52 1718  	 SELECT
15:47:52 1719  	   COUNT(*) into var_infinity_offers_number
15:47:52 1720  	 FROM
15:47:52 1721  	   OFFER_OFFER_CHAIN
15:47:52 1722  	 WHERE
15:47:52 1723  	   OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
15:47:52 1724  	   AND OFFER_OFFER_CHAIN.NUM_RECURRENCES = GLOBAL_ENUMS_V22.OFFER_REC_INFINITY;
15:47:52 1725  
15:47:52 1726  	 IF var_infinity_offers_number > 0 THEN
15:47:52 1727  	   RETURN NULL;
15:47:52 1728  	 END IF;
15:47:52 1729  
15:47:52 1730  	 BEGIN
15:47:52 1731  	   SELECT
15:47:52 1732  	     LICENSE.ID,
15:47:52 1733  	     LICENSE.END_DATE,
15:47:52 1734  	     LICENSE.CURRENT_OFFER_INDEX,
15:47:52 1735  	     LICENSE.CURRENT_OFFER_RECURR_NUM,
15:47:52 1736  	     LICENSE.OFFER_ID
15:47:52 1737  	     into
15:47:52 1738  	     last_license_id,
15:47:52 1739  	     last_license_end_date,
15:47:52 1740  	     last_license_offer_index,
15:47:52 1741  	     last_license_offer_recurr_num,
15:47:52 1742  	     last_license_offer_id
15:47:52 1743  	   FROM
15:47:52 1744  	     LICENSE
15:47:52 1745  	   WHERE
15:47:52 1746  	     LICENSE.ID = var_last_license_id;
15:47:52 1747  	   EXCEPTION
15:47:52 1748  	     WHEN NO_DATA_FOUND THEN
15:47:52 1749  	       RAISE CAN_NOT_FIND_LAST_LICENSE;
15:47:52 1750  	 END;
15:47:52 1751  
15:47:52 1752  	 var_result_date := last_license_end_date;
15:47:52 1753  
15:47:52 1754  	 -- Find current recurrence number
15:47:52 1755  	 SELECT
15:47:52 1756  	   OFFER_OFFER_CHAIN.NUM_RECURRENCES into var_current_offer_rec_number
15:47:52 1757  	 FROM
15:47:52 1758  	   OFFER_OFFER_CHAIN
15:47:52 1759  	 WHERE
15:47:52 1760  	   OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
15:47:52 1761  	   AND OFFER_OFFER_CHAIN.OFFER_ID = last_license_offer_id
15:47:52 1762  	   AND OFFER_OFFER_CHAIN.INDEX_VALUE = last_license_offer_index;
15:47:52 1763  
15:47:52 1764  	 IF var_current_offer_rec_number > last_license_offer_recurr_num THEN
15:47:52 1765  	   BEGIN
15:47:52 1766  	     PROCS_OFFER_CHAIN_V22.GET_OFFER_LENGTH(
15:47:52 1767  	       last_license_offer_id,
15:47:52 1768  	       var_offer_years,
15:47:52 1769  	       var_offer_months,
15:47:52 1770  	       var_offer_days
15:47:52 1771  	     );
15:47:52 1772  
15:47:52 1773  	     var_ym_interval := var_offer_years||'-'||var_offer_months;
15:47:52 1774  	     var_ds_interval := var_offer_days||' 0:0:0';
15:47:52 1775  
15:47:52 1776  	     var_result_date := var_result_date
15:47:52 1777  	       + ( var_ym_interval * ( var_current_offer_rec_number - last_license_offer_recurr_num ) )
15:47:52 1778  	       + ( var_ds_interval * ( var_current_offer_rec_number - last_license_offer_recurr_num ) );
15:47:52 1779  	     EXCEPTION
15:47:52 1780  	       WHEN OTHERS THEN
15:47:52 1781  		 EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1782  		 RAISE CAN_NOT_CALC_OFFER_LENGTH;
15:47:52 1783  	   END;
15:47:52 1784  	 END IF;
15:47:52 1785  
15:47:52 1786  	 OPEN var_next_offers_set FOR
15:47:52 1787  	 SELECT
15:47:52 1788  	   OFFER.ENTITLEMENT_DURATION,
15:47:52 1789  	   OFFER_OFFER_CHAIN.NUM_RECURRENCES
15:47:52 1790  	 FROM
15:47:52 1791  	   OFFER_OFFER_CHAIN
15:47:52 1792  	   INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
15:47:52 1793  	 WHERE
15:47:52 1794  	   OFFER_OFFER_CHAIN.INDEX_VALUE > last_license_offer_index
15:47:52 1795  	   AND OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id;
15:47:52 1796  
15:47:52 1797  	 LOOP
15:47:52 1798  	   FETCH var_next_offers_set into var_next_offer_duration, var_next_offer_recur;
15:47:52 1799  	   EXIT WHEN var_next_offers_set%NOTFOUND;
15:47:52 1800  	   BEGIN
15:47:52 1801  	     PROCS_COMMON_V22.ISO8601DURATION_TO_INTERVALS(
15:47:52 1802  	       var_next_offer_duration,
15:47:52 1803  	       var_offer_years,
15:47:52 1804  	       var_offer_months,
15:47:52 1805  	       var_offer_days
15:47:52 1806  	     );
15:47:52 1807  
15:47:52 1808  	     var_ym_interval := var_offer_years||'-'||var_offer_months;
15:47:52 1809  	     var_ds_interval := var_offer_days||' 0:0:0';
15:47:52 1810  
15:47:52 1811  	     var_result_date := var_result_date
15:47:52 1812  	       + ( var_ym_interval * var_next_offer_recur )
15:47:52 1813  	       + ( var_ds_interval * var_next_offer_recur );
15:47:52 1814  	     EXCEPTION
15:47:52 1815  	       WHEN OTHERS THEN
15:47:52 1816  		 EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1817  		 RAISE CAN_NOT_CALC_OFFER_LENGTH2;
15:47:52 1818  	   END;
15:47:52 1819  	 END LOOP;
15:47:52 1820  
15:47:52 1821  	 RETURN var_result_date;
15:47:52 1822  
15:47:52 1823  EXCEPTION
15:47:52 1824  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 1825  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1826  	   SPROC_NAME, 'No such subscription');
15:47:52 1827  WHEN CAN_NOT_FIND_LAST_LICENSE THEN
15:47:52 1828  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1829  	   SPROC_NAME, 'Could not find last license for given subscription');
15:47:52 1830  WHEN CAN_NOT_CALC_OFFER_LENGTH THEN
15:47:52 1831  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1832  	   SPROC_NAME, 'Could not calculate offer length', EXCEPTION_MESSAGE);
15:47:52 1833  WHEN CAN_NOT_CALC_OFFER_LENGTH2 THEN
15:47:52 1834  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1835  	   SPROC_NAME, 'Could not calculate last offer length', EXCEPTION_MESSAGE);
15:47:52 1836  WHEN OTHERS THEN
15:47:52 1837  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1838  	   SPROC_NAME, 'Unkown error', SQLERRM);
15:47:52 1839  END CALC_SUBSCRIPTION_END_DATE;
15:47:52 1840  
15:47:52 1841  /******************************************************************************/
15:47:52 1842  
15:47:52 1843  PROCEDURE HAS_FUTURE_LICENSE (
15:47:52 1844  /*
15:47:52 1845  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 1846  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 1847  --
15:47:52 1848  RETURNS:
15:47:52 1849  GLOBAL_CONSTANTS_V22.TRUE - if has,
15:47:52 1850  GLOBAL_CONSTANTS_V22.FALSE - else
15:47:52 1851  */
15:47:52 1852  	 in_license_id IN  NUMBER,
15:47:52 1853  	 out_result    OUT NUMBER
15:47:52 1854  ) AS
15:47:52 1855  -- VARIABLES
15:47:52 1856  SPROC_NAME		 CONSTANT VARCHAR2(18) := 'HAS_FUTURE_LICENSE';
15:47:52 1857  var_subscription_id	 NUMBER;
15:47:52 1858  var_future_licenses_count NUMBER;
15:47:52 1859  -- EXCEPTIONS
15:47:52 1860  BAD_LICENSE_ID	    EXCEPTION;
15:47:52 1861  BEGIN
15:47:52 1862  
15:47:52 1863  	 BEGIN
15:47:52 1864  	   SELECT
15:47:52 1865  	     LICENSE.SUBSCRIPTION_ID into var_subscription_id
15:47:52 1866  	   FROM
15:47:52 1867  	     LICENSE
15:47:52 1868  	   WHERE
15:47:52 1869  	     LICENSE.ID = in_license_id;
15:47:52 1870  	   EXCEPTION
15:47:52 1871  	     WHEN NO_DATA_FOUND THEN
15:47:52 1872  	       RAISE BAD_LICENSE_ID;
15:47:52 1873  	 END;
15:47:52 1874  
15:47:52 1875  	 SELECT
15:47:52 1876  	   COUNT(*) into var_future_licenses_count
15:47:52 1877  	 FROM
15:47:52 1878  	   LICENSE
15:47:52 1879  	 WHERE
15:47:52 1880  	   LICENSE.ID != in_license_id
15:47:52 1881  	   AND LICENSE.SUBSCRIPTION_ID = var_subscription_id
15:47:52 1882  	   AND LICENSE.END_DATE > sysdate;
15:47:52 1883  
15:47:52 1884  	 IF var_future_licenses_count > 0 THEN
15:47:52 1885  	   out_result := GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 1886  	 ELSE
15:47:52 1887  	   out_result := GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 1888  	 END IF;
15:47:52 1889  
15:47:52 1890  EXCEPTION
15:47:52 1891  WHEN BAD_LICENSE_ID THEN
15:47:52 1892  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1893  	   SPROC_NAME, 'No such license');
15:47:52 1894  WHEN OTHERS THEN
15:47:52 1895  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1896  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1897  END HAS_FUTURE_LICENSE;
15:47:52 1898  
15:47:52 1899  /******************************************************************************/
15:47:52 1900  
15:47:52 1901  PROCEDURE CLOSE_SUBSCRIPTION (
15:47:52 1902  	 in_subscription_id IN NUMBER,
15:47:52 1903  	 in_updated_by	    IN VARCHAR2
15:47:52 1904  ) AS
15:47:52 1905  -- VARIABLES
15:47:52 1906  SPROC_NAME	    CONSTANT VARCHAR2(18) := 'CLOSE_SUBSCRIPTION';
15:47:52 1907  temp_subscription_id NUMBER;
15:47:52 1908  var_licenses_count   NUMBER;
15:47:52 1909  -- EXCEPTIONS
15:47:52 1910  BAD_SUBSCRIPTION_ID    EXCEPTION;
15:47:52 1911  ACTIVE_LICENSES_FOUND  EXCEPTION;
15:47:52 1912  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:52 1913  BEGIN
15:47:52 1914  
15:47:52 1915  	 BEGIN
15:47:52 1916  	   SELECT
15:47:52 1917  	     SUBSCRIPTION.ID into temp_subscription_id
15:47:52 1918  	   FROM
15:47:52 1919  	     SUBSCRIPTION
15:47:52 1920  	   WHERE
15:47:52 1921  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 1922  	   EXCEPTION
15:47:52 1923  	     WHEN NO_DATA_FOUND THEN
15:47:52 1924  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 1925  	 END;
15:47:52 1926  
15:47:52 1927  	 SELECT
15:47:52 1928  	   COUNT(*) into var_licenses_count
15:47:52 1929  	 FROM
15:47:52 1930  	   LICENSE
15:47:52 1931  	 WHERE
15:47:52 1932  	   LICENSE.SUBSCRIPTION_ID = in_subscription_id
15:47:52 1933  	   AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE;
15:47:52 1934  
15:47:52 1935  	 IF var_licenses_count > 0 THEN
15:47:52 1936  	   RAISE ACTIVE_LICENSES_FOUND;
15:47:52 1937  	 END IF;
15:47:52 1938  
15:47:52 1939  	 PROCS_SUBSCRIPTION_V22.UPDATE_SUBSCRIPTION_STATUS(
15:47:52 1940  	   in_subscription_id	     => in_subscription_id,
15:47:52 1941  	   in_updated_by	     => in_updated_by,
15:47:52 1942  	   in_subscription_status_id => GLOBAL_STATUSES_V22.SUBSCRIPTION_CLOSED
15:47:52 1943  	 );
15:47:52 1944  
15:47:52 1945  EXCEPTION
15:47:52 1946  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 1947  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1948  	   SPROC_NAME, 'No such subscription');
15:47:52 1949  WHEN ACTIVE_LICENSES_FOUND THEN
15:47:52 1950  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1951  	   SPROC_NAME, 'Active licenses found');
15:47:52 1952  WHEN OTHERS THEN
15:47:52 1953  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1954  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1955  END CLOSE_SUBSCRIPTION;
15:47:52 1956  
15:47:52 1957  /******************************************************************************/
15:47:52 1958  
15:47:52 1959  PROCEDURE GET_GROUP_ID_BY_SBSCRPTN_ID (
15:47:52 1960  	 in_subscription_id IN NUMBER,
15:47:52 1961  	 out_group_id	    OUT NUMBER
15:47:52 1962  ) AS
15:47:52 1963  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_GROUP_ID_BY_SBSCRPTN_ID';
15:47:52 1964  BEGIN
15:47:52 1965  	 SELECT
15:47:52 1966  	   ACCOUNT.GROUP_ID into out_group_id
15:47:52 1967  	 FROM
15:47:52 1968  	   SUBSCRIPTION
15:47:52 1969  	   INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
15:47:52 1970  	 WHERE
15:47:52 1971  	   SUBSCRIPTION.ID = in_subscription_id;
15:47:52 1972  EXCEPTION
15:47:52 1973  WHEN NO_DATA_FOUND THEN
15:47:52 1974  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1975  	   SPROC_NAME, 'No such subscription');
15:47:52 1976  WHEN OTHERS THEN
15:47:52 1977  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1978  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1979  END GET_GROUP_ID_BY_SBSCRPTN_ID;
15:47:52 1980  
15:47:52 1981  /******************************************************************************/
15:47:52 1982  
15:47:52 1983  PROCEDURE GET_SUBSCRIPTION_PRODUCTS (
15:47:52 1984  /*
15:47:52 1985  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 1986  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 1987  */
15:47:52 1988  	 in_subscription_id IN NUMBER,
15:47:52 1989  	 out_result_set     OUT SYS_REFCURSOR
15:47:52 1990  ) AS
15:47:52 1991  SPROC_NAME CONSTANT VARCHAR2(25) := 'GET_SUBSCRIPTION_PRODUCTS';
15:47:52 1992  -- VARIABLES
15:47:52 1993  var_offer_chain NUMBER;
15:47:52 1994  -- EXCEPTIONS
15:47:52 1995  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 1996  BEGIN
15:47:52 1997  	 BEGIN
15:47:52 1998  	   SELECT
15:47:52 1999  	     SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain
15:47:52 2000  	   FROM
15:47:52 2001  	     SUBSCRIPTION
15:47:52 2002  	   WHERE
15:47:52 2003  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 2004  	   EXCEPTION
15:47:52 2005  	     WHEN NO_DATA_FOUND THEN
15:47:52 2006  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 2007  	 END;
15:47:52 2008  
15:47:52 2009  	 OPEN out_result_set FOR
15:47:52 2010  	 SELECT DISTINCT
15:47:52 2011  	   PRODUCT.ID,
15:47:52 2012  	   PRODUCT.NAME
15:47:52 2013  	 FROM
15:47:52 2014  	   PRODUCT
15:47:52 2015  	 WHERE
15:47:52 2016  	   PRODUCT.ID IN (
15:47:52 2017  	     SELECT DISTINCT
15:47:52 2018  	       PRODUCT_OFFERING.PRODUCT_ID
15:47:52 2019  	     FROM
15:47:52 2020  	       PRODUCT_OFFERING
15:47:52 2021  	     WHERE
15:47:52 2022  	       PRODUCT_OFFERING.ID IN (
15:47:52 2023  		 SELECT DISTINCT
15:47:52 2024  		   OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
15:47:52 2025  		 FROM
15:47:52 2026  		   OFFER_PRODUCT_OFFERING
15:47:52 2027  		 WHERE
15:47:52 2028  		   OFFER_PRODUCT_OFFERING.OFFER_ID IN (
15:47:52 2029  		     SELECT DISTINCT
15:47:52 2030  		       OFFER_OFFER_CHAIN.OFFER_ID
15:47:52 2031  		     FROM
15:47:52 2032  		       OFFER_OFFER_CHAIN
15:47:52 2033  		     WHERE
15:47:52 2034  		       OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain
15:47:52 2035  		   )
15:47:52 2036  	       )
15:47:52 2037  	   );
15:47:52 2038  
15:47:52 2039  EXCEPTION
15:47:52 2040  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 2041  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2042  	   SPROC_NAME, 'No such subscription');
15:47:52 2043  WHEN OTHERS THEN
15:47:52 2044  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2045  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2046  END GET_SUBSCRIPTION_PRODUCTS;
15:47:52 2047  
15:47:52 2048  /******************************************************************************/
15:47:52 2049  
15:47:52 2050  PROCEDURE UPDATE_SUBSCRIPTION_STATUS (
15:47:52 2051  	 in_subscription_id	   IN SUBSCRIPTION.ID%TYPE,
15:47:52 2052  	 in_subscription_status_id IN SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE,
15:47:52 2053  	 in_updated_by		   IN SUBSCRIPTION.UPDATED_BY%TYPE
15:47:52 2054  ) AS
15:47:52 2055  SPROC_NAME CONSTANT VARCHAR2(26) := 'UPDATE_SUBSCRIPTION_STATUS';
15:47:52 2056  BEGIN
15:47:52 2057  	 PROCS_SUBSCRIPTION_CRU_V22.UPDATE_SUBSCRIPTION(
15:47:52 2058  	   in_subscription_id	     => in_subscription_id,
15:47:52 2059  	   in_subscription_status_id => in_subscription_status_id,
15:47:52 2060  	   in_updated_by	     => in_updated_by
15:47:52 2061  	 );
15:47:52 2062  END UPDATE_SUBSCRIPTION_STATUS;
15:47:52 2063  
15:47:52 2064  /******************************************************************************/
15:47:52 2065  
15:47:52 2066  PROCEDURE GET_ACTIVE_INVOICES_IDS (
15:47:52 2067  /*
15:47:52 2068  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 2069  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 2070  */
15:47:52 2071  --  in_subscription_id IN SUBSCRIPTION.ID%TYPE,
15:47:52 2072  	 in_subscription_id IN NUMBER,
15:47:52 2073  	 out_result_set     OUT SYS_REFCURSOR
15:47:52 2074  ) AS
15:47:52 2075  SPROC_NAME CONSTANT VARCHAR2(23) := 'GET_ACTIVE_INVOICES_IDS';
15:47:52 2076  -- VARIABLES
15:47:52 2077  temp_subscription_id SUBSCRIPTION.ID%TYPE;
15:47:52 2078  -- EXCEPTIONS
15:47:52 2079  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 2080  BEGIN
15:47:52 2081  
15:47:52 2082  	 BEGIN
15:47:52 2083  	   SELECT
15:47:52 2084  	     SUBSCRIPTION.ID into temp_subscription_id
15:47:52 2085  	   FROM
15:47:52 2086  	     SUBSCRIPTION
15:47:52 2087  	   WHERE
15:47:52 2088  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 2089  	   EXCEPTION
15:47:52 2090  	     WHEN NO_DATA_FOUND THEN
15:47:52 2091  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 2092  	 END;
15:47:52 2093  
15:47:52 2094  	 OPEN out_result_set FOR
15:47:52 2095  	 SELECT DISTINCT
15:47:52 2096  	   LICENSE.INVOICE_ID as "ID"
15:47:52 2097  	 FROM
15:47:52 2098  	   LICENSE
15:47:52 2099  	 WHERE
15:47:52 2100  	   LICENSE.LICENSE_STATUS_ID in (GLOBAL_STATUSES_V22.LICENSE_ACTIVE, GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD)
15:47:52 2101  	   AND LICENSE.SUBSCRIPTION_ID = in_subscription_id;
15:47:52 2102  
15:47:52 2103  EXCEPTION
15:47:52 2104  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 2105  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2106  	   SPROC_NAME, 'No such subscription');
15:47:52 2107  WHEN OTHERS THEN
15:47:52 2108  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2109  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2110  END GET_ACTIVE_INVOICES_IDS;
15:47:52 2111  
15:47:52 2112  /******************************************************************************/
15:47:52 2113  
15:47:52 2114  PROCEDURE CANCEL_SUBSCRIPTION_INVOICE (
15:47:52 2115  /*
15:47:52 2116  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 2117  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 2118  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:52 2119  */
15:47:52 2120  	 in_invoice_id	      IN NUMBER,
15:47:52 2121  	 in_updated_by	      IN VARCHAR2,
15:47:52 2122  	 in_refundable	      IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE
15:47:52 2123  ) AS
15:47:52 2124  SPROC_NAME CONSTANT VARCHAR2(27) := 'CANCEL_SUBSCRIPTION_INVOICE';
15:47:52 2125  -- VARIABLES
15:47:52 2126  temp_invoice_id	      INVOICE.ID%TYPE;
15:47:52 2127  var_chargeback_amount  NUMBER(10,2);
15:47:52 2128  ver_refund_charge_id   NUMBER;
15:47:52 2129  -- EXCEPTIONS
15:47:52 2130  BAD_INVOICE_ID		    EXCEPTION;
15:47:52 2131  CAN_NOT_CALCULATE_CHARGEBACK EXCEPTION;
15:47:52 2132  CAN_NOT_APPLY_CHARGEBACK     EXCEPTION;
15:47:52 2133  EXCEPTION_MESSAGE	    VARCHAR2(1024);
15:47:52 2134  -- STUB
15:47:52 2135  var_now DATE;
15:47:52 2136  var_revoke NUMBER;
15:47:52 2137  var_refund NUMBER;
15:47:52 2138  var_billed NUMBER;
15:47:52 2139  var_subscription_in_grace NUMBER;
15:47:52 2140  BEGIN
15:47:52 2141  
15:47:52 2142  	 var_now := sysdate;
15:47:52 2143  
15:47:52 2144  	 -- Check that invoice exists
15:47:52 2145  	 BEGIN
15:47:52 2146  	   SELECT
15:47:52 2147  	     INVOICE.ID into temp_invoice_id
15:47:52 2148  	   FROM
15:47:52 2149  	     INVOICE
15:47:52 2150  	   WHERE
15:47:52 2151  	     INVOICE.ID = in_invoice_id;
15:47:52 2152  	   EXCEPTION
15:47:52 2153  	     WHEN NO_DATA_FOUND THEN
15:47:52 2154  	       RAISE BAD_INVOICE_ID;
15:47:52 2155  	 END;
15:47:52 2156  
15:47:52 2157  	 select decode(count(1), 0, GLOBAL_CONSTANTS_V22.FALSE, GLOBAL_CONSTANTS_V22.TRUE) into var_revoke
15:47:52 2158  	 from license l, subscription s, offer_chain oc
15:47:52 2159  	 where
15:47:52 2160  	   l.subscription_id = s.id and
15:47:52 2161  	   s.offer_chain_id = oc.id and
15:47:52 2162  	   l.invoice_id = in_invoice_id and
15:47:52 2163  	   oc.revoke_entitlements = GLOBAL_CONSTANTS_V22.TRUE and
15:47:52 2164  	   rownum < 2;
15:47:52 2165  
15:47:52 2166  	 select
15:47:52 2167  	   decode(s.subscription_status_id, GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD, 1, 0)
15:47:52 2168  	 into
15:47:52 2169  	   var_subscription_in_grace
15:47:52 2170  	 from license l, subscription s
15:47:52 2171  	 where
15:47:52 2172  	   l.subscription_id = s.id and
15:47:52 2173  	   l.invoice_id = in_invoice_id and
15:47:52 2174  	   rownum < 2;
15:47:52 2175  
15:47:52 2176  	 var_billed := PROCS_INVOICE_V22.IS_INVOICE_PAYING_STARTED(in_invoice_id);
15:47:52 2177  	 var_refund := GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 2178  
15:47:52 2179  	 -- Check that transaction for given invoice not started
15:47:52 2180  	 -- if refund enabled calculate and apply chargeback
15:47:52 2181  	 IF (
15:47:52 2182  	     var_billed = GLOBAL_CONSTANTS_V22.TRUE
15:47:52 2183  	   )THEN
15:47:52 2184  	   if (in_refundable = GLOBAL_CONSTANTS_V22.TRUE) then
15:47:52 2185  	     -- If started then we need to calculate refund
15:47:52 2186  	     BEGIN
15:47:52 2187  	       PROCS_INVOICE_V22.CALCULATE_INVOICE_CHARGEBACK(
15:47:52 2188  		 in_invoice_id,
15:47:52 2189  		 var_now,
15:47:52 2190  		 var_chargeback_amount
15:47:52 2191  	       );
15:47:52 2192  	       EXCEPTION
15:47:52 2193  		 WHEN OTHERS THEN
15:47:52 2194  		   EXCEPTION_MESSAGE := SQLERRM;
15:47:52 2195  		   RAISE CAN_NOT_CALCULATE_CHARGEBACK;
15:47:52 2196  	     END;
15:47:52 2197  	     IF var_chargeback_amount > 0 THEN
15:47:52 2198  	       BEGIN
15:47:52 2199  		 PROCS_INVOICE_V22.APPLY_REFUND(
15:47:52 2200  		   in_invoice_id,
15:47:52 2201  		   var_chargeback_amount,
15:47:52 2202  		   in_updated_by,
15:47:52 2203  		   ver_refund_charge_id
15:47:52 2204  		 );
15:47:52 2205  		 EXCEPTION
15:47:52 2206  		   WHEN OTHERS THEN
15:47:52 2207  		     EXCEPTION_MESSAGE := SQLERRM;
15:47:52 2208  		     RAISE CAN_NOT_APPLY_CHARGEBACK;
15:47:52 2209  	       END;
15:47:52 2210  	       var_refund := GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 2211  	     END IF;
15:47:52 2212  	   end if;
15:47:52 2213  	 ELSE
15:47:52 2214  
15:47:52 2215  	   FOR f_transaction_to_close IN (
15:47:52 2216  	     SELECT DISTINCT CHARGE.TRANSACTION_ID AS "ID" FROM CHARGE WHERE CHARGE.INVOICE_ID = in_invoice_id and CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_OPENED
15:47:52 2217  	   )
15:47:52 2218  	   LOOP
15:47:52 2219  	     PROCS_TRANSACTION_V22.UPDATE_TRANSACTION_STATUS(
15:47:52 2220  	       in_transaction_id	=> f_transaction_to_close.ID,
15:47:52 2221  	       in_updated_by		=> in_updated_by,
15:47:52 2222  	       in_transaction_status_id => GLOBAL_STATUSES_V22.TRANSACTION_CLOSED
15:47:52 2223  	     );
15:47:52 2224  	   END LOOP;
15:47:52 2225  	   -- Needs to close charges. No refund.
15:47:52 2226  	   FOR f_charge_to_close IN (
15:47:52 2227  	     SELECT CHARGE.ID FROM CHARGE WHERE CHARGE.INVOICE_ID = in_invoice_id and CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_OPENED
15:47:52 2228  	   )
15:47:52 2229  	   LOOP
15:47:52 2230  	     PROCS_CHARGE_V22.UPDATE_CHARGE_STATUS(
15:47:52 2231  	       in_charge_id	   => f_charge_to_close.ID,
15:47:52 2232  	       in_updated_by	   => in_updated_by,
15:47:52 2233  	       in_charge_status_id => GLOBAL_STATUSES_V22.CHARGE_CANCELED
15:47:52 2234  	     );
15:47:52 2235  	   END LOOP;
15:47:52 2236  
15:47:52 2237  	   PROCS_INVOICE_V22.UPDATE_INVOICE_STATUS(
15:47:52 2238  	     in_invoice_id		    => in_invoice_id,
15:47:52 2239  	     in_updated_by		    => in_updated_by,
15:47:52 2240  	     in_invoice_status_id	    => GLOBAL_STATUSES_V22.INVOICE_CLOSED
15:47:52 2241  	   );
15:47:52 2242  
15:47:52 2243  	 END IF;
15:47:52 2244  	 -- update licenses
15:47:52 2245  	 IF(var_revoke = GLOBAL_CONSTANTS_V22.TRUE OR var_chargeback_amount > 0 OR (var_subscription_in_grace = GLOBAL_CONSTANTS_V22.FALSE AND var_billed = GLOBAL_CONSTANTS_V22.FALSE)) THEN
15:47:52 2246  	   FOR f_license_to_cancel IN (
15:47:52 2247  	     SELECT LICENSE.ID FROM LICENSE WHERE LICENSE.INVOICE_ID = in_invoice_id AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
15:47:52 2248  	   )
15:47:52 2249  	   LOOP
15:47:52 2250  	     PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:52 2251  	       in_license_id	     => f_license_to_cancel.ID,
15:47:52 2252  	       in_license_status_id  => GLOBAL_STATUSES_V22.LICENSE_CLOSED,
15:47:52 2253  	       in_needs_entitlements => GLOBAL_CONSTANTS_V22.TRUE,
15:47:52 2254  	       in_updated_by	     => in_updated_by,
15:47:52 2255  	       in_entitlement_end_date => var_now
15:47:52 2256  	     );
15:47:52 2257  	   END LOOP;
15:47:52 2258  	 ELSE
15:47:52 2259  	   FOR f_license_to_cancel IN (
15:47:52 2260  	     SELECT LICENSE.ID FROM LICENSE WHERE LICENSE.INVOICE_ID = in_invoice_id AND LICENSE.LICENSE_STATUS_ID in (GLOBAL_STATUSES_V22.LICENSE_ACTIVE, GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD)
15:47:52 2261  	   )
15:47:52 2262  	   LOOP
15:47:52 2263  	     PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:52 2264  	       in_license_id	     => f_license_to_cancel.ID,
15:47:52 2265  	       in_license_status_id  => GLOBAL_STATUSES_V22.LICENSE_CLOSED,
15:47:52 2266  	       in_updated_by	     => in_updated_by
15:47:52 2267  	     );
15:47:52 2268  	   END LOOP;
15:47:52 2269  	 END IF;
15:47:52 2270  
15:47:52 2271  
15:47:52 2272  EXCEPTION
15:47:52 2273  WHEN BAD_INVOICE_ID THEN
15:47:52 2274  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2275  	   SPROC_NAME, 'No such invoice');
15:47:52 2276  WHEN CAN_NOT_CALCULATE_CHARGEBACK THEN
15:47:52 2277  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 2278  	   SPROC_NAME, 'Could not calculate invoice refund', EXCEPTION_MESSAGE);
15:47:52 2279  WHEN CAN_NOT_APPLY_CHARGEBACK THEN
15:47:52 2280  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 2281  	   SPROC_NAME, 'Could not apply chargeback', EXCEPTION_MESSAGE);
15:47:52 2282  WHEN OTHERS THEN
15:47:52 2283  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2284  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2285  END CANCEL_SUBSCRIPTION_INVOICE;
15:47:52 2286  
15:47:52 2287  /******************************************************************************/
15:47:52 2288  
15:47:52 2289  PROCEDURE FINALIZE_CANCELATION (
15:47:52 2290  /*
15:47:52 2291  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 2292  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 2293  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:52 2294  */
15:47:52 2295  --  in_subscription_id	 IN SUBSCRIPTION.ID%TYPE,
15:47:52 2296  --  in_cancelation_reason IN SUBSCRIPTION_CANCEL_REASON.VALUE%TYPE,
15:47:52 2297  --  in_cancelation_date	 IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
15:47:52 2298  --  in_note		 IN SUBSCRIPTION_NOTE.NOTE%TYPE,
15:47:52 2299  --  in_agent_id		 IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
15:47:52 2300  --  in_updated_by	 IN SUBSCRIPTION.UPDATED_BY%TYPE
15:47:52 2301  	 in_subscription_id    IN NUMBER,
15:47:52 2302  	 in_cancelation_reason IN VARCHAR2,
15:47:52 2303  	 in_cancelation_date   IN DATE,
15:47:52 2304  	 in_note	       IN VARCHAR2,
15:47:52 2305  	 in_agent_id	       IN NUMBER,
15:47:52 2306  	 in_updated_by	       IN VARCHAR2
15:47:52 2307  ) AS
15:47:52 2308  SPROC_NAME CONSTANT VARCHAR2(20) := 'FINALIZE_CANCELATION';
15:47:52 2309  -- VARIABLES
15:47:52 2310  var_current_subscr_status SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE;
15:47:52 2311  var_sct_id		 SUBSCRIPTION.SCT_ID%TYPE;
15:47:52 2312  var_active_invoices_count NUMBER;
15:47:52 2313  var_license_to_disgrace	 LICENSE.ID%TYPE;
15:47:52 2314  var_now			 DATE := SYSDATE;
15:47:52 2315  -- EXCEPTIONS
15:47:52 2316  BAD_SUBSCRIPTION_ID	   EXCEPTION;
15:47:52 2317  BAD_SUBSCRIPTION_STATUS	   EXCEPTION;
15:47:52 2318  BAD_CANCELATION_REASON	   EXCEPTION;
15:47:52 2319  CAN_NOT_UPDATE_SUBSCRIPTION EXCEPTION;
15:47:52 2320  ACTIVE_INVOICES_FOUND	   EXCEPTION;
15:47:52 2321  CAN_NOT_CREATE_NOTE	   EXCEPTION;
15:47:52 2322  EXCEPTION_MESSAGE	   VARCHAR2(1024);
15:47:52 2323  BEGIN
15:47:52 2324  
15:47:52 2325  	 -- Get current subscription status
15:47:52 2326  	 BEGIN
15:47:52 2327  	   SELECT
15:47:52 2328  	     SUBSCRIPTION.SUBSCRIPTION_STATUS_ID into var_current_subscr_status
15:47:52 2329  	   FROM
15:47:52 2330  	     SUBSCRIPTION
15:47:52 2331  	   WHERE
15:47:52 2332  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 2333  	   EXCEPTION
15:47:52 2334  	     WHEN NO_DATA_FOUND THEN
15:47:52 2335  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 2336  	 END;
15:47:52 2337  
15:47:52 2338  	 -- Check that subscription reason is correct
15:47:52 2339  	 BEGIN
15:47:52 2340  	   SELECT
15:47:52 2341  	     SUBSCRIPTION_CANCEL_REASON.ID into var_sct_id
15:47:52 2342  	   FROM
15:47:52 2343  	     SUBSCRIPTION_CANCEL_REASON
15:47:52 2344  	   WHERE
15:47:52 2345  	     SUBSCRIPTION_CANCEL_REASON.VALUE LIKE in_cancelation_reason
15:47:52 2346  	     AND ROWNUM <= 1;
15:47:52 2347  	   EXCEPTION
15:47:52 2348  	     WHEN NO_DATA_FOUND THEN
15:47:52 2349  	       RAISE BAD_CANCELATION_REASON;
15:47:52 2350  	 END;
15:47:52 2351  
15:47:52 2352  	 -- Check for invoices with active licenses
15:47:52 2353  	 SELECT
15:47:52 2354  	   COUNT(*) into var_active_invoices_count
15:47:52 2355  	 FROM
15:47:52 2356  	   LICENSE
15:47:52 2357  	   INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
15:47:52 2358  	 WHERE
15:47:52 2359  	   LICENSE.LICENSE_STATUS_ID in (GLOBAL_STATUSES_V22.LICENSE_ACTIVE, GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD)
15:47:52 2360  	   AND LICENSE.SUBSCRIPTION_ID = in_subscription_id;
15:47:52 2361  
15:47:52 2362  	 IF var_active_invoices_count > 0 THEN
15:47:52 2363  	   RAISE ACTIVE_INVOICES_FOUND;
15:47:52 2364  	 END IF;
15:47:52 2365  
15:47:52 2366  	 -- Check that subscription is active
15:47:52 2367  	 IF var_current_subscr_status != GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE AND
15:47:52 2368  	    var_current_subscr_status != GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED AND
15:47:52 2369  	    var_current_subscr_status != GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD THEN
15:47:52 2370  	   RAISE BAD_SUBSCRIPTION_STATUS;
15:47:52 2371  	 END IF;
15:47:52 2372  
15:47:52 2373  	 -- Update subscription data
15:47:52 2374  	 BEGIN
15:47:52 2375  	   PROCS_SUBSCRIPTION_CRU_V22.UPDATE_SUBSCRIPTION(
15:47:52 2376  	     in_subscription_id        => in_subscription_id,
15:47:52 2377  	     in_subscription_status_id => GLOBAL_STATUSES_V22.SUBSCRIPTION_CANCELED,
15:47:52 2378  	     in_cancelation_date       => in_cancelation_date,
15:47:52 2379  	     in_updated_by	       => in_updated_by,
15:47:52 2380  	     in_sct_id		       => var_sct_id
15:47:52 2381  	   );
15:47:52 2382  	   EXCEPTION
15:47:52 2383  	     WHEN OTHERS THEN
15:47:52 2384  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 2385  	       RAISE CAN_NOT_UPDATE_SUBSCRIPTION;
15:47:52 2386  	 END;
15:47:52 2387  
15:47:52 2388  	 -- Terminate grace period for licenses in grace [SAR-31]
15:47:52 2389  	 BEGIN
15:47:52 2390  	   SELECT
15:47:52 2391  	     LICENSE.ID into var_license_to_disgrace
15:47:52 2392  	   FROM
15:47:52 2393  	     LICENSE
15:47:52 2394  	   WHERE
15:47:52 2395  	     LICENSE.SUBSCRIPTION_ID = in_subscription_id
15:47:52 2396  	     AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD
15:47:52 2397  	     AND ROWNUM <= 1
15:47:52 2398  	   ORDER BY
15:47:52 2399  	     CREATE_DATE DESC;
15:47:52 2400  	 EXCEPTION
15:47:52 2401  	   WHEN NO_DATA_FOUND THEN
15:47:52 2402  	     var_license_to_disgrace := NULL;
15:47:52 2403  	 END;
15:47:52 2404  
15:47:52 2405  	 IF var_license_to_disgrace IS NOT NULL THEN
15:47:52 2406  	   PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:52 2407  	     in_license_id	     => var_license_to_disgrace,
15:47:52 2408  	     in_license_status_id    => GLOBAL_STATUSES_V22.LICENSE_CLOSED,
15:47:52 2409  	     in_updated_by	     => in_updated_by
15:47:52 2410  	   );
15:47:52 2411  	 END IF;
15:47:52 2412  
15:47:52 2413  	 -- Annotate subscription
15:47:52 2414  	 IF in_note IS NOT NULL THEN
15:47:52 2415  	   BEGIN
15:47:52 2416  	     PROCS_SUBSCRIPTION_V22.ANNOTATE_SUBSCRIPTION(
15:47:52 2417  	       in_subscription_id,
15:47:52 2418  	       in_agent_id,
15:47:52 2419  	       in_note,
15:47:52 2420  	       in_updated_by
15:47:52 2421  	     );
15:47:52 2422  	     EXCEPTION
15:47:52 2423  	      WHEN OTHERS THEN
15:47:52 2424  		EXCEPTION_MESSAGE := SQLERRM;
15:47:52 2425  		RAISE CAN_NOT_CREATE_NOTE;
15:47:52 2426  	   END;
15:47:52 2427  	 END IF;
15:47:52 2428  
15:47:52 2429  EXCEPTION
15:47:52 2430  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 2431  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2432  	   SPROC_NAME, 'No such subscription');
15:47:52 2433  WHEN BAD_SUBSCRIPTION_STATUS THEN
15:47:52 2434  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 2435  	   SPROC_NAME, 'Bad current subscription status');
15:47:52 2436  WHEN BAD_CANCELATION_REASON THEN
15:47:52 2437  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 2438  	   SPROC_NAME, 'Bad cancellation reason');
15:47:52 2439  WHEN CAN_NOT_UPDATE_SUBSCRIPTION THEN
15:47:52 2440  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 2441  	   SPROC_NAME, 'Could not update subscription data', EXCEPTION_MESSAGE);
15:47:52 2442  WHEN ACTIVE_INVOICES_FOUND THEN
15:47:52 2443  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 2444  	   SPROC_NAME, 'Invoices with active licenses found');
15:47:52 2445  WHEN CAN_NOT_CREATE_NOTE THEN
15:47:52 2446  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 2447  	   SPROC_NAME, 'Could not annotate subscription', EXCEPTION_MESSAGE);
15:47:52 2448  --WHEN OTHERS THEN
15:47:52 2449  --  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2450  --    SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2451  END FINALIZE_CANCELATION;
15:47:52 2452  
15:47:52 2453  /******************************************************************************/
15:47:52 2454  
15:47:52 2455  PROCEDURE FINALIZE_FALSE_START (
15:47:52 2456  /*
15:47:52 2457  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 2458  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 2459  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:52 2460  */
15:47:52 2461  --  in_subscription_id	 IN SUBSCRIPTION.ID%TYPE,
15:47:52 2462  --  in_cancelation_date	 IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
15:47:52 2463  --  in_note		 IN SUBSCRIPTION_NOTE.NOTE%TYPE,
15:47:52 2464  --  in_agent_id		 IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
15:47:52 2465  --  in_updated_by	 IN SUBSCRIPTION.UPDATED_BY%TYPE
15:47:52 2466  	 in_subscription_id    IN NUMBER,
15:47:52 2467  	 in_cancelation_date   IN DATE,
15:47:52 2468  	 in_note	       IN VARCHAR2,
15:47:52 2469  	 in_agent_id	       IN NUMBER,
15:47:52 2470  	 in_updated_by	       IN VARCHAR2
15:47:52 2471  ) AS
15:47:52 2472  SPROC_NAME CONSTANT VARCHAR2(20) := 'FINALIZE_FALSE_START';
15:47:52 2473  FALSE_START_REASON CONSTANT NUMBER := 41;
15:47:52 2474  -- VARIABLES
15:47:52 2475  var_current_subscr_status SUBSCRIPTION.SUBSCRIPTION_STATUS_ID%TYPE;
15:47:52 2476  var_active_invoices_count NUMBER;
15:47:52 2477  -- EXCEPTIONS
15:47:52 2478  BAD_SUBSCRIPTION_ID	   EXCEPTION;
15:47:52 2479  BAD_SUBSCRIPTION_STATUS	   EXCEPTION;
15:47:52 2480  CAN_NOT_UPDATE_SUBSCRIPTION EXCEPTION;
15:47:52 2481  ACTIVE_INVOICES_FOUND	   EXCEPTION;
15:47:52 2482  CAN_NOT_CREATE_NOTE	   EXCEPTION;
15:47:52 2483  EXCEPTION_MESSAGE	   VARCHAR2(1024);
15:47:52 2484  BEGIN
15:47:52 2485  
15:47:52 2486  	 -- Get current subscription status
15:47:52 2487  	 BEGIN
15:47:52 2488  	   SELECT
15:47:52 2489  	     SUBSCRIPTION.SUBSCRIPTION_STATUS_ID into var_current_subscr_status
15:47:52 2490  	   FROM
15:47:52 2491  	     SUBSCRIPTION
15:47:52 2492  	   WHERE
15:47:52 2493  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 2494  	   EXCEPTION
15:47:52 2495  	     WHEN NO_DATA_FOUND THEN
15:47:52 2496  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 2497  	 END;
15:47:52 2498  
15:47:52 2499  	 -- Check for invoices with active licenses
15:47:52 2500  	 SELECT
15:47:52 2501  	   COUNT(*) into var_active_invoices_count
15:47:52 2502  	 FROM
15:47:52 2503  	   LICENSE
15:47:52 2504  	   INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
15:47:52 2505  	 WHERE
15:47:52 2506  	   LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
15:47:52 2507  	   AND LICENSE.SUBSCRIPTION_ID = in_subscription_id;
15:47:52 2508  
15:47:52 2509  	 IF var_active_invoices_count > 0 THEN
15:47:52 2510  	   RAISE ACTIVE_INVOICES_FOUND;
15:47:52 2511  	 END IF;
15:47:52 2512  
15:47:52 2513  	 -- Check that subscription is active
15:47:52 2514  	 IF var_current_subscr_status != GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 2515  	    AND var_current_subscr_status != GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED THEN
15:47:52 2516  	   RAISE BAD_SUBSCRIPTION_STATUS;
15:47:52 2517  	 END IF;
15:47:52 2518  
15:47:52 2519  	 -- Update subscription data
15:47:52 2520  	 BEGIN
15:47:52 2521  	   PROCS_SUBSCRIPTION_CRU_V22.UPDATE_SUBSCRIPTION(
15:47:52 2522  	     in_subscription_id        => in_subscription_id,
15:47:52 2523  	     in_subscription_status_id => GLOBAL_STATUSES_V22.SUBSCRIPTION_FALSE_START,
15:47:52 2524  	     in_cancelation_date       => in_cancelation_date,
15:47:52 2525  	     in_updated_by	       => in_updated_by,
15:47:52 2526  	     in_sct_id		       => FALSE_START_REASON
15:47:52 2527  	   );
15:47:52 2528  	   EXCEPTION
15:47:52 2529  	     WHEN OTHERS THEN
15:47:52 2530  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 2531  	       RAISE CAN_NOT_UPDATE_SUBSCRIPTION;
15:47:52 2532  	 END;
15:47:52 2533  
15:47:52 2534  	 -- Annotate subscription
15:47:52 2535  	 IF in_note IS NOT NULL THEN
15:47:52 2536  	   BEGIN
15:47:52 2537  	     PROCS_SUBSCRIPTION_V22.ANNOTATE_SUBSCRIPTION(
15:47:52 2538  	       in_subscription_id,
15:47:52 2539  	       in_agent_id,
15:47:52 2540  	       in_note,
15:47:52 2541  	       in_updated_by
15:47:52 2542  	     );
15:47:52 2543  	     EXCEPTION
15:47:52 2544  	      WHEN OTHERS THEN
15:47:52 2545  		EXCEPTION_MESSAGE := SQLERRM;
15:47:52 2546  		RAISE CAN_NOT_CREATE_NOTE;
15:47:52 2547  	   END;
15:47:52 2548  	 END IF;
15:47:52 2549  
15:47:52 2550  EXCEPTION
15:47:52 2551  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 2552  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2553  	   SPROC_NAME, 'No such subscription');
15:47:52 2554  WHEN BAD_SUBSCRIPTION_STATUS THEN
15:47:52 2555  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 2556  	   SPROC_NAME, 'Bad current subscription status');
15:47:52 2557  WHEN CAN_NOT_UPDATE_SUBSCRIPTION THEN
15:47:52 2558  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 2559  	   SPROC_NAME, 'Could not update subscription data', EXCEPTION_MESSAGE);
15:47:52 2560  WHEN ACTIVE_INVOICES_FOUND THEN
15:47:52 2561  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 2562  	   SPROC_NAME, 'Invoices with active licenses found');
15:47:52 2563  WHEN CAN_NOT_CREATE_NOTE THEN
15:47:52 2564  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 2565  	   SPROC_NAME, 'Could not annotate subscription', EXCEPTION_MESSAGE);
15:47:52 2566  WHEN OTHERS THEN
15:47:52 2567  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2568  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2569  END FINALIZE_FALSE_START;
15:47:52 2570  
15:47:52 2571  /******************************************************************************/
15:47:52 2572  
15:47:52 2573  FUNCTION IS_SUBSCRIPTION_CANCELABLE (
15:47:52 2574  	 in_subscription_id IN NUMBER
15:47:52 2575  ) RETURN NUMBER AS
15:47:52 2576  SPROC_NAME CONSTANT VARCHAR2(26) := 'IS_SUBSCRIPTION_CANCELABLE';
15:47:52 2577  -- VARIABLES
15:47:52 2578  var_is_offer_chain_cancelable NUMBER;
15:47:52 2579  --64603
15:47:52 2580  var_end_date date;
15:47:52 2581  today_date date := current_date;
15:47:52 2582  offer_id number;
15:47:52 2583  -- EXCEPTIONS
15:47:52 2584  COULD_NOT_CHECK	   EXCEPTION;
15:47:52 2585  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 2586  EXCEPTION_MESSAGE   VARCHAR2(1024);
15:47:52 2587  BEGIN
15:47:52 2588  
15:47:52 2589  	 BEGIN
15:47:52 2590  	   -- find offer_chain_id for given in_subscription_id
15:47:52 2591  	   SELECT OFFER_CHAIN_ID into offer_id
15:47:52 2592  	   FROM SUBSCRIPTION
15:47:52 2593  	   WHERE ID = in_subscription_id;
15:47:52 2594  	   EXCEPTION
15:47:52 2595  	     WHEN NO_DATA_FOUND THEN
15:47:52 2596  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 2597  	     WHEN OTHERS THEN
15:47:52 2598  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 2599  	       RAISE COULD_NOT_CHECK;
15:47:52 2600  	 END;
15:47:52 2601  
15:47:52 2602  	 -- find if it was redeemed from a gift certificate
15:47:52 2603  	 BEGIN
15:47:52 2604  	   SELECT l.end_date INTO var_end_date
15:47:52 2605  	   FROM LICENSE l, GIFT_CERTIFICATE g
15:47:52 2606  	   WHERE l.invoice_id = g.finalized_invoice_id
15:47:52 2607  	   AND l.subscription_id = in_subscription_id;
15:47:52 2608  
15:47:52 2609  	   -- if the license end_date is bigger than today, we are in the
15:47:52 2610  	   -- first period, so we cannot cancel; otherwise can cancel
15:47:52 2611  	   IF var_end_date > today_date THEN
15:47:52 2612  	       RETURN GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 2613  	   ELSE
15:47:52 2614  	       RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 2615  	   END IF;
15:47:52 2616  
15:47:52 2617  	   EXCEPTION
15:47:52 2618  	       -- not coming from a gift certificate,
15:47:52 2619  	       -- use old logic
15:47:52 2620  	       WHEN NO_DATA_FOUND THEN
15:47:52 2621  		   SELECT
15:47:52 2622  		       PROCS_OFFER_CHAIN_V22.IS_OFFER_CHAIN_CANCELABLE(offer_id)
15:47:52 2623  		       INTO var_is_offer_chain_cancelable
15:47:52 2624  		   FROM DUAL;
15:47:52 2625  		   RETURN var_is_offer_chain_cancelable;
15:47:52 2626  	 END;
15:47:52 2627  
15:47:52 2628  EXCEPTION
15:47:52 2629  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 2630  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2631  	   SPROC_NAME, 'No such subscription');
15:47:52 2632  WHEN COULD_NOT_CHECK THEN
15:47:52 2633  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 2634  	   SPROC_NAME, 'Could not check if offer chain calcelable', EXCEPTION_MESSAGE);
15:47:52 2635  WHEN OTHERS THEN
15:47:52 2636  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2637  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2638  
15:47:52 2639  END IS_SUBSCRIPTION_CANCELABLE;
15:47:52 2640  /******************************************************************************/
15:47:52 2641  
15:47:52 2642  PROCEDURE GET_SUBSCR_PROD_OFFERRINGS (
15:47:52 2643  /*
15:47:52 2644  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 2645  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 2646  */
15:47:52 2647  	 in_subscription_id IN NUMBER,
15:47:52 2648  	 out_result_set     OUT SYS_REFCURSOR
15:47:52 2649  ) AS
15:47:52 2650  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_SUBSCR_PROD_OFFERRINGS';
15:47:52 2651  -- VARIABLES
15:47:52 2652  var_offer NUMBER;
15:47:52 2653  -- EXCEPTIONS
15:47:52 2654  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 2655  BEGIN
15:47:52 2656  
15:47:52 2657  	 OPEN out_result_set FOR
15:47:52 2658  	 SELECT DISTINCT
15:47:52 2659  	   PRODUCT_OFFERING.ID,
15:47:52 2660  	   PRODUCT_OFFERING.PRODUCT_ID,
15:47:52 2661  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
15:47:52 2662  	   PRODUCT_OFFERING.UNIT_PRICE,
15:47:52 2663  	   PRODUCT_OFFERING.QUANTITY,
15:47:52 2664  	   PRODUCT_OFFERING.CREATE_DATE,
15:47:52 2665  	   PRODUCT_OFFERING.CREATED_BY,
15:47:52 2666  	   CAPABILITY.ID CAP_ID,
15:47:52 2667  	   CAPABILITY.CODE CAP_CODE,
15:47:52 2668  	   CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
15:47:52 2669  	   CAPABILITY.SHAREABLE CAP_SHAREABLE
15:47:52 2670  	 FROM
15:47:52 2671  	   OFFER_PRODUCT_OFFERING
15:47:52 2672  	   INNER JOIN PRODUCT_OFFERING ON PRODUCT_OFFERING.ID = OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
15:47:52 2673  	   INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
15:47:52 2674  	 WHERE
15:47:52 2675  	   OFFER_PRODUCT_OFFERING.OFFER_ID IN (
15:47:52 2676  	     SELECT
15:47:52 2677  	       LICENSE.OFFER_ID
15:47:52 2678  	     FROM
15:47:52 2679  	       SUBSCRIPTION
15:47:52 2680  	       JOIN LICENSE ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND LICENSE.NEEDS_ENTITLEMENTS = GLOBAL_CONSTANTS_V22.TRUE
15:47:52 2681  	     WHERE
15:47:52 2682  	       SUBSCRIPTION.ID = in_subscription_id
15:47:52 2683  	   );
15:47:52 2684  
15:47:52 2685  EXCEPTION
15:47:52 2686  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 2687  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2688  	   SPROC_NAME, 'No such subscription');
15:47:52 2689  WHEN OTHERS THEN
15:47:52 2690  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2691  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2692  END GET_SUBSCR_PROD_OFFERRINGS;
15:47:52 2693  
15:47:52 2694  
15:47:52 2695  PROCEDURE RETRIEVE_SUB_PROD_OFFER (
15:47:52 2696  /*
15:47:52 2697  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 2698  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 2699  */
15:47:52 2700  	 in_subscription_id IN NUMBER,
15:47:52 2701  	 out_result_set     OUT SYS_REFCURSOR
15:47:52 2702  ) AS
15:47:52 2703  SPROC_NAME CONSTANT VARCHAR2(27) := 'RETRIEVE_SUB_PROD_OFFER';
15:47:52 2704  -- VARIABLES
15:47:52 2705  var_offer NUMBER;
15:47:52 2706  -- EXCEPTIONS
15:47:52 2707  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 2708  BEGIN
15:47:52 2709  
15:47:52 2710  	 OPEN out_result_set FOR
15:47:52 2711  	 SELECT DISTINCT
15:47:52 2712  	   PRODUCT_OFFERING.ID,
15:47:52 2713  	   PRODUCT_OFFERING.PRODUCT_ID,
15:47:52 2714  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
15:47:52 2715  	   PRODUCT_OFFERING.UNIT_PRICE,
15:47:52 2716  	   PRODUCT_OFFERING.QUANTITY,
15:47:52 2717  	   PRODUCT_OFFERING.CREATE_DATE,
15:47:52 2718  	   PRODUCT_OFFERING.CREATED_BY,
15:47:52 2719  	   CAPABILITY.ID CAP_ID,
15:47:52 2720  	   CAPABILITY.CODE CAP_CODE,
15:47:52 2721  	   CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
15:47:52 2722  	   CAPABILITY.SHAREABLE CAP_SHAREABLE
15:47:52 2723  	 FROM
15:47:52 2724  	   OFFER_PRODUCT_OFFERING
15:47:52 2725  	   INNER JOIN PRODUCT_OFFERING ON PRODUCT_OFFERING.ID = OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
15:47:52 2726  	   INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
15:47:52 2727  	 WHERE
15:47:52 2728  	   OFFER_PRODUCT_OFFERING.OFFER_ID IN (
15:47:52 2729  	     SELECT
15:47:52 2730  	       LICENSE.OFFER_ID
15:47:52 2731  	     FROM
15:47:52 2732  	       SUBSCRIPTION
15:47:52 2733  	       JOIN LICENSE ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:52 2734  	     WHERE
15:47:52 2735  	       SUBSCRIPTION.ID = in_subscription_id
15:47:52 2736  	   );
15:47:52 2737  
15:47:52 2738  EXCEPTION
15:47:52 2739  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 2740  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2741  	   SPROC_NAME, 'No such subscription');
15:47:52 2742  WHEN OTHERS THEN
15:47:52 2743  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2744  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2745  END RETRIEVE_SUB_PROD_OFFER;
15:47:52 2746  /******************************************************************************/
15:47:52 2747  
15:47:52 2748  
15:47:52 2749  
15:47:52 2750  
15:47:52 2751  PROCEDURE GET_SUBSCR_LIC_OFFER(
15:47:52 2752  /*
15:47:52 2753  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 2754  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 2755  */
15:47:52 2756  	 in_subscription_id IN NUMBER,
15:47:52 2757  	 out_result_set     OUT SYS_REFCURSOR
15:47:52 2758  ) AS
15:47:52 2759  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_SUBSCR_LIC_OFFER';
15:47:52 2760  -- VARIABLES
15:47:52 2761  var_offer_chain NUMBER;
15:47:52 2762  -- EXCEPTIONS
15:47:52 2763  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 2764  BEGIN
15:47:52 2765  	 BEGIN
15:47:52 2766  	   SELECT
15:47:52 2767  	     SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain
15:47:52 2768  	   FROM
15:47:52 2769  	     SUBSCRIPTION
15:47:52 2770  	   WHERE
15:47:52 2771  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 2772  	   EXCEPTION
15:47:52 2773  	     WHEN NO_DATA_FOUND THEN
15:47:52 2774  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 2775  	 END;
15:47:52 2776  
15:47:52 2777  	 OPEN out_result_set FOR
15:47:52 2778  	 SELECT DISTINCT
15:47:52 2779  	   po.ID po_id,
15:47:52 2780  	   po.PRODUCT_ID po_product_id,
15:47:52 2781  	   po.TAX_CATEGORY_ID po_tax_category_id,
15:47:52 2782  	   po.UNIT_PRICE po_unit_price,
15:47:52 2783  	   po.QUANTITY po_quantity,
15:47:52 2784  	   po.CREATE_DATE po_create_date,
15:47:52 2785  	   po.CREATED_BY po_created_by,
15:47:52 2786  	   l.ID l_id,
15:47:52 2787  	   l.license_status_id l_license_status_id,
15:47:52 2788  	   l.start_date l_start_date,
15:47:52 2789  	   l.offer_id l_offer_id,
15:47:52 2790  	   l.subscription_id l_subscription_id,
15:47:52 2791  	   l.invoice_id l_invoice_id,
15:47:52 2792  	   l.end_date l_end_date,
15:47:52 2793  	   l.entitlement_end_date l_entitlement_end_date,
15:47:52 2794  	   l.create_date l_create_date,
15:47:52 2795  	   l.created_by l_created_by,
15:47:52 2796  	   l.is_extension l_is_extension,
15:47:52 2797  	   l.current_offer_index l_current_offer_index,
15:47:52 2798  	   l.current_offer_recurr_num l_current_offer_recurr_num,
15:47:52 2799  	   l.needs_entitlements l_needs_entitlements
15:47:52 2800  	 FROM
15:47:52 2801  	   OFFER_PRODUCT_OFFERING opo,
15:47:52 2802  	   PRODUCT_OFFERING po,
15:47:52 2803  	   SUBSCRIPTION s,
15:47:52 2804  	   LICENSE l
15:47:52 2805  	 WHERE
15:47:52 2806  	   opo.product_offering_id = po.id
15:47:52 2807  	   and po.id = l.offer_id
15:47:52 2808  	   and l.subscription_id = s.id
15:47:52 2809  	   and l.license_status_id = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
15:47:52 2810  	   and s.id = in_subscription_id
15:47:52 2811  	 ;
15:47:52 2812  EXCEPTION
15:47:52 2813  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 2814  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2815  	   SPROC_NAME, 'No such subscription');
15:47:52 2816  WHEN OTHERS THEN
15:47:52 2817  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2818  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2819  END GET_SUBSCR_LIC_OFFER;
15:47:52 2820  
15:47:52 2821  /******************************************************************************/
15:47:52 2822  
15:47:52 2823  PROCEDURE ARE_REFUNDS_PENDING_FOR_SUBSCR (
15:47:52 2824  /*
15:47:52 2825  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 2826  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 2827  */
15:47:52 2828  	 in_subscription_id IN NUMBER,
15:47:52 2829  	 out_result	    OUT NUMBER
15:47:52 2830  ) AS
15:47:52 2831  SPROC_NAME CONSTANT VARCHAR2(30) := 'ARE_REFUNDS_PENDING_FOR_SUBSCR';
15:47:52 2832  -- VARIABLES
15:47:52 2833  temp_subscription_id NUMBER;
15:47:52 2834  var_local_result     NUMBER;
15:47:52 2835  -- EXCEPTIONS
15:47:52 2836  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:52 2837  BEGIN
15:47:52 2838  
15:47:52 2839  	 -- Check that subscription exists
15:47:52 2840  	 BEGIN
15:47:52 2841  	   SELECT
15:47:52 2842  	     SUBSCRIPTION.ID into temp_subscription_id
15:47:52 2843  	   FROM
15:47:52 2844  	     SUBSCRIPTION
15:47:52 2845  	   WHERE
15:47:52 2846  	     SUBSCRIPTION.ID = in_subscription_id;
15:47:52 2847  	   EXCEPTION
15:47:52 2848  	     WHEN NO_DATA_FOUND THEN
15:47:52 2849  	       RAISE BAD_SUBSCRIPTION_ID;
15:47:52 2850  	 END;
15:47:52 2851  
15:47:52 2852  	 var_local_result := NULL;
15:47:52 2853  
15:47:52 2854  	 -- Check charges for each invoice associated with gived subscription
15:47:52 2855  	 FOR f_invoice IN (
15:47:52 2856  	   SELECT DISTINCT
15:47:52 2857  	     LICENSE.INVOICE_ID as "ID"
15:47:52 2858  	   FROM
15:47:52 2859  	     LICENSE
15:47:52 2860  	   WHERE
15:47:52 2861  	     LICENSE.SUBSCRIPTION_ID = in_subscription_id
15:47:52 2862  	     AND LICENSE.LICENSE_STATUS_ID IN ( SELECT GLOBAL_STATUSES_V22.LICENSE_ACTIVE FROM DUAL )
15:47:52 2863  	 )
15:47:52 2864  	 LOOP
15:47:52 2865  
15:47:52 2866  	   -- Check each charge in invoice
15:47:52 2867  	   FOR f_charge IN (
15:47:52 2868  	     SELECT
15:47:52 2869  	       CHARGE.ID,
15:47:52 2870  	       CHARGE.CHARGE_STATUS_ID,
15:47:52 2871  	       CHARGE.CHARGE_AMOUNT
15:47:52 2872  	     FROM
15:47:52 2873  	       CHARGE
15:47:52 2874  	     WHERE
15:47:52 2875  	       CHARGE.INVOICE_ID = f_invoice.ID
15:47:52 2876  	   )
15:47:52 2877  	   LOOP
15:47:52 2878  
15:47:52 2879  	     -- Charge amount < 0     => it is a refund
15:47:52 2880  	     -- Charge status is OPEN => means that it is not processed yet
15:47:52 2881  	     IF f_charge.CHARGE_AMOUNT < 0
15:47:52 2882  		AND f_charge.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_OPENED THEN
15:47:52 2883  	       var_local_result := GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 2884  	     END IF;
15:47:52 2885  
15:47:52 2886  	   END LOOP;
15:47:52 2887  
15:47:52 2888  	 END LOOP;
15:47:52 2889  
15:47:52 2890  	 IF var_local_result IS NULL THEN
15:47:52 2891  	   out_result := GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 2892  	 ELSE
15:47:52 2893  	   out_result := GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 2894  	 END IF;
15:47:52 2895  
15:47:52 2896  EXCEPTION
15:47:52 2897  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:52 2898  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2899  	   SPROC_NAME, 'No such transaction id');
15:47:52 2900  WHEN OTHERS THEN
15:47:52 2901  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2902  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2903  END ARE_REFUNDS_PENDING_FOR_SUBSCR;
15:47:52 2904  
15:47:52 2905  PROCEDURE GET_EXISTING_SUBSCR_NUMBER (
15:47:52 2906  /*
15:47:52 2907  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 2908  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 2909  */
15:47:52 2910  	 in_group_id	    IN NUMBER,
15:47:52 2911  	 in_offer_chain_id  IN NUMBER,
15:47:52 2912  	 out_result	    OUT NUMBER
15:47:52 2913  ) AS
15:47:52 2914  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_EXISTING_SUBSCR_NUMBER';
15:47:52 2915  -- VARIABLES
15:47:52 2916  temp_acct_id	    NUMBER;
15:47:52 2917  temp_oc_id	    NUMBER;
15:47:52 2918  -- EXCEPTIONS
15:47:52 2919  BAD_GROUP_ID EXCEPTION;
15:47:52 2920  BAD_OFFER_CHAIN_ID EXCEPTION;
15:47:52 2921  BEGIN
15:47:52 2922  	 -- Check that group id exists
15:47:52 2923  	 BEGIN
15:47:52 2924  	   SELECT
15:47:52 2925  	     ACCOUNT.ID into temp_acct_id
15:47:52 2926  	   FROM
15:47:52 2927  	     ACCOUNT
15:47:52 2928  	   WHERE
15:47:52 2929  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:52 2930  	   EXCEPTION
15:47:52 2931  	     WHEN NO_DATA_FOUND THEN
15:47:52 2932  	       RAISE BAD_GROUP_ID;
15:47:52 2933  	 END;
15:47:52 2934  	 -- Check that offer chain id exists
15:47:52 2935  	 BEGIN
15:47:52 2936  	   SELECT
15:47:52 2937  	     OFFER_CHAIN.ID into temp_oc_id
15:47:52 2938  	   FROM
15:47:52 2939  	     OFFER_CHAIN
15:47:52 2940  	   WHERE
15:47:52 2941  	     OFFER_CHAIN.ID = in_offer_chain_id;
15:47:52 2942  	   EXCEPTION
15:47:52 2943  	     WHEN NO_DATA_FOUND THEN
15:47:52 2944  	       RAISE BAD_OFFER_CHAIN_ID;
15:47:52 2945  	 END;
15:47:52 2946  	 SELECT
15:47:52 2947  	   COUNT(*) into out_result
15:47:52 2948  	 FROM
15:47:52 2949  	   SUBSCRIPTION
15:47:52 2950  	     INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
15:47:52 2951  	 WHERE
15:47:52 2952  	   ACCOUNT.GROUP_ID = in_group_id
15:47:52 2953  	   AND SUBSCRIPTION.OFFER_CHAIN_ID = in_offer_chain_id
15:47:52 2954  	   AND (
15:47:52 2955  	     SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 2956  	     OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD);
15:47:52 2957  
15:47:52 2958  EXCEPTION
15:47:52 2959  WHEN BAD_GROUP_ID THEN
15:47:52 2960  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2961  	   SPROC_NAME, 'No such transaction id');
15:47:52 2962  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:52 2963  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2964  	   SPROC_NAME, 'No such offer chain id');
15:47:52 2965  WHEN OTHERS THEN
15:47:52 2966  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2967  	   sproc_name, 'Unknown error', sqlerrm);
15:47:52 2968  END GET_EXISTING_SUBSCR_NUMBER;
15:47:52 2969  
15:47:52 2970  PROCEDURE GET_EXISTING_SUBSCR_IDS (
15:47:52 2971  /*
15:47:52 2972  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 2973  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 2974  */
15:47:52 2975  	 in_group_id	    IN NUMBER,
15:47:52 2976  	 in_offer_chain_id  IN NUMBER,
15:47:52 2977  	 out_result_set     OUT SYS_REFCURSOR
15:47:52 2978  ) AS
15:47:52 2979  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_EXISTING_SUBSCR_NUMBER';
15:47:52 2980  -- VARIABLES
15:47:52 2981  temp_acct_id	    NUMBER;
15:47:52 2982  temp_oc_id	    NUMBER;
15:47:52 2983  -- EXCEPTIONS
15:47:52 2984  BAD_GROUP_ID EXCEPTION;
15:47:52 2985  BAD_OFFER_CHAIN_ID EXCEPTION;
15:47:52 2986  BEGIN
15:47:52 2987  
15:47:52 2988  	 -- Check that group id exists
15:47:52 2989  	 BEGIN
15:47:52 2990  	   SELECT
15:47:52 2991  	     ACCOUNT.ID into temp_acct_id
15:47:52 2992  	   FROM
15:47:52 2993  	     ACCOUNT
15:47:52 2994  	   WHERE
15:47:52 2995  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:52 2996  	   EXCEPTION
15:47:52 2997  	     WHEN NO_DATA_FOUND THEN
15:47:52 2998  	       RAISE BAD_GROUP_ID;
15:47:52 2999  	 END;
15:47:52 3000  	 -- Check that offer chain id exists
15:47:52 3001  	 BEGIN
15:47:52 3002  	   SELECT
15:47:52 3003  	     OFFER_CHAIN.ID into temp_oc_id
15:47:52 3004  	   FROM
15:47:52 3005  	     OFFER_CHAIN
15:47:52 3006  	   WHERE
15:47:52 3007  	     OFFER_CHAIN.ID = in_offer_chain_id;
15:47:52 3008  	   EXCEPTION
15:47:52 3009  	     WHEN NO_DATA_FOUND THEN
15:47:52 3010  	       RAISE BAD_OFFER_CHAIN_ID;
15:47:52 3011  	 END;
15:47:52 3012  
15:47:52 3013  	 OPEN out_result_set FOR
15:47:52 3014  	 SELECT
15:47:52 3015  	   SUBSCRIPTION.ID
15:47:52 3016  	 FROM
15:47:52 3017  	   SUBSCRIPTION
15:47:52 3018  	   INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
15:47:52 3019  	 WHERE
15:47:52 3020  	   ACCOUNT.GROUP_ID = in_group_id
15:47:52 3021  	   AND SUBSCRIPTION.OFFER_CHAIN_ID = in_offer_chain_id
15:47:52 3022  	   AND (
15:47:52 3023  	     SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 3024  	     OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD);
15:47:52 3025  
15:47:52 3026  EXCEPTION
15:47:52 3027  WHEN BAD_GROUP_ID THEN
15:47:52 3028  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 3029  	   SPROC_NAME, 'No such transaction id');
15:47:52 3030  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:52 3031  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 3032  	   SPROC_NAME, 'No such offer chain id');
15:47:52 3033  WHEN OTHERS THEN
15:47:52 3034  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 3035  	   sproc_name, 'Unknown error', sqlerrm);
15:47:52 3036  END GET_EXISTING_SUBSCR_IDS;
15:47:52 3037  
15:47:52 3038  PROCEDURE ADD_META_DATA (
15:47:52 3039  /*
15:47:52 3040  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 3041  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 3042  */
15:47:52 3043  	 in_subscription_id IN NUMBER,
15:47:52 3044  	 in_name	    IN VARCHAR2,
15:47:52 3045  	 in_value	    IN VARCHAR2,
15:47:52 3046  	 in_created_by	    IN VARCHAR2
15:47:52 3047  ) AS
15:47:52 3048  SPROC_NAME CONSTANT VARCHAR2(13) := 'ADD_META_DATA';
15:47:52 3049  BEGIN
15:47:52 3050  
15:47:52 3051  	 INSERT INTO SUBSCRIPTION_META_DATA (
15:47:52 3052  	   ID,
15:47:52 3053  	   SUBSCRIPTION_ID,
15:47:52 3054  	   NAME,
15:47:52 3055  	   VALUE,
15:47:52 3056  	   CREATE_DATE,
15:47:52 3057  	   CREATED_BY
15:47:52 3058  	 ) VALUES (
15:47:52 3059  	   SUBMD_ID_SEQ.nextVal,
15:47:52 3060  	   in_subscription_id,
15:47:52 3061  	   in_name,
15:47:52 3062  	   in_value,
15:47:52 3063  	   sysdate,
15:47:52 3064  	   in_created_by
15:47:52 3065  	 );
15:47:52 3066  
15:47:52 3067  EXCEPTION
15:47:52 3068  WHEN OTHERS THEN
15:47:52 3069  	 IF SQLCODE = -2291 THEN
15:47:52 3070  	   PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 3071  	     SPROC_NAME, 'No such subscription');
15:47:52 3072  	 ELSE
15:47:52 3073  	   PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 3074  	     SPROC_NAME, 'Unknown error', sqlerrm);
15:47:52 3075  	 END IF;
15:47:52 3076  END ADD_META_DATA;
15:47:52 3077  
15:47:52 3078  /******************************************************************************/
15:47:52 3079  
15:47:52 3080  PROCEDURE GET_SUBSCRIPTIONS_META_DATA (
15:47:52 3081  /*
15:47:52 3082  APP_EXCEPTION_CODES_V22.INVALID_PARAMETER
15:47:52 3083  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 3084  */
15:47:52 3085  	 in_subscriptions_ids IN core_owner.NUMBER_TABLE,
15:47:52 3086  	 out_result_set       OUT SYS_REFCURSOR
15:47:52 3087  ) AS
15:47:52 3088  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_SUBSCRIPTIONS_META_DATA';
15:47:52 3089  -- Exceptions
15:47:52 3090  SUBSCRIPTION_IDS_IS_NULL EXCEPTION;
15:47:52 3091  BEGIN
15:47:52 3092  
15:47:52 3093  	 IF in_subscriptions_ids IS NULL THEN
15:47:52 3094  	   RAISE SUBSCRIPTION_IDS_IS_NULL;
15:47:52 3095  	 END IF;
15:47:52 3096  
15:47:52 3097  	 OPEN out_result_set FOR
15:47:52 3098  	 SELECT
15:47:52 3099  	   SMD.SUBSCRIPTION_ID,
15:47:52 3100  	   SMD.NAME,
15:47:52 3101  	   SMD.VALUE
15:47:52 3102  	 FROM
15:47:52 3103  	   SUBSCRIPTION_META_DATA SMD
15:47:52 3104  	 WHERE
15:47:52 3105  	   SMD.SUBSCRIPTION_ID IN (SELECT * FROM TABLE(in_subscriptions_ids));
15:47:52 3106  
15:47:52 3107  EXCEPTION
15:47:52 3108  WHEN SUBSCRIPTION_IDS_IS_NULL THEN
15:47:52 3109  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 3110  	   SPROC_NAME, 'Bad subscription ids parameter');
15:47:52 3111  WHEN OTHERS THEN
15:47:52 3112  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 3113  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 3114  END GET_SUBSCRIPTIONS_META_DATA;
15:47:52 3115  
15:47:52 3116  PROCEDURE GET_SUBS_BY_TRNS_ORDER_ID (
15:47:52 3117  /*
15:47:52 3118  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 3119  */
15:47:52 3120  	 in_order_id	    IN TRANSACTION.ORDER_ID%TYPE,
15:47:52 3121  	 out_result_set     OUT SYS_REFCURSOR
15:47:52 3122  ) AS
15:47:52 3123  SPROC_NAME CONSTANT VARCHAR2(25) := 'GET_SUBS_BY_TRNS_ORDER_ID';
15:47:52 3124  BEGIN
15:47:52 3125  	 OPEN out_result_set FOR
15:47:52 3126  	 SELECT subscription.id FROM
15:47:52 3127  	   subscription
15:47:52 3128  	 INNER JOIN license ON license.subscription_id = subscription.id
15:47:52 3129  	 INNER JOIN invoice ON invoice.id = license.invoice_id
15:47:52 3130  	 INNER JOIN charge ON invoice.id = charge.invoice_id
15:47:52 3131  	 INNER JOIN transaction ON charge.transaction_id = transaction.id
15:47:52 3132  	 WHERE transaction.order_id = in_order_id;
15:47:52 3133  EXCEPTION
15:47:52 3134  WHEN OTHERS THEN
15:47:52 3135  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 3136  	   SPROC_NAME, 'Unknown error', sqlerrm);
15:47:52 3137  END GET_SUBS_BY_TRNS_ORDER_ID;
15:47:52 3138  
15:47:52 3139  PROCEDURE GET_OPEN_CHARGES_BY_SUBID
15:47:52 3140  	(
15:47:52 3141  /*
15:47:52 3142  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 3143  */
15:47:52 3144  	 in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
15:47:52 3145  	 out_result_set      OUT SYS_REFCURSOR
15:47:52 3146  )
15:47:52 3147  AS
15:47:52 3148  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_OPEN_CHARGES_BY_SUBID';
15:47:52 3149  BEGIN
15:47:52 3150  	 OPEN out_result_set FOR
15:47:52 3151  	 SELECT
15:47:52 3152  	   c.ID,
15:47:52 3153  	   c.TRANSACTION_ID,
15:47:52 3154  	   c.INSTRUMENT_ID,
15:47:52 3155  	   c.INSTRUMENT_TYPE_ID,
15:47:52 3156  	   c.CHARGE_AMOUNT,
15:47:52 3157  	   c.CREATE_DATE,
15:47:52 3158  	   c.CREATED_BY,
15:47:52 3159  	   c.INVOICE_ID
15:47:52 3160  	  FROM
15:47:52 3161  	   subscription s,
15:47:52 3162  	   license l,
15:47:52 3163  	   charge c
15:47:52 3164  	 WHERE
15:47:52 3165  	   s.id = l.subscription_id and
15:47:52 3166  	   l.invoice_id = c.invoice_id and
15:47:52 3167  	   c.charge_status_id = GLOBAL_STATUSES_V22.CHARGE_OPENED and
15:47:52 3168  	   exists (
15:47:52 3169  	     select null
15:47:52 3170  	     from transaction t
15:47:52 3171  	     where
15:47:52 3172  	       t.id = c.transaction_id
15:47:52 3173  	   ) and
15:47:52 3174  	   s.id = in_subscription_id;
15:47:52 3175  EXCEPTION
15:47:52 3176  WHEN OTHERS THEN
15:47:52 3177  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 3178  	   SPROC_NAME, 'Unknown error', sqlerrm);
15:47:52 3179  END GET_OPEN_CHARGES_BY_SUBID;
15:47:52 3180  
15:47:52 3181  FUNCTION GET_GIFT_CERT_ID_BY_SUB_ID (
15:47:52 3182  	 in_subscription_id IN SUBSCRIPTION.ID%TYPE
15:47:52 3183  ) RETURN NUMBER
15:47:52 3184  AS
15:47:52 3185  var_gift_certificate_id NUMBER;
15:47:52 3186  BEGIN
15:47:52 3187  	     SELECT id INTO var_gift_certificate_id
15:47:52 3188  	     FROM
15:47:52 3189  	       gift_certificate gc
15:47:52 3190  	     WHERE
15:47:52 3191  	       gc.finalized_invoice_id in (
15:47:52 3192  		 SELECT invoice_id
15:47:52 3193  		 FROM (
15:47:52 3194  		   SELECT l.invoice_id
15:47:52 3195  		   FROM
15:47:52 3196  		     license l
15:47:52 3197  		   WHERE
15:47:52 3198  		     l.subscription_id = in_subscription_id
15:47:52 3199  		   ORDER BY l.create_date asc
15:47:52 3200  		 )
15:47:52 3201  	       )
15:47:52 3202  	       and rownum <= 1;
15:47:52 3203  	     return var_gift_certificate_id;
15:47:52 3204  END GET_GIFT_CERT_ID_BY_SUB_ID;
15:47:52 3205  
15:47:52 3206  FUNCTION GET_GIFT_CERT_CODE_BY_SUB_ID (
15:47:52 3207  	 in_subscription_id IN SUBSCRIPTION.ID%TYPE
15:47:52 3208  ) RETURN VARCHAR2
15:47:52 3209  AS
15:47:52 3210  var_gift_certificate_code VARCHAR2(255 BYTE);
15:47:52 3211  BEGIN
15:47:52 3212  	     SELECT code INTO var_gift_certificate_code
15:47:52 3213  	     FROM
15:47:52 3214  	       gift_certificate gc
15:47:52 3215  	     WHERE
15:47:52 3216  	       gc.finalized_invoice_id in (
15:47:52 3217  		 SELECT invoice_id
15:47:52 3218  		 FROM (
15:47:52 3219  		   SELECT l.invoice_id
15:47:52 3220  		   FROM
15:47:52 3221  		     license l
15:47:52 3222  		   WHERE
15:47:52 3223  		     l.subscription_id = in_subscription_id
15:47:52 3224  		 )
15:47:52 3225  	       )
15:47:52 3226  	       and rownum <= 1;
15:47:52 3227  	     return var_gift_certificate_code;
15:47:52 3228  END GET_GIFT_CERT_CODE_BY_SUB_ID;
15:47:52 3229  
15:47:52 3230  PROCEDURE GET_ACTIVE_MEU_SUBS (
15:47:52 3231  	 out_result_set      OUT SYS_REFCURSOR
15:47:52 3232  )
15:47:52 3233  AS
15:47:52 3234  SPROC_NAME     CONSTANT VARCHAR2(19) := 'GET_ACTIVE_MEU_SUBS';
15:47:52 3235  BEGIN
15:47:52 3236  	 OPEN out_result_set FOR
15:47:52 3237  	       SELECT
15:47:52 3238  		   s.id,
15:47:52 3239  		   s.instrument_type_id,
15:47:52 3240  		   s.instrument_id,
15:47:52 3241  		   a.group_id,
15:47:52 3242  		   s.offer_chain_id
15:47:52 3243  	       FROM
15:47:52 3244  		   core_owner.subscription s,
15:47:52 3245  		   core_owner.account a
15:47:52 3246  	       WHERE
15:47:52 3247  		   a.id = s.account_id AND(
15:47:52 3248  		       s.offer_chain_id = 1745992781 OR
15:47:52 3249  		       s.offer_chain_id = 3902149773 OR
15:47:52 3250  		       s.offer_chain_id = 2240201337) AND
15:47:52 3251  		   NOT EXISTS
15:47:52 3252  		   (
15:47:52 3253  		       SELECT
15:47:52 3254  			   1
15:47:52 3255  		       FROM
15:47:52 3256  			   core_owner.subscription ss
15:47:52 3257  		       WHERE
15:47:52 3258  			   ss.account_id = a.id AND(
15:47:52 3259  			       ss.offer_chain_id = 2794122734 OR
15:47:52 3260  			       ss.offer_chain_id = 3564368005 OR
15:47:52 3261  			       ss.offer_chain_id = 757934392)) AND
15:47:52 3262  		   rownum < 5000;
15:47:52 3263  END GET_ACTIVE_MEU_SUBS;
15:47:52 3264  
15:47:52 3265  PROCEDURE GET_EARLIEST_ACTIVE_OFFER_ID (
15:47:52 3266  	 in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
15:47:52 3267  	 out_offer_id	     OUT LICENSE.ID%TYPE
15:47:52 3268  )
15:47:52 3269  AS
15:47:52 3270  SPROC_NAME     CONSTANT VARCHAR2(28) := 'GET_EARLIEST_ACTIVE_OFFER_ID';
15:47:52 3271  BEGIN
15:47:52 3272  	 SELECT OFFER_ID INTO out_offer_id
15:47:52 3273  	 FROM LICENSE L,
15:47:52 3274  	 (
15:47:52 3275  	   SELECT MIN(ID) ID FROM LICENSE
15:47:52 3276  	   WHERE SUBSCRIPTION_ID = in_subscription_id
15:47:52 3277  	   AND LICENSE_STATUS_ID = 2
15:47:52 3278  	   AND SYSDATE BETWEEN START_DATE AND END_DATE
15:47:52 3279  	 ) EARLIEST_ACTIVE_LICENSE
15:47:52 3280  	 WHERE L.ID = EARLIEST_ACTIVE_LICENSE.ID;
15:47:52 3281  END GET_EARLIEST_ACTIVE_OFFER_ID;
15:47:52 3282  
15:47:52 3283  PROCEDURE GET_EARLIEST_ACTIVE_LICENSE_ID (
15:47:52 3284  	 in_subscription_id  IN SUBSCRIPTION.ID%TYPE,
15:47:52 3285  	 out_license_id      OUT LICENSE.ID%TYPE
15:47:52 3286  )
15:47:52 3287  AS
15:47:52 3288  SPROC_NAME     CONSTANT VARCHAR2(30) := 'GET_EARLIEST_ACTIVE_LICENSE_ID';
15:47:52 3289  BEGIN
15:47:52 3290  	 SELECT MIN(ID) into out_license_id
15:47:52 3291  	 FROM LICENSE
15:47:52 3292  	 WHERE SUBSCRIPTION_ID = in_subscription_id
15:47:52 3293  	   AND LICENSE_STATUS_ID = 2
15:47:52 3294  	 AND SYSDATE BETWEEN START_DATE AND END_DATE;
15:47:52 3295  END GET_EARLIEST_ACTIVE_LICENSE_ID;
15:47:52 3296  
15:47:52 3297  PROCEDURE GET_ACT_SUBS_W_CPT_CHARGEBACKS (
15:47:52 3298  	 out_result_set      OUT SYS_REFCURSOR
15:47:52 3299  )
15:47:52 3300  AS
15:47:52 3301  SPROC_NAME     CONSTANT VARCHAR2(30) := 'GET_ACT_SUBS_W_CPT_CHARGEBACKS';
15:47:52 3302  BEGIN
15:47:52 3303  	 OPEN out_result_set FOR
15:47:52 3304  	   SELECT
15:47:52 3305  	     s.id
15:47:52 3306  	   FROM
15:47:52 3307  	     core_owner.transaction t
15:47:52 3308  	   INNER JOIN
15:47:52 3309  	     core_owner.charge c
15:47:52 3310  	   ON
15:47:52 3311  	     c.transaction_id = t.id
15:47:52 3312  	   INNER JOIN
15:47:52 3313  	     core_owner.invoice i
15:47:52 3314  	   ON
15:47:52 3315  	     i.id = c.invoice_id
15:47:52 3316  	   INNER JOIN
15:47:52 3317  	     core_owner.license l
15:47:52 3318  	   ON
15:47:52 3319  	     i.id = l.invoice_id
15:47:52 3320  	   INNER JOIN
15:47:52 3321  	     core_owner.subscription s
15:47:52 3322  	   ON
15:47:52 3323  	     l.subscription_id = s.id
15:47:52 3324  	   INNER JOIN
15:47:52 3325  	     core_owner.account a
15:47:52 3326  	   ON
15:47:52 3327  	     s.account_id = a.id
15:47:52 3328  	   JOIN
15:47:52 3329  	     core_owner.rcn_cpt_chargeback_act_detail ccad
15:47:52 3330  	   ON
15:47:52 3331  	     t.order_id = ccad.merchant_order_number
15:47:52 3332  	   WHERE
15:47:52 3333  	     ccad.chargeback_category = 'RECD'
15:47:52 3334  	   AND s.subscription_status_id in (GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE, GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD);
15:47:52 3335  END GET_ACT_SUBS_W_CPT_CHARGEBACKS;
15:47:52 3336  
15:47:52 3337  PROCEDURE GET_ACT_SUBS_W_PP_CHARGEBACKS (
15:47:52 3338  	 out_result_set      OUT SYS_REFCURSOR
15:47:52 3339  )
15:47:52 3340  AS
15:47:52 3341  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_ACT_SUBS_W_PP_CHARGEBACKS';
15:47:52 3342  BEGIN
15:47:52 3343  	 OPEN out_result_set FOR
15:47:52 3344  	   SELECT
15:47:52 3345  	     s.id
15:47:52 3346  	   FROM
15:47:52 3347  	     core_owner.transaction t
15:47:52 3348  	   INNER JOIN
15:47:52 3349  	     core_owner.charge c
15:47:52 3350  	   ON
15:47:52 3351  	     c.transaction_id = t.id
15:47:52 3352  	   INNER JOIN
15:47:52 3353  	     core_owner.invoice i
15:47:52 3354  	   ON
15:47:52 3355  	     i.id = c.invoice_id
15:47:52 3356  	   INNER JOIN
15:47:52 3357  	     core_owner.license l
15:47:52 3358  	   ON
15:47:52 3359  	     i.id = l.invoice_id
15:47:52 3360  	   INNER JOIN
15:47:52 3361  	     core_owner.subscription s
15:47:52 3362  	   ON
15:47:52 3363  	     l.subscription_id = s.id
15:47:52 3364  	   INNER JOIN
15:47:52 3365  	     core_owner.account a
15:47:52 3366  	   ON
15:47:52 3367  	     s.account_id = a.id
15:47:52 3368  	   INNER JOIN
15:47:52 3369  	     core_owner.rcn_pp_trans_detail ptd
15:47:52 3370  	   ON
15:47:52 3371  	     t.order_id = ptd.invoice_id
15:47:52 3372  	   WHERE
15:47:52 3373  	     ptd.trans_status = 'D'
15:47:52 3374  	   AND s.subscription_status_id in (GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE, GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD);
15:47:52 3375  END GET_ACT_SUBS_W_PP_CHARGEBACKS;
15:47:52 3376  
15:47:52 3377  PROCEDURE GET_GRACE_PERIOD_SUB_REGIS (
15:47:52 3378  	 in_max_days_until_close IN NUMBER,
15:47:52 3379  	 in_num_subs_to_fetch	 IN NUMBER,
15:47:52 3380  	 out_result_set 	 OUT SYS_REFCURSOR
15:47:52 3381  )
15:47:52 3382  AS
15:47:52 3383  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_GRACE_PERIOD_SUB_REGIS';
15:47:52 3384  BEGIN
15:47:52 3385  	 OPEN out_result_set FOR
15:47:52 3386  	 SELECT
15:47:52 3387  	     *
15:47:52 3388  	 FROM
15:47:52 3389  	     (
15:47:52 3390  		 SELECT
15:47:52 3391  		     a.group_id group_id,
15:47:52 3392  		     l.grace_end_date grace_end_date
15:47:52 3393  		 FROM
15:47:52 3394  		     license l
15:47:52 3395  		 JOIN
15:47:52 3396  		     subscription s
15:47:52 3397  		 ON
15:47:52 3398  		     s.id = l.subscription_id
15:47:52 3399  		 JOIN
15:47:52 3400  		     account a
15:47:52 3401  		 ON
15:47:52 3402  		     a.id = s.account_id
15:47:52 3403  		 WHERE
15:47:52 3404  		     l.license_status_id = GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD
15:47:52 3405  		 AND l.grace_end_date - SYSDATE <= in_max_days_until_close
15:47:52 3406  		 AND NOT EXISTS
15:47:52 3407  		     (
15:47:52 3408  			 SELECT
15:47:52 3409  			     NULL
15:47:52 3410  			 FROM
15:47:52 3411  			     process_retry_throttle
15:47:52 3412  			 WHERE
15:47:52 3413  			     process_name = sproc_name
15:47:52 3414  			 AND generic_id = a.group_id)
15:47:52 3415  		 AND rownum <= in_num_subs_to_fetch * 10
15:47:52 3416  		 ORDER BY
15:47:52 3417  		     dbms_random.value)
15:47:52 3418  	 WHERE
15:47:52 3419  	     rownum <= in_num_subs_to_fetch;
15:47:52 3420  END GET_GRACE_PERIOD_SUB_REGIS;
15:47:52 3421  
15:47:52 3422  PROCEDURE GET_ACT_SUBS_W_AMEX_CB (
15:47:52 3423  	 out_result_set      OUT SYS_REFCURSOR
15:47:52 3424  )
15:47:52 3425  AS
15:47:52 3426  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_ACT_SUBS_W_AMEX_CB';
15:47:52 3427  BEGIN
15:47:52 3428  	 OPEN out_result_set FOR
15:47:52 3429  	   SELECT
15:47:52 3430  	     s.id
15:47:52 3431  	   FROM
15:47:52 3432  	     core_owner.transaction t
15:47:52 3433  	   INNER JOIN
15:47:52 3434  	     core_owner.charge c
15:47:52 3435  	   ON
15:47:52 3436  	     c.transaction_id = t.id
15:47:52 3437  	   INNER JOIN
15:47:52 3438  	     core_owner.invoice i
15:47:52 3439  	   ON
15:47:52 3440  	     i.id = c.invoice_id
15:47:52 3441  	   INNER JOIN
15:47:52 3442  	     core_owner.license l
15:47:52 3443  	   ON
15:47:52 3444  	     i.id = l.invoice_id
15:47:52 3445  	   INNER JOIN
15:47:52 3446  	     core_owner.subscription s
15:47:52 3447  	   ON
15:47:52 3448  	     l.subscription_id = s.id
15:47:52 3449  	   INNER JOIN
15:47:52 3450  	     core_owner.account a
15:47:52 3451  	   ON
15:47:52 3452  	     s.account_id = a.id
15:47:52 3453  	   INNER JOIN
15:47:52 3454  	     core_owner.rcn_amex_chargeback ac
15:47:52 3455  	   ON
15:47:52 3456  	     t.order_id = lower(ac.ind_ref_number)
15:47:52 3457  	   WHERE
15:47:52 3458  	     s.subscription_status_id in (GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE, GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD);
15:47:52 3459  END GET_ACT_SUBS_W_AMEX_CB;
15:47:52 3460  
15:47:52 3461  END PROCS_SUBSCRIPTION_V22;
15:47:52 3462  .
15:47:52 SQL> /

Package body created.

Elapsed: 00:00:00.17
15:47:52 SQL> 
15:47:52 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_INVOICE_V22" AS
15:47:52   2  
15:47:52   3  PROCEDURE GET_INVOICE_IDS(
15:47:52   4  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE,
15:47:52   5  	in_fin_id      IN SUBSCRIPTION.INSTRUMENT_ID%TYPE,
15:47:52   6  	out_result_set OUT SYS_REFCURSOR
15:47:52   7  ) AS
15:47:52   8  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_INVOICE_IDS';
15:47:52   9  BEGIN
15:47:52  10  	OPEN out_result_set FOR
15:47:52  11  	  SELECT
15:47:52  12  	    Invoice.ID
15:47:52  13  	  FROM
15:47:52  14  	      Invoice
15:47:52  15  	      INNER JOIN License
15:47:52  16  		ON
15:47:52  17  		  License.Invoice_Id = Invoice.Id
15:47:52  18  	      INNER JOIN Subscription
15:47:52  19  		ON
15:47:52  20  		  License.Subscription_Id = Subscription.Id
15:47:52  21  	      INNER JOIN account
15:47:52  22  		ON
15:47:52  23  		  Subscription.Account_Id = account.id
15:47:52  24  	  WHERE
15:47:52  25  	    Account.Group_Id = in_group_id
15:47:52  26  	    AND SUBSCRIPTION.INSTRUMENT_ID = in_fin_id
15:47:52  27  	    AND Invoice.Invoice_Status_Id = GLOBAL_STATUSES_V22.INVOICE_OPEN;
15:47:52  28  END GET_INVOICE_IDS;
15:47:52  29  
15:47:52  30  
15:47:52  31  PROCEDURE IS_INVOICE_FOR_GC (
15:47:52  32  	in_invoice_id IN NUMBER,
15:47:52  33  	out_result    OUT NUMBER
15:47:52  34  ) AS
15:47:52  35  SPROC_NAME CONSTANT VARCHAR2(32) := 'IS_INVOICE_FOR_GC';
15:47:52  36  var_is_for_gc NUMBER;
15:47:52  37  BEGIN
15:47:52  38  	SELECT
15:47:52  39  	  count(1) into var_is_for_gc
15:47:52  40  	FROM GIFT_CERTIFICATE GC
15:47:52  41  	WHERE GC.PURCHASE_INVOICE_ID = in_invoice_id;
15:47:52  42  
15:47:52  43  	IF var_is_for_gc > 0 THEN
15:47:52  44  	  out_result := 1;
15:47:52  45  	ELSE
15:47:52  46  	  out_result := 0;
15:47:52  47  	END IF;
15:47:52  48  END IS_INVOICE_FOR_GC;
15:47:52  49  
15:47:52  50  PROCEDURE CREATE_INVOICE(
15:47:52  51  /*
15:47:52  52  Throws exceptions:
15:47:52  53  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52  54  */
15:47:52  55  	  in_invoice_status IN NUMBER,
15:47:52  56  	  in_created_by     IN VARCHAR2,
15:47:52  57  	  in_tax_exempt_id  IN VARCHAR2,
15:47:52  58  	  out_invoice_id    OUT NUMBER
15:47:52  59  ) AS
15:47:52  60  -- VARIABLES
15:47:52  61  SPROC_NAME	 CONSTANT VARCHAR2(14) := 'CREATE_INVOICE';
15:47:52  62  var_new_invoice_id NUMBER;
15:47:52  63  -- EXCEPTIONS
15:47:52  64  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:52  65  BEGIN
15:47:52  66  
15:47:52  67  	PROCS_INVOICE_CRU_V22.CREATE_INVOICE(
15:47:52  68  	  out_invoice_id		 => var_new_invoice_id,
15:47:52  69  	  in_created_by 		 => in_created_by,
15:47:52  70  	  in_invoice_status_id		 => in_invoice_status,
15:47:52  71  	  in_tax_exempt_id		 => in_tax_exempt_id
15:47:52  72  	);
15:47:52  73  
15:47:52  74  	out_invoice_id := var_new_invoice_id;
15:47:52  75  
15:47:52  76  EXCEPTION
15:47:52  77  WHEN OTHERS THEN
15:47:52  78  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52  79  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52  80  END CREATE_INVOICE;
15:47:52  81  
15:47:52  82  /************************************************************/
15:47:52  83  
15:47:52  84  PROCEDURE GET_PENDING_INVOICES (
15:47:52  85  /*
15:47:52  86  Throws exceptions:
15:47:52  87  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52  88  */
15:47:52  89  	out_result_set	     OUT SYS_REFCURSOR,
15:47:52  90  	in_row_number	     IN NUMBER DEFAULT NULL
15:47:52  91  ) AS
15:47:52  92  SPROC_NAME CONSTANT VARCHAR2(20) := 'GET_PENDING_INVOICES';
15:47:52  93  -- COMSTANTS
15:47:52  94  DEFAULT_ROW_NUMBER CONSTANT NUMBER := 1;
15:47:52  95  -- VARIABLES
15:47:52  96  var_row_number NUMBER;
15:47:52  97  BEGIN
15:47:52  98  
15:47:52  99  	IF in_row_number IS NULL THEN
15:47:52 100  	  var_row_number := DEFAULT_ROW_NUMBER;
15:47:52 101  	ELSE
15:47:52 102  	  var_row_number := in_row_number;
15:47:52 103  	END IF;
15:47:52 104  
15:47:52 105  	-- Invoices with one or more payments(charges) with transaction status PENDING
15:47:52 106  	OPEN out_result_set FOR
15:47:52 107  SELECT * FROM
15:47:52 108  (
15:47:52 109  	SELECT
15:47:52 110  	  INVOICE.ID
15:47:52 111  	FROM
15:47:52 112  	  CHARGE
15:47:52 113  	  INNER JOIN INVOICE ON CHARGE.INVOICE_ID = INVOICE.ID
15:47:52 114  	WHERE
15:47:52 115  	  EXISTS(
15:47:52 116  	    SELECT NULL
15:47:52 117  	    FROM TRANSACTION
15:47:52 118  	    WHERE
15:47:52 119  	      TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V22.TRANSACTION_PENDING
15:47:52 120  	      AND TRANSACTION.ID = CHARGE.TRANSACTION_ID
15:47:52 121  	      AND TRANSACTION.IS_REFUND != GLOBAL_CONSTANTS_V22.TRUE
15:47:52 122  	      AND TRANSACTION.TRANSACTION_AMOUNT >= 0
15:47:52 123  	  )
15:47:52 124  	  AND
15:47:52 125  	  NOT EXISTS(
15:47:52 126  	    SELECT NULL
15:47:52 127  	    FROM PROCESS_RETRY_THROTTLE
15:47:52 128  	    WHERE PROCESS_NAME = SPROC_NAME
15:47:52 129  	      AND GENERIC_ID = INVOICE.ID
15:47:52 130  	  )
15:47:52 131  	  AND ROWNUM <= var_row_number*10
15:47:52 132  	  ORDER BY dbms_random.value
15:47:52 133  ) WHERE
15:47:52 134  	  ROWNUM <= var_row_number;
15:47:52 135  
15:47:52 136  EXCEPTION
15:47:52 137  WHEN OTHERS THEN
15:47:52 138  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 139  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 140  END GET_PENDING_INVOICES;
15:47:52 141  
15:47:52 142  /************************************************************/
15:47:52 143  
15:47:52 144  FUNCTION F_CALCULATE_INVOICE_AMOUNT(
15:47:52 145  	in_invoice_id IN  NUMBER
15:47:52 146  ) RETURN NUMBER AS
15:47:52 147  var_amount NUMBER;
15:47:52 148  BEGIN
15:47:52 149  
15:47:52 150  	CALCULATE_INVOICE_AMOUNT(in_invoice_id, var_amount);
15:47:52 151  	RETURN var_amount;
15:47:52 152  
15:47:52 153  END;
15:47:52 154  
15:47:52 155  PROCEDURE CALCULATE_INVOICE_AMOUNT (
15:47:52 156  /*
15:47:52 157  Throws exceptions:
15:47:52 158  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 159  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 160  */
15:47:52 161  	in_invoice_id IN  NUMBER,
15:47:52 162  	out_amount    OUT NUMBER
15:47:52 163  ) AS
15:47:52 164  -- VARIABLES
15:47:52 165  SPROC_NAME	     CONSTANT VARCHAR2(24) := 'CALCULATE_INVOICE_AMOUNT';
15:47:52 166  temp_invoice_id	     NUMBER;
15:47:52 167  var_total_amount	     NUMBER(10,6);
15:47:52 168  var_final_amount	     NUMBER(10,2);
15:47:52 169  var_line_item_amount   NUMBER(10,6);
15:47:52 170  
15:47:52 171  var_line_items_set     SYS_REFCURSOR;
15:47:52 172  var_line_item_id	     NUMBER;
15:47:52 173  var_line_item_quantity NUMBER;
15:47:52 174  var_line_item_price    NUMBER (10,2);
15:47:52 175  
15:47:52 176  var_discount_fixed_amount NUMBER (10,2);
15:47:52 177  var_discount_percent_amount NUMBER (10,2);
15:47:52 178  
15:47:52 179  -- EXCEPTIONS
15:47:52 180  BAD_INVOICE_ID		    EXCEPTION;
15:47:52 181  CAN_NOT_CALC_LINE_ITEM_AMOUNT EXCEPTION;
15:47:52 182  EXCEPTION_MESSAGE VARCHAR2(1024);
15:47:52 183  BEGIN
15:47:52 184  
15:47:52 185  	var_total_amount := 0;
15:47:52 186  
15:47:52 187  	-- Check that given invoice exists
15:47:52 188  	BEGIN
15:47:52 189  	  SELECT
15:47:52 190  	    INVOICE.ID into temp_invoice_id
15:47:52 191  	  FROM
15:47:52 192  	    INVOICE
15:47:52 193  	  WHERE
15:47:52 194  	    INVOICE.ID = in_invoice_id
15:47:52 195  	    AND ROWNUM <= 1;
15:47:52 196  	  EXCEPTION
15:47:52 197  	    WHEN NO_DATA_FOUND THEN
15:47:52 198  	      RAISE BAD_INVOICE_ID;
15:47:52 199  	END;
15:47:52 200  
15:47:52 201  	-- Calculate amount for each line item in invoice
15:47:52 202  	FOR f_line_item IN (
15:47:52 203  	  SELECT
15:47:52 204  	    LINE_ITEM.ID
15:47:52 205  	  FROM
15:47:52 206  	    LINE_ITEM
15:47:52 207  	  WHERE
15:47:52 208  	    LINE_ITEM.INVOICE_ID = in_invoice_id
15:47:52 209  	)
15:47:52 210  	LOOP
15:47:52 211  	  BEGIN
15:47:52 212  	    PROCS_LINE_ITEMS_V22.CALCULATE_LINE_ITEM_AMOUNT(
15:47:52 213  	      in_line_item_id => f_line_item.ID,
15:47:52 214  	      out_amount      => var_line_item_amount
15:47:52 215  	    );
15:47:52 216  	    var_total_amount := var_total_amount + var_line_item_amount;
15:47:52 217  	    EXCEPTION
15:47:52 218  	      WHEN OTHERS THEN
15:47:52 219  		EXCEPTION_MESSAGE := SQLERRM;
15:47:52 220  		RAISE CAN_NOT_CALC_LINE_ITEM_AMOUNT;
15:47:52 221  	  END;
15:47:52 222  	END LOOP;
15:47:52 223  	var_final_amount := var_total_amount;
15:47:52 224  	out_amount := var_final_amount;
15:47:52 225  
15:47:52 226  EXCEPTION
15:47:52 227  WHEN BAD_INVOICE_ID THEN
15:47:52 228  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 229  	  SPROC_NAME, 'No such invoice');
15:47:52 230  WHEN CAN_NOT_CALC_LINE_ITEM_AMOUNT THEN
15:47:52 231  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 232  	  SPROC_NAME, 'Could not calculate line item amount', EXCEPTION_MESSAGE);
15:47:52 233  WHEN OTHERS THEN
15:47:52 234  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 235  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 236  END;
15:47:52 237  
15:47:52 238  PROCEDURE GET_ACCOUNT_BY_INVOICE_ID (
15:47:52 239  /*
15:47:52 240  Throws exceptions:
15:47:52 241  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 242  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 243  */
15:47:52 244  	in_invoice_id  IN  NUMBER,
15:47:52 245  	out_account_id OUT NUMBER
15:47:52 246  ) AS
15:47:52 247  -- VARIABLES
15:47:52 248  SPROC_NAME	 CONSTANT VARCHAR2(25) := 'GET_ACCOUNT_BY_INVOICE_ID';
15:47:52 249  temp_gc_account_id NUMBER;
15:47:52 250  temp_ss_account_id NUMBER;
15:47:52 251  temp_invoice_id	 NUMBER;
15:47:52 252  -- EXCEPTIONS
15:47:52 253  BAD_INVOICE_ID	   EXCEPTION;
15:47:52 254  CAN_NOT_FIND_ACCOUNT EXCEPTION;
15:47:52 255  BEGIN
15:47:52 256  
15:47:52 257  	-- Check that given invoice exists
15:47:52 258  	BEGIN
15:47:52 259  	  SELECT
15:47:52 260  	    INVOICE.ID into temp_invoice_id
15:47:52 261  	  FROM
15:47:52 262  	    INVOICE
15:47:52 263  	  WHERE
15:47:52 264  	    INVOICE.ID = in_invoice_id;
15:47:52 265  	  EXCEPTION
15:47:52 266  	    WHEN NO_DATA_FOUND THEN
15:47:52 267  	      RAISE BAD_INVOICE_ID;
15:47:52 268  	END;
15:47:52 269  
15:47:52 270  	-- Try to find gift certificate with given invoice
15:47:52 271  	BEGIN
15:47:52 272  	  SELECT
15:47:52 273  	    ACCOUNT.GROUP_ID into temp_gc_account_id
15:47:52 274  	  FROM
15:47:52 275  	    GIFT_CERTIFICATE
15:47:52 276  	    INNER JOIN ACCOUNT ON GIFT_CERTIFICATE.PURCHASER_GROUP_ID = ACCOUNT.GROUP_ID
15:47:52 277  	  WHERE
15:47:52 278  	    GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = in_invoice_id
15:47:52 279  	    AND ROWNUM <= 1;
15:47:52 280  	  EXCEPTION
15:47:52 281  	    WHEN NO_DATA_FOUND THEN
15:47:52 282  	      temp_gc_account_id := NULL;
15:47:52 283  	END;
15:47:52 284  
15:47:52 285  	-- check subscriptions for given invoice
15:47:52 286  	IF temp_gc_account_id IS NOT NULL THEN
15:47:52 287  	  out_account_id := temp_gc_account_id;
15:47:52 288  	ELSE
15:47:52 289  	  BEGIN
15:47:52 290  	    SELECT
15:47:52 291  	      ACCOUNT.GROUP_ID into temp_ss_account_id
15:47:52 292  	    FROM
15:47:52 293  	      LICENSE
15:47:52 294  	      INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:52 295  	      INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
15:47:52 296  	    WHERE
15:47:52 297  	      LICENSE.INVOICE_ID = in_invoice_id
15:47:52 298  	      AND ROWNUM <= 1;
15:47:52 299  	    EXCEPTION
15:47:52 300  	      WHEN NO_DATA_FOUND THEN
15:47:52 301  		temp_ss_account_id := NULL;
15:47:52 302  	  END;
15:47:52 303  	  IF temp_ss_account_id IS NULL THEN
15:47:52 304  	    RAISE CAN_NOT_FIND_ACCOUNT;
15:47:52 305  	  ELSE
15:47:52 306  	    out_account_id := temp_ss_account_id;
15:47:52 307  	  END IF;
15:47:52 308  	END IF;
15:47:52 309  
15:47:52 310  EXCEPTION
15:47:52 311  WHEN BAD_INVOICE_ID THEN
15:47:52 312  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 313  	  SPROC_NAME, 'No such invoice');
15:47:52 314  WHEN CAN_NOT_FIND_ACCOUNT THEN
15:47:52 315  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 316  	  SPROC_NAME, 'Could not find account by given invoice id');
15:47:52 317  WHEN OTHERS THEN
15:47:52 318  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 319  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 320  END GET_ACCOUNT_BY_INVOICE_ID;
15:47:52 321  
15:47:52 322  /*****************************************************************/
15:47:52 323  
15:47:52 324  PROCEDURE GET_INVOICE_DETAILS (
15:47:52 325  /*
15:47:52 326  Throws exceptions:
15:47:52 327  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 328  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 329  */
15:47:52 330  	in_invoice_id	   IN  NUMBER,
15:47:52 331  	out_group_id	   OUT NUMBER,
15:47:52 332  	out_status_id	   OUT NUMBER,
15:47:52 333  	out_line_items_set OUT SYS_REFCURSOR,
15:47:52 334  	out_pp_charges_set OUT SYS_REFCURSOR,
15:47:52 335  	out_cc_charges_set OUT SYS_REFCURSOR,
15:47:52 336  	out_gc_charges_set OUT SYS_REFCURSOR
15:47:52 337  ) AS
15:47:52 338  -- VARIABLES
15:47:52 339  SPROC_NAME CONSTANT VARCHAR2(19) := 'GET_INVOICE_DETAILS';
15:47:52 340  
15:47:52 341  -- EXCEPTIONS
15:47:52 342  BAD_INVOICE_ID	     EXCEPTION;
15:47:52 343  CAN_NOT_FIND_ACCOUNT   EXCEPTION;
15:47:52 344  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:52 345  BEGIN
15:47:52 346  
15:47:52 347  	-- get invoice status
15:47:52 348  	BEGIN
15:47:52 349  	  SELECT
15:47:52 350  	    INVOICE.INVOICE_STATUS_ID into out_status_id
15:47:52 351  	  FROM
15:47:52 352  	    INVOICE
15:47:52 353  	  WHERE
15:47:52 354  	    INVOICE.ID = in_invoice_id;
15:47:52 355  	  EXCEPTION
15:47:52 356  	    WHEN NO_DATA_FOUND THEN
15:47:52 357  	      RAISE BAD_INVOICE_ID;
15:47:52 358  	END;
15:47:52 359  
15:47:52 360  	-- get group id
15:47:52 361  	BEGIN
15:47:52 362  	  PROCS_INVOICE_V22.GET_ACCOUNT_BY_INVOICE_ID(in_invoice_id, out_group_id);
15:47:52 363  	  EXCEPTION
15:47:52 364  	    WHEN OTHERS THEN
15:47:52 365  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 366  	      RAISE CAN_NOT_FIND_ACCOUNT;
15:47:52 367  	END;
15:47:52 368  
15:47:52 369  	-- get all line items for given invoice
15:47:52 370  	OPEN out_line_items_set FOR
15:47:52 371  	SELECT
15:47:52 372  	  LINE_ITEM.AMOUNT,
15:47:52 373  	  LINE_ITEM.ID,
15:47:52 374  	  LINE_ITEM.CREATED_BY,
15:47:52 375  	  LINE_ITEM.CREATE_DATE,
15:47:52 376  	  LINE_ITEM.DISCOUNT_AMOUNT,
15:47:52 377  	  LINE_ITEM.TAXES_AMOUNT,
15:47:52 378  	  LINE_ITEM.PRODUCT_OFFER_ID,
15:47:52 379  	  LINE_ITEM.INVOICE_ID
15:47:52 380  	FROM
15:47:52 381  	  LINE_ITEM
15:47:52 382  	WHERE
15:47:52 383  	  LINE_ITEM.INVOICE_ID = in_invoice_id;
15:47:52 384  
15:47:52 385  	-- get all pp charges for given invoice
15:47:52 386  	OPEN out_pp_charges_set FOR
15:47:52 387  	SELECT
15:47:52 388  	  CHARGE.ID as "CHARGE_ID",
15:47:52 389  	  CHARGE_AMOUNT,
15:47:52 390  	  CHARGE.INSTRUMENT_ID,
15:47:52 391  	  CHARGE.CHARGE_STATUS_ID
15:47:52 392  	FROM
15:47:52 393  	  CHARGE
15:47:52 394  	WHERE
15:47:52 395  	  CHARGE.INVOICE_ID = in_invoice_id
15:47:52 396  	  AND CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL;
15:47:52 397  
15:47:52 398  	-- get all credir cards for given invoice
15:47:52 399  	OPEN out_cc_charges_set FOR
15:47:52 400  	SELECT
15:47:52 401  	  CHARGE.ID as "CHARGE_ID",
15:47:52 402  	  CHARGE.CHARGE_AMOUNT,
15:47:52 403  	  CHARGE.INSTRUMENT_ID,
15:47:52 404  	  CHARGE.CHARGE_STATUS_ID
15:47:52 405  	FROM
15:47:52 406  	  CHARGE
15:47:52 407  	WHERE
15:47:52 408  	  CHARGE.INVOICE_ID = in_invoice_id
15:47:52 409  	  AND CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD;
15:47:52 410  
15:47:52 411  	OPEN out_gc_charges_set FOR
15:47:52 412  	SELECT
15:47:52 413  	  CHARGE.ID as "CHARGE_ID",
15:47:52 414  	  CHARGE.CHARGE_AMOUNT,
15:47:52 415  	  CHARGE.INSTRUMENT_ID,
15:47:52 416  	  CHARGE.CHARGE_STATUS_ID
15:47:52 417  	FROM
15:47:52 418  	  CHARGE
15:47:52 419  	WHERE
15:47:52 420  	  CHARGE.INVOICE_ID = in_invoice_id
15:47:52 421  	  AND CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V22.INSTRUMENT_GIFT_CERTIFICATE;
15:47:52 422  
15:47:52 423  EXCEPTION
15:47:52 424  WHEN BAD_INVOICE_ID THEN
15:47:52 425  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 426  	  SPROC_NAME, 'No such invoice');
15:47:52 427  WHEN CAN_NOT_FIND_ACCOUNT THEN
15:47:52 428  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 429  	  SPROC_NAME, 'Could not find account for given invoice id', EXCEPTION_MESSAGE);
15:47:52 430  WHEN OTHERS THEN
15:47:52 431  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 432  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 433  END GET_INVOICE_DETAILS;
15:47:52 434  
15:47:52 435  /******************************************************/
15:47:52 436  -- norlov: #38796
15:47:52 437  PROCEDURE GET_TRANSACTION_INVOICE (
15:47:52 438  /*
15:47:52 439  Throws exceptions:
15:47:52 440  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 441  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 442  */
15:47:52 443  	in_transaction_id  IN  NUMBER,
15:47:52 444  	out_result_set	      OUT SYS_REFCURSOR
15:47:52 445  ) AS
15:47:52 446  SPROC_NAME CONSTANT  VARCHAR2(23) := 'GET_TRANSACTION_INVOICE';
15:47:52 447  -- VARIABLES
15:47:52 448  temp_transaction_id  NUMBER;
15:47:52 449  var_invoice_id	   NUMBER;
15:47:52 450  var_subscription_id  NUMBER;
15:47:52 451  var_offer_chain_id   NUMBER;
15:47:52 452  var_offer_chain_name VARCHAR2(255);
15:47:52 453  -- EXCEPTIONS
15:47:52 454  BAD_TRANSACTION_ID     EXCEPTION;
15:47:52 455  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:52 456  BEGIN
15:47:52 457   -- check if there is the transaction
15:47:52 458  	BEGIN
15:47:52 459  	  SELECT
15:47:52 460  	    TRANSACTION.ID into temp_transaction_id
15:47:52 461  	  FROM
15:47:52 462  	    TRANSACTION
15:47:52 463  	  WHERE
15:47:52 464  	    TRANSACTION.ID = in_transaction_id;
15:47:52 465  	  EXCEPTION
15:47:52 466  	    WHEN NO_DATA_FOUND THEN
15:47:52 467  	      RAISE BAD_TRANSACTION_ID;
15:47:52 468  	END;
15:47:52 469  
15:47:52 470  	-- Get invoice id
15:47:52 471  	SELECT DISTINCT
15:47:52 472  	  CHARGE.INVOICE_ID into var_invoice_id
15:47:52 473  	FROM
15:47:52 474  	  CHARGE
15:47:52 475  	WHERE
15:47:52 476  	  CHARGE.TRANSACTION_ID = in_transaction_id;
15:47:52 477  
15:47:52 478  	-- Get subscription id if exists
15:47:52 479  	BEGIN
15:47:52 480  	  SELECT DISTINCT
15:47:52 481  	    LICENSE.SUBSCRIPTION_ID into var_subscription_id
15:47:52 482  	  FROM
15:47:52 483  	    LICENSE
15:47:52 484  	  WHERE
15:47:52 485  	    LICENSE.INVOICE_ID = var_invoice_id;
15:47:52 486  	  EXCEPTION
15:47:52 487  	    WHEN NO_DATA_FOUND THEN
15:47:52 488  	      var_subscription_id := NULL;
15:47:52 489  	END;
15:47:52 490  
15:47:52 491  	IF var_subscription_id IS NOT NULL THEN
15:47:52 492  	  -- Fetch offer chain from subscription
15:47:52 493  	  SELECT
15:47:52 494  	    OFFER_CHAIN.ID,
15:47:52 495  	    OFFER_CHAIN.NAME
15:47:52 496  	    into
15:47:52 497  	    var_offer_chain_id,
15:47:52 498  	    var_offer_chain_name
15:47:52 499  	  FROM
15:47:52 500  	    OFFER_CHAIN
15:47:52 501  	    INNER JOIN SUBSCRIPTION ON SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:52 502  	  WHERE
15:47:52 503  	    SUBSCRIPTION.ID = var_subscription_id;
15:47:52 504  	ELSE
15:47:52 505  	  -- Fetch offer chain from GC
15:47:52 506  	  SELECT
15:47:52 507  	    OFFER_CHAIN.ID,
15:47:52 508  	    OFFER_CHAIN.NAME
15:47:52 509  	    into
15:47:52 510  	    var_offer_chain_id,
15:47:52 511  	    var_offer_chain_name
15:47:52 512  	  FROM
15:47:52 513  	    OFFER_CHAIN
15:47:52 514  	    INNER JOIN GIFT_CERTIFICATE ON GIFT_CERTIFICATE.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:52 515  	  WHERE
15:47:52 516  	    GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = var_invoice_id;
15:47:52 517  	END IF;
15:47:52 518  
15:47:52 519  	OPEN out_result_set FOR
15:47:52 520  	SELECT DISTINCT
15:47:52 521  	  var_invoice_id       AS "INVOICE_ID",
15:47:52 522  	  var_subscription_id  AS "SUBSCRIPTION_ID",
15:47:52 523  	  var_offer_chain_id   AS "OFFER_CHAIN_ID",
15:47:52 524  	  var_offer_chain_name AS "OFFER_CHAIN_NAME"
15:47:52 525  	FROM
15:47:52 526  	  DUAL;
15:47:52 527  
15:47:52 528  EXCEPTION
15:47:52 529  WHEN BAD_TRANSACTION_ID THEN
15:47:52 530  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 531  	  SPROC_NAME, 'No such transaction');
15:47:52 532  WHEN OTHERS THEN
15:47:52 533  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 534  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 535  END GET_TRANSACTION_INVOICE;
15:47:52 536  
15:47:52 537  /******************************************************/
15:47:52 538  
15:47:52 539  PROCEDURE UPDATE_INVOICE_STATUS (
15:47:52 540  /*
15:47:52 541  Throws exceptions:
15:47:52 542  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 543  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 544  */
15:47:52 545  	in_invoice_id		       IN NUMBER,
15:47:52 546  	in_invoice_status_id	       IN NUMBER,
15:47:52 547  	in_updated_by		       IN VARCHAR2
15:47:52 548  ) AS
15:47:52 549  SPROC_NAME CONSTANT VARCHAR2(21) := 'UPDATE_INVOICE_STATUS';
15:47:52 550  -- VARIABLES
15:47:52 551  temp_invoice_id NUMBER;
15:47:52 552  -- EXCEPTIONS
15:47:52 553  BAD_INVOICE_ID		      EXCEPTION;
15:47:52 554  BAD_INVOICE_STATUS_ID	      EXCEPTION;
15:47:52 555  EXCEPTION_MESSAGE 	      VARCHAR2(1024);
15:47:52 556  BEGIN
15:47:52 557  
15:47:52 558  	-- Check if invoice exists
15:47:52 559  	BEGIN
15:47:52 560  	  SELECT
15:47:52 561  	    INVOICE.ID into temp_invoice_id
15:47:52 562  	  FROM
15:47:52 563  	    INVOICE
15:47:52 564  	  WHERE
15:47:52 565  	    INVOICE.ID = in_invoice_id;
15:47:52 566  	  EXCEPTION
15:47:52 567  	    WHEN NO_DATA_FOUND THEN
15:47:52 568  	      RAISE BAD_INVOICE_ID;
15:47:52 569  	END;
15:47:52 570  
15:47:52 571  	IF in_invoice_status_id != GLOBAL_STATUSES_V22.INVOICE_OPEN
15:47:52 572  	  AND in_invoice_status_id != GLOBAL_STATUSES_V22.INVOICE_CLOSED THEN
15:47:52 573  	  RAISE BAD_INVOICE_STATUS_ID;
15:47:52 574  	END IF;
15:47:52 575  
15:47:52 576  	PROCS_INVOICE_CRU_V22.UPDATE_INVOICE(
15:47:52 577  	  in_invoice_id 		 => in_invoice_id,
15:47:52 578  	  in_invoice_status_id		 => in_invoice_status_id,
15:47:52 579  	  in_updated_by 		 => in_updated_by
15:47:52 580  	);
15:47:52 581  
15:47:52 582  EXCEPTION
15:47:52 583  WHEN BAD_INVOICE_STATUS_ID THEN
15:47:52 584  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 585  	  SPROC_NAME, 'Bad invoice status id');
15:47:52 586  WHEN BAD_INVOICE_ID THEN
15:47:52 587  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 588  	  SPROC_NAME, 'No such invoice');
15:47:52 589  WHEN OTHERS THEN
15:47:52 590  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 591  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 592  END UPDATE_INVOICE_STATUS;
15:47:52 593  
15:47:52 594  /****************************************************************/
15:47:52 595  
15:47:52 596  FUNCTION IS_INVOICE_PAYING_STARTED (
15:47:52 597  /*
15:47:52 598  Throws exceptions:
15:47:52 599  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 600  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 601  */
15:47:52 602  	in_invoice_id IN NUMBER
15:47:52 603  ) RETURN NUMBER AS
15:47:52 604  -- VARIABLES
15:47:52 605  SPROC_NAME		 CONSTANT VARCHAR2(30) := 'IS_INVOICE_PAYING_STARTED';
15:47:52 606  temp_invoice_id		 NUMBER;
15:47:52 607  var_processed_charges_num  NUMBER;
15:47:52 608  var_processed_transac_num  NUMBER;
15:47:52 609  var_success_attempts_num	 NUMBER;
15:47:52 610  var_is_gc 		 NUMBER;
15:47:52 611  -- EXCEPTIONS
15:47:52 612  BAD_INVOICE_ID EXCEPTION;
15:47:52 613  BEGIN
15:47:52 614  
15:47:52 615  	-- Check that invoice exists
15:47:52 616  	BEGIN
15:47:52 617  	  SELECT
15:47:52 618  	    INVOICE.ID into temp_invoice_id
15:47:52 619  	  FROM
15:47:52 620  	    INVOICE
15:47:52 621  	  WHERE
15:47:52 622  	    INVOICE.ID = in_invoice_id;
15:47:52 623  	  EXCEPTION
15:47:52 624  	   WHEN NO_DATA_FOUND THEN
15:47:52 625  	     RAISE BAD_INVOICE_ID;
15:47:52 626  	END;
15:47:52 627  
15:47:52 628  	-- Check that there are tansaction attempts with status success
15:47:52 629  	SELECT
15:47:52 630  	  COUNT(1) into var_success_attempts_num
15:47:52 631  	FROM
15:47:52 632  	  TRANSACTION_ATTEMPT ta,
15:47:52 633  	  TRANSACTION t,
15:47:52 634  	  CHARGE c
15:47:52 635  	WHERE
15:47:52 636  	  ta.TRANSACTION_ATTEMPT_STATUS_ID = GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS and
15:47:52 637  	  ta.transaction_id = t.id and
15:47:52 638  	  c.transaction_id = t.id and
15:47:52 639  	  t.is_refund = GLOBAL_CONSTANTS_V22.FALSE and
15:47:52 640  	  c.invoice_id = in_invoice_id
15:47:52 641  	;
15:47:52 642  
15:47:52 643  	IF var_success_attempts_num > 0 THEN
15:47:52 644  	  RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 645  	END IF;
15:47:52 646  
15:47:52 647  	SELECT
15:47:52 648  	  COUNT(1) into var_success_attempts_num
15:47:52 649  	FROM
15:47:52 650  	  TRANSACTION t,
15:47:52 651  	  CHARGE c
15:47:52 652  	WHERE
15:47:52 653  	  c.transaction_id = t.id and
15:47:52 654  	  t.is_refund = GLOBAL_CONSTANTS_V22.FALSE and
15:47:52 655  	  t.is_settled = GLOBAL_CONSTANTS_V22.TRUE and
15:47:52 656  	  c.invoice_id = in_invoice_id
15:47:52 657  	;
15:47:52 658  
15:47:52 659  	IF var_success_attempts_num > 0 THEN
15:47:52 660  	  RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 661  	END IF;
15:47:52 662  
15:47:52 663  	SELECT
15:47:52 664  	  COUNT(1) into var_is_gc
15:47:52 665  	FROM
15:47:52 666  	  gift_certificate gc
15:47:52 667  	WHERE
15:47:52 668  	  gc.finalized_invoice_id = in_invoice_id
15:47:52 669  	;
15:47:52 670  
15:47:52 671  	IF var_is_gc > 0 THEN
15:47:52 672  	  RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 673  	END IF;
15:47:52 674  
15:47:52 675  	RETURN GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 676  
15:47:52 677  EXCEPTION
15:47:52 678  WHEN BAD_INVOICE_ID THEN
15:47:52 679  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 680  	  SPROC_NAME, 'No such invoice');
15:47:52 681  WHEN OTHERS THEN
15:47:52 682  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 683  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 684  END IS_INVOICE_PAYING_STARTED;
15:47:52 685  
15:47:52 686  /******************************************************************************/
15:47:52 687  
15:47:52 688  PROCEDURE P_IS_INVOICE_PAYING_STARTED (
15:47:52 689  	in_invoice_id  IN NUMBER,
15:47:52 690  	out_is_started OUT NUMBER
15:47:52 691  ) AS
15:47:52 692  BEGIN
15:47:52 693  	-- Just a wrapper
15:47:52 694  	out_is_started := PROCS_INVOICE_V22.IS_INVOICE_PAYING_STARTED(in_invoice_id);
15:47:52 695  END P_IS_INVOICE_PAYING_STARTED;
15:47:52 696  
15:47:52 697  /******************************************************************************/
15:47:52 698  
15:47:52 699  PROCEDURE CALCULATE_INVOICE_CHARGEBACK (
15:47:52 700  	in_invoice_id	      IN NUMBER,
15:47:52 701  	in_chargeback_date    IN DATE,
15:47:52 702  	out_chargeback_amount OUT NUMBER
15:47:52 703  ) AS
15:47:52 704  -- VARIABLES
15:47:52 705  SPROC_NAME	     CONSTANT VARCHAR2(28) := 'CALCULATE_INVOICE_CHARGEBACK';
15:47:52 706  var_chargeback_date    DATE;
15:47:52 707  temp_invoice_id	     NUMBER;
15:47:52 708  var_licenses_number    NUMBER;
15:47:52 709  var_invoice_start_date DATE;
15:47:52 710  var_invoice_end_date   DATE;
15:47:52 711  var_offer_id	     NUMBER;
15:47:52 712  var_offer_days_interval NUMBER;
15:47:52 713  var_license_days_used  NUMBER;
15:47:52 714  var_invoice_amount     NUMBER(10,2);
15:47:52 715  var_offer_chain_id     NUMBER;
15:47:52 716  var_offer_chain_meta_data_val VARCHAR2(1024);
15:47:52 717  var_offer_chain_full_refund   NUMBER;
15:47:52 718  var_offer_chain_prorated_ref  NUMBER;
15:47:52 719  var_chargeback_calculated NUMBER;
15:47:52 720  var_max_invoice_refund	NUMBER;
15:47:52 721  -- EXCEPTIONS
15:47:52 722  BAD_INVOICE_ID		  EXCEPTION;
15:47:52 723  NO_LICENSES_FOUND_EXCEPTION EXCEPTION;
15:47:52 724  OFFER_LENGTH_IS_ZERO	  EXCEPTION;
15:47:52 725  BEGIN
15:47:52 726  
15:47:52 727  	IF in_chargeback_date IS NULL THEN
15:47:52 728  	  var_chargeback_date := PROCS_COMMON_V22.NORMALIZE_DATE(current_date);
15:47:52 729  	ELSE
15:47:52 730  	  var_chargeback_date := PROCS_COMMON_V22.NORMALIZE_DATE(in_chargeback_date);
15:47:52 731  	END IF;
15:47:52 732  
15:47:52 733  	-- Check that invoice exists
15:47:52 734  	BEGIN
15:47:52 735  	  SELECT
15:47:52 736  	    INVOICE.ID into temp_invoice_id
15:47:52 737  	  FROM
15:47:52 738  	    INVOICE
15:47:52 739  	  WHERE
15:47:52 740  	    INVOICE.ID = in_invoice_id;
15:47:52 741  	  EXCEPTION
15:47:52 742  	    WHEN NO_DATA_FOUND THEN
15:47:52 743  	      RAISE BAD_INVOICE_ID;
15:47:52 744  	END;
15:47:52 745  
15:47:52 746  	-- Check that invoice has at least one license
15:47:52 747  	SELECT
15:47:52 748  	  COUNT(*) into var_licenses_number
15:47:52 749  	FROM
15:47:52 750  	  LICENSE
15:47:52 751  	WHERE
15:47:52 752  	  LICENSE.INVOICE_ID = in_invoice_id;
15:47:52 753  
15:47:52 754  	IF var_licenses_number = 0 THEN
15:47:52 755  	  RAISE NO_LICENSES_FOUND_EXCEPTION;
15:47:52 756  	END IF;
15:47:52 757  
15:47:52 758  	SELECT
15:47:52 759  	  MIN(LICENSE.START_DATE) into var_invoice_start_date
15:47:52 760  	FROM
15:47:52 761  	  LICENSE
15:47:52 762  	WHERE
15:47:52 763  	  LICENSE.INVOICE_ID = in_invoice_id;
15:47:52 764  
15:47:52 765  	var_invoice_start_date := PROCS_COMMON_V22.NORMALIZE_DATE(var_invoice_start_date);
15:47:52 766  
15:47:52 767  	SELECT DISTINCT
15:47:52 768  	  LICENSE.OFFER_ID into var_offer_id
15:47:52 769  	FROM
15:47:52 770  	  LICENSE
15:47:52 771  	WHERE
15:47:52 772  	  LICENSE.INVOICE_ID = in_invoice_id;
15:47:52 773  
15:47:52 774  	SELECT
15:47:52 775  	  MAX (LICENSE.END_DATE) into var_invoice_end_date
15:47:52 776  	FROM
15:47:52 777  	  LICENSE
15:47:52 778  	WHERE
15:47:52 779  	  LICENSE.INVOICE_ID = in_invoice_id;
15:47:52 780  
15:47:52 781  	-- All licenses for given invoice should point into the same offer
15:47:52 782  
15:47:52 783  	PROCS_OFFER_CHAIN_V22.GET_OFFER_LENGTH_IN_DAYS(
15:47:52 784  	  in_offer_id	=> var_offer_id,
15:47:52 785  	  in_start_date => var_invoice_start_date,
15:47:52 786  	  out_days	=> var_offer_days_interval
15:47:52 787  	);
15:47:52 788  
15:47:52 789  	IF var_offer_days_interval = 0 THEN
15:47:52 790  	  RAISE OFFER_LENGTH_IS_ZERO;
15:47:52 791  	END IF;
15:47:52 792  
15:47:52 793  	PROCS_INVOICE_V22.GET_INVOICE_DAYS_USED_NUMBER(
15:47:52 794  	  in_invoice_id      => in_invoice_id,
15:47:52 795  	  in_chargeback_date => var_chargeback_date,
15:47:52 796  	  out_days_num	     => var_license_days_used
15:47:52 797  	);
15:47:52 798  
15:47:52 799  	PROCS_INVOICE_V22.CALCULATE_INVOICE_AMOUNT(
15:47:52 800  	  in_invoice_id => in_invoice_id,
15:47:52 801  	  out_amount	=> var_invoice_amount
15:47:52 802  	);
15:47:52 803  
15:47:52 804  	-- 39437
15:47:52 805  	-- Get offer chain id by invoice id
15:47:52 806  	SELECT DISTINCT
15:47:52 807  	  SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain_id
15:47:52 808  	FROM
15:47:52 809  	  SUBSCRIPTION
15:47:52 810  	  INNER JOIN LICENSE ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:52 811  	WHERE
15:47:52 812  	  LICENSE.INVOICE_ID = in_invoice_id;
15:47:52 813  
15:47:52 814  	-- Get offer chain's meta data full amount value
15:47:52 815  	PROCS_OFFER_CHAIN_V22.GET_OFFER_CHAIN_MD_VALUE(
15:47:52 816  	  in_offer_chain_id => var_offer_chain_id,
15:47:52 817  	  in_meta_data_name => GLOBAL_CONSTANTS_V22.OFFER_CHAIN_FULL_REFUND,
15:47:52 818  	  out_value	    => var_offer_chain_meta_data_val
15:47:52 819  	);
15:47:52 820  	IF var_offer_chain_meta_data_val IS NULL THEN
15:47:52 821  	  var_offer_chain_full_refund := NULL;
15:47:52 822  	ELSE
15:47:52 823  	  var_offer_chain_full_refund := TO_NUMBER(var_offer_chain_meta_data_val);
15:47:52 824  	END IF;
15:47:52 825  
15:47:52 826  	-- Get offer chain's meta data prorated amount value
15:47:52 827  	PROCS_OFFER_CHAIN_V22.GET_OFFER_CHAIN_MD_VALUE(
15:47:52 828  	  in_offer_chain_id => var_offer_chain_id,
15:47:52 829  	  in_meta_data_name => GLOBAL_CONSTANTS_V22.OFFER_CHAIN_PRORATED_REFUND,
15:47:52 830  	  out_value	    => var_offer_chain_meta_data_val
15:47:52 831  	);
15:47:52 832  	IF var_offer_chain_meta_data_val IS NULL THEN
15:47:52 833  	  var_offer_chain_prorated_ref := NULL;
15:47:52 834  	ELSE
15:47:52 835  	  var_offer_chain_prorated_ref := TO_NUMBER(var_offer_chain_meta_data_val);
15:47:52 836  	END IF;
15:47:52 837  
15:47:52 838  	var_chargeback_calculated := GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 839  
15:47:52 840  	IF var_offer_chain_full_refund IS NOT NULL
15:47:52 841  	   AND var_chargeback_calculated = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 842  	  IF var_license_days_used < var_offer_chain_full_refund THEN
15:47:52 843  	    out_chargeback_amount := var_invoice_amount;
15:47:52 844  	    var_chargeback_calculated := GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 845  	  END IF;
15:47:52 846  	END IF;
15:47:52 847  
15:47:52 848  	IF var_offer_chain_prorated_ref IS NOT NULL
15:47:52 849  	   AND var_chargeback_calculated = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 850  	  IF var_license_days_used < var_offer_chain_prorated_ref THEN
15:47:52 851  	    out_chargeback_amount := ( var_invoice_amount * (var_offer_days_interval - var_license_days_used) ) / var_offer_days_interval;
15:47:52 852  	    var_chargeback_calculated := GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 853  	  END IF;
15:47:52 854  	END IF;
15:47:52 855  
15:47:52 856  	IF var_chargeback_calculated = GLOBAL_CONSTANTS_V22.TRUE THEN
15:47:52 857  	  PROCS_INVOICE_V22.GET_MAX_REFUND(
15:47:52 858  	    in_invoice_id => in_invoice_id,
15:47:52 859  	    out_amount	  => var_max_invoice_refund
15:47:52 860  	  );
15:47:52 861  	  IF var_max_invoice_refund < out_chargeback_amount THEN
15:47:52 862  	    out_chargeback_amount := var_max_invoice_refund;
15:47:52 863  	  END IF;
15:47:52 864  	END IF;
15:47:52 865  
15:47:52 866  	IF var_chargeback_calculated = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 867  	  out_chargeback_amount := 0;
15:47:52 868  	END IF;
15:47:52 869  
15:47:52 870  EXCEPTION
15:47:52 871  WHEN BAD_INVOICE_ID THEN
15:47:52 872  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 873  	  SPROC_NAME, 'No such invoice');
15:47:52 874  WHEN NO_LICENSES_FOUND_EXCEPTION THEN
15:47:52 875  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 876  	  SPROC_NAME, 'No licenses found');
15:47:52 877  WHEN OFFER_LENGTH_IS_ZERO THEN
15:47:52 878  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 879  	  SPROC_NAME, 'Offer length is zero');
15:47:52 880  WHEN OTHERS THEN
15:47:52 881  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 882  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 883  END CALCULATE_INVOICE_CHARGEBACK;
15:47:52 884  
15:47:52 885  /********************************************************************/
15:47:52 886  
15:47:52 887  PROCEDURE APPLY_REFUND (
15:47:52 888  	in_invoice_id	     IN NUMBER,
15:47:52 889  	in_chargeback_amount IN NUMBER,
15:47:52 890  	in_created_by	     IN VARCHAR2,
15:47:52 891  	out_charge_id	     OUT NUMBER
15:47:52 892  ) AS
15:47:52 893  -- VARIABLES
15:47:52 894  SPROC_NAME		 CONSTANT VARCHAR2(16) := 'APPLY_CHARGEBACK';
15:47:52 895  temp_invoice_id		 NUMBER;
15:47:52 896  var_total_charges_amount	 NUMBER(10,2);
15:47:52 897  var_charge_amount_to_apply NUMBER(10,2);
15:47:52 898  var_transaction_id	 NUMBER;
15:47:52 899  var_instrument_type_id	 NUMBER;
15:47:52 900  var_instrument_id 	 NUMBER;
15:47:52 901  var_charge_id		 NUMBER;
15:47:52 902  -- EXCEPTIONS
15:47:52 903  BAD_INVOICE_ID		 EXCEPTION;
15:47:52 904  CAN_NOT_CREATE_TRANSACTION EXCEPTION;
15:47:52 905  CAN_NOT_FIND_INSTRUMENT	 EXCEPTION;
15:47:52 906  CAN_NOT_CREATE_CHARGE	 EXCEPTION;
15:47:52 907  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
15:47:52 908  BEGIN
15:47:52 909  
15:47:52 910  	BEGIN
15:47:52 911  	  SELECT
15:47:52 912  	    INVOICE.ID into temp_invoice_id
15:47:52 913  	  FROM
15:47:52 914  	    INVOICE
15:47:52 915  	  WHERE
15:47:52 916  	    INVOICE.ID = in_invoice_id;
15:47:52 917  	  EXCEPTION
15:47:52 918  	    WHEN NO_DATA_FOUND THEN
15:47:52 919  	      RAISE BAD_INVOICE_ID;
15:47:52 920  	END;
15:47:52 921  
15:47:52 922  	SELECT
15:47:52 923  	  SUM (CHARGE.CHARGE_AMOUNT) into var_total_charges_amount
15:47:52 924  	FROM
15:47:52 925  	  CHARGE
15:47:52 926  	WHERE
15:47:52 927  	  CHARGE.INVOICE_ID = in_invoice_id
15:47:52 928  	  AND CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_PROCESSED
15:47:52 929  	  AND CHARGE.INSTRUMENT_TYPE_ID != GLOBAL_ENUMS_V22.INSTRUMENT_GIFT_CERTIFICATE;
15:47:52 930  
15:47:52 931  	-- FIXME: Maybe whe should throw exception here?
15:47:52 932  	IF var_total_charges_amount < in_chargeback_amount THEN
15:47:52 933  	  var_charge_amount_to_apply := var_total_charges_amount;
15:47:52 934  	ELSE
15:47:52 935  	  var_charge_amount_to_apply := in_chargeback_amount;
15:47:52 936  	END IF;
15:47:52 937  
15:47:52 938  	BEGIN
15:47:52 939  	  PROCS_TRANSACTION_V22.CREATE_TRANSACTION(
15:47:52 940  	    in_transaction_id	      => NULL,
15:47:52 941  	    in_status_id	      => GLOBAL_STATUSES_V22.TRANSACTION_PREPARE,
15:47:52 942  	    in_amount		      => -var_charge_amount_to_apply,
15:47:52 943  	    in_created_by	      => in_created_by,
15:47:52 944  	    in_order_id 	      => NULL,
15:47:52 945  	    in_is_refund	      => GLOBAL_CONSTANTS_V22.TRUE,
15:47:52 946  	    in_transaction_type_code  => 'REFUND',
15:47:52 947  	    out_transaction_id	      => var_transaction_id
15:47:52 948  	  );
15:47:52 949  	  EXCEPTION
15:47:52 950  	    WHEN OTHERS THEN
15:47:52 951  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 952  	      RAISE CAN_NOT_CREATE_TRANSACTION;
15:47:52 953  	END;
15:47:52 954  
15:47:52 955  	BEGIN
15:47:52 956  	  SELECT
15:47:52 957  	    C.INSTRUMENT_TYPE_ID,
15:47:52 958  	    C.INSTRUMENT_ID
15:47:52 959  	    into
15:47:52 960  	    var_instrument_type_id,
15:47:52 961  	    var_instrument_id
15:47:52 962  	  FROM
15:47:52 963  	    CHARGE C,
15:47:52 964  	    TRANSACTION_ATTEMPT TA,
15:47:52 965  	    TRANSACTION T
15:47:52 966  	  WHERE
15:47:52 967  	    C.INVOICE_ID = in_invoice_id and
15:47:52 968  	    C.TRANSACTION_ID = T.ID and
15:47:52 969  	    TA.TRANSACTION_ID = T.ID and
15:47:52 970  	    TA.TRANSACTION_ATTEMPT_STATUS_ID = GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS and
15:47:52 971  	    T.IS_REFUND = GLOBAL_CONSTANTS_V22.FALSE and
15:47:52 972  	    T.TRANSACTION_AMOUNT >= 0 and
15:47:52 973  	    rownum < 2;
15:47:52 974  	EXCEPTION
15:47:52 975  	    WHEN NO_DATA_FOUND THEN
15:47:52 976  	      RAISE CAN_NOT_FIND_INSTRUMENT;
15:47:52 977  	END;
15:47:52 978  	BEGIN
15:47:52 979  	  PROCS_CHARGE_V22.CREATE_CHARGE(
15:47:52 980  	    in_invoice_id	  => in_invoice_id,
15:47:52 981  	    in_transaction_id	  => var_transaction_id,
15:47:52 982  	    in_instrument_type_id => var_instrument_type_id,
15:47:52 983  	    in_instrument_id	  => var_instrument_id,
15:47:52 984  	    in_charge_amount	  => -var_charge_amount_to_apply,
15:47:52 985  	    in_created_by	  => in_created_by,
15:47:52 986  	    in_charge_status_id   => GLOBAL_STATUSES_V22.CHARGE_OPENED,
15:47:52 987  	    out_charge_id	  => var_charge_id
15:47:52 988  	  );
15:47:52 989  	  EXCEPTION
15:47:52 990  	    WHEN OTHERS THEN
15:47:52 991  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 992  	      RAISE CAN_NOT_CREATE_CHARGE;
15:47:52 993  	END;
15:47:52 994  
15:47:52 995  	out_charge_id := var_charge_id;
15:47:52 996  
15:47:52 997  EXCEPTION
15:47:52 998  WHEN BAD_INVOICE_ID THEN
15:47:52 999  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1000  	   SPROC_NAME, 'No such invoice');
15:47:52 1001  WHEN CAN_NOT_CREATE_TRANSACTION THEN
15:47:52 1002  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1003  	   SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
15:47:52 1004  WHEN CAN_NOT_FIND_INSTRUMENT THEN
15:47:52 1005  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1006  	   SPROC_NAME, 'Could not find financial instrument');
15:47:52 1007  WHEN CAN_NOT_CREATE_CHARGE THEN
15:47:52 1008  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1009  	   SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
15:47:52 1010  WHEN OTHERS THEN
15:47:52 1011  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1012  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1013  END APPLY_REFUND;
15:47:52 1014  
15:47:52 1015  /******************************************************************************/
15:47:52 1016  
15:47:52 1017  PROCEDURE GET_MAX_REFUND (
15:47:52 1018  	 in_invoice_id IN NUMBER,
15:47:52 1019  	 out_amount    OUT NUMBER
15:47:52 1020  ) AS
15:47:52 1021  SPROC_NAME CONSTANT VARCHAR2(14) := 'GET_MAX_REFUND';
15:47:52 1022  -- VARIABLES
15:47:52 1023  temp_invoice_id	       NUMBER;
15:47:52 1024  var_invoice_refunds_sum NUMBER(10,2);
15:47:52 1025  var_invoice_charges_sum NUMBER(10,2);
15:47:52 1026  -- EXCEPTIONS
15:47:52 1027  BAD_INVOICE_ID EXCEPTION;
15:47:52 1028  BEGIN
15:47:52 1029  
15:47:52 1030  	 BEGIN
15:47:52 1031  	   SELECT
15:47:52 1032  	     INVOICE.ID into temp_invoice_id
15:47:52 1033  	   FROM
15:47:52 1034  	     INVOICE
15:47:52 1035  	   WHERE
15:47:52 1036  	     INVOICE.ID = in_invoice_id;
15:47:52 1037  	   EXCEPTION
15:47:52 1038  	     WHEN NO_DATA_FOUND THEN
15:47:52 1039  	       RAISE BAD_INVOICE_ID;
15:47:52 1040  	 END;
15:47:52 1041  
15:47:52 1042  	 var_invoice_refunds_sum := 0;
15:47:52 1043  	 var_invoice_charges_sum := 0;
15:47:52 1044  
15:47:52 1045  	 FOR f_charge IN (
15:47:52 1046  	   SELECT
15:47:52 1047  	     CHARGE.ID,
15:47:52 1048  	     CHARGE.CHARGE_STATUS_ID,
15:47:52 1049  	     CHARGE.CHARGE_AMOUNT,
15:47:52 1050  	     CHARGE.TRANSACTION_ID
15:47:52 1051  	   FROM
15:47:52 1052  	     CHARGE
15:47:52 1053  	   WHERE
15:47:52 1054  	     CHARGE.INVOICE_ID = in_invoice_id
15:47:52 1055  	 )
15:47:52 1056  	 LOOP
15:47:52 1057  	   -- If charge.status = canceled then continue
15:47:52 1058  	   IF f_charge.CHARGE_STATUS_ID != GLOBAL_STATUSES_V22.CHARGE_CANCELED THEN
15:47:52 1059  
15:47:52 1060  	     IF f_charge.CHARGE_AMOUNT > 0 THEN
15:47:52 1061  	       IF f_charge.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_PROCESSED
15:47:52 1062  		  AND PROCS_TRANSACTION_V22.IS_TRANSACTION_COLLECTED(f_charge.TRANSACTION_ID) = GLOBAL_CONSTANTS_V22.TRUE THEN
15:47:52 1063  		 -- Transaction collected
15:47:52 1064  		 var_invoice_charges_sum := var_invoice_charges_sum + f_charge.CHARGE_AMOUNT;
15:47:52 1065  	       ELSE
15:47:52 1066  		 -- Transaction is not collected. Do nothing
15:47:52 1067  		 NULL;
15:47:52 1068  	       END IF;
15:47:52 1069  	     ELSE
15:47:52 1070  	       IF f_charge.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_PROCESSED
15:47:52 1071  		  AND PROCS_TRANSACTION_V22.IS_TRANSACTION_COLLECTED(f_charge.TRANSACTION_ID) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 1072  		 -- If charge is processed transaction is not collected then do nothing
15:47:52 1073  		 NULL;
15:47:52 1074  	       ELSE
15:47:52 1075  		 var_invoice_refunds_sum := var_invoice_refunds_sum + f_charge.CHARGE_AMOUNT;
15:47:52 1076  	       END IF;
15:47:52 1077  	     END IF;
15:47:52 1078  
15:47:52 1079  	   END IF;
15:47:52 1080  	 END LOOP;
15:47:52 1081  
15:47:52 1082  	 -- Refunds are negative
15:47:52 1083  	 var_invoice_refunds_sum := 0 - var_invoice_refunds_sum;
15:47:52 1084  
15:47:52 1085  	 out_amount := var_invoice_charges_sum - var_invoice_refunds_sum;
15:47:52 1086  
15:47:52 1087  EXCEPTION
15:47:52 1088  WHEN BAD_INVOICE_ID THEN
15:47:52 1089  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1090  	   SPROC_NAME, 'No such invoice');
15:47:52 1091  WHEN OTHERS THEN
15:47:52 1092  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1093  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1094  END GET_MAX_REFUND;
15:47:52 1095  
15:47:52 1096  /******************************************************************************/
15:47:52 1097  
15:47:52 1098  PROCEDURE GET_INVOICE_DAYS_USED_NUMBER (
15:47:52 1099  	 in_invoice_id	     IN NUMBER,
15:47:52 1100  	 in_chargeback_date  IN DATE DEFAULT SYSDATE,
15:47:52 1101  	 out_days_num	     OUT NUMBER
15:47:52 1102  ) AS
15:47:52 1103  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_INVOICE_DAYS_USED_NUMBER';
15:47:52 1104  -- VARIABLES
15:47:52 1105  temp_invoice_id	      NUMBER;
15:47:52 1106  var_license_start_date DATE;
15:47:52 1107  var_license_end_date   DATE;
15:47:52 1108  var_chargeback_date    DATE;
15:47:52 1109  var_invoice_days_used  NUMBER;
15:47:52 1110  -- EXCEPTIONS
15:47:52 1111  BAD_INVOICE_ID EXCEPTION;
15:47:52 1112  BEGIN
15:47:52 1113  
15:47:52 1114  	 var_chargeback_date := NVL(in_chargeback_date, SYSDATE);
15:47:52 1115  
15:47:52 1116  	 BEGIN
15:47:52 1117  	   SELECT
15:47:52 1118  	     INVOICE.ID into temp_invoice_id
15:47:52 1119  	   FROM
15:47:52 1120  	     INVOICE
15:47:52 1121  	   WHERE
15:47:52 1122  	     INVOICE.ID = in_invoice_id;
15:47:52 1123  	   EXCEPTION
15:47:52 1124  	     WHEN NO_DATA_FOUND THEN
15:47:52 1125  	       RAISE BAD_INVOICE_ID;
15:47:52 1126  	 END;
15:47:52 1127  
15:47:52 1128  	 var_invoice_days_used := 0;
15:47:52 1129  
15:47:52 1130  	 FOR f_license IN (
15:47:52 1131  	   SELECT
15:47:52 1132  	     LICENSE.START_DATE,
15:47:52 1133  	     LICENSE.END_DATE
15:47:52 1134  	   FROM
15:47:52 1135  	     LICENSE
15:47:52 1136  	   WHERE
15:47:52 1137  	     LICENSE.INVOICE_ID = in_invoice_id
15:47:52 1138  	     AND LICENSE.IS_EXTENSION = GLOBAL_CONSTANTS_V22.FALSE
15:47:52 1139  	 )
15:47:52 1140  	 LOOP
15:47:52 1141  	   var_license_start_date := PROCS_COMMON_V22.NORMALIZE_DATE(f_license.START_DATE);
15:47:52 1142  	   var_license_end_date := PROCS_COMMON_V22.NORMALIZE_DATE(f_license.END_DATE);
15:47:52 1143  
15:47:52 1144  	   IF var_license_start_date <= var_chargeback_date THEN
15:47:52 1145  	     IF var_license_end_date <= var_chargeback_date THEN
15:47:52 1146  	       -- License is passed
15:47:52 1147  	       var_invoice_days_used := var_invoice_days_used + (var_license_end_date - var_license_start_date);
15:47:52 1148  	     ELSE
15:47:52 1149  	       -- This is current license
15:47:52 1150  	       var_invoice_days_used := var_invoice_days_used + (var_chargeback_date - var_license_start_date);
15:47:52 1151  	     END IF;
15:47:52 1152  	   ELSE
15:47:52 1153  	     -- if var_license_start_date > in_chargeback_date then do nothing
15:47:52 1154  	     NULL;
15:47:52 1155  	   END IF;
15:47:52 1156  	 END LOOP;
15:47:52 1157  
15:47:52 1158  	 out_days_num := var_invoice_days_used;
15:47:52 1159  
15:47:52 1160  EXCEPTION
15:47:52 1161  WHEN BAD_INVOICE_ID THEN
15:47:52 1162  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1163  	   SPROC_NAME, 'No such invoice');
15:47:52 1164  WHEN OTHERS THEN
15:47:52 1165  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1166  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1167  END GET_INVOICE_DAYS_USED_NUMBER;
15:47:52 1168  
15:47:52 1169  /******************************************************************************/
15:47:52 1170  
15:47:52 1171  PROCEDURE GET_INVOICE_LINE_ITEMS (
15:47:52 1172  	 in_invoice_id	IN NUMBER,
15:47:52 1173  	 out_result_set OUT SYS_REFCURSOR
15:47:52 1174  ) AS
15:47:52 1175  SPROC_NAME CONSTANT VARCHAR2(22) := 'GET_INVOICE_LINE_ITEMS';
15:47:52 1176  -- VARIABLES
15:47:52 1177  temp_invoice_id NUMBER;
15:47:52 1178  -- EXCEPTIONS
15:47:52 1179  BAD_INVOICE_ID EXCEPTION;
15:47:52 1180  BEGIN
15:47:52 1181  
15:47:52 1182  	 BEGIN
15:47:52 1183  	   SELECT
15:47:52 1184  	     INVOICE.ID into temp_invoice_id
15:47:52 1185  	   FROM
15:47:52 1186  	     INVOICE
15:47:52 1187  	   WHERE
15:47:52 1188  	     INVOICE.ID = in_invoice_id;
15:47:52 1189  	   EXCEPTION
15:47:52 1190  	     WHEN NO_DATA_FOUND THEN
15:47:52 1191  	       RAISE BAD_INVOICE_ID;
15:47:52 1192  	 END;
15:47:52 1193  
15:47:52 1194  	 OPEN out_result_set FOR
15:47:52 1195  	 SELECT
15:47:52 1196  	   LINE_ITEM.ID,
15:47:52 1197  	   LINE_ITEM.PRODUCT_OFFER_ID,
15:47:52 1198  	   LINE_ITEM.INVOICE_ID,
15:47:52 1199  	   LINE_ITEM.AMOUNT,
15:47:52 1200  	   LINE_ITEM.DISCOUNT_AMOUNT,
15:47:52 1201  	   LINE_ITEM.TAXES_AMOUNT,
15:47:52 1202  	   LINE_ITEM.CREATE_DATE,
15:47:52 1203  	   LINE_ITEM.CREATED_BY
15:47:52 1204  	 FROM
15:47:52 1205  	   LINE_ITEM
15:47:52 1206  	 WHERE
15:47:52 1207  	   LINE_ITEM.INVOICE_ID = in_invoice_id;
15:47:52 1208  
15:47:52 1209  EXCEPTION
15:47:52 1210  WHEN BAD_INVOICE_ID THEN
15:47:52 1211  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1212  	   SPROC_NAME, 'No such invoice');
15:47:52 1213  WHEN OTHERS THEN
15:47:52 1214  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1215  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1216  END GET_INVOICE_LINE_ITEMS;
15:47:52 1217  
15:47:52 1218  /******************************************************************************/
15:47:52 1219  
15:47:52 1220  PROCEDURE GET_INVOICE_LICENSES (
15:47:52 1221  	 in_invoice_id	IN NUMBER,
15:47:52 1222  	 out_result_set OUT SYS_REFCURSOR
15:47:52 1223  ) AS
15:47:52 1224  SPROC_NAME CONSTANT VARCHAR2(20) := 'GET_INVOICE_LICENSES';
15:47:52 1225  -- VARIABLES
15:47:52 1226  temp_invoice_id NUMBER;
15:47:52 1227  -- EXCEPTIONS
15:47:52 1228  BAD_INVOICE_ID EXCEPTION;
15:47:52 1229  BEGIN
15:47:52 1230  
15:47:52 1231  	 BEGIN
15:47:52 1232  	   SELECT
15:47:52 1233  	     INVOICE.ID into temp_invoice_id
15:47:52 1234  	   FROM
15:47:52 1235  	     INVOICE
15:47:52 1236  	   WHERE
15:47:52 1237  	     INVOICE.ID = in_invoice_id;
15:47:52 1238  	   EXCEPTION
15:47:52 1239  	     WHEN NO_DATA_FOUND THEN
15:47:52 1240  	       RAISE BAD_INVOICE_ID;
15:47:52 1241  	 END;
15:47:52 1242  
15:47:52 1243  	 OPEN out_result_set FOR
15:47:52 1244  	 SELECT
15:47:52 1245  	   LICENSE.ID,
15:47:52 1246  	   LICENSE.INVOICE_ID,
15:47:52 1247  	   LICENSE.CREATE_DATE,
15:47:52 1248  	   LICENSE.CREATED_BY,
15:47:52 1249  	   LICENSE.CURRENT_OFFER_INDEX,
15:47:52 1250  	   LICENSE.CURRENT_OFFER_RECURR_NUM,
15:47:52 1251  	   LICENSE.END_DATE,
15:47:52 1252  	   LICENSE.ENTITLEMENT_END_DATE,
15:47:52 1253  	   LICENSE.IS_EXTENSION,
15:47:52 1254  	   LICENSE.LICENSE_STATUS_ID,
15:47:52 1255  	   LICENSE.NEEDS_ENTITLEMENTS,
15:47:52 1256  	   LICENSE.OFFER_ID,
15:47:52 1257  	   LICENSE.START_DATE,
15:47:52 1258  	   LICENSE.SUBSCRIPTION_ID,
15:47:52 1259  	   LICENSE.UPDATE_DATE,
15:47:52 1260  	   LICENSE.UPDATED_BY
15:47:52 1261  	 FROM
15:47:52 1262  	   LICENSE
15:47:52 1263  	 WHERE
15:47:52 1264  	   LICENSE.INVOICE_ID = in_invoice_id;
15:47:52 1265  
15:47:52 1266  EXCEPTION
15:47:52 1267  WHEN BAD_INVOICE_ID THEN
15:47:52 1268  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1269  	   SPROC_NAME, 'No such invoice');
15:47:52 1270  WHEN OTHERS THEN
15:47:52 1271  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1272  	   SPROC_NAME, 'Unknown error');
15:47:52 1273  END GET_INVOICE_LICENSES;
15:47:52 1274  
15:47:52 1275  /******************************************************************************/
15:47:52 1276  
15:47:52 1277  PROCEDURE GET_OFFER_CH_ID_BY_INVOICE_ID (
15:47:52 1278  	 in_invoice_id	    IN NUMBER,
15:47:52 1279  	 out_offer_chain_id OUT NUMBER
15:47:52 1280  ) AS
15:47:52 1281  SPROC_NAME CONSTANT VARCHAR2(29) := 'GET_OFFER_CH_ID_BY_INVOICE_ID';
15:47:52 1282  -- VARIABLES
15:47:52 1283  temp_invoice_id NUMBER;
15:47:52 1284  -- EXCEPTIONS
15:47:52 1285  BAD_INVOICE_ID EXCEPTION;
15:47:52 1286  BEGIN
15:47:52 1287  
15:47:52 1288  	 BEGIN
15:47:52 1289  	   SELECT
15:47:52 1290  	     INVOICE.ID into temp_invoice_id
15:47:52 1291  	   FROM
15:47:52 1292  	     INVOICE
15:47:52 1293  	   WHERE
15:47:52 1294  	     INVOICE.ID = in_invoice_id;
15:47:52 1295  	   EXCEPTION
15:47:52 1296  	     WHEN NO_DATA_FOUND THEN
15:47:52 1297  	       RAISE BAD_INVOICE_ID;
15:47:52 1298  	 END;
15:47:52 1299  
15:47:52 1300  	 BEGIN
15:47:52 1301  	   SELECT DISTINCT
15:47:52 1302  	     SUBSCRIPTION.OFFER_CHAIN_ID into out_offer_chain_id
15:47:52 1303  	   FROM
15:47:52 1304  	     LICENSE
15:47:52 1305  	     INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:52 1306  	   WHERE
15:47:52 1307  	     LICENSE.INVOICE_ID = in_invoice_id;
15:47:52 1308  	   EXCEPTION
15:47:52 1309  	     WHEN NO_DATA_FOUND THEN
15:47:52 1310  	       out_offer_chain_id := NULL;
15:47:52 1311  	 END;
15:47:52 1312  
15:47:52 1313  EXCEPTION
15:47:52 1314  WHEN BAD_INVOICE_ID THEN
15:47:52 1315  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1316  	   SPROC_NAME, 'No such invoice');
15:47:52 1317  WHEN OTHERS THEN
15:47:52 1318  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1319  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1320  END GET_OFFER_CH_ID_BY_INVOICE_ID;
15:47:52 1321  
15:47:52 1322  /******************************************************************************/
15:47:52 1323  
15:47:52 1324  PROCEDURE CLOSE_INVOICE_AS_NOT_COLLECTED (
15:47:52 1325  -- Closing invoice without refund
15:47:52 1326  	 in_invoice_id IN NUMBER,
15:47:52 1327  	 in_updated_by IN VARCHAR2
15:47:52 1328  ) AS
15:47:52 1329  SPROC_NAME CONSTANT VARCHAR2(30) := 'CLOSE_INVOICE_AS_NOT_COLLECTED';
15:47:52 1330  -- VARIABLES
15:47:52 1331  temp_invoice_id NUMBER;
15:47:52 1332  -- EXCEPTIONS
15:47:52 1333  BAD_INVOICE_ID EXCEPTION;
15:47:52 1334  BEGIN
15:47:52 1335  
15:47:52 1336  	 BEGIN
15:47:52 1337  	   SELECT
15:47:52 1338  	     INVOICE.ID into temp_invoice_id
15:47:52 1339  	   FROM
15:47:52 1340  	     INVOICE
15:47:52 1341  	   WHERE
15:47:52 1342  	     INVOICE.ID = in_invoice_id;
15:47:52 1343  	   EXCEPTION
15:47:52 1344  	     WHEN NO_DATA_FOUND THEN
15:47:52 1345  	       RAISE BAD_INVOICE_ID;
15:47:52 1346  	 END;
15:47:52 1347  
15:47:52 1348  	 -- Needs to close charges. No refund.
15:47:52 1349  	 FOR f_charge_to_close IN (
15:47:52 1350  	   SELECT CHARGE.ID FROM CHARGE WHERE CHARGE.INVOICE_ID = in_invoice_id
15:47:52 1351  	 )
15:47:52 1352  	 LOOP
15:47:52 1353  	   PROCS_CHARGE_V22.UPDATE_CHARGE_STATUS(
15:47:52 1354  	     in_charge_id	 => f_charge_to_close.ID,
15:47:52 1355  	     in_updated_by	 => in_updated_by,
15:47:52 1356  	     in_charge_status_id => GLOBAL_STATUSES_V22.CHARGE_CANCELED
15:47:52 1357  	   );
15:47:52 1358  	 END LOOP;
15:47:52 1359  
15:47:52 1360  	 --FOR f_license_to_cancel IN (
15:47:52 1361  	 --  SELECT LICENSE.ID FROM LICENSE WHERE LICENSE.INVOICE_ID = in_invoice_id AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
15:47:52 1362  	 --)
15:47:52 1363  	 --LOOP
15:47:52 1364  	 --  PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
15:47:52 1365  	 --    in_license_id	     => f_license_to_cancel.ID,
15:47:52 1366  	 --    in_license_status_id  => GLOBAL_STATUSES_V22.LICENSE_CLOSED,
15:47:52 1367  	 --    in_needs_entitlements => GLOBAL_CONSTANTS_V22.FALSE,
15:47:52 1368  	 --    in_updated_by	     => in_updated_by
15:47:52 1369  	 --  );
15:47:52 1370  	 --END LOOP;
15:47:52 1371  
15:47:52 1372  	 PROCS_INVOICE_V22.UPDATE_INVOICE_STATUS(
15:47:52 1373  	   in_invoice_id		  => in_invoice_id,
15:47:52 1374  	   in_updated_by		  => in_updated_by,
15:47:52 1375  	   in_invoice_status_id 	  => GLOBAL_STATUSES_V22.INVOICE_CLOSED
15:47:52 1376  	 );
15:47:52 1377  
15:47:52 1378  	 FOR f_transaction_to_close IN (
15:47:52 1379  	   SELECT DISTINCT CHARGE.TRANSACTION_ID AS "ID" FROM CHARGE WHERE CHARGE.INVOICE_ID = in_invoice_id
15:47:52 1380  	 )
15:47:52 1381  	 LOOP
15:47:52 1382  	   PROCS_TRANSACTION_V22.UPDATE_TRANSACTION_STATUS(
15:47:52 1383  	     in_transaction_id	      => f_transaction_to_close.ID,
15:47:52 1384  	     in_updated_by	      => in_updated_by,
15:47:52 1385  	     in_transaction_status_id => GLOBAL_STATUSES_V22.TRANSACTION_CLOSED
15:47:52 1386  	   );
15:47:52 1387  	 END LOOP;
15:47:52 1388  
15:47:52 1389  EXCEPTION
15:47:52 1390  WHEN BAD_INVOICE_ID THEN
15:47:52 1391  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1392  	   SPROC_NAME, 'No such invoice');
15:47:52 1393  WHEN OTHERS THEN
15:47:52 1394  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1395  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1396  END CLOSE_INVOICE_AS_NOT_COLLECTED;
15:47:52 1397  
15:47:52 1398  /******************************************************************************/
15:47:52 1399  
15:47:52 1400  PROCEDURE GET_SUBSCR_ID_BY_INVOICE_ID (
15:47:52 1401  	 in_invoice_id	     IN NUMBER,
15:47:52 1402  	 out_subscription_id OUT NUMBER
15:47:52 1403  ) AS
15:47:52 1404  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_SUBSCR_ID_BY_INVOICE_ID';
15:47:52 1405  -- VARIABLES
15:47:52 1406  temp_invoice_id NUMBER;
15:47:52 1407  -- EXCEPTIONS
15:47:52 1408  BAD_INVOICE_ID		 EXCEPTION;
15:47:52 1409  CAN_NOT_FIND_SUBSCRIPTION EXCEPTION;
15:47:52 1410  BEGIN
15:47:52 1411  
15:47:52 1412  	 BEGIN
15:47:52 1413  	   SELECT
15:47:52 1414  	     INVOICE.ID into temp_invoice_id
15:47:52 1415  	   FROM
15:47:52 1416  	     INVOICE
15:47:52 1417  	   WHERE
15:47:52 1418  	     INVOICE.ID = in_invoice_id;
15:47:52 1419  	   EXCEPTION
15:47:52 1420  	     WHEN NO_DATA_FOUND THEN
15:47:52 1421  	       RAISE BAD_INVOICE_ID;
15:47:52 1422  	 END;
15:47:52 1423  
15:47:52 1424  	 BEGIN
15:47:52 1425  	   SELECT DISTINCT
15:47:52 1426  	     LICENSE.SUBSCRIPTION_ID into out_subscription_id
15:47:52 1427  	   FROM
15:47:52 1428  	     LICENSE
15:47:52 1429  	   WHERE
15:47:52 1430  	     LICENSE.INVOICE_ID = in_invoice_id;
15:47:52 1431  	   EXCEPTION
15:47:52 1432  	     WHEN NO_DATA_FOUND THEN
15:47:52 1433  	       RAISE CAN_NOT_FIND_SUBSCRIPTION;
15:47:52 1434  	 END;
15:47:52 1435  
15:47:52 1436  EXCEPTION
15:47:52 1437  WHEN BAD_INVOICE_ID THEN
15:47:52 1438  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1439  	   SPROC_NAME, 'No such invoice');
15:47:52 1440  WHEN CAN_NOT_FIND_SUBSCRIPTION THEN
15:47:52 1441  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1442  	   SPROC_NAME, 'Could not find subscription for given invoice');
15:47:52 1443  WHEN OTHERS THEN
15:47:52 1444  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1445  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1446  END GET_SUBSCR_ID_BY_INVOICE_ID;
15:47:52 1447  
15:47:52 1448  /******************************************************************************/
15:47:52 1449  
15:47:52 1450  PROCEDURE IS_INVOICE_TAX_EXEMPT (
15:47:52 1451  /*
15:47:52 1452  Throws exceptions:
15:47:52 1453  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1454  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 1455  Return:
15:47:52 1456  	 GLOBAL_CONSTANTS_V22.TRUE if ACCOUNT.EXEMPT_ID is not null
15:47:52 1457  	 GLOBAL_CONSTANTS_V22.FALSE else
15:47:52 1458  */
15:47:52 1459  	 in_invoice_id	   IN NUMBER,
15:47:52 1460  	 out_is_tax_exempt OUT NUMBER
15:47:52 1461  ) AS
15:47:52 1462  SPROC_NAME CONSTANT VARCHAR2(21) := 'IS_INVOICE_TAX_EXEMPT';
15:47:52 1463  -- VARIABLES
15:47:52 1464  var_is_tax_exempt INVOICE.TAX_EXEMPT_ID%TYPE;
15:47:52 1465  -- EXCEPTIONS
15:47:52 1466  BAD_INVOICE_ID EXCEPTION;
15:47:52 1467  BEGIN
15:47:52 1468  
15:47:52 1469  	 BEGIN
15:47:52 1470  	   SELECT
15:47:52 1471  	     INVOICE.TAX_EXEMPT_ID into var_is_tax_exempt
15:47:52 1472  	   FROM
15:47:52 1473  	     INVOICE
15:47:52 1474  	   WHERE
15:47:52 1475  	     INVOICE.ID = in_invoice_id;
15:47:52 1476  	   EXCEPTION
15:47:52 1477  	     WHEN NO_DATA_FOUND THEN
15:47:52 1478  	       RAISE BAD_INVOICE_ID;
15:47:52 1479  	 END;
15:47:52 1480  
15:47:52 1481  	 IF var_is_tax_exempt IS NULL THEN
15:47:52 1482  	   out_is_tax_exempt := GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 1483  	 ELSE
15:47:52 1484  	   out_is_tax_exempt := GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 1485  	 END IF;
15:47:52 1486  
15:47:52 1487  EXCEPTION
15:47:52 1488  WHEN BAD_INVOICE_ID THEN
15:47:52 1489  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1490  	   SPROC_NAME, 'No such invoice');
15:47:52 1491  WHEN OTHERS THEN
15:47:52 1492  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1493  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1494  END IS_INVOICE_TAX_EXEMPT;
15:47:52 1495  
15:47:52 1496  /******************************************************************************/
15:47:52 1497  
15:47:52 1498  PROCEDURE GET_INVOICE_BY_TRNS_ORDER_ID (
15:47:52 1499  	 in_order_id  IN TRANSACTION.ORDER_ID%TYPE,
15:47:52 1500  	 out_result_set OUT SYS_REFCURSOR
15:47:52 1501  ) AS
15:47:52 1502  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_INVOICE_BY_TRNS_ORDER_ID';
15:47:52 1503  -- VARIABLE
15:47:52 1504  temp_order_id TRANSACTION.ORDER_ID%TYPE;
15:47:52 1505  -- EXCEPTIONS
15:47:52 1506  BAD_ORDER_ID EXCEPTION;
15:47:52 1507  CAN_NOT_FIND_INVOICE EXCEPTION;
15:47:52 1508  BEGIN
15:47:52 1509  
15:47:52 1510  	 OPEN out_result_set FOR
15:47:52 1511  	   SELECT DISTINCT
15:47:52 1512  	     CHARGE.INVOICE_ID
15:47:52 1513  	   FROM
15:47:52 1514  	     CHARGE
15:47:52 1515  	   INNER JOIN
15:47:52 1516  	     TRANSACTION ON TRANSACTION.ID = CHARGE.TRANSACTION_ID
15:47:52 1517  	   WHERE
15:47:52 1518  	     TRANSACTION.ORDER_ID = in_order_id;
15:47:52 1519  
15:47:52 1520  EXCEPTION
15:47:52 1521  WHEN BAD_ORDER_ID THEN
15:47:52 1522  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1523  	   SPROC_NAME, 'No such transaction');
15:47:52 1524  WHEN CAN_NOT_FIND_INVOICE THEN
15:47:52 1525  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1526  	   SPROC_NAME, 'Could not find invoice for given order id');
15:47:52 1527  WHEN OTHERS THEN
15:47:52 1528  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1529  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1530  END GET_INVOICE_BY_TRNS_ORDER_ID;
15:47:52 1531  
15:47:52 1532  /******************************************************************************/
15:47:52 1533  
15:47:52 1534  PROCEDURE GET_INVOICE_BY_ID (
15:47:52 1535  	 in_invoice_id	IN NUMBER,
15:47:52 1536  	 out_result_set OUT SYS_REFCURSOR
15:47:52 1537  ) AS
15:47:52 1538  SPROC_NAME CONSTANT VARCHAR2(17) := 'GET_INVOICE_BY_ID';
15:47:52 1539  -- VARIABLE
15:47:52 1540  temp_invoice_id NUMBER;
15:47:52 1541  -- EXCEPTIONS
15:47:52 1542  BAD_INVOCIE_ID EXCEPTION;
15:47:52 1543  BEGIN
15:47:52 1544  
15:47:52 1545  	 BEGIN
15:47:52 1546  	   SELECT
15:47:52 1547  	     INVOICE.ID into temp_invoice_id
15:47:52 1548  	   FROM
15:47:52 1549  	     INVOICE
15:47:52 1550  	   WHERE
15:47:52 1551  	     INVOICE.ID = in_invoice_id;
15:47:52 1552  	   EXCEPTION
15:47:52 1553  	     WHEN NO_DATA_FOUND THEN
15:47:52 1554  	       RAISE BAD_INVOCIE_ID;
15:47:52 1555  	 END;
15:47:52 1556  
15:47:52 1557  	 OPEN out_result_set FOR
15:47:52 1558  	 SELECT
15:47:52 1559  	   INVOICE.ID,
15:47:52 1560  	   INVOICE.INVOICE_STATUS_ID,
15:47:52 1561  	   INVOICE.TAX_EXEMPT_ID,
15:47:52 1562  	   INVOICE.UPDATE_DATE,
15:47:52 1563  	   INVOICE.UPDATED_BY,
15:47:52 1564  	   INVOICE.CREATE_DATE,
15:47:52 1565  	   INVOICE.CREATED_BY
15:47:52 1566  	 FROM
15:47:52 1567  	   INVOICE
15:47:52 1568  	 WHERE
15:47:52 1569  	   INVOICE.ID = in_invoice_id;
15:47:52 1570  
15:47:52 1571  EXCEPTION
15:47:52 1572  WHEN BAD_INVOCIE_ID THEN
15:47:52 1573  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1574  	   SPROC_NAME, 'No such invoice');
15:47:52 1575  WHEN OTHERS THEN
15:47:52 1576  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1577  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1578  END GET_INVOICE_BY_ID;
15:47:52 1579  
15:47:52 1580  /******************************************************************************/
15:47:52 1581  
15:47:52 1582  PROCEDURE GET_IS_TAX_CALCULATION_NEEDED (
15:47:52 1583  	 in_invoice_id		       IN NUMBER,
15:47:52 1584  	 out_is_tax_calculation_needed OUT NUMBER
15:47:52 1585  ) AS
15:47:52 1586  SPROC_NAME CONSTANT VARCHAR2(29) := 'GET_IS_TAX_CALCULATION_NEEDED';
15:47:52 1587  BEGIN
15:47:52 1588  
15:47:52 1589  	 SELECT
15:47:52 1590  	   I.IS_TAX_CALCULATION_NEEDED into out_is_tax_calculation_needed
15:47:52 1591  	 FROM
15:47:52 1592  	   INVOICE I
15:47:52 1593  	 WHERE
15:47:52 1594  	   I.ID = in_invoice_id;
15:47:52 1595  
15:47:52 1596  EXCEPTION
15:47:52 1597  WHEN NO_DATA_FOUND THEN
15:47:52 1598  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1599  	   SPROC_NAME, 'No such invoice');
15:47:52 1600  WHEN OTHERS THEN
15:47:52 1601  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1602  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1603  END GET_IS_TAX_CALCULATION_NEEDED;
15:47:52 1604  
15:47:52 1605  /******************************************************************************/
15:47:52 1606  
15:47:52 1607  PROCEDURE SET_IS_TAX_CALCULATION_NEEDED (
15:47:52 1608  	 in_invoice_id		      IN NUMBER,
15:47:52 1609  	 in_updated_by		      IN VARCHAR2,
15:47:52 1610  	 in_is_tax_calculation_needed IN NUMBER
15:47:52 1611  ) AS
15:47:52 1612  SPROC_NAME CONSTANT VARCHAR2(29) := 'SET_IS_TAX_CALCULATION_NEEDED';
15:47:52 1613  -- VARIABLES
15:47:52 1614  temp_invoice_id	      NUMBER;
15:47:52 1615  -- EXCEPTIONS
15:47:52 1616  BAD_INVOICE_ID	      EXCEPTION;
15:47:52 1617  CAN_NOT_UPDATE_INVOCIE EXCEPTION;
15:47:52 1618  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:52 1619  BEGIN
15:47:52 1620  
15:47:52 1621  	 BEGIN
15:47:52 1622  	   SELECT
15:47:52 1623  	     i.id into temp_invoice_id
15:47:52 1624  	   FROM
15:47:52 1625  	     invoice i
15:47:52 1626  	   WHERE
15:47:52 1627  	     i.id = in_invoice_id;
15:47:52 1628  	   EXCEPTION
15:47:52 1629  	     WHEN NO_DATA_FOUND THEN
15:47:52 1630  	       RAISE BAD_INVOICE_ID;
15:47:52 1631  	 END;
15:47:52 1632  
15:47:52 1633  	 BEGIN
15:47:52 1634  	   PROCS_INVOICE_CRU_V22.UPDATE_INVOICE(
15:47:52 1635  	     in_invoice_id => in_invoice_id,
15:47:52 1636  	     in_updated_by => in_updated_by,
15:47:52 1637  	     in_is_tax_calculation_needed => in_is_tax_calculation_needed
15:47:52 1638  	   );
15:47:52 1639  	   EXCEPTION
15:47:52 1640  	     WHEN OTHERS THEN
15:47:52 1641  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1642  	       RAISE CAN_NOT_UPDATE_INVOCIE;
15:47:52 1643  	 END;
15:47:52 1644  
15:47:52 1645  EXCEPTION
15:47:52 1646  WHEN BAD_INVOICE_ID THEN
15:47:52 1647  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1648  	   SPROC_NAME, 'No such invoice');
15:47:52 1649  WHEN CAN_NOT_UPDATE_INVOCIE THEN
15:47:52 1650  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1651  	   SPROC_NAME, 'Could not update invoice', EXCEPTION_MESSAGE);
15:47:52 1652  WHEN OTHERS THEN
15:47:52 1653  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1654  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1655  END SET_IS_TAX_CALCULATION_NEEDED;
15:47:52 1656  
15:47:52 1657  /******************************************************************************/
15:47:52 1658  
15:47:52 1659  PROCEDURE REFUND_INVOICE (
15:47:52 1660  	 in_invoice_id	    IN NUMBER,
15:47:52 1661  	 in_refund_amount   IN NUMBER,
15:47:52 1662  	 in_note	    IN VARCHAR2,
15:47:52 1663  	 in_created_by	    IN VARCHAR2,
15:47:52 1664  	 out_charge_id	    OUT NUMBER
15:47:52 1665  ) AS
15:47:52 1666  SPROC_NAME CONSTANT VARCHAR2(14) := 'REFUND_INVOICE';
15:47:52 1667  -- VARIABLES
15:47:52 1668  var_invoice_status_id  NUMBER;
15:47:52 1669  var_subscription_id    NUMBER;
15:47:52 1670  var_account_id	      NUMBER;
15:47:52 1671  var_group_id	      NUMBER;
15:47:52 1672  var_account_status_id  NUMBER;
15:47:52 1673  var_new_transaction_id NUMBER;
15:47:52 1674  var_instrument_type_id NUMBER;
15:47:52 1675  var_instrument_id      NUMBER;
15:47:52 1676  var_new_charge_id      NUMBER;
15:47:52 1677  var_invoice_amount     NUMBER(10,2);
15:47:52 1678  var_refunds_before     NUMBER(10,2);
15:47:52 1679  var_charges_amount     NUMBER(10,2);
15:47:52 1680  -- EXCEPTIONS
15:47:52 1681  CAN_NOT_FIND_SUBSCR_OR_GC     EXCEPTION;
15:47:52 1682  ACCOUNT_IS_FROZEN	     EXCEPTION;
15:47:52 1683  BAD_INVOICE_ID		     EXCEPTION;
15:47:52 1684  CAN_NOT_CREATE_TRANSACTION    EXCEPTION;
15:47:52 1685  CAN_NOT_CREATE_CHARGE	     EXCEPTION;
15:47:52 1686  CAN_NOT_CALC_INVOICE_AMOUNT   EXCEPTION;
15:47:52 1687  REFUND_IS_GREATER_THAN_ANOUNT EXCEPTION;
15:47:52 1688  CAN_NOT_ANNOTATE_SUBSCRIPTION EXCEPTION;
15:47:52 1689  TOT_REF_IS_GREATER_THAN_ANOUNT EXCEPTION;
15:47:52 1690  INVOICE_IS_NOT_CLOSED	     EXCEPTION;
15:47:52 1691  TOT_REF_IS_GRATER_THAN_CHARGES EXCEPTION;
15:47:52 1692  EXCEPTION_MESSAGE	      VARCHAR2(1024);
15:47:52 1693  BEGIN
15:47:52 1694  
15:47:52 1695  	 BEGIN
15:47:52 1696  	   SELECT
15:47:52 1697  	     INVOICE.INVOICE_STATUS_ID into var_invoice_status_id
15:47:52 1698  	   FROM
15:47:52 1699  	     INVOICE
15:47:52 1700  	   WHERE
15:47:52 1701  	     INVOICE.ID = in_invoice_id;
15:47:52 1702  	   EXCEPTION
15:47:52 1703  	     WHEN NO_DATA_FOUND THEN
15:47:52 1704  	       RAISE BAD_INVOICE_ID;
15:47:52 1705  	 END;
15:47:52 1706  
15:47:52 1707  	 -- Get instrument and subscription id if exists
15:47:52 1708  	 BEGIN
15:47:52 1709  	   SELECT
15:47:52 1710  	     SUBSCRIPTION.INSTRUMENT_ID,
15:47:52 1711  	     SUBSCRIPTION.INSTRUMENT_TYPE_ID,
15:47:52 1712  	     SUBSCRIPTION.ACCOUNT_ID,
15:47:52 1713  	     SUBSCRIPTION.ID
15:47:52 1714  	     into
15:47:52 1715  	     var_instrument_id,
15:47:52 1716  	     var_instrument_type_id,
15:47:52 1717  	     var_account_id,
15:47:52 1718  	     var_subscription_id
15:47:52 1719  	   FROM
15:47:52 1720  	     SUBSCRIPTION
15:47:52 1721  	     INNER JOIN LICENSE ON SUBSCRIPTION.ID = LICENSE.SUBSCRIPTION_ID
15:47:52 1722  	   WHERE
15:47:52 1723  	     LICENSE.INVOICE_ID = in_invoice_id
15:47:52 1724  	     AND ROWNUM <= 1;
15:47:52 1725  	   EXCEPTION
15:47:52 1726  	     WHEN NO_DATA_FOUND THEN
15:47:52 1727  	       BEGIN
15:47:52 1728  
15:47:52 1729  		 var_subscription_id := NULL;
15:47:52 1730  
15:47:52 1731  		 SELECT
15:47:52 1732  		   CHARGE.INSTRUMENT_ID,
15:47:52 1733  		   CHARGE.INSTRUMENT_TYPE_ID,
15:47:52 1734  		   GIFT_CERTIFICATE.PURCHASER_GROUP_ID
15:47:52 1735  		   into
15:47:52 1736  		   var_instrument_id,
15:47:52 1737  		   var_instrument_type_id,
15:47:52 1738  		   var_group_id
15:47:52 1739  		 FROM
15:47:52 1740  		   INVOICE
15:47:52 1741  		   INNER JOIN CHARGE ON INVOICE.ID = CHARGE.INVOICE_ID
15:47:52 1742  		   INNER JOIN GIFT_CERTIFICATE ON GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = INVOICE.ID
15:47:52 1743  		 WHERE
15:47:52 1744  		   INVOICE.ID = in_invoice_id
15:47:52 1745  		   AND ROWNUM <= 1;
15:47:52 1746  
15:47:52 1747  		 SELECT
15:47:52 1748  		   ACCOUNT.ID into var_account_id
15:47:52 1749  		 FROM
15:47:52 1750  		   ACCOUNT
15:47:52 1751  		 WHERE
15:47:52 1752  		   ACCOUNT.GROUP_ID = var_group_id;
15:47:52 1753  
15:47:52 1754  		 EXCEPTION
15:47:52 1755  		   WHEN NO_DATA_FOUND THEN
15:47:52 1756  		     RAISE CAN_NOT_FIND_SUBSCR_OR_GC;
15:47:52 1757  	       END;
15:47:52 1758  	 END;
15:47:52 1759  
15:47:52 1760  	 -- Check account status. It should not to be frozen
15:47:52 1761  	 SELECT
15:47:52 1762  	   ACCOUNT.ACCOUNT_STATUS_ID into var_account_status_id
15:47:52 1763  	 FROM
15:47:52 1764  	   ACCOUNT
15:47:52 1765  	 WHERE
15:47:52 1766  	   ACCOUNT.ID = var_account_id;
15:47:52 1767  
15:47:52 1768  	 IF var_account_status_id = GLOBAL_STATUSES_V22.ACCOUNT_FROZEN THEN
15:47:52 1769  	   RAISE ACCOUNT_IS_FROZEN;
15:47:52 1770  	 END IF;
15:47:52 1771  
15:47:52 1772  	 IF var_invoice_status_id != GLOBAL_STATUSES_V22.INVOICE_CLOSED THEN
15:47:52 1773  	   RAISE INVOICE_IS_NOT_CLOSED;
15:47:52 1774  	 END IF;
15:47:52 1775  
15:47:52 1776  	 BEGIN
15:47:52 1777  	   PROCS_INVOICE_V22.CALCULATE_INVOICE_AMOUNT (
15:47:52 1778  	     in_invoice_id => in_invoice_id,
15:47:52 1779  	     out_amount    => var_invoice_amount
15:47:52 1780  	   );
15:47:52 1781  	   EXCEPTION
15:47:52 1782  	     WHEN OTHERS THEN
15:47:52 1783  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1784  	       RAISE CAN_NOT_CALC_INVOICE_AMOUNT;
15:47:52 1785  	 END;
15:47:52 1786  
15:47:52 1787  	 IF ( in_refund_amount > var_invoice_amount ) THEN
15:47:52 1788  	   RAISE REFUND_IS_GREATER_THAN_ANOUNT;
15:47:52 1789  	 END IF;
15:47:52 1790  
15:47:52 1791  	 SELECT /*+ STAR_TRANSFORMATION */
15:47:52 1792  	   SUM(CHARGE.CHARGE_AMOUNT) into var_refunds_before
15:47:52 1793  	 FROM
15:47:52 1794  	   CHARGE
15:47:52 1795  	 WHERE
15:47:52 1796  	   CHARGE.INVOICE_ID = in_invoice_id
15:47:52 1797  	   AND (
15:47:52 1798  	     CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_OPENED
15:47:52 1799  	     OR (
15:47:52 1800  	       CHARGE.CHARGE_STATUS_ID = GLOBAL_STATUSES_V22.CHARGE_PROCESSED
15:47:52 1801  	       AND EXISTS (
15:47:52 1802  		 SELECT 1 FROM TRANSACTION_ATTEMPT ta where ta.transaction_id = CHARGE.TRANSACTION_ID and ta.transaction_attempt_status_id = GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS
15:47:52 1803  	       )
15:47:52 1804  	     )
15:47:52 1805  	   )
15:47:52 1806  	   AND CHARGE.CHARGE_AMOUNT < 0;
15:47:52 1807  
15:47:52 1808  	 -- Refunds are negative
15:47:52 1809  	 IF var_refunds_before IS NULL THEN var_refunds_before := 0; END IF;
15:47:52 1810  	 var_refunds_before := 0 - var_refunds_before;
15:47:52 1811  
15:47:52 1812  	 var_charges_amount := 0;
15:47:52 1813  
15:47:52 1814  	 FOR f_processed_charges IN (
15:47:52 1815  	   SELECT
15:47:52 1816  	     CHARGE.CHARGE_AMOUNT
15:47:52 1817  	   FROM
15:47:52 1818  	     CHARGE
15:47:52 1819  	   WHERE
15:47:52 1820  	     CHARGE.INVOICE_ID = in_invoice_id
15:47:52 1821  	     AND CHARGE.CHARGE_AMOUNT > 0
15:47:52 1822  	     AND CHARGE.CHARGE_STATUS_ID IN (SELECT GLOBAL_STATUSES_V22.CHARGE_PROCESSED FROM DUAL)
15:47:52 1823  	     AND EXISTS (SELECT 1 FROM TRANSACTION_ATTEMPT ta where ta.transaction_id = CHARGE.TRANSACTION_ID and ta.transaction_attempt_status_id = GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS)
15:47:52 1824  	 )
15:47:52 1825  	 LOOP
15:47:52 1826  	   var_charges_amount := var_charges_amount + f_processed_charges.CHARGE_AMOUNT;
15:47:52 1827  	 END LOOP;
15:47:52 1828  
15:47:52 1829  	 IF (in_refund_amount + var_refunds_before > var_invoice_amount) THEN
15:47:52 1830  	   RAISE TOT_REF_IS_GREATER_THAN_ANOUNT;
15:47:52 1831  	 END IF;
15:47:52 1832  
15:47:52 1833  	 IF (in_refund_amount + var_refunds_before > var_charges_amount) THEN
15:47:52 1834  	   RAISE TOT_REF_IS_GRATER_THAN_CHARGES;
15:47:52 1835  	 END IF;
15:47:52 1836  
15:47:52 1837  	 BEGIN
15:47:52 1838  	   PROCS_TRANSACTION_V22.CREATE_TRANSACTION(
15:47:52 1839  	     in_transaction_id	       => NULL,
15:47:52 1840  	     in_status_id	       => GLOBAL_STATUSES_V22.TRANSACTION_PREPARE,
15:47:52 1841  	     in_amount		       => -in_refund_amount,
15:47:52 1842  	     in_created_by	       => in_created_by,
15:47:52 1843  	     in_order_id	       => NULL,
15:47:52 1844  	     in_is_refund	       => GLOBAL_CONSTANTS_V22.TRUE,
15:47:52 1845  	     in_transaction_type_code  => 'REFUND',
15:47:52 1846  	     out_transaction_id        => var_new_transaction_id
15:47:52 1847  	   );
15:47:52 1848  	   EXCEPTION
15:47:52 1849  	     WHEN OTHERS THEN
15:47:52 1850  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1851  	       RAISE CAN_NOT_CREATE_TRANSACTION;
15:47:52 1852  	 END;
15:47:52 1853  
15:47:52 1854  	 BEGIN
15:47:52 1855  	   PROCS_CHARGE_V22.CREATE_CHARGE(
15:47:52 1856  	     in_invoice_id	   => in_invoice_id,
15:47:52 1857  	     in_transaction_id	   => var_new_transaction_id,
15:47:52 1858  	     in_instrument_type_id => var_instrument_type_id,
15:47:52 1859  	     in_instrument_id	   => var_instrument_id,
15:47:52 1860  	     in_charge_amount	   => -in_refund_amount,
15:47:52 1861  	     in_created_by	   => in_created_by,
15:47:52 1862  	     in_charge_status_id   => GLOBAL_STATUSES_V22.CHARGE_OPENED,
15:47:52 1863  	     out_charge_id	   => var_new_charge_id
15:47:52 1864  	   );
15:47:52 1865  	   EXCEPTION
15:47:52 1866  	     WHEN OTHERS THEN
15:47:52 1867  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1868  	       RAISE CAN_NOT_CREATE_CHARGE;
15:47:52 1869  	 END;
15:47:52 1870  
15:47:52 1871  	 out_charge_id := var_new_charge_id;
15:47:52 1872  
15:47:52 1873  	 IF in_note IS NOT NULL AND var_subscription_id IS NOT NULL THEN
15:47:52 1874  	   BEGIN
15:47:52 1875  	     PROCS_SUBSCRIPTION_V22.ANNOTATE_SUBSCRIPTION(
15:47:52 1876  	       in_subscription_id => var_subscription_id,
15:47:52 1877  	       in_agent_id	  => 0, -- AGENT_ID??
15:47:52 1878  	       in_note		  => in_note,
15:47:52 1879  	       in_created_by	  => in_created_by
15:47:52 1880  	     );
15:47:52 1881  	     EXCEPTION
15:47:52 1882  	       WHEN OTHERS THEN
15:47:52 1883  		 EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1884  		 RAISE CAN_NOT_ANNOTATE_SUBSCRIPTION;
15:47:52 1885  	   END;
15:47:52 1886  	 END IF;
15:47:52 1887  
15:47:52 1888  EXCEPTION
15:47:52 1889  WHEN CAN_NOT_FIND_SUBSCR_OR_GC THEN
15:47:52 1890  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1891  	   SPROC_NAME, 'Could not find subscription or GC for the inovice');
15:47:52 1892  WHEN INVOICE_IS_NOT_CLOSED THEN
15:47:52 1893  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1894  	   SPROC_NAME, 'Invoice is not closed');
15:47:52 1895  WHEN ACCOUNT_IS_FROZEN THEN
15:47:52 1896  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1897  	   SPROC_NAME, 'Could not refund subscription for frozen account');
15:47:52 1898  WHEN BAD_INVOICE_ID THEN
15:47:52 1899  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1900  	   SPROC_NAME, 'No such invoice');
15:47:52 1901  WHEN CAN_NOT_CALC_INVOICE_AMOUNT THEN
15:47:52 1902  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1903  	   SPROC_NAME, 'Could not calculate invoice amount', EXCEPTION_MESSAGE);
15:47:52 1904  WHEN REFUND_IS_GREATER_THAN_ANOUNT THEN
15:47:52 1905  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1906  	   SPROC_NAME, 'Refund is greater than amount');
15:47:52 1907  WHEN TOT_REF_IS_GREATER_THAN_ANOUNT THEN
15:47:52 1908  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1909  	   SPROC_NAME, 'There were refunds before and sum of all refunds and new refund more than invoice amount');
15:47:52 1910  WHEN TOT_REF_IS_GRATER_THAN_CHARGES THEN
15:47:52 1911  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1912  	   SPROC_NAME, 'Total refund amount is greater than sum of processed charges');
15:47:52 1913  WHEN CAN_NOT_CREATE_TRANSACTION THEN
15:47:52 1914  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1915  	   SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
15:47:52 1916  WHEN CAN_NOT_CREATE_CHARGE THEN
15:47:52 1917  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1918  	   SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
15:47:52 1919  WHEN CAN_NOT_ANNOTATE_SUBSCRIPTION THEN
15:47:52 1920  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1921  	   SPROC_NAME, 'Could not annotate subscription', EXCEPTION_MESSAGE);
15:47:52 1922  WHEN OTHERS THEN
15:47:52 1923  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1924  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1925  END REFUND_INVOICE;
15:47:52 1926  
15:47:52 1927  /******************************************************************************/
15:47:52 1928  
15:47:52 1929  PROCEDURE GET_PAYMENT_INFO_BY_INVOICE_ID (
15:47:52 1930  	 in_invoice_id		     IN NUMBER,
15:47:52 1931  	 out_order_id		     OUT VARCHAR2,
15:47:52 1932  	 out_external_transaction_id OUT VARCHAR2
15:47:52 1933  ) AS
15:47:52 1934  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_PEYMENT_INFO_BY_INVOICE_ID';
15:47:52 1935  -- VARIABLES
15:47:52 1936  temp_invoice_id number;
15:47:52 1937  cnt_matched_instr number := 0;
15:47:52 1938  -- EXCEPTIONS
15:47:52 1939  BAD_INVOICE_ID EXCEPTION;
15:47:52 1940  BEGIN
15:47:52 1941  
15:47:52 1942  	 BEGIN
15:47:52 1943  	   SELECT
15:47:52 1944  	     i.id into temp_invoice_id
15:47:52 1945  	   from
15:47:52 1946  	     invoice i
15:47:52 1947  	   where
15:47:52 1948  	     i.id = in_invoice_id;
15:47:52 1949  	   EXCEPTION
15:47:52 1950  	     WHEN NO_DATA_FOUND THEN
15:47:52 1951  	       RAISE BAD_INVOICE_ID;
15:47:52 1952  	 END;
15:47:52 1953  
15:47:52 1954  	 select
15:47:52 1955  	   count(1) into cnt_matched_instr
15:47:52 1956  	 from
15:47:52 1957  	   charge ch
15:47:52 1958  	 inner join
15:47:52 1959  	   subscription s
15:47:52 1960  	 on
15:47:52 1961  	   s.instrument_id = ch.instrument_id
15:47:52 1962  	 where
15:47:52 1963  	   ch.invoice_id = in_invoice_id;
15:47:52 1964  
15:47:52 1965  	 if cnt_matched_instr = 0 then
15:47:52 1966  	   out_external_transaction_id := null;
15:47:52 1967  	   out_order_id := null;
15:47:52 1968  	   return;
15:47:52 1969  	 end if;
15:47:52 1970  
15:47:52 1971  	 SELECT
15:47:52 1972  	   t.order_id,
15:47:52 1973  	   ta.external_transaction_id
15:47:52 1974  	   into
15:47:52 1975  	   out_order_id,
15:47:52 1976  	   out_external_transaction_id
15:47:52 1977  	 from
15:47:52 1978  	   charge ch
15:47:52 1979  	   inner join transaction t on ch.transaction_id = t.id
15:47:52 1980  	   inner join transaction_attempt ta on ta.transaction_id = t.id
15:47:52 1981  	 where
15:47:52 1982  	   ch.invoice_id = in_invoice_id
15:47:52 1983  	   and ta.transaction_attempt_status_id = GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS
15:47:52 1984  	   and ch.charge_amount > 0; -- We are not creating charges for the 0-amount invoices
15:47:52 1985  
15:47:52 1986  EXCEPTION
15:47:52 1987  WHEN BAD_INVOICE_ID THEN
15:47:52 1988  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1989  	   SPROC_NAME, 'No such invoice');
15:47:52 1990  WHEN NO_DATA_FOUND THEN
15:47:52 1991  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1992  	   SPROC_NAME, 'No payment data found');
15:47:52 1993  WHEN OTHERS THEN
15:47:52 1994  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1995  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1996  END GET_PAYMENT_INFO_BY_INVOICE_ID;
15:47:52 1997  
15:47:52 1998  PROCEDURE IS_REVOKE_ENTITLEMENTS(
15:47:52 1999  	 in_invoice_id IN NUMBER,
15:47:52 2000  	 out_is_revoke OUT NUMBER
15:47:52 2001  ) AS
15:47:52 2002  BEGIN
15:47:52 2003  	 SELECT DECODE(COUNT(1), 0, GLOBAL_CONSTANTS_V22.FALSE, GLOBAL_CONSTANTS_V22.TRUE)
15:47:52 2004  	   into out_is_revoke
15:47:52 2005  	 FROM
15:47:52 2006  	   offer_chain oc,
15:47:52 2007  	   subscription s,
15:47:52 2008  	   license l,
15:47:52 2009  	   invoice i
15:47:52 2010  	 where
15:47:52 2011  	   oc.id = s.offer_chain_id and
15:47:52 2012  	   s.id = l.subscription_id and
15:47:52 2013  	   l.invoice_id = i.id and
15:47:52 2014  	   oc.revoke_entitlements = GLOBAL_CONSTANTS_V22.TRUE and
15:47:52 2015  	   i.id = in_invoice_id and
15:47:52 2016  	   rownum < 2
15:47:52 2017  	 ;
15:47:52 2018  END IS_REVOKE_ENTITLEMENTS;
15:47:52 2019  
15:47:52 2020  END PROCS_INVOICE_V22;
15:47:52 2021  .
15:47:52 SQL> /

Package body created.

Elapsed: 00:00:00.04
15:47:52 SQL> 
15:47:52 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_FIN_INSTRUMENTS_V22" AS
15:47:52   2  
15:47:52   3  PROCEDURE UPDATE_GC_STATUS_BY_INVOICE(
15:47:52   4  	  in_invoice_id IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:52   5  	  in_status_id	IN GIFT_CERTIFICATE_STATUS.ID%TYPE,
15:47:52   6  	  in_updater	IN GIFT_CERTIFICATE.UPDATED_BY%TYPE)
15:47:52   7  AS
15:47:52   8  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_GC_STATUS_BY_INVOICE';
15:47:52   9  BEGIN
15:47:52  10  	FOR rec IN (SELECT id FROM Gift_Certificate WHERE Purchase_Invoice_Id = in_invoice_id) LOOP
15:47:52  11  	  PROCS_FIN_INSTRUMENTS_CRU_V22.UPDATE_GIFT_CERTIFICATE (
15:47:52  12  	    in_gift_certificate_id	  => rec.Id,
15:47:52  13  	    in_gift_certificate_status_id => in_status_id,
15:47:52  14  	    in_updated_by		  => in_updater
15:47:52  15  	  );
15:47:52  16  	END LOOP;
15:47:52  17  END UPDATE_GC_STATUS_BY_INVOICE;
15:47:52  18  
15:47:52  19  PROCEDURE IS_INVOICE_FOR_REDEEMED_GC (
15:47:52  20  	in_invoice_id		     IN NUMBER,
15:47:52  21  	out_is_invoice_for_redeem_gc OUT NUMBER
15:47:52  22  ) AS
15:47:52  23  SPROC_NAME CONSTANT VARCHAR2(32) := 'IS_INVOICE_FOR_REDEEMED_GC';
15:47:52  24  var_is_for_gc NUMBER;
15:47:52  25  BEGIN
15:47:52  26  	SELECT
15:47:52  27  	  count(1) into var_is_for_gc
15:47:52  28  	FROM GIFT_CERTIFICATE GC
15:47:52  29  	WHERE GC.PURCHASE_INVOICE_ID = in_invoice_id AND
15:47:52  30  	      GC.GIFT_CERTIFICATE_STATUS_ID = 2;
15:47:52  31  
15:47:52  32  	IF var_is_for_gc > 0 THEN
15:47:52  33  	  out_is_invoice_for_redeem_gc := 1;
15:47:52  34  	ELSE
15:47:52  35  	  out_is_invoice_for_redeem_gc := 0;
15:47:52  36  	END IF;
15:47:52  37  END IS_INVOICE_FOR_REDEEMED_GC;
15:47:52  38  
15:47:52  39  PROCEDURE GET_UNREDEEMED_GCS (
15:47:52  40  	out_result_set		OUT SYS_REFCURSOR,
15:47:52  41  	in_hours_number 	IN NUMBER DEFAULT 14*24,
15:47:52  42  	in_num_rows		IN NUMBER DEFAULT 10000,
15:47:52  43  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:52  44  ) AS
15:47:52  45  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_UNREDEEMED_GCS';
15:47:52  46  BEGIN
15:47:52  47  	OPEN out_result_set FOR
15:47:52  48  SELECT * FROM
15:47:52  49  (
15:47:52  50  	SELECT
15:47:52  51  	  gc.EXPIRATION_DATE,
15:47:52  52  	  ch.name,
15:47:52  53  	  ch.id offer_chain_id,
15:47:52  54  	  gc.sender_email,
15:47:52  55  	  gc.sender_name,
15:47:52  56  	  gc.recipient_email,
15:47:52  57  	  gc.recipient_name,
15:47:52  58  	  gc.purchase_date,
15:47:52  59  	  gc.redemption_date,
15:47:52  60  	  gc.purchaser_group_id,
15:47:52  61  	  gc.redeemer_group_id,
15:47:52  62  	  gc.code,
15:47:52  63  	  gc.gift_message,
15:47:52  64  	  gc.recipient_notify_date,
15:47:52  65  	  gc.id
15:47:52  66  	FROM
15:47:52  67  	  GIFT_CERTIFICATE gc,
15:47:52  68  	  OFFER_CHAIN ch
15:47:52  69  	WHERE
15:47:52  70  	  ch.id = gc.offer_chain_id
15:47:52  71  	  AND gc.RECIPIENT_NOTIFY_DATE is not null
15:47:52  72  	  AND gc.RECIPIENT_NOTIFY_DATE >= (sysdate - in_hours_number/24)
15:47:52  73  	  AND gc.RECIPIENT_NOTIFY_DATE < (sysdate - (in_hours_number-72)/24)
15:47:52  74  	  AND gc.redeemer_group_id is null
15:47:52  75  	  AND NOT EXISTS(
15:47:52  76  	    SELECT NULL
15:47:52  77  	    FROM PROCESS_RETRY_THROTTLE
15:47:52  78  	    WHERE PROCESS_NAME = in_process_name
15:47:52  79  	      AND GENERIC_ID = gc.id
15:47:52  80  	  ) AND EXISTS(
15:47:52  81  	    SELECT NULL
15:47:52  82  	    FROM
15:47:52  83  	      charge c,
15:47:52  84  	      transaction_attempt ta,
15:47:52  85  	      transaction t
15:47:52  86  	    WHERE
15:47:52  87  	      c.invoice_id = gc.purchase_invoice_id and
15:47:52  88  	      c.transaction_id = t.id and
15:47:52  89  	      t.id = ta.transaction_id and
15:47:52  90  	      ta.transaction_attempt_status_id = GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS
15:47:52  91  	  ) AND NOT EXISTS (
15:47:52  92  	    SELECT NULL
15:47:52  93  	    FROM
15:47:52  94  	      charge c,
15:47:52  95  	      transaction t
15:47:52  96  	    WHERE
15:47:52  97  	      c.invoice_id = gc.purchase_invoice_id and
15:47:52  98  	      c.transaction_id = t.id and
15:47:52  99  	      t.is_refund = GLOBAL_CONSTANTS_V22.TRUE
15:47:52 100  	  )
15:47:52 101  	  AND ROWNUM <= in_num_rows*10
15:47:52 102  	  ORDER BY dbms_random.value
15:47:52 103  ) WHERE
15:47:52 104  	  ROWNUM <= in_num_rows;
15:47:52 105  EXCEPTION
15:47:52 106  WHEN OTHERS THEN
15:47:52 107  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 108  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 109  END GET_UNREDEEMED_GCS;
15:47:52 110  
15:47:52 111  PROCEDURE ADD_CREDIT_CARD (
15:47:52 112  /*
15:47:52 113  Throws exceptions:
15:47:52 114  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 115  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 116  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:52 117  */
15:47:52 118  	in_group_id		  IN NUMBER,
15:47:52 119  	in_updated_by		  IN VARCHAR2,
15:47:52 120  	in_instrument_name	  IN VARCHAR2,
15:47:52 121  	in_card_holder_name	  IN VARCHAR2,
15:47:52 122  	in_street_address	  IN VARCHAR2,
15:47:52 123  	in_street_address2	  IN VARCHAR2,
15:47:52 124  	in_state		  IN VARCHAR2,
15:47:52 125  	in_city 		  IN VARCHAR2,
15:47:52 126  	in_postal_code		  IN VARCHAR2,
15:47:52 127  	in_country		  IN CHAR,
15:47:52 128  	in_last_four_cc 	  IN VARCHAR2,
15:47:52 129  	in_expiration_date	  IN DATE,
15:47:52 130  	in_credit_card_type_id	  IN NUMBER,
15:47:52 131  	in_token		  IN VARCHAR2,
15:47:52 132  	in_chase_profile_id	  IN VARCHAR2,
15:47:52 133  	in_credit_card_status_id  IN NUMBER,
15:47:52 134  	in_private_first_name	  IN VARCHAR2,
15:47:52 135  	in_private_last_name	  IN VARCHAR2,
15:47:52 136  	out_credit_card_id	  OUT NUMBER
15:47:52 137  ) AS
15:47:52 138  SPROC_NAME	     CONSTANT VARCHAR2(15) := 'ADD_CREDIT_CARD';
15:47:52 139  -- VARIABLES
15:47:52 140  var_account_id	      NUMBER;
15:47:52 141  var_account_status      NUMBER;
15:47:52 142  var_credit_card_id      NUMBER;
15:47:52 143  temp_old_credit_card_id NUMBER;
15:47:52 144  -- EXCEPTIONS
15:47:52 145  BAD_ACCOUNT_STATUS	 EXCEPTION;
15:47:52 146  CAN_NOT_SET_DEF_FINANCIAL  EXCEPTION;
15:47:52 147  BAD_IS_DEFAULT_VALUE	 EXCEPTION;
15:47:52 148  BAD_OLD_CREDIT_CARD	 EXCEPTION;
15:47:52 149  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
15:47:52 150  ----- DELETE NEXT LINES WHEN UI WILL SUPPORT MANY CC PER ACCOUNT
15:47:52 151  var_charges_set		SYS_REFCURSOR;
15:47:52 152  var_charge_id		NUMBER;
15:47:52 153  var_charge_invoice_id	NUMBER;
15:47:52 154  var_charge_transaction_id NUMBER;
15:47:52 155  var_charge_amount 	NUMBER(10,2);
15:47:52 156  temp_out_charge_id	NUMBER;
15:47:52 157  temp_out_transaction_id	NUMBER;
15:47:52 158  var_order_id			VARCHAR2(1024);
15:47:52 159  BEGIN
15:47:52 160  
15:47:52 161  	-- Get account id
15:47:52 162  	-- Get account status
15:47:52 163  	SELECT
15:47:52 164  	  ACCOUNT.ID,
15:47:52 165  	  ACCOUNT.ACCOUNT_STATUS_ID
15:47:52 166  	  into
15:47:52 167  	  var_account_id,
15:47:52 168  	  var_account_status
15:47:52 169  	FROM
15:47:52 170  	  ACCOUNT
15:47:52 171  	WHERE
15:47:52 172  	  ACCOUNT.GROUP_ID = in_group_id;
15:47:52 173  
15:47:52 174  	SELECT
15:47:52 175  	  CC_ID_SEQ.nextVal into var_credit_card_id
15:47:52 176  	FROM DUAL;
15:47:52 177  
15:47:52 178  	-- Insert new row in CREDIT_CARD table
15:47:52 179  	PROCS_FIN_INSTRUMENTS_CRU_V22.CREATE_CREDIT_CARD(
15:47:52 180  	  out_credit_card_id	      => var_credit_card_id,
15:47:52 181  	  in_account_id 	      => var_account_id,
15:47:52 182  	  in_instrument_name	      => in_instrument_name,
15:47:52 183  	  in_private_card_holder_name => in_card_holder_name,
15:47:52 184  	  in_private_street_address   => in_street_address,
15:47:52 185  	  in_private_street_address2  => in_street_address2,
15:47:52 186  	  in_state		      => in_state,
15:47:52 187  	  in_city		      => in_city,
15:47:52 188  	  in_postal_code	      => in_postal_code,
15:47:52 189  	  in_country		      => in_country,
15:47:52 190  	  in_last_four_cc	      => in_last_four_cc,
15:47:52 191  	  in_expiration_date	      => in_expiration_date,
15:47:52 192  	  in_credit_card_type_id      => in_credit_card_type_id,
15:47:52 193  	  in_secret_token	      => in_token,
15:47:52 194  	  in_chase_profile_id	      => in_chase_profile_id,
15:47:52 195  	  in_created_by 	      => in_updated_by,
15:47:52 196  	  in_credit_card_status_id    => in_credit_card_status_id,
15:47:52 197  	  in_private_first_name       => in_private_first_name,
15:47:52 198  	  in_private_last_name	      => in_private_last_name
15:47:52 199  	);
15:47:52 200  
15:47:52 201  	out_credit_card_id := var_credit_card_id;
15:47:52 202  
15:47:52 203  EXCEPTION
15:47:52 204  WHEN NO_DATA_FOUND THEN
15:47:52 205  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 206  	  SPROC_NAME, 'No such account');
15:47:52 207  WHEN BAD_OLD_CREDIT_CARD THEN
15:47:52 208  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 209  	  SPROC_NAME, 'Bad old credit card id');
15:47:52 210  WHEN BAD_IS_DEFAULT_VALUE THEN
15:47:52 211  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 212  	  SPROC_NAME, 'Bad is_default value');
15:47:52 213  WHEN CAN_NOT_SET_DEF_FINANCIAL THEN
15:47:52 214  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 215  	  SPROC_NAME, 'Can not set default finansial instrument', EXCEPTION_MESSAGE);
15:47:52 216  WHEN BAD_ACCOUNT_STATUS THEN
15:47:52 217  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 218  	  SPROC_NAME, 'Account is not active');
15:47:52 219  WHEN OTHERS THEN
15:47:52 220  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 221  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 222  END ADD_CREDIT_CARD;
15:47:52 223  
15:47:52 224  /******************************************************************************/
15:47:52 225  
15:47:52 226  PROCEDURE ADD_PAYPAL (
15:47:52 227  /*
15:47:52 228  Throws exceptions:
15:47:52 229  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 230  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 231  */
15:47:52 232  	in_group_id			IN NUMBER,
15:47:52 233  	in_instrument_name		IN VARCHAR2,
15:47:52 234  	in_private_email_address	IN VARCHAR2,
15:47:52 235  	in_created_by			IN VARCHAR2,
15:47:52 236  	in_paypal_status_id		IN NUMBER,
15:47:52 237  	in_paypal_prvt_street_address	IN VARCHAR2,
15:47:52 238  	in_paypal_prvt_street_address2	IN VARCHAR2,
15:47:52 239  	in_state			IN VARCHAR2,
15:47:52 240  	in_city 			IN VARCHAR2,
15:47:52 241  	in_postal_code			IN VARCHAR2,
15:47:52 242  	in_country			IN CHAR,
15:47:52 243  	in_expiration_date		IN DATE,
15:47:52 244  	in_secret_token 		IN VARCHAR2,
15:47:52 245  	out_paypal_id			OUT NUMBER
15:47:52 246  ) AS
15:47:52 247  SPROC_NAME CONSTANT VARCHAR2(10) := 'ADD_PAYPAL';
15:47:52 248  var_paypal_id NUMBER;
15:47:52 249  var_account_id  NUMBER;
15:47:52 250  -- EXCEPTIONS
15:47:52 251  BAD_GROUP_ID	    EXCEPTION;
15:47:52 252  CAN_NOT_CREATE_PAYPAL EXCEPTION;
15:47:52 253  BAD_PAYPAL_STATUS     EXCEPTION;
15:47:52 254  EXCEPTION_MESSAGE VARCHAR2(1024);
15:47:52 255  BEGIN
15:47:52 256  
15:47:52 257  	IF in_paypal_status_id != GLOBAL_STATUSES_V22.PAYPAL_ACTIVE
15:47:52 258  	  AND in_paypal_status_id != GLOBAL_STATUSES_V22.PAYPAL_INACTIVE
15:47:52 259  	  AND in_paypal_status_id != GLOBAL_STATUSES_V22.PAYPAL_FROZEN THEN
15:47:52 260  	  RAISE BAD_PAYPAL_STATUS;
15:47:52 261  	END IF;
15:47:52 262  
15:47:52 263  	BEGIN
15:47:52 264  	  SELECT
15:47:52 265  	    a.id into var_account_id
15:47:52 266  	  from
15:47:52 267  	    account a
15:47:52 268  	  where
15:47:52 269  	    a.group_id = in_group_id;
15:47:52 270  	  EXCEPTION
15:47:52 271  	    WHEN NO_DATA_FOUND THEN
15:47:52 272  	      RAISE BAD_GROUP_ID;
15:47:52 273  	END;
15:47:52 274  
15:47:52 275  	BEGIN
15:47:52 276  	  PROCS_FIN_INSTRUMENTS_CRU_V22.CREATE_PAYPAL(
15:47:52 277  	    out_paypal_id		   => var_paypal_id,
15:47:52 278  	    in_paypal_id		   => NULL,
15:47:52 279  	    in_account_id		   => var_account_id,
15:47:52 280  	    in_instrument_name		   => in_instrument_name,
15:47:52 281  	    in_private_email_address	   => in_private_email_address,
15:47:52 282  	    in_created_by		   => in_created_by,
15:47:52 283  	    in_paypal_status_id 	   => in_paypal_status_id,
15:47:52 284  	    in_paypal_prvt_street_address  => in_paypal_prvt_street_address,
15:47:52 285  	    in_paypal_prvt_street_address2 => in_paypal_prvt_street_address2,
15:47:52 286  	    in_state			   => in_state,
15:47:52 287  	    in_city			   => in_city,
15:47:52 288  	    in_postal_code		   => in_postal_code,
15:47:52 289  	    in_country			   => in_country,
15:47:52 290  	    in_expiration_date		   => in_expiration_date,
15:47:52 291  	    in_secret_token		   => in_secret_token
15:47:52 292  	  );
15:47:52 293  	  EXCEPTION
15:47:52 294  	    WHEN OTHERS THEN
15:47:52 295  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 296  	      RAISE CAN_NOT_CREATE_PAYPAL;
15:47:52 297  	END;
15:47:52 298  
15:47:52 299  	out_paypal_id := var_paypal_id;
15:47:52 300  
15:47:52 301  EXCEPTION
15:47:52 302  WHEN BAD_GROUP_ID THEN
15:47:52 303  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 304  	  SPROC_NAME, 'No such group id');
15:47:52 305  WHEN BAD_PAYPAL_STATUS THEN
15:47:52 306  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 307  	  SPROC_NAME, 'Bad paypal status');
15:47:52 308  WHEN CAN_NOT_CREATE_PAYPAL THEN
15:47:52 309  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 310  	  SPROC_NAME, 'Could not create paypal', EXCEPTION_MESSAGE);
15:47:52 311  WHEN OTHERS THEN
15:47:52 312  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 313  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 314  END ADD_PAYPAL;
15:47:52 315  
15:47:52 316  /******************************************************************************/
15:47:52 317  
15:47:52 318  PROCEDURE DISABLE_CREDIT_CARD (
15:47:52 319  /*
15:47:52 320  Throws exceptions:
15:47:52 321  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 322  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 323  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:52 324  */
15:47:52 325  	in_credit_card_id IN NUMBER,
15:47:52 326  	in_updated_by	  IN VARCHAR2
15:47:52 327  ) AS
15:47:52 328  SPROC_NAME		   CONSTANT VARCHAR2(19) := 'DISABLE_CREDIT_CARD';
15:47:52 329  -- VARIBLES
15:47:52 330  var_account_id		     NUMBER;
15:47:52 331  var_group_id		     NUMBER;
15:47:52 332  var_credit_card_status	     NUMBER;
15:47:52 333  var_pending_transactions_num   NUMBER;
15:47:52 334  var_pending_invoices_num	     NUMBER;
15:47:52 335  current_def_instrument_type_id NUMBER;
15:47:52 336  current_def_instrument_id      NUMBER;
15:47:52 337  -- EXCEPTIONS
15:47:52 338  BAD_CC_STATUS		   EXCEPTION;
15:47:52 339  PENDING_TRANSACTIONS_FOUNDED EXCEPTION;
15:47:52 340  CAN_NOT_GET_DEF_FINANCIAL    EXCEPTION;
15:47:52 341  CAN_NOT_DEL_DEF_FINANCIAL    EXCEPTION;
15:47:52 342  CAN_NOT_DISABLE_CREDIT_CARD  EXCEPTION;
15:47:52 343  EXCEPTION_MESSAGE 	   VARCHAR2(1024);
15:47:52 344  BEGIN
15:47:52 345  
15:47:52 346  	-- Get credit card status
15:47:52 347  	-- Get account id
15:47:52 348  	SELECT
15:47:52 349  	  CREDIT_CARD.CREDIT_CARD_STATUS_ID,
15:47:52 350  	  CREDIT_CARD.ACCOUNT_ID
15:47:52 351  	  into
15:47:52 352  	  var_credit_card_status,
15:47:52 353  	  var_account_id
15:47:52 354  	FROM
15:47:52 355  	  CREDIT_CARD
15:47:52 356  	WHERE
15:47:52 357  	  CREDIT_CARD.ID = in_credit_card_id;
15:47:52 358  
15:47:52 359  	-- Check that we can disable this credit card (STUB)
15:47:52 360  	IF F_CAN_DISABLE_CREDIT_CARD(in_credit_card_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 361  	  RAISE CAN_NOT_DISABLE_CREDIT_CARD;
15:47:52 362  	END IF;
15:47:52 363  
15:47:52 364  	-- Get account id
15:47:52 365  	SELECT
15:47:52 366  	  ACCOUNT.GROUP_ID into var_group_id
15:47:52 367  	FROM
15:47:52 368  	  ACCOUNT
15:47:52 369  	WHERE
15:47:52 370  	  ACCOUNT.ID = var_account_id;
15:47:52 371  
15:47:52 372  	-- Card should to be active
15:47:52 373  	IF var_credit_card_status != GLOBAL_STATUSES_V22.CREDIT_CARD_ACTIVE THEN
15:47:52 374  	  RAISE BAD_CC_STATUS;
15:47:52 375  	END IF;
15:47:52 376  
15:47:52 377  	-- Looking for pending transactions associated with given credit card
15:47:52 378  	SELECT
15:47:52 379  	  COUNT(*) into var_pending_invoices_num
15:47:52 380  	FROM
15:47:52 381  	  CHARGE
15:47:52 382  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
15:47:52 383  	WHERE
15:47:52 384  	  CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD
15:47:52 385  	  AND CHARGE.INSTRUMENT_ID = in_credit_card_id
15:47:52 386  	  AND TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V22.TRANSACTION_PENDING;
15:47:52 387  
15:47:52 388  	IF var_pending_invoices_num > 0 THEN
15:47:52 389  	  RAISE PENDING_TRANSACTIONS_FOUNDED;
15:47:52 390  	END IF;
15:47:52 391  
15:47:52 392  	-- Getting current default financial instrument
15:47:52 393  	BEGIN
15:47:52 394  	  GET_DEF_FINANCIAL_INSTRUMENT(
15:47:52 395  	    in_group_id 	   => var_group_id,
15:47:52 396  	    out_instrument_type_id => current_def_instrument_type_id,
15:47:52 397  	    out_instrument_id	   => current_def_instrument_id
15:47:52 398  	  );
15:47:52 399  	  EXCEPTION
15:47:52 400  	    WHEN OTHERS THEN
15:47:52 401  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 402  	      RAISE CAN_NOT_GET_DEF_FINANCIAL;
15:47:52 403  	END;
15:47:52 404  
15:47:52 405  	-- Checking that credit card is not default
15:47:52 406  	IF current_def_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD
15:47:52 407  	  AND current_def_instrument_id = in_credit_card_id THEN
15:47:52 408  	  BEGIN
15:47:52 409  	    DEL_DEF_FINANCIAL_INSTRUMENT(
15:47:52 410  	      in_group_id => var_group_id
15:47:52 411  	    );
15:47:52 412  	  EXCEPTION
15:47:52 413  	    WHEN OTHERS THEN
15:47:52 414  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 415  	      RAISE CAN_NOT_DEL_DEF_FINANCIAL;
15:47:52 416  	  END;
15:47:52 417  	END IF;
15:47:52 418  
15:47:52 419  	-- Update credit card status
15:47:52 420  	PROCS_FIN_INSTRUMENTS_V22.UPDATE_CREDIT_CARD_STATUS(
15:47:52 421  	  in_credit_card_id	   => in_credit_card_id,
15:47:52 422  	  in_updated_by 	   => in_updated_by,
15:47:52 423  	  in_credit_card_status_id => GLOBAL_STATUSES_V22.CREDIT_CARD_DISABLED
15:47:52 424  	);
15:47:52 425  
15:47:52 426  EXCEPTION
15:47:52 427  WHEN NO_DATA_FOUND THEN
15:47:52 428  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 429  	  SPROC_NAME, 'No such credit card');
15:47:52 430  WHEN CAN_NOT_GET_DEF_FINANCIAL THEN
15:47:52 431  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 432  	  SPROC_NAME, 'Could not get current default financial instrument', EXCEPTION_MESSAGE);
15:47:52 433  WHEN CAN_NOT_DEL_DEF_FINANCIAL THEN
15:47:52 434  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 435  	  SPROC_NAME, 'Could not delete information about default financial instrument from account', EXCEPTION_MESSAGE);
15:47:52 436  WHEN BAD_CC_STATUS THEN
15:47:52 437  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 438  	  SPROC_NAME, 'Credit card is not active');
15:47:52 439  WHEN PENDING_TRANSACTIONS_FOUNDED THEN
15:47:52 440  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 441  	  SPROC_NAME, 'Account has pending charge which is using this card');
15:47:52 442  WHEN CAN_NOT_DISABLE_CREDIT_CARD THEN
15:47:52 443  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 444  	  SPROC_NAME, 'Could not disable this credit card', EXCEPTION_MESSAGE);
15:47:52 445  WHEN OTHERS THEN
15:47:52 446  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 447  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 448  END DISABLE_CREDIT_CARD;
15:47:52 449  
15:47:52 450  /******************************************************************************/
15:47:52 451  
15:47:52 452  PROCEDURE DISABLE_PAYPAL (
15:47:52 453  /*
15:47:52 454  Throws exceptions:
15:47:52 455  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 456  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 457  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:52 458  */
15:47:52 459  	in_paypal_id  IN NUMBER,
15:47:52 460  	in_updated_by IN VARCHAR2
15:47:52 461  ) AS
15:47:52 462  SPROC_NAME CONSTANT VARCHAR2(14) := 'DISABLE_PAYPAL';
15:47:52 463  -- VARIABLES
15:47:52 464  var_paypal_status_id NUMBER;
15:47:52 465  var_account_id	   NUMBER;
15:47:52 466  var_group_id	   NUMBER;
15:47:52 467  var_pending_invoices_num NUMBER;
15:47:52 468  current_def_instrument_type_id NUMBER;
15:47:52 469  current_def_instrument_id NUMBER;
15:47:52 470  -- EXCEPTIONS
15:47:52 471  BAD_PAYPAL_ID EXCEPTION;
15:47:52 472  PAYPAL_ALREADY_INACTIVE EXCEPTION;
15:47:52 473  PENDING_TRANSACTIONS_FOUND EXCEPTION;
15:47:52 474  CAN_NOT_GET_DEF_FINANCIAL EXCEPTION;
15:47:52 475  CAN_NOT_DEL_DEF_FINANCIAL EXCEPTION;
15:47:52 476  EXCEPTION_MESSAGE VARCHAR2(1024);
15:47:52 477  BEGIN
15:47:52 478  
15:47:52 479  	-- Get Paypal status
15:47:52 480  	-- Get account
15:47:52 481  	BEGIN
15:47:52 482  	  SELECT
15:47:52 483  	    PAYPAL.PAYPAL_STATUS_ID,
15:47:52 484  	    PAYPAL.ACCOUNT_ID
15:47:52 485  	    into
15:47:52 486  	    var_paypal_status_id,
15:47:52 487  	    var_account_id
15:47:52 488  	  FROM
15:47:52 489  	    PAYPAL
15:47:52 490  	  WHERE
15:47:52 491  	    PAYPAL.ID = in_paypal_id;
15:47:52 492  	  EXCEPTION
15:47:52 493  	    WHEN NO_DATA_FOUND THEN
15:47:52 494  	      RAISE BAD_PAYPAL_ID;
15:47:52 495  	END;
15:47:52 496  
15:47:52 497  	-- Get group id
15:47:52 498  	SELECT
15:47:52 499  	  ACCOUNT.GROUP_ID into var_group_id
15:47:52 500  	FROM
15:47:52 501  	  ACCOUNT
15:47:52 502  	WHERE
15:47:52 503  	  ACCOUNT.ID = var_account_id;
15:47:52 504  
15:47:52 505  	-- Card should not be disabled
15:47:52 506  	IF var_paypal_status_id = GLOBAL_STATUSES_V22.PAYPAL_INACTIVE THEN
15:47:52 507  	  RAISE PAYPAL_ALREADY_INACTIVE;
15:47:52 508  	END IF;
15:47:52 509  
15:47:52 510  	-- Looking for pending transactions associated with given credit card
15:47:52 511  	SELECT
15:47:52 512  	  COUNT(*) into var_pending_invoices_num
15:47:52 513  	FROM
15:47:52 514  	  CHARGE
15:47:52 515  	  INNER JOIN TRANSACTION ON CHARGE.TRANSACTION_ID = TRANSACTION.ID
15:47:52 516  	WHERE
15:47:52 517  	  CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL
15:47:52 518  	  AND CHARGE.INSTRUMENT_ID = in_paypal_id
15:47:52 519  	  AND TRANSACTION.TRANSACTION_STATUS_ID = GLOBAL_STATUSES_V22.TRANSACTION_PENDING;
15:47:52 520  
15:47:52 521  	IF var_pending_invoices_num > 0 THEN
15:47:52 522  	  RAISE PENDING_TRANSACTIONS_FOUND;
15:47:52 523  	END IF;
15:47:52 524  
15:47:52 525  	-- Getting current default financial instrument
15:47:52 526  	BEGIN
15:47:52 527  	  GET_DEF_FINANCIAL_INSTRUMENT(
15:47:52 528  	    in_group_id 	   => var_group_id,
15:47:52 529  	    out_instrument_type_id => current_def_instrument_type_id,
15:47:52 530  	    out_instrument_id	   => current_def_instrument_id
15:47:52 531  	  );
15:47:52 532  	  EXCEPTION
15:47:52 533  	    WHEN OTHERS THEN
15:47:52 534  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 535  	      RAISE CAN_NOT_GET_DEF_FINANCIAL;
15:47:52 536  	END;
15:47:52 537  
15:47:52 538  	-- Checking that credit card is not default
15:47:52 539  	IF current_def_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL
15:47:52 540  	  AND current_def_instrument_id = in_paypal_id THEN
15:47:52 541  	  BEGIN
15:47:52 542  	    DEL_DEF_FINANCIAL_INSTRUMENT(
15:47:52 543  	      in_group_id => var_group_id
15:47:52 544  	    );
15:47:52 545  	  EXCEPTION
15:47:52 546  	    WHEN OTHERS THEN
15:47:52 547  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 548  	      RAISE CAN_NOT_DEL_DEF_FINANCIAL;
15:47:52 549  	  END;
15:47:52 550  	END IF;
15:47:52 551  
15:47:52 552  	PROCS_FIN_INSTRUMENTS_V22.UPDATE_PAYPAL_STATUS(
15:47:52 553  	  in_paypal_id	      => in_paypal_id,
15:47:52 554  	  in_updated_by       => in_updated_by,
15:47:52 555  	  in_paypal_status_id => GLOBAL_STATUSES_V22.PAYPAL_INACTIVE
15:47:52 556  	);
15:47:52 557  
15:47:52 558  EXCEPTION
15:47:52 559  WHEN BAD_PAYPAL_ID THEN
15:47:52 560  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 561  	  SPROC_NAME, 'No such paypal');
15:47:52 562  WHEN PAYPAL_ALREADY_INACTIVE THEN
15:47:52 563  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 564  	  SPROC_NAME, 'Paypal already inactive');
15:47:52 565  WHEN PENDING_TRANSACTIONS_FOUND THEN
15:47:52 566  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 567  	  SPROC_NAME, 'Account has pending charge which are using this paypal');
15:47:52 568  WHEN CAN_NOT_GET_DEF_FINANCIAL THEN
15:47:52 569  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 570  	  SPROC_NAME, 'Could not get current default financial instrument', EXCEPTION_MESSAGE);
15:47:52 571  WHEN CAN_NOT_DEL_DEF_FINANCIAL THEN
15:47:52 572  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 573  	  SPROC_NAME, 'Could not delete information about default financial instrument from account', EXCEPTION_MESSAGE);
15:47:52 574  WHEN OTHERS THEN
15:47:52 575  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 576  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 577  END DISABLE_PAYPAL;
15:47:52 578  
15:47:52 579  /******************************************************************************/
15:47:52 580  
15:47:52 581  PROCEDURE UPDATE_CREDIT_CARD (
15:47:52 582  /*
15:47:52 583  Throws exceptions:
15:47:52 584  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:52 585  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 586  */
15:47:52 587  	in_credit_card_id	  IN NUMBER,
15:47:52 588  	in_updated_by		  IN VARCHAR2,
15:47:52 589  	in_instrument_name	  IN VARCHAR2,
15:47:52 590  	in_is_default		  IN NUMBER
15:47:52 591  ) AS
15:47:52 592  SPROC_NAME CONSTANT VARCHAR2(18) := 'UPDATE_CREDIT_CARD';
15:47:52 593  -- VARIABLES
15:47:52 594  var_account_id NUMBER;
15:47:52 595  var_group_id   NUMBER;
15:47:52 596  temp_cc_rownum NUMBER;
15:47:52 597  current_def_instrument_type_id NUMBER;
15:47:52 598  current_def_instrument_id      NUMBER;
15:47:52 599  -- EXCEPTION
15:47:52 600  CAN_NOT_SET_DEF_FINANCIAL  EXCEPTION;
15:47:52 601  BAD_IS_DEFAULT_VALUE	 EXCEPTION;
15:47:52 602  CAN_NOT_GET_DEF_FINANCIAL  EXCEPTION;
15:47:52 603  CAN_NOT_DEL_DEF_FINANCIAL  EXCEPTION;
15:47:52 604  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
15:47:52 605  BEGIN
15:47:52 606  
15:47:52 607  	-- Get account id
15:47:52 608  	SELECT
15:47:52 609  	  CREDIT_CARD.ACCOUNT_ID
15:47:52 610  	  into
15:47:52 611  	  var_account_id
15:47:52 612  	FROM
15:47:52 613  	  CREDIT_CARD
15:47:52 614  	WHERE
15:47:52 615  	  CREDIT_CARD.ID = in_credit_card_id;
15:47:52 616  
15:47:52 617  	-- Get group id
15:47:52 618  	SELECT
15:47:52 619  	  ACCOUNT.GROUP_ID into var_group_id
15:47:52 620  	FROM
15:47:52 621  	  ACCOUNT
15:47:52 622  	WHERE
15:47:52 623  	  ACCOUNT.ID = var_account_id;
15:47:52 624  
15:47:52 625  	-- Check that passed data is correct
15:47:52 626  	IF in_is_default != GLOBAL_CONSTANTS_V22.TRUE
15:47:52 627  	  AND in_is_default != GLOBAL_CONSTANTS_V22.FALSE
15:47:52 628  	  AND in_is_default IS NOT NULL THEN
15:47:52 629  	  RAISE BAD_IS_DEFAULT_VALUE;
15:47:52 630  	END IF;
15:47:52 631  
15:47:52 632  	-- Update credit card
15:47:52 633  	IF in_instrument_name IS NOT NULL THEN
15:47:52 634  	  PROCS_FIN_INSTRUMENTS_CRU_V22.UPDATE_CREDIT_CARD(
15:47:52 635  	    in_credit_card_id  => in_credit_card_id,
15:47:52 636  	    in_updated_by      => in_updated_by,
15:47:52 637  	    in_instrument_name => in_instrument_name
15:47:52 638  	  );
15:47:52 639  	END IF;
15:47:52 640  
15:47:52 641  	-- Set default financial instrument
15:47:52 642  	IF in_is_default = GLOBAL_CONSTANTS_V22.TRUE THEN
15:47:52 643  	  BEGIN
15:47:52 644  	    PROCS_FIN_INSTRUMENTS_V22.SET_DEF_FINANCIAL_INSTRUMENT(
15:47:52 645  	      in_group_id	    => var_group_id,
15:47:52 646  	      in_instrument_type_id => GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD,
15:47:52 647  	      in_instrument_id	    => in_credit_card_id,
15:47:52 648  	      in_updated_by	    => in_updated_by
15:47:52 649  	    );
15:47:52 650  	    EXCEPTION
15:47:52 651  	      WHEN OTHERS THEN
15:47:52 652  		EXCEPTION_MESSAGE := SQLERRM;
15:47:52 653  		RAISE CAN_NOT_SET_DEF_FINANCIAL;
15:47:52 654  	  END;
15:47:52 655  	END IF;
15:47:52 656  
15:47:52 657  	-- Set default financial instrument
15:47:52 658  	IF in_is_default = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 659  	  BEGIN
15:47:52 660  	    GET_DEF_FINANCIAL_INSTRUMENT(
15:47:52 661  	      in_group_id	     => var_group_id,
15:47:52 662  	      out_instrument_type_id => current_def_instrument_type_id,
15:47:52 663  	      out_instrument_id      => current_def_instrument_id
15:47:52 664  	    );
15:47:52 665  	  EXCEPTION
15:47:52 666  	    WHEN OTHERS THEN
15:47:52 667  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 668  	      RAISE CAN_NOT_GET_DEF_FINANCIAL;
15:47:52 669  	  END;
15:47:52 670  	  IF current_def_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD
15:47:52 671  	    AND current_def_instrument_id = in_credit_card_id THEN
15:47:52 672  	    BEGIN
15:47:52 673  	      DEL_DEF_FINANCIAL_INSTRUMENT(
15:47:52 674  		in_group_id => var_group_id
15:47:52 675  	      );
15:47:52 676  	      EXCEPTION
15:47:52 677  		WHEN OTHERS THEN
15:47:52 678  		  EXCEPTION_MESSAGE := SQLERRM;
15:47:52 679  		  RAISE CAN_NOT_DEL_DEF_FINANCIAL;
15:47:52 680  	    END;
15:47:52 681  	  END IF;
15:47:52 682  	END IF;
15:47:52 683  
15:47:52 684  EXCEPTION
15:47:52 685  WHEN NO_DATA_FOUND THEN
15:47:52 686  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 687  	  SPROC_NAME, 'No such credit card');
15:47:52 688  WHEN CAN_NOT_SET_DEF_FINANCIAL THEN
15:47:52 689  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 690  	  SPROC_NAME, 'Could not set default financial instrument for account', EXCEPTION_MESSAGE);
15:47:52 691  WHEN CAN_NOT_GET_DEF_FINANCIAL THEN
15:47:52 692  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 693  	  SPROC_NAME, 'Could not get default financial instrument for account', EXCEPTION_MESSAGE);
15:47:52 694  WHEN CAN_NOT_DEL_DEF_FINANCIAL THEN
15:47:52 695  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 696  	  SPROC_NAME, 'Could not delete information about default financial instrument', EXCEPTION_MESSAGE);
15:47:52 697  WHEN OTHERS THEN
15:47:52 698  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 699  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 700  END UPDATE_CREDIT_CARD;
15:47:52 701  
15:47:52 702  /******************************************************************************/
15:47:52 703  
15:47:52 704  	PROCEDURE START_GC_PURCHASING (
15:47:52 705  	  in_group_id		    IN NUMBER,
15:47:52 706  	  in_offer_chain_id	    IN VARCHAR2,
15:47:52 707  	  in_gift_certificate_code  IN	VARCHAR2,
15:47:52 708  	  in_created_by 	    IN	VARCHAR2,
15:47:52 709  	  in_recipient_name	    IN	VARCHAR2,
15:47:52 710  	  in_recipient_email	    IN	VARCHAR2,
15:47:52 711  	  in_recipient_address_id   IN NUMBER,
15:47:52 712  	  in_recipient_notify_date  IN DATE,
15:47:52 713  	  in_sender_name	    IN VARCHAR2,
15:47:52 714  	  in_sender_email	    IN VARCHAR2,
15:47:52 715  	  in_gift_message	    IN	VARCHAR2,
15:47:52 716  	  in_expiration_date	    IN DATE,
15:47:52 717  	  in_campaign		    IN VARCHAR2,
15:47:52 718  	  in_reference_code	    IN VARCHAR2,
15:47:52 719  	  out_gift_certificate_id   OUT NUMBER,
15:47:52 720  	  out_invoice_id	    OUT NUMBER
15:47:52 721  	) AS
15:47:52 722  	  SPROC_NAME CONSTANT VARCHAR2(19) := 'START_GC_PURCHASING';
15:47:52 723  -- VARIABLES
15:47:52 724  	  var_account_id	    NUMBER;
15:47:52 725  	  temp_gc_code		    GIFT_CERTIFICATE.CODE%TYPE;
15:47:52 726  	  var_och_is_gc 	    NUMBER;
15:47:52 727  	  var_offer_chain_status_id NUMBER;
15:47:52 728  	  var_is_for_redemption     NUMBER;
15:47:52 729  	  var_new_invoice_id	    NUMBER;
15:47:52 730  	  var_gift_cert_id	    NUMBER;
15:47:52 731  	  var_account_tax_exempt_id VARCHAR2(255);
15:47:52 732  -- EXCEPTIONS
15:47:52 733  	    BAD_GROUP_ID		  EXCEPTION;
15:47:52 734  	    GC_CODE_ALREADY_EXISTS	  EXCEPTION;
15:47:52 735  	    BAD_OFFER_CHAIN_ID		  EXCEPTION;
15:47:52 736  	    OCH_IS_NOT_GIFT_CERTIFICATE   EXCEPTION;
15:47:52 737  	    BAD_OFFER_CHAIN_STATUS	  EXCEPTION;
15:47:52 738  	    CAN_NOT_PURCHASE_GC_FOR_RDMPN EXCEPTION;
15:47:52 739  	    CAN_NOT_CREATE_INVOICE	  EXCEPTION;
15:47:52 740  	    OFFER_REC_NUM_LESS_THAN_ONE   EXCEPTION;
15:47:52 741  	    CAN_NOT_CREATE_LINE_ITEMS	  EXCEPTION;
15:47:52 742  	    REF_CODE_ALREADY_EXISTS	  EXCEPTION;
15:47:52 743  
15:47:52 744  	  EXCEPTION_MESSAGE VARCHAR2(1024);
15:47:52 745  	  BEGIN
15:47:52 746  -- Get account id
15:47:52 747  	    BEGIN
15:47:52 748  	      SELECT
15:47:52 749  		ACCOUNT.ID,
15:47:52 750  		ACCOUNT.TAX_EXEMPT_ID
15:47:52 751  	      into
15:47:52 752  		var_account_id,
15:47:52 753  		var_account_tax_exempt_id
15:47:52 754  	      FROM
15:47:52 755  		ACCOUNT
15:47:52 756  	      WHERE
15:47:52 757  		ACCOUNT.GROUP_ID = in_group_id;
15:47:52 758  	      EXCEPTION
15:47:52 759  	      WHEN NO_DATA_FOUND THEN
15:47:52 760  	      RAISE BAD_GROUP_ID;
15:47:52 761  	    END;
15:47:52 762  
15:47:52 763  -- Check for the same code
15:47:52 764  	    BEGIN
15:47:52 765  	      SELECT
15:47:52 766  		GIFT_CERTIFICATE.CODE into temp_gc_code
15:47:52 767  	      FROM
15:47:52 768  		GIFT_CERTIFICATE
15:47:52 769  	      WHERE
15:47:52 770  		GIFT_CERTIFICATE.CODE = in_gift_certificate_code;
15:47:52 771  
15:47:52 772  	      RAISE GC_CODE_ALREADY_EXISTS;
15:47:52 773  
15:47:52 774  	      EXCEPTION
15:47:52 775  	      WHEN NO_DATA_FOUND THEN
15:47:52 776  	      NULL;
15:47:52 777  	    END;
15:47:52 778  
15:47:52 779  -- Get offer chain flag "is_gift_certificate"
15:47:52 780  	    BEGIN
15:47:52 781  	      SELECT
15:47:52 782  		OFFER_CHAIN.IS_GIFT_CERTIFICATE,
15:47:52 783  		OFFER_CHAIN.OFFER_CHAIN_STATUS_ID
15:47:52 784  	      into
15:47:52 785  		var_och_is_gc,
15:47:52 786  		var_offer_chain_status_id
15:47:52 787  	      FROM
15:47:52 788  		OFFER_CHAIN
15:47:52 789  	      WHERE
15:47:52 790  		OFFER_CHAIN.ID = in_offer_chain_id;
15:47:52 791  	      EXCEPTION
15:47:52 792  	      WHEN NO_DATA_FOUND THEN
15:47:52 793  	      RAISE BAD_OFFER_CHAIN_ID;
15:47:52 794  	    END;
15:47:52 795  
15:47:52 796  	    IF var_och_is_gc != GLOBAL_CONSTANTS_V22.TRUE
15:47:52 797  	       OR var_och_is_gc IS NULL THEN
15:47:52 798  	      RAISE OCH_IS_NOT_GIFT_CERTIFICATE;
15:47:52 799  	    END IF;
15:47:52 800  
15:47:52 801  	    IF var_offer_chain_status_id != GLOBAL_STATUSES_V22.OFFER_CHAIN_ACTIVE THEN
15:47:52 802  	      RAISE BAD_OFFER_CHAIN_STATUS;
15:47:52 803  	    END IF;
15:47:52 804  
15:47:52 805  -- norlov: #38151 check if the OC is for Redemption:
15:47:52 806  	    SELECT
15:47:52 807  	      COUNT(*) into var_is_for_redemption
15:47:52 808  	    FROM
15:47:52 809  	      OFFER_CHAIN_ELIGIBILITY
15:47:52 810  	    WHERE
15:47:52 811  	      OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID = in_offer_chain_id
15:47:52 812  	      AND OFFER_CHAIN_ELIGIBILITY.NAME = GLOBAL_CONSTANTS_V22.GIFT_CERTIFICATE_REQUIRED
15:47:52 813  	      AND OFFER_CHAIN_ELIGIBILITY.VALUE = GLOBAL_CONSTANTS_V22.ELIGIBILITY_FLAG_SET;
15:47:52 814  
15:47:52 815  	    IF var_is_for_redemption > 0 THEN
15:47:52 816  	      RAISE CAN_NOT_PURCHASE_GC_FOR_RDMPN;
15:47:52 817  	    END IF;
15:47:52 818  
15:47:52 819  -- Create new invoice
15:47:52 820  	    BEGIN
15:47:52 821  	      PROCS_INVOICE_V22.CREATE_INVOICE(
15:47:52 822  		  in_invoice_status => GLOBAL_STATUSES_V22.INVOICE_OPEN,
15:47:52 823  		  in_created_by     => in_created_by,
15:47:52 824  		  in_tax_exempt_id  => var_account_tax_exempt_id,
15:47:52 825  		  out_invoice_id    => var_new_invoice_id
15:47:52 826  	      );
15:47:52 827  	      EXCEPTION
15:47:52 828  	      WHEN OTHERS THEN
15:47:52 829  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 830  	      RAISE CAN_NOT_CREATE_INVOICE;
15:47:52 831  	    END;
15:47:52 832  
15:47:52 833  -- Add line items for new invoice
15:47:52 834  	    BEGIN
15:47:52 835  	      FOR f_offer_data IN (
15:47:52 836  	      SELECT
15:47:52 837  		OFFER_ID,
15:47:52 838  		NUM_RECURRENCES
15:47:52 839  	      FROM
15:47:52 840  		OFFER_OFFER_CHAIN
15:47:52 841  	      WHERE
15:47:52 842  		OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
15:47:52 843  	      )
15:47:52 844  	      LOOP
15:47:52 845  	      IF f_offer_data.NUM_RECURRENCES < 1 THEN
15:47:52 846  		RAISE OFFER_REC_NUM_LESS_THAN_ONE;
15:47:52 847  	      END IF;
15:47:52 848  	      FOR i_offer_recurrences_iterator IN 1..f_offer_data.NUM_RECURRENCES
15:47:52 849  	      LOOP
15:47:52 850  		PROCS_LINE_ITEMS_V22.ADD_LINE_ITEMS(
15:47:52 851  		    in_invoice_id => var_new_invoice_id,
15:47:52 852  		    in_offer_id   => f_offer_data.OFFER_ID,
15:47:52 853  		    in_created_by => in_created_by
15:47:52 854  		);
15:47:52 855  	      END LOOP;
15:47:52 856  	      END LOOP;
15:47:52 857  
15:47:52 858  	      EXCEPTION
15:47:52 859  	      WHEN OTHERS THEN
15:47:52 860  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 861  	      RAISE CAN_NOT_CREATE_LINE_ITEMS;
15:47:52 862  	    END;
15:47:52 863  
15:47:52 864  	    BEGIN
15:47:52 865  	      PROCS_FIN_INSTRUMENTS_CRU_V22.CREATE_GIFT_CERTIFICATE(
15:47:52 866  		  out_gift_certificate_id	=> var_gift_cert_id,
15:47:52 867  		  in_purchaser_group_id 	=> in_group_id,
15:47:52 868  		  in_purchaser_invoice_id	=> var_new_invoice_id,
15:47:52 869  		  in_offer_chain_id		=> in_offer_chain_id,
15:47:52 870  		  in_expiration_date		=> in_expiration_date,
15:47:52 871  		  in_purchase_date		=> SYSDATE,
15:47:52 872  		  in_gift_certificate_status_id => GLOBAL_STATUSES_V22.GIFT_CERTIFICATE_ACTIVE,
15:47:52 873  		  in_code			=> in_gift_certificate_code,
15:47:52 874  		  in_created_by 		=> in_created_by,
15:47:52 875  		  in_recipient_name		=> in_recipient_name,
15:47:52 876  		  in_gift_message		=> in_gift_message,
15:47:52 877  		  in_recipient_email		=> in_recipient_email,
15:47:52 878  		  in_sender_email		=> in_sender_email,
15:47:52 879  		  in_sender_name		=> in_sender_name,
15:47:52 880  		  in_recipient_address_id	=> in_recipient_address_id,
15:47:52 881  		  in_recipient_notify_date	=> in_recipient_notify_date,
15:47:52 882  		  in_campaign			=> in_campaign,
15:47:52 883  		  in_reference_code		=> in_reference_code
15:47:52 884  	      );
15:47:52 885  	      EXCEPTION WHEN DUP_VAL_ON_INDEX THEN RAISE REF_CODE_ALREADY_EXISTS;
15:47:52 886  	    END;
15:47:52 887  
15:47:52 888  	    out_gift_certificate_id := var_gift_cert_id;
15:47:52 889  	    out_invoice_id := var_new_invoice_id;
15:47:52 890  
15:47:52 891  	    EXCEPTION
15:47:52 892  	    WHEN BAD_OFFER_CHAIN_STATUS THEN
15:47:52 893  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 894  					     SPROC_NAME, 'Offer chain is not active');
15:47:52 895  	    WHEN GC_CODE_ALREADY_EXISTS THEN
15:47:52 896  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:52 897  					     SPROC_NAME, 'Gift certificate with same code already exists');
15:47:52 898  	    WHEN OCH_IS_NOT_GIFT_CERTIFICATE THEN
15:47:52 899  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 900  					     SPROC_NAME, 'This offer chain can not be used for gift certificate');
15:47:52 901  	    WHEN CAN_NOT_PURCHASE_GC_FOR_RDMPN THEN
15:47:52 902  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 903  					     SPROC_NAME, 'This offer chain can not be purchased for gift certificate since it is for redemption');
15:47:52 904  	    WHEN CAN_NOT_CREATE_INVOICE THEN
15:47:52 905  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 906  					     SPROC_NAME, 'Could not create new invoice', EXCEPTION_MESSAGE);
15:47:52 907  	    WHEN CAN_NOT_CREATE_LINE_ITEMS THEN
15:47:52 908  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 909  					     SPROC_NAME, 'Could not create line items', EXCEPTION_MESSAGE);
15:47:52 910  	    WHEN BAD_GROUP_ID THEN
15:47:52 911  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 912  					     SPROC_NAME, 'No such group id');
15:47:52 913  	    WHEN BAD_OFFER_CHAIN_ID THEN
15:47:52 914  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 915  					     SPROC_NAME, 'No such offer chain');
15:47:52 916  	    WHEN OFFER_REC_NUM_LESS_THAN_ONE THEN
15:47:52 917  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 918  					     SPROC_NAME, 'Some offer has recurrences number less than 1');
15:47:52 919  	    WHEN REF_CODE_ALREADY_EXISTS THEN
15:47:52 920  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 921  					     SPROC_NAME, 'reference_code already used');
15:47:52 922  	    WHEN OTHERS THEN
15:47:52 923  	    PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 924  					     SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 925  	  END START_GC_PURCHASING;
15:47:52 926  /******************************************************************************/
15:47:52 927  
15:47:52 928  	PROCEDURE FINALIZE_GC_PURCHASING (
15:47:52 929  	  in_invoice_id 	IN NUMBER,
15:47:52 930  	  in_created_by 	IN VARCHAR2,
15:47:52 931  	  in_instrument_id	IN NUMBER,
15:47:52 932  	  in_instrument_type_id IN NUMBER,
15:47:52 933  	  in_order_id		IN VARCHAR2,
15:47:52 934  	  in_transaction_id	IN NUMBER,
15:47:52 935  	  out_charge_amount	OUT NUMBER
15:47:52 936  	) AS
15:47:52 937  	  SPROC_NAME CONSTANT VARCHAR2(22) := 'FINALIZE_GC_PURCHASING';
15:47:52 938  -- VARIABLES
15:47:52 939  	  temp_transaction_id_count NUMBER;
15:47:52 940  	  var_invoice_amount	    NUMBER(10,2);
15:47:52 941  	  var_transaction_id	    NUMBER;
15:47:52 942  	  var_new_charge_id	    NUMBER;
15:47:52 943  -- EXCEPTIONS
15:47:52 944  	    BAD_CREDIT_CARD_ID		EXCEPTION;
15:47:52 945  	    BAD_PAYPAL_ID		EXCEPTION;
15:47:52 946  	    BAD_INSTRUMENT_TYPE 	EXCEPTION;
15:47:52 947  	    TRANSACTION_EXISTS		EXCEPTION;
15:47:52 948  	    CAN_NOT_CALC_INVOICE_AMOUNT EXCEPTION;
15:47:52 949  	    CAN_NOT_USE_FCINSTR 	EXCEPTION;
15:47:52 950  	    CAN_NOT_CREATE_TRANSACTION	EXCEPTION;
15:47:52 951  	    CAN_NOT_CREATE_CHARGE	EXCEPTION;
15:47:52 952  	  EXCEPTION_MESSAGE   VARCHAR2(1024);
15:47:52 953  	  BEGIN
15:47:52 954  
15:47:52 955  -- Check that instrument exists
15:47:52 956  	    IF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD THEN
15:47:52 957  	      IF IS_CREDIT_CARD_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 958  		RAISE BAD_CREDIT_CARD_ID;
15:47:52 959  	      END IF;
15:47:52 960  	    ELSIF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL THEN
15:47:52 961  	      IF IS_PAYPAL_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 962  		RAISE BAD_PAYPAL_ID;
15:47:52 963  	      END IF;
15:47:52 964  	    ELSIF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_ZCI_INSTRUMENT THEN
15:47:52 965  	      NULL;
15:47:52 966  	    ELSE
15:47:52 967  	      RAISE BAD_INSTRUMENT_TYPE;
15:47:52 968  	    END IF;
15:47:52 969  
15:47:52 970  -- Check that transaction with given id do not exists
15:47:52 971  	    SELECT
15:47:52 972  	      COUNT(*) into temp_transaction_id_count
15:47:52 973  	    FROM
15:47:52 974  	      TRANSACTION
15:47:52 975  	    WHERE
15:47:52 976  	      TRANSACTION.ID = in_transaction_id;
15:47:52 977  
15:47:52 978  	    IF temp_transaction_id_count > 0 THEN
15:47:52 979  	      RAISE TRANSACTION_EXISTS;
15:47:52 980  	    END IF;
15:47:52 981  
15:47:52 982  -- Calculate new invoice amount
15:47:52 983  	    BEGIN
15:47:52 984  	      PROCS_INVOICE_V22.CALCULATE_INVOICE_AMOUNT(in_invoice_id, var_invoice_amount);
15:47:52 985  	      EXCEPTION
15:47:52 986  	      WHEN OTHERS THEN
15:47:52 987  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:52 988  	      RAISE CAN_NOT_CALC_INVOICE_AMOUNT;
15:47:52 989  	    END;
15:47:52 990  
15:47:52 991  	    IF var_invoice_amount > 0
15:47:52 992  	       AND in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_ZCI_INSTRUMENT THEN
15:47:52 993  	      RAISE CAN_NOT_USE_FCINSTR;
15:47:52 994  	    END IF;
15:47:52 995  
15:47:52 996  -- If invoice amount iz 0 then we need to set status for this invoice to PROCCESSED
15:47:52 997  	    IF var_invoice_amount = 0 THEN
15:47:52 998  	      PROCS_INVOICE_CRU_V22.UPDATE_INVOICE(
15:47:52 999  		  in_invoice_id 		 => in_invoice_id,
15:47:52 1000  		   in_updated_by		  => in_created_by,
15:47:52 1001  		   in_invoice_status_id 	  => GLOBAL_STATUSES_V22.INVOICE_CLOSED
15:47:52 1002  	       );
15:47:52 1003  	     END IF;
15:47:52 1004  
15:47:52 1005  	     IF var_invoice_amount > 0 THEN
15:47:52 1006  -- Create transaction
15:47:52 1007  	       BEGIN
15:47:52 1008  		 PROCS_TRANSACTION_V22.CREATE_TRANSACTION(
15:47:52 1009  		     in_transaction_id	      => in_transaction_id,
15:47:52 1010  		     in_status_id	      => GLOBAL_STATUSES_V22.TRANSACTION_PENDING,
15:47:52 1011  		     in_amount		      => var_invoice_amount,
15:47:52 1012  		     in_created_by	      => in_created_by,
15:47:52 1013  		     in_order_id	      => in_order_id,
15:47:52 1014  		     in_transaction_type_code => 'GIFT_CERTIFICATE_PURCHASE',
15:47:52 1015  		     out_transaction_id       => var_transaction_id
15:47:52 1016  		 );
15:47:52 1017  		 EXCEPTION
15:47:52 1018  		 WHEN OTHERS THEN
15:47:52 1019  		 EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1020  		 RAISE CAN_NOT_CREATE_TRANSACTION;
15:47:52 1021  	       END;
15:47:52 1022  
15:47:52 1023  -- Create charge
15:47:52 1024  	       BEGIN
15:47:52 1025  		 PROCS_CHARGE_V22.CREATE_CHARGE(
15:47:52 1026  		     in_invoice_id	   => in_invoice_id,
15:47:52 1027  		     in_transaction_id	   => var_transaction_id,
15:47:52 1028  		     in_instrument_type_id => in_instrument_type_id,
15:47:52 1029  		     in_instrument_id	   => in_instrument_id,
15:47:52 1030  		     in_charge_amount	   => var_invoice_amount,
15:47:52 1031  		     in_created_by	   => in_created_by,
15:47:52 1032  		     in_charge_status_id   => GLOBAL_STATUSES_V22.CHARGE_OPENED,
15:47:52 1033  		     out_charge_id	   => var_new_charge_id
15:47:52 1034  		 );
15:47:52 1035  		 out_charge_amount := var_invoice_amount;
15:47:52 1036  		 EXCEPTION
15:47:52 1037  		 WHEN OTHERS THEN
15:47:52 1038  		 EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1039  		 RAISE CAN_NOT_CREATE_CHARGE;
15:47:52 1040  	       END;
15:47:52 1041  	     ELSE
15:47:52 1042  	       out_charge_amount := 0;
15:47:52 1043  	     END IF;
15:47:52 1044  
15:47:52 1045  	     EXCEPTION
15:47:52 1046  	     WHEN CAN_NOT_USE_FCINSTR THEN
15:47:52 1047  	     PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1048  					      SPROC_NAME, 'Could not use "free charge instrument" for non-zero invoice');
15:47:52 1049  	     WHEN BAD_CREDIT_CARD_ID THEN
15:47:52 1050  	     PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1051  					      SPROC_NAME, 'Bad credit card id');
15:47:52 1052  	     WHEN BAD_PAYPAL_ID THEN
15:47:52 1053  	     PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1054  					      SPROC_NAME, 'Bad paypal id');
15:47:52 1055  	     WHEN BAD_INSTRUMENT_TYPE THEN
15:47:52 1056  	     PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1057  					      SPROC_NAME, 'Bad instrument type');
15:47:52 1058  	     WHEN TRANSACTION_EXISTS THEN
15:47:52 1059  	     PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:52 1060  					      SPROC_NAME, 'Transaction with given id already exists');
15:47:52 1061  	     WHEN CAN_NOT_CREATE_TRANSACTION THEN
15:47:52 1062  	     PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1063  					      SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
15:47:52 1064  	     WHEN CAN_NOT_CREATE_CHARGE THEN
15:47:52 1065  	     PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1066  					      SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
15:47:52 1067  	     WHEN CAN_NOT_CALC_INVOICE_AMOUNT THEN
15:47:52 1068  	     PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1069  					      SPROC_NAME, 'Could not calculate amount for new invoice', EXCEPTION_MESSAGE);
15:47:52 1070  	     WHEN OTHERS THEN
15:47:52 1071  	     PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1072  					      SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1073  	   END FINALIZE_GC_PURCHASING;
15:47:52 1074  
15:47:52 1075  /******************************************************************************/
15:47:52 1076  
15:47:52 1077  PROCEDURE PURCHASE_GIFT_CERTIFICATE (
15:47:52 1078  	 in_group_id		   IN NUMBER,
15:47:52 1079  	 in_offer_chain_id	   IN VARCHAR2,
15:47:52 1080  	 in_gift_certificate_code  IN VARCHAR2,
15:47:52 1081  	 in_created_by		   IN VARCHAR2,
15:47:52 1082  	 in_recipient_name	   IN VARCHAR2,
15:47:52 1083  	 in_recipient_email	   IN VARCHAR2,
15:47:52 1084  	 in_sender_name 	   IN VARCHAR2,
15:47:52 1085  	 in_sender_email	   IN VARCHAR2,
15:47:52 1086  	 in_gift_message	   IN VARCHAR2,
15:47:52 1087  	 in_instrument_id	   IN NUMBER,
15:47:52 1088  	 in_instrument_type_id	   IN NUMBER,
15:47:52 1089  	 in_expiration_date	   IN DATE,
15:47:52 1090  	 in_order_id		   IN VARCHAR2,
15:47:52 1091  	 in_transaction_id	   IN NUMBER
15:47:52 1092  ) AS
15:47:52 1093  SPROC_NAME	  CONSTANT VARCHAR2(25) := 'PURCHASE_GIFT_CERTIFICATE';
15:47:52 1094  -- VARIABLES
15:47:52 1095  var_gift_cert_id   NUMBER;
15:47:52 1096  var_account_id	  NUMBER;
15:47:52 1097  var_invoice_amount NUMBER (10,2);
15:47:52 1098  var_new_invoice_id NUMBER;
15:47:52 1099  var_new_charge_id  NUMBER;
15:47:52 1100  var_och_is_gc	  NUMBER;
15:47:52 1101  var_offer_chain_status_id NUMBER;
15:47:52 1102  var_is_for_redemption	 NUMBER;
15:47:52 1103  var_account_tax_exempt_id VARCHAR2(255);
15:47:52 1104  
15:47:52 1105  temp_transaction_id_count NUMBER;
15:47:52 1106  var_transaction_id	 NUMBER;
15:47:52 1107  temp_gc_code VARCHAR2(255);
15:47:52 1108  
15:47:52 1109  var_invoice_status_id NUMBER;
15:47:52 1110  -- EXCEPTIONS
15:47:52 1111  CAN_NOT_CREATE_INVOICE		   EXCEPTION;
15:47:52 1112  CAN_NOT_CREATE_TRANSACTION	   EXCEPTION;
15:47:52 1113  CAN_NOT_CREATE_CHARGE		   EXCEPTION;
15:47:52 1114  CAN_NOT_CREATE_LINE_ITEMS	   EXCEPTION;
15:47:52 1115  BAD_GROUP_ID			   EXCEPTION;
15:47:52 1116  BAD_OFFER_CHAIN_ID		   EXCEPTION;
15:47:52 1117  OCH_IS_NOT_GIFT_CERTIFICATE	   EXCEPTION;
15:47:52 1118  TRANSACTION_EXISTS		   EXCEPTION;
15:47:52 1119  GC_CODE_ALREADY_EXISTS		   EXCEPTION;
15:47:52 1120  BAD_INSTRUMENT_TYPE		   EXCEPTION;
15:47:52 1121  BAD_CREDIT_CARD_ID		   EXCEPTION;
15:47:52 1122  BAD_PAYPAL_ID			   EXCEPTION;
15:47:52 1123  CAN_NOT_CALCULATE_OCH_AMOUNT	   EXCEPTION;
15:47:52 1124  BAD_OFFER_CHAIN_STATUS		   EXCEPTION;
15:47:52 1125  OFFER_REC_NUM_LESS_THAN_ONE	   EXCEPTION;
15:47:52 1126  CAN_NOT_CALC_INVOICE_AMOUNT	   EXCEPTION;
15:47:52 1127  CAN_NOT_USE_FCINSTR		   EXCEPTION;
15:47:52 1128  CAN_NOT_PURCHASE_GC_FOR_RDMPN	   EXCEPTION;
15:47:52 1129  EXCEPTION_MESSAGE		   VARCHAR2(1024);
15:47:52 1130  BEGIN
15:47:52 1131  
15:47:52 1132  	 -- Get account id
15:47:52 1133  	 BEGIN
15:47:52 1134  	   SELECT
15:47:52 1135  	     ACCOUNT.ID,
15:47:52 1136  	     ACCOUNT.TAX_EXEMPT_ID
15:47:52 1137  	     into
15:47:52 1138  	     var_account_id,
15:47:52 1139  	     var_account_tax_exempt_id
15:47:52 1140  	   FROM
15:47:52 1141  	     ACCOUNT
15:47:52 1142  	   WHERE
15:47:52 1143  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:52 1144  	   EXCEPTION
15:47:52 1145  	   WHEN NO_DATA_FOUND THEN
15:47:52 1146  	     RAISE BAD_GROUP_ID;
15:47:52 1147  	 END;
15:47:52 1148  
15:47:52 1149  	 -- Check that instrument exists
15:47:52 1150  	 IF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD THEN
15:47:52 1151  	   IF IS_CREDIT_CARD_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 1152  	     RAISE BAD_CREDIT_CARD_ID;
15:47:52 1153  	   END IF;
15:47:52 1154  	 ELSIF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL THEN
15:47:52 1155  	   IF IS_PAYPAL_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 1156  	     RAISE BAD_PAYPAL_ID;
15:47:52 1157  	   END IF;
15:47:52 1158  	 ELSIF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_ZCI_INSTRUMENT THEN
15:47:52 1159  	   NULL;
15:47:52 1160  	 ELSE
15:47:52 1161  	   RAISE BAD_INSTRUMENT_TYPE;
15:47:52 1162  	 END IF;
15:47:52 1163  
15:47:52 1164  	 -- Check for the same code
15:47:52 1165  	 BEGIN
15:47:52 1166  	   SELECT
15:47:52 1167  	     GIFT_CERTIFICATE.CODE into temp_gc_code
15:47:52 1168  	   FROM
15:47:52 1169  	     GIFT_CERTIFICATE
15:47:52 1170  	   WHERE
15:47:52 1171  	     GIFT_CERTIFICATE.CODE = in_gift_certificate_code;
15:47:52 1172  
15:47:52 1173  	   RAISE GC_CODE_ALREADY_EXISTS;
15:47:52 1174  
15:47:52 1175  	   EXCEPTION
15:47:52 1176  	     WHEN NO_DATA_FOUND THEN
15:47:52 1177  	       NULL;
15:47:52 1178  	 END;
15:47:52 1179  
15:47:52 1180  	 -- Get offer chain flag "is_gift_certificate"
15:47:52 1181  	 BEGIN
15:47:52 1182  	   SELECT
15:47:52 1183  	     OFFER_CHAIN.IS_GIFT_CERTIFICATE,
15:47:52 1184  	     OFFER_CHAIN.OFFER_CHAIN_STATUS_ID
15:47:52 1185  	     into
15:47:52 1186  	     var_och_is_gc,
15:47:52 1187  	     var_offer_chain_status_id
15:47:52 1188  	   FROM
15:47:52 1189  	     OFFER_CHAIN
15:47:52 1190  	   WHERE
15:47:52 1191  	     OFFER_CHAIN.ID = in_offer_chain_id;
15:47:52 1192  	   EXCEPTION
15:47:52 1193  	   WHEN NO_DATA_FOUND THEN
15:47:52 1194  	     RAISE BAD_OFFER_CHAIN_ID;
15:47:52 1195  	 END;
15:47:52 1196  
15:47:52 1197  	 IF var_och_is_gc != GLOBAL_CONSTANTS_V22.TRUE
15:47:52 1198  	   OR var_och_is_gc IS NULL THEN
15:47:52 1199  	   RAISE OCH_IS_NOT_GIFT_CERTIFICATE;
15:47:52 1200  	 END IF;
15:47:52 1201  
15:47:52 1202  	 IF var_offer_chain_status_id != GLOBAL_STATUSES_V22.OFFER_CHAIN_ACTIVE THEN
15:47:52 1203  	   RAISE BAD_OFFER_CHAIN_STATUS;
15:47:52 1204  	 END IF;
15:47:52 1205  
15:47:52 1206  	 -- norlov: #38151 check if the OC is for Redemption:
15:47:52 1207  	 SELECT
15:47:52 1208  	   COUNT(*) into var_is_for_redemption
15:47:52 1209  	 FROM
15:47:52 1210  	   OFFER_CHAIN_ELIGIBILITY
15:47:52 1211  	 WHERE
15:47:52 1212  	   OFFER_CHAIN_ELIGIBILITY.OFFER_CHAIN_ID = in_offer_chain_id
15:47:52 1213  	   AND OFFER_CHAIN_ELIGIBILITY.NAME = GLOBAL_CONSTANTS_V22.GIFT_CERTIFICATE_REQUIRED
15:47:52 1214  	   AND OFFER_CHAIN_ELIGIBILITY.VALUE = GLOBAL_CONSTANTS_V22.ELIGIBILITY_FLAG_SET;
15:47:52 1215  
15:47:52 1216  	 IF var_is_for_redemption > 0 THEN
15:47:52 1217  	   RAISE CAN_NOT_PURCHASE_GC_FOR_RDMPN;
15:47:52 1218  	 END IF;
15:47:52 1219  
15:47:52 1220  	 -- Check that transaction with given id do not exists
15:47:52 1221  	 SELECT
15:47:52 1222  	   COUNT(*) into temp_transaction_id_count
15:47:52 1223  	 FROM
15:47:52 1224  	   TRANSACTION
15:47:52 1225  	 WHERE
15:47:52 1226  	   TRANSACTION.ID = in_transaction_id;
15:47:52 1227  
15:47:52 1228  	 IF temp_transaction_id_count > 0 THEN
15:47:52 1229  	   RAISE TRANSACTION_EXISTS;
15:47:52 1230  	 END IF;
15:47:52 1231  
15:47:52 1232  	 -- Create new invoice
15:47:52 1233  	 BEGIN
15:47:52 1234  	   PROCS_INVOICE_V22.CREATE_INVOICE(
15:47:52 1235  	     in_invoice_status => GLOBAL_STATUSES_V22.INVOICE_OPEN,
15:47:52 1236  	     in_created_by     => in_created_by,
15:47:52 1237  	     in_tax_exempt_id  => var_account_tax_exempt_id,
15:47:52 1238  	     out_invoice_id    => var_new_invoice_id
15:47:52 1239  	   );
15:47:52 1240  	   EXCEPTION
15:47:52 1241  	     WHEN OTHERS THEN
15:47:52 1242  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1243  	       RAISE CAN_NOT_CREATE_INVOICE;
15:47:52 1244  	 END;
15:47:52 1245  
15:47:52 1246  	 -- Add line items for new invoice
15:47:52 1247  	 BEGIN
15:47:52 1248  	   FOR f_offer_data IN (
15:47:52 1249  	     SELECT
15:47:52 1250  	       OFFER_ID,
15:47:52 1251  	       NUM_RECURRENCES
15:47:52 1252  	     FROM
15:47:52 1253  	       OFFER_OFFER_CHAIN
15:47:52 1254  	     WHERE
15:47:52 1255  	       OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = in_offer_chain_id
15:47:52 1256  	   )
15:47:52 1257  	   LOOP
15:47:52 1258  	     IF f_offer_data.NUM_RECURRENCES < 1 THEN
15:47:52 1259  	       RAISE OFFER_REC_NUM_LESS_THAN_ONE;
15:47:52 1260  	     END IF;
15:47:52 1261  	     FOR i_offer_recurrences_iterator IN 1..f_offer_data.NUM_RECURRENCES
15:47:52 1262  	     LOOP
15:47:52 1263  	       PROCS_LINE_ITEMS_V22.ADD_LINE_ITEMS(
15:47:52 1264  		 in_invoice_id => var_new_invoice_id,
15:47:52 1265  		 in_offer_id   => f_offer_data.OFFER_ID,
15:47:52 1266  		 in_created_by => in_created_by
15:47:52 1267  	       );
15:47:52 1268  	     END LOOP;
15:47:52 1269  	   END LOOP;
15:47:52 1270  
15:47:52 1271  	   EXCEPTION
15:47:52 1272  	     WHEN OTHERS THEN
15:47:52 1273  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1274  	       RAISE CAN_NOT_CREATE_LINE_ITEMS;
15:47:52 1275  	 END;
15:47:52 1276  
15:47:52 1277  	 -- Calculate new invoice amount
15:47:52 1278  	 BEGIN
15:47:52 1279  	   PROCS_INVOICE_V22.CALCULATE_INVOICE_AMOUNT(var_new_invoice_id, var_invoice_amount);
15:47:52 1280  	   EXCEPTION
15:47:52 1281  	     WHEN OTHERS THEN
15:47:52 1282  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1283  	       RAISE CAN_NOT_CALC_INVOICE_AMOUNT;
15:47:52 1284  	 END;
15:47:52 1285  
15:47:52 1286  	 IF var_invoice_amount > 0
15:47:52 1287  	   AND in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_ZCI_INSTRUMENT THEN
15:47:52 1288  	   RAISE CAN_NOT_USE_FCINSTR;
15:47:52 1289  	 END IF;
15:47:52 1290  
15:47:52 1291  	 -- If invoice amount iz 0 then we need to set status for this invoice to PROCCESSED
15:47:52 1292  	 IF var_invoice_amount = 0 THEN
15:47:52 1293  	   PROCS_INVOICE_CRU_V22.UPDATE_INVOICE(
15:47:52 1294  	     in_invoice_id		    => var_new_invoice_id,
15:47:52 1295  	     in_updated_by		    => in_created_by,
15:47:52 1296  	     in_invoice_status_id	    => GLOBAL_STATUSES_V22.INVOICE_CLOSED
15:47:52 1297  	   );
15:47:52 1298  	 END IF;
15:47:52 1299  
15:47:52 1300  	 IF var_invoice_amount > 0 THEN
15:47:52 1301  	   -- Create transaction
15:47:52 1302  	   BEGIN
15:47:52 1303  	     PROCS_TRANSACTION_V22.CREATE_TRANSACTION(
15:47:52 1304  	       in_transaction_id  => in_transaction_id,
15:47:52 1305  	       in_status_id	  => GLOBAL_STATUSES_V22.TRANSACTION_PENDING,
15:47:52 1306  	       in_amount	  => var_invoice_amount,
15:47:52 1307  	       in_created_by	  => in_created_by,
15:47:52 1308  	       in_order_id	  => in_order_id,
15:47:52 1309  	       out_transaction_id => var_transaction_id
15:47:52 1310  	     );
15:47:52 1311  	     EXCEPTION
15:47:52 1312  	       WHEN OTHERS THEN
15:47:52 1313  		 EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1314  		 RAISE CAN_NOT_CREATE_TRANSACTION;
15:47:52 1315  	   END;
15:47:52 1316  
15:47:52 1317  	   -- Create charge
15:47:52 1318  	   BEGIN
15:47:52 1319  	     PROCS_CHARGE_V22.CREATE_CHARGE(
15:47:52 1320  	       in_invoice_id	     => var_new_invoice_id,
15:47:52 1321  	       in_transaction_id     => var_transaction_id,
15:47:52 1322  	       in_instrument_type_id => in_instrument_type_id,
15:47:52 1323  	       in_instrument_id      => in_instrument_id,
15:47:52 1324  	       in_charge_amount      => var_invoice_amount,
15:47:52 1325  	       in_created_by	     => in_created_by,
15:47:52 1326  	       in_charge_status_id   => GLOBAL_STATUSES_V22.CHARGE_OPENED,
15:47:52 1327  	       out_charge_id	     => var_new_charge_id
15:47:52 1328  	     );
15:47:52 1329  	     EXCEPTION
15:47:52 1330  	       WHEN OTHERS THEN
15:47:52 1331  		 EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1332  		 RAISE CAN_NOT_CREATE_CHARGE;
15:47:52 1333  	   END;
15:47:52 1334  	 END IF;
15:47:52 1335  
15:47:52 1336  	 -- Create new row in GIFT_CERTIFICATE table
15:47:52 1337  	 PROCS_FIN_INSTRUMENTS_CRU_V22.CREATE_GIFT_CERTIFICATE(
15:47:52 1338  	   out_gift_certificate_id	 => var_gift_cert_id,
15:47:52 1339  	   in_purchaser_group_id	 => in_group_id,
15:47:52 1340  	   in_purchaser_invoice_id	 => var_new_invoice_id,
15:47:52 1341  	   in_offer_chain_id		 => in_offer_chain_id,
15:47:52 1342  	   in_expiration_date		 => in_expiration_date,
15:47:52 1343  	   in_purchase_date		 => SYSDATE,
15:47:52 1344  	   in_gift_certificate_status_id => GLOBAL_STATUSES_V22.GIFT_CERTIFICATE_ACTIVE,
15:47:52 1345  	   in_code			 => in_gift_certificate_code,
15:47:52 1346  	   in_created_by		 => in_created_by,
15:47:52 1347  	   in_recipient_name		 => in_recipient_name,
15:47:52 1348  	   in_gift_message		 => in_gift_message,
15:47:52 1349  	   in_recipient_email		 => in_recipient_email,
15:47:52 1350  	   in_sender_email		 => in_sender_email,
15:47:52 1351  	   in_sender_name		 => in_sender_name
15:47:52 1352  	 );
15:47:52 1353  
15:47:52 1354  EXCEPTION
15:47:52 1355  WHEN CAN_NOT_USE_FCINSTR THEN
15:47:52 1356  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1357  	   SPROC_NAME, 'Could not use "free charge instrument" for non-zero invoice');
15:47:52 1358  WHEN BAD_OFFER_CHAIN_STATUS THEN
15:47:52 1359  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1360  	   SPROC_NAME, 'Offer chain is not active');
15:47:52 1361  WHEN CAN_NOT_CALCULATE_OCH_AMOUNT THEN
15:47:52 1362  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1363  	   SPROC_NAME, 'Could not calculate offer chain amount', EXCEPTION_MESSAGE);
15:47:52 1364  WHEN BAD_CREDIT_CARD_ID THEN
15:47:52 1365  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1366  	   SPROC_NAME, 'Bad credit card id');
15:47:52 1367  WHEN BAD_PAYPAL_ID THEN
15:47:52 1368  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1369  	   SPROC_NAME, 'Bad paypal id');
15:47:52 1370  WHEN BAD_INSTRUMENT_TYPE THEN
15:47:52 1371  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1372  	   SPROC_NAME, 'Bad instrument type');
15:47:52 1373  WHEN GC_CODE_ALREADY_EXISTS THEN
15:47:52 1374  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:52 1375  	   SPROC_NAME, 'Gift certificate with same code already exists');
15:47:52 1376  WHEN OCH_IS_NOT_GIFT_CERTIFICATE THEN
15:47:52 1377  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1378  	   SPROC_NAME, 'This offer chain can not be used for gift certificate');
15:47:52 1379  WHEN CAN_NOT_PURCHASE_GC_FOR_RDMPN THEN
15:47:52 1380  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1381  	   SPROC_NAME, 'This offer chain can not be purchased for gift certificate since it is for redemption');
15:47:52 1382  WHEN TRANSACTION_EXISTS THEN
15:47:52 1383  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR,
15:47:52 1384  	   SPROC_NAME, 'Transaction with given id already exists');
15:47:52 1385  WHEN CAN_NOT_CREATE_INVOICE THEN
15:47:52 1386  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1387  	   SPROC_NAME, 'Could not create new invoice', EXCEPTION_MESSAGE);
15:47:52 1388  WHEN CAN_NOT_CREATE_TRANSACTION THEN
15:47:52 1389  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1390  	   SPROC_NAME, 'Could not create transaction', EXCEPTION_MESSAGE);
15:47:52 1391  WHEN CAN_NOT_CREATE_CHARGE THEN
15:47:52 1392  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1393  	   SPROC_NAME, 'Could not create charge', EXCEPTION_MESSAGE);
15:47:52 1394  WHEN CAN_NOT_CREATE_LINE_ITEMS THEN
15:47:52 1395  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1396  	   SPROC_NAME, 'Could not create line items', EXCEPTION_MESSAGE);
15:47:52 1397  WHEN BAD_GROUP_ID THEN
15:47:52 1398  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1399  	   SPROC_NAME, 'No such group id');
15:47:52 1400  WHEN BAD_OFFER_CHAIN_ID THEN
15:47:52 1401  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1402  	   SPROC_NAME, 'No such offer chain');
15:47:52 1403  WHEN OFFER_REC_NUM_LESS_THAN_ONE THEN
15:47:52 1404  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1405  	   SPROC_NAME, 'Some offer has recurrences number less than 1');
15:47:52 1406  WHEN CAN_NOT_CALC_INVOICE_AMOUNT THEN
15:47:52 1407  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1408  	   SPROC_NAME, 'COuold not calculate amount for new invoice', EXCEPTION_MESSAGE);
15:47:52 1409  WHEN OTHERS THEN
15:47:52 1410  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1411  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1412  END PURCHASE_GIFT_CERTIFICATE;
15:47:52 1413  
15:47:52 1414  /******************************************************************************/
15:47:52 1415  
15:47:52 1416  PROCEDURE REDEEM_GIFT_CERTIFICATE (
15:47:52 1417  	 in_group_id			 IN NUMBER,
15:47:52 1418  	 in_gift_certificate_code	 IN VARCHAR2,
15:47:52 1419  	 in_created_by			 IN VARCHAR2,
15:47:52 1420  	 in_redeemer_address_id 	 IN NUMBER,
15:47:52 1421  	 in_fin_instrument_id		 IN NUMBER,
15:47:52 1422  	 in_fin_instrument_type_id	 IN NUMBER,
15:47:52 1423  	 in_redemption_offer_chain_id	 IN NUMBER,
15:47:52 1424  	 out_subscription_id		 OUT NUMBER,
15:47:52 1425  	 out_license_id 		 OUT NUMBER
15:47:52 1426  ) AS
15:47:52 1427  SPROC_NAME	       CONSTANT VARCHAR2(23) := 'REDEEM_GIFT_CERTIFICATE';
15:47:52 1428  -- VARIABLES
15:47:52 1429  var_gift_certificate_id NUMBER;
15:47:52 1430  -- norlov: #38151 var_offer_chain_id replaced by var_purchased_oc_id and var_oc_id_to_redeem
15:47:52 1431  var_purchased_oc_id     NUMBER;
15:47:52 1432  var_oc_id_to_redeem     NUMBER := in_redemption_offer_chain_id;
15:47:52 1433  var_offer_duration      VARCHAR2(30);
15:47:52 1434  var_invoice_id	       NUMBER;
15:47:52 1435  var_succ_purch_attempts_num NUMBER;
15:47:52 1436  var_subscription_id     NUMBER;
15:47:52 1437  var_license_id	       NUMBER;
15:47:52 1438  var_account_id	       NUMBER;
15:47:52 1439  var_gc_status_id        NUMBER;
15:47:52 1440  var_gc_charges_amount   NUMBER;
15:47:52 1441  var_gc_expiration_date  DATE;
15:47:52 1442  var_gc_redeemer_group_id NUMBER;
15:47:52 1443  var_gc_purchase_invoice_id NUMBER;
15:47:52 1444  var_gc_purchase_inv_status_id NUMBER;
15:47:52 1445  var_offer_index		     NUMBER;
15:47:52 1446  var_purchaser_group_id	     NUMBER;
15:47:52 1447  temp_license_id		     NUMBER;
15:47:52 1448  var_same_offer_chains_num     NUMBER;
15:47:52 1449  var_max_concurrent_subscrs    NUMBER;
15:47:52 1450  var_account_tax_exempt_id     VARCHAR2(255);
15:47:52 1451  var_fin_instrument_type_id    NUMBER := in_fin_instrument_type_id;
15:47:52 1452  var_fin_instrument_id	     NUMBER := in_fin_instrument_id;
15:47:52 1453  var_first_offer_id	  NUMBER;
15:47:52 1454  var_date 	     DATE := SYSDATE;
15:47:52 1455  
15:47:52 1456  var_offers SYS_REFCURSOR;
15:47:52 1457  
15:47:52 1458  -- EXCEPTIONS
15:47:52 1459  BAD_GIFT_CERTIFICATE_CODE      EXCEPTION;
15:47:52 1460  BAD_GROUP_ID		      EXCEPTION;
15:47:52 1461  CAN_NOT_CREATE_LICENSE	      EXCEPTION;
15:47:52 1462  GIFT_CERT_IS_FINALIZED	      EXCEPTION;
15:47:52 1463  GIFT_CERT_IS_REFUNDED	      EXCEPTION;
15:47:52 1464  CAN_NOT_UPDATE_CERTIFICATE     EXCEPTION;
15:47:52 1465  GIFT_CERTIFICATE_EXPIRED       EXCEPTION;
15:47:52 1466  GIFT_CERTIFICATE_REDEEMED      EXCEPTION;
15:47:52 1467  USER_ALREADY_SUBSCRIBED_TO_PRD EXCEPTION;
15:47:52 1468  LIMIT_REACHED		      EXCEPTION;
15:47:52 1469  GC_PURCHASE_INVOICE_NOT_CLOSED EXCEPTION;
15:47:52 1470  PURCHASE_INVOICES_NOT_PAID     EXCEPTION;
15:47:52 1471  OC_TO_REDEEM_NOT_FOUND	      EXCEPTION;
15:47:52 1472  CAN_NOT_GET_FIRST_OFFER_CHAIN  EXCEPTION;
15:47:52 1473  EXCEPTION_MESSAGE	      VARCHAR2(1024);
15:47:52 1474  BEGIN
15:47:52 1475  
15:47:52 1476  	 -- Get account id
15:47:52 1477  	 BEGIN
15:47:52 1478  	   SELECT
15:47:52 1479  	     ACCOUNT.ID,
15:47:52 1480  	     ACCOUNT.TAX_EXEMPT_ID
15:47:52 1481  	     into
15:47:52 1482  	     var_account_id,
15:47:52 1483  	     var_account_tax_exempt_id
15:47:52 1484  	   FROM
15:47:52 1485  	     ACCOUNT
15:47:52 1486  	   WHERE
15:47:52 1487  	     ACCOUNT.GROUP_ID = in_group_id
15:47:52 1488  	     AND ROWNUM <= 1;
15:47:52 1489  
15:47:52 1490  	   EXCEPTION
15:47:52 1491  	   WHEN NO_DATA_FOUND THEN
15:47:52 1492  	     RAISE BAD_GROUP_ID;
15:47:52 1493  	 END;
15:47:52 1494  
15:47:52 1495  	 -- Get gift certificate data
15:47:52 1496  	 BEGIN
15:47:52 1497  	   SELECT
15:47:52 1498  	     GIFT_CERTIFICATE.ID,
15:47:52 1499  	     GIFT_CERTIFICATE.OFFER_CHAIN_ID,
15:47:52 1500  	     GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID,
15:47:52 1501  	     GIFT_CERTIFICATE.PURCHASER_GROUP_ID,
15:47:52 1502  	     GIFT_CERTIFICATE.EXPIRATION_DATE,
15:47:52 1503  	     GIFT_CERTIFICATE.REDEEMER_GROUP_ID,
15:47:52 1504  	     GIFT_CERTIFICATE.PURCHASE_INVOICE_ID
15:47:52 1505  	     into
15:47:52 1506  	     var_gift_certificate_id,
15:47:52 1507  	     var_purchased_oc_id,
15:47:52 1508  	     var_gc_status_id,
15:47:52 1509  	     var_purchaser_group_id,
15:47:52 1510  	     var_gc_expiration_date,
15:47:52 1511  	     var_gc_redeemer_group_id,
15:47:52 1512  	     var_gc_purchase_invoice_id
15:47:52 1513  	   FROM
15:47:52 1514  	     GIFT_CERTIFICATE
15:47:52 1515  	   WHERE
15:47:52 1516  	     GIFT_CERTIFICATE.CODE = in_gift_certificate_code
15:47:52 1517  	     AND ROWNUM <= 1;
15:47:52 1518  
15:47:52 1519  	   EXCEPTION
15:47:52 1520  	   WHEN NO_DATA_FOUND THEN
15:47:52 1521  	     RAISE BAD_GIFT_CERTIFICATE_CODE;
15:47:52 1522  	 END;
15:47:52 1523  
15:47:52 1524  	 -- get redemption oc id from meta data if it wasn't passed in, parsing will fail for gcs with multiple redemption offer chains,
15:47:52 1525  	 -- but in that case a redemption offer chain id should always be passed in
15:47:52 1526  	 IF var_oc_id_to_redeem IS NULL THEN
15:47:52 1527  	   BEGIN
15:47:52 1528  	     SELECT
15:47:52 1529  	       to_number(OFFER_CHAIN_META_DATA.VALUE)
15:47:52 1530  	       into
15:47:52 1531  	       var_oc_id_to_redeem
15:47:52 1532  	     FROM
15:47:52 1533  	       OFFER_CHAIN_META_DATA
15:47:52 1534  	     WHERE
15:47:52 1535  	       OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID = var_purchased_oc_id
15:47:52 1536  	       AND OFFER_CHAIN_META_DATA.NAME = GLOBAL_CONSTANTS_V22.REDEMPTION_OC_ID
15:47:52 1537  	       AND ROWNUM = 1;
15:47:52 1538  -- requested by ticket so (but above is correct for the actual migrated data):
15:47:52 1539  --  SELECT
15:47:52 1540  --      OFFER_CHAIN.ID
15:47:52 1541  --      into
15:47:52 1542  --      var_oc_id_to_redeem
15:47:52 1543  --    FROM
15:47:52 1544  --      OFFER_CHAIN
15:47:52 1545  --	 INNER JOIN ELIGIBILITY ON OFFER_CHAIN.ID = ELIGIBILITY.OFFER_CHAIN_ID
15:47:52 1546  --	 INNER JOIN OFFER_CHAIN_META_DATA ON OFFER_CHAIN.ID = OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID
15:47:52 1547  --    WHERE
15:47:52 1548  --      ELIGIBILITY.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:52 1549  --      AND ELIGIBILITY.NAME = GLOBAL_CONSTANTS_V22.GIFT_CERTIFICATE_REQUIRED
15:47:52 1550  --      AND ELIGIBILITY.VALUE = GLOBAL_CONSTANTS_V22.ELIGIBILITY_FLAG_SET
15:47:52 1551  --      AND OFFER_CHAIN_META_DATA.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:52 1552  --      AND OFFER_CHAIN_META_DATA.NAME = GLOBAL_CONSTANTS_V22.REDEMPTION_OC_ID
15:47:52 1553  --      AND to_number(OFFER_CHAIN_META_DATA.VALUE) = var_purchased_oc_id
15:47:52 1554  --      AND ROWNUM = 1;
15:47:52 1555  
15:47:52 1556  	     EXCEPTION
15:47:52 1557  	     WHEN NO_DATA_FOUND THEN
15:47:52 1558  	       RAISE OC_TO_REDEEM_NOT_FOUND;
15:47:52 1559  	   END;
15:47:52 1560  	 END IF;
15:47:52 1561  
15:47:52 1562  	 -- Check that purchase invoice for this GC was closed
15:47:52 1563  	 SELECT
15:47:52 1564  	   INVOICE.INVOICE_STATUS_ID into var_gc_purchase_inv_status_id
15:47:52 1565  	 FROM
15:47:52 1566  	   INVOICE
15:47:52 1567  	 WHERE
15:47:52 1568  	   INVOICE.ID = var_gc_purchase_invoice_id;
15:47:52 1569  
15:47:52 1570  	 IF var_gc_purchase_inv_status_id != GLOBAL_STATUSES_V22.INVOICE_CLOSED THEN
15:47:52 1571  	   RAISE GC_PURCHASE_INVOICE_NOT_CLOSED;
15:47:52 1572  	 END IF;
15:47:52 1573  
15:47:52 1574  	 -- Check that this invoice was successfully processed by billing
15:47:52 1575  	 SELECT
15:47:52 1576  	   COUNT(1) into var_succ_purch_attempts_num
15:47:52 1577  	 FROM
15:47:52 1578  	   TRANSACTION_ATTEMPT TA
15:47:52 1579  	   INNER JOIN TRANSACTION T ON T.ID = TA.TRANSACTION_ID
15:47:52 1580  	   INNER JOIN CHARGE CH ON CH.TRANSACTION_ID = T.ID
15:47:52 1581  	 WHERE
15:47:52 1582  	   CH.INVOICE_ID = var_gc_purchase_invoice_id
15:47:52 1583  	   AND TA.TRANSACTION_ATTEMPT_STATUS_ID = GLOBAL_STATUSES_V22.TRANS_ATTEMPT_SUCCESS;
15:47:52 1584  
15:47:52 1585  	 IF var_succ_purch_attempts_num = 0 THEN
15:47:52 1586  	   SELECT
15:47:52 1587  	     COUNT(1) into var_succ_purch_attempts_num
15:47:52 1588  	   FROM
15:47:52 1589  	     DUAL
15:47:52 1590  	   WHERE
15:47:52 1591  	     PROCS_INVOICE_V22.F_CALCULATE_INVOICE_AMOUNT(var_gc_purchase_invoice_id) = 0;
15:47:52 1592  	 END IF;
15:47:52 1593  
15:47:52 1594  	 IF var_succ_purch_attempts_num = 0 THEN
15:47:52 1595  	   RAISE PURCHASE_INVOICES_NOT_PAID;
15:47:52 1596  	 END IF;
15:47:52 1597  
15:47:52 1598  	 -- Check limit for gc's offer chain
15:47:52 1599  	 SELECT
15:47:52 1600  	   COUNT(*) into var_same_offer_chains_num
15:47:52 1601  	 FROM
15:47:52 1602  	   SUBSCRIPTION
15:47:52 1603  	 WHERE
15:47:52 1604  	   SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:52 1605  	   AND SUBSCRIPTION.OFFER_CHAIN_ID = var_oc_id_to_redeem
15:47:52 1606  	   AND (
15:47:52 1607  	     SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 1608  	     OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD);
15:47:52 1609  IF var_same_offer_chains_num = 0 THEN
15:47:52 1610  	   -- if user does not have any active existing subscriptions to the offer chain
15:47:52 1611  	   -- and if product from the offer chain is already owned from another offer chain
15:47:52 1612  	   -- then deny purchase
15:47:52 1613  	   FOR f_account_offer_chains IN (
15:47:52 1614  	     SELECT DISTINCT
15:47:52 1615  	       OFFER_CHAIN_ID
15:47:52 1616  	     FROM
15:47:52 1617  	       SUBSCRIPTION
15:47:52 1618  	     WHERE
15:47:52 1619  	       ACCOUNT_ID = var_account_id
15:47:52 1620  	       AND (
15:47:52 1621  		 SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 1622  		 OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED
15:47:52 1623  		 OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD)
15:47:52 1624  	   )
15:47:52 1625  	   LOOP
15:47:52 1626  	     IF PROCS_OFFER_CHAIN_V22.CHECK_FOR_SAME_PRODUCTS(var_oc_id_to_redeem, f_account_offer_chains.OFFER_CHAIN_ID) = GLOBAL_CONSTANTS_V22.TRUE THEN
15:47:52 1627  	       RAISE USER_ALREADY_SUBSCRIBED_TO_PRD;
15:47:52 1628  	     END IF;
15:47:52 1629  	   END LOOP;
15:47:52 1630  	 ELSE
15:47:52 1631  
15:47:52 1632  	   -- if user have any active existing subscriptions to the offer chain
15:47:52 1633  	   -- and if MAX_CONCURRENT_SUBS <= [user's subscription count for the offer chain]
15:47:52 1634  	   -- then deny purchase
15:47:52 1635  	   var_max_concurrent_subscrs := PROCS_OFFER_CHAIN_V22.GET_OFFER_CHAIN_MAX_CONC_SUBSC(var_oc_id_to_redeem);
15:47:52 1636  	   IF var_max_concurrent_subscrs != GLOBAL_CONSTANTS_V22.INFINITY
15:47:52 1637  	     AND var_max_concurrent_subscrs <= var_same_offer_chains_num THEN
15:47:52 1638  	     RAISE LIMIT_REACHED;
15:47:52 1639  	   END IF;
15:47:52 1640  	 END IF;
15:47:52 1641  -- norlov: END OF TODO
15:47:52 1642  
15:47:52 1643  
15:47:52 1644  	 IF var_gc_redeemer_group_id IS NOT NULL THEN
15:47:52 1645  	   RAISE GIFT_CERTIFICATE_REDEEMED;
15:47:52 1646  	 END IF;
15:47:52 1647  
15:47:52 1648  	 IF var_gc_expiration_date < sysdate THEN
15:47:52 1649  	   RAISE GIFT_CERTIFICATE_EXPIRED;
15:47:52 1650  	 END IF;
15:47:52 1651  
15:47:52 1652  	  IF var_gc_status_id = GLOBAL_STATUSES_V22.GIFT_CERTIFICATE_REFUNDED THEN
15:47:52 1653  	   RAISE GIFT_CERT_IS_REFUNDED;
15:47:52 1654  	 END IF;
15:47:52 1655  
15:47:52 1656  	 IF var_gc_status_id = GLOBAL_STATUSES_V22.GIFT_CERTIFICATE_FINALIZED THEN
15:47:52 1657  	   RAISE GIFT_CERT_IS_FINALIZED;
15:47:52 1658  	 END IF;
15:47:52 1659  
15:47:52 1660  	 -- Check that user did not subscribed to same product already
15:47:52 1661  	 -- norlov: get rid of this since there is already the check?
15:47:52 1662  	 FOR f_user_offer_chain IN (
15:47:52 1663  	   SELECT DISTINCT
15:47:52 1664  	     OFFER_CHAIN_ID
15:47:52 1665  	   FROM
15:47:52 1666  	     SUBSCRIPTION
15:47:52 1667  	   WHERE
15:47:52 1668  	     ACCOUNT_ID=var_account_id
15:47:52 1669  	     AND (
15:47:52 1670  	       SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 1671  	       OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED
15:47:52 1672  	       OR SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD)
15:47:52 1673  	 )
15:47:52 1674  	 LOOP
15:47:52 1675  	   IF PROCS_OFFER_CHAIN_V22.CHECK_FOR_SAME_PRODUCTS(var_oc_id_to_redeem, f_user_offer_chain.OFFER_CHAIN_ID)=GLOBAL_CONSTANTS_V22.TRUE THEN
15:47:52 1676  	     RAISE USER_ALREADY_SUBSCRIBED_TO_PRD;
15:47:52 1677  	   END IF;
15:47:52 1678  	 END LOOP;
15:47:52 1679  
15:47:52 1680  	 -- Check for gift certificate amount
15:47:52 1681  	 SELECT
15:47:52 1682  	   SUM(CHARGE.CHARGE_AMOUNT) into var_gc_charges_amount
15:47:52 1683  	 FROM
15:47:52 1684  	   CHARGE
15:47:52 1685  	 WHERE
15:47:52 1686  	   CHARGE.INSTRUMENT_ID = var_gift_certificate_id
15:47:52 1687  	   AND CHARGE.INSTRUMENT_TYPE_ID = GLOBAL_ENUMS_V22.INSTRUMENT_GIFT_CERTIFICATE;
15:47:52 1688  
15:47:52 1689  	 -- Create new invoice
15:47:52 1690  	 PROCS_INVOICE_V22.CREATE_INVOICE(
15:47:52 1691  	   out_invoice_id    => var_invoice_id,
15:47:52 1692  	   in_invoice_status => GLOBAL_STATUSES_V22.INVOICE_CLOSED,
15:47:52 1693  	   in_tax_exempt_id  => var_account_tax_exempt_id,
15:47:52 1694  	   in_created_by     => in_created_by
15:47:52 1695  	 );
15:47:52 1696  
15:47:52 1697  	 -- If a financial instrument wasn't passed in, use the gift certificate id
15:47:52 1698  	 -- Real financial instrument is required for upsell/till forbid gift subscriptions
15:47:52 1699  	 IF var_fin_instrument_id is null THEN
15:47:52 1700  	   var_fin_instrument_id := var_gift_certificate_id;
15:47:52 1701  	   var_fin_instrument_type_id := GLOBAL_ENUMS_V22.INSTRUMENT_GIFT_CERTIFICATE;
15:47:52 1702  	 END IF;
15:47:52 1703  
15:47:52 1704  	 -- Insert new row into subscription table
15:47:52 1705  	 PROCS_SUBSCRIPTION_CRU_V22.CREATE_SUBSCRIPTION(
15:47:52 1706  	   out_subscription_id	     => var_subscription_id,
15:47:52 1707  	   in_account_id	     => var_account_id,
15:47:52 1708  	   in_purchase_date	     => var_date,
15:47:52 1709  	   in_offer_chain_id	     => var_oc_id_to_redeem,
15:47:52 1710  	   in_created_by	     => in_created_by,
15:47:52 1711  	   in_instrument_type_id     => var_fin_instrument_type_id,
15:47:52 1712  	   in_instrument_id	     => var_fin_instrument_id,
15:47:52 1713  	   in_subscription_status_id => GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:52 1714  	 );
15:47:52 1715  
15:47:52 1716  	 out_subscription_id := var_subscription_id;
15:47:52 1717  
15:47:52 1718  	 BEGIN
15:47:52 1719  	   PROCS_OFFER_CHAIN_V22.GET_FIRST_OFFER(var_oc_id_to_redeem, var_first_offer_id);
15:47:52 1720  	   EXCEPTION
15:47:52 1721  	     WHEN OTHERS THEN
15:47:52 1722  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1723  	       RAISE CAN_NOT_GET_FIRST_OFFER_CHAIN;
15:47:52 1724  	 END;
15:47:52 1725  
15:47:52 1726  	 BEGIN
15:47:52 1727  	   PROCS_LICENSE_V22.CREATE_LICENSE (
15:47:52 1728  	     out_license_id		 => out_license_id,
15:47:52 1729  	     in_status_id		 => GLOBAL_STATUSES_V22.LICENSE_ACTIVE,
15:47:52 1730  	     in_needs_entitlements	 => GLOBAL_CONSTANTS_V22.TRUE,
15:47:52 1731  	     in_start_date		 => var_date,
15:47:52 1732  	     in_offer_id		 => var_first_offer_id,
15:47:52 1733  	     in_subscription_id 	 => var_subscription_id,
15:47:52 1734  	     in_invoice_id		 => var_invoice_id,
15:47:52 1735  	     in_created_by		 => in_created_by,
15:47:52 1736  	     in_end_date		 => NULL, -- Will be calculated automatically
15:47:52 1737  	     in_is_extension		 => GLOBAL_CONSTANTS_V22.FALSE,
15:47:52 1738  	     in_current_offer_index	 => PROCS_OFFER_CHAIN_V22.GET_FIRST_OFFER_INDEX(var_oc_id_to_redeem),
15:47:52 1739  	     in_current_offer_recurr_num => 1
15:47:52 1740  	   );
15:47:52 1741  
15:47:52 1742  	   EXCEPTION
15:47:52 1743  	     WHEN OTHERS THEN
15:47:52 1744  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1745  	       RAISE CAN_NOT_CREATE_LICENSE;
15:47:52 1746  	 END;
15:47:52 1747  
15:47:52 1748  	 -- Update original gift certificate
15:47:52 1749  	 BEGIN
15:47:52 1750  	   PROCS_FIN_INSTRUMENTS_CRU_V22.UPDATE_GIFT_CERTIFICATE(
15:47:52 1751  	     in_gift_certificate_id	   => var_gift_certificate_id,
15:47:52 1752  	     in_updated_by		   => in_created_by,
15:47:52 1753  	     in_redeemer_group_id	   => in_group_id,
15:47:52 1754  	     in_finalized_invoice_id	   => var_invoice_id,
15:47:52 1755  	     in_redemption_date 	   => var_date,
15:47:52 1756  	     in_redeemer_address_id	   => in_redeemer_address_id,
15:47:52 1757  	     in_gift_certificate_status_id => GLOBAL_STATUSES_V22.GIFT_CERTIFICATE_FINALIZED
15:47:52 1758  	   );
15:47:52 1759  	   EXCEPTION
15:47:52 1760  	     WHEN OTHERS THEN
15:47:52 1761  	       EXCEPTION_MESSAGE := SQLERRM;
15:47:52 1762  	       RAISE CAN_NOT_UPDATE_CERTIFICATE;
15:47:52 1763  	 END;
15:47:52 1764  
15:47:52 1765  EXCEPTION
15:47:52 1766  WHEN LIMIT_REACHED THEN
15:47:52 1767  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.CONFLICT_ERROR,
15:47:52 1768  	   SPROC_NAME, 'Limit reached for given offer chain');
15:47:52 1769  WHEN USER_ALREADY_SUBSCRIBED_TO_PRD THEN
15:47:52 1770  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.CONFLICT_ERROR,
15:47:52 1771  	   SPROC_NAME, 'User already subscribed to some product in given gift certificate');
15:47:52 1772  WHEN GIFT_CERTIFICATE_REDEEMED THEN
15:47:52 1773  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1774  	   SPROC_NAME, 'Gift certificate already redeemed');
15:47:52 1775  WHEN GIFT_CERTIFICATE_EXPIRED THEN
15:47:52 1776  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 1777  	   SPROC_NAME, 'Gift certificate expired');
15:47:52 1778  WHEN GIFT_CERT_IS_FINALIZED THEN
15:47:52 1779  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1780  	   SPROC_NAME, 'Gift certificate is finalized');
15:47:52 1781  WHEN GIFT_CERT_IS_REFUNDED THEN
15:47:52 1782  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1783  	   SPROC_NAME, 'Gift certificate has been refunded');
15:47:52 1784  WHEN BAD_GROUP_ID THEN
15:47:52 1785  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1786  	   SPROC_NAME, 'No such account with given group id');
15:47:52 1787  WHEN OC_TO_REDEEM_NOT_FOUND THEN
15:47:52 1788  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1789  	   SPROC_NAME, 'Offer chain to redeem not found');
15:47:52 1790  WHEN BAD_GIFT_CERTIFICATE_CODE THEN
15:47:52 1791  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1792  	   SPROC_NAME, 'No such gift certificate code');
15:47:52 1793  WHEN CAN_NOT_CREATE_LICENSE THEN
15:47:52 1794  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1795  	   SPROC_NAME, 'Could not create new license', EXCEPTION_MESSAGE);
15:47:52 1796  WHEN CAN_NOT_UPDATE_CERTIFICATE THEN
15:47:52 1797  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:52 1798  	   SPROC_NAME, 'Could not update gift certificate', EXCEPTION_MESSAGE);
15:47:52 1799  WHEN GC_PURCHASE_INVOICE_NOT_CLOSED THEN
15:47:52 1800  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1801  	   SPROC_NAME, 'Purchase invoice is not closed');
15:47:52 1802  WHEN PURCHASE_INVOICES_NOT_PAID THEN
15:47:52 1803  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:52 1804  	   SPROC_NAME, 'Purchase invoice is not successfully processed by billing');
15:47:52 1805  WHEN OTHERS THEN
15:47:52 1806  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1807  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1808  END;
15:47:52 1809  
15:47:52 1810  /******************************************************************************/
15:47:52 1811  
15:47:52 1812  PROCEDURE GET_GIFT_CERTIFICATE_BY_CODE (
15:47:52 1813  /*
15:47:52 1814  Throws exceptions:
15:47:52 1815  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1816  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 1817  */
15:47:52 1818  	 in_code	IN VARCHAR,
15:47:52 1819  	 out_result_set OUT SYS_REFCURSOR
15:47:52 1820  ) AS
15:47:52 1821  -- VARIABLES
15:47:52 1822  SPROC_NAME		CONSTANT VARCHAR2(28) := 'GET_GIFT_CERTIFICATE_BY_CODE';
15:47:52 1823  temp_gift_certificate_id NUMBER;
15:47:52 1824  -- EXCEPTIONS
15:47:52 1825  BAD_GIFT_CERTIFICATE_CODE EXCEPTION;
15:47:52 1826  BEGIN
15:47:52 1827  
15:47:52 1828  	 BEGIN
15:47:52 1829  	   SELECT
15:47:52 1830  	     GIFT_CERTIFICATE.ID into temp_gift_certificate_id
15:47:52 1831  	   FROM
15:47:52 1832  	     GIFT_CERTIFICATE
15:47:52 1833  	   WHERE
15:47:52 1834  	     GIFT_CERTIFICATE.CODE = in_code;
15:47:52 1835  	   EXCEPTION
15:47:52 1836  	     WHEN NO_DATA_FOUND THEN
15:47:52 1837  	       RAISE BAD_GIFT_CERTIFICATE_CODE;
15:47:52 1838  	 END;
15:47:52 1839  
15:47:52 1840  	 -- Select all gift certificates with given code
15:47:52 1841  	 OPEN out_result_set FOR
15:47:52 1842  	 SELECT
15:47:52 1843  	   gc.EXPIRATION_DATE,
15:47:52 1844  	   ch.name,
15:47:52 1845  	   ch.id,
15:47:52 1846  	   gc.sender_email,
15:47:52 1847  	   gc.sender_name,
15:47:52 1848  	   gc.recipient_email,
15:47:52 1849  	   gc.recipient_name,
15:47:52 1850  	   gc.purchase_date,
15:47:52 1851  	   gc.redemption_date,
15:47:52 1852  	   gc.purchaser_group_id,
15:47:52 1853  	   gc.redeemer_group_id,
15:47:52 1854  	   gc.gift_message,
15:47:52 1855  	   ocmd.value redemption_offer_chain_ids,
15:47:52 1856  	   s.offer_chain_id redeemed_offer_chain_id,
15:47:52 1857  	   gc.recipient_notify_date,
15:47:52 1858  	   gc.gift_certificate_status_id,
15:47:52 1859  	   gc.purchase_invoice_id,
15:47:52 1860  	   gc.finalized_invoice_id,
15:47:52 1861  	   gccr.reference_code
15:47:52 1862  	 FROM
15:47:52 1863  	   GIFT_CERTIFICATE gc
15:47:52 1864  	 INNER JOIN OFFER_CHAIN ch ON ch.id = gc.offer_chain_id
15:47:52 1865  	 INNER JOIN OFFER_CHAIN_META_DATA ocmd ON gc.offer_chain_id = ocmd.offer_chain_id AND ocmd.name = 'redemption offer chain id'
15:47:52 1866  	 LEFT JOIN LICENSE l ON l.invoice_id = gc.finalized_invoice_id
15:47:52 1867  	 LEFT JOIN SUBSCRIPTION s ON l.subscription_id = s.id
15:47:52 1868  	 LEFT JOIN GC_CAMPAIGN_AND_REF gccr ON gc.id = gccr.GC_ID
15:47:52 1869  	 WHERE
15:47:52 1870  	   gc.code = in_code;
15:47:52 1871  
15:47:52 1872  EXCEPTION
15:47:52 1873  WHEN BAD_GIFT_CERTIFICATE_CODE THEN
15:47:52 1874  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1875  	   SPROC_NAME, 'No such gift certificate');
15:47:52 1876  
15:47:52 1877  WHEN OTHERS THEN
15:47:52 1878  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1879  	   SPROC_NAME, 'Unknown Error', SQLERRM);
15:47:52 1880  END;
15:47:52 1881  
15:47:52 1882  /******************************************************************************/
15:47:52 1883  
15:47:52 1884  PROCEDURE GET_GIFT_CERTIFICATE_BY_ID (
15:47:52 1885  /*
15:47:52 1886  Throws exceptions:
15:47:52 1887  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1888  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:52 1889  */
15:47:52 1890  	 in_gift_certificate_id IN NUMBER,
15:47:52 1891  	 out_result_set 	OUT SYS_REFCURSOR
15:47:52 1892  ) AS
15:47:52 1893  -- VARIABLES
15:47:52 1894  SPROC_NAME		CONSTANT VARCHAR2(26) := 'GET_GIFT_CERTIFICATE_BY_ID';
15:47:52 1895  temp_gift_certificate_id NUMBER;
15:47:52 1896  -- EXCEPTIONS
15:47:52 1897  BAD_GIFT_CERTIFICATE_ID EXCEPTION;
15:47:52 1898  BEGIN
15:47:52 1899  
15:47:52 1900  	 BEGIN
15:47:52 1901  	   SELECT
15:47:52 1902  	     GIFT_CERTIFICATE.ID into temp_gift_certificate_id
15:47:52 1903  	   FROM
15:47:52 1904  	     GIFT_CERTIFICATE
15:47:52 1905  	   WHERE
15:47:52 1906  	     GIFT_CERTIFICATE.ID = in_gift_certificate_id;
15:47:52 1907  	   EXCEPTION
15:47:52 1908  	     WHEN NO_DATA_FOUND THEN
15:47:52 1909  	       RAISE BAD_GIFT_CERTIFICATE_ID;
15:47:52 1910  	 END;
15:47:52 1911  
15:47:52 1912  	 -- Select all gift certificates with given code
15:47:52 1913  	 OPEN out_result_set FOR
15:47:52 1914  	 SELECT
15:47:52 1915  	   gc.EXPIRATION_DATE,
15:47:52 1916  	   ch.name,
15:47:52 1917  	   ch.id,
15:47:52 1918  	   gc.sender_email,
15:47:52 1919  	   gc.sender_name,
15:47:52 1920  	   gc.recipient_email,
15:47:52 1921  	   gc.recipient_name,
15:47:52 1922  	   gc.purchase_date,
15:47:52 1923  	   gc.redemption_date,
15:47:52 1924  	   gc.purchaser_group_id,
15:47:52 1925  	   gc.redeemer_group_id,
15:47:52 1926  	   gc.code,
15:47:52 1927  	   gc.gift_message,
15:47:52 1928  	   gc.recipient_notify_date
15:47:52 1929  	 FROM
15:47:52 1930  	   GIFT_CERTIFICATE gc
15:47:52 1931  	 INNER JOIN OFFER_CHAIN ch ON ch.id = gc.offer_chain_id
15:47:52 1932  	 WHERE
15:47:52 1933  	   gc.id = in_gift_certificate_id;
15:47:52 1934  
15:47:52 1935  EXCEPTION
15:47:52 1936  WHEN BAD_GIFT_CERTIFICATE_ID THEN
15:47:52 1937  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1938  	   SPROC_NAME, 'No such gift certificate');
15:47:52 1939  WHEN OTHERS THEN
15:47:52 1940  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1941  	   SPROC_NAME, 'Unknown Error', SQLERRM);
15:47:52 1942  END GET_GIFT_CERTIFICATE_BY_ID;
15:47:52 1943  
15:47:52 1944  /******************************************************************************/
15:47:52 1945  
15:47:52 1946  PROCEDURE GET_DEF_FINANCIAL_INSTRUMENT (
15:47:52 1947  	 in_group_id		IN  NUMBER,
15:47:52 1948  	 out_instrument_type_id OUT NUMBER,
15:47:52 1949  	 out_instrument_id	OUT NUMBER
15:47:52 1950  ) AS
15:47:52 1951  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_DEF_FINANCIAL_INSTRUMENT';
15:47:52 1952  BEGIN
15:47:52 1953  
15:47:52 1954  	 SELECT
15:47:52 1955  	   ACCOUNT.INSTRUMENT_TYPE_ID,
15:47:52 1956  	   ACCOUNT.INSTRUMENT_ID
15:47:52 1957  	   into
15:47:52 1958  	   out_instrument_type_id,
15:47:52 1959  	   out_instrument_id
15:47:52 1960  	 FROM
15:47:52 1961  	   ACCOUNT
15:47:52 1962  	 WHERE
15:47:52 1963  	   ACCOUNT.GROUP_ID = in_group_id;
15:47:52 1964  
15:47:52 1965  EXCEPTION
15:47:52 1966  WHEN NO_DATA_FOUND THEN
15:47:52 1967  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 1968  	   SPROC_NAME, 'Bad group id');
15:47:52 1969  WHEN OTHERS THEN
15:47:52 1970  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 1971  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 1972  END GET_DEF_FINANCIAL_INSTRUMENT;
15:47:52 1973  
15:47:52 1974  /******************************************************************************/
15:47:52 1975  
15:47:52 1976  PROCEDURE SET_DEF_FINANCIAL_INSTRUMENT (
15:47:52 1977  	 in_group_id	       IN NUMBER,
15:47:52 1978  	 in_instrument_type_id IN NUMBER,
15:47:52 1979  	 in_instrument_id      IN NUMBER,
15:47:52 1980  	 in_updated_by	       IN VARCHAR2
15:47:52 1981  ) AS
15:47:52 1982  -- VARIABLES
15:47:52 1983  SPROC_NAME	      CONSTANT VARCHAR2(28) := 'SET_DEF_FINANCIAL_INSTRUMENT';
15:47:52 1984  var_account_id	      NUMBER;
15:47:52 1985  -- EXCEPTIONS
15:47:52 1986  BAD_GROUP_ID	      EXCEPTION;
15:47:52 1987  BAD_CREDIT_CARD	      EXCEPTION;
15:47:52 1988  BAD_PAYPAL	      EXCEPTION;
15:47:52 1989  BAD_INSTRUMENT_TYPE    EXCEPTION;
15:47:52 1990  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:52 1991  BEGIN
15:47:52 1992  
15:47:52 1993  	 -- get account id
15:47:52 1994  	 BEGIN
15:47:52 1995  	   SELECT
15:47:52 1996  	     ACCOUNT.ID into var_account_id
15:47:52 1997  	   FROM
15:47:52 1998  	     ACCOUNT
15:47:52 1999  	   WHERE
15:47:52 2000  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:52 2001  	   EXCEPTION
15:47:52 2002  	     WHEN NO_DATA_FOUND THEN
15:47:52 2003  	       RAISE BAD_GROUP_ID;
15:47:52 2004  	 END;
15:47:52 2005  
15:47:52 2006  	 -- Chech that given instrument exists
15:47:52 2007  	 IF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD THEN
15:47:52 2008  	   IF IS_CREDIT_CARD_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 2009  	     RAISE BAD_CREDIT_CARD;
15:47:52 2010  	   END IF;
15:47:52 2011  	 ELSIF in_instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL THEN
15:47:52 2012  	   IF IS_PAYPAL_EXISTS(in_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 2013  	     RAISE BAD_PAYPAL;
15:47:52 2014  	   END IF;
15:47:52 2015  	 ELSE
15:47:52 2016  	   RAISE BAD_INSTRUMENT_TYPE;
15:47:52 2017  	 END IF;
15:47:52 2018  
15:47:52 2019  	 -- update account information
15:47:52 2020  	 PROCS_ACCOUNT_CRU_V22.UPDATE_ACCOUNT(
15:47:52 2021  	   in_account_id	 => var_account_id,
15:47:52 2022  	   in_updated_by	 => in_updated_by,
15:47:52 2023  	   in_instrument_type_id => in_instrument_type_id,
15:47:52 2024  	   in_instrument_id	 => in_instrument_id
15:47:52 2025  	 );
15:47:52 2026  
15:47:52 2027  EXCEPTION
15:47:52 2028  WHEN BAD_GROUP_ID THEN
15:47:52 2029  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2030  	   SPROC_NAME, 'No such account');
15:47:52 2031  WHEN BAD_CREDIT_CARD THEN
15:47:52 2032  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2033  	   SPROC_NAME, 'Could not find credit card with given ID');
15:47:52 2034  WHEN BAD_PAYPAL THEN
15:47:52 2035  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2036  	   SPROC_NAME, 'Could not find paypal with given ID');
15:47:52 2037  WHEN BAD_INSTRUMENT_TYPE THEN
15:47:52 2038  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 2039  	   SPROC_NAME, 'Bad instrument type id');
15:47:52 2040  WHEN OTHERS THEN
15:47:52 2041  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2042  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2043  END SET_DEF_FINANCIAL_INSTRUMENT;
15:47:52 2044  
15:47:52 2045  /******************************************************************************/
15:47:52 2046  
15:47:52 2047  PROCEDURE DEL_DEF_FINANCIAL_INSTRUMENT (
15:47:52 2048  	 in_group_id IN NUMBER
15:47:52 2049  ) AS
15:47:52 2050  SPROC_NAME CONSTANT VARCHAR2(28) := 'DEL_DEF_FINANCIAL_INSTRUMENT';
15:47:52 2051  -- VARIABLES
15:47:52 2052  var_account_id NUMBER;
15:47:52 2053  -- EXCEPTIONS
15:47:52 2054  BAD_GROUP_ID	 EXCEPTION;
15:47:52 2055  EXCEPTION_MESSAGE VARCHAR2(1024);
15:47:52 2056  BEGIN
15:47:52 2057  
15:47:52 2058  	 BEGIN
15:47:52 2059  	   SELECT
15:47:52 2060  	     ACCOUNT.ID into var_account_id
15:47:52 2061  	   FROM
15:47:52 2062  	     ACCOUNT
15:47:52 2063  	   WHERE
15:47:52 2064  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:52 2065  	   EXCEPTION
15:47:52 2066  	     WHEN NO_DATA_FOUND THEN
15:47:52 2067  	       RAISE BAD_GROUP_ID;
15:47:52 2068  	 END;
15:47:52 2069  
15:47:52 2070  	 PROCS_ACCOUNT_CRU_V22.UPDATE_DEF_FIN_INSTRUMENT(
15:47:52 2071  	   in_account_id => var_account_id,
15:47:52 2072  	   in_instrument_type_id => NULL,
15:47:52 2073  	   in_instrument_id => NULL,
15:47:52 2074  	   in_updated_by => 'in_updated_by' -- TODO: add in_updated_by field
15:47:52 2075  	 );
15:47:52 2076  
15:47:52 2077  EXCEPTION
15:47:52 2078  WHEN BAD_GROUP_ID THEN
15:47:52 2079  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2080  	   SPROC_NAME, 'No such group id');
15:47:52 2081  WHEN OTHERS THEN
15:47:52 2082  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2083  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2084  END DEL_DEF_FINANCIAL_INSTRUMENT;
15:47:52 2085  
15:47:52 2086  /******************************************************************************/
15:47:52 2087  
15:47:52 2088  PROCEDURE GET_CREDIT_CARD_BY_ID (
15:47:52 2089  	 in_credit_card_id IN  NUMBER,
15:47:52 2090  	 out_result_set    OUT SYS_REFCURSOR
15:47:52 2091  ) AS
15:47:52 2092  -- VARIABLES
15:47:52 2093  SPROC_NAME    CONSTANT VARCHAR2(21) := 'GET_CREDIT_CARD_BY_ID';
15:47:52 2094  temp_cc_count NUMBER;
15:47:52 2095  
15:47:52 2096  -- EXCEPTIONS
15:47:52 2097  BAD_CREDIT_CARD_ID EXCEPTION;
15:47:52 2098  BEGIN
15:47:52 2099  
15:47:52 2100  	 -- Check that credit card exists
15:47:52 2101  	 SELECT
15:47:52 2102  	   COUNT(*) into temp_cc_count
15:47:52 2103  	 FROM
15:47:52 2104  	   CREDIT_CARD
15:47:52 2105  	 WHERE
15:47:52 2106  	   CREDIT_CARD.ID = in_credit_card_id;
15:47:52 2107  	 IF temp_cc_count = 0 THEN
15:47:52 2108  	   RAISE BAD_CREDIT_CARD_ID;
15:47:52 2109  	 END IF;
15:47:52 2110  
15:47:52 2111  	 -- Get data
15:47:52 2112  	 OPEN out_result_set FOR
15:47:52 2113  	 SELECT
15:47:52 2114  	   CREDIT_CARD.ID,
15:47:52 2115  	   CREDIT_CARD.ACCOUNT_ID,
15:47:52 2116  	   CREDIT_CARD.INSTRUMENT_NAME,
15:47:52 2117  	   CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME,
15:47:52 2118  	   CREDIT_CARD.PRIVATE_STREET_ADDRESS,
15:47:52 2119  	   CREDIT_CARD.PRIVATE_STREET_ADDRESS2,
15:47:52 2120  	   CREDIT_CARD.STATE,
15:47:52 2121  	   CREDIT_CARD.CITY,
15:47:52 2122  	   CREDIT_CARD.POSTAL_CODE,
15:47:52 2123  	   CREDIT_CARD.COUNTRY,
15:47:52 2124  	   CREDIT_CARD.LAST_FOUR_CC,
15:47:52 2125  	   CREDIT_CARD.EXPIRATION_DATE,
15:47:52 2126  	   CREDIT_CARD.CREDIT_CARD_TYPE_ID,
15:47:52 2127  	   CREDIT_CARD.SECRET_TOKEN,
15:47:52 2128  	   CREDIT_CARD.CREATE_DATE,
15:47:52 2129  	   CREDIT_CARD.CREATED_BY,
15:47:52 2130  	   CREDIT_CARD.UPDATE_DATE,
15:47:52 2131  	   CREDIT_CARD.UPDATED_BY,
15:47:52 2132  	   CREDIT_CARD.CREDIT_CARD_STATUS_ID,
15:47:52 2133  	   CREDIT_CARD.PRIVATE_FIRST_NAME,
15:47:52 2134  	   CREDIT_CARD.PRIVATE_LAST_NAME,
15:47:52 2135  	       CREDIT_CARD.CHASE_PROFILE_ID
15:47:52 2136  	 FROM
15:47:52 2137  	   CREDIT_CARD
15:47:52 2138  	 WHERE
15:47:52 2139  	   CREDIT_CARD.ID = in_credit_card_id;
15:47:52 2140  
15:47:52 2141  EXCEPTION
15:47:52 2142  WHEN BAD_CREDIT_CARD_ID THEN
15:47:52 2143  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2144  	   SPROC_NAME, 'No such credit card');
15:47:52 2145  WHEN OTHERS THEN
15:47:52 2146  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2147  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2148  END GET_CREDIT_CARD_BY_ID;
15:47:52 2149  
15:47:52 2150  /******************************************************************************/
15:47:52 2151  
15:47:52 2152  PROCEDURE GET_PAYPAL_BY_ID (
15:47:52 2153  	 in_paypal_id	IN  NUMBER,
15:47:52 2154  	 out_result_set OUT SYS_REFCURSOR
15:47:52 2155  ) AS
15:47:52 2156  SPROC_NAME CONSTANT VARCHAR2(16) := 'GET_PAYPAL_BY_ID';
15:47:52 2157  -- VARIABLES
15:47:52 2158  temp_pp_count NUMBER;
15:47:52 2159  -- EXCEPTIONS
15:47:52 2160  BAD_PAYPAL_ID EXCEPTION;
15:47:52 2161  BEGIN
15:47:52 2162  
15:47:52 2163  	 -- Check that credit card exists
15:47:52 2164  	 SELECT
15:47:52 2165  	   COUNT(*) into temp_pp_count
15:47:52 2166  	 FROM
15:47:52 2167  	   PAYPAL
15:47:52 2168  	 WHERE
15:47:52 2169  	   PAYPAL.ID = in_paypal_id;
15:47:52 2170  	 IF temp_pp_count = 0 THEN
15:47:52 2171  	   RAISE BAD_PAYPAL_ID;
15:47:52 2172  	 END IF;
15:47:52 2173  
15:47:52 2174  	 OPEN out_result_set FOR
15:47:52 2175  	 SELECT
15:47:52 2176  	   ID,
15:47:52 2177  	   ACCOUNT_ID,
15:47:52 2178  	   INSTRUMENT_NAME,
15:47:52 2179  	   PRIVATE_EMAIL_ADDRESS,
15:47:52 2180  	   CREATE_DATE,
15:47:52 2181  	   CREATED_BY,
15:47:52 2182  	   UPDATE_DATE,
15:47:52 2183  	   UPDATED_BY,
15:47:52 2184  	   PAYPAL_STATUS_ID,
15:47:52 2185  	   PRIVATE_STREET_ADDRESS,
15:47:52 2186  	   PRIVATE_STREET_ADDRESS2,
15:47:52 2187  	   STATE,
15:47:52 2188  	   CITY,
15:47:52 2189  	   POSTAL_CODE,
15:47:52 2190  	   COUNTRY,
15:47:52 2191  	   EXPIRATION_DATE,
15:47:52 2192  	   SECRET_TOKEN
15:47:52 2193  	 FROM
15:47:52 2194  	   PAYPAL
15:47:52 2195  	 WHERE
15:47:52 2196  	   ID = in_paypal_id;
15:47:52 2197  
15:47:52 2198  EXCEPTION
15:47:52 2199  WHEN BAD_PAYPAL_ID THEN
15:47:52 2200  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2201  	   SPROC_NAME, 'No such paypal');
15:47:52 2202  WHEN OTHERS THEN
15:47:52 2203  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2204  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2205  END GET_PAYPAL_BY_ID;
15:47:52 2206  
15:47:52 2207  /******************************************************************************/
15:47:52 2208  
15:47:52 2209  FUNCTION F_CAN_DISABLE_CREDIT_CARD (
15:47:52 2210  /*
15:47:52 2211  	 Returns GLOBAL_CONSTANTS_V22.TRUE if system can disable credit card
15:47:52 2212  	 GLOBAL_CONSTANTS_V22.FALSE else
15:47:52 2213  */
15:47:52 2214  	 in_credit_card_id NUMBER
15:47:52 2215  ) RETURN NUMBER AS
15:47:52 2216  BEGIN
15:47:52 2217  	 -- STUB
15:47:52 2218  	 RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 2219  END F_CAN_DISABLE_CREDIT_CARD;
15:47:52 2220  
15:47:52 2221  /******************************************************************************/
15:47:52 2222  
15:47:52 2223  PROCEDURE GET_PURCHASED_GCERTIFICATES (
15:47:52 2224  	 in_group_id	IN NUMBER,
15:47:52 2225  	 out_result_set OUT SYS_REFCURSOR
15:47:52 2226  ) AS
15:47:52 2227  -- VARIABLES
15:47:52 2228  SPROC_NAME     CONSTANT VARCHAR2(27) := 'GET_PURCHASED_GCERTIFICATES';
15:47:52 2229  var_account_id NUMBER;
15:47:52 2230  -- EXCEPTIONS
15:47:52 2231  BAD_GROUP_ID EXCEPTION;
15:47:52 2232  BEGIN
15:47:52 2233  
15:47:52 2234  	 BEGIN
15:47:52 2235  	   SELECT
15:47:52 2236  	     ACCOUNT.ID into var_account_id
15:47:52 2237  	   FROM
15:47:52 2238  	     ACCOUNT
15:47:52 2239  	   WHERE
15:47:52 2240  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:52 2241  	   EXCEPTION
15:47:52 2242  	     WHEN NO_DATA_FOUND THEN
15:47:52 2243  	       RAISE BAD_GROUP_ID;
15:47:52 2244  	 END;
15:47:52 2245  
15:47:52 2246  	 OPEN out_result_set FOR
15:47:52 2247  	 SELECT
15:47:52 2248  	   GIFT_CERTIFICATE.CODE,
15:47:52 2249  	   GIFT_CERTIFICATE.EXPIRATION_DATE,
15:47:52 2250  	   OFFER_CHAIN.NAME AS "OFFER_CHAIN_NAME",
15:47:52 2251  	   OFFER_CHAIN.ID AS "OFFER_CHAIN_ID",
15:47:52 2252  	   GIFT_CERTIFICATE.SENDER_EMAIL,
15:47:52 2253  	   GIFT_CERTIFICATE.SENDER_NAME,
15:47:52 2254  	   GIFT_CERTIFICATE.RECIPIENT_EMAIL,
15:47:52 2255  	   GIFT_CERTIFICATE.RECIPIENT_NAME,
15:47:52 2256  	   GIFT_CERTIFICATE.PURCHASE_DATE,
15:47:52 2257  	   GIFT_CERTIFICATE.REDEMPTION_DATE,
15:47:52 2258  	   GIFT_CERTIFICATE.REDEEMER_GROUP_ID
15:47:52 2259  	 FROM
15:47:52 2260  	   GIFT_CERTIFICATE
15:47:52 2261  	   INNER JOIN OFFER_CHAIN ON GIFT_CERTIFICATE.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:52 2262  	 WHERE
15:47:52 2263  	   ROWNUM <= 100 AND
15:47:52 2264  	   GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id;
15:47:52 2265  
15:47:52 2266  EXCEPTION
15:47:52 2267  WHEN BAD_GROUP_ID THEN
15:47:52 2268  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2269  	   SPROC_NAME, 'No such group id');
15:47:52 2270  WHEN OTHERS THEN
15:47:52 2271  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2272  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2273  END GET_PURCHASED_GCERTIFICATES;
15:47:52 2274  
15:47:52 2275  /******************************************************************************/
15:47:52 2276  
15:47:52 2277  PROCEDURE IS_GCERT_FOR_PROPER_OFFER (
15:47:52 2278  	 in_gift_certificate_id IN NUMBER,
15:47:52 2279  	 in_charge_id		IN NUMBER,
15:47:52 2280  	 out_result		OUT NUMBER
15:47:52 2281  ) AS
15:47:52 2282  -- VARIABLES
15:47:52 2283  SPROC_NAME	    CONSTANT VARCHAR2(25) := 'IS_GCERT_FOR_PROPER_OFFER';
15:47:52 2284  var_invoice_id	    NUMBER;
15:47:52 2285  var_offer_chain_id   NUMBER;
15:47:52 2286  var_offer_chain_s_id NUMBER;
15:47:52 2287  -- EXCEPTIONS
15:47:52 2288  BAD_CHARGE_ID		 EXCEPTION;
15:47:52 2289  BAD_GIFT_CERTIFICATE_ID	 EXCEPTION;
15:47:52 2290  CAN_NOT_FIND_SUBSCRIPTION EXCEPTION;
15:47:52 2291  BEGIN
15:47:52 2292  
15:47:52 2293  	 BEGIN
15:47:52 2294  	   SELECT
15:47:52 2295  	     CHARGE.INVOICE_ID into var_invoice_id
15:47:52 2296  	   FROM
15:47:52 2297  	     CHARGE
15:47:52 2298  	   WHERE
15:47:52 2299  	     CHARGE.ID = in_charge_id;
15:47:52 2300  	   EXCEPTION
15:47:52 2301  	     WHEN NO_DATA_FOUND THEN
15:47:52 2302  	       RAISE BAD_CHARGE_ID;
15:47:52 2303  	 END;
15:47:52 2304  
15:47:52 2305  	 BEGIN
15:47:52 2306  	   SELECT
15:47:52 2307  	     GIFT_CERTIFICATE.OFFER_CHAIN_ID into var_offer_chain_id
15:47:52 2308  	   FROM
15:47:52 2309  	     GIFT_CERTIFICATE
15:47:52 2310  	   WHERE
15:47:52 2311  	     GIFT_CERTIFICATE.ID = in_gift_certificate_id;
15:47:52 2312  	   EXCEPTION
15:47:52 2313  	     WHEN NO_DATA_FOUND THEN
15:47:52 2314  	       RAISE BAD_GIFT_CERTIFICATE_ID;
15:47:52 2315  	 END;
15:47:52 2316  
15:47:52 2317  	 BEGIN
15:47:52 2318  	   SELECT
15:47:52 2319  	     SUBSCRIPTION.OFFER_CHAIN_ID into var_offer_chain_s_id
15:47:52 2320  	   FROM
15:47:52 2321  	     SUBSCRIPTION
15:47:52 2322  	   WHERE
15:47:52 2323  	     SUBSCRIPTION.ID IN (
15:47:52 2324  	       SELECT DISTINCT
15:47:52 2325  		 LICENSE.SUBSCRIPTION_ID
15:47:52 2326  	       FROM
15:47:52 2327  		 LICENSE
15:47:52 2328  	       WHERE
15:47:52 2329  		 LICENSE.INVOICE_ID = var_invoice_id
15:47:52 2330  	     );
15:47:52 2331  	   EXCEPTION
15:47:52 2332  	     WHEN NO_DATA_FOUND THEN
15:47:52 2333  	       RAISE CAN_NOT_FIND_SUBSCRIPTION;
15:47:52 2334  	 END;
15:47:52 2335  
15:47:52 2336  	 IF var_offer_chain_s_id = var_offer_chain_id THEN
15:47:52 2337  	   out_result := GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 2338  	 ELSE
15:47:52 2339  	   out_result := GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 2340  	 END IF;
15:47:52 2341  
15:47:52 2342  EXCEPTION
15:47:52 2343  WHEN BAD_CHARGE_ID THEN
15:47:52 2344  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2345  	   SPROC_NAME, 'No such charge');
15:47:52 2346  WHEN BAD_GIFT_CERTIFICATE_ID THEN
15:47:52 2347  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2348  	   SPROC_NAME, 'No such gift certificate');
15:47:52 2349  WHEN CAN_NOT_FIND_SUBSCRIPTION THEN
15:47:52 2350  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2351  	   SPROC_NAME, 'Could not find subscription for given charge');
15:47:52 2352  WHEN OTHERS THEN
15:47:52 2353  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2354  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2355  END IS_GCERT_FOR_PROPER_OFFER;
15:47:52 2356  
15:47:52 2357  /******************************************************************************/
15:47:52 2358  
15:47:52 2359  FUNCTION IS_CREDIT_CARD_EXISTS (
15:47:52 2360  /*
15:47:52 2361  GLOBAL_CONSTANTS_V22.TRUE - if instrument exists
15:47:52 2362  GLOBAL_CONSTANTS_V22.FALSE - else
15:47:52 2363  */
15:47:52 2364  	 in_credit_card_id IN NUMBER
15:47:52 2365  ) RETURN NUMBER AS
15:47:52 2366  -- VARIABLES
15:47:52 2367  var_cc_count NUMBER;
15:47:52 2368  BEGIN
15:47:52 2369  	 SELECT
15:47:52 2370  	   COUNT(*) into var_cc_count
15:47:52 2371  	 FROM
15:47:52 2372  	   CREDIT_CARD
15:47:52 2373  	 WHERE
15:47:52 2374  	   CREDIT_CARD.ID = in_credit_card_id;
15:47:52 2375  
15:47:52 2376  	 IF var_cc_count = 0 THEN
15:47:52 2377  	   RETURN GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 2378  	 ELSE
15:47:52 2379  	   RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 2380  	 END IF;
15:47:52 2381  
15:47:52 2382  END IS_CREDIT_CARD_EXISTS;
15:47:52 2383  
15:47:52 2384  /******************************************************************************/
15:47:52 2385  
15:47:52 2386  FUNCTION IS_PAYPAL_EXISTS (
15:47:52 2387  /*
15:47:52 2388  GLOBAL_CONSTANTS_V22.TRUE - if instrument exists
15:47:52 2389  GLOBAL_CONSTANTS_V22.FALSE - else
15:47:52 2390  */
15:47:52 2391  	 in_paypal_id IN NUMBER
15:47:52 2392  ) RETURN NUMBER AS
15:47:52 2393  -- VARIABLES
15:47:52 2394  var_pp_count NUMBER;
15:47:52 2395  BEGIN
15:47:52 2396  	 SELECT
15:47:52 2397  	   COUNT(*) into var_pp_count
15:47:52 2398  	 FROM
15:47:52 2399  	   PAYPAL
15:47:52 2400  	 WHERE
15:47:52 2401  	   PAYPAL.ID = in_paypal_id;
15:47:52 2402  
15:47:52 2403  	 IF var_pp_count = 0 THEN
15:47:52 2404  	   RETURN GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 2405  	 ELSE
15:47:52 2406  	   RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 2407  	 END IF;
15:47:52 2408  
15:47:52 2409  END IS_PAYPAL_EXISTS;
15:47:52 2410  
15:47:52 2411  /******************************************************************************/
15:47:52 2412  
15:47:52 2413  FUNCTION IS_GIFT_CERTIFICATE_EXISTS (
15:47:52 2414  /*
15:47:52 2415  GLOBAL_CONSTANTS_V22.TRUE - if instrument exists
15:47:52 2416  GLOBAL_CONSTANTS_V22.FALSE - else
15:47:52 2417  */
15:47:52 2418  	 in_gift_certificate_id IN NUMBER
15:47:52 2419  ) RETURN NUMBER AS
15:47:52 2420  -- VARIABLES
15:47:52 2421  var_gc_count NUMBER;
15:47:52 2422  BEGIN
15:47:52 2423  	 SELECT
15:47:52 2424  	   COUNT(*) into var_gc_count
15:47:52 2425  	 FROM
15:47:52 2426  	   GIFT_CERTIFICATE
15:47:52 2427  	 WHERE
15:47:52 2428  	   GIFT_CERTIFICATE.ID = in_gift_certificate_id;
15:47:52 2429  
15:47:52 2430  	 IF var_gc_count = 0 THEN
15:47:52 2431  	   RETURN GLOBAL_CONSTANTS_V22.FALSE;
15:47:52 2432  	 ELSE
15:47:52 2433  	   RETURN GLOBAL_CONSTANTS_V22.TRUE;
15:47:52 2434  	 END IF;
15:47:52 2435  
15:47:52 2436  END IS_GIFT_CERTIFICATE_EXISTS;
15:47:52 2437  
15:47:52 2438  /******************************************************************************/
15:47:52 2439  
15:47:52 2440  PROCEDURE GET_GROUP_ID_BY_CREDIT_CARD_ID (
15:47:52 2441  	 in_credit_card_id IN NUMBER,
15:47:52 2442  	 out_group_id	   OUT NUMBER
15:47:52 2443  ) AS
15:47:52 2444  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_GROUP_ID_BY_CREDIT_CARD_ID';
15:47:52 2445  BEGIN
15:47:52 2446  	 SELECT
15:47:52 2447  	   ACCOUNT.GROUP_ID into out_group_id
15:47:52 2448  	 FROM
15:47:52 2449  	   CREDIT_CARD
15:47:52 2450  	   INNER JOIN ACCOUNT ON CREDIT_CARD.ACCOUNT_ID = ACCOUNT.ID
15:47:52 2451  	 WHERE
15:47:52 2452  	   CREDIT_CARD.ID = in_credit_card_id;
15:47:52 2453  EXCEPTION
15:47:52 2454  WHEN NO_DATA_FOUND THEN
15:47:52 2455  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2456  	   SPROC_NAME, 'No such credit card');
15:47:52 2457  WHEN OTHERS THEN
15:47:52 2458  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2459  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2460  END GET_GROUP_ID_BY_CREDIT_CARD_ID;
15:47:52 2461  
15:47:52 2462  /******************************************************************************/
15:47:52 2463  
15:47:52 2464  PROCEDURE GET_GROUP_ID_BY_PAYPAL_ID (
15:47:52 2465  	 in_paypal_id IN NUMBER,
15:47:52 2466  	 out_group_id OUT NUMBER
15:47:52 2467  ) AS
15:47:52 2468  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_ID_BY_PAYPAL_ID';
15:47:52 2469  BEGIN
15:47:52 2470  	 SELECT
15:47:52 2471  	   ACCOUNT.GROUP_ID into out_group_id
15:47:52 2472  	 FROM
15:47:52 2473  	   PAYPAL
15:47:52 2474  	   INNER JOIN ACCOUNT ON PAYPAL.ACCOUNT_ID = ACCOUNT.ID
15:47:52 2475  	 WHERE
15:47:52 2476  	   PAYPAL.ID = in_paypal_id;
15:47:52 2477  EXCEPTION
15:47:52 2478  WHEN NO_DATA_FOUND THEN
15:47:52 2479  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2480  	   SPROC_NAME, 'No such paypal');
15:47:52 2481  WHEN OTHERS THEN
15:47:52 2482  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2483  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2484  END GET_GROUP_ID_BY_PAYPAL_ID;
15:47:52 2485  
15:47:52 2486  /******************************************************************************/
15:47:52 2487  
15:47:52 2488  PROCEDURE UPDATE_CREDIT_CARD_STATUS (
15:47:52 2489  	 in_credit_card_id	  IN CREDIT_CARD.ID%TYPE,
15:47:52 2490  	 in_credit_card_status_id IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE,
15:47:52 2491  	 in_updated_by		  IN CREDIT_CARD.UPDATED_BY%TYPE
15:47:52 2492  ) AS
15:47:52 2493  SPROC_NAME CONSTANT VARCHAR2(25) := 'UPDATE_CREDIT_CARD_STATUS';
15:47:52 2494  -- EXCEPTIONS
15:47:52 2495  BAD_CREDIT_CARD_ID     EXCEPTION;
15:47:52 2496  BAD_STATUS_ID	      EXCEPTION;
15:47:52 2497  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:52 2498  BEGIN
15:47:52 2499  
15:47:52 2500  	 IF in_credit_card_status_id != GLOBAL_STATUSES_V22.CREDIT_CARD_ACTIVE
15:47:52 2501  	   AND in_credit_card_status_id != GLOBAL_STATUSES_V22.CREDIT_CARD_INVALID
15:47:52 2502  	   AND in_credit_card_status_id != GLOBAL_STATUSES_V22.CREDIT_CARD_DISABLED
15:47:52 2503  	   AND in_credit_card_status_id != GLOBAL_STATUSES_V22.CREDIT_CARD_EXPIRED THEN
15:47:52 2504  	   RAISE BAD_STATUS_ID;
15:47:52 2505  	 END IF;
15:47:52 2506  
15:47:52 2507  	 PROCS_FIN_INSTRUMENTS_CRU_V22.UPDATE_CREDIT_CARD(
15:47:52 2508  	   in_credit_card_id	    => in_credit_card_id,
15:47:52 2509  	   in_updated_by	    => in_updated_by,
15:47:52 2510  	   in_credit_card_status_id => in_credit_card_status_id
15:47:52 2511  	 );
15:47:52 2512  
15:47:52 2513  	 IF SQL%ROWCOUNT = 0 THEN
15:47:52 2514  	   RAISE BAD_CREDIT_CARD_ID;
15:47:52 2515  	 END IF;
15:47:52 2516  
15:47:52 2517  EXCEPTION
15:47:52 2518  WHEN BAD_CREDIT_CARD_ID THEN
15:47:52 2519  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2520  	   SPROC_NAME, 'No such credit card');
15:47:52 2521  WHEN BAD_STATUS_ID THEN
15:47:52 2522  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 2523  	   SPROC_NAME, 'Bad credit card status id');
15:47:52 2524  WHEN OTHERS THEN
15:47:52 2525  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2526  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2527  END UPDATE_CREDIT_CARD_STATUS;
15:47:52 2528  
15:47:52 2529  /******************************************************************************/
15:47:52 2530  
15:47:52 2531  PROCEDURE UPDATE_PAYPAL_STATUS (
15:47:52 2532  	 in_paypal_id	     IN PAYPAL.ID%TYPE,
15:47:52 2533  	 in_paypal_status_id IN PAYPAL.PAYPAL_STATUS_ID%TYPE,
15:47:52 2534  	 in_updated_by	     IN PAYPAL.UPDATED_BY%TYPE
15:47:52 2535  ) AS
15:47:52 2536  SPROC_NAME CONSTANT VARCHAR2(20) := 'UPDATE_PAYPAL_STATUS';
15:47:52 2537  -- EXCEPTIONS
15:47:52 2538  BAD_PAYPAL_ID	      EXCEPTION;
15:47:52 2539  BAD_STATUS_ID	      EXCEPTION;
15:47:52 2540  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:52 2541  BEGIN
15:47:52 2542  
15:47:52 2543  	 IF in_paypal_status_id != GLOBAL_STATUSES_V22.PAYPAL_ACTIVE
15:47:52 2544  	   AND in_paypal_status_id != GLOBAL_STATUSES_V22.PAYPAL_INACTIVE
15:47:52 2545  	   AND in_paypal_status_id != GLOBAL_STATUSES_V22.PAYPAL_FROZEN THEN
15:47:52 2546  	   RAISE BAD_STATUS_ID;
15:47:52 2547  	 END IF;
15:47:52 2548  
15:47:52 2549  	 PROCS_FIN_INSTRUMENTS_CRU_V22.UPDATE_PAYPAL(
15:47:52 2550  	   in_paypal_id        => in_paypal_id,
15:47:52 2551  	   in_paypal_status_id => in_paypal_status_id,
15:47:52 2552  	   in_updated_by       => in_updated_by
15:47:52 2553  	 );
15:47:52 2554  
15:47:52 2555  	 IF SQL%ROWCOUNT = 0 THEN
15:47:52 2556  	   RAISE BAD_PAYPAL_ID;
15:47:52 2557  	 END IF;
15:47:52 2558  
15:47:52 2559  EXCEPTION
15:47:52 2560  WHEN BAD_PAYPAL_ID THEN
15:47:52 2561  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2562  	   SPROC_NAME, 'No such paypal');
15:47:52 2563  WHEN BAD_STATUS_ID THEN
15:47:52 2564  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 2565  	   SPROC_NAME, 'Bad paypal status id');
15:47:52 2566  WHEN OTHERS THEN
15:47:52 2567  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2568  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2569  END UPDATE_PAYPAL_STATUS;
15:47:52 2570  
15:47:52 2571  /******************************************************************************/
15:47:52 2572  
15:47:52 2573  PROCEDURE UPDATE_GIFT_CERTIFICATE_STATUS (
15:47:52 2574  	 in_gift_certificate_id        IN GIFT_CERTIFICATE.ID%TYPE,
15:47:52 2575  	 in_gift_certificate_status_id IN GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID%TYPE,
15:47:52 2576  	 in_updated_by		       IN GIFT_CERTIFICATE.UPDATED_BY%TYPE
15:47:52 2577  ) AS
15:47:52 2578  SPROC_NAME CONSTANT VARCHAR2(30) := 'UPDATE_GIFT_CERTIFICATE_STATUS';
15:47:52 2579  -- EXCEPTIONS
15:47:52 2580  BAD_GIFT_CERTIFICATE_ID EXCEPTION;
15:47:52 2581  BAD_STATUS_ID	       EXCEPTION;
15:47:52 2582  EXCEPTION_MESSAGE       VARCHAR2(1024);
15:47:52 2583  BEGIN
15:47:52 2584  
15:47:52 2585  	 IF in_gift_certificate_status_id != GLOBAL_STATUSES_V22.GIFT_CERTIFICATE_ACTIVE
15:47:52 2586  	   AND in_gift_certificate_status_id != GLOBAL_STATUSES_V22.GIFT_CERTIFICATE_FINALIZED THEN
15:47:52 2587  	   RAISE BAD_STATUS_ID;
15:47:52 2588  	 END IF;
15:47:52 2589  
15:47:52 2590  	 PROCS_FIN_INSTRUMENTS_CRU_V22.UPDATE_GIFT_CERTIFICATE(
15:47:52 2591  	   in_gift_certificate_id	 => in_gift_certificate_id,
15:47:52 2592  	   in_gift_certificate_status_id => in_gift_certificate_status_id,
15:47:52 2593  	   in_updated_by		 => in_updated_by
15:47:52 2594  	 );
15:47:52 2595  
15:47:52 2596  	 IF SQL%ROWCOUNT = 0 THEN
15:47:52 2597  	   RAISE BAD_GIFT_CERTIFICATE_ID;
15:47:52 2598  	 END IF;
15:47:52 2599  
15:47:52 2600  EXCEPTION
15:47:52 2601  WHEN BAD_GIFT_CERTIFICATE_ID THEN
15:47:52 2602  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2603  	   SPROC_NAME, 'No such gift certificate');
15:47:52 2604  WHEN BAD_STATUS_ID THEN
15:47:52 2605  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 2606  	   SPROC_NAME, 'Bad paypal status id');
15:47:52 2607  WHEN OTHERS THEN
15:47:52 2608  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2609  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2610  END UPDATE_GIFT_CERTIFICATE_STATUS;
15:47:52 2611  
15:47:52 2612  /******************************************************************************/
15:47:52 2613  
15:47:52 2614  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
15:47:52 2615  	 in_invoice_id		 IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:52 2616  	 out_result_set OUT SYS_REFCURSOR
15:47:52 2617  ) AS
15:47:52 2618  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GC_BY_PURCHASE_INVOICE_ID';
15:47:52 2619  -- VARIABLES
15:47:52 2620  temp_invoice_id NUMBER;
15:47:52 2621  -- EXCEPTIONS
15:47:52 2622  BAD_INVOICE_ID EXCEPTION;
15:47:52 2623  BEGIN
15:47:52 2624  
15:47:52 2625  	 BEGIN
15:47:52 2626  	   SELECT
15:47:52 2627  	     I.ID into temp_invoice_id
15:47:52 2628  	   FROM
15:47:52 2629  	     INVOICE I
15:47:52 2630  	   WHERE
15:47:52 2631  	     I.ID = in_invoice_id;
15:47:52 2632  	   EXCEPTION
15:47:52 2633  	     WHEN NO_DATA_FOUND THEN
15:47:52 2634  	       RAISE BAD_INVOICE_ID;
15:47:52 2635  	 END;
15:47:52 2636  
15:47:52 2637  	 OPEN out_result_set FOR
15:47:52 2638  	   SELECT
15:47:52 2639  	     gc.EXPIRATION_DATE,
15:47:52 2640  	     ch.name,
15:47:52 2641  	     ch.id offer_chain_id,
15:47:52 2642  	     gc.sender_email,
15:47:52 2643  	     gc.sender_name,
15:47:52 2644  	     gc.recipient_email,
15:47:52 2645  	     gc.recipient_name,
15:47:52 2646  	     gc.purchase_date,
15:47:52 2647  	     gc.redemption_date,
15:47:52 2648  	     gc.purchaser_group_id,
15:47:52 2649  	     gc.redeemer_group_id,
15:47:52 2650  	     gc.code,
15:47:52 2651  	     gc.gift_message,
15:47:52 2652  	     gc.recipient_notify_date,
15:47:52 2653  	     gc.id
15:47:52 2654  	   FROM
15:47:52 2655  	     GIFT_CERTIFICATE gc
15:47:52 2656  	     INNER JOIN OFFER_CHAIN ch ON ch.id = gc.offer_chain_id
15:47:52 2657  	   WHERE
15:47:52 2658  	     gc.PURCHASE_INVOICE_ID = in_invoice_id;
15:47:52 2659  
15:47:52 2660  EXCEPTION
15:47:52 2661  WHEN BAD_INVOICE_ID THEN
15:47:52 2662  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2663  	   SPROC_NAME, 'No such invoice');
15:47:52 2664  WHEN OTHERS THEN
15:47:52 2665  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2666  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2667  END GET_GC_BY_PURCH_INVOICE_ID;
15:47:52 2668  
15:47:52 2669  
15:47:52 2670  PROCEDURE GET_GC_ID_BY_PURCH_INVOICE_ID (
15:47:52 2671  	 in_invoice_id		 IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:52 2672  	 out_gift_certificate_id OUT GIFT_CERTIFICATE.ID%TYPE
15:47:52 2673  ) AS
15:47:52 2674  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GC_ID_BY_PURCHASE_INVOICE_ID';
15:47:52 2675  -- VARIABLES
15:47:52 2676  temp_invoice_id NUMBER;
15:47:52 2677  -- EXCEPTIONS
15:47:52 2678  BAD_INVOICE_ID EXCEPTION;
15:47:52 2679  BEGIN
15:47:52 2680  
15:47:52 2681  	 BEGIN
15:47:52 2682  	   SELECT
15:47:52 2683  	     I.ID into temp_invoice_id
15:47:52 2684  	   FROM
15:47:52 2685  	     INVOICE I
15:47:52 2686  	   WHERE
15:47:52 2687  	     I.ID = in_invoice_id;
15:47:52 2688  	   EXCEPTION
15:47:52 2689  	     WHEN NO_DATA_FOUND THEN
15:47:52 2690  	       RAISE BAD_INVOICE_ID;
15:47:52 2691  	 END;
15:47:52 2692  
15:47:52 2693  	 BEGIN
15:47:52 2694  	   SELECT
15:47:52 2695  	     GIFT_CERTIFICATE.ID into out_gift_certificate_id
15:47:52 2696  	   FROM
15:47:52 2697  	     GIFT_CERTIFICATE
15:47:52 2698  	   WHERE
15:47:52 2699  	     GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = in_invoice_id;
15:47:52 2700  	   EXCEPTION
15:47:52 2701  	     WHEN NO_DATA_FOUND THEN
15:47:52 2702  	       out_gift_certificate_id := NULL;
15:47:52 2703  	 END;
15:47:52 2704  
15:47:52 2705  EXCEPTION
15:47:52 2706  WHEN BAD_INVOICE_ID THEN
15:47:52 2707  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2708  	   SPROC_NAME, 'No such invoice');
15:47:52 2709  WHEN OTHERS THEN
15:47:52 2710  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2711  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2712  END GET_GC_ID_BY_PURCH_INVOICE_ID;
15:47:52 2713  
15:47:52 2714  /******************************************************************************/
15:47:52 2715  
15:47:52 2716  PROCEDURE SWITCH_FINANCIAL_INSTRUMENT (
15:47:52 2717  	 in_old_fin_instrument_id   IN NUMBER,
15:47:52 2718  	 in_old_fin_instrument_type IN NUMBER,
15:47:52 2719  	 in_new_fin_instrument_id   IN NUMBER,
15:47:52 2720  	 in_new_fin_instrument_type IN NUMBER,
15:47:52 2721  	 in_updated_by		    IN VARCHAR2
15:47:52 2722  ) AS
15:47:52 2723  SPROC_NAME CONSTANT VARCHAR2(27) := 'SWITCH_FINANCIAL_INSTRUMENT';
15:47:52 2724  -- variables
15:47:52 2725  temp_out_transaction_id NUMBER;
15:47:52 2726  temp_out_charge_id      NUMBER;
15:47:52 2727  var_accounts_count      NUMBER;
15:47:52 2728  var_transaction_type_old  "TRANSACTION".TRANSACTION_TYPE_CODE%TYPE;
15:47:52 2729  var_transaction_type	 "TRANSACTION".TRANSACTION_TYPE_CODE%TYPE;
15:47:52 2730  -- EXCEPTIONS
15:47:52 2731  BAD_OLD_CC   EXCEPTION;
15:47:52 2732  BAD_OLD_PP   EXCEPTION;
15:47:52 2733  BAD_OLD_TYPE EXCEPTION;
15:47:52 2734  BAD_NEW_CC   EXCEPTION;
15:47:52 2735  BAD_NEW_PP   EXCEPTION;
15:47:52 2736  BAD_NEW_TYPE EXCEPTION;
15:47:52 2737  DIFFERENT_OWNERS EXCEPTION;
15:47:52 2738  BEGIN
15:47:52 2739  
15:47:52 2740  	 IF in_old_fin_instrument_type = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD THEN
15:47:52 2741  	   IF PROCS_FIN_INSTRUMENTS_V22.IS_CREDIT_CARD_EXISTS(in_old_fin_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 2742  	     -- throw exception: bad old credit card
15:47:52 2743  	     RAISE BAD_OLD_CC;
15:47:52 2744  	   END IF;
15:47:52 2745  	 ELSIF in_old_fin_instrument_type = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL THEN
15:47:52 2746  	   IF PROCS_FIN_INSTRUMENTS_V22.IS_PAYPAL_EXISTS(in_old_fin_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 2747  	     -- throw exception: bad old paypal
15:47:52 2748  	     RAISE BAD_OLD_PP;
15:47:52 2749  	   END IF;
15:47:52 2750  	 ELSE
15:47:52 2751  	   -- throw exception: bad instrument type
15:47:52 2752  	   RAISE BAD_OLD_TYPE;
15:47:52 2753  	 END IF;
15:47:52 2754  
15:47:52 2755  	 IF in_new_fin_instrument_type = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD THEN
15:47:52 2756  	   IF PROCS_FIN_INSTRUMENTS_V22.IS_CREDIT_CARD_EXISTS(in_new_fin_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 2757  	     -- throw exception: bad new credit card
15:47:52 2758  	     RAISE BAD_NEW_CC;
15:47:52 2759  	   END IF;
15:47:52 2760  	 ELSIF in_new_fin_instrument_type = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL THEN
15:47:52 2761  	   IF PROCS_FIN_INSTRUMENTS_V22.IS_PAYPAL_EXISTS(in_new_fin_instrument_id) = GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:52 2762  	     -- throw exception: bad new paypal
15:47:52 2763  	     RAISE BAD_NEW_PP;
15:47:52 2764  	   END IF;
15:47:52 2765  	 ELSE
15:47:52 2766  	   -- throw exception: bad new instrument type
15:47:52 2767  	   RAISE BAD_NEW_TYPE;
15:47:52 2768  	 END IF;
15:47:52 2769  
15:47:52 2770  	 -- Check that owner of both instruments - same man
15:47:52 2771  
15:47:52 2772  	 SELECT count(1) into var_accounts_count FROM (
15:47:52 2773  	   SELECT
15:47:52 2774  	     CC.ACCOUNT_ID
15:47:52 2775  	   FROM
15:47:52 2776  	     CREDIT_CARD CC
15:47:52 2777  	   WHERE
15:47:52 2778  	     (
15:47:52 2779  	       CC.ID = in_old_fin_instrument_id
15:47:52 2780  	       AND in_old_fin_instrument_type = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD
15:47:52 2781  	     )
15:47:52 2782  	     OR
15:47:52 2783  	     (
15:47:52 2784  	       CC.ID = in_new_fin_instrument_id
15:47:52 2785  	       AND in_new_fin_instrument_type = GLOBAL_ENUMS_V22.INSTRUMENT_CREDIT_CARD
15:47:52 2786  	     )
15:47:52 2787  	   UNION
15:47:52 2788  	   SELECT
15:47:52 2789  	     PP.ACCOUNT_ID
15:47:52 2790  	   FROM
15:47:52 2791  	     PAYPAL PP
15:47:52 2792  	   WHERE
15:47:52 2793  	     (
15:47:52 2794  	       PP.ID = in_old_fin_instrument_id
15:47:52 2795  	       AND in_old_fin_instrument_type = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL
15:47:52 2796  	     )
15:47:52 2797  	     OR
15:47:52 2798  	     (
15:47:52 2799  	       PP.ID = in_new_fin_instrument_id
15:47:52 2800  	       AND in_new_fin_instrument_type = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL
15:47:52 2801  	     )
15:47:52 2802  	 )
15:47:52 2803  	 WHERE
15:47:52 2804  	   account_id IS NOT NULL;
15:47:52 2805  
15:47:52 2806  	 IF (var_accounts_count > 1) THEN
15:47:52 2807  	   -- Throw exception: different owners of instruments
15:47:52 2808  	   RAISE DIFFERENT_OWNERS;
15:47:52 2809  	 END IF;
15:47:52 2810  
15:47:52 2811  	 FOR f_sub IN (
15:47:52 2812  	   select
15:47:52 2813  	     s.id
15:47:52 2814  	   FROM
15:47:52 2815  	     subscription s
15:47:52 2816  	   WHERE
15:47:52 2817  	     (
15:47:52 2818  	       s.subscription_status_id = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE OR
15:47:52 2819  	       s.subscription_status_id = GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED OR
15:47:52 2820  	       s.subscription_status_id = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD
15:47:52 2821  	     )
15:47:52 2822  	     AND
15:47:52 2823  	     s.instrument_type_id = in_old_fin_instrument_type AND
15:47:52 2824  	     s.instrument_id = in_old_fin_instrument_id
15:47:52 2825  	 ) LOOP
15:47:52 2826  	   PROCS_SUBSCRIPTION_CRU_V22.UPDATE_SUBSCRIPTION(
15:47:52 2827  	     in_subscription_id => f_sub.id,
15:47:52 2828  	     in_instrument_type_id => in_new_fin_instrument_type,
15:47:52 2829  	     in_instrument_id => in_new_fin_instrument_id,
15:47:52 2830  	     in_updated_by => in_updated_by
15:47:52 2831  	   );
15:47:52 2832  	 END LOOP;
15:47:52 2833  
15:47:52 2834  	 FOR f_open_charge IN (
15:47:52 2835  	   select
15:47:52 2836  	     ch.id,
15:47:52 2837  	     ch.invoice_id,
15:47:52 2838  	     ch.transaction_id,
15:47:52 2839  	     ch.charge_amount
15:47:52 2840  	   FROM
15:47:52 2841  	     charge ch
15:47:52 2842  	   WHERE
15:47:52 2843  	     ch.instrument_type_id = in_old_fin_instrument_type
15:47:52 2844  	     AND ch.instrument_id = in_old_fin_instrument_id
15:47:52 2845  	     AND ch.charge_status_id = GLOBAL_STATUSES_V22.CHARGE_OPENED
15:47:52 2846  	 ) LOOP
15:47:52 2847  
15:47:52 2848  	   FOR f_pending_transaction IN (
15:47:52 2849  	     select
15:47:52 2850  	       id, transaction_amount, order_id, is_refund
15:47:52 2851  	     from
15:47:52 2852  	       transaction
15:47:52 2853  	     where
15:47:52 2854  	       id = f_open_charge.transaction_id
15:47:52 2855  	       and transaction_status_id = GLOBAL_STATUSES_V22.TRANSACTION_PENDING
15:47:52 2856  	   ) LOOP
15:47:52 2857  
15:47:52 2858  	     SELECT
15:47:52 2859  	       DECODE(TRANSACTION_TYPE_CODE, 'RECURRING_BILLING', 'RECURRING_BILLING_USER_UPDATE',
15:47:52 2860  					     'GRACE_PERIOD_FINAL', 'GRACE_PERIOD_USER_UPDATE',
15:47:52 2861  					     TRANSACTION_TYPE_CODE)
15:47:52 2862  	     INTO var_transaction_type
15:47:52 2863  	     FROM
15:47:52 2864  	       Transaction
15:47:52 2865  	     WHERE
15:47:52 2866  	       id = f_pending_transaction.id
15:47:52 2867  	       AND ROWNUM <= 1;
15:47:52 2868  
15:47:52 2869  	     PROCS_TRANSACTION_V22.CREATE_TRANSACTION (
15:47:52 2870  	       in_transaction_id => NULL,
15:47:52 2871  	       in_status_id  => GLOBAL_STATUSES_V22.TRANSACTION_PENDING,
15:47:52 2872  	       in_amount     => f_pending_transaction.transaction_amount,
15:47:52 2873  	       in_created_by => in_updated_by,
15:47:52 2874  	       in_order_id   => null,
15:47:52 2875  	       in_is_refund  => f_pending_transaction.is_refund,
15:47:52 2876  	       in_transaction_type_code => var_transaction_type,
15:47:52 2877  	       out_transaction_id => temp_out_transaction_id
15:47:52 2878  	     );
15:47:52 2879  
15:47:52 2880  	     PROCS_TRANSACTION_V22.UPDATE_TRANSACTION_STATUS(
15:47:52 2881  	       in_transaction_id => f_pending_transaction.id,
15:47:52 2882  	       in_updated_by	 => in_updated_by,
15:47:52 2883  	       in_transaction_status_id  => GLOBAL_STATUSES_V22.TRANSACTION_CLOSED
15:47:52 2884  	     );
15:47:52 2885  
15:47:52 2886  	     -- Create new charge
15:47:52 2887  	     PROCS_CHARGE_V22.CREATE_CHARGE (
15:47:52 2888  	       in_invoice_id	     => f_open_charge.invoice_id,
15:47:52 2889  	       in_transaction_id     => temp_out_transaction_id,
15:47:52 2890  	       in_instrument_type_id => in_new_fin_instrument_type,
15:47:52 2891  	       in_instrument_id      => in_new_fin_instrument_id,
15:47:52 2892  	       in_charge_amount      => f_open_charge.charge_amount,
15:47:52 2893  	       in_created_by	     => in_updated_by,
15:47:52 2894  	       in_charge_status_id   => GLOBAL_STATUSES_V22.CHARGE_OPENED,
15:47:52 2895  	       out_charge_id	     => temp_out_charge_id
15:47:52 2896  	     );
15:47:52 2897  	     -- Cancel old charge
15:47:52 2898  	     PROCS_CHARGE_V22.UPDATE_CHARGE_STATUS(
15:47:52 2899  	       in_charge_id	   => f_open_charge.id,
15:47:52 2900  	       in_updated_by	   => in_updated_by,
15:47:52 2901  	       in_charge_status_id => GLOBAL_STATUSES_V22.CHARGE_CANCELED
15:47:52 2902  	     );
15:47:52 2903  
15:47:52 2904  	     PROCS_ADJUSTMENTS_V22.UPDATE_INVOICE_ADJUSTMENT(
15:47:52 2905  	       IN_INVOICE_ID => f_open_charge.invoice_id,
15:47:52 2906  	       IN_ORIGINAL_CHARGE_ID => f_open_charge.id,
15:47:52 2907  	       IN_CHARGE_ID => temp_out_charge_id,
15:47:52 2908  	       IN_UPDATED_BY => in_updated_by
15:47:52 2909  	     );
15:47:52 2910  
15:47:52 2911  	   END LOOP;
15:47:52 2912  	 END LOOP;
15:47:52 2913  
15:47:52 2914  EXCEPTION
15:47:52 2915  WHEN BAD_OLD_CC THEN
15:47:52 2916  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2917  	   SPROC_NAME, 'Trying to switch from non existing credit card');
15:47:52 2918  WHEN BAD_OLD_PP THEN
15:47:52 2919  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2920  	   SPROC_NAME, 'Trying to switch from non existing paypal');
15:47:52 2921  WHEN BAD_OLD_TYPE THEN
15:47:52 2922  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2923  	   SPROC_NAME, 'Trying to switch from unknown/unsupported financial instrument');
15:47:52 2924  WHEN BAD_NEW_CC THEN
15:47:52 2925  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2926  	   SPROC_NAME, 'Trying to switch to non existing credit card');
15:47:52 2927  WHEN BAD_NEW_PP THEN
15:47:52 2928  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2929  	   SPROC_NAME, 'Trying to switch to non existing paypal');
15:47:52 2930  WHEN BAD_NEW_TYPE THEN
15:47:52 2931  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:52 2932  	   SPROC_NAME, 'Trying to switch to unknown/unsupported financial instrument');
15:47:52 2933  WHEN DIFFERENT_OWNERS THEN
15:47:52 2934  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:52 2935  	   SPROC_NAME, 'Could not switch instrument, because owners are different');
15:47:52 2936  WHEN OTHERS THEN
15:47:52 2937  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:52 2938  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:52 2939  END SWITCH_FINANCIAL_INSTRUMENT;
15:47:52 2940  
15:47:52 2941  /******************************************************************************/
15:47:52 2942  
15:47:52 2943  /*
15:47:52 2944  	   Note, this returns paypal records which are in the given window of time
15:47:52 2945  	   based on their creation date, not their expiration date, because we've seen
15:47:52 2946  	   suspicious values in the data for expiration dates. The java layer should
15:47:52 2947  	   inspect the expiration dates and decide whether or not to act on the data.
15:47:52 2948  */
15:47:52 2949  
15:47:52 2950  PROCEDURE GET_EXPIRING_PAYPAL (
15:47:52 2951  	 in_expire_window_days	 IN NUMBER,
15:47:52 2952  	 in_creation_limit_days  IN NUMBER,
15:47:52 2953  	 in_retry_throttle_name  IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE,
15:47:52 2954  	 out_result_set 	 OUT SYS_REFCURSOR
15:47:52 2955  ) AS
15:47:52 2956  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_EXPIRING_PAYPAL';
15:47:52 2957  var_rows_to_return CONSTANT NUMBER := 1000;
15:47:52 2958  BEGIN
15:47:52 2959  	 OPEN out_result_set FOR
15:47:52 2960  	 SELECT * FROM (
15:47:52 2961  	       SELECT
15:47:52 2962  	       ac.group_id	   AS group_id,
15:47:52 2963  	       pp.id		   AS paypal_id,
15:47:52 2964  	       sb.id		   AS subscription_id,
15:47:52 2965  	       pp.create_date	   AS paypal_creation_date,
15:47:52 2966  	       pp.expiration_date  AS paypal_expiration_date,
15:47:52 2967  	       lc.end_date	   AS license_end_date
15:47:52 2968  	   FROM license lc
15:47:52 2969  	   INNER JOIN subscription sb
15:47:52 2970  	   ON lc.subscription_id = sb.id
15:47:52 2971  	   INNER JOIN paypal pp
15:47:52 2972  	   ON pp.account_id = sb.account_id
15:47:52 2973  	   INNER JOIN account ac
15:47:52 2974  	   ON pp.account_id = ac.id
15:47:52 2975  	   WHERE SYSDATE <= lc.end_date
15:47:52 2976  	     AND SYSDATE + in_expire_window_days > lc.end_date
15:47:52 2977  	     AND pp.paypal_status_id = GLOBAL_STATUSES_V22.PAYPAL_ACTIVE
15:47:52 2978  	     AND lc.license_status_id IN (GLOBAL_STATUSES_V22.LICENSE_ACTIVE,
15:47:52 2979  					  GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD)
15:47:52 2980  	     AND pp.id = sb.instrument_id
15:47:52 2981  	     AND sb.instrument_type_id = GLOBAL_ENUMS_V22.INSTRUMENT_PAYPAL
15:47:52 2982  	     AND sb.subscription_status_id IN (GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE,
15:47:52 2983  					       GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD)
15:47:52 2984  	     AND pp.create_date + in_creation_limit_days <= lc.end_date
15:47:52 2985  	     AND NOT EXISTS(
15:47:52 2986  	       SELECT NULL
15:47:52 2987  	       FROM process_retry_throttle rt
15:47:52 2988  	       WHERE rt.process_name = in_retry_throttle_name
15:47:52 2989  		 AND rt.generic_id = pp.id
15:47:52 2990  	     )
15:47:52 2991  	     AND ROWNUM <= 10 * var_rows_to_return
15:47:52 2992  	   ORDER BY dbms_random.value
15:47:52 2993  	 )
15:47:52 2994  	 WHERE ROWNUM <= var_rows_to_return;
15:47:52 2995  END GET_EXPIRING_PAYPAL;
15:47:52 2996  
15:47:52 2997  /******************************************************************************/
15:47:52 2998  
15:47:52 2999  END PROCS_FIN_INSTRUMENTS_V22;
15:47:52 3000  .
15:47:52 SQL> /

Package body created.

Elapsed: 00:00:00.91
15:47:53 SQL> 
15:47:53 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_GROUP_ACCOUNT_V22" AS
15:47:53   2  
15:47:53   3  PROCEDURE UPDATE_SS_NEED_ENTITLEMENTS (
15:47:53   4  	in_sub_share_id      IN SUBSCRIPTION_SHARE.ID%TYPE,
15:47:53   5  	in_need_entitlements IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE,
15:47:53   6  	in_updater	     IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
15:47:53   7  ) AS
15:47:53   8  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_SS_NEED_ENTITLEMENTS';
15:47:53   9  BEGIN
15:47:53  10  	CORE_OWNER.PROCS_GROUP_ACCOUNT_CRU_V22.UPDATE_SUBSCRIPTION_SHARE (
15:47:53  11  	  in_id 		=> in_sub_share_id,
15:47:53  12  	  in_needs_entitlements => in_need_entitlements,
15:47:53  13  	  in_updated_by 	=> in_updater
15:47:53  14  	);
15:47:53  15  END UPDATE_SS_NEED_ENTITLEMENTS;
15:47:53  16  
15:47:53  17  PROCEDURE SUB_EXPIRES_NEED_ENTITLEMENTS (
15:47:53  18  	out_result_set OUT SYS_REFCURSOR
15:47:53  19  ) AS
15:47:53  20  SPROC_NAME CONSTANT VARCHAR2(32) := 'SUB_EXPIRES_NEED_ENTITLEMENTS';
15:47:53  21  BEGIN
15:47:53  22  	OPEN out_result_set FOR
15:47:53  23  	SELECT * FROM (
15:47:53  24  	  SELECT DISTINCT
15:47:53  25  	    ga.Subscription_Id,
15:47:53  26  	    A.Group_Id Borrower_Group_Id,
15:47:53  27  	    L.Offer_Id,
15:47:53  28  	    ss.id Subscription_Share_id
15:47:53  29  	  FROM
15:47:53  30  	    Subscription_Share Ss,
15:47:53  31  	    Group_Account Ga,
15:47:53  32  	    Account A,
15:47:53  33  	    License l
15:47:53  34  	  WHERE
15:47:53  35  	    Ss.Group_Account_Id        = ga.id
15:47:53  36  	    AND Ss.Needs_Entitlements  = GLOBAL_CONSTANTS_V22.TRUE
15:47:53  37  	    AND Ss.Borrower_Account_Id = A.Id
15:47:53  38  	    AND L.Subscription_Id      = Ga.Subscription_Id
15:47:53  39  	    AND ROWNUM <= 5000
15:47:53  40  	  ORDER BY dbms_random.value
15:47:53  41  ) WHERE
15:47:53  42  	ROWNUM <= 1000;
15:47:53  43  END SUB_EXPIRES_NEED_ENTITLEMENTS;
15:47:53  44  
15:47:53  45  PROCEDURE EXPIRE_SUB_SHARE(
15:47:53  46  	in_sub_share_id IN SUBSCRIPTION_SHARE.ID%TYPE,
15:47:53  47  	in_updater	IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
15:47:53  48  ) AS
15:47:53  49  SPROC_NAME CONSTANT VARCHAR2(32) := 'EXPIRE_SUB_SHARE';
15:47:53  50  BEGIN
15:47:53  51  	CORE_OWNER.PROCS_GROUP_ACCOUNT_CRU_V22.UPDATE_SUBSCRIPTION_SHARE (
15:47:53  52  	  in_id 	=> in_sub_share_id,
15:47:53  53  	  in_end_date	=> SYSDATE,
15:47:53  54  	  in_updated_by => in_updater,
15:47:53  55  	  in_needs_entitlements => 1
15:47:53  56  	);
15:47:53  57  END EXPIRE_SUB_SHARE;
15:47:53  58  
15:47:53  59  PROCEDURE EXPIRE_ALL_SHARES (
15:47:53  60  	in_group_account_id IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE,
15:47:53  61  	in_updated_by	    IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
15:47:53  62  ) AS
15:47:53  63  SPROC_NAME CONSTANT VARCHAR2(28) := 'EXPIRE_ALL_SHARES';
15:47:53  64  BEGIN
15:47:53  65  	UPDATE SUBSCRIPTION_SHARE SET
15:47:53  66  	  END_DATE = SYSDATE,
15:47:53  67  	  UPDATED_BY = in_updated_by,
15:47:53  68  	  UPDATE_DATE = SYSDATE
15:47:53  69  	WHERE
15:47:53  70  	  GROUP_ACCOUNT_ID = in_group_account_id
15:47:53  71  	AND
15:47:53  72  	  SYSDATE < END_DATE;
15:47:53  73  EXCEPTION
15:47:53  74  	WHEN OTHERS THEN
15:47:53  75  	  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53  76  	      SPROC_NAME, 'Unknown error while expiring subscription shares', SQLERRM);
15:47:53  77  END EXPIRE_ALL_SHARES;
15:47:53  78  
15:47:53  79  PROCEDURE SUB_SHARE_BY_GROUP_ID (
15:47:53  80  	in_group_id	 IN  ACCOUNT.GROUP_ID%TYPE,
15:47:53  81  	in_start	 IN  NUMBER,
15:47:53  82  	in_end		 IN  NUMBER,
15:47:53  83  	in_expired	 IN  NUMBER,
15:47:53  84  	out_result_set	 OUT SYS_REFCURSOR,
15:47:53  85  	out_shares_count OUT NUMBER
15:47:53  86  ) AS
15:47:53  87  SPROC_NAME CONSTANT VARCHAR2(32) := 'SUB_SHARE_BY_GROUP_ID';
15:47:53  88  range_diff NUMBER := 0;
15:47:53  89  upper_bond_diff NUMBER := 0;
15:47:53  90  l_start NUMBER := 0;
15:47:53  91  l_end   NUMBER := 0;
15:47:53  92  BEGIN
15:47:53  93  	--Normalize the end points [START]
15:47:53  94  	IF (in_start IS NULL OR in_start < 0) Then
15:47:53  95  	  l_start := 0;
15:47:53  96  	ELSE
15:47:53  97  	  l_start := in_start;
15:47:53  98  	END IF;
15:47:53  99  
15:47:53 100  	IF (in_end IS NULL) Then
15:47:53 101  	  l_end := 11;
15:47:53 102  	ELSE
15:47:53 103  	  l_end := in_end;
15:47:53 104  	END IF;
15:47:53 105  
15:47:53 106  	l_start := l_start + 1;
15:47:53 107  	l_end	:= l_end   + 1;
15:47:53 108  
15:47:53 109  	range_diff := l_end - l_start;
15:47:53 110  	upper_bond_diff :=  range_diff - GLOBAL_CONSTANTS_V22.MAX_RETURN_COUNT;
15:47:53 111  
15:47:53 112  	IF (upper_bond_diff > 0) Then
15:47:53 113  	  l_end := l_end - upper_bond_diff;
15:47:53 114  	END IF;
15:47:53 115  	--Normalize the end points [END]
15:47:53 116  
15:47:53 117  	BEGIN
15:47:53 118  	  SELECT
15:47:53 119  	    COUNT(1) INTO out_shares_count
15:47:53 120  	  FROM
15:47:53 121  	    GROUP_ACCOUNT ga,
15:47:53 122  	    SUBSCRIPTION_SHARE ss,
15:47:53 123  	    ACCOUNT a
15:47:53 124  	  WHERE
15:47:53 125  	    a.GROUP_ID		= in_group_id AND
15:47:53 126  	    a.Id		= ss.borrower_account_id And
15:47:53 127  	    ss.GROUP_ACCOUNT_ID = ga.ID;
15:47:53 128  	END;
15:47:53 129  
15:47:53 130  	IF in_expired > 0 THEN
15:47:53 131  	BEGIN
15:47:53 132  	    OPEN out_result_set FOR
15:47:53 133  	    SELECT
15:47:53 134  	      *
15:47:53 135  	    FROM
15:47:53 136  	      (SELECT rownum rnum, q.*
15:47:53 137  	       FROM
15:47:53 138  		(SELECT
15:47:53 139  		   ga.SUBSCRIPTION_ID,
15:47:53 140  		   ss.START_DATE,
15:47:53 141  		   ss.END_DATE,
15:47:53 142  		   a2.GROUP_ID AS PARENT_GROUP_ID
15:47:53 143  		 FROM
15:47:53 144  		   GROUP_ACCOUNT ga,
15:47:53 145  		   SUBSCRIPTION_SHARE ss,
15:47:53 146  		   ACCOUNT a,
15:47:53 147  		   SUBSCRIPTION s,
15:47:53 148  		   ACCOUNT a2
15:47:53 149  		 WHERE
15:47:53 150  		   a.GROUP_ID	       = in_group_id AND
15:47:53 151  		   a.ID 	       = ss.BORROWER_ACCOUNT_ID AND
15:47:53 152  		   ss.GROUP_ACCOUNT_ID = ga.ID	AND
15:47:53 153  		   ga.SUBSCRIPTION_ID  = s.ID AND
15:47:53 154  		   s.ACCOUNT_ID        = a2.ID
15:47:53 155  		) Q
15:47:53 156  	      WHERE rownum <= l_end)
15:47:53 157  	    WHERE rnum >= l_Start;
15:47:53 158  	END;
15:47:53 159  	ELSE
15:47:53 160  	BEGIN
15:47:53 161  	    OPEN out_result_set FOR
15:47:53 162  	    SELECT
15:47:53 163  	      *
15:47:53 164  	    FROM
15:47:53 165  	      (SELECT rownum rnum, q.*
15:47:53 166  	       FROM
15:47:53 167  		(SELECT
15:47:53 168  		   ga.SUBSCRIPTION_ID,
15:47:53 169  		   ss.START_DATE,
15:47:53 170  		   ss.END_DATE,
15:47:53 171  		   a2.GROUP_ID AS PARENT_GROUP_ID
15:47:53 172  		 FROM
15:47:53 173  		   GROUP_ACCOUNT ga,
15:47:53 174  		   SUBSCRIPTION_SHARE ss,
15:47:53 175  		   ACCOUNT a,
15:47:53 176  		   SUBSCRIPTION s,
15:47:53 177  		   ACCOUNT a2
15:47:53 178  		 WHERE
15:47:53 179  		   a.GROUP_ID	       = in_group_id AND
15:47:53 180  		   a.ID 	       = ss.BORROWER_ACCOUNT_ID AND
15:47:53 181  		   SYSDATE BETWEEN START_DATE AND END_DATE AND
15:47:53 182  		   ss.GROUP_ACCOUNT_ID = ga.ID AND
15:47:53 183  		   ga.SUBSCRIPTION_ID  = s.ID  AND
15:47:53 184  		   s.ACCOUNT_ID        = a2.ID
15:47:53 185  		) Q
15:47:53 186  	      WHERE rownum <= l_end)
15:47:53 187  	    WHERE rnum >= l_start;
15:47:53 188  	  END;
15:47:53 189  	END IF;
15:47:53 190  EXCEPTION
15:47:53 191  WHEN NO_DATA_FOUND THEN
15:47:53 192  	NULL;
15:47:53 193  WHEN OTHERS THEN
15:47:53 194  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 195  	  SPROC_NAME, 'Unknow error while retrieving subscription share info by group id', SQLERRM);
15:47:53 196  END SUB_SHARE_BY_GROUP_ID;
15:47:53 197  
15:47:53 198  PROCEDURE IS_VALID_IP_ADDRESS (
15:47:53 199  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
15:47:53 200  	in_ip_low IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
15:47:53 201  	in_ip_high IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
15:47:53 202  	out_is_valid	    OUT NUMBER
15:47:53 203  ) AS
15:47:53 204  SPROC_NAME CONSTANT VARCHAR2(32) := 'IS_VALID_IP_ADDRESS';
15:47:53 205  BEGIN
15:47:53 206  	SELECT
15:47:53 207  	  COUNT(1) INTO out_is_valid
15:47:53 208  	FROM
15:47:53 209  	  GROUP_ACCOUNT_IP_RANGE,
15:47:53 210  	  GROUP_ACCOUNT,
15:47:53 211  	  SUBSCRIPTION,
15:47:53 212  	  OFFER_CHAIN
15:47:53 213  	WHERE
15:47:53 214  	  GROUP_ACCOUNT.ID = GROUP_ACCOUNT_ID AND
15:47:53 215  	  GROUP_ACCOUNT.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND
15:47:53 216  	  SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID AND
15:47:53 217  	  OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID = 'GL' AND
15:47:53 218  	 GROUP_ACCOUNT_ID = in_group_account_id AND
15:47:53 219  	 (
15:47:53 220  	  (in_ip_high > minimum_ip_high and in_ip_high < maximum_ip_high) or
15:47:53 221  	  (in_ip_high = minimum_ip_high and (in_ip_low >= minimum_ip_low and in_ip_low <= maximum_ip_low)) or
15:47:53 222  	  (in_ip_high = maximum_ip_high and (in_ip_low >= minimum_ip_low and in_ip_low <= maximum_ip_low))
15:47:53 223  	 ) AND
15:47:53 224  	 GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V22.GROUP_ACC_IP_RNG_ACTIVE;
15:47:53 225  EXCEPTION
15:47:53 226  WHEN OTHERS THEN
15:47:53 227  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 228  	  SPROC_NAME, 'Error while checking IP', SQLERRM);
15:47:53 229  END IS_VALID_IP_ADDRESS;
15:47:53 230  
15:47:53 231  PROCEDURE IS_VALID_EMAIL_DOMAIN (
15:47:53 232  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:53 233  	in_email_domain     IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
15:47:53 234  	out_is_valid	    OUT NUMBER
15:47:53 235  ) AS
15:47:53 236  SPROC_NAME CONSTANT VARCHAR2(32) := 'IS_VALID_EMAIL_DOMAIN';
15:47:53 237  var_second_level_domain GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE;
15:47:53 238  var_third_level_domain GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE;
15:47:53 239  BEGIN
15:47:53 240  	var_second_level_domain := REGEXP_REPLACE(in_email_domain, '.*?([^\.]+\.[^\.]+)$', '\1');
15:47:53 241  	var_third_level_domain := REGEXP_REPLACE(in_email_domain, '.*?(([^\.]+\.){2}[^\.]+)$', '\1');
15:47:53 242  
15:47:53 243  	SELECT
15:47:53 244  	  COUNT(1) INTO out_is_valid
15:47:53 245  	FROM
15:47:53 246  	  GROUP_ACCOUNT_EMAIL_DOMAIN gaed,
15:47:53 247  	  GROUP_ACCOUNT ga,
15:47:53 248  	  SUBSCRIPTION s,
15:47:53 249  	  OFFER_CHAIN oc
15:47:53 250  	WHERE
15:47:53 251  	  ga.ID = gaed.GROUP_ACCOUNT_ID AND
15:47:53 252  	  ga.SUBSCRIPTION_ID = s.ID AND
15:47:53 253  	  s.OFFER_CHAIN_ID = oc.ID AND
15:47:53 254  	  oc.GROUP_ACCOUNT_TYPE_ID IN ('GL', 'KL') AND
15:47:53 255  	  gaed.GROUP_ACCOUNT_ID = in_group_account_id AND
15:47:53 256  	  (gaed.EMAIL_DOMAIN = var_third_level_domain OR gaed.EMAIL_DOMAIN = var_second_level_domain) AND
15:47:53 257  	  gaed.IS_ACTIVE = 1;
15:47:53 258  EXCEPTION
15:47:53 259  WHEN OTHERS THEN
15:47:53 260  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 261  	  SPROC_NAME, 'Error while checking email domain', SQLERRM);
15:47:53 262  END IS_VALID_EMAIL_DOMAIN;
15:47:53 263  
15:47:53 264  PROCEDURE GET_SUBSCRIPTION_SHARE (
15:47:53 265  	in_group_account_id    IN SUBSCRIPTION_SHARE.GROUP_ACCOUNT_ID%TYPE,
15:47:53 266  	In_Borrower_Account_Id In SUBSCRIPTION_SHARE.BORROWER_ACCOUNT_ID%Type,
15:47:53 267  	out_Result_Set	       OUT Sys_Refcursor
15:47:53 268  ) AS
15:47:53 269  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_SUBSCRIPTION_SHARE';
15:47:53 270  BEGIN
15:47:53 271  	BEGIN
15:47:53 272  	   OPEN out_result_set FOR
15:47:53 273  	   SELECT
15:47:53 274  	      ss.ID,
15:47:53 275  	      ss.GROUP_ACCOUNT_ID,
15:47:53 276  	      ss.BORROWER_ACCOUNT_ID,
15:47:53 277  	      ss.IP_ADDRESS,
15:47:53 278  	      ss.START_DATE,
15:47:53 279  	      ss.END_DATE,
15:47:53 280  	      ss.CREATED_BY,
15:47:53 281  	      ss.CREATE_DATE,
15:47:53 282  	      ss.UPDATED_BY,
15:47:53 283  	      ss.UPDATE_DATE,
15:47:53 284  	      a.GROUP_ID AS BORROWER_GROUP_ID
15:47:53 285  	   FROM
15:47:53 286  	     SUBSCRIPTION_SHARE ss,
15:47:53 287  	     ACCOUNT a
15:47:53 288  	   WHERE
15:47:53 289  	     ss.GROUP_ACCOUNT_ID    = in_group_account_id AND
15:47:53 290  	     ss.BORROWER_ACCOUNT_ID = in_borrower_account_id AND
15:47:53 291  	     SYSDATE BETWEEN ss.START_DATE AND END_DATE AND
15:47:53 292  	     ss.BORROWER_ACCOUNT_ID  = a.ID;
15:47:53 293  	END;
15:47:53 294  EXCEPTION
15:47:53 295  WHEN OTHERS THEN
15:47:53 296  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 297  	  Sproc_Name, 'Error while getting subscription share', Sqlerrm);
15:47:53 298  END GET_SUBSCRIPTION_SHARE;
15:47:53 299  
15:47:53 300  PROCEDURE GET_GROUP_ACCOUNT_BY_SUB_ID (
15:47:53 301  	in_subscription_id IN Group_Account.SUBSCRIPTION_ID%TYPE,
15:47:53 302  	out_result_set	   OUT SYS_REFCURSOR
15:47:53 303  ) As
15:47:53 304  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_ACCOUNT_BY_SUB_ID';
15:47:53 305  BEGIN
15:47:53 306  OPEN out_result_set FOR
15:47:53 307  	SELECT
15:47:53 308  	  ID,
15:47:53 309  	  SUBSCRIPTION_ID,
15:47:53 310  	  GROUP_NAME,
15:47:53 311  	  FIRST_NAME,
15:47:53 312  	  LAST_NAME,
15:47:53 313  	  EMAIL,
15:47:53 314  	  PHONE,
15:47:53 315  	  ORGANIZATION_TYPE,
15:47:53 316  	  SEATS,
15:47:53 317  	  SEAT_TTL_IN_HOURS,
15:47:53 318  	  CREATE_DATE,
15:47:53 319  	  CREATED_BY,
15:47:53 320  	  UPDATE_DATE,
15:47:53 321  	  UPDATED_BY
15:47:53 322  	FROM
15:47:53 323  	  GROUP_ACCOUNT
15:47:53 324  	Where
15:47:53 325  	  Subscription_Id = in_subscription_id;
15:47:53 326  EXCEPTION
15:47:53 327  WHEN OTHERS THEN
15:47:53 328  	Procs_Common_V22.Throw_Exception(APP_EXCEPTION_CODES_V22.Unknown_Error,
15:47:53 329  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 330  
15:47:53 331  END GET_GROUP_ACCOUNT_BY_SUB_ID;
15:47:53 332  
15:47:53 333  PROCEDURE CREATE_GROUP_ACCOUNT (
15:47:53 334  	in_subscription_id	 IN NUMBER,
15:47:53 335  	in_group_name		 IN VARCHAR2,
15:47:53 336  	in_first_name		 IN VARCHAR2,
15:47:53 337  	in_last_name		 IN VARCHAR2,
15:47:53 338  	in_email		 IN VARCHAR2,
15:47:53 339  	in_phone		 IN VARCHAR2,
15:47:53 340  	in_organization_type	 IN VARCHAR2,
15:47:53 341  	in_seats		 IN NUMBER,
15:47:53 342  	in_seat_ttl_in_hours	 IN NUMBER,
15:47:53 343  	in_ip			 IN NUMBER,
15:47:53 344  	in_created_by		 IN VARCHAR2
15:47:53 345  ) AS
15:47:53 346  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_GROUP_ACCOUNT';
15:47:53 347  BEGIN
15:47:53 348  
15:47:53 349  	CORE_OWNER.PROCS_GROUP_ACCOUNT_CRU_V22.CREATE_GROUP_ACCOUNT(
15:47:53 350  	  in_subscription_id => in_subscription_id,
15:47:53 351  	  in_group_name => in_group_name,
15:47:53 352  	  in_first_name => in_first_name,
15:47:53 353  	  in_last_name => in_last_name,
15:47:53 354  	  in_email => in_email,
15:47:53 355  	  in_phone => in_phone,
15:47:53 356  	  in_organization_type => in_organization_type,
15:47:53 357  	  in_seats => in_seats,
15:47:53 358  	  in_seat_ttl_in_hours => in_seat_ttl_in_hours,
15:47:53 359  	  in_ip => in_ip,
15:47:53 360  	  in_created_by => in_created_by
15:47:53 361  	);
15:47:53 362  
15:47:53 363  END CREATE_GROUP_ACCOUNT;
15:47:53 364  
15:47:53 365  PROCEDURE GET_SUBSCRIPTION_SHARES (
15:47:53 366  	in_group_account_id IN NUMBER,
15:47:53 367  	in_start	    IN NUMBER,
15:47:53 368  	in_end		    IN NUMBER,
15:47:53 369  	out_Result_Set	    OUT Sys_Refcursor
15:47:53 370  ) AS
15:47:53 371  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_SUBSCRIPTION_SHARES';
15:47:53 372  range_diff NUMBER := 0;
15:47:53 373  upper_bond_diff NUMBER := 0;
15:47:53 374  l_start NUMBER := 0;
15:47:53 375  l_end   NUMBER := 0;
15:47:53 376  BEGIN
15:47:53 377  	-- Normalize the end points [START]
15:47:53 378  	IF (in_start IS NULL OR in_start < 0) Then
15:47:53 379  	  l_start := 0;
15:47:53 380  	ELSE
15:47:53 381  	  l_start := in_start;
15:47:53 382  	END IF;
15:47:53 383  
15:47:53 384  	IF (in_end IS NULL) Then
15:47:53 385  	  l_end := 11;
15:47:53 386  	ELSE
15:47:53 387  	  l_end := in_end;
15:47:53 388  	END IF;
15:47:53 389  
15:47:53 390  	l_start := l_start + 1;
15:47:53 391  	l_end	:= l_end   + 1;
15:47:53 392  
15:47:53 393  	range_diff := l_end - l_start;
15:47:53 394  	upper_bond_diff :=  range_diff - GLOBAL_CONSTANTS_V22.MAX_RETURN_COUNT;
15:47:53 395  
15:47:53 396  	IF (upper_bond_diff > 0) Then
15:47:53 397  	  l_end := l_end - upper_bond_diff;
15:47:53 398  	END IF;
15:47:53 399  	-- Normalize the end points [END]
15:47:53 400  
15:47:53 401  	BEGIN
15:47:53 402  	   OPEN out_result_set FOR
15:47:53 403  	   SELECT *
15:47:53 404  	   FROM
15:47:53 405  	     (SELECT rownum rnum, Q.*
15:47:53 406  	      FROM
15:47:53 407  	       (SELECT
15:47:53 408  		  ss.ID,
15:47:53 409  		  ss.GROUP_ACCOUNT_ID,
15:47:53 410  		  ss.BORROWER_ACCOUNT_ID,
15:47:53 411  		  ss.IP_ADDRESS,
15:47:53 412  		  ss.START_DATE,
15:47:53 413  		  ss.END_DATE,
15:47:53 414  		  ss.CREATED_BY,
15:47:53 415  		  ss.CREATE_DATE,
15:47:53 416  		  ss.UPDATED_BY,
15:47:53 417  		  ss.UPDATE_DATE,
15:47:53 418  		  a.GROUP_ID AS BORROWER_GROUP_ID
15:47:53 419  		FROM
15:47:53 420  		  SUBSCRIPTION_SHARE ss,
15:47:53 421  		  ACCOUNT a,
15:47:53 422  		  LICENSE l,
15:47:53 423  		  GROUP_ACCOUNT ga
15:47:53 424  		WHERE
15:47:53 425  		  ss.GROUP_ACCOUNT_ID = in_group_account_id AND
15:47:53 426  		  ss.GROUP_ACCOUNT_ID = ga.ID AND
15:47:53 427  		  GA.SUBSCRIPTION_ID = l.SUBSCRIPTION_ID AND
15:47:53 428  		  SYSDATE BETWEEN l.START_DATE AND l.ENTITLEMENT_END_DATE AND
15:47:53 429  		  SYSDATE BETWEEN ss.START_DATE AND ss.END_DATE AND
15:47:53 430  		  ss.BORROWER_ACCOUNT_ID  = a.ID
15:47:53 431  	      ) Q
15:47:53 432  	    WHERE rownum <= l_end)
15:47:53 433  	  WHERE rnum >= l_start;
15:47:53 434  	END;
15:47:53 435  EXCEPTION
15:47:53 436  WHEN OTHERS THEN
15:47:53 437  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 438  	  SPROC_NAME, 'Unknown error while retrieving subscription shares', SQLERRM);
15:47:53 439  END GET_SUBSCRIPTION_SHARES;
15:47:53 440  
15:47:53 441  PROCEDURE GET_GROUP_ACCOUNT_BY_IP (
15:47:53 442  	in_ip_low	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
15:47:53 443  	in_ip_high	    IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
15:47:53 444  	out_result_set	      OUT SYS_REFCURSOR
15:47:53 445  ) AS
15:47:53 446  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_ACCOUNT_BY_IP';
15:47:53 447  BEGIN
15:47:53 448  	BEGIN
15:47:53 449  	  OPEN out_result_set FOR
15:47:53 450  	  SELECT
15:47:53 451  	    ID,
15:47:53 452  	    SUBSCRIPTION_ID,
15:47:53 453  	    GROUP_NAME,
15:47:53 454  	    FIRST_NAME,
15:47:53 455  	    LAST_NAME,
15:47:53 456  	    EMAIL,
15:47:53 457  	    PHONE,
15:47:53 458  	    ORGANIZATION_TYPE,
15:47:53 459  	    SEATS,
15:47:53 460  	    SEAT_TTL_IN_HOURS,
15:47:53 461  	    CREATE_DATE,
15:47:53 462  	    CREATED_BY,
15:47:53 463  	    UPDATE_DATE,
15:47:53 464  	    UPDATED_BY
15:47:53 465  	  FROM
15:47:53 466  	    GROUP_ACCOUNT
15:47:53 467  	  WHERE
15:47:53 468  	    ID IN (
15:47:53 469  	      SELECT
15:47:53 470  		GROUP_ACCOUNT_ID
15:47:53 471  	      FROM
15:47:53 472  		GROUP_ACCOUNT_IP_RANGE,
15:47:53 473  		GROUP_ACCOUNT,
15:47:53 474  		SUBSCRIPTION,
15:47:53 475  		OFFER_CHAIN
15:47:53 476  	      WHERE
15:47:53 477  		GROUP_ACCOUNT.ID = GROUP_ACCOUNT_ID
15:47:53 478  	      AND
15:47:53 479  		GROUP_ACCOUNT.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND
15:47:53 480  		SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID AND
15:47:53 481  		OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID = 'GL'
15:47:53 482  	      AND
15:47:53 483  		(
15:47:53 484  		  (in_ip_high > minimum_ip_high and in_ip_high < maximum_ip_high) or
15:47:53 485  		  (in_ip_high = minimum_ip_high and (in_ip_low >= minimum_ip_low and in_ip_low <= maximum_ip_low)) or
15:47:53 486  		  (in_ip_high = maximum_ip_high and (in_ip_low >= minimum_ip_low and in_ip_low <= maximum_ip_low))
15:47:53 487  		)
15:47:53 488  	      AND
15:47:53 489  		GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V22.GROUP_ACC_IP_RNG_ACTIVE
15:47:53 490  	    );
15:47:53 491  	  END;
15:47:53 492  EXCEPTION
15:47:53 493  WHEN OTHERS THEN
15:47:53 494  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 495  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 496  END GET_GROUP_ACCOUNT_BY_IP;
15:47:53 497  
15:47:53 498  PROCEDURE GET_GROUP_ACCOUNT_BY_EMAIL (
15:47:53 499  	in_email_domain     IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
15:47:53 500  	out_result_set	    OUT SYS_REFCURSOR
15:47:53 501  ) AS
15:47:53 502  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_ACCOUNT_BY_EMAIL';
15:47:53 503  var_second_level_domain GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE;
15:47:53 504  var_third_level_domain GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE;
15:47:53 505  BEGIN
15:47:53 506  	var_second_level_domain := REGEXP_REPLACE(in_email_domain, '.*?([^\.]+\.[^\.]+)$', '\1');
15:47:53 507  	var_third_level_domain := REGEXP_REPLACE(in_email_domain, '.*?(([^\.]+\.){2}[^\.]+)$', '\1');
15:47:53 508  	BEGIN
15:47:53 509  	  OPEN out_result_set FOR
15:47:53 510  	  SELECT
15:47:53 511  	    ID,
15:47:53 512  	    SUBSCRIPTION_ID,
15:47:53 513  	    GROUP_NAME,
15:47:53 514  	    FIRST_NAME,
15:47:53 515  	    LAST_NAME,
15:47:53 516  	    EMAIL,
15:47:53 517  	    PHONE,
15:47:53 518  	    ORGANIZATION_TYPE,
15:47:53 519  	    SEATS,
15:47:53 520  	    SEAT_TTL_IN_HOURS,
15:47:53 521  	    CREATE_DATE,
15:47:53 522  	    CREATED_BY,
15:47:53 523  	    UPDATE_DATE,
15:47:53 524  	    UPDATED_BY
15:47:53 525  	  FROM
15:47:53 526  	    GROUP_ACCOUNT
15:47:53 527  	  WHERE
15:47:53 528  	    ID IN (
15:47:53 529  	      SELECT
15:47:53 530  		GROUP_ACCOUNT_ID
15:47:53 531  	      FROM
15:47:53 532  		GROUP_ACCOUNT_EMAIL_DOMAIN gaed,
15:47:53 533  		GROUP_ACCOUNT ga,
15:47:53 534  		SUBSCRIPTION s,
15:47:53 535  		OFFER_CHAIN oc
15:47:53 536  	      WHERE
15:47:53 537  		ga.ID = gaed.GROUP_ACCOUNT_ID AND
15:47:53 538  		ga.SUBSCRIPTION_ID = s.ID AND
15:47:53 539  		s.OFFER_CHAIN_ID = oc.ID AND
15:47:53 540  		oc.GROUP_ACCOUNT_TYPE_ID in ('GL', 'KL') AND
15:47:53 541  		(gaed.EMAIL_DOMAIN = var_third_level_domain OR gaed.EMAIL_DOMAIN = var_second_level_domain) AND
15:47:53 542  		gaed.IS_ACTIVE = 1
15:47:53 543  	    );
15:47:53 544  	  END;
15:47:53 545  EXCEPTION
15:47:53 546  WHEN OTHERS THEN
15:47:53 547  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 548  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 549  END GET_GROUP_ACCOUNT_BY_EMAIL;
15:47:53 550  
15:47:53 551  PROCEDURE GET_GROUP_ACCOUNT_IP_RANGES (
15:47:53 552  	in_group_account_id   IN NUMBER,
15:47:53 553  	in_start	      IN NUMBER,
15:47:53 554  	in_end		      IN NUMBER,
15:47:53 555  	in_status	      IN NUMBER,
15:47:53 556  	out_record_count      OUT NUMBER,
15:47:53 557  	out_result_set	      OUT SYS_REFCURSOR
15:47:53 558  ) AS
15:47:53 559  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_ACCOUNT_IP_RANGES';
15:47:53 560  range_diff NUMBER := 0;
15:47:53 561  upper_bond_diff NUMBER := 0;
15:47:53 562  l_start NUMBER := 0;
15:47:53 563  l_end   NUMBER := 0;
15:47:53 564  BEGIN
15:47:53 565  	--Normalize the end points [START]
15:47:53 566  	IF (in_start IS NULL OR in_start < 0) Then
15:47:53 567  	  l_start := 0;
15:47:53 568  	ELSE
15:47:53 569  	  l_start := in_start;
15:47:53 570  	END IF;
15:47:53 571  
15:47:53 572  	IF (in_end IS NULL) Then
15:47:53 573  	  l_end := 11;
15:47:53 574  	ELSE
15:47:53 575  	  l_end := in_end;
15:47:53 576  	END IF;
15:47:53 577  
15:47:53 578  	l_start := l_start + 1;
15:47:53 579  	l_end	:= l_end   + 1;
15:47:53 580  
15:47:53 581  	range_diff := l_end - l_start;
15:47:53 582  	upper_bond_diff :=  range_diff - GLOBAL_CONSTANTS_V22.MAX_RETURN_COUNT;
15:47:53 583  
15:47:53 584  	IF (upper_bond_diff > 0) Then
15:47:53 585  	  l_end := l_end - upper_bond_diff;
15:47:53 586  	END IF;
15:47:53 587  	--Normalize the end points [END]
15:47:53 588  
15:47:53 589  	--Total count of records [START]
15:47:53 590  	SELECT
15:47:53 591  	  COUNT(1) INTO out_record_count
15:47:53 592  	FROM
15:47:53 593  	  GROUP_ACCOUNT_IP_RANGE
15:47:53 594  	WHERE
15:47:53 595  	  GROUP_ACCOUNT_ID = in_group_account_id AND
15:47:53 596  	  (in_status IS NULL OR GROUP_ACC_IP_RNG_STATUS_ID = in_status);
15:47:53 597  	--Total count of records [END]
15:47:53 598  
15:47:53 599  	OPEN out_result_set FOR
15:47:53 600  	SELECT
15:47:53 601  	  *
15:47:53 602  	FROM
15:47:53 603  	  (SELECT rownum rnum, q.*
15:47:53 604  	   FROM
15:47:53 605  	    (SELECT
15:47:53 606  	       ID,
15:47:53 607  	       GROUP_ACCOUNT_ID,
15:47:53 608  	       MINIMUM_IP_STRING,
15:47:53 609  	       MAXIMUM_IP_STRING,
15:47:53 610  	       GROUP_ACC_IP_RNG_STATUS_ID
15:47:53 611  	     FROM
15:47:53 612  	       GROUP_ACCOUNT_IP_RANGE
15:47:53 613  	     WHERE
15:47:53 614  	       GROUP_ACCOUNT_ID = in_group_account_id AND
15:47:53 615  	       (in_status IS NULL OR
15:47:53 616  		GROUP_ACC_IP_RNG_STATUS_ID = in_status)
15:47:53 617  	    ) Q
15:47:53 618  	  WHERE rownum <= l_end)
15:47:53 619  	WHERE rnum >= l_Start;
15:47:53 620  EXCEPTION
15:47:53 621  WHEN OTHERS THEN
15:47:53 622  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 623  	  SPROC_NAME, 'Unknown error while retrieving IP ranges ', SQLERRM);
15:47:53 624  END GET_GROUP_ACCOUNT_IP_RANGES;
15:47:53 625  
15:47:53 626  PROCEDURE GET_GRP_ACCNT_EMAIL_DOMAINS (
15:47:53 627  	in_group_account_id   IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:53 628  	in_start	      IN NUMBER,
15:47:53 629  	in_end		      IN NUMBER,
15:47:53 630  	in_status	      IN GROUP_ACCOUNT_EMAIL_DOMAIN.IS_ACTIVE%TYPE,
15:47:53 631  	out_record_count      OUT NUMBER,
15:47:53 632  	out_result_set	      OUT SYS_REFCURSOR
15:47:53 633  ) AS
15:47:53 634  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRP_ACCNT_EMAIL_DOMAINS';
15:47:53 635  range_diff NUMBER := 0;
15:47:53 636  upper_bond_diff NUMBER := 0;
15:47:53 637  l_start NUMBER := 0;
15:47:53 638  l_end   NUMBER := 0;
15:47:53 639  BEGIN
15:47:53 640  	--Normalize the end points [START]
15:47:53 641  	IF (in_start IS NULL OR in_start < 0) Then
15:47:53 642  	  l_start := 0;
15:47:53 643  	ELSE
15:47:53 644  	  l_start := in_start;
15:47:53 645  	END IF;
15:47:53 646  
15:47:53 647  	IF (in_end IS NULL) Then
15:47:53 648  	  l_end := 11;
15:47:53 649  	ELSE
15:47:53 650  	  l_end := in_end;
15:47:53 651  	END IF;
15:47:53 652  
15:47:53 653  	l_start := l_start + 1;
15:47:53 654  	l_end	:= l_end   + 1;
15:47:53 655  
15:47:53 656  	range_diff := l_end - l_start;
15:47:53 657  	upper_bond_diff :=  range_diff - GLOBAL_CONSTANTS_V22.MAX_RETURN_COUNT;
15:47:53 658  
15:47:53 659  	IF (upper_bond_diff > 0) Then
15:47:53 660  	  l_end := l_end - upper_bond_diff;
15:47:53 661  	END IF;
15:47:53 662  	--Normalize the end points [END]
15:47:53 663  
15:47:53 664  	--Total count of records [START]
15:47:53 665  	SELECT
15:47:53 666  	  COUNT(1) INTO out_record_count
15:47:53 667  	FROM
15:47:53 668  	  GROUP_ACCOUNT_EMAIL_DOMAIN
15:47:53 669  	WHERE
15:47:53 670  	  GROUP_ACCOUNT_ID = in_group_account_id AND
15:47:53 671  	  (IS_ACTIVE IS NULL OR IS_ACTIVE = in_status);
15:47:53 672  	--Total count of records [END]
15:47:53 673  
15:47:53 674  	OPEN out_result_set FOR
15:47:53 675  	SELECT
15:47:53 676  	  *
15:47:53 677  	FROM
15:47:53 678  	  (SELECT rownum rnum, q.*
15:47:53 679  	   FROM
15:47:53 680  	    (SELECT
15:47:53 681  	      ID,
15:47:53 682  	      GROUP_ACCOUNT_ID,
15:47:53 683  	      EMAIL_DOMAIN,
15:47:53 684  	      IS_ACTIVE
15:47:53 685  	     FROM
15:47:53 686  	       GROUP_ACCOUNT_EMAIL_DOMAIN
15:47:53 687  	     WHERE
15:47:53 688  	       GROUP_ACCOUNT_ID = in_group_account_id AND
15:47:53 689  	       (in_status IS NULL OR
15:47:53 690  		IS_ACTIVE = in_status)
15:47:53 691  	    ) Q
15:47:53 692  	  WHERE rownum <= l_end)
15:47:53 693  	WHERE rnum >= l_Start;
15:47:53 694  
15:47:53 695  EXCEPTION
15:47:53 696  WHEN OTHERS THEN
15:47:53 697  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 698  	  SPROC_NAME, 'Unknown error while retrieving Email Domains ', SQLERRM);
15:47:53 699  END GET_GRP_ACCNT_EMAIL_DOMAINS;
15:47:53 700  
15:47:53 701  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_GA_ID (
15:47:53 702  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:53 703  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
15:47:53 704  ) AS
15:47:53 705  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_EMAIL_DOMAIN_BY_GA_ID';
15:47:53 706  BEGIN
15:47:53 707  	  PROCS_GROUP_ACCOUNT_CRU_V22.DISABLE_EMAIL_DOMAIN_BY_GA_ID(
15:47:53 708  	    in_group_account_id => in_group_account_id,
15:47:53 709  	    in_updated_by => in_updated_by
15:47:53 710  	  );
15:47:53 711  EXCEPTION
15:47:53 712  WHEN OTHERS THEN
15:47:53 713  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 714  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 715  END DISABLE_EMAIL_DOMAIN_BY_GA_ID;
15:47:53 716  
15:47:53 717  PROCEDURE DISABLE_EMAIL_DOMAIN_BY_ID (
15:47:53 718  	in_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE,
15:47:53 719  	in_updated_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.UPDATED_BY%TYPE
15:47:53 720  ) AS
15:47:53 721  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_EMAIL_DOMAIN_BY_ID';
15:47:53 722  BEGIN
15:47:53 723  	  PROCS_GROUP_ACCOUNT_CRU_V22.DISABLE_EMAIL_DOMAIN_BY_ID(
15:47:53 724  	    in_id => in_id,
15:47:53 725  	    in_updated_by => in_updated_by
15:47:53 726  	  );
15:47:53 727  EXCEPTION
15:47:53 728  WHEN OTHERS THEN
15:47:53 729  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 730  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 731  END DISABLE_EMAIL_DOMAIN_BY_ID;
15:47:53 732  
15:47:53 733  PROCEDURE ADD_EMAIL_DOMAIN (
15:47:53 734  	in_group_account_id IN GROUP_ACCOUNT_EMAIL_DOMAIN.GROUP_ACCOUNT_ID%TYPE,
15:47:53 735  	in_email_domain IN GROUP_ACCOUNT_EMAIL_DOMAIN.EMAIL_DOMAIN%TYPE,
15:47:53 736  	in_created_by IN GROUP_ACCOUNT_EMAIL_DOMAIN.CREATED_BY%TYPE
15:47:53 737  ) AS
15:47:53 738  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_EMAIL_DOMAIN';
15:47:53 739  var_ga_type OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID%TYPE;
15:47:53 740  var_is_dupe NUMBER(1);
15:47:53 741  var_group_account_count NUMBER := 0;
15:47:53 742  var_id  GROUP_ACCOUNT_EMAIL_DOMAIN.ID%TYPE;
15:47:53 743  NOT_GL EXCEPTION;
15:47:53 744  BEGIN
15:47:53 745  
15:47:53 746  	  SELECT OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID into var_ga_type
15:47:53 747  	  FROM
15:47:53 748  	    GROUP_ACCOUNT,
15:47:53 749  	    SUBSCRIPTION,
15:47:53 750  	    OFFER_CHAIN
15:47:53 751  	  WHERE
15:47:53 752  	    GROUP_ACCOUNT.ID = in_group_account_id AND
15:47:53 753  	    GROUP_ACCOUNT.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND
15:47:53 754  	    SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:53 755  	  ;
15:47:53 756  	  IF(var_ga_type != 'GL' and var_ga_type != 'KL' ) THEN
15:47:53 757  	    RAISE NOT_GL;
15:47:53 758  	  END IF;
15:47:53 759  
15:47:53 760  	  PROCS_GROUP_ACCOUNT_CRU_V22.ADD_EMAIL_DOMAIN(
15:47:53 761  	     in_group_account_id => in_group_account_id,
15:47:53 762  	     in_email_domain => in_email_domain,
15:47:53 763  	     in_is_active => GLOBAL_STATUSES_V22.GROUP_ACC_EMAIL_DOMAIN_ACT,
15:47:53 764  	     in_created_by => in_created_by
15:47:53 765  	  );
15:47:53 766  
15:47:53 767  EXCEPTION
15:47:53 768  WHEN NOT_GL THEN
15:47:53 769  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:53 770  	  SPROC_NAME, 'Group account type does not support Email Domains', SQLERRM);
15:47:53 771  WHEN OTHERS THEN
15:47:53 772  	IF (sqlcode=APP_EXCEPTION_CODES_V22.DUPLICATE_ERROR) THEN
15:47:53 773  	   RAISE;
15:47:53 774  	ELSE
15:47:53 775  	  PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 776  	    SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 777  	END IF;
15:47:53 778  END ADD_EMAIL_DOMAIN;
15:47:53 779  
15:47:53 780  PROCEDURE CREATE_SUBSCRIPTION_SHARE (
15:47:53 781  	in_group_account_id    IN NUMBER,
15:47:53 782  	in_borrower_account_id IN NUMBER,
15:47:53 783  	in_ip_address	       IN VARCHAR2,
15:47:53 784  	in_email_domain        IN VARCHAR2,
15:47:53 785  	in_created_by	       IN VARCHAR2
15:47:53 786  ) AS
15:47:53 787  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_SUBSCRIPTION_SHARE';
15:47:53 788  ga_ttl_in_hours NUMBER := NULL;
15:47:53 789  start_date DATE := NULL;
15:47:53 790  end_date DATE := NULL;
15:47:53 791  BEGIN
15:47:53 792  	start_date := sysdate;
15:47:53 793  	end_date   := GLOBAL_CONSTANTS_V22.MAX_DATE;
15:47:53 794  
15:47:53 795  	BEGIN
15:47:53 796  	  SELECT SEAT_TTL_IN_HOURS into ga_ttl_in_hours
15:47:53 797  	  FROM GROUP_ACCOUNT, SUBSCRIPTION, OFFER_CHAIN
15:47:53 798  	  WHERE GROUP_ACCOUNT.ID = in_group_account_id AND
15:47:53 799  		GROUP_ACCOUNT.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND
15:47:53 800  		SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID AND
15:47:53 801  		OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID in ('GL', 'KL');
15:47:53 802  	EXCEPTION
15:47:53 803  	  WHEN no_data_found THEN
15:47:53 804  	    ga_ttl_in_hours := NULL;
15:47:53 805  	END;
15:47:53 806  
15:47:53 807  	IF (ga_ttl_in_hours IS NOT NULL) THEN
15:47:53 808  	  end_date := (start_date + (1/24 * ga_ttl_in_hours));
15:47:53 809  	END IF;
15:47:53 810  
15:47:53 811  	CORE_OWNER.PROCS_GROUP_ACCOUNT_CRU_V22.CREATE_SUBSCRIPTION_SHARE(
15:47:53 812  	  in_group_account_id => in_group_account_id,
15:47:53 813  	  in_borrower_account_id => in_borrower_account_id,
15:47:53 814  	  in_ip_address => in_ip_address,
15:47:53 815  	  in_email_domain => in_email_domain,
15:47:53 816  	  in_start_date => start_date,
15:47:53 817  	  in_end_date => end_date,
15:47:53 818  	  in_created_by => in_created_by
15:47:53 819  	);
15:47:53 820  END CREATE_SUBSCRIPTION_SHARE;
15:47:53 821  
15:47:53 822  
15:47:53 823  PROCEDURE GET_NUM_OCCUPIED_GROUP_SEATS (
15:47:53 824  	in_group_account_id   IN NUMBER,
15:47:53 825  	out_occupied_seats   OUT NUMBER
15:47:53 826  ) AS
15:47:53 827  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NUM_OCCUPIED_GROUP_SEATS';
15:47:53 828  BEGIN
15:47:53 829  	SELECT
15:47:53 830  	  PROCS_GROUP_ACCOUNT_V22.F_GET_NUM_OCCUPIED_GROUP_SEATS(in_group_account_id) INTO out_occupied_seats
15:47:53 831  	FROM dual;
15:47:53 832  EXCEPTION
15:47:53 833  WHEN OTHERS THEN
15:47:53 834  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 835  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 836  END GET_NUM_OCCUPIED_GROUP_SEATS;
15:47:53 837  
15:47:53 838  
15:47:53 839  FUNCTION F_GET_NUM_OCCUPIED_GROUP_SEATS (
15:47:53 840  	in_group_account_id   IN NUMBER
15:47:53 841  ) RETURN NUMBER IS
15:47:53 842  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NUM_OCCUPIED_GROUP_SEATS';
15:47:53 843  num_seats NUMBER;
15:47:53 844  BEGIN
15:47:53 845  	SELECT
15:47:53 846  	  COUNT(1) INTO num_seats
15:47:53 847  	FROM
15:47:53 848  	  SUBSCRIPTION_SHARE
15:47:53 849  	WHERE
15:47:53 850  	  GROUP_ACCOUNT_ID = in_group_account_id AND
15:47:53 851  	  SYSDATE BETWEEN START_DATE AND END_DATE;
15:47:53 852  	RETURN num_seats;
15:47:53 853  EXCEPTION
15:47:53 854  WHEN OTHERS THEN
15:47:53 855  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 856  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 857  END F_GET_NUM_OCCUPIED_GROUP_SEATS;
15:47:53 858  
15:47:53 859  -- *********************************************************************
15:47:53 860  -- *************** GROUP ACCOUNT IP RANGE JUNK *************************
15:47:53 861  -- *********************************************************************
15:47:53 862  -- I'm debating if this should be in a different package, but right now
15:47:53 863  -- I'm too lazy to move this else where.
15:47:53 864  -- *********************************************************************
15:47:53 865  
15:47:53 866  PROCEDURE DISABLE_IP_RANGES_BY_GA_ID (
15:47:53 867  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
15:47:53 868  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
15:47:53 869  ) AS
15:47:53 870  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_IP_RANGES_BY_GA_ID';
15:47:53 871  BEGIN
15:47:53 872  	  PROCS_GROUP_ACCOUNT_CRU_V22.DISABLE_IP_RANGES_BY_GA_ID(
15:47:53 873  	    in_group_account_id => in_group_account_id,
15:47:53 874  	    in_updated_by => in_updated_by
15:47:53 875  	  );
15:47:53 876  EXCEPTION
15:47:53 877  WHEN OTHERS THEN
15:47:53 878  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 879  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 880  END DISABLE_IP_RANGES_BY_GA_ID;
15:47:53 881  
15:47:53 882  PROCEDURE DISABLE_IP_RANGE_BY_ID (
15:47:53 883  	in_id IN GROUP_ACCOUNT_IP_RANGE.ID%TYPE,
15:47:53 884  	in_updated_by IN GROUP_ACCOUNT_IP_RANGE.UPDATED_BY%TYPE
15:47:53 885  ) AS
15:47:53 886  SPROC_NAME CONSTANT VARCHAR2(32) := 'DISABLE_IP_RANGE_BY_ID';
15:47:53 887  BEGIN
15:47:53 888  	  PROCS_GROUP_ACCOUNT_CRU_V22.DISABLE_IP_RANGE_BY_ID(
15:47:53 889  	    in_id => in_id,
15:47:53 890  	    in_updated_by => in_updated_by
15:47:53 891  	  );
15:47:53 892  EXCEPTION
15:47:53 893  WHEN OTHERS THEN
15:47:53 894  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 895  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 896  END DISABLE_IP_RANGE_BY_ID;
15:47:53 897  
15:47:53 898  PROCEDURE ADD_IP_RANGE (
15:47:53 899  	in_group_account_id IN GROUP_ACCOUNT_IP_RANGE.GROUP_ACCOUNT_ID%TYPE,
15:47:53 900  	in_minimum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_STRING%TYPE,
15:47:53 901  	in_minimum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_LOW%TYPE,
15:47:53 902  	in_minimum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MINIMUM_IP_HIGH%TYPE,
15:47:53 903  	in_maximum_ip_string IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_STRING%TYPE,
15:47:53 904  	in_maximum_ip_low IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_LOW%TYPE,
15:47:53 905  	in_maximum_ip_high IN GROUP_ACCOUNT_IP_RANGE.MAXIMUM_IP_HIGH%TYPE,
15:47:53 906  	in_created_by IN GROUP_ACCOUNT_IP_RANGE.CREATED_BY%TYPE
15:47:53 907  ) AS
15:47:53 908  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_IP_RANGE';
15:47:53 909  var_ga_type OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID%TYPE;
15:47:53 910  var_is_dupe NUMBER(1);
15:47:53 911  NOT_GL EXCEPTION;
15:47:53 912  DUPE EXCEPTION;
15:47:53 913  BEGIN
15:47:53 914  	  SELECT OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID into var_ga_type
15:47:53 915  	  FROM
15:47:53 916  	    GROUP_ACCOUNT,
15:47:53 917  	    SUBSCRIPTION,
15:47:53 918  	    OFFER_CHAIN
15:47:53 919  	  WHERE
15:47:53 920  	    GROUP_ACCOUNT.ID = in_group_account_id AND
15:47:53 921  	    GROUP_ACCOUNT.SUBSCRIPTION_ID = SUBSCRIPTION.ID AND
15:47:53 922  	    SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:53 923  	  ;
15:47:53 924  	  IF(var_ga_type != 'GL') THEN
15:47:53 925  	    RAISE NOT_GL;
15:47:53 926  	  END IF;
15:47:53 927  
15:47:53 928  	  PROCS_GROUP_ACCOUNT_CRU_V22.ADD_IP_RANGE(
15:47:53 929  	    in_group_account_id => in_group_account_id,
15:47:53 930  	    in_minimum_ip_string => in_minimum_ip_string,
15:47:53 931  	    in_minimum_ip_low => in_minimum_ip_low,
15:47:53 932  	    in_minimum_ip_high => in_minimum_ip_high,
15:47:53 933  	    in_maximum_ip_string => in_maximum_ip_string,
15:47:53 934  	    in_maximum_ip_low => in_maximum_ip_low,
15:47:53 935  	    in_maximum_ip_high => in_maximum_ip_high,
15:47:53 936  	    in_created_by => in_created_by
15:47:53 937  	  );
15:47:53 938  
15:47:53 939  	  -- Check for overlapping ip address range after insert.  Note that if another
15:47:53 940  	  -- call to add_ip_range has not completed, overlapping ip entries can occur.
15:47:53 941  	  SELECT count(1) into var_is_dupe
15:47:53 942  	  FROM
15:47:53 943  	    GROUP_ACCOUNT_IP_RANGE
15:47:53 944  	  WHERE
15:47:53 945  	    GROUP_ACC_IP_RNG_STATUS_ID = GLOBAL_STATUSES_V22.GROUP_ACC_IP_RNG_ACTIVE AND
15:47:53 946  		((
15:47:53 947  		  (in_minimum_ip_high > minimum_ip_high and in_minimum_ip_high < maximum_ip_high) or
15:47:53 948  		  (in_minimum_ip_high = minimum_ip_high and (in_minimum_ip_low >= minimum_ip_low and in_minimum_ip_low <= maximum_ip_low)) or
15:47:53 949  		  (in_minimum_ip_high = maximum_ip_high and (in_minimum_ip_low >= minimum_ip_low and in_minimum_ip_low <= maximum_ip_low))
15:47:53 950  		) OR
15:47:53 951  
15:47:53 952  		(
15:47:53 953  		  (in_maximum_ip_high > minimum_ip_high and in_maximum_ip_high < maximum_ip_high) or
15:47:53 954  		  (in_maximum_ip_high = minimum_ip_high and (in_maximum_ip_low >= minimum_ip_low and in_maximum_ip_low <= maximum_ip_low)) or
15:47:53 955  		  (in_maximum_ip_high = maximum_ip_high and (in_maximum_ip_low >= minimum_ip_low and in_maximum_ip_low <= maximum_ip_low))
15:47:53 956  		)) AND
15:47:53 957  	    ROWNUM < 3;
15:47:53 958  
15:47:53 959  	  If(var_is_dupe > 1) THEN
15:47:53 960  	    RAISE DUPE;
15:47:53 961  	  END IF;
15:47:53 962  EXCEPTION
15:47:53 963  WHEN NOT_GL THEN
15:47:53 964  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:53 965  	  SPROC_NAME, 'Group account type does not support IPs', SQLERRM);
15:47:53 966  WHEN DUPE THEN
15:47:53 967  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:53 968  	  SPROC_NAME, 'The IP address range is already in use', SQLERRM);
15:47:53 969  WHEN OTHERS THEN
15:47:53 970  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 971  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 972  END ADD_IP_RANGE;
15:47:53 973  
15:47:53 974  PROCEDURE GET_GRP_ID_BY_GRP_ACCOUNT_ID (
15:47:53 975  	in_group_account_id IN NUMBER,
15:47:53 976  	out_group_id OUT NUMBER
15:47:53 977  ) AS
15:47:53 978  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRP_ID_BY_GRP_ACCOUNT_ID';
15:47:53 979  BEGIN
15:47:53 980  	SELECT
15:47:53 981  	  a.group_id into out_group_id
15:47:53 982  	FROM
15:47:53 983  	  account a,
15:47:53 984  	  subscription s,
15:47:53 985  	  group_account ga
15:47:53 986  	WHERE
15:47:53 987  	  a.id = s.account_id and
15:47:53 988  	  s.id = ga.subscription_id and
15:47:53 989  	  ga.id = in_group_account_id and
15:47:53 990  	  rownum < 2
15:47:53 991  	;
15:47:53 992  EXCEPTION
15:47:53 993  WHEN NO_DATA_FOUND THEN
15:47:53 994  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 995  	  SPROC_NAME, 'Bad group_account_id');
15:47:53 996  WHEN OTHERS THEN
15:47:53 997  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 998  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 999  END GET_GRP_ID_BY_GRP_ACCOUNT_ID;
15:47:53 1000  
15:47:53 1001  PROCEDURE GET_GRP_ID_BY_GRPACCIPRNG_ID (
15:47:53 1002  	 in_group_account_ip_range_id IN NUMBER,
15:47:53 1003  	 out_group_id OUT NUMBER
15:47:53 1004  ) AS
15:47:53 1005  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRP_ID_BY_GRPACCIPRNG_ID';
15:47:53 1006  BEGIN
15:47:53 1007  	 SELECT
15:47:53 1008  	   a.group_id into out_group_id
15:47:53 1009  	 FROM
15:47:53 1010  	   account a,
15:47:53 1011  	   subscription s,
15:47:53 1012  	   group_account ga,
15:47:53 1013  	   group_account_ip_range ir
15:47:53 1014  	 WHERE
15:47:53 1015  	   a.id = s.account_id and
15:47:53 1016  	   s.id = ga.subscription_id and
15:47:53 1017  	   ga.id = ir.group_account_id and
15:47:53 1018  	   ir.id = in_group_account_ip_range_id and
15:47:53 1019  	   rownum < 2
15:47:53 1020  	 ;
15:47:53 1021  EXCEPTION
15:47:53 1022  WHEN NO_DATA_FOUND THEN
15:47:53 1023  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1024  	   SPROC_NAME, 'Bad group_account_ip_range_id');
15:47:53 1025  WHEN OTHERS THEN
15:47:53 1026  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1027  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1028  END GET_GRP_ID_BY_GRPACCIPRNG_ID;
15:47:53 1029  
15:47:53 1030  PROCEDURE GET_GRP_ID_BY_EMAIL_DOM_ID (
15:47:53 1031  	 in_group_account_email_dom_id IN NUMBER,
15:47:53 1032  	 out_group_id OUT NUMBER
15:47:53 1033  ) AS
15:47:53 1034  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRP_ID_BY_EMAIL_DOM_ID';
15:47:53 1035  BEGIN
15:47:53 1036  	 SELECT
15:47:53 1037  	   a.group_id into out_group_id
15:47:53 1038  	 FROM
15:47:53 1039  	   account a,
15:47:53 1040  	   subscription s,
15:47:53 1041  	   group_account ga,
15:47:53 1042  	   group_account_email_domain ir
15:47:53 1043  	 WHERE
15:47:53 1044  	   a.id = s.account_id and
15:47:53 1045  	   s.id = ga.subscription_id and
15:47:53 1046  	   ga.id = ir.group_account_id and
15:47:53 1047  	   ir.id = in_group_account_email_dom_id and
15:47:53 1048  	   rownum < 2
15:47:53 1049  	 ;
15:47:53 1050  EXCEPTION
15:47:53 1051  WHEN NO_DATA_FOUND THEN
15:47:53 1052  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1053  	   SPROC_NAME, 'Bad group_account_ip_range_id');
15:47:53 1054  WHEN OTHERS THEN
15:47:53 1055  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1056  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1057  END GET_GRP_ID_BY_EMAIL_DOM_ID;
15:47:53 1058  
15:47:53 1059  PROCEDURE UPDATE_GROUP_ACCOUNT (
15:47:53 1060  	 in_group_account_id	  IN GROUP_ACCOUNT.ID%TYPE,
15:47:53 1061  	 in_group_name		  IN GROUP_ACCOUNT.GROUP_NAME%TYPE,
15:47:53 1062  	 in_first_name		  IN GROUP_ACCOUNT.FIRST_NAME%TYPE,
15:47:53 1063  	 in_last_name		  IN GROUP_ACCOUNT.LAST_NAME%TYPE,
15:47:53 1064  	 in_email		  IN GROUP_ACCOUNT.EMAIL%TYPE,
15:47:53 1065  	 in_phone		  IN GROUP_ACCOUNT.PHONE%TYPE,
15:47:53 1066  	 in_updated_by		  IN GROUP_ACCOUNT.UPDATED_BY%TYPE
15:47:53 1067  ) AS
15:47:53 1068  BEGIN
15:47:53 1069  	 PROCS_GROUP_ACCOUNT_CRU_V22.UPDATE_GROUP_ACCOUNT(
15:47:53 1070  	   in_group_account_id => in_group_account_id,
15:47:53 1071  	   in_group_name => in_group_name,
15:47:53 1072  	   in_first_name => in_first_name,
15:47:53 1073  	   in_last_name => in_last_name,
15:47:53 1074  	   in_email => in_email,
15:47:53 1075  	   in_phone => in_phone,
15:47:53 1076  	   in_updated_by => in_updated_by
15:47:53 1077  	 );
15:47:53 1078  END UPDATE_GROUP_ACCOUNT;
15:47:53 1079  
15:47:53 1080  PROCEDURE UPDATE_GROUP_ACCOUNT_SEATS (
15:47:53 1081  	 in_group_account_id	  IN GROUP_ACCOUNT.ID%TYPE,
15:47:53 1082  	 in_seats		  IN GROUP_ACCOUNT.SEATS%TYPE,
15:47:53 1083  	 in_updated_by		  IN GROUP_ACCOUNT.UPDATED_BY%TYPE
15:47:53 1084  ) AS
15:47:53 1085  BEGIN
15:47:53 1086  	 PROCS_GROUP_ACCOUNT_CRU_V22.UPDATE_GROUP_ACCOUNT_SEATS(
15:47:53 1087  	   in_group_account_id => in_group_account_id,
15:47:53 1088  	   in_seats => in_seats,
15:47:53 1089  	   in_updated_by => in_updated_by
15:47:53 1090  	 );
15:47:53 1091  END UPDATE_GROUP_ACCOUNT_SEATS;
15:47:53 1092  
15:47:53 1093  END PROCS_GROUP_ACCOUNT_V22;
15:47:53 1094  .
15:47:53 SQL> /

Package body created.

Elapsed: 00:00:00.04
15:47:53 SQL> 
15:47:53 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_TEST_V22" AS
15:47:53   2  
15:47:53   3  PROCEDURE TEST_CLEAR_ALL IS
15:47:53   4  BEGIN
15:47:53   5  	DELETE FROM TAX_ADJUSTMENT;
15:47:53   6  	DELETE FROM LINE_ITEM_ADJUSTMENT;
15:47:53   7  	DELETE FROM INVOICE_ADJUSTMENT;
15:47:53   8  	DELETE FROM LICENSE;
15:47:53   9  	DELETE FROM OFFER_OFFER_CHAIN;
15:47:53  10  	delete from offer_product_offering;
15:47:53  11  	delete from tax;
15:47:53  12  	delete from discount_lineitem_adjustment; -- ? JUnitTests don't clear db in the moment of clear sproc corrections
15:47:53  13  	delete from discount_line_item; -- ?
15:47:53  14  	delete from discount; -- ?
15:47:53  15  	DELETE FROM LINE_ITEM;
15:47:53  16  	DELETE FROM PRODUCT_OFFERING_META_DATA;
15:47:53  17  	DELETE FROM PRODUCT_OFFERING;
15:47:53  18  	DELETE FROM PRODUCT;
15:47:53  19  	DELETE FROM INVOICE_NOTE;
15:47:53  20  	DELETE FROM GIFT_CERTIFICATE;
15:47:53  21  	DELETE FROM OFFER;
15:47:53  22  	DELETE FROM OFFER_CHAIN_META_DATA;
15:47:53  23  	DELETE FROM SUBSCRIPTION_NOTE;
15:47:53  24  	DELETE FROM SUBSCRIPTION_META_DATA;
15:47:53  25  	DELETE FROM SUBSCRIPTION;
15:47:53  26  	DELETE FROM CREDIT_CARD;
15:47:53  27  	DELETE FROM FLAGGED_ACCOUNTS;
15:47:53  28  	DELETE FROM ACCOUNT_NOTE;
15:47:53  29  	DELETE FROM ACCOUNT_LOCK;
15:47:53  30  	DELETE FROM ACCOUNT;
15:47:53  31  	DELETE FROM CHARGE;
15:47:53  32  	DELETE FROM TRANSACTION_ATTEMPT;
15:47:53  33  	DELETE FROM CHARGEBACK;
15:47:53  34  	DELETE FROM TRANSACTION;
15:47:53  35  	DELETE FROM INVOICE_NOTE;
15:47:53  36  	DELETE FROM INVOICE;
15:47:53  37  	DELETE FROM OFFER_CHAIN_ELIGIBILITY;
15:47:53  38  	DELETE FROM OFFER_CHAIN;
15:47:53  39  END TEST_CLEAR_ALL;
15:47:53  40  
15:47:53  41  PROCEDURE TEST_CLEAR_PRODUCTS AS
15:47:53  42  BEGIN
15:47:53  43  	DELETE FROM OFFER_OFFER_CHAIN;
15:47:53  44  	DELETE FROM OFFER_PRODUCT_OFFERING;
15:47:53  45  	DELETE FROM TAX;
15:47:53  46  	DELETE FROM PRODUCT_OFFERING;
15:47:53  47  	DELETE FROM PRODUCT;
15:47:53  48  	DELETE FROM OFFER;
15:47:53  49  	DELETE FROM OFFER_CHAIN_META_DATA;
15:47:53  50  	DELETE FROM OFFER_CHAIN;
15:47:53  51  	DELETE FROM OFFER_CHAIN_ELIGIBILITY;
15:47:53  52  END;
15:47:53  53  
15:47:53  54  /******************************************/
15:47:53  55  
15:47:53  56  PROCEDURE TEST_GET_ACCOUNT (
15:47:53  57  	in_group_id	IN NUMBER,
15:47:53  58  	out_result_set	OUT SYS_REFCURSOR
15:47:53  59  ) AS
15:47:53  60  BEGIN
15:47:53  61  
15:47:53  62  	OPEN out_result_set FOR
15:47:53  63  	SELECT *
15:47:53  64  	FROM
15:47:53  65  	  ACCOUNT
15:47:53  66  	WHERE
15:47:53  67  	  ACCOUNT.GROUP_ID = in_group_id;
15:47:53  68  
15:47:53  69  END TEST_GET_ACCOUNT;
15:47:53  70  
15:47:53  71  /*******************************************/
15:47:53  72  
15:47:53  73  PROCEDURE TEST_GET_SUBSCRIPTION (
15:47:53  74  	in_subscription_id IN NUMBER,
15:47:53  75  	out_result_set	   OUT SYS_REFCURSOR
15:47:53  76  ) AS
15:47:53  77  BEGIN
15:47:53  78  	OPEN out_result_set FOR
15:47:53  79  	SELECT *
15:47:53  80  	FROM
15:47:53  81  	  SUBSCRIPTION
15:47:53  82  	WHERE
15:47:53  83  	  SUBSCRIPTION.ID = in_subscription_id;
15:47:53  84  
15:47:53  85  END TEST_GET_SUBSCRIPTION;
15:47:53  86  
15:47:53  87  /***************************************************/
15:47:53  88  
15:47:53  89  PROCEDURE TEST_DELETE_INVOICE (
15:47:53  90  	in_invoice_id IN NUMBER
15:47:53  91  ) AS
15:47:53  92  var_line_item_id_set SYS_REFCURSOR;
15:47:53  93  var_line_item_id	   NUMBER;
15:47:53  94  
15:47:53  95  var_charge_id_set  SYS_REFCURSOR;
15:47:53  96  var_charge_id	 NUMBER;
15:47:53  97  var_transaction_id NUMBER;
15:47:53  98  BEGIN
15:47:53  99  	-- GET ACCOUNT'S LINE_ITEMS
15:47:53 100  	OPEN var_line_item_id_set FOR
15:47:53 101  	SELECT LINE_ITEM.ID FROM LINE_ITEM WHERE LINE_ITEM.INVOICE_ID = in_invoice_id;
15:47:53 102  	LOOP
15:47:53 103  	  FETCH var_line_item_id_set into var_line_item_id;
15:47:53 104  	  EXIT WHEN var_line_item_id_set%NOTFOUND;
15:47:53 105  
15:47:53 106  	  -- DELETE ADJUSTMENTS
15:47:53 107  	  FOR f_line_item_adjustments IN (SELECT * FROM LINE_ITEM_ADJUSTMENT WHERE LINE_ITEM_ID = var_line_item_id)
15:47:53 108  	  LOOP
15:47:53 109  
15:47:53 110  	    -- DELETE DISCOUNT ADJUSTMENTS
15:47:53 111  	    DELETE FROM DISCOUNT_LINEITEM_ADJUSTMENT WHERE LINE_ITEM_ADJUSTMENT_ID = f_line_item_adjustments.ID;
15:47:53 112  
15:47:53 113  	    -- DELETE TAX ADJUSTMENTS
15:47:53 114  	    DELETE FROM TAX_ADJUSTMENT WHERE LINE_ITEM_ADJUSTMENT_ID = f_line_item_adjustments.ID;
15:47:53 115  	  END LOOP;
15:47:53 116  
15:47:53 117  	  -- DELETE LINE ITEM ADJUSTMENTS
15:47:53 118  	  DELETE FROM LINE_ITEM_ADJUSTMENT WHERE LINE_ITEM_ID = var_line_item_id;
15:47:53 119  
15:47:53 120  	  -- DELETE DISCOUNT_LINE_ITEM
15:47:53 121  	  DELETE FROM DISCOUNT_LINE_ITEM WHERE DISCOUNT_LINE_ITEM.LINE_ITEM_ID = var_line_item_id;
15:47:53 122  
15:47:53 123  	  DELETE FROM TAX WHERE LINE_ITEM_ID = var_line_item_id;
15:47:53 124  
15:47:53 125  	  -- DELETE LINE ITEM
15:47:53 126  	  DELETE FROM LINE_ITEM WHERE LINE_ITEM.ID = var_line_item_id;
15:47:53 127  
15:47:53 128  	END LOOP;
15:47:53 129  
15:47:53 130  	-- DELETE INVOICE ADJUSTMENTS
15:47:53 131  	DELETE FROM INVOICE_ADJUSTMENT WHERE INVOICE_ID = in_invoice_id;
15:47:53 132  
15:47:53 133  	-- GET ACCOUNT'S CHARGES AND TRANSACTIONS
15:47:53 134  	OPEN var_charge_id_set FOR
15:47:53 135  	SELECT CHARGE.ID, CHARGE.TRANSACTION_ID FROM CHARGE WHERE CHARGE.INVOICE_ID = in_invoice_id;
15:47:53 136  	LOOP
15:47:53 137  	  FETCH var_charge_id_set into var_charge_id, var_transaction_id;
15:47:53 138  	  EXIT WHEN var_charge_id_set%NOTFOUND;
15:47:53 139  	  -- DELETE CHARGEBACK
15:47:53 140  	  DELETE FROM CHARGEBACK WHERE CHARGEBACK.TRANSACTION_ID = var_transaction_id;
15:47:53 141  
15:47:53 142  	  -- DELETE TRANSACTION ATTEMP
15:47:53 143  	  DELETE FROM TRANSACTION_ATTEMPT WHERE TRANSACTION_ATTEMPT.TRANSACTION_ID = var_transaction_id;
15:47:53 144  
15:47:53 145  	  -- DELETE CHARGE
15:47:53 146  	  DELETE FROM CHARGE WHERE CHARGE.ID = var_charge_id;
15:47:53 147  
15:47:53 148  	  -- DELETE TRANSACTION
15:47:53 149  	  DELETE FROM TRANSACTION WHERE TRANSACTION.ID = var_transaction_id;
15:47:53 150  	END LOOP;
15:47:53 151  
15:47:53 152  	-- DELETE INVOICE NOTES
15:47:53 153  	DELETE FROM INVOICE_NOTE WHERE INVOICE_NOTE.INVOICE_ID = in_invoice_id;
15:47:53 154  
15:47:53 155  	-- DELETE INVOICE
15:47:53 156  	DELETE FROM INVOICE WHERE INVOICE.ID = in_invoice_id;
15:47:53 157  END;
15:47:53 158  
15:47:53 159  PROCEDURE TEST_DELETE_USER_ACCOUNT (
15:47:53 160  	in_group_id IN NUMBER
15:47:53 161  ) AS
15:47:53 162  -- VARIABLES
15:47:53 163  var_account_id NUMBER;
15:47:53 164  
15:47:53 165  -- CURSORS
15:47:53 166  var_subscription_id_set SYS_REFCURSOR;
15:47:53 167  var_subscription_id     NUMBER;
15:47:53 168  
15:47:53 169  var_license_id_set SYS_REFCURSOR;
15:47:53 170  var_license_id	 NUMBER;
15:47:53 171  var_invoice_id	 NUMBER;
15:47:53 172  
15:47:53 173  var_gift_certificate_id_set SYS_REFCURSOR;
15:47:53 174  var_gift_certificate_id	  NUMBER;
15:47:53 175  var_gc_purchase_invoice_id  NUMBER;
15:47:53 176  BEGIN
15:47:53 177  
15:47:53 178   /*FOR f_account in (
15:47:53 179  	  select id from account where group_id = in_group_id
15:47:53 180  	)
15:47:53 181  	loop
15:47:53 182  
15:47:53 183  	  -- delete account
15:47:53 184  	  delete from account where id = f_account.id;
15:47:53 185  
15:47:53 186  	end loop;*/
15:47:53 187  
15:47:53 188  	BEGIN
15:47:53 189  	  SELECT
15:47:53 190  	    ACCOUNT.ID into var_account_id
15:47:53 191  	  FROM
15:47:53 192  	    ACCOUNT
15:47:53 193  	  WHERE
15:47:53 194  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53 195  	  EXCEPTION
15:47:53 196  	    WHEN NO_DATA_FOUND THEN
15:47:53 197  	      -- Nothing to do
15:47:53 198  	      RETURN;
15:47:53 199  	END;
15:47:53 200  
15:47:53 201  	-- GET ACCOUNT'S SUBSCRIPTIONS
15:47:53 202  	OPEN var_subscription_id_set FOR
15:47:53 203  	SELECT SUBSCRIPTION.ID FROM SUBSCRIPTION WHERE SUBSCRIPTION.ACCOUNT_ID = var_account_id;
15:47:53 204  	LOOP
15:47:53 205  	  FETCH var_subscription_id_set into var_subscription_id;
15:47:53 206  	  EXIT WHEN var_subscription_id_set%NOTFOUND;
15:47:53 207  
15:47:53 208  	  -- GET ACCOUNT'S LICENSES AND INVOICES
15:47:53 209  	  OPEN var_license_id_set FOR
15:47:53 210  	  SELECT LICENSE.ID, LICENSE.INVOICE_ID FROM LICENSE WHERE LICENSE.SUBSCRIPTION_ID = var_subscription_id;
15:47:53 211  	  LOOP
15:47:53 212  	    FETCH var_license_id_set into var_license_id, var_invoice_id;
15:47:53 213  	    EXIT WHEN var_license_id_set%NOTFOUND;
15:47:53 214  
15:47:53 215  
15:47:53 216  	    -- GET GC WHERE PURCHASE_INVOICE_ID = invoice
15:47:53 217  	    OPEN var_gift_certificate_id_set FOR
15:47:53 218  	    SELECT GIFT_CERTIFICATE.ID, GIFT_CERTIFICATE.PURCHASE_INVOICE_ID FROM GIFT_CERTIFICATE WHERE GIFT_CERTIFICATE.FINALIZED_INVOICE_ID = var_invoice_id;
15:47:53 219  	    LOOP
15:47:53 220  	      FETCH var_gift_certificate_id_set into var_gift_certificate_id, var_gc_purchase_invoice_id;
15:47:53 221  	      EXIT WHEN var_gift_certificate_id_set%NOTFOUND;
15:47:53 222  
15:47:53 223  	      -- DELETE GIFT_CERTIFICATE
15:47:53 224  	      DELETE FROM GIFT_CERTIFICATE WHERE GIFT_CERTIFICATE.ID = var_gift_certificate_id;
15:47:53 225  
15:47:53 226  	      -- DELETE LICENSE
15:47:53 227  	      IF TEST_IS_INVOICE_EXISTS(var_gc_purchase_invoice_id) = 1 THEN
15:47:53 228  		TEST_DELETE_INVOICE(var_gc_purchase_invoice_id);
15:47:53 229  	      END IF;
15:47:53 230  
15:47:53 231  	    END LOOP;
15:47:53 232  
15:47:53 233  	    -- DELETE GIFT_CERTIFICATE WHERE GC.REDEEMER_GROUP_ID = out group_id
15:47:53 234  	    DELETE FROM GIFT_CERTIFICATE WHERE GIFT_CERTIFICATE.REDEEMER_GROUP_ID = in_group_id;
15:47:53 235  
15:47:53 236  	    -- DELETE LICENSE
15:47:53 237  	    DELETE FROM LICENSE WHERE LICENSE.ID = var_license_id;
15:47:53 238  
15:47:53 239  	    -- DELETE INVOICE
15:47:53 240  	    IF TEST_IS_INVOICE_EXISTS(var_invoice_id) = 1 THEN
15:47:53 241  	      TEST_DELETE_INVOICE(var_invoice_id);
15:47:53 242  	    END IF;
15:47:53 243  	  END LOOP;
15:47:53 244  
15:47:53 245  	  -- DELETE SUBSCRIPTION_NOTE
15:47:53 246  	  DELETE FROM SUBSCRIPTION_NOTE WHERE SUBSCRIPTION_NOTE.SUBSCRIPTION_ID = var_subscription_id;
15:47:53 247  
15:47:53 248  	  -- DELETE SUBSCRIPTION META_DATA
15:47:53 249  	  DELETE FROM SUBSCRIPTION_META_DATA WHERE SUBSCRIPTION_META_DATA.SUBSCRIPTION_ID = var_subscription_id;
15:47:53 250  
15:47:53 251  	  -- DELETE SUBSCRIPTION
15:47:53 252  	  DELETE FROM SUBSCRIPTION WHERE SUBSCRIPTION.ID = var_subscription_id;
15:47:53 253  	END LOOP;
15:47:53 254  
15:47:53 255  	-- DELETE CREDIT_CARDS
15:47:53 256  	DELETE FROM CREDIT_CARD WHERE CREDIT_CARD.ACCOUNT_ID = var_account_id;
15:47:53 257  
15:47:53 258  	-- DELETE PAYPAL
15:47:53 259  	DELETE FROM PAYPAL WHERE PAYPAL.ACCOUNT_ID = var_account_id;
15:47:53 260  
15:47:53 261  	-- DELETE FLAGS
15:47:53 262  	DELETE FROM FLAGGED_ACCOUNTS WHERE FLAGGED_ACCOUNTS.ACCOUNT_ID = var_account_id;
15:47:53 263  
15:47:53 264  	-- DELETE ACCOUNT NOTES
15:47:53 265  	DELETE FROM ACCOUNT_NOTE WHERE ACCOUNT_NOTE.ACCOUNT_ID = var_account_id;
15:47:53 266  
15:47:53 267  	-- DELETE INVOICES AND GC'S WHERE USER IS PURCHASER
15:47:53 268  	OPEN var_gift_certificate_id_set FOR
15:47:53 269  	SELECT GIFT_CERTIFICATE.ID, GIFT_CERTIFICATE.PURCHASE_INVOICE_ID FROM GIFT_CERTIFICATE WHERE GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id;
15:47:53 270  	LOOP
15:47:53 271  	  FETCH var_gift_certificate_id_set into var_gift_certificate_id, var_gc_purchase_invoice_id;
15:47:53 272  	  EXIT WHEN var_gift_certificate_id_set%NOTFOUND;
15:47:53 273  
15:47:53 274  	  -- DELETE GIFT CERTIFICATE
15:47:53 275  	  DELETE FROM GIFT_CERTIFICATE WHERE GIFT_CERTIFICATE.ID = var_gift_certificate_id;
15:47:53 276  
15:47:53 277  	  -- DELETE INVOICE
15:47:53 278  	  IF TEST_IS_INVOICE_EXISTS(var_gc_purchase_invoice_id) = 1 THEN
15:47:53 279  	    TEST_DELETE_INVOICE(var_gc_purchase_invoice_id);
15:47:53 280  	  END IF;
15:47:53 281  	END LOOP;
15:47:53 282  
15:47:53 283  	-- DELETE LOCKS
15:47:53 284  	DELETE FROM ACCOUNT_LOCK WHERE ACCOUNT_ID = var_account_id;
15:47:53 285  
15:47:53 286  	-- DELETE ACCOUNT
15:47:53 287  	DELETE FROM ACCOUNT WHERE ACCOUNT.ID = var_account_id;
15:47:53 288  
15:47:53 289  END TEST_DELETE_USER_ACCOUNT;
15:47:53 290  
15:47:53 291  PROCEDURE TEST_DELETE_USER_ACCOUNTS  (
15:47:53 292  	in_start_group_id IN NUMBER,
15:47:53 293  	in_end_group_id   IN NUMBER
15:47:53 294  ) IS
15:47:53 295   gid ACCOUNT.GROUP_ID%TYPE;
15:47:53 296   CURSOR c (v_from NUMBER, v_to NUMBER) IS SELECT ACCOUNT.GROUP_ID FROM ACCOUNT WHERE GROUP_ID BETWEEN v_from AND v_to;
15:47:53 297  BEGIN
15:47:53 298  -- arosolovskiy refactoring: call delete_user_account only "COUNT(group_id) WHERE ...." times instead of "in_end_group_id - in_start_group_id" times;
15:47:53 299  	/*
15:47:53 300  	FOR var_group_id IN in_start_group_id..in_end_group_id
15:47:53 301  	LOOP
15:47:53 302  	  TEST_DELETE_USER_ACCOUNT(var_group_id);
15:47:53 303  	END LOOP;*/
15:47:53 304  	OPEN c(in_start_group_id, in_end_group_id);
15:47:53 305  	WHILE c%ISOPEN LOOP
15:47:53 306  	  FETCH c INTO gid;
15:47:53 307  	  IF c%NOTFOUND THEN
15:47:53 308  	   CLOSE c;
15:47:53 309  	  END IF;
15:47:53 310  	  TEST_DELETE_USER_ACCOUNT(gid);
15:47:53 311  	END LOOP;
15:47:53 312  END;
15:47:53 313  
15:47:53 314  /**********************************************************/
15:47:53 315  
15:47:53 316  FUNCTION TEST_IS_INVOICE_EXISTS(
15:47:53 317  /*
15:47:53 318  1 - exists
15:47:53 319  0 - not exists
15:47:53 320  */
15:47:53 321  	in_invoice_id IN NUMBER
15:47:53 322  ) RETURN NUMBER AS
15:47:53 323  var_invoice_count NUMBER;
15:47:53 324  BEGIN
15:47:53 325  	SELECT
15:47:53 326  	  COUNT(*) into var_invoice_count
15:47:53 327  	FROM
15:47:53 328  	  INVOICE
15:47:53 329  	WHERE
15:47:53 330  	  INVOICE.ID = in_invoice_id;
15:47:53 331  	IF var_invoice_count = 0 THEN
15:47:53 332  	  RETURN 0;
15:47:53 333  	ELSE
15:47:53 334  	  RETURN 1;
15:47:53 335  	END IF;
15:47:53 336  END;
15:47:53 337  
15:47:53 338  PROCEDURE TEST_GET_INVOICE_INFO (
15:47:53 339  	in_invoice_id  IN NUMBER,
15:47:53 340  	out_result_set OUT SYS_REFCURSOR
15:47:53 341  ) AS
15:47:53 342  SPROC_NAME      CONSTANT VARCHAR2(21) := 'TEST_GET_INVOICE_INFO';
15:47:53 343  BEGIN
15:47:53 344  
15:47:53 345  	 OPEN out_result_set FOR SELECT
15:47:53 346  	    in_invoice_id AS "INVOICE_ID",
15:47:53 347  	    INVOICE.INVOICE_STATUS_ID,
15:47:53 348  	    PROCS_INVOICE_V22.F_CALCULATE_INVOICE_AMOUNT(in_invoice_id) AS "INVOICE_AMOUNT",
15:47:53 349  	    CHARGE.ID AS "CHARGE_ID",
15:47:53 350  	    CHARGE.CHARGE_AMOUNT,
15:47:53 351  	    CHARGE.TRANSACTION_ID,
15:47:53 352  	    TRANSACTION.TRANSACTION_STATUS_ID
15:47:53 353  	  FROM CHARGE INNER JOIN INVOICE ON INVOICE.ID = CHARGE.INVOICE_ID INNER JOIN TRANSACTION ON TRANSACTION.ID = CHARGE.TRANSACTION_ID WHERE CHARGE.INVOICE_ID = in_invoice_id ORDER BY INVOICE.ID, CHARGE.ID, TRANSACTION.ID;
15:47:53 354  
15:47:53 355  END TEST_GET_INVOICE_INFO;
15:47:53 356  
15:47:53 357  /******************************************************************************/
15:47:53 358  
15:47:53 359  PROCEDURE TEST_DELETE_OFFER_CHAIN(
15:47:53 360  	in_offer_chain_id in number
15:47:53 361  ) as
15:47:53 362  begin
15:47:53 363  
15:47:53 364  	for v_offer_chain in (
15:47:53 365  	  select och.id from offer_chain och where och.id = in_offer_chain_id
15:47:53 366  	)
15:47:53 367  	loop
15:47:53 368  
15:47:53 369  	  for v_offer in (
15:47:53 370  	    select offer_id as id from offer_offer_chain where offer_chain_id = v_offer_chain.id
15:47:53 371  	  )
15:47:53 372  	  loop
15:47:53 373  
15:47:53 374  	    for v_product_offering in (
15:47:53 375  	      select
15:47:53 376  		product_offering.id,
15:47:53 377  		product_offering.product_id
15:47:53 378  	      from
15:47:53 379  		offer_product_offering
15:47:53 380  		inner join product_offering on offer_product_offering.product_offering_id = product_offering.id
15:47:53 381  	      where offer_product_offering.offer_id = v_offer.id
15:47:53 382  	    )
15:47:53 383  	    loop
15:47:53 384  
15:47:53 385  	      -- delete product eligibility
15:47:53 386  	      delete from product_eligibility where product_id = v_product_offering.product_id;
15:47:53 387  
15:47:53 388  	      -- delete meta data
15:47:53 389  	      delete from product_offering_meta_data where product_offering_id = v_product_offering.id;
15:47:53 390  
15:47:53 391  	      -- delete product
15:47:53 392  	      delete from product where id = v_product_offering.product_id;
15:47:53 393  
15:47:53 394  	      -- delete product_offering
15:47:53 395  	      delete from product_offering where id = v_product_offering.id;
15:47:53 396  
15:47:53 397  	    end loop;
15:47:53 398  
15:47:53 399  	    -- delete data from offer_product_offering table
15:47:53 400  	    delete from offer_product_offering where offer_id = v_offer.id;
15:47:53 401  
15:47:53 402  	    -- delete data from offer_offer_chain table
15:47:53 403  	    delete from offer_offer_chain where offer_chain_id = v_offer_chain.id;
15:47:53 404  
15:47:53 405  	    -- delete offer
15:47:53 406  	    delete from offer where id = v_offer.id;
15:47:53 407  
15:47:53 408  	  end loop;
15:47:53 409  
15:47:53 410  	  -- delete offer_chain_eligibility
15:47:53 411  	  delete from offer_chain_eligibility where offer_chain_id = v_offer_chain.id;
15:47:53 412  
15:47:53 413  	  -- delete metadata
15:47:53 414  	  delete from offer_chain_meta_data where offer_chain_id = v_offer_chain.id;
15:47:53 415  
15:47:53 416  	  -- delete offer chain
15:47:53 417  	  delete from offer_chain where id = v_offer_chain.id;
15:47:53 418  
15:47:53 419  	end loop;
15:47:53 420  
15:47:53 421  end;
15:47:53 422  
15:47:53 423  END PROCS_TEST_V22;
15:47:53 424  .
15:47:53 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:53 SQL> 
15:47:53 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_ACCOUNT_V22" AS
15:47:53   2  
15:47:53   3  PROCEDURE INVOICE_IDS_BY_GROUP_ID (
15:47:53   4  	in_group_id    IN  NUMBER,
15:47:53   5  	out_result_set OUT SYS_REFCURSOR
15:47:53   6  ) AS
15:47:53   7  SPROC_NAME CONSTANT VARCHAR2(32) := 'INVOICE_IDS_BY_GROUP_ID';
15:47:53   8  BEGIN
15:47:53   9  	OPEN out_result_set FOR
15:47:53  10  	SELECT
15:47:53  11  	  Invoice.Id
15:47:53  12  	FROM
15:47:53  13  	  LICENSE
15:47:53  14  	  INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:53  15  	  INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
15:47:53  16  	  INNER JOIN OFFER_CHAIN ON SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:53  17  	  INNER JOIN INVOICE_STATUS ON INVOICE.INVOICE_STATUS_ID = INVOICE_STATUS.ID
15:47:53  18  	Where
15:47:53  19  	  SUBSCRIPTION.ACCOUNT_ID IN (SELECT ID FROM ACCOUNT WHERE GROUP_ID = in_group_id) AND
15:47:53  20  	  INVOICE.INVOICE_STATUS_ID = GLOBAL_STATUSES_V22.INVOICE_OPEN;
15:47:53  21  END INVOICE_IDS_BY_GROUP_ID;
15:47:53  22  
15:47:53  23  FUNCTION GET_GRACE_START_DATE(
15:47:53  24  	in_subscription_id IN NUMBER
15:47:53  25  ) RETURN DATE AS
15:47:53  26  SPROC_NAME	   CONSTANT VARCHAR2(32) := 'GET_GRACE_START_DATE';
15:47:53  27  grace_start_date_var DATE;
15:47:53  28  BEGIN
15:47:53  29  	SELECT GRACE_START_DATE into grace_start_date_var
15:47:53  30  	FROM
15:47:53  31  	  (
15:47:53  32  	    SELECT
15:47:53  33  	      GRACE_START_DATE
15:47:53  34  	    FROM
15:47:53  35  	      LICENSE
15:47:53  36  	    WHERE
15:47:53  37  	      LICENSE.SUBSCRIPTION_ID = in_subscription_id
15:47:53  38  	    ORDER BY
15:47:53  39  	      LICENSE.END_DATE DESC
15:47:53  40  	  )
15:47:53  41  	WHERE
15:47:53  42  	  ROWNUM <= 1;
15:47:53  43  
15:47:53  44  	RETURN grace_start_date_var;
15:47:53  45  END GET_GRACE_START_DATE;
15:47:53  46  
15:47:53  47  FUNCTION GET_GRACE_END_DATE(
15:47:53  48  	in_subscription_id IN NUMBER
15:47:53  49  ) RETURN DATE AS
15:47:53  50  SPROC_NAME	 CONSTANT VARCHAR2(32) := 'GET_GRACE_END_DATE';
15:47:53  51  grace_end_date_var DATE;
15:47:53  52  BEGIN
15:47:53  53  	SELECT GRACE_END_DATE into grace_end_date_var
15:47:53  54  	FROM
15:47:53  55  	  (
15:47:53  56  	    SELECT
15:47:53  57  	      GRACE_END_DATE
15:47:53  58  	    FROM
15:47:53  59  	      LICENSE
15:47:53  60  	    WHERE
15:47:53  61  	      LICENSE.SUBSCRIPTION_ID = in_subscription_id
15:47:53  62  	    ORDER BY
15:47:53  63  	      LICENSE.END_DATE DESC
15:47:53  64  	  )
15:47:53  65  	WHERE ROWNUM <= 1;
15:47:53  66  
15:47:53  67  	RETURN grace_end_date_var;
15:47:53  68  END GET_GRACE_END_DATE;
15:47:53  69  
15:47:53  70  
15:47:53  71  
15:47:53  72  PROCEDURE ANNOTATE_ACCOUNT (
15:47:53  73  	in_group_id   IN  NUMBER,
15:47:53  74  	in_agent_id   IN  NUMBER,
15:47:53  75  	in_note       IN  VARCHAR2,
15:47:53  76  	in_created_by IN  VARCHAR2
15:47:53  77  ) AS
15:47:53  78  SPROC_NAME  CONSTANT VARCHAR2(16) := 'ANNOTATE_ACCOUNT';
15:47:53  79  -- VARIABLES
15:47:53  80  var_account_id	  NUMBER;
15:47:53  81  var_account_note_id NUMBER;
15:47:53  82  -- EXCEPTIONS
15:47:53  83  BAD_ACCOUNT_ID EXCEPTION;
15:47:53  84  BEGIN
15:47:53  85  
15:47:53  86  	-- Get account id
15:47:53  87  	BEGIN
15:47:53  88  	  SELECT
15:47:53  89  	    ACCOUNT.ID into var_account_id
15:47:53  90  	  FROM
15:47:53  91  	    ACCOUNT
15:47:53  92  	  WHERE
15:47:53  93  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53  94  	  EXCEPTION
15:47:53  95  	    WHEN NO_DATA_FOUND THEN
15:47:53  96  	      RAISE BAD_ACCOUNT_ID;
15:47:53  97  	END;
15:47:53  98  
15:47:53  99  	-- Insert new row into ACCOUNT_NOTE table
15:47:53 100  	PROCS_ACCOUNT_CRU_V22.CREATE_ACCOUNT_NOTE(
15:47:53 101  	  inout_account_note_id => var_account_note_id,
15:47:53 102  	  in_agent_id		=> in_agent_id,
15:47:53 103  	  in_account_id 	=> var_account_id,
15:47:53 104  	  in_note		=> in_note,
15:47:53 105  	  in_created_by 	=> in_created_by
15:47:53 106  	);
15:47:53 107  
15:47:53 108  EXCEPTION
15:47:53 109  WHEN BAD_ACCOUNT_ID THEN
15:47:53 110  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 111  	  SPROC_NAME, 'No such group id');
15:47:53 112  WHEN OTHERS THEN
15:47:53 113  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 114  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 115  END ANNOTATE_ACCOUNT;
15:47:53 116  
15:47:53 117  PROCEDURE ASSERT_ACCOUNT_EXISTS (
15:47:53 118  	in_group_id IN	NUMBER,
15:47:53 119  	out_exists  OUT NUMBER
15:47:53 120  ) AS
15:47:53 121  -- VARIABLES
15:47:53 122  var_found_id  NUMBER;
15:47:53 123  SPROC_NAME    CONSTANT VARCHAR2(21) := 'ASSERT_ACCOUNT_EXISTS';
15:47:53 124  BEGIN
15:47:53 125  	SELECT ACCOUNT.ID INTO var_found_id FROM ACCOUNT WHERE ACCOUNT.GROUP_ID = in_group_id;
15:47:53 126  	out_exists := GLOBAL_CONSTANTS_V22.TRUE;
15:47:53 127  EXCEPTION
15:47:53 128  WHEN NO_DATA_FOUND THEN
15:47:53 129  	out_exists := GLOBAL_CONSTANTS_V22.FALSE;
15:47:53 130  WHEN OTHERS THEN
15:47:53 131  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 132  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 133  END ASSERT_ACCOUNT_EXISTS;
15:47:53 134  
15:47:53 135  PROCEDURE DISABLE_ACCOUNT (
15:47:53 136  	in_group_id   IN NUMBER,
15:47:53 137  	in_updated_by IN VARCHAR2,
15:47:53 138  	in_note       IN VARCHAR2,
15:47:53 139  	in_agent_id   IN NUMBER
15:47:53 140  ) AS
15:47:53 141  SPROC_NAME	      CONSTANT VARCHAR2(15) := 'DISABLE_ACCOUNT';
15:47:53 142  var_account_id	      NUMBER;
15:47:53 143  current_account_status  NUMBER;
15:47:53 144  
15:47:53 145  var_active_subscriptions_num NUMBER;
15:47:53 146  var_pending_invoices_num	   NUMBER;
15:47:53 147  
15:47:53 148  -- EXCEPTIONS
15:47:53 149  BAD_ACOUNT_ID		EXCEPTION;
15:47:53 150  BAD_CURRENT_ACC_STATUS	EXCEPTION;
15:47:53 151  PENDING_INVOICES_FOUND	EXCEPTION;
15:47:53 152  ACCOUNT_HAS_ACIVE_SUBSCRS EXCEPTION;
15:47:53 153  CAN_NOT_ANNOTATE_ACCOUNT	EXCEPTION;
15:47:53 154  EXCEPTION_MESSAGE 	VARCHAR2(1024);
15:47:53 155  BEGIN
15:47:53 156  
15:47:53 157  	-- Get account's status and id
15:47:53 158  	BEGIN
15:47:53 159  	  SELECT
15:47:53 160  	    ACCOUNT.ACCOUNT_STATUS_ID,
15:47:53 161  	    ACCOUNT.ID
15:47:53 162  	  INTO
15:47:53 163  	    current_account_status,
15:47:53 164  	    var_account_id
15:47:53 165  	  FROM ACCOUNT
15:47:53 166  	  WHERE
15:47:53 167  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53 168  	  EXCEPTION
15:47:53 169  	    WHEN NO_DATA_FOUND THEN
15:47:53 170  	      RAISE BAD_ACOUNT_ID;
15:47:53 171  	END;
15:47:53 172  
15:47:53 173  	-- For now, we can disable account whenever
15:47:53 174  	IF current_account_status = GLOBAL_STATUSES_V22.ACCOUNT_DISABLED THEN
15:47:53 175  	  RAISE BAD_CURRENT_ACC_STATUS;
15:47:53 176  	END IF;
15:47:53 177  
15:47:53 178  	-- Checks for out outstanding balances
15:47:53 179  	-- CHECK: No outstanding balances. If monies are due, then we can not cancel account. Return ERROR.
15:47:53 180  	SELECT
15:47:53 181  	  COUNT(*) into var_pending_invoices_num
15:47:53 182  	FROM
15:47:53 183  	  LICENSE
15:47:53 184  	    INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:53 185  	    INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
15:47:53 186  	WHERE
15:47:53 187  	  SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:53 188  	  AND INVOICE.INVOICE_STATUS_ID IN ( SELECT GLOBAL_STATUSES_V22.INVOICE_OPEN FROM DUAL );
15:47:53 189  
15:47:53 190  	IF var_pending_invoices_num > 0 THEN
15:47:53 191  	  RAISE PENDING_INVOICES_FOUND;
15:47:53 192  	END IF;
15:47:53 193  
15:47:53 194  	SELECT
15:47:53 195  	  COUNT(*) into var_active_subscriptions_num
15:47:53 196  	FROM
15:47:53 197  	  SUBSCRIPTION
15:47:53 198  	WHERE
15:47:53 199  	  SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:53 200  	  AND (
15:47:53 201  	    SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE
15:47:53 202  	    OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_SUSPENDED
15:47:53 203  	    OR SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_IN_GRACE_PERIOD);
15:47:53 204  
15:47:53 205  	IF var_active_subscriptions_num > 0 THEN
15:47:53 206  	  RAISE ACCOUNT_HAS_ACIVE_SUBSCRS;
15:47:53 207  	END IF;
15:47:53 208  
15:47:53 209  	PROCS_ACCOUNT_V22.UPDATE_ACCOUNT_STATUS(
15:47:53 210  	  in_account_id        => var_account_id,
15:47:53 211  	  in_account_status_id => GLOBAL_STATUSES_V22.ACCOUNT_DISABLED,
15:47:53 212  	  in_updated_by        => in_updated_by
15:47:53 213  	);
15:47:53 214  
15:47:53 215  	-- Annotate account
15:47:53 216  	IF in_note IS NOT NULL THEN
15:47:53 217  	  BEGIN
15:47:53 218  	    PROCS_ACCOUNT_V22.ANNOTATE_ACCOUNT(
15:47:53 219  	      in_group_id   => in_group_id,
15:47:53 220  	      in_agent_id   => in_agent_id,
15:47:53 221  	      in_note	    => in_note,
15:47:53 222  	      in_created_by => in_updated_by
15:47:53 223  	    );
15:47:53 224  	    EXCEPTION
15:47:53 225  	      WHEN OTHERS THEN
15:47:53 226  		EXCEPTION_MESSAGE := SQLERRM;
15:47:53 227  		RAISE CAN_NOT_ANNOTATE_ACCOUNT;
15:47:53 228  	  END;
15:47:53 229  	END IF;
15:47:53 230  
15:47:53 231  EXCEPTION
15:47:53 232  WHEN ACCOUNT_HAS_ACIVE_SUBSCRS THEN
15:47:53 233  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:53 234  	  SPROC_NAME, 'Account has active or suspended subsciptions');
15:47:53 235  WHEN BAD_CURRENT_ACC_STATUS THEN
15:47:53 236  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:53 237  	  SPROC_NAME, 'Current account status is "disabled". Can not disable it one more time.');
15:47:53 238  WHEN PENDING_INVOICES_FOUND THEN
15:47:53 239  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:53 240  	  SPROC_NAME, 'Opened/Pending invoices founded');
15:47:53 241  WHEN BAD_ACOUNT_ID THEN
15:47:53 242  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 243  	  SPROC_NAME, 'No such account');
15:47:53 244  WHEN CAN_NOT_ANNOTATE_ACCOUNT THEN
15:47:53 245  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:53 246  	  SPROC_NAME, 'Could not annotate account', EXCEPTION_MESSAGE);
15:47:53 247  WHEN OTHERS THEN
15:47:53 248  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 249  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 250  END DISABLE_ACCOUNT;
15:47:53 251  
15:47:53 252  PROCEDURE CREATE_ACTIVE_ACCOUNT(
15:47:53 253  	in_group_id	   IN  ACCOUNT.GROUP_ID%TYPE,
15:47:53 254  	in_created_by	   IN  ACCOUNT.CREATED_BY%TYPE,
15:47:53 255  	out_new_account_id OUT ACCOUNT.ID%TYPE
15:47:53 256  ) AS
15:47:53 257  SPROC_NAME CONSTANT VARCHAR2(32) := 'CREATE_ACTIVE_ACCOUNT';
15:47:53 258  var_count  NUMBER  := 0;
15:47:53 259  BEGIN
15:47:53 260  	SELECT COUNT(1) INTO var_count FROM ACCOUNT WHERE GROUP_ID = in_group_id;
15:47:53 261  
15:47:53 262  	IF (var_count = 0) THEN
15:47:53 263  	  PROCS_ACCOUNT_CRU_V22.CREATE_ACCOUNT(
15:47:53 264  	      out_account_id	    => out_new_account_id,
15:47:53 265  	      in_account_status_id  => GLOBAL_STATUSES_V22.ACCOUNT_ACTIVE,
15:47:53 266  	      in_group_id	    => in_group_id,
15:47:53 267  	      in_created_by	    => in_created_by,
15:47:53 268  	      in_system_category_id => GLOBAL_ENUMS_V22.SYSTEM_CATEGORY_LIVE
15:47:53 269  	  );
15:47:53 270  	ELSE
15:47:53 271  	  out_new_account_id := NULL;
15:47:53 272  	END IF;
15:47:53 273  END CREATE_ACTIVE_ACCOUNT;
15:47:53 274  
15:47:53 275  PROCEDURE REACTIVATE_ACCOUNT (
15:47:53 276  	in_group_id   IN NUMBER,
15:47:53 277  	in_updated_by IN VARCHAR2,
15:47:53 278  	in_note       IN VARCHAR2,
15:47:53 279  	in_agent_id   IN NUMBER
15:47:53 280  ) AS
15:47:53 281  -- VARIABLES
15:47:53 282  SPROC_NAME	      CONSTANT VARCHAR2(18) := 'REACTIVATE_ACCOUNT';
15:47:53 283  var_account_id	      NUMBER;
15:47:53 284  current_account_status  NUMBER;
15:47:53 285  
15:47:53 286  -- EXCEPTIONS
15:47:53 287  BAD_CURRENT_ACC_STATUS EXCEPTION;
15:47:53 288  CAN_NOT_CREATE_NOTE    EXCEPTION;
15:47:53 289  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:53 290  BEGIN
15:47:53 291  	-- Get account id, status
15:47:53 292  	SELECT
15:47:53 293  	  ACCOUNT.ACCOUNT_STATUS_ID,
15:47:53 294  	  ACCOUNT.ID
15:47:53 295  	INTO
15:47:53 296  	  current_account_status,
15:47:53 297  	  var_account_id
15:47:53 298  	FROM ACCOUNT
15:47:53 299  	WHERE
15:47:53 300  	  ACCOUNT.GROUP_ID = in_group_id;
15:47:53 301  
15:47:53 302  	IF current_account_status != GLOBAL_STATUSES_V22.ACCOUNT_FROZEN THEN
15:47:53 303  	  RAISE BAD_CURRENT_ACC_STATUS;
15:47:53 304  	END IF;
15:47:53 305  
15:47:53 306  	-- Change account status
15:47:53 307  	PROCS_ACCOUNT_V22.UPDATE_ACCOUNT_STATUS(
15:47:53 308  	  in_account_id        => var_account_id,
15:47:53 309  	  in_updated_by        => in_updated_by,
15:47:53 310  	  in_account_status_id => GLOBAL_STATUSES_V22.ACCOUNT_ACTIVE
15:47:53 311  	);
15:47:53 312  
15:47:53 313  	-- Add note
15:47:53 314  	BEGIN
15:47:53 315  	  PROCS_ACCOUNT_V22.ANNOTATE_ACCOUNT(
15:47:53 316  	    in_group_id   => in_group_id,
15:47:53 317  	    in_agent_id   => in_agent_id,
15:47:53 318  	    in_note	  => in_note,
15:47:53 319  	    in_created_by => in_updated_by
15:47:53 320  	  );
15:47:53 321  	  EXCEPTION
15:47:53 322  	    WHEN OTHERS THEN
15:47:53 323  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:53 324  	      RAISE CAN_NOT_CREATE_NOTE;
15:47:53 325  	END;
15:47:53 326  
15:47:53 327  EXCEPTION
15:47:53 328  WHEN BAD_CURRENT_ACC_STATUS THEN
15:47:53 329  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:53 330  	  SPROC_NAME, 'Current account status is not "frozen"');
15:47:53 331  WHEN NO_DATA_FOUND THEN
15:47:53 332  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 333  	  SPROC_NAME, 'Could not find account with given group ID');
15:47:53 334  WHEN CAN_NOT_CREATE_NOTE THEN
15:47:53 335  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:53 336  	  SPROC_NAME, 'Could not annotate account');
15:47:53 337  WHEN OTHERS THEN
15:47:53 338  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 339  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 340  END REACTIVATE_ACCOUNT;
15:47:53 341  
15:47:53 342  PROCEDURE GET_ACCOUNT_CREDIT_CARDS (
15:47:53 343  	in_group_id    IN ACCOUNT.GROUP_ID%TYPE,
15:47:53 344  	in_status_id   IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT GLOBAL_STATUSES_V22.CREDIT_CARD_ACTIVE,
15:47:53 345  	out_result_set OUT SYS_REFCURSOR
15:47:53 346  ) AS
15:47:53 347  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ACCOUNT_CREDIT_CARDS';
15:47:53 348  BEGIN
15:47:53 349  	OPEN out_result_set FOR
15:47:53 350  	  SELECT
15:47:53 351  	    CREDIT_CARD.ID,
15:47:53 352  	    CREDIT_CARD.ACCOUNT_ID,
15:47:53 353  	    CREDIT_CARD.INSTRUMENT_NAME,
15:47:53 354  	    CREDIT_CARD.PRIVATE_CARD_HOLDER_NAME,
15:47:53 355  	    CREDIT_CARD.PRIVATE_STREET_ADDRESS,
15:47:53 356  	    CREDIT_CARD.PRIVATE_STREET_ADDRESS2,
15:47:53 357  	    CREDIT_CARD.STATE,
15:47:53 358  	    CREDIT_CARD.CITY,
15:47:53 359  	    CREDIT_CARD.POSTAL_CODE,
15:47:53 360  	    CREDIT_CARD.COUNTRY,
15:47:53 361  	    CREDIT_CARD.LAST_FOUR_CC,
15:47:53 362  	    CREDIT_CARD.EXPIRATION_DATE,
15:47:53 363  	    CREDIT_CARD.CREDIT_CARD_TYPE_ID,
15:47:53 364  	    CREDIT_CARD.SECRET_TOKEN,
15:47:53 365  	    CREDIT_CARD.CREATE_DATE,
15:47:53 366  	    CREDIT_CARD.CREATED_BY,
15:47:53 367  	    CREDIT_CARD.UPDATE_DATE,
15:47:53 368  	    CREDIT_CARD.UPDATED_BY,
15:47:53 369  	    CREDIT_CARD.CREDIT_CARD_STATUS_ID,
15:47:53 370  	    CREDIT_CARD.PRIVATE_FIRST_NAME,
15:47:53 371  	    Credit_Card.Private_Last_Name,
15:47:53 372  	    decode((SELECT Instrument_Id FROM ACCOUNT WHERE group_id = in_group_id and Instrument_Id = CREDIT_CARD.ID),null,'false', 'true') is_default
15:47:53 373  	  From
15:47:53 374  	      CREDIT_CARD left join account on account.id = CREDIT_CARD.Account_Id
15:47:53 375  	  Where
15:47:53 376  	    Account.Group_Id = in_group_id
15:47:53 377  	    AND CREDIT_CARD.CREDIT_CARD_STATUS_ID = in_status_id;
15:47:53 378  END GET_ACCOUNT_CREDIT_CARDS;
15:47:53 379  
15:47:53 380  PROCEDURE GET_ACCOUNT_GIFT_CERTIFICATES (
15:47:53 381  	in_group_id	  IN NUMBER,
15:47:53 382  	out_result_gc_set OUT SYS_REFCURSOR,
15:47:53 383  	in_instr_status   IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.TRUE
15:47:53 384  ) AS
15:47:53 385  SPROC_NAME     CONSTANT VARCHAR2(29) := 'GET_ACCOUNT_GIFT_CERTIFICATES';
15:47:53 386  var_account_id NUMBER;
15:47:53 387  
15:47:53 388  -- Exceptions
15:47:53 389  WRONG_INSTR_EXCEPTION	 EXCEPTION;
15:47:53 390  BEGIN
15:47:53 391  
15:47:53 392  	-- Get account id
15:47:53 393  	SELECT
15:47:53 394  	  ACCOUNT.ID INTO var_account_id
15:47:53 395  	FROM
15:47:53 396  	  ACCOUNT
15:47:53 397  	WHERE
15:47:53 398  	  ACCOUNT.GROUP_ID = in_group_id;
15:47:53 399  
15:47:53 400  	-- Check that incoming data is correct
15:47:53 401  	IF in_instr_status != GLOBAL_CONSTANTS_V22.TRUE AND in_instr_status != GLOBAL_CONSTANTS_V22.FALSE THEN
15:47:53 402  	  RAISE WRONG_INSTR_EXCEPTION;
15:47:53 403  	END IF;
15:47:53 404  
15:47:53 405  	OPEN out_result_gc_set FOR
15:47:53 406  	SELECT
15:47:53 407  	  GIFT_CERTIFICATE.ID,
15:47:53 408  	  GIFT_CERTIFICATE.PURCHASER_GROUP_ID,
15:47:53 409  	  GIFT_CERTIFICATE.PURCHASE_INVOICE_ID,
15:47:53 410  	  GIFT_CERTIFICATE.PURCHASE_DATE,
15:47:53 411  	  GIFT_CERTIFICATE.OFFER_CHAIN_ID,
15:47:53 412  	  GIFT_CERTIFICATE.EXPIRATION_DATE,
15:47:53 413  	  GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID,
15:47:53 414  	  GIFT_CERTIFICATE.CODE,
15:47:53 415  	  GIFT_CERTIFICATE.CREATE_DATE,
15:47:53 416  	  GIFT_CERTIFICATE.CREATED_BY,
15:47:53 417  	  GIFT_CERTIFICATE.UPDATE_DATE,
15:47:53 418  	  GIFT_CERTIFICATE.UPDATED_BY,
15:47:53 419  	  GIFT_CERTIFICATE.RECIPIENT_NAME,
15:47:53 420  	  GIFT_CERTIFICATE.RECIPIENT_EMAIL,
15:47:53 421  	  GIFT_CERTIFICATE.SENDER_NAME,
15:47:53 422  	  GIFT_CERTIFICATE.SENDER_EMAIL,
15:47:53 423  	  GIFT_CERTIFICATE.REDEEMER_GROUP_ID,
15:47:53 424  	  GIFT_CERTIFICATE.REDEMPTION_DATE,
15:47:53 425  	  GIFT_CERTIFICATE.FINALIZED_INVOICE_ID,
15:47:53 426  	  GIFT_CERTIFICATE.GIFT_MESSAGE
15:47:53 427  	FROM
15:47:53 428  	  GIFT_CERTIFICATE
15:47:53 429  	WHERE
15:47:53 430  	  GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id
15:47:53 431  	  AND (
15:47:53 432  		( in_instr_status = GLOBAL_CONSTANTS_V22.TRUE AND
15:47:53 433  		  (
15:47:53 434  		    GIFT_CERTIFICATE.EXPIRATION_DATE >= current_date
15:47:53 435  		    AND GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID = GLOBAL_STATUSES_V22.GIFT_CERTIFICATE_ACTIVE
15:47:53 436  		  )
15:47:53 437  		)
15:47:53 438  		OR
15:47:53 439  		(
15:47:53 440  		  in_instr_status = GLOBAL_CONSTANTS_V22.FALSE AND
15:47:53 441  		  (
15:47:53 442  		    GIFT_CERTIFICATE.EXPIRATION_DATE < current_date
15:47:53 443  		    OR GIFT_CERTIFICATE.GIFT_CERTIFICATE_STATUS_ID != GLOBAL_STATUSES_V22.GIFT_CERTIFICATE_ACTIVE
15:47:53 444  		  )
15:47:53 445  		)
15:47:53 446  	      );
15:47:53 447  
15:47:53 448  EXCEPTION
15:47:53 449  WHEN NO_DATA_FOUND THEN
15:47:53 450  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 451  	  SPROC_NAME, 'Can not find account with given group id');
15:47:53 452  WHEN WRONG_INSTR_EXCEPTION THEN
15:47:53 453  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:53 454  	  SPROC_NAME, 'Wrong gift certificate type');
15:47:53 455  WHEN OTHERS THEN
15:47:53 456  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 457  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 458  END GET_ACCOUNT_GIFT_CERTIFICATES;
15:47:53 459  
15:47:53 460  PROCEDURE GET_ACCOUNT_INFO  (
15:47:53 461  	  in_group_id	    IN	NUMBER,
15:47:53 462  	  out_account_info  OUT SYS_REFCURSOR
15:47:53 463  ) AS
15:47:53 464  SPROC_NAME      CONSTANT VARCHAR2(16) := 'GET_ACCOUNT_INFO';
15:47:53 465  var_account_id  NUMBER;
15:47:53 466  BEGIN
15:47:53 467  
15:47:53 468  	-- Get account id
15:47:53 469  	SELECT
15:47:53 470  	  ACCOUNT.ID INTO var_account_id
15:47:53 471  	FROM
15:47:53 472  	  ACCOUNT
15:47:53 473  	WHERE
15:47:53 474  	  ACCOUNT.GROUP_ID = in_group_id;
15:47:53 475  
15:47:53 476  	-- Get account info
15:47:53 477  	OPEN out_account_info FOR
15:47:53 478  	  SELECT
15:47:53 479  	    ACCOUNT.ACCOUNT_STATUS_ID
15:47:53 480  	  FROM ACCOUNT
15:47:53 481  	  WHERE
15:47:53 482  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53 483  
15:47:53 484  EXCEPTION
15:47:53 485  WHEN NO_DATA_FOUND THEN
15:47:53 486  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 487  	  SPROC_NAME, 'No such account');
15:47:53 488  WHEN OTHERS THEN
15:47:53 489  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 490  	  SPROC_NAME, 'Unknown Error', SQLERRM);
15:47:53 491  END GET_ACCOUNT_INFO;
15:47:53 492  
15:47:53 493  PROCEDURE GET_ACCOUNT_NOTES (
15:47:53 494  	  in_group_id	 IN  NUMBER,
15:47:53 495  	  out_result_set OUT SYS_REFCURSOR
15:47:53 496  ) AS
15:47:53 497  -- VARIABLES
15:47:53 498  SPROC_NAME      CONSTANT VARCHAR2(17) := 'GET_ACCOUNT_NOTES';
15:47:53 499  var_account_id NUMBER;
15:47:53 500  -- EXCEPTIONS
15:47:53 501  BAD_ACCOUNT_ID EXCEPTION;
15:47:53 502  BEGIN
15:47:53 503  
15:47:53 504  	-- Check that account is exists
15:47:53 505  	BEGIN
15:47:53 506  	  SELECT
15:47:53 507  	    ACCOUNT.ID into var_account_id
15:47:53 508  	  FROM
15:47:53 509  	    ACCOUNT
15:47:53 510  	  WHERE
15:47:53 511  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53 512  	  EXCEPTION
15:47:53 513  	    WHEN NO_DATA_FOUND THEN
15:47:53 514  	      RAISE BAD_ACCOUNT_ID;
15:47:53 515  	END;
15:47:53 516  
15:47:53 517  	-- Get account notes
15:47:53 518  	OPEN out_result_set FOR
15:47:53 519  	SELECT
15:47:53 520  	  ACCOUNT_NOTE.ACCOUNT_ID,
15:47:53 521  	  ACCOUNT_NOTE.AGENT_ID,
15:47:53 522  	  ACCOUNT_NOTE.CREATE_DATE,
15:47:53 523  	  ACCOUNT_NOTE.CREATED_BY,
15:47:53 524  	  ACCOUNT_NOTE.ID,
15:47:53 525  	  ACCOUNT_NOTE.NOTE
15:47:53 526  	FROM
15:47:53 527  	  ACCOUNT_NOTE
15:47:53 528  	WHERE
15:47:53 529  	  ACCOUNT_NOTE.ACCOUNT_ID = var_account_id
15:47:53 530  	ORDER BY
15:47:53 531  	  ACCOUNT_NOTE.CREATE_DATE ASC;
15:47:53 532  
15:47:53 533  EXCEPTION
15:47:53 534  WHEN BAD_ACCOUNT_ID THEN
15:47:53 535  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 536  	  SPROC_NAME, 'No such account');
15:47:53 537  WHEN OTHERS THEN
15:47:53 538  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 539  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 540  END GET_ACCOUNT_NOTES;
15:47:53 541  
15:47:53 542  PROCEDURE GET_ACCOUNT_PAYPALS(
15:47:53 543  	in_group_id    IN  ACCOUNT.GROUP_ID%TYPE,
15:47:53 544  	in_status_id   IN  PAYPAL.PAYPAL_STATUS_ID%TYPE DEFAULT GLOBAL_STATUSES_V22.PAYPAL_ACTIVE,
15:47:53 545  	out_result_set OUT SYS_REFCURSOR
15:47:53 546  ) AS
15:47:53 547  SPROC_NAME     CONSTANT VARCHAR2(32) := 'GET_ACCOUNT_PAYPALS';
15:47:53 548  BEGIN
15:47:53 549  	OPEN out_result_set FOR
15:47:53 550  	  SELECT
15:47:53 551  	    DISTINCT
15:47:53 552  	    PAYPAL.ID,
15:47:53 553  	    PAYPAL.ACCOUNT_ID,
15:47:53 554  	    PAYPAL.INSTRUMENT_NAME,
15:47:53 555  	    PAYPAL.PRIVATE_EMAIL_ADDRESS,
15:47:53 556  	    PAYPAL.CREATE_DATE,
15:47:53 557  	    PAYPAL.CREATED_BY,
15:47:53 558  	    PAYPAL.UPDATE_DATE,
15:47:53 559  	    PAYPAL.UPDATED_BY,
15:47:53 560  	    PAYPAL.PAYPAL_STATUS_ID,
15:47:53 561  	    PAYPAL.PRIVATE_STREET_ADDRESS,
15:47:53 562  	    PAYPAL.PRIVATE_STREET_ADDRESS2,
15:47:53 563  	    PAYPAL.STATE,
15:47:53 564  	    PAYPAL.CITY,
15:47:53 565  	    PAYPAL.POSTAL_CODE,
15:47:53 566  	    PAYPAL.COUNTRY,
15:47:53 567  	    Paypal.Expiration_Date,
15:47:53 568  	    Paypal.Secret_Token,
15:47:53 569  	    decode((SELECT
15:47:53 570  	    Instrument_Id
15:47:53 571  		    FROM ACCOUNT
15:47:53 572  		    WHERE group_id = in_group_id AND Instrument_Id = PAYPAL.ID), null, 'false', 'true') is_default
15:47:53 573  	  FROM
15:47:53 574  	      PAYPAL
15:47:53 575  	      LEFT JOIN ACCOUNT ON ACCOUNT.id = PAYPAL.ACCOUNT_ID
15:47:53 576  	  WHERE
15:47:53 577  	    ACCOUNT.GROUP_ID = in_group_id
15:47:53 578  	    AND PAYPAL.PAYPAL_STATUS_ID = in_status_id;
15:47:53 579  END GET_ACCOUNT_PAYPALS;
15:47:53 580  
15:47:53 581  PROCEDURE GET_ACCOUNT_SUBSCRIPTIONS (
15:47:53 582  	  in_group_id	 IN  NUMBER,
15:47:53 583  	  in_start_date  IN DATE,
15:47:53 584  	  in_end_date	 IN DATE,
15:47:53 585  	  in_status	 IN NUMBER,
15:47:53 586  	  in_group_account_type IN VARCHAR2,
15:47:53 587  	  out_result_set OUT SYS_REFCURSOR
15:47:53 588  ) AS
15:47:53 589  -- VARIABLES
15:47:53 590  SPROC_NAME     CONSTANT VARCHAR2(25) := 'GET_ACCOUNT_SUBSCRIPTIONS';
15:47:53 591  var_account_id NUMBER;
15:47:53 592  -- EXCEPTIONS
15:47:53 593  BAD_GROUP_ID	      EXCEPTION;
15:47:53 594  BEGIN
15:47:53 595  	-- Get account id
15:47:53 596  	BEGIN
15:47:53 597  	  SELECT
15:47:53 598  	    ACCOUNT.ID INTO var_account_id
15:47:53 599  	  FROM
15:47:53 600  	    ACCOUNT
15:47:53 601  	  WHERE
15:47:53 602  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53 603  	  EXCEPTION
15:47:53 604  	    WHEN NO_DATA_FOUND THEN
15:47:53 605  	      RAISE BAD_GROUP_ID;
15:47:53 606  	END;
15:47:53 607  
15:47:53 608  	-- Get information about account subscriptions
15:47:53 609  	OPEN out_result_set FOR
15:47:53 610  	SELECT
15:47:53 611  	  in_group_id AS "GROUP_ID",
15:47:53 612  	  SUBSCRIPTION.ID AS "SUBSCRIPTION_ID",
15:47:53 613  	  SUBSCRIPTION.SUBSCRIPTION_STATUS_ID,
15:47:53 614  	  SUBSCRIPTION.PURCHASE_DATE,
15:47:53 615  	  SUBSCRIPTION.SUSPEND_DATE,
15:47:53 616  	  SUBSCRIPTION.REACTIVATION_DATE,
15:47:53 617  	  SUBSCRIPTION.CANCELLATION_DATE,
15:47:53 618  	  SUBSCRIPTION_CANCEL_REASON.VALUE as "CANCEL_TYPE",
15:47:53 619  	  SUBSCRIPTION.INSTRUMENT_ID,
15:47:53 620  	  SUBSCRIPTION.INSTRUMENT_TYPE_ID,
15:47:53 621  	  OFFER_CHAIN.ID AS "OFFER_CHAIN_ID",
15:47:53 622  	  OFFER_CHAIN.NAME,
15:47:53 623  	  OFFER_CHAIN.DESCRIPTION,
15:47:53 624  	  OFFER_CHAIN.PRODUCT_URI,
15:47:53 625  	  PROCS_SUBSCRIPTION_V22.CALC_SUBSCRIPTION_END_DATE(SUBSCRIPTION.ID) as "END_DATE",
15:47:53 626  	  PROCS_SUBSCRIPTION_V22.GET_RECENT_CHARGE(SUBSCRIPTION.ID) AS "RECENT_CHARGE",
15:47:53 627  	  PROCS_SUBSCRIPTION_V22.GET_RENEWAL_DATE(SUBSCRIPTION.ID) AS "RENEWAL_DATE",
15:47:53 628  	  PROCS_SUBSCRIPTION_V22.GET_BILLING_CYCLE(SUBSCRIPTION.ID) AS "BILLING_CYCLE",
15:47:53 629  	  PROCS_SUBSCRIPTION_V22.IS_SUBSCRIPTION_CANCELABLE(SUBSCRIPTION.ID) AS "IS_CANCELABLE",
15:47:53 630  	  ITUNES_RECEIPT.ID AS "ITUNES_RECEIPT_ID",
15:47:53 631  	  (
15:47:53 632  	    SELECT
15:47:53 633  	      MAX(ENTITLEMENT_END_DATE)
15:47:53 634  	      FROM LICENSE
15:47:53 635  	      WHERE LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:53 636  	  )
15:47:53 637  	  as "ENT_END_DATE",
15:47:53 638  	  (
15:47:53 639  	    SELECT
15:47:53 640  	      MIN(START_DATE)
15:47:53 641  	      FROM LICENSE
15:47:53 642  	      WHERE LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:53 643  	  )
15:47:53 644  	  as "ENT_START_DATE",
15:47:53 645  	  GROUP_ACCOUNT.SUBSCRIPTION_ID GA_SUBSCRIPTION_ID,
15:47:53 646  	  GROUP_ACCOUNT.ID GA_ID,
15:47:53 647  	  GROUP_ACCOUNT.GROUP_NAME GA_GROUP_NAME,
15:47:53 648  	  GROUP_ACCOUNT.FIRST_NAME GA_FIRST_NAME,
15:47:53 649  	  GROUP_ACCOUNT.LAST_NAME GA_LAST_NAME,
15:47:53 650  	  GROUP_ACCOUNT.EMAIL GA_EMAIL,
15:47:53 651  	  GROUP_ACCOUNT.PHONE GA_PHONE,
15:47:53 652  	  GROUP_ACCOUNT.ORGANIZATION_TYPE GA_ORGANIZATION_TYPE,
15:47:53 653  	  GROUP_ACCOUNT.SEATS GA_SEATS,
15:47:53 654  	  PROCS_GROUP_ACCOUNT_V22.F_GET_NUM_OCCUPIED_GROUP_SEATS(GROUP_ACCOUNT.ID) GA_SEATS_USED,
15:47:53 655  	  GROUP_ACCOUNT.IP GA_IP,
15:47:53 656  	  PROCS_SUBSCRIPTION_V22.GET_GIFT_CERT_CODE_BY_SUB_ID(SUBSCRIPTION.ID) GIFT_CERTIFICATE_CODE,
15:47:53 657  	  PROCS_ACCOUNT_V22.GET_GRACE_START_DATE(SUBSCRIPTION.ID) GRACE_START_DATE,
15:47:53 658  	  PROCS_ACCOUNT_V22.GET_GRACE_END_DATE(SUBSCRIPTION.ID) GRACE_END_DATE
15:47:53 659  	FROM
15:47:53 660  	  SUBSCRIPTION
15:47:53 661  	  INNER JOIN OFFER_CHAIN ON SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:53 662  	  LEFT JOIN SUBSCRIPTION_CANCEL_REASON ON SUBSCRIPTION.SCT_ID = SUBSCRIPTION_CANCEL_REASON.ID
15:47:53 663  	  LEFT JOIN ITUNES_RECEIPT ON SUBSCRIPTION.ID = ITUNES_RECEIPT.SUBSCRIPTION_ID
15:47:53 664  	  LEFT JOIN GROUP_ACCOUNT ON SUBSCRIPTION.ID = GROUP_ACCOUNT.SUBSCRIPTION_ID
15:47:53 665  	WHERE
15:47:53 666  	  SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:53 667  	  AND (SUBSCRIPTION.SCT_ID IS NULL OR SUBSCRIPTION.SCT_ID != GLOBAL_STATUSES_V22.REAL_TIME_CANCEL_REASON)
15:47:53 668  	  AND SUBSCRIPTION.SUBSCRIPTION_STATUS_ID = NVL(in_status, SUBSCRIPTION.SUBSCRIPTION_STATUS_ID)
15:47:53 669  	  AND PROCS_COMMON_V22.NORMALIZE_DATE(SUBSCRIPTION.PURCHASE_DATE) >= NVL(in_start_date, PROCS_COMMON_V22.NORMALIZE_DATE(SUBSCRIPTION.PURCHASE_DATE))
15:47:53 670  	  AND PROCS_COMMON_V22.NORMALIZE_DATE(SUBSCRIPTION.PURCHASE_DATE) <= NVL(in_end_date, PROCS_COMMON_V22.NORMALIZE_DATE(SUBSCRIPTION.PURCHASE_DATE))
15:47:53 671  	  AND (in_group_account_type IS NULL OR OFFER_CHAIN.GROUP_ACCOUNT_TYPE_ID = in_group_account_type);
15:47:53 672  
15:47:53 673  EXCEPTION
15:47:53 674  WHEN BAD_GROUP_ID THEN
15:47:53 675  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 676  	  SPROC_NAME, 'Can not find account with given group id');
15:47:53 677  WHEN OTHERS THEN
15:47:53 678  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 679  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 680  END GET_ACCOUNT_SUBSCRIPTIONS;
15:47:53 681  
15:47:53 682  PROCEDURE FREEZE_ACCOUNT (
15:47:53 683  	in_group_id   IN NUMBER,
15:47:53 684  	in_updated_by IN VARCHAR2,
15:47:53 685  	in_note       IN VARCHAR2,
15:47:53 686  	in_agent_id   IN NUMBER
15:47:53 687  ) AS
15:47:53 688  SPROC_NAME	    CONSTANT VARCHAR2(14) := 'FREEZE_ACCOUNT';
15:47:53 689  -- VARIABLES
15:47:53 690  var_account_id	    NUMBER;
15:47:53 691  var_account_status_id NUMBER;
15:47:53 692  -- EXCEPTIONS
15:47:53 693  BAD_GROUP_ID	    EXCEPTION;
15:47:53 694  BAD_ACCOUNT_STATUS_ID EXCEPTION;
15:47:53 695  CAN_NOT_CREATE_NOTE   EXCEPTION;
15:47:53 696  EXCEPTION_MESSAGE     VARCHAR2(1024);
15:47:53 697  BEGIN
15:47:53 698  
15:47:53 699  	-- Get account status, account id
15:47:53 700  	BEGIN
15:47:53 701  	  SELECT
15:47:53 702  	    ACCOUNT.ID,
15:47:53 703  	    ACCOUNT.ACCOUNT_STATUS_ID
15:47:53 704  	    into
15:47:53 705  	    var_account_id,
15:47:53 706  	    var_account_status_id
15:47:53 707  	  FROM
15:47:53 708  	    ACCOUNT
15:47:53 709  	  WHERE
15:47:53 710  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53 711  	  EXCEPTION
15:47:53 712  	    WHEN NO_DATA_FOUND THEN
15:47:53 713  	      RAISE BAD_GROUP_ID;
15:47:53 714  	END;
15:47:53 715  
15:47:53 716  	-- We can freeze only ACTIVE accounts
15:47:53 717  	IF var_account_status_id != GLOBAL_STATUSES_V22.ACCOUNT_ACTIVE
15:47:53 718  	  AND var_account_status_id != GLOBAL_STATUSES_V22.ACCOUNT_FROZEN THEN
15:47:53 719  	  RAISE BAD_ACCOUNT_STATUS_ID;
15:47:53 720  	END IF;
15:47:53 721  
15:47:53 722  	-- Set account status
15:47:53 723  	PROCS_ACCOUNT_V22.UPDATE_ACCOUNT_STATUS(
15:47:53 724  	  in_account_id        => var_account_id,
15:47:53 725  	  in_updated_by        => in_updated_by,
15:47:53 726  	  in_account_status_id => GLOBAL_STATUSES_V22.ACCOUNT_FROZEN
15:47:53 727  	);
15:47:53 728  
15:47:53 729  	-- Annotate account
15:47:53 730  	BEGIN
15:47:53 731  	  PROCS_ACCOUNT_V22.ANNOTATE_ACCOUNT(
15:47:53 732  	    in_group_id   => in_group_id,
15:47:53 733  	    in_agent_id   => in_agent_id,
15:47:53 734  	    in_note	  => in_note,
15:47:53 735  	    in_created_by => in_updated_by
15:47:53 736  	  );
15:47:53 737  	  EXCEPTION
15:47:53 738  	    WHEN OTHERS THEN
15:47:53 739  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:53 740  	      RAISE CAN_NOT_CREATE_NOTE;
15:47:53 741  	END;
15:47:53 742  
15:47:53 743  EXCEPTION
15:47:53 744  WHEN BAD_GROUP_ID THEN
15:47:53 745  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 746  	  SPROC_NAME, 'No such group id');
15:47:53 747  WHEN BAD_ACCOUNT_STATUS_ID THEN
15:47:53 748  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.STATE_ERROR,
15:47:53 749  	  SPROC_NAME, 'Could not update this account. Status should to be active or frozen');
15:47:53 750  WHEN CAN_NOT_CREATE_NOTE THEN
15:47:53 751  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:53 752  	  SPROC_NAME, 'Could not annotate account', EXCEPTION_MESSAGE);
15:47:53 753  WHEN OTHERS THEN
15:47:53 754  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 755  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 756  END FREEZE_ACCOUNT;
15:47:53 757  
15:47:53 758  PROCEDURE GET_ACCOUNT_SUBSCR_INVOICES (
15:47:53 759  	in_group_id	   IN  NUMBER,
15:47:53 760  	in_subscription_id IN NUMBER,
15:47:53 761  	out_result_set	   OUT SYS_REFCURSOR
15:47:53 762  ) AS
15:47:53 763  SPROC_NAME	   CONSTANT VARCHAR2(27) := 'GET_ACCOUNT_SUBSCR_INVOICES';
15:47:53 764  -- VARIABLES
15:47:53 765  var_account_id	   NUMBER;
15:47:53 766  temp_subscription_id NUMBER;
15:47:53 767  -- EXCEPTIONS
15:47:53 768  BAD_GROUP_ID	  EXCEPTION;
15:47:53 769  BAD_SUBSCRIPTION_ID EXCEPTION;
15:47:53 770  BEGIN
15:47:53 771  	-- Get account id
15:47:53 772  	BEGIN
15:47:53 773  	  SELECT
15:47:53 774  	    ACCOUNT.ID into var_account_id
15:47:53 775  	  FROM
15:47:53 776  	    ACCOUNT
15:47:53 777  	  WHERE
15:47:53 778  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53 779  	  EXCEPTION
15:47:53 780  	    WHEN NO_DATA_FOUND THEN
15:47:53 781  	      RAISE BAD_GROUP_ID;
15:47:53 782  	END;
15:47:53 783  
15:47:53 784  	-- Check that subscription exists
15:47:53 785  	BEGIN
15:47:53 786  	  IF in_subscription_id IS NOT NULL THEN
15:47:53 787  	    SELECT
15:47:53 788  	      SUBSCRIPTION.ID into temp_subscription_id
15:47:53 789  	    FROM
15:47:53 790  	      SUBSCRIPTION
15:47:53 791  	    WHERE
15:47:53 792  	      SUBSCRIPTION.ID = in_subscription_id;
15:47:53 793  	  END IF;
15:47:53 794  	  EXCEPTION
15:47:53 795  	    WHEN NO_DATA_FOUND THEN
15:47:53 796  	      RAISE BAD_SUBSCRIPTION_ID;
15:47:53 797  	END;
15:47:53 798  
15:47:53 799  	OPEN out_result_set FOR
15:47:53 800  	SELECT DISTINCT
15:47:53 801  	  INVOICE.ID as "INVOICE_ID",
15:47:53 802  	  INVOICE.CREATE_DATE,
15:47:53 803  	  INVOICE.INVOICE_STATUS_ID,
15:47:53 804  	  PROCS_INVOICE_V22.F_CALCULATE_INVOICE_AMOUNT(INVOICE.ID) as "AMOUNT",
15:47:53 805  	  OFFER_CHAIN.ID as "OFFER_CHAIN_ID",
15:47:53 806  	  OFFER_CHAIN.NAME as "OFFER_CHAIN_NAME",
15:47:53 807  	  SUBSCRIPTION.ID as "SUBSCRIPTION_ID",
15:47:53 808  	  NULL as "GC_CODE",
15:47:53 809  	  NULL as "GC_ID"
15:47:53 810  	FROM
15:47:53 811  	  LICENSE
15:47:53 812  	  INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:53 813  	  INNER JOIN INVOICE ON LICENSE.INVOICE_ID = INVOICE.ID
15:47:53 814  	  INNER JOIN OFFER_CHAIN ON SUBSCRIPTION.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:53 815  	WHERE
15:47:53 816  	  SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:53 817  	  AND (SUBSCRIPTION.SCT_ID IS NULL OR SUBSCRIPTION.SCT_ID != GLOBAL_STATUSES_V22.REAL_TIME_CANCEL_REASON)
15:47:53 818  	  AND SUBSCRIPTION.ID = NVL(in_subscription_id, SUBSCRIPTION.ID);
15:47:53 819  
15:47:53 820  EXCEPTION
15:47:53 821  WHEN BAD_GROUP_ID THEN
15:47:53 822  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 823  	  SPROC_NAME, 'No such account');
15:47:53 824  WHEN BAD_SUBSCRIPTION_ID THEN
15:47:53 825  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 826  	  SPROC_NAME, 'No such subscription');
15:47:53 827  WHEN OTHERS THEN
15:47:53 828  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 829  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 830  END GET_ACCOUNT_SUBSCR_INVOICES;
15:47:53 831  
15:47:53 832  PROCEDURE GET_ACCOUNT_GC_INVOICES (
15:47:53 833  	in_group_id    IN  NUMBER,
15:47:53 834  	out_result_set OUT SYS_REFCURSOR
15:47:53 835  ) AS
15:47:53 836  SPROC_NAME     CONSTANT VARCHAR2(23) := 'GET_ACCOUNT_GC_INVOICES';
15:47:53 837  -- VARIABLES
15:47:53 838  var_account_id NUMBER;
15:47:53 839  -- EXCEPTIONS
15:47:53 840  BAD_GROUP_ID EXCEPTION;
15:47:53 841  BEGIN
15:47:53 842  	-- Get account id
15:47:53 843  	BEGIN
15:47:53 844  	  SELECT
15:47:53 845  	    ACCOUNT.ID into var_account_id
15:47:53 846  	  FROM
15:47:53 847  	    ACCOUNT
15:47:53 848  	  WHERE
15:47:53 849  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53 850  	  EXCEPTION
15:47:53 851  	    WHEN NO_DATA_FOUND THEN
15:47:53 852  	      RAISE BAD_GROUP_ID;
15:47:53 853  	END;
15:47:53 854  
15:47:53 855  	-- Get invoices
15:47:53 856  	OPEN out_result_set FOR
15:47:53 857  	SELECT DISTINCT
15:47:53 858  	  INVOICE.ID as "INVOICE_ID",
15:47:53 859  	  INVOICE.CREATE_DATE,
15:47:53 860  	  INVOICE.INVOICE_STATUS_ID,
15:47:53 861  	  PROCS_INVOICE_V22.F_CALCULATE_INVOICE_AMOUNT(INVOICE.ID) as "AMOUNT",
15:47:53 862  	  OFFER_CHAIN.ID as "OFFER_CHAIN_ID",
15:47:53 863  	  OFFER_CHAIN.NAME as "OFFER_CHAIN_NAME",
15:47:53 864  	  NULL as "SUBSCRIPTION_ID",
15:47:53 865  	  GIFT_CERTIFICATE.CODE as "GC_CODE",
15:47:53 866  	  GIFT_CERTIFICATE.ID as "GC_ID"
15:47:53 867  	FROM
15:47:53 868  	  GIFT_CERTIFICATE
15:47:53 869  	  INNER JOIN INVOICE ON GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = INVOICE.ID
15:47:53 870  	  INNER JOIN OFFER_CHAIN ON GIFT_CERTIFICATE.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:53 871  	WHERE
15:47:53 872  	  ROWNUM <= 100 AND
15:47:53 873  	  GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id;
15:47:53 874  
15:47:53 875  EXCEPTION
15:47:53 876  WHEN BAD_GROUP_ID THEN
15:47:53 877  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 878  	  SPROC_NAME, 'No such account');
15:47:53 879  WHEN OTHERS THEN
15:47:53 880  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 881  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 882  END GET_ACCOUNT_GC_INVOICES;
15:47:53 883  
15:47:53 884  -- norlov: #38580
15:47:53 885  PROCEDURE GET_GC_INVOICE (
15:47:53 886  	in_group_id    IN  NUMBER,
15:47:53 887  	in_gc_code     IN  VARCHAR2,
15:47:53 888  	out_result_set OUT SYS_REFCURSOR
15:47:53 889  ) AS
15:47:53 890  SPROC_NAME     CONSTANT VARCHAR2(14) := 'GET_GC_INVOICE';
15:47:53 891  -- VARIABLES
15:47:53 892  var_account_id NUMBER;
15:47:53 893  -- EXCEPTIONS
15:47:53 894  BAD_GROUP_ID EXCEPTION;
15:47:53 895  BEGIN
15:47:53 896  	-- Get account id
15:47:53 897  	BEGIN
15:47:53 898  	  SELECT
15:47:53 899  	    ACCOUNT.ID into var_account_id
15:47:53 900  	  FROM
15:47:53 901  	    ACCOUNT
15:47:53 902  	  WHERE
15:47:53 903  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53 904  	  EXCEPTION
15:47:53 905  	    WHEN NO_DATA_FOUND THEN
15:47:53 906  	      RAISE BAD_GROUP_ID;
15:47:53 907  	END;
15:47:53 908  
15:47:53 909  	-- Get invoice for the GC
15:47:53 910  	OPEN out_result_set FOR
15:47:53 911  	SELECT DISTINCT
15:47:53 912  	  INVOICE.ID as "INVOICE_ID",
15:47:53 913  	  INVOICE.CREATE_DATE,
15:47:53 914  	  INVOICE.INVOICE_STATUS_ID,
15:47:53 915  	  PROCS_INVOICE_V22.F_CALCULATE_INVOICE_AMOUNT(INVOICE.ID) as "AMOUNT",
15:47:53 916  	  OFFER_CHAIN.ID as "OFFER_CHAIN_ID",
15:47:53 917  	  OFFER_CHAIN.NAME as "OFFER_CHAIN_NAME",
15:47:53 918  	  NULL as "SUBSCRIPTION_ID",
15:47:53 919  	  GIFT_CERTIFICATE.CODE as "GC_CODE"
15:47:53 920  	FROM
15:47:53 921  	  GIFT_CERTIFICATE
15:47:53 922  	  INNER JOIN INVOICE ON GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = INVOICE.ID
15:47:53 923  	  INNER JOIN OFFER_CHAIN ON GIFT_CERTIFICATE.OFFER_CHAIN_ID = OFFER_CHAIN.ID
15:47:53 924  	WHERE
15:47:53 925  	  GIFT_CERTIFICATE.PURCHASER_GROUP_ID = in_group_id
15:47:53 926  	  AND GIFT_CERTIFICATE.CODE = in_gc_code;
15:47:53 927  
15:47:53 928  EXCEPTION
15:47:53 929  WHEN BAD_GROUP_ID THEN
15:47:53 930  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 931  	  SPROC_NAME, 'No such account');
15:47:53 932  WHEN OTHERS THEN
15:47:53 933  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 934  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 935  END GET_GC_INVOICE;
15:47:53 936  
15:47:53 937  PROCEDURE GET_ACCOUNT_PRODUCTS (
15:47:53 938  	in_group_id    IN  NUMBER,
15:47:53 939  	out_result_set OUT SYS_REFCURSOR
15:47:53 940  ) AS
15:47:53 941  SPROC_NAME     CONSTANT VARCHAR2(20) := 'GET_ACCOUNT_PRODUCTS';
15:47:53 942  -- VARIABLES
15:47:53 943  var_account_id NUMBER;
15:47:53 944  -- EXCEPTIONS
15:47:53 945  BAD_GROUP_ID EXCEPTION;
15:47:53 946  BEGIN
15:47:53 947  	-- Get account id
15:47:53 948  	BEGIN
15:47:53 949  	  SELECT
15:47:53 950  	    ACCOUNT.ID into var_account_id
15:47:53 951  	  FROM
15:47:53 952  	    ACCOUNT
15:47:53 953  	  WHERE
15:47:53 954  	    ACCOUNT.GROUP_ID = in_group_id;
15:47:53 955  	  EXCEPTION
15:47:53 956  	    WHEN NO_DATA_FOUND THEN
15:47:53 957  	      RAISE BAD_GROUP_ID;
15:47:53 958  	END;
15:47:53 959  
15:47:53 960  	OPEN out_result_set FOR
15:47:53 961  	SELECT DISTINCT
15:47:53 962  	  PRODUCT.ID,
15:47:53 963  	  PRODUCT.NAME
15:47:53 964  	FROM
15:47:53 965  	  PRODUCT
15:47:53 966  	WHERE
15:47:53 967  	  PRODUCT.ID IN (
15:47:53 968  	    SELECT DISTINCT
15:47:53 969  	      PRODUCT_OFFERING.PRODUCT_ID
15:47:53 970  	    FROM
15:47:53 971  	      PRODUCT_OFFERING
15:47:53 972  	    WHERE
15:47:53 973  	      PRODUCT_OFFERING.ID IN (
15:47:53 974  		SELECT DISTINCT
15:47:53 975  		  OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
15:47:53 976  		FROM
15:47:53 977  		  OFFER_PRODUCT_OFFERING
15:47:53 978  		WHERE
15:47:53 979  		  OFFER_PRODUCT_OFFERING.OFFER_ID IN (
15:47:53 980  		    SELECT DISTINCT
15:47:53 981  		      OFFER_OFFER_CHAIN.OFFER_ID
15:47:53 982  		    FROM
15:47:53 983  		      OFFER_OFFER_CHAIN
15:47:53 984  		    WHERE
15:47:53 985  		      OFFER_OFFER_CHAIN.OFFER_CHAIN_ID IN (
15:47:53 986  			SELECT DISTINCT
15:47:53 987  			  SUBSCRIPTION.OFFER_CHAIN_ID
15:47:53 988  			FROM
15:47:53 989  			  SUBSCRIPTION
15:47:53 990  			WHERE
15:47:53 991  			  SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:53 992  		      )
15:47:53 993  		  )
15:47:53 994  	      )
15:47:53 995  	  );
15:47:53 996  
15:47:53 997  EXCEPTION
15:47:53 998  WHEN BAD_GROUP_ID THEN
15:47:53 999  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1000  	   SPROC_NAME, 'No such account');
15:47:53 1001  WHEN OTHERS THEN
15:47:53 1002  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1003  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1004  END GET_ACCOUNT_PRODUCTS;
15:47:53 1005  
15:47:53 1006  PROCEDURE GET_ACCOUNT_PROD_OFFERRINGS (
15:47:53 1007  	 in_group_id IN NUMBER,
15:47:53 1008  	 out_result_set     OUT SYS_REFCURSOR
15:47:53 1009  ) AS
15:47:53 1010  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_ACCOUNT_PROD_OFFERRINGS';
15:47:53 1011  -- VARIABLES
15:47:53 1012  var_account_id NUMBER;
15:47:53 1013  -- EXCEPTIONS
15:47:53 1014  BAD_GROUP_ID EXCEPTION;
15:47:53 1015  BEGIN
15:47:53 1016  	  -- Get account id
15:47:53 1017  	 BEGIN
15:47:53 1018  	   SELECT
15:47:53 1019  	     ACCOUNT.ID into var_account_id
15:47:53 1020  	   FROM
15:47:53 1021  	     ACCOUNT
15:47:53 1022  	   WHERE
15:47:53 1023  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:53 1024  	   EXCEPTION
15:47:53 1025  	     WHEN NO_DATA_FOUND THEN
15:47:53 1026  	       RAISE BAD_GROUP_ID;
15:47:53 1027  	 END;
15:47:53 1028  
15:47:53 1029  	 OPEN out_result_set FOR
15:47:53 1030  	 SELECT DISTINCT
15:47:53 1031  	   PRODUCT_OFFERING.ID,
15:47:53 1032  	   PRODUCT_OFFERING.PRODUCT_ID,
15:47:53 1033  	   PRODUCT_OFFERING.TAX_CATEGORY_ID,
15:47:53 1034  	   PRODUCT_OFFERING.UNIT_PRICE,
15:47:53 1035  	   PRODUCT_OFFERING.QUANTITY,
15:47:53 1036  	   PRODUCT_OFFERING.CREATE_DATE,
15:47:53 1037  	   PRODUCT_OFFERING.CREATED_BY,
15:47:53 1038  	   CAPABILITY.ID CAP_ID,
15:47:53 1039  	   CAPABILITY.CODE CAP_CODE,
15:47:53 1040  	   CAPABILITY.DESCRIPTION CAP_DESCRIPTION,
15:47:53 1041  	   CAPABILITY.SHAREABLE CAP_SHAREABLE
15:47:53 1042  	 FROM
15:47:53 1043  	   OFFER_PRODUCT_OFFERING
15:47:53 1044  	   INNER JOIN PRODUCT_OFFERING ON PRODUCT_OFFERING.ID = OFFER_PRODUCT_OFFERING.PRODUCT_OFFERING_ID
15:47:53 1045  	   INNER JOIN CAPABILITY ON PRODUCT_OFFERING.CAPABILITY_ID = CAPABILITY.ID
15:47:53 1046  	 WHERE
15:47:53 1047  	   OFFER_PRODUCT_OFFERING.OFFER_ID IN (
15:47:53 1048  	     SELECT DISTINCT
15:47:53 1049  	       OFFER_OFFER_CHAIN.OFFER_ID
15:47:53 1050  	     FROM
15:47:53 1051  	       OFFER_OFFER_CHAIN
15:47:53 1052  	     WHERE
15:47:53 1053  	       OFFER_OFFER_CHAIN.OFFER_CHAIN_ID IN (
15:47:53 1054  		 SELECT DISTINCT
15:47:53 1055  		   SUBSCRIPTION.OFFER_CHAIN_ID
15:47:53 1056  		 FROM
15:47:53 1057  		   SUBSCRIPTION
15:47:53 1058  		 WHERE
15:47:53 1059  		   SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:53 1060  	       )
15:47:53 1061  	   );
15:47:53 1062  
15:47:53 1063  EXCEPTION
15:47:53 1064  WHEN BAD_GROUP_ID THEN
15:47:53 1065  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1066  	   SPROC_NAME, 'No such account');
15:47:53 1067  WHEN OTHERS THEN
15:47:53 1068  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1069  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1070  END GET_ACCOUNT_PROD_OFFERRINGS;
15:47:53 1071  
15:47:53 1072  PROCEDURE UPDATE_ACCOUNT_STATUS (
15:47:53 1073  	 in_account_id	      IN ACCOUNT.ID%TYPE,
15:47:53 1074  	 in_account_status_id IN ACCOUNT.ACCOUNT_STATUS_ID%TYPE,
15:47:53 1075  	 in_updated_by	      IN ACCOUNT.UPDATED_BY%TYPE
15:47:53 1076  ) AS
15:47:53 1077  SPROC_NAME CONSTANT VARCHAR2(21) := 'UPDATE_ACCOUNT_STATUS';
15:47:53 1078  -- EXCEPTIONS
15:47:53 1079  BAD_ACCOUNT_ID	      EXCEPTION;
15:47:53 1080  BAD_STATUS_ID	      EXCEPTION;
15:47:53 1081  EXCEPTION_MESSAGE      VARCHAR2(1024);
15:47:53 1082  BEGIN
15:47:53 1083  
15:47:53 1084  	 IF in_account_status_id != GLOBAL_STATUSES_V22.ACCOUNT_ACTIVE
15:47:53 1085  	   AND in_account_status_id != GLOBAL_STATUSES_V22.ACCOUNT_FROZEN
15:47:53 1086  	   AND in_account_status_id != GLOBAL_STATUSES_V22.ACCOUNT_DISABLED THEN
15:47:53 1087  	   RAISE BAD_STATUS_ID;
15:47:53 1088  	 END IF;
15:47:53 1089  
15:47:53 1090  	 PROCS_ACCOUNT_CRU_V22.UPDATE_ACCOUNT(
15:47:53 1091  	   in_account_id	=> in_account_id,
15:47:53 1092  	   in_account_status_id => in_account_status_id,
15:47:53 1093  	   in_updated_by	=> in_updated_by
15:47:53 1094  	 );
15:47:53 1095  
15:47:53 1096  	 IF SQL%ROWCOUNT = 0 THEN
15:47:53 1097  	   RAISE BAD_ACCOUNT_ID;
15:47:53 1098  	 END IF;
15:47:53 1099  
15:47:53 1100  EXCEPTION
15:47:53 1101  WHEN BAD_ACCOUNT_ID THEN
15:47:53 1102  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1103  	   SPROC_NAME, 'No such account');
15:47:53 1104  WHEN BAD_STATUS_ID THEN
15:47:53 1105  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:53 1106  	   SPROC_NAME, 'Bad status id');
15:47:53 1107  WHEN OTHERS THEN
15:47:53 1108  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1109  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1110  END UPDATE_ACCOUNT_STATUS;
15:47:53 1111  
15:47:53 1112  PROCEDURE GET_NEEDS_ENTTL_LICENSES_NUM (
15:47:53 1113  	 in_group_id	  IN ACCOUNT.GROUP_ID%TYPE,
15:47:53 1114  	 out_licenses_num OUT NUMBER
15:47:53 1115  ) AS
15:47:53 1116  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_NEEDS_ENTTL_LICENSES_NUM';
15:47:53 1117  -- VARIABLES
15:47:53 1118  var_account_id	  ACCOUNT.GROUP_ID%TYPE;
15:47:53 1119  -- EXCEPTIONS
15:47:53 1120  BAD_ACCOUNT_ID EXCEPTION;
15:47:53 1121  BEGIN
15:47:53 1122  
15:47:53 1123  	 BEGIN
15:47:53 1124  	   SELECT
15:47:53 1125  	     ACCOUNT.ID into var_account_id
15:47:53 1126  	   FROM
15:47:53 1127  	     ACCOUNT
15:47:53 1128  	   WHERE
15:47:53 1129  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:53 1130  	   EXCEPTION
15:47:53 1131  	     WHEN NO_DATA_FOUND THEN
15:47:53 1132  	       RAISE BAD_ACCOUNT_ID;
15:47:53 1133  	 END;
15:47:53 1134  
15:47:53 1135  	 SELECT
15:47:53 1136  	   COUNT(LICENSE.ID) into out_licenses_num
15:47:53 1137  	 FROM
15:47:53 1138  	   LICENSE
15:47:53 1139  	   INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:53 1140  	 WHERE
15:47:53 1141  	   SUBSCRIPTION.ACCOUNT_ID = var_account_id
15:47:53 1142  	   AND LICENSE.NEEDS_ENTITLEMENTS = GLOBAL_CONSTANTS_V22.TRUE;
15:47:53 1143  
15:47:53 1144  EXCEPTION
15:47:53 1145  WHEN BAD_ACCOUNT_ID THEN
15:47:53 1146  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1147  	   SPROC_NAME, 'No such group id');
15:47:53 1148  WHEN OTHERS THEN
15:47:53 1149  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1150  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1151  END GET_NEEDS_ENTTL_LICENSES_NUM;
15:47:53 1152  
15:47:53 1153  PROCEDURE SET_TAX_EXEMPT (
15:47:53 1154  	 in_group_id  IN NUMBER,
15:47:53 1155  	 in_exempt_id IN VARCHAR2
15:47:53 1156  ) AS
15:47:53 1157  SPROC_NAME CONSTANT VARCHAR2(14) := 'SET_TAX_EXEMPT';
15:47:53 1158  -- VARIABLES
15:47:53 1159  var_account_id NUMBER;
15:47:53 1160  -- EXCEPTIONS
15:47:53 1161  BAD_GROUP_ID EXCEPTION;
15:47:53 1162  BEGIN
15:47:53 1163  
15:47:53 1164  	 BEGIN
15:47:53 1165  	   SELECT
15:47:53 1166  	     ACCOUNT.ID into var_account_id
15:47:53 1167  	   FROM
15:47:53 1168  	     ACCOUNT
15:47:53 1169  	   WHERE
15:47:53 1170  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:53 1171  	   EXCEPTION
15:47:53 1172  	     WHEN NO_DATA_FOUND THEN
15:47:53 1173  	       RAISE BAD_GROUP_ID;
15:47:53 1174  	 END;
15:47:53 1175  
15:47:53 1176  	 UPDATE
15:47:53 1177  	   ACCOUNT
15:47:53 1178  	 SET
15:47:53 1179  	   ACCOUNT.TAX_EXEMPT_ID = in_exempt_id
15:47:53 1180  	 WHERE
15:47:53 1181  	   ACCOUNT.ID = var_account_id;
15:47:53 1182  
15:47:53 1183  EXCEPTION
15:47:53 1184  WHEN BAD_GROUP_ID THEN
15:47:53 1185  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1186  	   SPROC_NAME, 'No such group id');
15:47:53 1187  WHEN OTHERS THEN
15:47:53 1188  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1189  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1190  END SET_TAX_EXEMPT;
15:47:53 1191  
15:47:53 1192  PROCEDURE IS_TAX_EXEMPT (
15:47:53 1193  	 in_group_id	   IN NUMBER,
15:47:53 1194  	 out_is_tax_exempt OUT NUMBER
15:47:53 1195  ) AS
15:47:53 1196  SPROC_NAME CONSTANT VARCHAR2(13) := 'IS_TAX_EXEMPT';
15:47:53 1197  -- VARIABLES
15:47:53 1198  var_is_tax_exempt ACCOUNT.TAX_EXEMPT_ID%TYPE;
15:47:53 1199  -- EXCEPTIONS
15:47:53 1200  BAD_GROUP_ID EXCEPTION;
15:47:53 1201  BEGIN
15:47:53 1202  
15:47:53 1203  	 BEGIN
15:47:53 1204  	   SELECT
15:47:53 1205  	     ACCOUNT.TAX_EXEMPT_ID into var_is_tax_exempt
15:47:53 1206  	   FROM
15:47:53 1207  	     ACCOUNT
15:47:53 1208  	   WHERE
15:47:53 1209  	     ACCOUNT.GROUP_ID = in_group_id;
15:47:53 1210  	   EXCEPTION
15:47:53 1211  	     WHEN NO_DATA_FOUND THEN
15:47:53 1212  	       RAISE BAD_GROUP_ID;
15:47:53 1213  	 END;
15:47:53 1214  
15:47:53 1215  	 IF var_is_tax_exempt IS NULL THEN
15:47:53 1216  	   out_is_tax_exempt := GLOBAL_CONSTANTS_V22.FALSE;
15:47:53 1217  	 ELSE
15:47:53 1218  	   out_is_tax_exempt := GLOBAL_CONSTANTS_V22.TRUE;
15:47:53 1219  	 END IF;
15:47:53 1220  
15:47:53 1221  EXCEPTION
15:47:53 1222  WHEN BAD_GROUP_ID THEN
15:47:53 1223  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1224  	   SPROC_NAME, 'No such group id');
15:47:53 1225  WHEN OTHERS THEN
15:47:53 1226  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1227  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1228  END IS_TAX_EXEMPT;
15:47:53 1229  
15:47:53 1230  PROCEDURE GET_GROUP_ID_BY_ACCOUNT_ID (
15:47:53 1231  	 in_account_id IN NUMBER,
15:47:53 1232  	 out_group_id  OUT NUMBER
15:47:53 1233  ) AS
15:47:53 1234  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_GROUP_ID_BY_ACCOUNT_ID';
15:47:53 1235  BEGIN
15:47:53 1236  
15:47:53 1237  	 SELECT
15:47:53 1238  	   ACCOUNT.GROUP_ID into out_group_id
15:47:53 1239  	 FROM
15:47:53 1240  	   ACCOUNT
15:47:53 1241  	 WHERE
15:47:53 1242  	   ACCOUNT.ID = in_account_id;
15:47:53 1243  
15:47:53 1244  EXCEPTION
15:47:53 1245  WHEN NO_DATA_FOUND THEN
15:47:53 1246  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1247  	   SPROC_NAME, 'No such account');
15:47:53 1248  WHEN OTHERS THEN
15:47:53 1249  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1250  	   SPROC_NAME, 'Unknown error');
15:47:53 1251  END GET_GROUP_ID_BY_ACCOUNT_ID;
15:47:53 1252  
15:47:53 1253  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
15:47:53 1254  	 in_group_id IN NUMBER,
15:47:53 1255  	 out_account_id  OUT NUMBER
15:47:53 1256  ) AS
15:47:53 1257  SPROC_NAME CONSTANT VARCHAR2(26) := 'GET_ACCOUNT_ID_BY_GROUP_ID';
15:47:53 1258  BEGIN
15:47:53 1259  
15:47:53 1260  	 SELECT
15:47:53 1261  	   ACCOUNT.ID into out_account_id
15:47:53 1262  	 FROM
15:47:53 1263  	   ACCOUNT
15:47:53 1264  	 WHERE
15:47:53 1265  	   ACCOUNT.GROUP_ID = in_group_id;
15:47:53 1266  
15:47:53 1267  EXCEPTION
15:47:53 1268  WHEN NO_DATA_FOUND THEN
15:47:53 1269  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1270  	   SPROC_NAME, 'No such account');
15:47:53 1271  WHEN OTHERS THEN
15:47:53 1272  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1273  	   SPROC_NAME, 'Unknown error');
15:47:53 1274  END GET_ACCOUNT_ID_BY_GROUP_ID;
15:47:53 1275  
15:47:53 1276  PROCEDURE GET_GROUPS_ID_BY_INVOICE_ID (
15:47:53 1277  	 in_invoice_id IN NUMBER,
15:47:53 1278  	 out_group_ids OUT SYS_REFCURSOR
15:47:53 1279  ) AS
15:47:53 1280  SPROC_NAME CONSTANT VARCHAR2(27) := 'GET_GROUPS_ID_BY_INVOICE_ID';
15:47:53 1281  -- VARIABLES
15:47:53 1282  temp_invoice_id		 NUMBER;
15:47:53 1283  var_subscrib_group_id	 NUMBER;
15:47:53 1284  var_gc_purchaser_group_id NUMBER;
15:47:53 1285  var_gc_redeemer_group_id  NUMBER;
15:47:53 1286  -- EXCEPTIONS
15:47:53 1287  BAD_INVOICE_ID	    EXCEPTION;
15:47:53 1288  CAN_NOT_FIND_ACCOUNT EXCEPTION;
15:47:53 1289  BEGIN
15:47:53 1290  
15:47:53 1291  	 BEGIN
15:47:53 1292  	   SELECT
15:47:53 1293  	     INVOICE.ID into temp_invoice_id
15:47:53 1294  	   FROM
15:47:53 1295  	     INVOICE
15:47:53 1296  	   WHERE
15:47:53 1297  	     INVOICE.ID = in_invoice_id;
15:47:53 1298  	   EXCEPTION
15:47:53 1299  	     WHEN NO_DATA_FOUND THEN
15:47:53 1300  	       RAISE BAD_INVOICE_ID;
15:47:53 1301  	 END;
15:47:53 1302  
15:47:53 1303  	 BEGIN
15:47:53 1304  	   SELECT DISTINCT
15:47:53 1305  	     ACCOUNT.GROUP_ID into var_subscrib_group_id
15:47:53 1306  	   FROM
15:47:53 1307  	     ACCOUNT
15:47:53 1308  	     INNER JOIN SUBSCRIPTION ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
15:47:53 1309  	     INNER JOIN LICENSE ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
15:47:53 1310  	   WHERE
15:47:53 1311  	     LICENSE.INVOICE_ID = in_invoice_id;
15:47:53 1312  	   EXCEPTION
15:47:53 1313  	     WHEN NO_DATA_FOUND THEN
15:47:53 1314  	       var_subscrib_group_id := NULL;
15:47:53 1315  	 END;
15:47:53 1316  
15:47:53 1317  	 IF var_subscrib_group_id IS NULL THEN
15:47:53 1318  	   BEGIN
15:47:53 1319  	     SELECT
15:47:53 1320  	       GIFT_CERTIFICATE.PURCHASER_GROUP_ID,
15:47:53 1321  	       GIFT_CERTIFICATE.REDEEMER_GROUP_ID
15:47:53 1322  	       into
15:47:53 1323  	       var_gc_purchaser_group_id,
15:47:53 1324  	       var_gc_redeemer_group_id
15:47:53 1325  	     FROM
15:47:53 1326  	       GIFT_CERTIFICATE
15:47:53 1327  	     WHERE
15:47:53 1328  	       GIFT_CERTIFICATE.PURCHASE_INVOICE_ID = in_invoice_id
15:47:53 1329  	       OR GIFT_CERTIFICATE.FINALIZED_INVOICE_ID = in_invoice_id;
15:47:53 1330  	     EXCEPTION
15:47:53 1331  	       WHEN NO_DATA_FOUND THEN
15:47:53 1332  		 var_gc_purchaser_group_id := NULL;
15:47:53 1333  		 var_gc_redeemer_group_id  := NULL;
15:47:53 1334  	   END;
15:47:53 1335  	 END IF;
15:47:53 1336  
15:47:53 1337  	 IF var_subscrib_group_id IS NULL
15:47:53 1338  	   AND var_gc_purchaser_group_id IS NULL
15:47:53 1339  	   AND var_gc_redeemer_group_id IS NULL THEN
15:47:53 1340  	     RAISE CAN_NOT_FIND_ACCOUNT;
15:47:53 1341  	 END IF;
15:47:53 1342  
15:47:53 1343  	 OPEN out_group_ids FOR
15:47:53 1344  	 SELECT GROUP_ID FROM (
15:47:53 1345  	   SELECT
15:47:53 1346  	     var_subscrib_group_id as "GROUP_ID"
15:47:53 1347  	   FROM
15:47:53 1348  	     DUAL
15:47:53 1349  	   UNION
15:47:53 1350  	   SELECT
15:47:53 1351  	     var_gc_purchaser_group_id as "GROUP_ID"
15:47:53 1352  	   FROM
15:47:53 1353  	     DUAL
15:47:53 1354  	   UNION
15:47:53 1355  	   SELECT
15:47:53 1356  	     var_gc_redeemer_group_id as "GROUP_ID"
15:47:53 1357  	   FROM
15:47:53 1358  	     DUAL
15:47:53 1359  	 )
15:47:53 1360  	 WHERE
15:47:53 1361  	   GROUP_ID IS NOT NULL;
15:47:53 1362  
15:47:53 1363  EXCEPTION
15:47:53 1364  WHEN BAD_INVOICE_ID THEN
15:47:53 1365  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1366  	   SPROC_NAME, 'No such invoice');
15:47:53 1367  WHEN CAN_NOT_FIND_ACCOUNT THEN
15:47:53 1368  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1369  	   SPROC_NAME, 'Could not find account for given invoice');
15:47:53 1370  WHEN OTHERS THEN
15:47:53 1371  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1372  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1373  END GET_GROUPS_ID_BY_INVOICE_ID;
15:47:53 1374  
15:47:53 1375  PROCEDURE GET_ACCOUNT_TAX_EXEMPT_ID (
15:47:53 1376  	 in_group_id	   IN NUMBER,
15:47:53 1377  	 out_tax_exempt_id OUT VARCHAR2
15:47:53 1378  ) AS
15:47:53 1379  SPROC_NAME CONSTANT VARCHAR2(25) := 'GET_ACCOUNT_TAX_EXEMPT_ID';
15:47:53 1380  -- VARIABLES
15:47:53 1381  -- EXCEPTIONS
15:47:53 1382  BEGIN
15:47:53 1383  
15:47:53 1384  	 SELECT
15:47:53 1385  	   ACCOUNT.TAX_EXEMPT_ID into out_tax_exempt_id
15:47:53 1386  	 FROM
15:47:53 1387  	   ACCOUNT
15:47:53 1388  	 WHERE
15:47:53 1389  	   ACCOUNT.GROUP_ID = in_group_id;
15:47:53 1390  
15:47:53 1391  EXCEPTION
15:47:53 1392  WHEN NO_DATA_FOUND THEN
15:47:53 1393  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1394  	   SPROC_NAME, 'No such account');
15:47:53 1395  WHEN OTHERS THEN
15:47:53 1396  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1397  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1398  END GET_ACCOUNT_TAX_EXEMPT_ID;
15:47:53 1399  
15:47:53 1400  PROCEDURE GET_UPGRADABLE_SUBSCRIPTIONS (
15:47:53 1401  	 in_group_id	IN NUMBER,
15:47:53 1402  	 out_result_set OUT SYS_REFCURSOR
15:47:53 1403  ) AS
15:47:53 1404  SPROC_NAME CONSTANT VARCHAR2(28) := 'GET_UPGRADABLE_SUBSCRIPTIONS';
15:47:53 1405  -- Variables
15:47:53 1406  var_account_id NUMBER;
15:47:53 1407  -- Exceptions
15:47:53 1408  BAD_GROUP_ID   EXCEPTION;
15:47:53 1409  BEGIN
15:47:53 1410  
15:47:53 1411  	 BEGIN
15:47:53 1412  	   SELECT
15:47:53 1413  	     ID into var_account_id
15:47:53 1414  	   FROM
15:47:53 1415  	     ACCOUNT
15:47:53 1416  	   WHERE
15:47:53 1417  	     GROUP_ID = in_group_id;
15:47:53 1418  	   EXCEPTION
15:47:53 1419  	     WHEN NO_DATA_FOUND THEN
15:47:53 1420  	       RAISE BAD_GROUP_ID;
15:47:53 1421  	 END;
15:47:53 1422  
15:47:53 1423  	 OPEN out_result_set FOR
15:47:53 1424  	 SELECT
15:47:53 1425  	   S.ID as SUBSCRIPTION_ID,
15:47:53 1426  	   OCHMD.OFFER_CHAIN_ID
15:47:53 1427  	 FROM
15:47:53 1428  	   SUBSCRIPTION S
15:47:53 1429  	   INNER JOIN OFFER_CHAIN OCH ON OCH.ID = S.OFFER_CHAIN_ID
15:47:53 1430  	   INNER JOIN OFFER_CHAIN_META_DATA OCHMD ON (OCHMD.NAME = GLOBAL_CONSTANTS_V22.OCMD_UPGRADABLE_OFFER_CHAIN_ID AND TO_NUMBER(OCHMD.VALUE) = OCH.ID)
15:47:53 1431  	 WHERE
15:47:53 1432  	   S.ACCOUNT_ID = var_account_id;
15:47:53 1433  
15:47:53 1434  EXCEPTION
15:47:53 1435  WHEN BAD_GROUP_ID THEN
15:47:53 1436  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1437  	   SPROC_NAME, 'No such account');
15:47:53 1438  WHEN OTHERS THEN
15:47:53 1439  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1440  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1441  END GET_UPGRADABLE_SUBSCRIPTIONS;
15:47:53 1442  
15:47:53 1443  PROCEDURE GET_USR_ALL_SBSCR_IDS (
15:47:53 1444  	 in_group_id	    IN NUMBER,
15:47:53 1445  	 out_result_set     OUT SYS_REFCURSOR
15:47:53 1446  ) AS
15:47:53 1447  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_USR_ALL_SBSCR_IDS';
15:47:53 1448  -- VARIABLES
15:47:53 1449  var_account_id NUMBER;
15:47:53 1450  -- EXCEPTIONS
15:47:53 1451  BAD_GROUP_ID EXCEPTION;
15:47:53 1452  BEGIN
15:47:53 1453  
15:47:53 1454  	 BEGIN
15:47:53 1455  	   SELECT
15:47:53 1456  	     A.ID INTO var_account_id
15:47:53 1457  	   FROM
15:47:53 1458  	     ACCOUNT A
15:47:53 1459  	   WHERE
15:47:53 1460  	     A.GROUP_ID = in_group_id;
15:47:53 1461  	   EXCEPTION
15:47:53 1462  	     WHEN NO_DATA_FOUND THEN
15:47:53 1463  	       RAISE BAD_GROUP_ID;
15:47:53 1464  	 END;
15:47:53 1465  
15:47:53 1466  	 OPEN out_result_set FOR
15:47:53 1467  	 SELECT
15:47:53 1468  	   S.ID
15:47:53 1469  	 FROM
15:47:53 1470  	   SUBSCRIPTION S
15:47:53 1471  	 WHERE
15:47:53 1472  	   S.ACCOUNT_ID = var_account_id
15:47:53 1473  	   AND S.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE;
15:47:53 1474  
15:47:53 1475  EXCEPTION
15:47:53 1476  WHEN BAD_GROUP_ID THEN
15:47:53 1477  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1478  	   SPROC_NAME, 'No such account');
15:47:53 1479  WHEN OTHERS THEN
15:47:53 1480  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1481  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1482  END GET_USR_ALL_SBSCR_IDS;
15:47:53 1483  
15:47:53 1484  PROCEDURE GET_USR_SBSCR_IDS_BY_OFFCH_IDS (
15:47:53 1485  	 in_group_id	    IN NUMBER,
15:47:53 1486  	 in_offer_chain_ids IN core_owner.NUMBER_TABLE,
15:47:53 1487  	 out_result_set     OUT SYS_REFCURSOR
15:47:53 1488  ) AS
15:47:53 1489  SPROC_NAME CONSTANT VARCHAR2(30) := 'GET_USR_SBSCR_IDS_BY_OFFCH_IDS';
15:47:53 1490  -- VARIABLES
15:47:53 1491  var_account_id NUMBER;
15:47:53 1492  -- EXCEPTIONS
15:47:53 1493  BAD_GROUP_ID	   EXCEPTION;
15:47:53 1494  BAD_OFFER_CHAIN_IDS EXCEPTION;
15:47:53 1495  BEGIN
15:47:53 1496  
15:47:53 1497  	 IF in_offer_chain_ids IS NULL THEN
15:47:53 1498  	   RAISE BAD_OFFER_CHAIN_IDS;
15:47:53 1499  	 END IF;
15:47:53 1500  
15:47:53 1501  	 BEGIN
15:47:53 1502  	   SELECT
15:47:53 1503  	     A.ID INTO var_account_id
15:47:53 1504  	   FROM
15:47:53 1505  	     ACCOUNT A
15:47:53 1506  	   WHERE
15:47:53 1507  	     A.GROUP_ID = in_group_id;
15:47:53 1508  	   EXCEPTION
15:47:53 1509  	     WHEN NO_DATA_FOUND THEN
15:47:53 1510  	       RAISE BAD_GROUP_ID;
15:47:53 1511  	 END;
15:47:53 1512  
15:47:53 1513  	 OPEN out_result_set FOR
15:47:53 1514  	 SELECT
15:47:53 1515  	   S.ID
15:47:53 1516  	 FROM
15:47:53 1517  	   SUBSCRIPTION S
15:47:53 1518  	 WHERE
15:47:53 1519  	   S.ACCOUNT_ID = var_account_id
15:47:53 1520  	   AND S.OFFER_CHAIN_ID IN (SELECT * FROM TABLE(in_offer_chain_ids))
15:47:53 1521  	   AND S.SUBSCRIPTION_STATUS_ID = GLOBAL_STATUSES_V22.SUBSCRIPTION_ACTIVE;
15:47:53 1522  
15:47:53 1523  EXCEPTION
15:47:53 1524  WHEN BAD_OFFER_CHAIN_IDS THEN
15:47:53 1525  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
15:47:53 1526  	   SPROC_NAME, 'Offer chains ids parameter is null');
15:47:53 1527  WHEN BAD_GROUP_ID THEN
15:47:53 1528  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 1529  	   SPROC_NAME, 'No such account');
15:47:53 1530  WHEN OTHERS THEN
15:47:53 1531  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1532  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1533  END GET_USR_SBSCR_IDS_BY_OFFCH_IDS;
15:47:53 1534  
15:47:53 1535  PROCEDURE GET_GROUP_IDS_BY_CC_INFO (
15:47:53 1536  	 in_last_four_cc IN CREDIT_CARD.LAST_FOUR_CC%TYPE,
15:47:53 1537  	 in_expiration_date IN DATE,
15:47:53 1538  	 in_country IN CREDIT_CARD.COUNTRY%TYPE DEFAULT NULL,
15:47:53 1539  	 in_postal_code IN CREDIT_CARD.POSTAL_CODE%TYPE DEFAULT NULL,
15:47:53 1540  	 in_city IN CREDIT_CARD.CITY%TYPE DEFAULT NULL,
15:47:53 1541  	 in_state IN CREDIT_CARD.STATE%TYPE DEFAULT NULL,
15:47:53 1542  	 in_credit_card_type_id IN CREDIT_CARD.CREDIT_CARD_TYPE_ID%TYPE DEFAULT NULL,
15:47:53 1543  	 in_credit_card_status_id IN CREDIT_CARD.CREDIT_CARD_STATUS_ID%TYPE DEFAULT NULL,
15:47:53 1544  	 in_lower_bound IN NUMBER DEFAULT 1,
15:47:53 1545  	 in_upper_bound IN NUMBER DEFAULT 11,
15:47:53 1546  	 out_result_set OUT SYS_REFCURSOR
15:47:53 1547  ) AS
15:47:53 1548  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GROUP_IDS_BY_CC_INFO';
15:47:53 1549  BEGIN
15:47:53 1550  
15:47:53 1551  	 OPEN out_result_set FOR
15:47:53 1552  	     SELECT
15:47:53 1553  	       distinct /*+ first_rows(in_upper_bound-in_lower_bound) */ a.GROUP_ID GROUP_ID
15:47:53 1554  	     FROM
15:47:53 1555  	       account a,
15:47:53 1556  	       credit_card cc
15:47:53 1557  	     WHERE
15:47:53 1558  	       cc.expiration_date = in_expiration_date and
15:47:53 1559  	       cc.last_four_cc = in_last_four_cc and
15:47:53 1560  	       upper(cc.postal_code) = upper(nvl(in_postal_code, cc.postal_code)) and
15:47:53 1561  	       upper(cc.city) = upper(nvl(in_city, cc.city)) and
15:47:53 1562  	       upper(cc.state) = upper(nvl(in_state, cc.state)) and
15:47:53 1563  	       upper(cc.country) = upper(nvl(in_country, cc.country)) and
15:47:53 1564  	       cc.credit_card_status_id = nvl(in_credit_card_status_id, cc.credit_card_status_id) and
15:47:53 1565  	       cc.credit_card_type_id = nvl(in_credit_card_type_id, cc.credit_card_type_id) and
15:47:53 1566  	       a.id = cc.account_id and
15:47:53 1567  	       rownum >= in_lower_bound and
15:47:53 1568  	       rownum <= in_upper_bound
15:47:53 1569  	   ;
15:47:53 1570  
15:47:53 1571  EXCEPTION
15:47:53 1572  WHEN OTHERS THEN
15:47:53 1573  	 PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 1574  	   SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 1575  END GET_GROUP_IDS_BY_CC_INFO;
15:47:53 1576  
15:47:53 1577  END PROCS_ACCOUNT_V22;
15:47:53 1578  .
15:47:53 SQL> /

Package body created.

Elapsed: 00:00:00.06
15:47:53 SQL> 
15:47:53 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_PROCESS_RETRY_V22" AS
15:47:53   2  
15:47:53   3  PROCEDURE LOG_RETRY(
15:47:53   4  	  in_process_name IN VARCHAR2,
15:47:53   5  	  in_generic_id   IN NUMBER,
15:47:53   6  	  in_date	  IN VARCHAR2,
15:47:53   7  	  out_success	   OUT NUMBER
15:47:53   8  ) AS
15:47:53   9  SPROC_NAME CONSTANT VARCHAR2(32) := 'LOG_RETRY_V22';
15:47:53  10  BEGIN
15:47:53  11  
15:47:53  12  	out_success := 1;
15:47:53  13  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
15:47:53  14  	VALUES (in_process_name, in_generic_id, 1, to_date(in_date, 'DD-Mon-YYYY HH24:MI:SS'), sysdate);
15:47:53  15  	commit;
15:47:53  16  EXCEPTION
15:47:53  17  WHEN DUP_VAL_ON_INDEX THEN
15:47:53  18  	rollback;
15:47:53  19  	out_success := 0;
15:47:53  20  WHEN OTHERS THEN
15:47:53  21  	rollback;
15:47:53  22  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53  23  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53  24  
15:47:53  25  END;
15:47:53  26  
15:47:53  27  PROCEDURE LOG_RETRY_DATE(
15:47:53  28  	  in_process_name IN VARCHAR2,
15:47:53  29  	  in_generic_id   IN NUMBER,
15:47:53  30  	  in_date	  IN DATE,
15:47:53  31  	  out_success	   OUT NUMBER
15:47:53  32  ) AS
15:47:53  33  SPROC_NAME CONSTANT VARCHAR2(32) := 'LOG_RETRY_DATE_V22';
15:47:53  34  BEGIN
15:47:53  35  
15:47:53  36  	out_success := 1;
15:47:53  37  	INSERT into PROCESS_RETRY_THROTTLE(process_name, generic_id, RETRY_count, create_date, update_date)
15:47:53  38  	VALUES (in_process_name, in_generic_id, 1, in_date, sysdate);
15:47:53  39  	commit;
15:47:53  40  EXCEPTION
15:47:53  41  WHEN DUP_VAL_ON_INDEX THEN
15:47:53  42  	rollback;
15:47:53  43  	out_success := 0;
15:47:53  44  WHEN OTHERS THEN
15:47:53  45  	rollback;
15:47:53  46  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53  47  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53  48  
15:47:53  49  END;
15:47:53  50  
15:47:53  51  PROCEDURE DELETE_RETRY(
15:47:53  52  	  in_process_name IN VARCHAR2,
15:47:53  53  	  in_remove_minutes  IN NUMBER
15:47:53  54  ) AS
15:47:53  55  BEGIN
15:47:53  56  
15:47:53  57  delete from PROCESS_RETRY_THROTTLE
15:47:53  58  where
15:47:53  59  	process_name = in_process_name and
15:47:53  60  	create_date <= sysdate - (in_remove_minutes / (60 * 24));
15:47:53  61  commit;
15:47:53  62  END;
15:47:53  63  
15:47:53  64  PROCEDURE GET_SYSDATE (
15:47:53  65  	out_date  OUT VARCHAR2
15:47:53  66  ) AS
15:47:53  67  BEGIN
15:47:53  68  	SELECT to_char(SYSDATE, 'DD-Mon-YYYY HH24:MI:SS') into out_date from dual;
15:47:53  69  END;
15:47:53  70  
15:47:53  71  END PROCS_PROCESS_RETRY_V22;
15:47:53  72  .
15:47:53 SQL> /

Package body created.

Elapsed: 00:00:00.00
15:47:53 SQL> 
15:47:53 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_NOTIFICATION_V22" AS
15:47:53   2  
15:47:53   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
15:47:53   4  /*
15:47:53   5  Throws exceptions:
15:47:53   6  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53   7  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53   8  */
15:47:53   9  	in_notification_type_name IN VARCHAR2,
15:47:53  10  	out_notification_type_id  OUT NUMBER
15:47:53  11  ) AS
15:47:53  12  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_NOTIFICATION_TYPE_BY_NAME';
15:47:53  13  BEGIN
15:47:53  14  	SELECT
15:47:53  15  	  NOTIFICATION_TYPE.ID into out_notification_type_id
15:47:53  16  	FROM
15:47:53  17  	  NOTIFICATION_TYPE
15:47:53  18  	WHERE
15:47:53  19  	  NOTIFICATION_TYPE.VALUE = in_notification_type_name;
15:47:53  20  EXCEPTION
15:47:53  21  WHEN NO_DATA_FOUND THEN
15:47:53  22  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53  23  	  SPROC_NAME, 'No such type');
15:47:53  24  WHEN OTHERS THEN
15:47:53  25  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53  26  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53  27  END GET_NOTIFICATION_TYPE_BY_NAME;
15:47:53  28  
15:47:53  29  /******************************************************************/
15:47:53  30  
15:47:53  31  PROCEDURE ADD_NOTIFICATION (
15:47:53  32  /*
15:47:53  33  Throws exceptions:
15:47:53  34  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53  35  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53  36  */
15:47:53  37  	in_sender_account_id	 IN NUMBER DEFAULT 0,
15:47:53  38  	in_recipient_group_id	 IN NUMBER,
15:47:53  39  	in_notification_type_id  IN NUMBER,
15:47:53  40  	in_date_to_notify	 IN DATE,
15:47:53  41  	in_email_template_params IN CLOB
15:47:53  42  ) AS
15:47:53  43  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION';
15:47:53  44  -- VARIABLES
15:47:53  45  temp_type_count NUMBER;
15:47:53  46  var_create_date DATE := SYSDATE;
15:47:53  47  -- EXCEPTIONS
15:47:53  48  BAD_NOTIFICATION_TYPE_ID EXCEPTION;
15:47:53  49  CAN_NOT_CREATE_HISTORY   EXCEPTION;
15:47:53  50  EXCEPTION_MESSAGE        VARCHAR2(1024);
15:47:53  51  BEGIN
15:47:53  52  
15:47:53  53  	SELECT
15:47:53  54  	  COUNT(*) into temp_type_count
15:47:53  55  	FROM
15:47:53  56  	  NOTIFICATION_TYPE
15:47:53  57  	WHERE
15:47:53  58  	  NOTIFICATION_TYPE.ID = in_notification_type_id;
15:47:53  59  
15:47:53  60  	IF temp_type_count = 0 THEN
15:47:53  61  	  RAISE BAD_NOTIFICATION_TYPE_ID;
15:47:53  62  	END IF;
15:47:53  63  
15:47:53  64  	INSERT INTO NOTIFICATION (
15:47:53  65  	  ID,
15:47:53  66  	  ACCOUNT_ID,
15:47:53  67  	  GROUP_ID,
15:47:53  68  	  NOTIFICATION_TYPE_ID,
15:47:53  69  	  NOTIFICATION_STATUS_ID,
15:47:53  70  	  EMAIL_TEMPLATE_PARAMS,
15:47:53  71  	  UPDATE_DATE,
15:47:53  72  	  CREATE_DATE,
15:47:53  73  	  DATE_TO_NOTIFY
15:47:53  74  	) VALUES (
15:47:53  75  	  NOT_ID_SEQ.nextVal,
15:47:53  76  	  in_sender_account_id,
15:47:53  77  	  in_recipient_group_id,
15:47:53  78  	  in_notification_type_id,
15:47:53  79  	  NOTIFICATION_STATUSES_V22.NOTIFICATION_PENDING,
15:47:53  80  	  in_email_template_params,
15:47:53  81  	  var_create_date,
15:47:53  82  	  var_create_date,
15:47:53  83  	  in_date_to_notify
15:47:53  84  	);
15:47:53  85  
15:47:53  86  	--BEGIN
15:47:53  87  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V22.CREATE_NOTIFICATION_HISTORY (
15:47:53  88  	--    in_account_id		  => 0, -- ACCOUNT_ID. Can we delete it?
15:47:53  89  	--    in_group_id		  => in_recipient_group_id,
15:47:53  90  	--    notification_reason_type_id => in_notification_type_id,
15:47:53  91  	--    notification_status_id	  => NOTIFICATION_STATUSES_V22.NOTIFICATION_PENDING,
15:47:53  92  	--    email_template_params	  => in_email_template_params,
15:47:53  93  	--    in_create_date		  => var_create_date
15:47:53  94  	--  );
15:47:53  95  	--  EXCEPTION
15:47:53  96  	--    WHEN OTHERS THEN
15:47:53  97  	--	EXCEPTION_MESSAGE := SQLERRM;
15:47:53  98  	--	RAISE CAN_NOT_CREATE_HISTORY;
15:47:53  99  	--END;
15:47:53 100  
15:47:53 101  EXCEPTION
15:47:53 102  WHEN BAD_NOTIFICATION_TYPE_ID THEN
15:47:53 103  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 104  	  SPROC_NAME, 'No such notification status');
15:47:53 105  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:53 106  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:53 107  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:53 108  WHEN OTHERS THEN
15:47:53 109  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 110  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 111  END ADD_NOTIFICATION;
15:47:53 112  
15:47:53 113  /******************************************************************************/
15:47:53 114  
15:47:53 115  PROCEDURE GET_PENDING_NOTIFICATIONS (
15:47:53 116  /*
15:47:53 117  Throws exceptions:
15:47:53 118  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 119  */
15:47:53 120  	out_result_set OUT SYS_REFCURSOR
15:47:53 121  ) AS
15:47:53 122  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_PENDING_NOTIFICATIONS';
15:47:53 123  -- CONSTANTS
15:47:53 124  C_NOTIFICATION_COUNT_LIMIT CONSTANT NUMBER := 500;
15:47:53 125  BEGIN
15:47:53 126  	OPEN out_result_set FOR
15:47:53 127  SELECT * FROM
15:47:53 128  (
15:47:53 129  	SELECT
15:47:53 130  	  NOTIFICATION.ID
15:47:53 131  	FROM
15:47:53 132  	  NOTIFICATION
15:47:53 133  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
15:47:53 134  	WHERE
15:47:53 135  	  ROWNUM <= C_NOTIFICATION_COUNT_LIMIT*10
15:47:53 136  	  AND NOT EXISTS (
15:47:53 137  	    SELECT NULL
15:47:53 138  	    FROM PROCESS_RETRY_THROTTLE
15:47:53 139  	    WHERE GENERIC_ID = NOTIFICATION.ID AND PROCESS_NAME = SPROC_NAME
15:47:53 140  	  )
15:47:53 141  	  AND (
15:47:53 142  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V22.NOTIFICATION_PENDING
15:47:53 143  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V22.NOTIFICATION_FAILED
15:47:53 144  	  )
15:47:53 145  	  AND (
15:47:53 146  	    NOTIFICATION.DATE_TO_NOTIFY IS NULL OR SYSDATE > NOTIFICATION.DATE_TO_NOTIFY
15:47:53 147  	  )ORDER BY dbms_random.value
15:47:53 148  ) WHERE
15:47:53 149  	ROWNUM <= C_NOTIFICATION_COUNT_LIMIT;
15:47:53 150  
15:47:53 151  EXCEPTION
15:47:53 152  WHEN OTHERS THEN
15:47:53 153  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 154  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 155  END GET_PENDING_NOTIFICATIONS;
15:47:53 156  
15:47:53 157  /******************************************************************************/
15:47:53 158  
15:47:53 159  PROCEDURE UPDATE_NOTIFICATION_TIMESTAMP (
15:47:53 160  /*
15:47:53 161  Throws exceptions:
15:47:53 162  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 163  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 164  */
15:47:53 165  	in_notification_id IN NUMBER
15:47:53 166  ) AS
15:47:53 167  SPROC_NAME CONSTANT VARCHAR2(32) := 'UPDATE_NOTIFICATION_TIMESTAMP';
15:47:53 168  -- VARIABLES
15:47:53 169  temp_notification_id NUMBER;
15:47:53 170  -- EXCEPTIONS
15:47:53 171  BAD_NOTIFICATION_ID EXCEPTION;
15:47:53 172  BEGIN
15:47:53 173  
15:47:53 174  	BEGIN
15:47:53 175  	  SELECT
15:47:53 176  	    NOTIFICATION.ID into temp_notification_id
15:47:53 177  	  FROM
15:47:53 178  	    NOTIFICATION
15:47:53 179  	  WHERE
15:47:53 180  	    NOTIFICATION.ID = in_notification_id;
15:47:53 181  	  EXCEPTION
15:47:53 182  	    WHEN NO_DATA_FOUND THEN
15:47:53 183  	      RAISE BAD_NOTIFICATION_ID;
15:47:53 184  	END;
15:47:53 185  
15:47:53 186  	UPDATE
15:47:53 187  	  NOTIFICATION
15:47:53 188  	SET
15:47:53 189  	  NOTIFICATION.UPDATE_DATE = sysdate
15:47:53 190  	WHERE
15:47:53 191  	  NOTIFICATION.ID = in_notification_id;
15:47:53 192  
15:47:53 193  EXCEPTION
15:47:53 194  WHEN BAD_NOTIFICATION_ID THEN
15:47:53 195  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 196  	  SPROC_NAME, 'No such notification');
15:47:53 197  WHEN OTHERS THEN
15:47:53 198  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 199  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 200  END UPDATE_NOTIFICATION_TIMESTAMP;
15:47:53 201  
15:47:53 202  /******************************************************************************/
15:47:53 203  
15:47:53 204  PROCEDURE SET_NOTIFICATION_STATUS (
15:47:53 205  /*
15:47:53 206  Throws exceptions:
15:47:53 207  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 208  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 209  */
15:47:53 210  	in_notification_id	  IN NUMBER,
15:47:53 211  	in_notification_status_id IN NUMBER,
15:47:53 212  	in_error_message	  IN VARCHAR2
15:47:53 213  ) AS
15:47:53 214  SPROC_NAME CONSTANT VARCHAR2(32) := 'SET_NOTIFICATION_STATUS';
15:47:53 215  -- VARIABLES
15:47:53 216  var_group_id		NUMBER;
15:47:53 217  var_account_id		NUMBER;
15:47:53 218  var_notification_type_id	NUMBER;
15:47:53 219  var_email_template_params CLOB;
15:47:53 220  var_create_history_date	DATE := SYSDATE;
15:47:53 221  var_notification_status_id   NUMBER;
15:47:53 222  var_date_to_notify	DATE;
15:47:53 223  max_fails   NUMBER := 5;
15:47:53 224  num_fails   NUMBER;
15:47:53 225  -- EXCEPTIONS
15:47:53 226  BAD_NOTIFICATION_ID	 EXCEPTION;
15:47:53 227  BAD_NOTIFICATION_STATUS_ID EXCEPTION;
15:47:53 228  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
15:47:53 229  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
15:47:53 230  BEGIN
15:47:53 231  
15:47:53 232  	IF in_notification_status_id != NOTIFICATION_STATUSES_V22.NOTIFICATION_SENT
15:47:53 233  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V22.NOTIFICATION_PENDING
15:47:53 234  	  AND in_notification_status_id != NOTIFICATION_STATUSES_V22.NOTIFICATION_FAILED THEN
15:47:53 235  	  RAISE BAD_NOTIFICATION_STATUS_ID;
15:47:53 236  	END IF;
15:47:53 237  
15:47:53 238  	BEGIN
15:47:53 239  	  SELECT
15:47:53 240  	    NOTIFICATION.GROUP_ID,
15:47:53 241  	    NOTIFICATION.ACCOUNT_ID,
15:47:53 242  	    NOTIFICATION.NOTIFICATION_TYPE_ID,
15:47:53 243  	    NOTIFICATION.NOTIFICATION_STATUS_ID,
15:47:53 244  	    NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
15:47:53 245  	    NOTIFICATION.DATE_TO_NOTIFY
15:47:53 246  	    into
15:47:53 247  	    var_group_id,
15:47:53 248  	    var_account_id,
15:47:53 249  	    var_notification_type_id,
15:47:53 250  	    var_notification_status_id,
15:47:53 251  	    var_email_template_params,
15:47:53 252  	    var_date_to_notify
15:47:53 253  	  FROM
15:47:53 254  	    NOTIFICATION
15:47:53 255  	  WHERE
15:47:53 256  	    NOTIFICATION.ID = in_notification_id;
15:47:53 257  	  EXCEPTION
15:47:53 258  	    WHEN NO_DATA_FOUND THEN
15:47:53 259  	      RAISE BAD_NOTIFICATION_ID;
15:47:53 260  	END;
15:47:53 261  
15:47:53 262  	BEGIN
15:47:53 263  	  CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_NOTIFICATION_HISTORY (
15:47:53 264  	    in_notification_id		=> in_notification_id,
15:47:53 265  	    in_account_id		=> var_account_id,
15:47:53 266  	    in_group_id 		=> var_group_id,
15:47:53 267  	    notification_reason_type_id => var_notification_type_id,
15:47:53 268  	    notification_status_id	=> var_notification_status_id,
15:47:53 269  	    email_template_params	=> var_email_template_params,
15:47:53 270  	    in_create_date		=> var_create_history_date,
15:47:53 271  	    in_date_to_notify		=> var_date_to_notify
15:47:53 272  	  );
15:47:53 273  	  EXCEPTION
15:47:53 274  	    WHEN OTHERS THEN
15:47:53 275  	      EXCEPTION_MESSAGE := SQLERRM;
15:47:53 276  	      RAISE CAN_NOT_CREATE_HISTORY;
15:47:53 277  	END;
15:47:53 278  
15:47:53 279  	UPDATE
15:47:53 280  	  NOTIFICATION
15:47:53 281  	SET
15:47:53 282  	  NOTIFICATION.NOTIFICATION_STATUS_ID = in_notification_status_id,
15:47:53 283  	  NOTIFICATION.UPDATE_DATE = sysdate
15:47:53 284  	WHERE
15:47:53 285  	  NOTIFICATION.ID = in_notification_id;
15:47:53 286  
15:47:53 287  	IF ( in_error_message IS NOT NULL ) THEN
15:47:53 288  	  ADD_NOTIFICATION_FAILURE(
15:47:53 289  	    in_notification_id => in_notification_id,
15:47:53 290  	    in_error_message => in_error_message
15:47:53 291  	  );
15:47:53 292  	END IF;
15:47:53 293  
15:47:53 294  	SELECT COUNT(1) INTO num_fails
15:47:53 295  	FROM NOTIFICATION_FAILURE
15:47:53 296  	WHERE NOTIFICATION_ID = in_notification_id;
15:47:53 297  
15:47:53 298  	IF (in_notification_status_id = NOTIFICATION_STATUSES_V22.NOTIFICATION_SENT OR num_fails >= max_fails) then
15:47:53 299  	  FOR REC IN (
15:47:53 300  	      SELECT ID, NOTIFICATION_ID, ERROR_MESSAGE, CREATE_DATE
15:47:53 301  	      FROM NOTIFICATION_FAILURE
15:47:53 302  	      WHERE NOTIFICATION_ID = in_notification_id
15:47:53 303  	      ) LOOP
15:47:53 304  	      BEGIN
15:47:53 305  		CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_NOTIF_FAILURE_HISTORY(
15:47:53 306  		  in_error_message	   => REC.ERROR_MESSAGE,
15:47:53 307  		  in_notification_id	   => REC.NOTIFICATION_ID,
15:47:53 308  		  in_create_date	   => REC.CREATE_DATE
15:47:53 309  		);
15:47:53 310  		EXCEPTION
15:47:53 311  		  WHEN OTHERS THEN
15:47:53 312  		    EXCEPTION_MESSAGE := SQLERRM;
15:47:53 313  		    RAISE CAN_NOT_CREATE_HISTORY;
15:47:53 314  	      END;
15:47:53 315  	  END LOOP;
15:47:53 316  	  DELETE FROM NOTIFICATION_FAILURE WHERE NOTIFICATION_ID = in_notification_id;
15:47:53 317  
15:47:53 318  	  BEGIN
15:47:53 319  	    SELECT
15:47:53 320  	      NOTIFICATION.GROUP_ID,
15:47:53 321  	      NOTIFICATION.ACCOUNT_ID,
15:47:53 322  	      NOTIFICATION.NOTIFICATION_TYPE_ID,
15:47:53 323  	      NOTIFICATION.NOTIFICATION_STATUS_ID,
15:47:53 324  	      NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
15:47:53 325  	      NOTIFICATION.DATE_TO_NOTIFY
15:47:53 326  	      into
15:47:53 327  	      var_group_id,
15:47:53 328  	      var_account_id,
15:47:53 329  	      var_notification_type_id,
15:47:53 330  	      var_notification_status_id,
15:47:53 331  	      var_email_template_params,
15:47:53 332  	      var_date_to_notify
15:47:53 333  	    FROM
15:47:53 334  	      NOTIFICATION
15:47:53 335  	    WHERE
15:47:53 336  	      NOTIFICATION.ID = in_notification_id;
15:47:53 337  	    EXCEPTION
15:47:53 338  	      WHEN NO_DATA_FOUND THEN
15:47:53 339  		RAISE BAD_NOTIFICATION_ID;
15:47:53 340  	  END;
15:47:53 341  
15:47:53 342  	  BEGIN
15:47:53 343  	    CORE_HIST_OWNER.PUBLIC_PROCS_CORE_V22.CREATE_NOTIFICATION_HISTORY (
15:47:53 344  	      in_notification_id	  => in_notification_id,
15:47:53 345  	      in_account_id		  => var_account_id,
15:47:53 346  	      in_group_id		  => var_group_id,
15:47:53 347  	      notification_reason_type_id => var_notification_type_id,
15:47:53 348  	      notification_status_id	  => var_notification_status_id,
15:47:53 349  	      email_template_params	  => var_email_template_params,
15:47:53 350  	      in_create_date		  => var_create_history_date,
15:47:53 351  	      in_date_to_notify 	  => var_date_to_notify
15:47:53 352  	    );
15:47:53 353  	    EXCEPTION
15:47:53 354  	      WHEN OTHERS THEN
15:47:53 355  		EXCEPTION_MESSAGE := SQLERRM;
15:47:53 356  		RAISE CAN_NOT_CREATE_HISTORY;
15:47:53 357  	  END;
15:47:53 358  
15:47:53 359  	  DELETE FROM NOTIFICATION WHERE ID = in_notification_id;
15:47:53 360  
15:47:53 361  	END IF;
15:47:53 362  	commit;
15:47:53 363  
15:47:53 364  EXCEPTION
15:47:53 365  WHEN BAD_NOTIFICATION_STATUS_ID THEN
15:47:53 366  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 367  	  SPROC_NAME, 'Bad notification status');
15:47:53 368  WHEN BAD_NOTIFICATION_ID THEN
15:47:53 369  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 370  	  SPROC_NAME, 'No such notification');
15:47:53 371  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:53 372  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:53 373  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:53 374  WHEN OTHERS THEN
15:47:53 375  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 376  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 377  END SET_NOTIFICATION_STATUS;
15:47:53 378  
15:47:53 379  /******************************************************************************/
15:47:53 380  
15:47:53 381  PROCEDURE ADD_NOTIFICATION_FAILURE (
15:47:53 382  /*
15:47:53 383  Throws exceptions:
15:47:53 384  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 385  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 386  */
15:47:53 387  	in_notification_id IN NUMBER,
15:47:53 388  	in_error_message   IN VARCHAR2
15:47:53 389  ) AS
15:47:53 390  SPROC_NAME CONSTANT VARCHAR2(32) := 'ADD_NOTIFICATION_FAILURE';
15:47:53 391  -- VARIABLES
15:47:53 392  temp_notification_id NUMBER;
15:47:53 393  var_create_date	   DATE := SYSDATE;
15:47:53 394  -- EXCEPTIONS
15:47:53 395  BAD_NOTIFICATION_ID	 EXCEPTION;
15:47:53 396  CAN_NOT_CREATE_HISTORY	 EXCEPTION;
15:47:53 397  EXCEPTION_MESSAGE 	 VARCHAR2(1024);
15:47:53 398  BEGIN
15:47:53 399  
15:47:53 400  	BEGIN
15:47:53 401  	  SELECT
15:47:53 402  	    NOTIFICATION.ID into temp_notification_id
15:47:53 403  	  FROM
15:47:53 404  	    NOTIFICATION
15:47:53 405  	  WHERE
15:47:53 406  	    NOTIFICATION.ID = in_notification_id;
15:47:53 407  	  EXCEPTION
15:47:53 408  	    WHEN NO_DATA_FOUND THEN
15:47:53 409  	      RAISE BAD_NOTIFICATION_ID;
15:47:53 410  	END;
15:47:53 411  
15:47:53 412  	INSERT INTO NOTIFICATION_FAILURE (
15:47:53 413  	  ID,
15:47:53 414  	  NOTIFICATION_ID,
15:47:53 415  	  ERROR_MESSAGE,
15:47:53 416  	  CREATE_DATE
15:47:53 417  	) VALUES (
15:47:53 418  	  NOTF_ID_SEQ.nextVal,
15:47:53 419  	  in_notification_id,
15:47:53 420  	  in_error_message,
15:47:53 421  	  sysdate
15:47:53 422  	);
15:47:53 423  
15:47:53 424  	--BEGIN
15:47:53 425  	--  OPS_HIST_OWNER.PUBLIC_PROCS_OPS_V22.CREATE_NOTIF_FAILURE_HISTORY(
15:47:53 426  	--    in_error_message	       => in_error_message,
15:47:53 427  	--    in_notification_queue_id => in_notification_id,
15:47:53 428  	--    in_create_date	       => var_create_date
15:47:53 429  	--  );
15:47:53 430  	--  EXCEPTION
15:47:53 431  	--    WHEN OTHERS THEN
15:47:53 432  	--	EXCEPTION_MESSAGE := SQLERRM;
15:47:53 433  	--	RAISE CAN_NOT_CREATE_HISTORY;
15:47:53 434  	--END;
15:47:53 435  
15:47:53 436  EXCEPTION
15:47:53 437  WHEN BAD_NOTIFICATION_ID THEN
15:47:53 438  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 439  	  SPROC_NAME, 'No such notification');
15:47:53 440  WHEN CAN_NOT_CREATE_HISTORY THEN
15:47:53 441  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
15:47:53 442  	  SPROC_NAME, 'Could not create history', EXCEPTION_MESSAGE);
15:47:53 443  WHEN OTHERS THEN
15:47:53 444  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 445  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 446  END ADD_NOTIFICATION_FAILURE;
15:47:53 447  
15:47:53 448  /******************************************************************************/
15:47:53 449  
15:47:53 450  PROCEDURE LOCK_PENDING_NOTIFICATION (
15:47:53 451  /*
15:47:53 452  Result: GLOBAL_STATUSES.TRUE if notification locked
15:47:53 453  GLOBA_STATUSES.FALSE - else
15:47:53 454  */
15:47:53 455  	in_notification_id IN NUMBER,
15:47:53 456  	out_lock_status    OUT NUMBER
15:47:53 457  ) AS
15:47:53 458  SPROC_NAME CONSTANT VARCHAR2(25) := 'LOCK_PENDING_NOTIFICATION';
15:47:53 459  -- VARIABLE
15:47:53 460  temp_notification_id NUMBER;
15:47:53 461  BEGIN
15:47:53 462  	SELECT
15:47:53 463  	  NOTIFICATION.ID into temp_notification_id
15:47:53 464  	FROM
15:47:53 465  	  NOTIFICATION
15:47:53 466  	WHERE
15:47:53 467  	  NOTIFICATION.ID = in_notification_id
15:47:53 468  	  AND (
15:47:53 469  	    NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V22.NOTIFICATION_PENDING
15:47:53 470  	    OR NOTIFICATION.NOTIFICATION_STATUS_ID = NOTIFICATION_STATUSES_V22.NOTIFICATION_FAILED
15:47:53 471  	  )
15:47:53 472  	FOR UPDATE;
15:47:53 473  
15:47:53 474  	out_lock_status := 1;
15:47:53 475  
15:47:53 476  EXCEPTION
15:47:53 477  WHEN NO_DATA_FOUND THEN
15:47:53 478  	out_lock_status := 0;
15:47:53 479  WHEN OTHERS THEN
15:47:53 480  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 481  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 482  END LOCK_PENDING_NOTIFICATION;
15:47:53 483  
15:47:53 484  /******************************************************************************/
15:47:53 485  
15:47:53 486  PROCEDURE GET_NOTIFICATION_DATA (
15:47:53 487  	in_notification_id IN NUMBER,
15:47:53 488  	out_result_set	   OUT SYS_REFCURSOR
15:47:53 489  ) AS
15:47:53 490  SPROC_NAME CONSTANT VARCHAR2(21) := 'GET_NOTIFICATION_DATA';
15:47:53 491  BEGIN
15:47:53 492  	OPEN out_result_set FOR
15:47:53 493  	SELECT
15:47:53 494  	  NOTIFICATION.ID,
15:47:53 495  	  NOTIFICATION.GROUP_ID,
15:47:53 496  	  NOTIFICATION.EMAIL_TEMPLATE_PARAMS,
15:47:53 497  	  NOTIFICATION.NOTIFICATION_STATUS_ID,
15:47:53 498  	  NOTIFICATION.CREATE_DATE,
15:47:53 499  	  NOTIFICATION.UPDATE_DATE,
15:47:53 500  	  NOTIFICATION.NOTIFICATION_TYPE_ID,
15:47:53 501  	  NOTIFICATION_TYPE.VALUE as "TYPE_VALUE",
15:47:53 502  	  NOTIFICATION_TYPE.TEMPLATE_URL
15:47:53 503  	FROM
15:47:53 504  	  NOTIFICATION
15:47:53 505  	  INNER JOIN NOTIFICATION_TYPE ON NOTIFICATION.NOTIFICATION_TYPE_ID = NOTIFICATION_TYPE.ID
15:47:53 506  	WHERE
15:47:53 507  	  NOTIFICATION.ID = in_notification_id;
15:47:53 508  
15:47:53 509  EXCEPTION
15:47:53 510  WHEN OTHERS THEN
15:47:53 511  	PROCS_COMMON_V22.THROW_EXCEPTION(CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
15:47:53 512  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:47:53 513  END GET_NOTIFICATION_DATA;
15:47:53 514  
15:47:53 515  END PROCS_NOTIFICATION_V22;
15:47:53 516  .
15:47:53 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:53 SQL> 
15:47:53 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_BILLING_V22" AS
15:47:53   2  
15:47:53   3  PROCEDURE GET_OFFER_CHAIN_BY_ID (
15:47:53   4  /*
15:47:53   5  Throws exceptions:
15:47:53   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53   8  */
15:47:53   9  	  in_offer_chain_id IN	 NUMBER,
15:47:53  10  	  out_result_set    OUT  SYS_REFCURSOR
15:47:53  11  ) AS
15:47:53  12  BEGIN
15:47:53  13  	PROCS_OFFER_CHAIN_V22.GET_OFFER_CHAIN_BY_ID (
15:47:53  14  	  in_offer_chain_id => in_offer_chain_id,
15:47:53  15  	  out_result_set => out_result_set
15:47:53  16  	);
15:47:53  17  END GET_OFFER_CHAIN_BY_ID;
15:47:53  18  
15:47:53  19  PROCEDURE GET_PENDING_INVOICES (
15:47:53  20  /*
15:47:53  21  Throws exceptions:
15:47:53  22  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53  23  */
15:47:53  24  	out_result_set	     OUT SYS_REFCURSOR,
15:47:53  25  	in_row_number	     IN NUMBER DEFAULT NULL
15:47:53  26  ) AS
15:47:53  27  BEGIN
15:47:53  28  	PROCS_INVOICE_V22.GET_PENDING_INVOICES(
15:47:53  29  	  out_result_set,
15:47:53  30  	  in_row_number
15:47:53  31  	);
15:47:53  32  END GET_PENDING_INVOICES;
15:47:53  33  
15:47:53  34  /********************************************************/
15:47:53  35  PROCEDURE GET_PENDING_REFUND_CHARGES (
15:47:53  36  /*
15:47:53  37  Throws exceptions:
15:47:53  38  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53  39  */
15:47:53  40  	out_result_set	    OUT SYS_REFCURSOR,
15:47:53  41  	in_row_number	    IN NUMBER DEFAULT NULL
15:47:53  42  ) AS
15:47:53  43  BEGIN
15:47:53  44  	PROCS_CHARGE_V22.GET_PENDING_REFUND_CHARGES(
15:47:53  45  	  out_result_set,
15:47:53  46  	  in_row_number
15:47:53  47  	);
15:47:53  48  END GET_PENDING_REFUND_CHARGES;
15:47:53  49  /********************************************************/
15:47:53  50  
15:47:53  51  PROCEDURE GET_UNPROCESSED_CHARGES (
15:47:53  52  /*
15:47:53  53  Throws exceptions:
15:47:53  54  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53  55  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53  56  */
15:47:53  57  	in_invoice_id  IN NUMBER,
15:47:53  58  	out_result_set OUT SYS_REFCURSOR
15:47:53  59  ) AS
15:47:53  60  BEGIN
15:47:53  61  	PROCS_CHARGE_V22.GET_UNPROCESSED_CHARGES(
15:47:53  62  	  in_invoice_id,
15:47:53  63  	  out_result_set
15:47:53  64  	);
15:47:53  65  END GET_UNPROCESSED_CHARGES;
15:47:53  66  
15:47:53  67  /********************************************************/
15:47:53  68  
15:47:53  69  PROCEDURE GET_PROCESSED_CHARGES (
15:47:53  70  /*
15:47:53  71  Throws exceptions:
15:47:53  72  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53  73  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53  74  */
15:47:53  75  	in_invoice_id  IN NUMBER,
15:47:53  76  	out_result_set OUT SYS_REFCURSOR
15:47:53  77  ) AS
15:47:53  78  BEGIN
15:47:53  79  	PROCS_CHARGE_V22.GET_PROCESSED_CHARGES(
15:47:53  80  	  in_invoice_id,
15:47:53  81  	  out_result_set
15:47:53  82  	);
15:47:53  83  END GET_PROCESSED_CHARGES;
15:47:53  84  
15:47:53  85  /********************************************************/
15:47:53  86  
15:47:53  87  PROCEDURE GET_TRNSCTN_ATTEMPTS_BY_STATUS (
15:47:53  88  /*
15:47:53  89  Throws exceptions:
15:47:53  90  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53  91  */
15:47:53  92  	in_transaction_id	      IN NUMBER,
15:47:53  93  	in_transaction_attempt_status IN NUMBER,
15:47:53  94  	out_result_set		      OUT SYS_REFCURSOR
15:47:53  95  ) AS
15:47:53  96  BEGIN
15:47:53  97  	PROCS_TRANSACTION_V22.GET_TRNSCTN_ATTEMPTS_BY_STATUS(
15:47:53  98  	  in_transaction_id,
15:47:53  99  	  in_transaction_attempt_status,
15:47:53 100  	  out_result_set
15:47:53 101  	);
15:47:53 102  END GET_TRNSCTN_ATTEMPTS_BY_STATUS;
15:47:53 103  
15:47:53 104  /********************************************************/
15:47:53 105  
15:47:53 106  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_STATUS (
15:47:53 107  /*
15:47:53 108  Throws exceptions:
15:47:53 109  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 110  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 111  */
15:47:53 112  	in_transaction_attempt_id     IN NUMBER,
15:47:53 113  	in_transaction_attempt_status IN NUMBER
15:47:53 114  ) AS
15:47:53 115  BEGIN
15:47:53 116  	PROCS_TRANSACTION_V22.UPDATE_TRNSCTN_ATTEMPT_STATUS(
15:47:53 117  	   in_transaction_attempt_id,
15:47:53 118  	   in_transaction_attempt_status
15:47:53 119  	);
15:47:53 120  END UPDATE_TRNSCTN_ATTEMPT_STATUS;
15:47:53 121  
15:47:53 122  /********************************************************/
15:47:53 123  PROCEDURE GET_CLOSED_REFUNDS_BY_INVOICE (
15:47:53 124  /*
15:47:53 125  Throws exceptions:
15:47:53 126  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 127  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 128  */
15:47:53 129  	in_invoice_id	IN  NUMBER,
15:47:53 130  	out_result_set OUT SYS_REFCURSOR
15:47:53 131  ) AS
15:47:53 132  BEGIN
15:47:53 133  	PROCS_TRANSACTION_V22.GET_CLOSED_REFUNDS_BY_INVOICE(
15:47:53 134  	   in_invoice_id,
15:47:53 135  	   out_result_set
15:47:53 136  	);
15:47:53 137  END GET_CLOSED_REFUNDS_BY_INVOICE;
15:47:53 138  
15:47:53 139  /********************************************************/
15:47:53 140  
15:47:53 141  PROCEDURE UPDATE_TRNSCTN_ATTEMPT_TIME (
15:47:53 142  /*
15:47:53 143  Throws exceptions:
15:47:53 144  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 145  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 146  */
15:47:53 147  	in_transaction_attempt_id IN NUMBER,
15:47:53 148  	in_updated_by		  IN VARCHAR2
15:47:53 149  ) AS
15:47:53 150  BEGIN
15:47:53 151  	PROCS_TRANSACTION_V22.UPDATE_TRNSCTN_ATTEMPT_TIME(
15:47:53 152  	  in_transaction_attempt_id,
15:47:53 153  	  in_updated_by
15:47:53 154  	);
15:47:53 155  END UPDATE_TRNSCTN_ATTEMPT_TIME;
15:47:53 156  
15:47:53 157  /********************************************************/
15:47:53 158  
15:47:53 159  PROCEDURE CREATE_TRANSACTION_ATTEMPT (
15:47:53 160  /*
15:47:53 161  Throws exceptions:
15:47:53 162  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 163  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 164  */
15:47:53 165  	in_transaction_id	   IN NUMBER,
15:47:53 166  	in_trans_attempt_status    IN NUMBER,
15:47:53 167  	in_external_status_code    IN VARCHAR2,
15:47:53 168  	in_external_status_message IN VARCHAR2,
15:47:53 169  	in_created_by		   IN VARCHAR2,
15:47:53 170  	in_ext_transaction_id	   IN VARCHAR2,
15:47:53 171  	out_transaction_attempt_id OUT NUMBER
15:47:53 172  ) AS
15:47:53 173  BEGIN
15:47:53 174  	PROCS_TRANSACTION_V22.CREATE_TRANSACTION_ATTEMPT(
15:47:53 175  	  in_transaction_id,
15:47:53 176  	  in_trans_attempt_status,
15:47:53 177  	  in_external_status_code,
15:47:53 178  	  in_external_status_message,
15:47:53 179  	  in_created_by,
15:47:53 180  	  in_ext_transaction_id,
15:47:53 181  	  out_transaction_attempt_id
15:47:53 182  	);
15:47:53 183  END CREATE_TRANSACTION_ATTEMPT;
15:47:53 184  
15:47:53 185  /********************************************************/
15:47:53 186  
15:47:53 187  PROCEDURE UPDATE_TRANSACTION_ATTEMPT_INF (
15:47:53 188  /*
15:47:53 189  Throws exceptions:
15:47:53 190  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 191  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 192  */
15:47:53 193  	in_transaction_attempt_id IN NUMBER,
15:47:53 194  	in_ext_status_code	  IN VARCHAR2,
15:47:53 195  	in_ext_status_message	  IN VARCHAR2,
15:47:53 196  	in_ext_transaction_id	  IN VARCHAR2
15:47:53 197  ) AS
15:47:53 198  BEGIN
15:47:53 199  	PROCS_TRANSACTION_V22.UPDATE_TRANSACTION_ATTEMPT_INF(
15:47:53 200  	  in_transaction_attempt_id,
15:47:53 201  	  in_ext_status_code,
15:47:53 202  	  in_ext_status_message,
15:47:53 203  	  in_ext_transaction_id
15:47:53 204  	);
15:47:53 205  END UPDATE_TRANSACTION_ATTEMPT_INF;
15:47:53 206  
15:47:53 207  /********************************************************/
15:47:53 208  
15:47:53 209  PROCEDURE UPDATE_TRANSACTION_STATUS (
15:47:53 210  /*
15:47:53 211  Throws exceptions:
15:47:53 212  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 213  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 214  */
15:47:53 215  	in_transaction_id	 IN NUMBER,
15:47:53 216  	in_updated_by		 IN VARCHAR2,
15:47:53 217  	in_transaction_status_id IN NUMBER
15:47:53 218  ) AS
15:47:53 219  BEGIN
15:47:53 220  	PROCS_TRANSACTION_V22.UPDATE_TRANSACTION_STATUS(
15:47:53 221  	  in_transaction_id,
15:47:53 222  	  in_updated_by,
15:47:53 223  	  in_transaction_status_id
15:47:53 224  	);
15:47:53 225  END UPDATE_TRANSACTION_STATUS;
15:47:53 226  
15:47:53 227  /********************************************************/
15:47:53 228  
15:47:53 229  PROCEDURE GET_FAILED_ATTEMPTS_NUMBER (
15:47:53 230  /*
15:47:53 231  Throws exceptions:
15:47:53 232  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 233  */
15:47:53 234  	in_transaction_id IN  NUMBER,
15:47:53 235  	out_attempts_num  OUT NUMBER
15:47:53 236  ) AS
15:47:53 237  BEGIN
15:47:53 238  	PROCS_TRANSACTION_V22.GET_FAILED_ATTEMPTS_NUMBER(
15:47:53 239  	  in_transaction_id,
15:47:53 240  	  out_attempts_num
15:47:53 241  	);
15:47:53 242  END GET_FAILED_ATTEMPTS_NUMBER;
15:47:53 243  
15:47:53 244  /********************************************************/
15:47:53 245  
15:47:53 246  PROCEDURE IS_TRANSACTION_SUCCESSFULL (
15:47:53 247  /*
15:47:53 248  Throws exceptions:
15:47:53 249  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 250  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 251  */
15:47:53 252  	in_transaction_id IN  NUMBER,
15:47:53 253  	out_is_successfull  OUT NUMBER
15:47:53 254  ) AS
15:47:53 255  BEGIN
15:47:53 256  	PROCS_TRANSACTION_V22.IS_TRANSACTION_SUCCESSFULL(
15:47:53 257  	  in_transaction_id,
15:47:53 258  	  out_is_successfull
15:47:53 259  	);
15:47:53 260  END IS_TRANSACTION_SUCCESSFULL;
15:47:53 261  /********************************************************/
15:47:53 262  
15:47:53 263  PROCEDURE UPDATE_INVOICE_STATUS (
15:47:53 264  /*
15:47:53 265  Throws exceptions:
15:47:53 266  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 267  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 268  */
15:47:53 269  	in_invoice_id		       IN NUMBER,
15:47:53 270  	in_invoice_status_id	       IN NUMBER,
15:47:53 271  	in_updated_by		       IN VARCHAR2
15:47:53 272  ) AS
15:47:53 273  BEGIN
15:47:53 274  	PROCS_INVOICE_V22.UPDATE_INVOICE_STATUS(
15:47:53 275  	  in_invoice_id,
15:47:53 276  	  in_invoice_status_id,
15:47:53 277  	  in_updated_by
15:47:53 278  	);
15:47:53 279  END UPDATE_INVOICE_STATUS;
15:47:53 280  
15:47:53 281  /********************************************************/
15:47:53 282  
15:47:53 283  PROCEDURE SUSPEND_SUBSCRIPTION(
15:47:53 284  /*
15:47:53 285  Throws exceptions:
15:47:53 286  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 287  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:53 288  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 289  */
15:47:53 290  	  in_subs_id	IN NUMBER ,
15:47:53 291  	  in_updated_by IN VARCHAR2
15:47:53 292  ) AS
15:47:53 293  BEGIN
15:47:53 294  	PROCS_SUBSCRIPTION_V22.SUSPEND_SUBSCRIPTION(
15:47:53 295  	  in_subs_id,
15:47:53 296  	  in_updated_by
15:47:53 297  	);
15:47:53 298  END SUSPEND_SUBSCRIPTION;
15:47:53 299  
15:47:53 300  /********************************************************/
15:47:53 301  
15:47:53 302  PROCEDURE GET_CREDIT_CARD_BY_ID (
15:47:53 303  /*
15:47:53 304  Throws exceptions:
15:47:53 305  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 306  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 307  */
15:47:53 308  	in_credit_card_id IN  NUMBER,
15:47:53 309  	out_result_set	  OUT SYS_REFCURSOR
15:47:53 310  ) AS
15:47:53 311  BEGIN
15:47:53 312  	PROCS_FIN_INSTRUMENTS_V22.GET_CREDIT_CARD_BY_ID(
15:47:53 313  	  in_credit_card_id,
15:47:53 314  	  out_result_set
15:47:53 315  	);
15:47:53 316  END GET_CREDIT_CARD_BY_ID;
15:47:53 317  
15:47:53 318  /*********************************************************/
15:47:53 319  
15:47:53 320  PROCEDURE GET_TRANSACTION_AMOUNT (
15:47:53 321  /*
15:47:53 322  Throws exceptions:
15:47:53 323  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 324  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 325  */
15:47:53 326  	in_transaction_id      IN  NUMBER,
15:47:53 327  	out_transaction_amount OUT NUMBER
15:47:53 328  ) AS
15:47:53 329  BEGIN
15:47:53 330  	PROCS_TRANSACTION_V22.GET_TRANSACTION_AMOUNT(
15:47:53 331  	  in_transaction_id,
15:47:53 332  	  out_transaction_amount
15:47:53 333  	);
15:47:53 334  END GET_TRANSACTION_AMOUNT;
15:47:53 335  
15:47:53 336  /***********************************************************/
15:47:53 337  
15:47:53 338  PROCEDURE GET_ACCOUNT_BY_INVOICE_ID (
15:47:53 339  /*
15:47:53 340  Throws exceptions:
15:47:53 341  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 342  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 343  */
15:47:53 344  	in_invoice_id  IN  NUMBER,
15:47:53 345  	out_account_id OUT NUMBER
15:47:53 346  ) AS
15:47:53 347  BEGIN
15:47:53 348  	PROCS_INVOICE_V22.GET_ACCOUNT_BY_INVOICE_ID(
15:47:53 349  	  in_invoice_id,
15:47:53 350  	  out_account_id
15:47:53 351  	);
15:47:53 352  END GET_ACCOUNT_BY_INVOICE_ID;
15:47:53 353  
15:47:53 354  /************************************************************/
15:47:53 355  
15:47:53 356  PROCEDURE GET_GIFT_CERTIFICATE_BY_ID (
15:47:53 357  /*
15:47:53 358  Throws exceptions:
15:47:53 359  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 360  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 361  */
15:47:53 362  	in_gift_certificate_id IN NUMBER,
15:47:53 363  	out_result_set	       OUT SYS_REFCURSOR
15:47:53 364  ) AS
15:47:53 365  BEGIN
15:47:53 366  	PROCS_FIN_INSTRUMENTS_V22.GET_GIFT_CERTIFICATE_BY_ID (
15:47:53 367  	  in_gift_certificate_id,
15:47:53 368  	  out_result_set
15:47:53 369  	);
15:47:53 370  END GET_GIFT_CERTIFICATE_BY_ID;
15:47:53 371  
15:47:53 372  /**************************************************************/
15:47:53 373  
15:47:53 374  PROCEDURE GET_SUBSCR_ID_BY_CHARGE_ID (
15:47:53 375  /*
15:47:53 376  Throws exceptions:
15:47:53 377  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 378  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 379  */
15:47:53 380  	in_charge_id	    IN NUMBER,
15:47:53 381  	out_subscription_id OUT NUMBER
15:47:53 382  ) AS
15:47:53 383  BEGIN
15:47:53 384  	PROCS_CHARGE_V22.GET_SUBSCR_ID_BY_CHARGE_ID(
15:47:53 385  	  in_charge_id,
15:47:53 386  	  out_subscription_id
15:47:53 387  	);
15:47:53 388  END GET_SUBSCR_ID_BY_CHARGE_ID;
15:47:53 389  
15:47:53 390  /**************************************************************/
15:47:53 391  
15:47:53 392  PROCEDURE IS_GCERT_FOR_PROPER_OFFER (
15:47:53 393  /*
15:47:53 394  Throws exceptions:
15:47:53 395  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 396  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 397  */
15:47:53 398  	in_gift_certificate_id IN NUMBER,
15:47:53 399  	in_charge_id	       IN NUMBER,
15:47:53 400  	out_result	       OUT NUMBER
15:47:53 401  ) AS
15:47:53 402  BEGIN
15:47:53 403  	PROCS_FIN_INSTRUMENTS_V22.IS_GCERT_FOR_PROPER_OFFER (
15:47:53 404  	  in_gift_certificate_id,
15:47:53 405  	  in_charge_id,
15:47:53 406  	  out_result
15:47:53 407  	);
15:47:53 408  END IS_GCERT_FOR_PROPER_OFFER;
15:47:53 409  
15:47:53 410  /**************************************************************/
15:47:53 411  
15:47:53 412  PROCEDURE GET_SUBSCRIPTION_INFO (
15:47:53 413  /*
15:47:53 414  Throws exceptions:
15:47:53 415  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 416  */
15:47:53 417  	  in_subscription_id IN  NUMBER,
15:47:53 418  	  out_result_set      OUT SYS_REFCURSOR
15:47:53 419  ) AS
15:47:53 420  BEGIN
15:47:53 421  	PROCS_SUBSCRIPTION_V22.GET_SUBSCRIPTION_INFO (
15:47:53 422  	  in_subscription_id,
15:47:53 423  	  out_result_set
15:47:53 424  	);
15:47:53 425  END GET_SUBSCRIPTION_INFO;
15:47:53 426  
15:47:53 427  /****************************************************************/
15:47:53 428  
15:47:53 429  PROCEDURE CALCULATE_INVOICE_AMOUNT (
15:47:53 430  /*
15:47:53 431  Throws exceptions:
15:47:53 432  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 433  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 434  */
15:47:53 435  	in_invoice_id IN  NUMBER,
15:47:53 436  	out_amount    OUT NUMBER
15:47:53 437  ) AS
15:47:53 438  BEGIN
15:47:53 439  	PROCS_INVOICE_V22.CALCULATE_INVOICE_AMOUNT (
15:47:53 440  	  in_invoice_id,
15:47:53 441  	  out_amount
15:47:53 442  	);
15:47:53 443  END CALCULATE_INVOICE_AMOUNT;
15:47:53 444  
15:47:53 445  /****************************************************************/
15:47:53 446  
15:47:53 447  PROCEDURE GET_TRANSACTION_BY_ID (
15:47:53 448  /*
15:47:53 449  Throws exceptions:
15:47:53 450  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 451  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 452  */
15:47:53 453  	in_transaction_id IN NUMBER,
15:47:53 454  	out_result_set	  OUT SYS_REFCURSOR
15:47:53 455  ) AS
15:47:53 456  BEGIN
15:47:53 457  	PROCS_TRANSACTION_V22.GET_TRANSACTION_BY_ID(
15:47:53 458  	  in_transaction_id,
15:47:53 459  	  out_result_set
15:47:53 460  	);
15:47:53 461  END GET_TRANSACTION_BY_ID;
15:47:53 462  
15:47:53 463  /****************************************************************/
15:47:53 464  
15:47:53 465  PROCEDURE UPDATE_CHARGE_STATUS (
15:47:53 466  /*
15:47:53 467  Throws exceptions:
15:47:53 468  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 469  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 470  */
15:47:53 471  	in_charge_id	    IN CHARGE.ID%TYPE,
15:47:53 472  	in_charge_status_id IN CHARGE.CHARGE_STATUS_ID%TYPE,
15:47:53 473  	in_updated_by	    IN CHARGE.UPDATED_BY%TYPE
15:47:53 474  ) AS
15:47:53 475  BEGIN
15:47:53 476  	PROCS_CHARGE_V22.UPDATE_CHARGE_STATUS(
15:47:53 477  	  in_charge_id,
15:47:53 478  	  in_charge_status_id,
15:47:53 479  	  in_updated_by
15:47:53 480  	);
15:47:53 481  END UPDATE_CHARGE_STATUS;
15:47:53 482  
15:47:53 483  /****************************************************************/
15:47:53 484  
15:47:53 485  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
15:47:53 486  	in_invoice_id		IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:53 487  	out_result_set OUT SYS_REFCURSOR
15:47:53 488  ) AS
15:47:53 489  BEGIN
15:47:53 490  	PROCS_FIN_INSTRUMENTS_V22.GET_GC_BY_PURCH_INVOICE_ID(
15:47:53 491  	  in_invoice_id,
15:47:53 492  	  out_result_set
15:47:53 493  	);
15:47:53 494  END GET_GC_BY_PURCH_INVOICE_ID;
15:47:53 495  
15:47:53 496  /****************************************************************/
15:47:53 497  
15:47:53 498  PROCEDURE UPDATE_TRANSACTION_ORDER_ID (
15:47:53 499  /*
15:47:53 500  Throws exceptions:
15:47:53 501  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 502  APP_EXCEPTION_CODES_V22.INTRNAL_ERROR
15:47:53 503  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 504  */
15:47:53 505  	in_transaction_id IN TRANSACTION.ID%TYPE,
15:47:53 506  	in_order_id	  IN TRANSACTION.ORDER_ID%TYPE,
15:47:53 507  	in_updated_by	  IN TRANSACTION.UPDATED_BY%TYPE
15:47:53 508  ) AS
15:47:53 509  BEGIN
15:47:53 510  	PROCS_TRANSACTION_V22.UPDATE_TRANSACTION_ORDER_ID(
15:47:53 511  	  in_transaction_id,
15:47:53 512  	  in_order_id,
15:47:53 513  	  in_updated_by
15:47:53 514  	);
15:47:53 515  END UPDATE_TRANSACTION_ORDER_ID;
15:47:53 516  
15:47:53 517  /****************************************************************/
15:47:53 518  
15:47:53 519  PROCEDURE GET_ACTIVE_INVOICES_IDS (
15:47:53 520  /*
15:47:53 521  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 522  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 523  */
15:47:53 524  --  in_subscription_id IN SUBSCRIPTION.ID%TYPE,
15:47:53 525  	in_subscription_id IN NUMBER,
15:47:53 526  	out_result_set	   OUT SYS_REFCURSOR
15:47:53 527  ) AS
15:47:53 528  BEGIN
15:47:53 529  	PROCS_SUBSCRIPTION_V22.GET_ACTIVE_INVOICES_IDS(
15:47:53 530  	  in_subscription_id,
15:47:53 531  	  out_result_set
15:47:53 532  	);
15:47:53 533  END GET_ACTIVE_INVOICES_IDS;
15:47:53 534  
15:47:53 535  /****************************************************************/
15:47:53 536  
15:47:53 537  PROCEDURE CANCEL_SUBSCRIPTION_INVOICE (
15:47:53 538  /*
15:47:53 539  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 540  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 541  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:53 542  */
15:47:53 543  --  in_invoice_id        IN INVOICE.ID%TYPE,
15:47:53 544  --  in_updated_by        IN INVOICE.UPDATED_BY%TYPE,
15:47:53 545  -- norlov: in_refundable	      IN refund enabled
15:47:53 546  	in_invoice_id	     IN NUMBER,
15:47:53 547  	in_updated_by	     IN VARCHAR2,
15:47:53 548  	in_refundable	     IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE
15:47:53 549  --  in_cancellation_date IN DATE DEFAULT current_timestamp
15:47:53 550  ) AS
15:47:53 551  BEGIN
15:47:53 552  	PROCS_SUBSCRIPTION_V22.CANCEL_SUBSCRIPTION_INVOICE(
15:47:53 553  	  in_invoice_id,
15:47:53 554  	  in_updated_by,
15:47:53 555  	  in_refundable
15:47:53 556  	);
15:47:53 557  END CANCEL_SUBSCRIPTION_INVOICE;
15:47:53 558  
15:47:53 559  /****************************************************************/
15:47:53 560  
15:47:53 561  PROCEDURE FINALIZE_CANCELATION (
15:47:53 562  /*
15:47:53 563  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 564  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 565  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:53 566  */
15:47:53 567  --  in_subscription_id	IN SUBSCRIPTION.ID%TYPE,
15:47:53 568  --  in_cancelation_reason IN SUBSCRIPTION_CANCEL_REASON.VALUE%TYPE,
15:47:53 569  --  in_cancelation_date	IN SUBSCRIPTION.CANCELLATION_DATE%TYPE,
15:47:53 570  --  in_note		IN SUBSCRIPTION_NOTE.NOTE%TYPE,
15:47:53 571  --  in_agent_id		IN SUBSCRIPTION_NOTE.AGENT_ID%TYPE,
15:47:53 572  --  in_updated_by 	IN SUBSCRIPTION.UPDATED_BY%TYPE
15:47:53 573  	in_subscription_id    IN NUMBER,
15:47:53 574  	in_cancelation_reason IN VARCHAR2,
15:47:53 575  	in_cancelation_date   IN DATE,
15:47:53 576  	in_note 	      IN VARCHAR2,
15:47:53 577  	in_agent_id	      IN NUMBER,
15:47:53 578  	in_updated_by	      IN VARCHAR2
15:47:53 579  ) AS
15:47:53 580  BEGIN
15:47:53 581  	PROCS_SUBSCRIPTION_V22.FINALIZE_CANCELATION(
15:47:53 582  	  in_subscription_id,
15:47:53 583  	  in_cancelation_reason,
15:47:53 584  	  in_cancelation_date,
15:47:53 585  	  in_note,
15:47:53 586  	  in_agent_id,
15:47:53 587  	  in_updated_by
15:47:53 588  	);
15:47:53 589  END FINALIZE_CANCELATION;
15:47:53 590  
15:47:53 591  /****************************************************************/
15:47:53 592  
15:47:53 593  PROCEDURE GET_SUBSCR_PROD_OFFERRINGS (
15:47:53 594  /*
15:47:53 595  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 596  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 597  */
15:47:53 598  	in_subscription_id IN NUMBER,
15:47:53 599  	out_result_set	   OUT SYS_REFCURSOR
15:47:53 600  ) AS
15:47:53 601  BEGIN
15:47:53 602  	PROCS_SUBSCRIPTION_V22.GET_SUBSCR_PROD_OFFERRINGS(
15:47:53 603  	  in_subscription_id,
15:47:53 604  	  out_result_set
15:47:53 605  	);
15:47:53 606  END GET_SUBSCR_PROD_OFFERRINGS;
15:47:53 607  
15:47:53 608  /****************************************************************/
15:47:53 609  
15:47:53 610  PROCEDURE GET_OFFER_CHAIN_META_DATA (
15:47:53 611  /*
15:47:53 612  Throws exceptions (codes):
15:47:53 613  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 614  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 615  */
15:47:53 616  	in_offer_chain_id IN NUMBER,
15:47:53 617  	in_meta_data_name IN VARCHAR2,
15:47:53 618  	out_result_set	  OUT SYS_REFCURSOR
15:47:53 619  )AS
15:47:53 620  BEGIN
15:47:53 621  	PROCS_OFFER_CHAIN_V22.GET_OFFER_CHAIN_META_DATA(
15:47:53 622  	  in_offer_chain_id,
15:47:53 623  	  in_meta_data_name,
15:47:53 624  	  out_result_set
15:47:53 625  	);
15:47:53 626  END GET_OFFER_CHAIN_META_DATA;
15:47:53 627  
15:47:53 628  /****************************************************************/
15:47:53 629  
15:47:53 630  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
15:47:53 631  /*
15:47:53 632  Throws exceptions (codes):
15:47:53 633  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 634  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 635  */
15:47:53 636  	in_product_offering_id IN NUMBER,
15:47:53 637  	in_meta_data_name      IN VARCHAR2 DEFAULT NULL,
15:47:53 638  	out_result_set	       OUT SYS_REFCURSOR
15:47:53 639  )AS
15:47:53 640  BEGIN
15:47:53 641  	PROCS_OFFER_CHAIN_V22.GET_PRODUCT_OFFERING_META_DATA(
15:47:53 642  	  in_product_offering_id,
15:47:53 643  	  in_meta_data_name,
15:47:53 644  	  out_result_set
15:47:53 645  	);
15:47:53 646  END GET_PRODUCT_OFFERING_META_DATA;
15:47:53 647  
15:47:53 648  /****************************************************************/
15:47:53 649  
15:47:53 650  PROCEDURE READ_ACCOUNT (
15:47:53 651  	in_account_id  IN ACCOUNT.ID%TYPE,
15:47:53 652  	out_result_set OUT SYS_REFCURSOR
15:47:53 653  )AS
15:47:53 654  BEGIN
15:47:53 655  	PROCS_ACCOUNT_CRU_V22.READ_ACCOUNT(
15:47:53 656  	  in_account_id,
15:47:53 657  	  out_result_set
15:47:53 658  	);
15:47:53 659  END READ_ACCOUNT;
15:47:53 660  
15:47:53 661  /****************************************************************/
15:47:53 662  
15:47:53 663  PROCEDURE GET_COLLECTED_CHARGES (
15:47:53 664  /*
15:47:53 665  Throws exceptions:
15:47:53 666  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 667  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 668  */
15:47:53 669  	in_invoice_id  IN NUMBER,
15:47:53 670  	out_result_set OUT SYS_REFCURSOR
15:47:53 671  ) AS
15:47:53 672  BEGIN
15:47:53 673  	PROCS_CHARGE_V22.GET_COLLECTED_CHARGES(
15:47:53 674  	  in_invoice_id,
15:47:53 675  	  out_result_set
15:47:53 676  	);
15:47:53 677  END GET_COLLECTED_CHARGES;
15:47:53 678  
15:47:53 679  /****************************************************************/
15:47:53 680  
15:47:53 681  PROCEDURE GET_GROUPS_ID_BY_INVOICE_ID (
15:47:53 682  /*
15:47:53 683  Throws exceptions:
15:47:53 684  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 685  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 686  */
15:47:53 687  	in_invoice_id IN NUMBER,
15:47:53 688  	out_group_ids OUT SYS_REFCURSOR
15:47:53 689  ) AS
15:47:53 690  BEGIN
15:47:53 691  
15:47:53 692  	PROCS_ACCOUNT_V22.GET_GROUPS_ID_BY_INVOICE_ID(
15:47:53 693  	  in_invoice_id,
15:47:53 694  	  out_group_ids
15:47:53 695  	);
15:47:53 696  
15:47:53 697  END GET_GROUPS_ID_BY_INVOICE_ID;
15:47:53 698  
15:47:53 699  /****************************************************************/
15:47:53 700  
15:47:53 701  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
15:47:53 702  /*
15:47:53 703  Throws exceptions:
15:47:53 704  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:53 705  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 706  */
15:47:53 707  	in_group_id IN NUMBER,
15:47:53 708  	out_account_id	OUT NUMBER
15:47:53 709  ) AS
15:47:53 710  BEGIN
15:47:53 711  
15:47:53 712  	PROCS_ACCOUNT_V22.GET_ACCOUNT_ID_BY_GROUP_ID(
15:47:53 713  	  in_group_id,
15:47:53 714  	  out_account_id
15:47:53 715  	);
15:47:53 716  
15:47:53 717  END GET_ACCOUNT_ID_BY_GROUP_ID;
15:47:53 718  
15:47:53 719  /****************************************************************/
15:47:53 720  
15:47:53 721  PROCEDURE LOCK_ACCOUNT (
15:47:53 722  	in_group_id    IN NUMBER,
15:47:53 723  	in_lock_key    IN VARCHAR2,
15:47:53 724  	in_seconds_num IN NUMBER,
15:47:53 725  	in_created_by  IN VARCHAR2,
15:47:53 726  	in_reason      IN VARCHAR2
15:47:53 727  ) AS
15:47:53 728  BEGIN
15:47:53 729  	PROCS_LOCKING_V22.LOCK_ACCOUNT(
15:47:53 730  	  in_group_id,
15:47:53 731  	  in_lock_key,
15:47:53 732  	  in_seconds_num,
15:47:53 733  	  in_created_by,
15:47:53 734  	  in_reason
15:47:53 735  	);
15:47:53 736  END LOCK_ACCOUNT;
15:47:53 737  
15:47:53 738  /****************************************************************/
15:47:53 739  
15:47:53 740  PROCEDURE RELEASE_LOCK (
15:47:53 741  	in_group_id IN NUMBER,
15:47:53 742  	in_lock_key IN VARCHAR2
15:47:53 743  ) AS
15:47:53 744  BEGIN
15:47:53 745  	PROCS_LOCKING_V22.RELEASE_LOCK(
15:47:53 746  	  in_group_id,
15:47:53 747  	  in_lock_key
15:47:53 748  	);
15:47:53 749  END RELEASE_LOCK;
15:47:53 750  
15:47:53 751  PROCEDURE GET_PAYMENT_INFO_BY_INVOICE_ID (
15:47:53 752  	in_invoice_id		    IN NUMBER,
15:47:53 753  	out_order_id		    OUT VARCHAR2,
15:47:53 754  	out_external_transaction_id OUT VARCHAR2
15:47:53 755  ) AS
15:47:53 756  BEGIN
15:47:53 757  	PROCS_INVOICE_V22.GET_PAYMENT_INFO_BY_INVOICE_ID(
15:47:53 758  	  in_invoice_id,
15:47:53 759  	  out_order_id,
15:47:53 760  	  out_external_transaction_id
15:47:53 761  	);
15:47:53 762  END GET_PAYMENT_INFO_BY_INVOICE_ID;
15:47:53 763  
15:47:53 764  /******************************************************************************/
15:47:53 765  
15:47:53 766  PROCEDURE GET_PAYPAL_BY_ID (
15:47:53 767  	in_paypal_id   IN  NUMBER,
15:47:53 768  	out_result_set OUT SYS_REFCURSOR
15:47:53 769  ) AS
15:47:53 770  BEGIN
15:47:53 771  	PROCS_FIN_INSTRUMENTS_V22.GET_PAYPAL_BY_ID(
15:47:53 772  	  in_paypal_id,
15:47:53 773  	  out_result_set
15:47:53 774  	);
15:47:53 775  END GET_PAYPAL_BY_ID;
15:47:53 776  
15:47:53 777  PROCEDURE GET_NEXT_ATTEMPT_NUMBER (
15:47:53 778  /*
15:47:53 779  Throws exceptions:
15:47:53 780  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 781  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 782  */
15:47:53 783  	in_charge_id   in  number,
15:47:53 784  	out_attempt_count out number
15:47:53 785  ) as
15:47:53 786  begin
15:47:53 787  	PROCS_TRANSACTION_V22.GET_NEXT_ATTEMPT_NUMBER(
15:47:53 788  	  in_charge_id,
15:47:53 789  	  out_attempt_count
15:47:53 790  	);
15:47:53 791  end GET_NEXT_ATTEMPT_NUMBER;
15:47:53 792  
15:47:53 793  PROCEDURE GET_NOTIFICATION_TYPE_ID (
15:47:53 794  	in_offer_chain_id	 IN NUMBER,
15:47:53 795  	in_action_name		 IN VARCHAR2,
15:47:53 796  	out_notification_type_id out number
15:47:53 797  ) as
15:47:53 798  begin
15:47:53 799  	PROCS_OFFER_CHAIN_V22.GET_NOTIFICATION_TYPE_ID(
15:47:53 800  	  in_offer_chain_id,
15:47:53 801  	  in_action_name,
15:47:53 802  	  out_notification_type_id
15:47:53 803  	);
15:47:53 804  end GET_NOTIFICATION_TYPE_ID;
15:47:53 805  
15:47:53 806  PROCEDURE GET_GC_ID_BY_PURCH_INVOICE_ID (
15:47:53 807  /*
15:47:53 808  Throws exceptions:
15:47:53 809  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:53 810  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:53 811  */
15:47:53 812  in_invoice_id IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:53 813  out_gift_certificate_id OUT GIFT_CERTIFICATE.ID%TYPE
15:47:53 814  ) AS
15:47:53 815  BEGIN
15:47:53 816  PROCS_FIN_INSTRUMENTS_V22.GET_GC_ID_BY_PURCH_INVOICE_ID(
15:47:53 817  in_invoice_id,
15:47:53 818  out_gift_certificate_id
15:47:53 819  );
15:47:53 820  END GET_GC_ID_BY_PURCH_INVOICE_ID;
15:47:53 821  
15:47:53 822  /****************************************************************************/
15:47:53 823  
15:47:53 824  PROCEDURE SHOULD_MOVE_TO_GRACE(
15:47:53 825  	in_invoice_id  IN INVOICE.ID%TYPE,
15:47:53 826  	out_result     OUT NUMBER
15:47:53 827  ) AS
15:47:53 828  BEGIN
15:47:53 829  	-- if the invoice preceding the given invoice has no transaction attempts, then
15:47:53 830  	-- it is not billed out of Sartre. if so, then the associated subscription
15:47:53 831  	-- should be canceled after a final failed billing attempt--not moved to grace.
15:47:53 832  	SELECT DECODE(COUNT(1), 0, 0, 1) INTO out_result
15:47:53 833  	FROM CHARGE c
15:47:53 834  	INNER JOIN TRANSACTION t ON c.TRANSACTION_ID = t.ID
15:47:53 835  	INNER JOIN TRANSACTION_ATTEMPT ta ON ta.TRANSACTION_ID = t.ID
15:47:53 836  	WHERE c.INVOICE_ID = (
15:47:53 837  	  -- select previous invoice_id, or -1 if there is none
15:47:53 838  	  SELECT PREV_INVOICE_ID FROM (
15:47:53 839  	    SELECT i.ID, LAG(i.ID, 1, -1) OVER (ORDER BY i.CREATE_DATE) AS PREV_INVOICE_ID
15:47:53 840  	    FROM INVOICE i
15:47:53 841  	    INNER JOIN LICENSE l ON i.ID = l.INVOICE_ID
15:47:53 842  	    WHERE l.SUBSCRIPTION_ID = (
15:47:53 843  	      SELECT SUBSCRIPTION_ID FROM LICENSE WHERE INVOICE_ID = in_invoice_id
15:47:53 844  	    )
15:47:53 845  	  ) WHERE ID = in_invoice_id
15:47:53 846  	);
15:47:53 847  END SHOULD_MOVE_TO_GRACE;
15:47:53 848  
15:47:53 849  /****************************************************************************/
15:47:53 850  
15:47:53 851  PROCEDURE MOVE_TO_GRACE(
15:47:53 852  	in_invoice_id		      IN INVOICE.ID%TYPE,
15:47:53 853  	in_updated_by		      IN LICENSE.UPDATED_BY%TYPE,
15:47:53 854  	in_grace_period_length_hours  IN NUMBER
15:47:53 855  ) AS
15:47:53 856  BEGIN
15:47:53 857  	PROCS_SUBSCRIPTION_V22.START_GRACE_BY_INVOICE_ID(
15:47:53 858  	  in_invoice_id        => in_invoice_id,
15:47:53 859  	  in_updater	       => in_updated_by,
15:47:53 860  	  in_duration_in_hours => in_grace_period_length_hours
15:47:53 861  	);
15:47:53 862  END MOVE_TO_GRACE;
15:47:53 863  
15:47:53 864  /****************************************************************************/
15:47:53 865  
15:47:53 866  PROCEDURE MOVE_OUT_OF_GRACE(
15:47:53 867  	in_invoice_id	IN INVOICE.ID%TYPE,
15:47:53 868  	in_updated_by	IN LICENSE.UPDATED_BY%TYPE
15:47:53 869  ) AS
15:47:53 870  BEGIN
15:47:53 871  	PROCS_SUBSCRIPTION_V22.STOP_GRACE_BY_INVOICE_ID(
15:47:53 872  	  in_invoice_id => in_invoice_id,
15:47:53 873  	  in_updater	=> in_updated_by
15:47:53 874  	);
15:47:53 875  END MOVE_OUT_OF_GRACE;
15:47:53 876  
15:47:53 877  END PUBLIC_PROCS_BILLING_V22;
15:47:53 878  .
15:47:53 SQL> /

Package body created.

Elapsed: 00:00:00.10
15:47:54 SQL> 
15:47:54 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_NOTIFICATION_V22" AS
15:47:54   2  
15:47:54   3  PROCEDURE LOCK_ACCOUNT (
15:47:54   4  	in_group_id    IN NUMBER,
15:47:54   5  	in_lock_key    IN VARCHAR2,
15:47:54   6  	in_seconds_num IN NUMBER,
15:47:54   7  	in_created_by  IN VARCHAR2,
15:47:54   8  	in_reason      IN VARCHAR2
15:47:54   9  ) AS
15:47:54  10  BEGIN
15:47:54  11  	PROCS_LOCKING_V22.LOCK_ACCOUNT(
15:47:54  12  	  in_group_id,
15:47:54  13  	  in_lock_key,
15:47:54  14  	  in_seconds_num,
15:47:54  15  	  in_created_by,
15:47:54  16  	  in_reason
15:47:54  17  	);
15:47:54  18  END LOCK_ACCOUNT;
15:47:54  19  
15:47:54  20  /******************************************************************************/
15:47:54  21  
15:47:54  22  PROCEDURE RELEASE_LOCK (
15:47:54  23  	in_group_id IN NUMBER,
15:47:54  24  	in_lock_key IN VARCHAR2
15:47:54  25  ) AS
15:47:54  26  BEGIN
15:47:54  27  	PROCS_LOCKING_V22.RELEASE_LOCK(
15:47:54  28  	  in_group_id,
15:47:54  29  	  in_lock_key
15:47:54  30  	);
15:47:54  31  END RELEASE_LOCK;
15:47:54  32  
15:47:54  33  END PUBLIC_PROCS_NOTIFICATION_V22;
15:47:54  34  .
15:47:54 SQL> /

Package body created.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_RENEWAL_V22" AS
15:47:54   2  
15:47:54   3  PROCEDURE SUB_EXPIRES_NEED_ENTITLEMENTS (
15:47:54   4  	out_result_set OUT SYS_REFCURSOR
15:47:54   5  ) AS
15:47:54   6  BEGIN
15:47:54   7  	PROCS_GROUP_ACCOUNT_V22.SUB_EXPIRES_NEED_ENTITLEMENTS(out_result_set => out_result_set);
15:47:54   8  END SUB_EXPIRES_NEED_ENTITLEMENTS;
15:47:54   9  
15:47:54  10  PROCEDURE UPDATE_SS_NEED_ENTITLEMENTS (
15:47:54  11  	in_sub_share_id      IN SUBSCRIPTION_SHARE.ID%TYPE,
15:47:54  12  	in_need_entitlements IN SUBSCRIPTION_SHARE.NEEDS_ENTITLEMENTS%TYPE,
15:47:54  13  	in_updater	     IN SUBSCRIPTION_SHARE.UPDATED_BY%TYPE
15:47:54  14  ) AS
15:47:54  15  BEGIN
15:47:54  16  	PROCS_GROUP_ACCOUNT_V22.UPDATE_SS_NEED_ENTITLEMENTS(
15:47:54  17  	  in_sub_share_id => in_sub_share_id,
15:47:54  18  	  in_need_entitlements => in_need_entitlements,
15:47:54  19  	  in_updater => in_updater
15:47:54  20  	);
15:47:54  21  END UPDATE_SS_NEED_ENTITLEMENTS;
15:47:54  22  
15:47:54  23  PROCEDURE GET_OFFER_CHAIN_BY_ID (
15:47:54  24  /*
15:47:54  25  Throws exceptions:
15:47:54  26  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54  27  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54  28  */
15:47:54  29  	  in_offer_chain_id IN	 NUMBER,
15:47:54  30  	  out_result_set    OUT  SYS_REFCURSOR
15:47:54  31  ) AS
15:47:54  32  BEGIN
15:47:54  33  	PROCS_OFFER_CHAIN_V22.GET_OFFER_CHAIN_BY_ID (
15:47:54  34  	  in_offer_chain_id => in_offer_chain_id,
15:47:54  35  	  out_result_set => out_result_set
15:47:54  36  	);
15:47:54  37  END GET_OFFER_CHAIN_BY_ID;
15:47:54  38  
15:47:54  39  PROCEDURE GET_OFFER_CHAIN_META_DATA (
15:47:54  40  /*
15:47:54  41  Throws exceptions (codes):
15:47:54  42  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54  43  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54  44  */
15:47:54  45  	in_offer_chain_id IN NUMBER,
15:47:54  46  	in_meta_data_name IN VARCHAR2,
15:47:54  47  	out_result_set	  OUT SYS_REFCURSOR
15:47:54  48  )AS
15:47:54  49  BEGIN
15:47:54  50  	PROCS_OFFER_CHAIN_V22.GET_OFFER_CHAIN_META_DATA(
15:47:54  51  	  in_offer_chain_id,
15:47:54  52  	  in_meta_data_name,
15:47:54  53  	  out_result_set
15:47:54  54  	);
15:47:54  55  END GET_OFFER_CHAIN_META_DATA;
15:47:54  56  
15:47:54  57  PROCEDURE GET_ENDING_LICENSES (
15:47:54  58  /*
15:47:54  59  Throws exceptions:
15:47:54  60  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54  61  */
15:47:54  62  	in_hours_number IN NUMBER,
15:47:54  63  	out_result_set OUT SYS_REFCURSOR
15:47:54  64  ) AS
15:47:54  65  BEGIN
15:47:54  66  	PROCS_LICENSE_V22.GET_ENDING_LICENSES(in_hours_number,out_result_set);
15:47:54  67  END GET_ENDING_LICENSES;
15:47:54  68  
15:47:54  69  PROCEDURE GET_ENDING_LICENSES_CC (
15:47:54  70  /*
15:47:54  71  Throws exceptions:
15:47:54  72  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54  73  */
15:47:54  74  	in_hours_number IN NUMBER,
15:47:54  75  	out_result_set OUT SYS_REFCURSOR,
15:47:54  76  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:54  77  ) AS
15:47:54  78  BEGIN
15:47:54  79  	PROCS_LICENSE_V22.GET_ENDING_LICENSES_CC(in_hours_number,out_result_set, in_process_name);
15:47:54  80  END GET_ENDING_LICENSES_CC;
15:47:54  81  
15:47:54  82  /*******************************************************/
15:47:54  83  
15:47:54  84  PROCEDURE GET_RECURRING_OFFER (
15:47:54  85  /*
15:47:54  86  Throws exceptions:
15:47:54  87  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54  88  */
15:47:54  89  	in_license_id  IN NUMBER,
15:47:54  90  	out_result_set OUT SYS_REFCURSOR
15:47:54  91  ) AS
15:47:54  92  BEGIN
15:47:54  93  	PROCS_LICENSE_V22.GET_RECURRING_OFFER (
15:47:54  94  	  in_license_id,
15:47:54  95  	  out_result_set
15:47:54  96  	);
15:47:54  97  END GET_RECURRING_OFFER;
15:47:54  98  
15:47:54  99  /********************************************************/
15:47:54 100  
15:47:54 101  PROCEDURE GET_NEXT_OFFER (
15:47:54 102  /*
15:47:54 103  Throws exceptions:
15:47:54 104  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 105  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:54 106  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 107  */
15:47:54 108  	in_license_id  IN NUMBER,
15:47:54 109  	out_result_set OUT SYS_REFCURSOR
15:47:54 110  ) AS
15:47:54 111  BEGIN
15:47:54 112  	PROCS_LICENSE_V22.GET_NEXT_OFFER (
15:47:54 113  	  in_license_id,
15:47:54 114  	  out_result_set
15:47:54 115  	);
15:47:54 116  END GET_NEXT_OFFER;
15:47:54 117  
15:47:54 118  /*********************************************************/
15:47:54 119  
15:47:54 120  PROCEDURE UPDATE_LICENSE_STATUS(
15:47:54 121  /*
15:47:54 122  Throws exceptions:
15:47:54 123  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 124  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 125  */
15:47:54 126  	  in_license_id     IN NUMBER,
15:47:54 127  	  in_license_status IN NUMBER,
15:47:54 128  	  in_updated_by     IN VARCHAR2
15:47:54 129  ) AS
15:47:54 130  BEGIN
15:47:54 131  	PROCS_LICENSE_V22.UPDATE_LICENSE_STATUS (
15:47:54 132  	  in_license_id,
15:47:54 133  	  in_license_status,
15:47:54 134  	  in_updated_by
15:47:54 135  	);
15:47:54 136  END UPDATE_LICENSE_STATUS;
15:47:54 137  
15:47:54 138  /**********************************************************/
15:47:54 139  
15:47:54 140  PROCEDURE UPDATE_INVOICE_STATUS (
15:47:54 141  /*
15:47:54 142  Throws exceptions:
15:47:54 143  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 144  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 145  */
15:47:54 146  	in_invoice_id		       IN NUMBER,
15:47:54 147  	in_invoice_status_id	       IN NUMBER,
15:47:54 148  	in_updated_by		       IN VARCHAR2
15:47:54 149  ) AS
15:47:54 150  BEGIN
15:47:54 151  	PROCS_INVOICE_V22.UPDATE_INVOICE_STATUS(
15:47:54 152  	  in_invoice_id,
15:47:54 153  	  in_invoice_status_id,
15:47:54 154  	  in_updated_by
15:47:54 155  	);
15:47:54 156  END UPDATE_INVOICE_STATUS;
15:47:54 157  
15:47:54 158  /***********************************************************/
15:47:54 159  
15:47:54 160  PROCEDURE CREATE_LICENSE(
15:47:54 161  /*
15:47:54 162  Throws exceptions:
15:47:54 163  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 164  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 165  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
15:47:54 166  */
15:47:54 167  	in_status_id		    IN NUMBER,
15:47:54 168  	in_needs_entitlements	    IN NUMBER,
15:47:54 169  	in_start_date		    IN DATE,
15:47:54 170  	in_end_date		    IN DATE,
15:47:54 171  	in_offer_id		    IN NUMBER,
15:47:54 172  	in_subscription_id	    IN NUMBER,
15:47:54 173  	in_invoice_id		    IN NUMBER,
15:47:54 174  	in_created_by		    IN VARCHAR2,
15:47:54 175  	in_is_extension 	    IN NUMBER,
15:47:54 176  	in_current_offer_index	    IN NUMBER,
15:47:54 177  	in_current_offer_recurr_num IN NUMBER,
15:47:54 178  	out_license_id		    OUT NUMBER
15:47:54 179  ) AS
15:47:54 180  BEGIN
15:47:54 181  	PROCS_LICENSE_V22.CREATE_LICENSE (
15:47:54 182  	  in_status_id,
15:47:54 183  	  in_needs_entitlements,
15:47:54 184  	  in_start_date,
15:47:54 185  	  in_end_date,
15:47:54 186  	  in_offer_id,
15:47:54 187  	  in_subscription_id,
15:47:54 188  	  in_invoice_id,
15:47:54 189  	  in_created_by,
15:47:54 190  	  in_is_extension,
15:47:54 191  	  in_current_offer_index,
15:47:54 192  	  in_current_offer_recurr_num,
15:47:54 193  	  out_license_id
15:47:54 194  	);
15:47:54 195  END CREATE_LICENSE;
15:47:54 196  
15:47:54 197  /******************************************************/
15:47:54 198  
15:47:54 199  PROCEDURE CREATE_INVOICE(
15:47:54 200  /*
15:47:54 201  Throws exceptions:
15:47:54 202  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 203  */
15:47:54 204  	  in_invoice_status IN NUMBER,
15:47:54 205  	  in_created_by     IN VARCHAR2,
15:47:54 206  	  in_tax_exempt_id  IN VARCHAR2,
15:47:54 207  	  out_invoice_id    OUT NUMBER
15:47:54 208  ) AS
15:47:54 209  BEGIN
15:47:54 210  	PROCS_INVOICE_V22.CREATE_INVOICE (
15:47:54 211  	  in_invoice_status,
15:47:54 212  	  in_created_by,
15:47:54 213  	  in_tax_exempt_id,
15:47:54 214  	  out_invoice_id
15:47:54 215  	);
15:47:54 216  END CREATE_INVOICE;
15:47:54 217  
15:47:54 218  /*******************************************************/
15:47:54 219  
15:47:54 220  PROCEDURE CREATE_CHARGE(
15:47:54 221  /*
15:47:54 222  Throws exceptions:
15:47:54 223  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 224  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 225  */
15:47:54 226  	in_invoice_id	      IN NUMBER,
15:47:54 227  	in_transaction_id     IN NUMBER,
15:47:54 228  	in_instrument_type_id IN NUMBER,
15:47:54 229  	in_instrument_id      IN NUMBER,
15:47:54 230  	in_charge_amount      IN NUMBER,
15:47:54 231  	in_created_by	      IN VARCHAR2,
15:47:54 232  	in_charge_status_id   IN NUMBER,
15:47:54 233  	out_charge_id	      OUT NUMBER
15:47:54 234  ) AS
15:47:54 235  BEGIN
15:47:54 236  	PROCS_CHARGE_V22.CREATE_CHARGE (
15:47:54 237  	  in_invoice_id,
15:47:54 238  	  in_transaction_id,
15:47:54 239  	  in_instrument_type_id,
15:47:54 240  	  in_instrument_id,
15:47:54 241  	  in_charge_amount,
15:47:54 242  	  in_created_by,
15:47:54 243  	  in_charge_status_id,
15:47:54 244  	  out_charge_id
15:47:54 245  	);
15:47:54 246  END CREATE_CHARGE;
15:47:54 247  
15:47:54 248  /**********************************************************/
15:47:54 249  
15:47:54 250  PROCEDURE HAS_FUTURE_LICENSE (
15:47:54 251  /*
15:47:54 252  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 253  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 254  --
15:47:54 255  RETURNS:
15:47:54 256  1 - if has,
15:47:54 257  0 - else
15:47:54 258  */
15:47:54 259  	in_license_id IN NUMBER,
15:47:54 260  	out_result	   OUT NUMBER
15:47:54 261  ) AS
15:47:54 262  BEGIN
15:47:54 263  	PROCS_SUBSCRIPTION_V22.HAS_FUTURE_LICENSE (
15:47:54 264  	  in_license_id,
15:47:54 265  	  out_result
15:47:54 266  	);
15:47:54 267  END HAS_FUTURE_LICENSE;
15:47:54 268  
15:47:54 269  /***********************************************************/
15:47:54 270  
15:47:54 271  PROCEDURE GET_GROUP_ID_BY_LICENSE_ID (
15:47:54 272  /*
15:47:54 273  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 274  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 275  */
15:47:54 276  	in_license_id IN NUMBER,
15:47:54 277  	out_group_id  OUT NUMBER
15:47:54 278  ) AS
15:47:54 279  BEGIN
15:47:54 280  	PROCS_LICENSE_V22.GET_GROUP_ID_BY_LICENSE_ID (
15:47:54 281  	  in_license_id,
15:47:54 282  	  out_group_id
15:47:54 283  	);
15:47:54 284  END GET_GROUP_ID_BY_LICENSE_ID;
15:47:54 285  
15:47:54 286  /**********************************************************/
15:47:54 287  
15:47:54 288  PROCEDURE GET_OFFER_PRODUCTS (
15:47:54 289  /*
15:47:54 290  Throws exceptions (codes):
15:47:54 291  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 292  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 293  */
15:47:54 294  	in_offer_id    IN NUMBER,
15:47:54 295  	out_result_set OUT SYS_REFCURSOR
15:47:54 296  ) AS
15:47:54 297  BEGIN
15:47:54 298  	PROCS_OFFER_CHAIN_V22.GET_OFFER_PRODUCTS (
15:47:54 299  	  in_offer_id,
15:47:54 300  	  out_result_set
15:47:54 301  	);
15:47:54 302  END GET_OFFER_PRODUCTS;
15:47:54 303  
15:47:54 304  /***********************************************************/
15:47:54 305  
15:47:54 306  PROCEDURE CREATE_TRANSACTION (
15:47:54 307  /*
15:47:54 308  Throws exceptions:
15:47:54 309  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 310  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 311  */
15:47:54 312  	in_transaction_id	  IN NUMBER,
15:47:54 313  	in_status_id		  IN NUMBER,
15:47:54 314  	in_amount		  IN NUMBER,
15:47:54 315  	in_created_by		  IN VARCHAR2,
15:47:54 316  	in_order_id		  IN VARCHAR2,
15:47:54 317  	in_transaction_type_code  IN VARCHAR2 DEFAULT NULL,
15:47:54 318  	out_transaction_id	  OUT NUMBER
15:47:54 319  ) AS
15:47:54 320  BEGIN
15:47:54 321  	PROCS_TRANSACTION_V22.CREATE_TRANSACTION(
15:47:54 322  	  in_transaction_id,
15:47:54 323  	  in_status_id,
15:47:54 324  	  in_amount,
15:47:54 325  	  in_created_by,
15:47:54 326  	  in_order_id,
15:47:54 327  	  GLOBAL_CONSTANTS_V22.FALSE, -- is_refund should be false in renewal
15:47:54 328  	  in_transaction_type_code,
15:47:54 329  	  out_transaction_id
15:47:54 330  	);
15:47:54 331  END CREATE_TRANSACTION;
15:47:54 332  
15:47:54 333  /************************************************************/
15:47:54 334  
15:47:54 335  PROCEDURE ADD_LINE_ITEMS(
15:47:54 336  /*
15:47:54 337  Throws exceptions:
15:47:54 338  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 339  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 340  */
15:47:54 341  	in_invoice_id IN NUMBER,
15:47:54 342  	in_offer_id   IN NUMBER,
15:47:54 343  	in_created_by IN VARCHAR2
15:47:54 344  ) AS
15:47:54 345  BEGIN
15:47:54 346  	PROCS_LINE_ITEMS_V22.ADD_LINE_ITEMS(
15:47:54 347  	  in_invoice_id,
15:47:54 348  	  in_offer_id,
15:47:54 349  	  in_created_by
15:47:54 350  	);
15:47:54 351  END ADD_LINE_ITEMS;
15:47:54 352  
15:47:54 353  /************************************************************/
15:47:54 354  
15:47:54 355  PROCEDURE CALCULATE_INVOICE_AMOUNT (
15:47:54 356  /*
15:47:54 357  Throws exceptions:
15:47:54 358  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 359  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 360  */
15:47:54 361  	in_invoice_id IN  NUMBER,
15:47:54 362  	out_amount    OUT NUMBER
15:47:54 363  ) AS
15:47:54 364  BEGIN
15:47:54 365  	PROCS_INVOICE_V22.CALCULATE_INVOICE_AMOUNT (
15:47:54 366  	  in_invoice_id,
15:47:54 367  	  out_amount
15:47:54 368  	);
15:47:54 369  END CALCULATE_INVOICE_AMOUNT;
15:47:54 370  
15:47:54 371  /*************************************************************/
15:47:54 372  
15:47:54 373  PROCEDURE RESERVE_TRANSACTION_ID (
15:47:54 374  /*
15:47:54 375  Throws exceptions:
15:47:54 376  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 377  */
15:47:54 378  	out_transaction_id OUT NUMBER
15:47:54 379  ) AS
15:47:54 380  BEGIN
15:47:54 381  	PROCS_TRANSACTION_V22.RESERVE_TRANSACTION_ID (
15:47:54 382  	  out_transaction_id
15:47:54 383  	);
15:47:54 384  END RESERVE_TRANSACTION_ID;
15:47:54 385  
15:47:54 386  /***************************************************************/
15:47:54 387  
15:47:54 388  PROCEDURE P_GET_NEXT_OFFER_INDEX (
15:47:54 389  	in_offer_chain_id	     IN NUMBER,
15:47:54 390  	in_offer_chain_current_index IN NUMBER,
15:47:54 391  	out_next_offer_index	     OUT NUMBER
15:47:54 392  ) AS
15:47:54 393  BEGIN
15:47:54 394  	PROCS_OFFER_CHAIN_V22.P_GET_NEXT_OFFER_INDEX(
15:47:54 395  	  in_offer_chain_id,
15:47:54 396  	  in_offer_chain_current_index,
15:47:54 397  	  out_next_offer_index
15:47:54 398  	);
15:47:54 399  END P_GET_NEXT_OFFER_INDEX;
15:47:54 400  
15:47:54 401  /***************************************************************/
15:47:54 402  
15:47:54 403  PROCEDURE GET_NEXT_OFFER_INDEX_BY_LCNS (
15:47:54 404  	in_license_id		     IN NUMBER,
15:47:54 405  	in_offer_chain_current_index IN NUMBER,
15:47:54 406  	out_next_offer_index	     OUT NUMBER
15:47:54 407  ) AS
15:47:54 408  BEGIN
15:47:54 409  	PROCS_OFFER_CHAIN_V22.GET_NEXT_OFFER_INDEX_BY_LCNS(
15:47:54 410  	  in_license_id,
15:47:54 411  	  in_offer_chain_current_index,
15:47:54 412  	  out_next_offer_index
15:47:54 413  	);
15:47:54 414  END GET_NEXT_OFFER_INDEX_BY_LCNS;
15:47:54 415  
15:47:54 416  /******************************************************************/
15:47:54 417  
15:47:54 418  PROCEDURE GET_SUBSCRIPTION_INFO (
15:47:54 419  /*
15:47:54 420  Throws exceptions:
15:47:54 421  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 422  */
15:47:54 423  	  in_subscription_id IN  NUMBER,
15:47:54 424  	  out_result_set      OUT SYS_REFCURSOR
15:47:54 425  ) AS
15:47:54 426  BEGIN
15:47:54 427  	PROCS_SUBSCRIPTION_V22.GET_SUBSCRIPTION_INFO(
15:47:54 428  	  in_subscription_id,
15:47:54 429  	  out_result_set
15:47:54 430  	);
15:47:54 431  END GET_SUBSCRIPTION_INFO;
15:47:54 432  
15:47:54 433  /*******************************************************************/
15:47:54 434  
15:47:54 435  PROCEDURE CLOSE_SUBSCRIPTION (
15:47:54 436  	in_subscription_id IN NUMBER,
15:47:54 437  	in_updated_by	   IN VARCHAR2
15:47:54 438  ) AS
15:47:54 439  BEGIN
15:47:54 440  	PROCS_SUBSCRIPTION_V22.CLOSE_SUBSCRIPTION(
15:47:54 441  	  in_subscription_id,
15:47:54 442  	  in_updated_by
15:47:54 443  	);
15:47:54 444  END CLOSE_SUBSCRIPTION;
15:47:54 445  
15:47:54 446  /*******************************************************************/
15:47:54 447  
15:47:54 448  PROCEDURE GET_NEED_ENTITLEMENTS_LICENSES (
15:47:54 449  	out_result_set OUT SYS_REFCURSOR
15:47:54 450  ) AS
15:47:54 451  BEGIN
15:47:54 452  	PROCS_LICENSE_V22.GET_NEED_ENTITLEMENTS_LICENSES(
15:47:54 453  	  out_result_set
15:47:54 454  	);
15:47:54 455  END GET_NEED_ENTITLEMENTS_LICENSES;
15:47:54 456  
15:47:54 457  /*******************************************************************/
15:47:54 458  
15:47:54 459  PROCEDURE UPDATE_NEED_ENTITLEMENTS_FLAG (
15:47:54 460  	in_license_id	      IN NUMBER,
15:47:54 461  	in_needs_entitlements IN NUMBER,
15:47:54 462  	in_updated_by	      IN VARCHAR2
15:47:54 463  ) AS
15:47:54 464  BEGIN
15:47:54 465  	PROCS_LICENSE_V22.UPDATE_NEED_ENTITLEMENTS_FLAG(
15:47:54 466  	  in_license_id,
15:47:54 467  	  in_needs_entitlements,
15:47:54 468  	  in_updated_by
15:47:54 469  	);
15:47:54 470  END UPDATE_NEED_ENTITLEMENTS_FLAG;
15:47:54 471  
15:47:54 472  /*******************************************************/
15:47:54 473  
15:47:54 474  PROCEDURE GET_PROD_OFFERINGS_BY_OFFER_ID (
15:47:54 475  /*
15:47:54 476  Throws exceptions (codes):
15:47:54 477  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 478  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 479  */
15:47:54 480  	in_offer_id    IN NUMBER,
15:47:54 481  	out_result_set OUT SYS_REFCURSOR
15:47:54 482  ) AS
15:47:54 483  BEGIN
15:47:54 484  	PROCS_OFFER_CHAIN_V22.GET_PROD_OFFERINGS_BY_OFFER_ID(in_offer_id,out_result_set);
15:47:54 485  END GET_PROD_OFFERINGS_BY_OFFER_ID;
15:47:54 486  
15:47:54 487  /*******************************************************/
15:47:54 488  PROCEDURE GET_PRODUCT_OFFERING_META_DATA (
15:47:54 489  /*
15:47:54 490  Throws exceptions (codes):
15:47:54 491  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 492  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 493  */
15:47:54 494  	in_product_offering_id IN NUMBER,
15:47:54 495  	in_meta_data_name      IN VARCHAR2 DEFAULT NULL,
15:47:54 496  	out_result_set	       OUT SYS_REFCURSOR
15:47:54 497  ) AS
15:47:54 498  BEGIN
15:47:54 499  	PROCS_OFFER_CHAIN_V22.GET_PRODUCT_OFFERING_META_DATA(in_product_offering_id,in_meta_data_name,out_result_set);
15:47:54 500  END GET_PRODUCT_OFFERING_META_DATA;
15:47:54 501  
15:47:54 502  /*******************************************************/
15:47:54 503  
15:47:54 504  PROCEDURE LOCK_ACCOUNT (
15:47:54 505  	in_group_id    IN NUMBER,
15:47:54 506  	in_lock_key    IN VARCHAR2,
15:47:54 507  	in_seconds_num IN NUMBER,
15:47:54 508  	in_created_by  IN VARCHAR2,
15:47:54 509  	in_reason      IN VARCHAR2
15:47:54 510  ) AS
15:47:54 511  BEGIN
15:47:54 512  	PROCS_LOCKING_V22.LOCK_ACCOUNT(
15:47:54 513  	  in_group_id,
15:47:54 514  	  in_lock_key,
15:47:54 515  	  in_seconds_num,
15:47:54 516  	  in_created_by,
15:47:54 517  	  in_reason
15:47:54 518  	);
15:47:54 519  END LOCK_ACCOUNT;
15:47:54 520  
15:47:54 521  /****************************************************************/
15:47:54 522  
15:47:54 523  PROCEDURE RELEASE_LOCK (
15:47:54 524  	in_group_id IN NUMBER,
15:47:54 525  	in_lock_key IN VARCHAR2
15:47:54 526  ) AS
15:47:54 527  BEGIN
15:47:54 528  	PROCS_LOCKING_V22.RELEASE_LOCK(
15:47:54 529  	  in_group_id,
15:47:54 530  	  in_lock_key
15:47:54 531  	);
15:47:54 532  END RELEASE_LOCK;
15:47:54 533  
15:47:54 534  /******************************************************************************/
15:47:54 535  
15:47:54 536  PROCEDURE GET_INVOICE_LINE_ITEMS (
15:47:54 537  	in_invoice_id  IN NUMBER,
15:47:54 538  	out_result_set OUT SYS_REFCURSOR
15:47:54 539  ) AS
15:47:54 540  BEGIN
15:47:54 541  	PROCS_INVOICE_V22.GET_INVOICE_LINE_ITEMS(
15:47:54 542  	  in_invoice_id,
15:47:54 543  	  out_result_set
15:47:54 544  	);
15:47:54 545  END GET_INVOICE_LINE_ITEMS;
15:47:54 546  
15:47:54 547  /******************************************************************************/
15:47:54 548  
15:47:54 549  PROCEDURE ADD_TAX (
15:47:54 550  	in_tax_type_id		 IN NUMBER,
15:47:54 551  	in_calculated_amount	 IN NUMBER,
15:47:54 552  	in_created_by		 IN VARCHAR2,
15:47:54 553  	in_line_item_id 	 IN NUMBER,
15:47:54 554  	in_effective_rate	 IN VARCHAR2,
15:47:54 555  	in_taxable_amount	 IN NUMBER,
15:47:54 556  	in_tax_rule_id		 IN NUMBER,
15:47:54 557  	in_jurisdiction_level_id IN NUMBER,
15:47:54 558  	in_jurisdiction_name	 IN VARCHAR2,
15:47:54 559  	in_jurisdiction_id	 IN VARCHAR2,
15:47:54 560  	in_ext_tax_type 	 IN VARCHAR2,
15:47:54 561  	in_ext_result		 IN VARCHAR2,
15:47:54 562  	in_imposition_type	 IN VARCHAR2,
15:47:54 563  	in_imposition		 IN VARCHAR2
15:47:54 564  ) AS
15:47:54 565  BEGIN
15:47:54 566  	PROCS_TAXES_V22.ADD_TAX(
15:47:54 567  	  in_tax_type_id,
15:47:54 568  	  in_calculated_amount,
15:47:54 569  	  in_created_by,
15:47:54 570  	  in_line_item_id,
15:47:54 571  	  in_effective_rate,
15:47:54 572  	  in_taxable_amount,
15:47:54 573  	  in_tax_rule_id,
15:47:54 574  	  in_jurisdiction_level_id,
15:47:54 575  	  in_jurisdiction_name,
15:47:54 576  	  in_jurisdiction_id,
15:47:54 577  	  in_ext_tax_type,
15:47:54 578  	  in_ext_result,
15:47:54 579  	  in_imposition_type,
15:47:54 580  	  in_imposition
15:47:54 581  	);
15:47:54 582  END ADD_TAX;
15:47:54 583  
15:47:54 584  /******************************************************************************/
15:47:54 585  
15:47:54 586  PROCEDURE GET_CREDIT_CARD_BY_ID (
15:47:54 587  	in_credit_card_id IN  NUMBER,
15:47:54 588  	out_result_set	  OUT SYS_REFCURSOR
15:47:54 589  ) AS
15:47:54 590  BEGIN
15:47:54 591  	PROCS_FIN_INSTRUMENTS_V22.GET_CREDIT_CARD_BY_ID(
15:47:54 592  	  in_credit_card_id,
15:47:54 593  	  out_result_set
15:47:54 594  	);
15:47:54 595  END GET_CREDIT_CARD_BY_ID;
15:47:54 596  
15:47:54 597  /******************************************************************************/
15:47:54 598  
15:47:54 599  PROCEDURE GET_PRD_OFFERING_BY_LINE_IT_ID (
15:47:54 600  	in_line_item_id IN NUMBER,
15:47:54 601  	out_result_set	OUT SYS_REFCURSOR
15:47:54 602  ) AS
15:47:54 603  BEGIN
15:47:54 604  	PROCS_PRODUCT_V22.GET_PRD_OFFERING_BY_LINE_IT_ID(
15:47:54 605  	  in_line_item_id,
15:47:54 606  	  out_result_set
15:47:54 607  	);
15:47:54 608  END GET_PRD_OFFERING_BY_LINE_IT_ID;
15:47:54 609  
15:47:54 610  /******************************************************************************/
15:47:54 611  
15:47:54 612  PROCEDURE GET_ACCOUNT_ID_BY_GROUP_ID (
15:47:54 613  /*
15:47:54 614  Throws exceptions:
15:47:54 615  APP_EXCEPTION_CODES_V22.NOT_FOUND,
15:47:54 616  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 617  */
15:47:54 618  	in_group_id IN NUMBER,
15:47:54 619  	out_account_id	OUT NUMBER
15:47:54 620  ) AS
15:47:54 621  BEGIN
15:47:54 622  	PROCS_ACCOUNT_V22.GET_ACCOUNT_ID_BY_GROUP_ID(
15:47:54 623  	  in_group_id,
15:47:54 624  	  out_account_id
15:47:54 625  	);
15:47:54 626  END GET_ACCOUNT_ID_BY_GROUP_ID;
15:47:54 627  
15:47:54 628  /******************************************************************************/
15:47:54 629  
15:47:54 630  PROCEDURE GET_LINE_ITEM_DISCOUNTS (
15:47:54 631  /*
15:47:54 632  Throws exceptions:
15:47:54 633  APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54 634  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 635  */
15:47:54 636  	in_line_item_id IN  NUMBER,
15:47:54 637  	out_result_set	OUT SYS_REFCURSOR
15:47:54 638  ) AS
15:47:54 639  BEGIN
15:47:54 640  	PROCS_LINE_ITEMS_V22.GET_LINE_ITEM_DISCOUNTS(
15:47:54 641  	  in_line_item_id,
15:47:54 642  	  out_result_set
15:47:54 643  	);
15:47:54 644  END GET_LINE_ITEM_DISCOUNTS;
15:47:54 645  
15:47:54 646  /******************************************************************************/
15:47:54 647  
15:47:54 648  PROCEDURE UPDATE_LINE_ITEM_AMOUNT (
15:47:54 649  	in_line_item_id    IN NUMBER,
15:47:54 650  	in_amount	   IN NUMBER,
15:47:54 651  	in_discount_amount IN NUMBER,
15:47:54 652  	in_taxes_amount    IN NUMBER
15:47:54 653  ) AS
15:47:54 654  BEGIN
15:47:54 655  	PROCS_LINE_ITEMS_V22.UPDATE_LINE_ITEM_AMOUNT(
15:47:54 656  	  in_line_item_id,
15:47:54 657  	  in_amount,
15:47:54 658  	  in_discount_amount,
15:47:54 659  	  in_taxes_amount
15:47:54 660  	);
15:47:54 661  END UPDATE_LINE_ITEM_AMOUNT;
15:47:54 662  
15:47:54 663  /******************************************************************************/
15:47:54 664  
15:47:54 665  PROCEDURE GET_PAYPAL_BY_ID (
15:47:54 666  	in_paypal_id   IN  NUMBER,
15:47:54 667  	out_result_set OUT SYS_REFCURSOR
15:47:54 668  ) AS
15:47:54 669  BEGIN
15:47:54 670  	PROCS_FIN_INSTRUMENTS_V22.GET_PAYPAL_BY_ID(
15:47:54 671  	  in_paypal_id,
15:47:54 672  	  out_result_set
15:47:54 673  	);
15:47:54 674  END GET_PAYPAL_BY_ID;
15:47:54 675  
15:47:54 676  PROCEDURE GET_GC_BY_PURCH_INVOICE_ID (
15:47:54 677  	in_invoice_id		IN GIFT_CERTIFICATE.PURCHASE_INVOICE_ID%TYPE,
15:47:54 678  	out_result_set OUT SYS_REFCURSOR
15:47:54 679  ) AS
15:47:54 680  BEGIN
15:47:54 681  	PROCS_FIN_INSTRUMENTS_V22.GET_GC_BY_PURCH_INVOICE_ID (
15:47:54 682  	  in_invoice_id,
15:47:54 683  	  out_result_set
15:47:54 684  	);
15:47:54 685  END GET_GC_BY_PURCH_INVOICE_ID;
15:47:54 686  
15:47:54 687  PROCEDURE GET_LICENSE_BY_ID (
15:47:54 688  	in_license_id  IN NUMBER,
15:47:54 689  	out_result_set OUT SYS_REFCURSOR
15:47:54 690  ) AS
15:47:54 691  BEGIN
15:47:54 692  	PROCS_LICENSE_V22.GET_LICENSE_BY_ID (
15:47:54 693  	  in_license_id,
15:47:54 694  	  out_result_set
15:47:54 695  	);
15:47:54 696  END GET_LICENSE_BY_ID;
15:47:54 697  
15:47:54 698  /******************************************************************************/
15:47:54 699  
15:47:54 700  PROCEDURE GET_NOTIFICATION_TYPE_ID (
15:47:54 701  	in_offer_chain_id	 IN NUMBER,
15:47:54 702  	in_action_name		 IN VARCHAR2,
15:47:54 703  	out_notification_type_id OUT NUMBER
15:47:54 704  ) AS
15:47:54 705  BEGIN
15:47:54 706  	PROCS_OFFER_CHAIN_V22.GET_NOTIFICATION_TYPE_ID(
15:47:54 707  	  in_offer_chain_id,
15:47:54 708  	  in_action_name,
15:47:54 709  	  out_notification_type_id
15:47:54 710  	);
15:47:54 711  END GET_NOTIFICATION_TYPE_ID;
15:47:54 712  
15:47:54 713  /******************************************************************************/
15:47:54 714  
15:47:54 715  PROCEDURE GET_ALL_OCH_META_DATA (
15:47:54 716  	in_offer_chain_id IN NUMBER,
15:47:54 717  	out_result_set	  OUT SYS_REFCURSOR
15:47:54 718  ) AS
15:47:54 719  BEGIN
15:47:54 720  	PROCS_OFFER_CHAIN_V22.GET_ALL_META_DATA (
15:47:54 721  	  in_offer_chain_id,
15:47:54 722  	  out_result_set
15:47:54 723  	);
15:47:54 724  END GET_ALL_OCH_META_DATA;
15:47:54 725  
15:47:54 726  /******************************************************************************/
15:47:54 727  
15:47:54 728  PROCEDURE GET_SUBSCRIPTIONS_META_DATA (
15:47:54 729  /*
15:47:54 730  APP_EXCEPTION_CODES_V22.INVALID_PARAMETER
15:47:54 731  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54 732  */
15:47:54 733  	in_subscriptions_ids IN core_owner.NUMBER_TABLE,
15:47:54 734  	out_result_set	     OUT SYS_REFCURSOR
15:47:54 735  ) AS
15:47:54 736  BEGIN
15:47:54 737  	PROCS_SUBSCRIPTION_V22.GET_SUBSCRIPTIONS_META_DATA(
15:47:54 738  	  in_subscriptions_ids,
15:47:54 739  	  out_result_set
15:47:54 740  	);
15:47:54 741  END GET_SUBSCRIPTIONS_META_DATA;
15:47:54 742  
15:47:54 743  PROCEDURE GET_UNREDEEMED_GCS (
15:47:54 744  	out_result_set		OUT SYS_REFCURSOR,
15:47:54 745  	in_hours_number 	IN NUMBER DEFAULT 14*24,
15:47:54 746  	in_num_rows		IN NUMBER DEFAULT 10000,
15:47:54 747  	in_process_name 	IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
15:47:54 748  ) AS
15:47:54 749  BEGIN
15:47:54 750  	PROCS_FIN_INSTRUMENTS_V22.GET_UNREDEEMED_GCS(
15:47:54 751  	  out_result_set => out_result_set,
15:47:54 752  	  in_hours_number => in_hours_number,
15:47:54 753  	  in_num_rows => in_num_rows,
15:47:54 754  	  in_process_name => in_process_name
15:47:54 755  	);
15:47:54 756  END GET_UNREDEEMED_GCS;
15:47:54 757  
15:47:54 758  PROCEDURE GET_OFFER_CHAIN_MD_VALUE (
15:47:54 759  	in_offer_chain_id IN NUMBER,
15:47:54 760  	in_meta_data_name IN VARCHAR2,
15:47:54 761  	out_value	  OUT VARCHAR2
15:47:54 762  ) AS
15:47:54 763  BEGIN
15:47:54 764  	PROCS_OFFER_CHAIN_V22.GET_OFFER_CHAIN_MD_VALUE(
15:47:54 765  	  in_offer_chain_id => in_offer_chain_id,
15:47:54 766  	  in_meta_data_name => in_meta_data_name,
15:47:54 767  	  out_value => out_value
15:47:54 768  	);
15:47:54 769  END GET_OFFER_CHAIN_MD_VALUE;
15:47:54 770  
15:47:54 771  PROCEDURE GET_ACT_SUBS_W_CPT_CHARGEBACKS (
15:47:54 772  	out_result_set	    OUT SYS_REFCURSOR
15:47:54 773  )
15:47:54 774  AS
15:47:54 775  BEGIN
15:47:54 776  	PROCS_SUBSCRIPTION_V22.GET_ACT_SUBS_W_CPT_CHARGEBACKS(
15:47:54 777  	  out_result_set => out_result_set
15:47:54 778  	);
15:47:54 779  END GET_ACT_SUBS_W_CPT_CHARGEBACKS;
15:47:54 780  
15:47:54 781  PROCEDURE GET_ACT_SUBS_W_PP_CHARGEBACKS (
15:47:54 782  	out_result_set	    OUT SYS_REFCURSOR
15:47:54 783  )
15:47:54 784  AS
15:47:54 785  BEGIN
15:47:54 786  	PROCS_SUBSCRIPTION_V22.GET_ACT_SUBS_W_PP_CHARGEBACKS(
15:47:54 787  	  out_result_set => out_result_set
15:47:54 788  	);
15:47:54 789  END GET_ACT_SUBS_W_PP_CHARGEBACKS;
15:47:54 790  
15:47:54 791  PROCEDURE GET_GRACE_PERIOD_SUB_REGIS (
15:47:54 792  	in_max_days_until_close IN NUMBER,
15:47:54 793  	in_num_subs_to_fetch	IN NUMBER,
15:47:54 794  	out_result_set		OUT SYS_REFCURSOR
15:47:54 795  )
15:47:54 796  AS
15:47:54 797  BEGIN
15:47:54 798  	PROCS_SUBSCRIPTION_V22.GET_GRACE_PERIOD_SUB_REGIS(
15:47:54 799  	  in_max_days_until_close => in_max_days_until_close,
15:47:54 800  	  in_num_subs_to_fetch => in_num_subs_to_fetch,
15:47:54 801  	  out_result_set => out_result_set
15:47:54 802  	);
15:47:54 803  END GET_GRACE_PERIOD_SUB_REGIS;
15:47:54 804  
15:47:54 805  PROCEDURE GET_ACT_SUBS_W_AMEX_CB (
15:47:54 806  	out_result_set	    OUT SYS_REFCURSOR
15:47:54 807  )
15:47:54 808  AS
15:47:54 809  BEGIN
15:47:54 810  	PROCS_SUBSCRIPTION_V22.GET_ACT_SUBS_W_AMEX_CB(
15:47:54 811  	  out_result_set => out_result_set
15:47:54 812  	);
15:47:54 813  END GET_ACT_SUBS_W_AMEX_CB;
15:47:54 814  
15:47:54 815  PROCEDURE GET_GRACE_LICE_FOR_FINAL_TRANS (
15:47:54 816  	in_days_before_close	 IN NUMBER,
15:47:54 817  	in_num_licenses_to_fetch IN NUMBER,
15:47:54 818  	out_result_set		 OUT SYS_REFCURSOR
15:47:54 819  ) AS
15:47:54 820  BEGIN
15:47:54 821  	PROCS_LICENSE_V22.GET_GRACE_LICE_FOR_FINAL_TRANS(
15:47:54 822  	  in_days_before_close => in_days_before_close,
15:47:54 823  	  in_num_licenses_to_fetch => in_num_licenses_to_fetch,
15:47:54 824  	  out_result_set => out_result_set
15:47:54 825  	);
15:47:54 826  END GET_GRACE_LICE_FOR_FINAL_TRANS;
15:47:54 827  
15:47:54 828  PROCEDURE GET_EXPIRING_PAYPAL (
15:47:54 829  	in_expire_window_days	  IN NUMBER,
15:47:54 830  	in_creation_limit_days	  IN NUMBER,
15:47:54 831  	in_retry_throttle_name	  IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE,
15:47:54 832  	out_result_set		  OUT SYS_REFCURSOR
15:47:54 833  ) AS
15:47:54 834  BEGIN
15:47:54 835  	PROCS_FIN_INSTRUMENTS_V22.GET_EXPIRING_PAYPAL(
15:47:54 836  	  in_expire_window_days   => in_expire_window_days,
15:47:54 837  	  in_creation_limit_days  => in_creation_limit_days,
15:47:54 838  	  in_retry_throttle_name  => in_retry_throttle_name,
15:47:54 839  	  out_result_set	  => out_result_set
15:47:54 840  	);
15:47:54 841  END GET_EXPIRING_PAYPAL;
15:47:54 842  
15:47:54 843  END PUBLIC_PROCS_RENEWAL_V22;
15:47:54 844  .
15:47:54 SQL> /

Package body created.

Elapsed: 00:00:00.03
15:47:54 SQL> 
15:47:54 SQL> CREATE OR REPLACE PACKAGE BODY "PUBLIC_PROCS_CLIENT_V22" AS
15:47:54   2  
15:47:54   3  PROCEDURE GET_NOTIFICATION_TYPE_BY_NAME (
15:47:54   4  /*
15:47:54   5  Throws exceptions:
15:47:54   6  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54   7  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54   8  */
15:47:54   9  	in_notification_type_name IN VARCHAR2,
15:47:54  10  	out_notification_type_id  OUT NUMBER
15:47:54  11  ) AS
15:47:54  12  BEGIN
15:47:54  13  	PROCS_NOTIFICATION_V22.GET_NOTIFICATION_TYPE_BY_NAME (
15:47:54  14  	  in_notification_type_name,
15:47:54  15  	  out_notification_type_id
15:47:54  16  	);
15:47:54  17  END;
15:47:54  18  
15:47:54  19  /*****************************************************************/
15:47:54  20  
15:47:54  21  PROCEDURE ADD_NOTIFICATION (
15:47:54  22  /*
15:47:54  23  Throws exceptions:
15:47:54  24  CORE_OWNER.APP_EXCEPTION_CODES_V22.NOT_FOUND
15:47:54  25  CORE_OWNER.APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
15:47:54  26  */
15:47:54  27  	in_sender_account_id	 IN NUMBER DEFAULT 0,
15:47:54  28  	in_recipient_group_id	 IN NUMBER,
15:47:54  29  	in_notification_type_id  IN NUMBER,
15:47:54  30  	in_date_to_notify	 IN DATE,
15:47:54  31  	in_email_template_params IN CLOB
15:47:54  32  ) AS
15:47:54  33  BEGIN
15:47:54  34  	PROCS_NOTIFICATION_V22.ADD_NOTIFICATION (
15:47:54  35  	  in_sender_account_id,
15:47:54  36  	  in_recipient_group_id,
15:47:54  37  	  in_notification_type_id,
15:47:54  38  	  in_date_to_notify,
15:47:54  39  	  in_email_template_params
15:47:54  40  	);
15:47:54  41  END;
15:47:54  42  
15:47:54  43  END PUBLIC_PROCS_CLIENT_V22;
15:47:54  44  .
15:47:54 SQL> /

Package body created.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_ACCOUNT_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.23
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_ADX_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_CHARGE_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_COMMON_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_FIN_INSTRUMENTS_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_INVOICE_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_LICENSE_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_LINE_ITEMS_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_OFFER_CHAIN_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PRODUCT_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_SUBSCRIPTION_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_SYSTEM_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_TEST_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_TRANSACTION_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_TAXES_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_LOCKING_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_ADJUSTMENTS_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_BILLING_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_ADDRESS_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_GROUP_ACCOUNT_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_BILLING_V22 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_RENEWAL_V22 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_GROUP_ACCOUNT_V22 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_NOTIFICATION_V22 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> 
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_TAXES_V22 to core_tax_app;

Grant succeeded.

Elapsed: 00:00:00.03
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PRODUCT_V22 to core_tax_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_ACCOUNT_V22 to core_tax_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_POLLING_SYNC to core_poller_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_RECONCILIATION_CRU_V22 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_SUBSCRIPTION_V22 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_TRANSACTION_V22 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_REPORTING to etl_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_LOCKING_V22 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_ACCOUNT_V22 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_INVOICE_V22 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_ITUNES_RECEIPT_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_ITUNES_RECEIPT_V22 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_AMAZON_V22 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_AMAZON_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_AMAZON_V22 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_LICENSE_V22 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_LOCKING_V22 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_SUBSCRIPTION_V22 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_GROUP_ACCOUNT_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_GROUP_ACCOUNT_CRU_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_ENTITLEMENT_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_CUPY to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_LOCKING_V22 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.NOTIFICATION_STATUSES_V22 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_NOTIFICATION_V22 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_SYSTEM_V22 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_CLIENT_V22 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_CLIENT_V22 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_CLIENT_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PUBLIC_PROCS_CLIENT_V22 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> 
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V22 to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V22 to core_owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V22 to core_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V22 to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V22 to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V22 to ops_notif_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V22 to etl_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V22 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V22 to core_poller_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant execute on CORE_OWNER.PROCS_PROCESS_RETRY_V22 to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.07
15:47:54 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.02
15:47:54 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.02
15:47:54 SQL> grant select on CORE_OWNER.PROCESS_RETRY_THROTTLE to core_subup_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant select on CORE_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.02
15:47:54 SQL> grant select on CORE_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.02
15:47:54 SQL> grant select on CORE_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant select on CORE_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant select on CORE_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> 
15:47:54 SQL> grant REFERENCES on CORE_OWNER.NOTIFICATION_TYPE to cupy_app;

Grant succeeded.

Elapsed: 00:00:00.02
15:47:54 SQL> grant REFERENCES on CORE_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.02
15:47:54 SQL> grant REFERENCES on CORE_OWNER.NOTIFICATION_TYPE to core_app;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:54 SQL> grant REFERENCES on CORE_OWNER.NOTIFICATION_TYPE to core_billing_app;

Grant succeeded.

Elapsed: 00:00:00.02
15:47:54 SQL> grant REFERENCES on CORE_OWNER.NOTIFICATION_TYPE to core_licensing_app;

Grant succeeded.

Elapsed: 00:00:00.02
15:47:54 SQL> 
15:47:54 SQL> grant select, insert, update, delete ON CORE_OWNER.NOTIFICATION_TYPE to core_owner;

Grant succeeded.

Elapsed: 00:00:00.02
15:47:54 SQL> grant select ON CORE_OWNER.NOTTID_SEQ to core_owner;

Grant succeeded.

Elapsed: 00:00:00.02
15:47:54 SQL> 
15:47:54 SQL> Grant Execute On Core_Owner.App_Exception_Codes_V22 To Core_Hist_Owner;

Grant succeeded.

Elapsed: 00:00:00.00
15:47:54 SQL> 
15:47:54 SQL> Grant Execute On Core_Owner.GLOBAL_ENUMS_V22 To Core_Hist_Owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:55 SQL> 
15:47:55 SQL> Grant Execute On Core_Owner.Global_Statuses_V22 To Core_Hist_Owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:47:55 SQL> 
15:47:55 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
15:47:55 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECPR@rac01.prd.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com
Cc: nytd_oracledba@nytimes.com

Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.prd.ewr1.nytimes.com
        DB Role: PRIMARY
        SID: ECPR
        Schema: core_owner
        Migration: 73-paypal-expire-email-hotfix.3-CORE-ALL.sql
        SVN Revision: 13366
        Duration: 9 sec.
        DBA: apathrose
        