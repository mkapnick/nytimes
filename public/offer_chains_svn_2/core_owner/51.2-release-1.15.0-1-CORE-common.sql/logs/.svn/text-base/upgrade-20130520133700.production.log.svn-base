13:37:12 SQL> @/dbbackups/ECPR/migrations/core_owner/51.2-release-1.15.0-1-CORE-common.sql/upgrade.sql
13:37:12 SQL> --------------------------------------------------------------------------------
13:37:12 SQL> -- DDL for package APP_EXCEPTION_CODES
13:37:12 SQL> --------------------------------------------------------------------------------
13:37:12 SQL> 
13:37:12 SQL> CREATE OR REPLACE PACKAGE "APP_EXCEPTION_CODES_V21"
13:37:12   2  AS
13:37:12   3  -- norlov 09.09 : current_timestamp replaced by sysdate
13:37:12   4  -- in comparisons (according to #38816)
13:37:12   5  -- 2010-09-13: according to #38860, current_timestamp calls replaced by SYSDATE variable
13:37:12   6  -- to use the same date in whole procedure, also single current_timestamp calls
13:37:12   7  -- replaced by SYSDATE calls
13:37:12   8  
13:37:12   9  
13:37:12  10  	-- EXCEPTION CODES
13:37:12  11  	UNKNOWN_ERROR	  CONSTANT NUMBER := -20001;
13:37:12  12  	NOT_FOUND	  CONSTANT NUMBER := -20002;
13:37:12  13  	STATE_ERROR	  CONSTANT NUMBER := -20003;
13:37:12  14  	DUPLICATE_ERROR   CONSTANT NUMBER := -20004;
13:37:12  15  	HISTORY_ERROR	  CONSTANT NUMBER := -20005;
13:37:12  16  	INVALID_PARAMETER CONSTANT NUMBER := -20006;
13:37:12  17  	INTERNAL_ERROR	  CONSTANT NUMBER := -20007;
13:37:12  18  	CONFLICT_ERROR	  CONSTANT NUMBER := -20008;
13:37:12  19  END APP_EXCEPTION_CODES_V21;
13:37:12  20  .
13:37:12 SQL> /

Package created.

Elapsed: 00:00:00.73
13:37:13 SQL> 
13:37:13 SQL> 
13:37:13 SQL> 
13:37:13 SQL> --------------------------------------------------------------------------------
13:37:13 SQL> -- DDL for package GLOBAL_CONSTANTS
13:37:13 SQL> --------------------------------------------------------------------------------
13:37:13 SQL> 
13:37:13 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_CONSTANTS_V21" AS
13:37:13   2  
13:37:13   3  TRUE  CONSTANT NUMBER := 1;
13:37:13   4  FALSE CONSTANT NUMBER := 0;
13:37:13   5  
13:37:13   6  INFINITY CONSTANT NUMBER := -1;
13:37:13   7  
13:37:13   8  ONE_DAY_INTERVAL	 CONSTANT INTERVAL DAY TO SECOND := INTERVAL '1' DAY;
13:37:13   9  ONE_MONTH_INTERVAL CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' MONTH;
13:37:13  10  ONE_YEAR_INTERVAL   CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' YEAR;
13:37:13  11  
13:37:13  12  -- Exception delimeter
13:37:13  13  EXCEPTION_DELIMETER CONSTANT VARCHAR2(1) := chr(10);
13:37:13  14  
13:37:13  15  -- Number of days when core should return all money
13:37:13  16  OFFER_START_GRACE_PERIOD CONSTANT NUMBER := 7;
13:37:13  17  
13:37:13  18  -- NUmber of days when core should not return any money
13:37:13  19  OFFER_END_GRACE_PERIOD   CONSTANT NUMBER := 7;
13:37:13  20  
13:37:13  21  -- OFFER CHAIN: is refundable META DATTA RULE
13:37:13  22  OFFER_CHAIN_IS_REFUNDABLE   CONSTANT NUMBER := 1;
13:37:13  23  OFFER_CHAIN_REFUNDABLE_RULE CONSTANT VARCHAR2(10) := 'REFUNDABLE';
13:37:13  24  
13:37:13  25  -- OFFER CHAIN REFUNDABLE RULES
13:37:13  26  OFFER_CHAIN_FULL_REFUND	  CONSTANT VARCHAR2(22) := 'FULL_REFUND_DAYS_LIMIT';
13:37:13  27  OFFER_CHAIN_PRORATED_REFUND CONSTANT VARCHAR2(26) := 'PRORATED_REFUND_DAYS_LIMIT';
13:37:13  28  
13:37:13  29  -- norlov: name of the OC eligibility
13:37:13  30  GIFT_CERTIFICATE_REQUIRED CONSTANT VARCHAR2(25) := 'gift certificate required';
13:37:13  31  
13:37:13  32  -- norlov: flag for set elibility
13:37:13  33  ELIGIBILITY_FLAG_SET CONSTANT VARCHAR2(1) := '1';
13:37:13  34  
13:37:13  35  -- norlov: name of OC metadata
13:37:13  36  REDEMPTION_OC_ID CONSTANT VARCHAR2(25) := 'redemption offer chain id';
13:37:13  37  
13:37:13  38  -- norlov: name of the OC eligibility
13:37:13  39  MAX_CONCURRENT_SUBS CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
13:37:13  40  
13:37:13  41  -- norlov: 'unlimited' value for max concurrent subscription number
13:37:13  42  MAX_CONCURRENT_SUBS_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
13:37:13  43  
13:37:13  44  -- 'unlimited' value for max concurrent products number
13:37:13  45  MAX_CONSURRENT_PRD_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
13:37:13  46  
13:37:13  47  -- UPGRADABLE_OFFER_CHAIN_ID
13:37:13  48  OCMD_UPGRADABLE_OFFER_CHAIN_ID CONSTANT VARCHAR(25) := 'UPGRADABLE_OFFER_CHAIN_ID';
13:37:13  49  
13:37:13  50  -- Max number of records that should be return
13:37:13  51  MAX_RETURN_COUNT NUMBER := 1000;
13:37:13  52  
13:37:13  53  -- Share end date for non-group-pass group accounts
13:37:13  54  MAX_DATE CONSTANT DATE := TO_DATE('12/31/9999', 'MM/DD/YYYY');
13:37:13  55  
13:37:13  56  END GLOBAL_CONSTANTS_V21;
13:37:13  57  .
13:37:13 SQL> /

Package created.

Elapsed: 00:00:00.04
13:37:13 SQL> 
13:37:13 SQL> 
13:37:13 SQL> 
13:37:13 SQL> --------------------------------------------------------------------------------
13:37:13 SQL> -- DDL for package GLOBAL_ENUMS
13:37:13 SQL> --------------------------------------------------------------------------------
13:37:13 SQL> 
13:37:13 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_ENUMS_V21" AS
13:37:13   2  
13:37:13   3  ----
13:37:13   4  -- CREDIT CARD TYPES
13:37:13   5  
13:37:13   6  CREDIT_CARD_AMEX	      CONSTANT NUMBER := 1;
13:37:13   7  CREDIT_CARD_VISA	      CONSTANT NUMBER := 2;
13:37:13   8  CREDIT_CARD_MASTER_CARD CONSTANT NUMBER := 3;
13:37:13   9  CREDIT_CARD_DISCOVER    CONSTANT NUMBER := 4;
13:37:13  10  
13:37:13  11  ----
13:37:13  12  -- INSTRUMENT TYPE
13:37:13  13  
13:37:13  14  INSTRUMENT_CREDIT_CARD	   CONSTANT NUMBER := 1;
13:37:13  15  INSTRUMENT_PAYPAL 	   CONSTANT NUMBER := 2;
13:37:13  16  INSTRUMENT_GIFT_CERTIFICATE  CONSTANT NUMBER := 3;
13:37:13  17  INSTRUMENT_ZCI_INSTRUMENT    CONSTANT NUMBER := 4;
13:37:13  18  
13:37:13  19  ----
13:37:13  20  -- SYSTEM ACTIVITY REASONS
13:37:13  21  
13:37:13  22  SAC_SYSTEM_APPLIED_RULE CONSTANT NUMBER := 1;
13:37:13  23  
13:37:13  24  ----
13:37:13  25  -- GIFT CERTIFICATES TYPE
13:37:13  26  
13:37:13  27  GSTYPE_GSTYPE1 CONSTANT NUMBER := 1;
13:37:13  28  GSTYPE_GSTYPE2 CONSTANT NUMBER := 2;
13:37:13  29  
13:37:13  30  ----
13:37:13  31  -- SYSTEM CATEGORY
13:37:13  32  
13:37:13  33  SYSTEM_CATEGORY_LIVE CONSTANT NUMBER := 1;
13:37:13  34  SYSTEM_CATEGORY_TEST CONSTANT NUMBER := 2;
13:37:13  35  
13:37:13  36  ----
13:37:13  37  -- OFFER_RECURRENCES
13:37:13  38  
13:37:13  39  OFFER_REC_INFINITY CONSTANT NUMBER := -1;
13:37:13  40  
13:37:13  41  ----
13:37:13  42  -- TAX JURISDICTION LEVELS
13:37:13  43  -- We need only international right now
13:37:13  44  
13:37:13  45  JURIS_INTERNATIONAL CONSTANT NUMBER := 5;
13:37:13  46  
13:37:13  47  ----
13:37:13  48  -- TAX TYPES
13:37:13  49  
13:37:13  50  TAX_TYPE_SALES CONSTANT NUMBER := 1;
13:37:13  51  TAX_TYPE_VAT   CONSTANT NUMBER := 2;
13:37:13  52  
13:37:13  53  END GLOBAL_ENUMS_V21;
13:37:13  54  .
13:37:13 SQL> /

Package created.

Elapsed: 00:00:00.03
13:37:13 SQL> 
13:37:13 SQL> 
13:37:13 SQL> 
13:37:13 SQL> --------------------------------------------------------------------------------
13:37:13 SQL> -- DDL for package GLOBAL_STATUSES
13:37:13 SQL> --------------------------------------------------------------------------------
13:37:13 SQL> 
13:37:13 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_STATUSES_V21" AS
13:37:13   2  
13:37:13   3  REAL_TIME_CANCEL_REASON CONSTANT NUMBER := 41;
13:37:13   4  
13:37:13   5  ----
13:37:13   6  -- ACCOUNT STATUSES
13:37:13   7  
13:37:13   8  ACCOUNT_ACTIVE   CONSTANT NUMBER := 1;
13:37:13   9  ACCOUNT_FROZEN   CONSTANT NUMBER := 2;
13:37:13  10  ACCOUNT_DISABLED CONSTANT NUMBER := 3;
13:37:13  11  
13:37:13  12  ----
13:37:13  13  -- SUBSCRIPTION STATUSES
13:37:13  14  
13:37:13  15  SUBSCRIPTION_ACTIVE	   CONSTANT NUMBER := 1;
13:37:13  16  SUBSCRIPTION_SUSPENDED	   CONSTANT NUMBER := 2;
13:37:13  17  SUBSCRIPTION_CANCELED	   CONSTANT NUMBER := 3;
13:37:13  18  SUBSCRIPTION_CLOSED	   CONSTANT NUMBER := 4;
13:37:13  19  SUBSCRIPTION_FALSE_START	   CONSTANT NUMBER := 5;
13:37:13  20  SUBSCRIPTION_IN_GRACE_PERIOD CONSTANT NUMBER := 6;
13:37:13  21  
13:37:13  22  ----
13:37:13  23  -- CREDIT_CARD STATUSES
13:37:13  24  
13:37:13  25  CREDIT_CARD_ACTIVE   CONSTANT NUMBER := 1;
13:37:13  26  CREDIT_CARD_INVALID  CONSTANT NUMBER := 2; -- WAS INACTIVE
13:37:13  27  CREDIT_CARD_DISABLED CONSTANT NUMBER := 3; -- WAS FROZEN
13:37:13  28  CREDIT_CARD_EXPIRED  CONSTANT NUMBER := 4;
13:37:13  29  
13:37:13  30  ----
13:37:13  31  -- PAYPAL STATUSES
13:37:13  32  
13:37:13  33  PAYPAL_ACTIVE   CONSTANT NUMBER := 1;
13:37:13  34  PAYPAL_INACTIVE CONSTANT NUMBER := 2;
13:37:13  35  PAYPAL_FROZEN   CONSTANT NUMBER := 3;
13:37:13  36  
13:37:13  37  ----
13:37:13  38  -- GIFT_CERTIFICATE STATUSES
13:37:13  39  
13:37:13  40  GIFT_CERTIFICATE_ACTIVE	 CONSTANT NUMBER := 1;
13:37:13  41  GIFT_CERTIFICATE_FINALIZED CONSTANT NUMBER := 2;
13:37:13  42  GIFT_CERTIFICATE_REFUNDED  CONSTANT NUMBER := 3;
13:37:13  43  
13:37:13  44  ----
13:37:13  45  -- TRANSACTION STATUSES
13:37:13  46  
13:37:13  47  TRANSACTION_PENDING	     CONSTANT NUMBER := 1;
13:37:13  48  TRANSACTION_CLOSED	     CONSTANT NUMBER := 2;
13:37:13  49  TRANSACTION_CHARGEBACK	     CONSTANT NUMBER := 3;
13:37:13  50  TRANSACTION_PREPARE	     CONSTANT NUMBER := 1;
13:37:13  51  TRANSACTION_DECLINED	     CONSTANT NUMBER := 7;
13:37:13  52  
13:37:13  53  ----
13:37:13  54  -- TRANSACTION_ATTEMPT_STATUS
13:37:13  55  TRANS_ATTEMPT_IN_PROGRESS CONSTANT NUMBER := 1;
13:37:13  56  TRANS_ATTEMPT_SUCCESS	CONSTANT NUMBER := 2;
13:37:13  57  TRANS_ATTEMPT_FAILED	CONSTANT NUMBER := 3;
13:37:13  58  
13:37:13  59  ----
13:37:13  60  -- PRODUCT STATUSES
13:37:13  61  
13:37:13  62  PRODUCT_ACTIVE	CONSTANT NUMBER := 1;
13:37:13  63  PRODUCT_INACTIVE	CONSTANT NUMBER := 2;
13:37:13  64  PRODUCT_DISABLED	CONSTANT NUMBER := 3;
13:37:13  65  
13:37:13  66  ----
13:37:13  67  -- LICENSE STATUSES
13:37:13  68  
13:37:13  69  LICENSE_CLOSED CONSTANT NUMBER := 1;
13:37:13  70  LICENSE_ACTIVE CONSTANT NUMBER := 2;
13:37:13  71  LICENSE_IN_GRACE_PERIOD CONSTANT NUMBER := 4;
13:37:13  72  
13:37:13  73  ----
13:37:13  74  -- INVOICE STATUSES
13:37:13  75  
13:37:13  76  INVOICE_OPEN		  CONSTANT NUMBER := 1; -- IN SPECS INVOICE_PENDING
13:37:13  77  INVOICE_CLOSED		  CONSTANT NUMBER := 3; -- IN SPECS INVOICE_PAID
13:37:13  78  
13:37:13  79  
13:37:13  80  ----
13:37:13  81  -- CHARGE STATUSES
13:37:13  82  
13:37:13  83  CHARGE_OPENED    CONSTANT NUMBER := 1;
13:37:13  84  CHARGE_PROCESSED CONSTANT NUMBER := 2;
13:37:13  85  CHARGE_CANCELED  CONSTANT NUMBER := 3;
13:37:13  86  
13:37:13  87  ----
13:37:13  88  -- OFFER STATUSES
13:37:13  89  
13:37:13  90  OFFER_ACTIVE   CONSTANT NUMBER := 1;
13:37:13  91  OFFER_INACTIVE CONSTANT NUMBER := 2;
13:37:13  92  OFFER_DISABLED CONSTANT NUMBER := 3;
13:37:13  93  
13:37:13  94  ----
13:37:13  95  -- OFFER_CHAIN STATUSES
13:37:13  96  
13:37:13  97  OFFER_CHAIN_ACTIVE   CONSTANT NUMBER := 1;
13:37:13  98  OFFER_CHAIN_INACTIVE CONSTANT NUMBER := 2;
13:37:13  99  OFFER_CHAIN_DISABLED CONSTANT NUMBER := 3;
13:37:13 100  
13:37:13 101  ----
13:37:13 102  -- ZERO_CHARGE_INSTRUMENT STATUSES
13:37:13 103  
13:37:13 104  ZERO_CHARGE_INSTR_ACTIVE CONSTANT NUMBER := 1;
13:37:13 105  ZERO_CHARGE_INSTR_DISABLED CONSTANT NUMBER := 2;
13:37:13 106  
13:37:13 107  ----
13:37:13 108  -- SUBSCRIPTION_CANCELATION_REASONS
13:37:13 109  
13:37:13 110  SUBSCR_CANC_REASON_ACTIVE CONSTANT NUMBER := 1;
13:37:13 111  SUBSCR_CANC_REASON_INACTIVE CONSTANT NUMBER := 2;
13:37:13 112  SUBSCR_CANC_REASON_INT_ONLY CONSTANT NUMBER := 3;
13:37:13 113  
13:37:13 114  GROUP_ACC_IP_RNG_ACTIVE CONSTANT NUMBER := 1;
13:37:13 115  GROUP_ACC_IP_RNG_INACTIVE CONSTANT NUMBER := 2;
13:37:13 116  
13:37:13 117  GROUP_ACC_EMAIL_DOMAIN_ACT CONSTANT NUMBER := 1;
13:37:13 118  GROUP_ACC_EMAIL_DOMAIN_INACT CONSTANT NUMBER := 0;
13:37:13 119  
13:37:13 120  END GLOBAL_STATUSES_V21;
13:37:13 121  .
13:37:13 SQL> /

Package created.

Elapsed: 00:00:00.04
13:37:13 SQL> 
13:37:13 SQL> 
13:37:13 SQL> 
13:37:13 SQL> --------------------------------------------------------------------------------
13:37:13 SQL> -- DDL for package NOTIFICATION_STATUSES
13:37:13 SQL> --------------------------------------------------------------------------------
13:37:13 SQL> 
13:37:13 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V21" AS
13:37:13   2  
13:37:13   3  ----
13:37:13   4  -- NOTIFICATION STATUSES
13:37:13   5  
13:37:13   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
13:37:13   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
13:37:13   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
13:37:13   9  
13:37:13  10  END NOTIFICATION_STATUSES_V21;
13:37:13  11  .
13:37:13 SQL> /

Package created.

Elapsed: 00:00:00.02
13:37:13 SQL> 
13:37:13 SQL> 
13:37:13 SQL> 
13:37:13 SQL> --------------------------------------------------------------------------------
13:37:13 SQL> -- DDL for package PROCS_COMMON
13:37:13 SQL> --------------------------------------------------------------------------------
13:37:13 SQL> 
13:37:13 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V21" AS
13:37:13   2  
13:37:13   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
13:37:13   4  	in_duration IN VARCHAR2,
13:37:13   5  	in_start_date IN DATE
13:37:13   6  ) RETURN DATE;
13:37:13   7  
13:37:13   8  PROCEDURE ISO8601DURATION_TO_INTERVALS(
13:37:13   9  /*
13:37:13  10  Throws exceptions:
13:37:13  11  APP_EXCEPTION_CODES_V21.INTERNAL_ERROR
13:37:13  12  APP_EXCEPTION_CODES_V21.UNKNOWN_ERROR
13:37:13  13  */
13:37:13  14  	in_duration IN	VARCHAR2,
13:37:13  15  	out_years   OUT NUMBER,
13:37:13  16  	out_months  OUT NUMBER,
13:37:13  17  	out_days    OUT NUMBER
13:37:13  18  );
13:37:13  19  
13:37:13  20  FUNCTION NORMALIZE_DATE(
13:37:13  21   in_date IN DATE
13:37:13  22  ) RETURN DATE;
13:37:13  23  
13:37:13  24  FUNCTION GENERATE_EXCEPTION_MESSAGE(
13:37:13  25  	in_sproc_name	    IN VARCHAR2,
13:37:13  26  	in_error_message    IN VARCHAR2,
13:37:13  27  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
13:37:13  28  ) RETURN VARCHAR2;
13:37:13  29  
13:37:13  30  PROCEDURE THROW_EXCEPTION(
13:37:13  31  	in_exception_code   IN NUMBER,
13:37:13  32  	in_sproc_name	    IN VARCHAR2,
13:37:13  33  	in_error_message    IN VARCHAR2,
13:37:13  34  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
13:37:13  35  );
13:37:13  36  
13:37:13  37  FUNCTION ROUND_10_6_TO_10_2 (
13:37:13  38  	in_number NUMBER
13:37:13  39  ) RETURN NUMBER;
13:37:13  40  
13:37:13  41  END PROCS_COMMON_V21;
13:37:13  42  .
13:37:13 SQL> /

Package created.

Elapsed: 00:00:00.12
13:37:13 SQL> 
13:37:13 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V21" AS
13:37:13   2  
13:37:13   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
13:37:13   4  	in_duration IN VARCHAR2,
13:37:13   5  	in_start_date IN DATE
13:37:13   6  ) RETURN DATE AS
13:37:13   7  	var_end_date DATE;
13:37:13   8  	var_years NUMBER;
13:37:13   9  	var_months NUMBER;
13:37:13  10  	var_days NUMBER;
13:37:13  11  	var_ym_interval INTERVAL YEAR TO MONTH;
13:37:13  12  	var_ds_interval INTERVAL DAY(3) TO SECOND;
13:37:13  13  BEGIN
13:37:13  14  	PROCS_COMMON_V21.ISO8601DURATION_TO_INTERVALS(in_duration, var_years, var_months, var_days);
13:37:13  15  	var_ym_interval := var_years || '-' || var_months;
13:37:13  16  	var_ds_interval := var_days || ' 0:0:0';
13:37:13  17  
13:37:13  18  	var_end_date := in_start_date + var_ym_interval + var_ds_interval;
13:37:13  19  	RETURN var_end_date;
13:37:13  20  END ADD_ISO8601DURATION_TO_DATE;
13:37:13  21  
13:37:13  22  PROCEDURE ISO8601DURATION_TO_INTERVALS(
13:37:13  23  /*
13:37:13  24  Throws exceptions:
13:37:13  25  APP_EXCEPTION_CODES_V21.INTERNAL_ERROR
13:37:13  26  APP_EXCEPTION_CODES_V21.UNKNOWN_ERROR
13:37:13  27  */
13:37:13  28  	in_duration IN	VARCHAR2,
13:37:13  29  	out_years   OUT NUMBER,
13:37:13  30  	out_months  OUT NUMBER,
13:37:13  31  	out_days    OUT NUMBER
13:37:13  32  ) AS
13:37:13  33  SPROC_NAME	  CONSTANT VARCHAR2(28) := 'ISO8601DURATION_TO_INTERVALS';
13:37:13  34  -- VARIABLES
13:37:13  35  var_checking_status NUMBER;
13:37:13  36  temp_duration	  VARCHAR2(29);
13:37:13  37  var_is_t_founded	  NUMBER;
13:37:13  38  
13:37:13  39  var_date_duration VARCHAR2(29);
13:37:13  40  var_time_duration VARCHAR2(29);
13:37:13  41  
13:37:13  42  var_years   VARCHAR2(4);
13:37:13  43  var_monthes VARCHAR2(4);
13:37:13  44  var_days	  VARCHAR2(4);
13:37:13  45  var_hours   VARCHAR2(4);
13:37:13  46  var_minutes VARCHAR2(4);
13:37:13  47  var_seconds VARCHAR2(4);
13:37:13  48  
13:37:13  49  -- EXCEPTIONS
13:37:13  50  BAD_ISO_FORMAT EXCEPTION;
13:37:13  51  BEGIN
13:37:13  52  
13:37:13  53  	var_years   := '0';
13:37:13  54  	var_monthes := '0';
13:37:13  55  	var_days    := '0';
13:37:13  56  	var_hours   := '0';
13:37:13  57  	var_minutes := '0';
13:37:13  58  	var_seconds := '0';
13:37:13  59  
13:37:13  60  	SELECT
13:37:13  61  	  COUNT(*) into var_checking_status
13:37:13  62  	FROM
13:37:13  63  	  DUAL
13:37:13  64  	WHERE
13:37:13  65  	  REGEXP_LIKE(in_duration, '^P')
13:37:13  66  	  AND ROWNUM <= 1;
13:37:13  67  
13:37:13  68  	IF var_checking_status = 0 THEN
13:37:13  69  	  RAISE BAD_ISO_FORMAT;
13:37:13  70  	END IF;
13:37:13  71  
13:37:13  72  	SELECT
13:37:13  73  	  SUBSTR(in_duration, 2) into temp_duration
13:37:13  74  	FROM DUAL
13:37:13  75  	WHERE ROWNUM <= 1;
13:37:13  76  
13:37:13  77  	var_is_t_founded := INSTR(temp_duration, 'T');
13:37:13  78  
13:37:13  79  	IF var_is_t_founded > 1 OR var_is_t_founded = 0 THEN
13:37:13  80  	  -- RESOLVING DATE FROM ISO STRING
13:37:13  81  	  IF var_is_t_founded != 0 THEN
13:37:13  82  	    var_date_duration := SUBSTR(temp_duration, 1, var_is_t_founded - 1);
13:37:13  83  	  ELSE
13:37:13  84  	    var_date_duration := temp_duration;
13:37:13  85  	  END IF;
13:37:13  86  
13:37:13  87  	  SELECT
13:37:13  88  	    COUNT(*) into var_checking_status
13:37:13  89  	  FROM
13:37:13  90  	    DUAL
13:37:13  91  	  WHERE
13:37:13  92  	    REGEXP_LIKE(var_date_duration, '^(\d{1,3}Y){0,1}(\d{1,3}M){0,1}(\d{1,3}D){0,1}$')
13:37:13  93  	    AND ROWNUM <= 1;
13:37:13  94  
13:37:13  95  	  IF var_checking_status = 0 THEN
13:37:13  96  	    RAISE BAD_ISO_FORMAT;
13:37:13  97  	  END IF;
13:37:13  98  
13:37:13  99  	  IF INSTR(var_date_duration, 'Y') != 0 THEN
13:37:13 100  	    SELECT
13:37:13 101  	      REGEXP_SUBSTR(var_date_duration, '\d+Y') into var_years
13:37:13 102  	    FROM
13:37:13 103  	      DUAL;
13:37:13 104  	    var_years := SUBSTR(var_years, 1, LENGTH(var_years) - 1);
13:37:13 105  	  END IF;
13:37:13 106  
13:37:13 107  	  IF INSTR(var_date_duration, 'M') != 0 THEN
13:37:13 108  	    SELECT
13:37:13 109  	      REGEXP_SUBSTR(var_date_duration, '\d+M') into var_monthes
13:37:13 110  	    FROM
13:37:13 111  	      DUAL;
13:37:13 112  	    var_monthes := SUBSTR(var_monthes, 1, LENGTH(var_monthes) - 1);
13:37:13 113  	  END IF;
13:37:13 114  
13:37:13 115  	  IF INSTR(var_date_duration, 'D') != 0 THEN
13:37:13 116  	    SELECT
13:37:13 117  	      REGEXP_SUBSTR(var_date_duration, '\d+D') into var_days
13:37:13 118  	    FROM
13:37:13 119  	      DUAL;
13:37:13 120  	    var_days := SUBSTR(var_days, 1, LENGTH(var_days) - 1);
13:37:13 121  	  END IF;
13:37:13 122  	END IF;
13:37:13 123  
13:37:13 124  	IF (var_is_t_founded > 0) THEN
13:37:13 125  	  -- RESOLVING TIME FROM ISO STRING
13:37:13 126  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded + 1);
13:37:13 127  
13:37:13 128  	  SELECT
13:37:13 129  	    COUNT(*) into var_checking_status
13:37:13 130  	  FROM
13:37:13 131  	    DUAL
13:37:13 132  	  WHERE
13:37:13 133  	    REGEXP_LIKE(var_time_duration, '^(\d{1,3}H){0,1}(\d{1,3}M){0,1}(\d{1,3}S){0,1}$')
13:37:13 134  	    AND ROWNUM <= 1;
13:37:13 135  
13:37:13 136  	  IF var_checking_status = 0 THEN
13:37:13 137  	    RAISE BAD_ISO_FORMAT;
13:37:13 138  	  END IF;
13:37:13 139  
13:37:13 140  	  IF INSTR(var_time_duration, 'H') != 0 THEN
13:37:13 141  	    SELECT
13:37:13 142  	      REGEXP_SUBSTR(var_time_duration, '\d+H') into var_hours
13:37:13 143  	    FROM
13:37:13 144  	      DUAL;
13:37:13 145  	    var_hours := SUBSTR(var_hours, 1, LENGTH(var_hours) - 1);
13:37:13 146  	  END IF;
13:37:13 147  
13:37:13 148  	  IF INSTR(var_time_duration, 'M') != 0 THEN
13:37:13 149  	    SELECT
13:37:13 150  	      REGEXP_SUBSTR(var_time_duration, '\d+M') into var_minutes
13:37:13 151  	    FROM
13:37:13 152  	      DUAL;
13:37:13 153  	    var_minutes := SUBSTR(var_minutes, 1, LENGTH(var_minutes) - 1);
13:37:13 154  	  END IF;
13:37:13 155  
13:37:13 156  	  IF INSTR(var_time_duration, 'S') != 0 THEN
13:37:13 157  	    SELECT
13:37:13 158  	      REGEXP_SUBSTR(var_time_duration, '\d+S') into var_seconds
13:37:13 159  	    FROM
13:37:13 160  	      DUAL;
13:37:13 161  	    var_seconds := SUBSTR(var_seconds, 1, LENGTH(var_seconds) - 1);
13:37:13 162  	  END IF;
13:37:13 163  
13:37:13 164  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded);
13:37:13 165  	END IF;
13:37:13 166  
13:37:13 167  	out_years  := var_years;
13:37:13 168  	out_months := var_monthes;
13:37:13 169  	out_days   := var_days;
13:37:13 170  
13:37:13 171  EXCEPTION
13:37:13 172  WHEN BAD_ISO_FORMAT THEN
13:37:13 173  	PROCS_COMMON_V21.THROW_EXCEPTION(APP_EXCEPTION_CODES_V21.INTERNAL_ERROR,
13:37:13 174  	  SPROC_NAME, 'Bad date format');
13:37:13 175  WHEN OTHERS THEN
13:37:13 176  	PROCS_COMMON_V21.THROW_EXCEPTION(APP_EXCEPTION_CODES_V21.UNKNOWN_ERROR,
13:37:13 177  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:37:13 178  END ISO8601DURATION_TO_INTERVALS;
13:37:13 179  
13:37:13 180  /******************************************************************************/
13:37:13 181  
13:37:13 182  FUNCTION NORMALIZE_DATE(
13:37:13 183   in_date IN DATE
13:37:13 184  ) RETURN DATE AS
13:37:13 185  -- VARIABLES
13:37:13 186  var_normalized_date DATE;
13:37:13 187  BEGIN
13:37:13 188  	var_normalized_date := TRUNC(in_date);
13:37:13 189  	RETURN var_normalized_date;
13:37:13 190  END NORMALIZE_DATE;
13:37:13 191  
13:37:13 192  /******************************************************************************/
13:37:13 193  
13:37:13 194  FUNCTION GENERATE_EXCEPTION_MESSAGE(
13:37:13 195  	in_sproc_name	    IN VARCHAR2,
13:37:13 196  	in_error_message    IN VARCHAR2,
13:37:13 197  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
13:37:13 198  ) RETURN VARCHAR2 AS
13:37:13 199  BEGIN
13:37:13 200  	IF in_error_stacktrace IS NOT NULL THEN
13:37:13 201  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || GLOBAL_CONSTANTS_V21.EXCEPTION_DELIMETER || in_error_stacktrace;
13:37:13 202  	END IF;
13:37:13 203  	RETURN
13:37:13 204  	  in_sproc_name || ': ' || in_error_message;
13:37:13 205  END GENERATE_EXCEPTION_MESSAGE;
13:37:13 206  
13:37:13 207  /******************************************************************************/
13:37:13 208  
13:37:13 209  PROCEDURE THROW_EXCEPTION(
13:37:13 210  	in_exception_code   IN NUMBER,
13:37:13 211  	in_sproc_name	    IN VARCHAR2,
13:37:13 212  	in_error_message    IN VARCHAR2,
13:37:13 213  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
13:37:13 214  ) AS
13:37:13 215  BEGIN
13:37:13 216  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
13:37:13 217  END;
13:37:13 218  
13:37:13 219  FUNCTION ROUND_10_6_TO_10_2 (
13:37:13 220  	in_number NUMBER
13:37:13 221  ) RETURN NUMBER AS
13:37:13 222  v_result NUMBER(10,2);
13:37:13 223  BEGIN
13:37:13 224  	v_result := in_number;
13:37:13 225  	return v_result;
13:37:13 226  END;
13:37:13 227  
13:37:13 228  END PROCS_COMMON_V21;
13:37:13 229  .
13:37:13 SQL> /

Package body created.

Elapsed: 00:00:00.15
13:37:13 SQL> 
13:37:13 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V21 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
13:37:13 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V21 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
13:37:13 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V21 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
13:37:13 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
13:37:13 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECPR@rac01.prd.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com
Cc: nytd_oracledba@nytimes.com

Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.prd.ewr1.nytimes.com
        DB Role: PRIMARY
        SID: ECPR
        Schema: core_owner
        Migration: 51.2-release-1.15.0-1-CORE-common.sql
        SVN Revision: 12649
        Duration: 1 sec.
        DBA: sbao
        