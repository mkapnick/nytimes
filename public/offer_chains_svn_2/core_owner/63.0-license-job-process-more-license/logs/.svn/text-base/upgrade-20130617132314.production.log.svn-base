13:23:27 SQL> @/dbbackups/ECPR/migrations/core_owner/63.0-license-job-process-more-license/upgrade.sql
13:23:27 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_LICENSE_V22" AS
13:23:27   2  
13:23:27   3  PROCEDURE CREATE_LICENSE(
13:23:27   4  /*
13:23:27   5  Throws exceptions:
13:23:27   6  APP_EXCEPTION_CODES_V22.NOT_FOUND
13:23:27   7  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
13:23:27   8  APP_EXCEPTION_CODES_V22.INTERNAL_ERROR
13:23:27   9  */
13:23:27  10  	in_status_id		    IN NUMBER,
13:23:27  11  	in_needs_entitlements	    IN NUMBER,
13:23:27  12  	in_start_date		    IN DATE,
13:23:27  13  	in_end_date		    IN DATE,
13:23:27  14  	in_offer_id		    IN NUMBER,
13:23:27  15  	in_subscription_id	    IN NUMBER,
13:23:27  16  	in_invoice_id		    IN NUMBER,
13:23:27  17  	in_created_by		    IN VARCHAR2,
13:23:27  18  	in_is_extension 	    IN NUMBER,
13:23:27  19  	in_current_offer_index	    IN NUMBER,
13:23:27  20  	in_current_offer_recurr_num IN NUMBER,
13:23:27  21  	out_license_id		    OUT NUMBER
13:23:27  22  ) AS
13:23:27  23  -- VARIABLES
13:23:27  24  SPROC_NAME	   CONSTANT VARCHAR2(14) := 'CREATE_LICENSE';
13:23:27  25  temp_offer_id	   NUMBER;
13:23:27  26  temp_subscription_id NUMBER;
13:23:27  27  temp_invoice_id	   NUMBER;
13:23:27  28  
13:23:27  29  var_new_license_id NUMBER;
13:23:27  30  var_offer_duration VARCHAR2(30);
13:23:27  31  
13:23:27  32  var_offer_ym_interval INTERVAL YEAR TO MONTH;
13:23:27  33  var_offer_ds_interval INTERVAL DAY(3) TO SECOND;
13:23:27  34  var_offer_years	    NUMBER;
13:23:27  35  var_offer_months	    NUMBER;
13:23:27  36  var_offer_days	    NUMBER;
13:23:27  37  
13:23:27  38  -- EXCEPTIONS
13:23:27  39  BAD_OFFER_ID	     EXCEPTION;
13:23:27  40  BAD_SUBSCRIPTION_ID    EXCEPTION;
13:23:27  41  BAD_INVOICE_ID	     EXCEPTION;
13:23:27  42  BAD_OFFER_DURATION     EXCEPTION;
13:23:27  43  EXCEPTION_MESSAGE      VARCHAR2(1024);
13:23:27  44  BEGIN
13:23:27  45  
13:23:27  46  	-- TODO:
13:23:27  47  	---- check incoming data: in_current_offer_index, in_current_offer_recurr_num, in_is_extension
13:23:27  48  
13:23:27  49  	out_license_id := NULL;
13:23:27  50  
13:23:27  51  	-- get offer id and offer entitlement duration
13:23:27  52  	BEGIN
13:23:27  53  	  SELECT
13:23:27  54  	    OFFER.ID,
13:23:27  55  	    OFFER.ENTITLEMENT_DURATION
13:23:27  56  	    into
13:23:27  57  	    temp_offer_id,
13:23:27  58  	    var_offer_duration
13:23:27  59  	  FROM
13:23:27  60  	    OFFER
13:23:27  61  	  WHERE
13:23:27  62  	    OFFER.ID = in_offer_id;
13:23:27  63  	  EXCEPTION
13:23:27  64  	  WHEN NO_DATA_FOUND THEN
13:23:27  65  	    RAISE BAD_OFFER_ID;
13:23:27  66  	END;
13:23:27  67  
13:23:27  68  	-- Check that subscription exists
13:23:27  69  	BEGIN
13:23:27  70  	  SELECT
13:23:27  71  	    SUBSCRIPTION.ID into temp_subscription_id
13:23:27  72  	  FROM
13:23:27  73  	    SUBSCRIPTION
13:23:27  74  	  WHERE
13:23:27  75  	    SUBSCRIPTION.ID = in_subscription_id;
13:23:27  76  	  EXCEPTION
13:23:27  77  	  WHEN NO_DATA_FOUND THEN
13:23:27  78  	    RAISE BAD_SUBSCRIPTION_ID;
13:23:27  79  	END;
13:23:27  80  
13:23:27  81  	-- Check that invoice exists
13:23:27  82  	BEGIN
13:23:27  83  	  SELECT
13:23:27  84  	    INVOICE.ID into temp_invoice_id
13:23:27  85  	  FROM
13:23:27  86  	    INVOICE
13:23:27  87  	  WHERE
13:23:27  88  	    INVOICE.ID = in_invoice_id;
13:23:27  89  	  EXCEPTION
13:23:27  90  	  WHEN NO_DATA_FOUND THEN
13:23:27  91  	    RAISE BAD_INVOICE_ID;
13:23:27  92  	END;
13:23:27  93  
13:23:27  94  	-- convert offer duration into intervals
13:23:27  95  	BEGIN
13:23:27  96  	  PROCS_COMMON_V22.ISO8601DURATION_TO_INTERVALS(
13:23:27  97  	    var_offer_duration,
13:23:27  98  	    var_offer_years,
13:23:27  99  	    var_offer_months,
13:23:27 100  	    var_offer_days);
13:23:27 101  	  var_offer_ym_interval := var_offer_years||'-'||var_offer_months;
13:23:27 102  	  var_offer_ds_interval := var_offer_days||' 0:0:0';
13:23:27 103  	  EXCEPTION
13:23:27 104  	    WHEN OTHERS THEN
13:23:27 105  	      EXCEPTION_MESSAGE := SQLERRM;
13:23:27 106  	      RAISE BAD_OFFER_DURATION;
13:23:27 107  	END;
13:23:27 108  
13:23:27 109  	-- insert new row into license table
13:23:27 110  	PROCS_LICENSE_CRU_V22.CREATE_LICENSE(
13:23:27 111  	  out_license_id	      => var_new_license_id,
13:23:27 112  	  in_license_status_id	      => in_status_id,
13:23:27 113  	  in_needs_entitlements       => in_needs_entitlements,
13:23:27 114  	  in_start_date 	      => in_start_date,
13:23:27 115  	  in_offer_id		      => in_offer_id,
13:23:27 116  	  in_subscription_id	      => in_subscription_id,
13:23:27 117  	  in_invoice_id 	      => in_invoice_id,
13:23:27 118  	  in_end_date		      => NVL(in_end_date, in_start_date + var_offer_ym_interval + var_offer_ds_interval),
13:23:27 119  	  in_created_by 	      => in_created_by,
13:23:27 120  	  in_is_extension	      => in_is_extension,
13:23:27 121  	  in_current_offer_index      => in_current_offer_index,
13:23:27 122  	  in_current_offer_recurr_num => in_current_offer_recurr_num
13:23:27 123  	);
13:23:27 124  
13:23:27 125  	out_license_id := var_new_license_id;
13:23:27 126  
13:23:27 127  EXCEPTION
13:23:27 128  WHEN BAD_OFFER_DURATION THEN
13:23:27 129  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
13:23:27 130  	  SPROC_NAME, 'Bad offer duration format', EXCEPTION_MESSAGE);
13:23:27 131  WHEN BAD_OFFER_ID THEN
13:23:27 132  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 133  	  SPROC_NAME, 'No such offer');
13:23:27 134  WHEN BAD_SUBSCRIPTION_ID THEN
13:23:27 135  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 136  	  SPROC_NAME, 'No such subscription');
13:23:27 137  WHEN BAD_INVOICE_ID THEN
13:23:27 138  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 139  	  SPROC_NAME, 'No such invoice');
13:23:27 140  WHEN OTHERS THEN
13:23:27 141  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 142  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 143  END;
13:23:27 144  
13:23:27 145  /******************************************************************************/
13:23:27 146  
13:23:27 147  PROCEDURE UPDATE_LICENSE_STATUS(
13:23:27 148  	  in_license_id     IN NUMBER,
13:23:27 149  	  in_license_status IN NUMBER,
13:23:27 150  	  in_updated_by     IN VARCHAR2,
13:23:27 151  	  in_ent_end	    IN NUMBER DEFAULT GLOBAL_CONSTANTS_V22.FALSE
13:23:27 152  ) AS
13:23:27 153  SPROC_NAME CONSTANT VARCHAR2(21) := 'UPDATE_LICENSE_STATUS';
13:23:27 154  -- VARIABLES
13:23:27 155  temp_license_id NUMBER;
13:23:27 156  -- EXCEPTIONS
13:23:27 157  BAD_LICENSE_ID	     EXCEPTION;
13:23:27 158  BAD_LICENSE_STATUS     EXCEPTION;
13:23:27 159  EXCEPTION_MESSAGE      VARCHAR2(1024);
13:23:27 160  BEGIN
13:23:27 161  
13:23:27 162  	BEGIN
13:23:27 163  	  SELECT
13:23:27 164  	    ID into temp_license_id
13:23:27 165  	  FROM
13:23:27 166  	    LICENSE
13:23:27 167  	  WHERE
13:23:27 168  	    LICENSE.ID = in_license_id;
13:23:27 169  	  EXCEPTION
13:23:27 170  	    WHEN NO_DATA_FOUND THEN
13:23:27 171  	      RAISE BAD_LICENSE_ID;
13:23:27 172  	END;
13:23:27 173  
13:23:27 174  	IF in_license_status != GLOBAL_STATUSES_V22.LICENSE_CLOSED
13:23:27 175  	   AND in_license_status != GLOBAL_STATUSES_V22.LICENSE_ACTIVE
13:23:27 176  	   AND in_license_status != GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD THEN
13:23:27 177  	  RAISE BAD_LICENSE_STATUS;
13:23:27 178  	END IF;
13:23:27 179  
13:23:27 180  	IF (in_ent_end is not null and in_ent_end = GLOBAL_CONSTANTS_V22.TRUE) then
13:23:27 181  	  PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
13:23:27 182  	    in_license_id	 => in_license_id,
13:23:27 183  	    in_updated_by	 => in_updated_by,
13:23:27 184  	    in_license_status_id => in_license_status,
13:23:27 185  	    in_entitlement_end_date	 => sysdate
13:23:27 186  	  );
13:23:27 187  	ELSE
13:23:27 188  	  PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
13:23:27 189  	    in_license_id	 => in_license_id,
13:23:27 190  	    in_updated_by	 => in_updated_by,
13:23:27 191  	    in_license_status_id => in_license_status
13:23:27 192  	  );
13:23:27 193  	END IF;
13:23:27 194  
13:23:27 195  EXCEPTION
13:23:27 196  WHEN BAD_LICENSE_STATUS THEN
13:23:27 197  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
13:23:27 198  	  SPROC_NAME, 'Bad status id');
13:23:27 199  WHEN BAD_LICENSE_ID THEN
13:23:27 200  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 201  	  SPROC_NAME, 'No such license');
13:23:27 202  WHEN OTHERS THEN
13:23:27 203  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 204  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 205  END UPDATE_LICENSE_STATUS;
13:23:27 206  
13:23:27 207  /******************************************************************************/
13:23:27 208  
13:23:27 209  PROCEDURE GET_ENDING_LICENSES (
13:23:27 210  	in_hours_number IN NUMBER,
13:23:27 211  	out_result_set	OUT SYS_REFCURSOR
13:23:27 212  ) AS
13:23:27 213  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDING_LICENSES';
13:23:27 214  -- VARIABLES
13:23:27 215  var_days		NUMBER;
13:23:27 216  var_hours 	NUMBER;
13:23:27 217  var_time_interval INTERVAL DAY (3) TO SECOND;
13:23:27 218  BEGIN
13:23:27 219  
13:23:27 220  	var_hours := mod(in_hours_number,24);
13:23:27 221  	var_days := (in_hours_number - var_hours) / 24;
13:23:27 222  	var_time_interval := var_days||' '||var_hours||':0:0';
13:23:27 223  
13:23:27 224  	OPEN out_result_set FOR
13:23:27 225  SELECT * FROM
13:23:27 226  (
13:23:27 227  	SELECT
13:23:27 228  	  LICENSE.ID,
13:23:27 229  	  LICENSE.CREATE_DATE,
13:23:27 230  	  LICENSE.CREATED_BY,
13:23:27 231  	  LICENSE.CURRENT_OFFER_INDEX,
13:23:27 232  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
13:23:27 233  	  LICENSE.END_DATE,
13:23:27 234  	  LICENSE.ENTITLEMENT_END_DATE,
13:23:27 235  	  LICENSE.INVOICE_ID,
13:23:27 236  	  LICENSE.IS_EXTENSION,
13:23:27 237  	  LICENSE.LICENSE_STATUS_ID,
13:23:27 238  	  LICENSE.OFFER_ID,
13:23:27 239  	  LICENSE.START_DATE,
13:23:27 240  	  LICENSE.SUBSCRIPTION_ID,
13:23:27 241  	  LICENSE.UPDATE_DATE,
13:23:27 242  	  LICENSE.UPDATED_BY
13:23:27 243  	FROM
13:23:27 244  	  LICENSE
13:23:27 245  	WHERE
13:23:27 246  	  TO_DATE(LICENSE.END_DATE) <= (current_timestamp + var_time_interval)
13:23:27 247  	  AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
13:23:27 248  	  AND NOT EXISTS
13:23:27 249  	  (
13:23:27 250  	    SELECT NULL
13:23:27 251  	    FROM PROCESS_RETRY_THROTTLE
13:23:27 252  	    WHERE PROCESS_NAME = SPROC_NAME
13:23:27 253  	      AND GENERIC_ID = LICENSE.ID
13:23:27 254  	  )
13:23:27 255  	  AND ROWNUM <= 40000
13:23:27 256  	  ORDER BY dbms_random.value
13:23:27 257  ) WHERE
13:23:27 258  	  ROWNUM <= 4000;
13:23:27 259  EXCEPTION
13:23:27 260  WHEN OTHERS THEN
13:23:27 261  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 262  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 263  END GET_ENDING_LICENSES;
13:23:27 264  
13:23:27 265  
13:23:27 266  /******************************************************************************/
13:23:27 267  
13:23:27 268  PROCEDURE GET_ENDING_LICENSES_CC (
13:23:27 269  	in_hours_number IN NUMBER,
13:23:27 270  	out_result_set	OUT SYS_REFCURSOR,
13:23:27 271  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
13:23:27 272  ) AS
13:23:27 273  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDING_LICENSES_CC';
13:23:27 274  -- VARIABLES
13:23:27 275  var_days		NUMBER;
13:23:27 276  var_hours 	NUMBER;
13:23:27 277  var_time_interval INTERVAL DAY (3) TO SECOND;
13:23:27 278  BEGIN
13:23:27 279  
13:23:27 280  	var_hours := mod(in_hours_number,24);
13:23:27 281  	var_days := (in_hours_number - var_hours) / 24;
13:23:27 282  	var_time_interval := var_days||' '||var_hours||':0:0';
13:23:27 283  
13:23:27 284  	OPEN out_result_set FOR
13:23:27 285  SELECT * FROM
13:23:27 286  (
13:23:27 287  	SELECT
13:23:27 288  	  LICENSE.ID,
13:23:27 289  	  LICENSE.CREATE_DATE,
13:23:27 290  	  LICENSE.CREATED_BY,
13:23:27 291  	  LICENSE.CURRENT_OFFER_INDEX,
13:23:27 292  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
13:23:27 293  	  LICENSE.END_DATE,
13:23:27 294  	  LICENSE.ENTITLEMENT_END_DATE,
13:23:27 295  	  LICENSE.INVOICE_ID,
13:23:27 296  	  LICENSE.IS_EXTENSION,
13:23:27 297  	  LICENSE.LICENSE_STATUS_ID,
13:23:27 298  	  LICENSE.OFFER_ID,
13:23:27 299  	  LICENSE.START_DATE,
13:23:27 300  	  LICENSE.SUBSCRIPTION_ID,
13:23:27 301  	  LICENSE.UPDATE_DATE,
13:23:27 302  	  LICENSE.UPDATED_BY
13:23:27 303  	FROM
13:23:27 304  	  LICENSE
13:23:27 305  	WHERE
13:23:27 306  	  TO_DATE(LICENSE.END_DATE) <= (current_timestamp + var_time_interval)
13:23:27 307  	  AND LICENSE.LICENSE_STATUS_ID = GLOBAL_STATUSES_V22.LICENSE_ACTIVE
13:23:27 308  	  AND NOT EXISTS
13:23:27 309  	  (
13:23:27 310  	    SELECT NULL
13:23:27 311  	    FROM PROCESS_RETRY_THROTTLE
13:23:27 312  	    WHERE PROCESS_NAME = in_process_name
13:23:27 313  	      AND GENERIC_ID = LICENSE.INVOICE_ID
13:23:27 314  	  )
13:23:27 315  	  AND ROWNUM <= 10000
13:23:27 316  	  ORDER BY dbms_random.value
13:23:27 317  ) WHERE
13:23:27 318  	  ROWNUM <= 1000
13:23:27 319  	  ;
13:23:27 320  EXCEPTION
13:23:27 321  WHEN OTHERS THEN
13:23:27 322  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 323  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 324  END GET_ENDING_LICENSES_CC;
13:23:27 325  
13:23:27 326  /******************************************************************************/
13:23:27 327  
13:23:27 328  PROCEDURE GET_RECURRING_OFFER (
13:23:27 329  	in_license_id  IN NUMBER,
13:23:27 330  	out_result_set OUT SYS_REFCURSOR
13:23:27 331  ) AS
13:23:27 332  -- VARIABLES
13:23:27 333  SPROC_NAME		    CONSTANT VARCHAR2(19) := 'GET_RECURRING_OFFER';
13:23:27 334  var_offer_chain_id	    NUMBER;
13:23:27 335  var_offer_id		    NUMBER;
13:23:27 336  var_offer_num_recurrences     NUMBER;
13:23:27 337  var_license_cur_offer_rec_num NUMBER;
13:23:27 338  var_offer_index		    NUMBER;
13:23:27 339  -- EXCEPTIONS
13:23:27 340  BAD_LICENSE_ID	     EXCEPTION;
13:23:27 341  CAN_NOT_GET_OFFER_INFO EXCEPTION;
13:23:27 342  BEGIN
13:23:27 343  
13:23:27 344  	BEGIN
13:23:27 345  	  SELECT
13:23:27 346  	    SUBSCRIPTION.OFFER_CHAIN_ID,
13:23:27 347  	    LICENSE.OFFER_ID,
13:23:27 348  	    LICENSE.CURRENT_OFFER_RECURR_NUM
13:23:27 349  	    into
13:23:27 350  	    var_offer_chain_id,
13:23:27 351  	    var_offer_id,
13:23:27 352  	    var_license_cur_offer_rec_num
13:23:27 353  	  FROM
13:23:27 354  	    LICENSE
13:23:27 355  	    INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
13:23:27 356  	  WHERE
13:23:27 357  	    LICENSE.ID = in_license_id;
13:23:27 358  	  EXCEPTION
13:23:27 359  	    WHEN NO_DATA_FOUND THEN
13:23:27 360  	      RAISE BAD_LICENSE_ID;
13:23:27 361  	END;
13:23:27 362  
13:23:27 363  	BEGIN
13:23:27 364  	  SELECT
13:23:27 365  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES,
13:23:27 366  	    OFFER_OFFER_CHAIN.INDEX_VALUE
13:23:27 367  	    into
13:23:27 368  	    var_offer_num_recurrences,
13:23:27 369  	    var_offer_index
13:23:27 370  	  FROM
13:23:27 371  	    OFFER_OFFER_CHAIN
13:23:27 372  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
13:23:27 373  	  WHERE
13:23:27 374  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
13:23:27 375  	    AND OFFER_OFFER_CHAIN.OFFER_ID = var_offer_id;
13:23:27 376  	  EXCEPTION
13:23:27 377  	    WHEN NO_DATA_FOUND THEN
13:23:27 378  	      RAISE CAN_NOT_GET_OFFER_INFO;
13:23:27 379  	END;
13:23:27 380  
13:23:27 381  	IF var_offer_num_recurrences = 0 THEN
13:23:27 382  	  --out_result_set := NULL;
13:23:27 383  	  -- TODO: Remove this hardcode
13:23:27 384  	  OPEN out_result_set FOR
13:23:27 385  	  SELECT
13:23:27 386  	    OFFER.ID,
13:23:27 387  	    OFFER.OFFER_STATUS_ID,
13:23:27 388  	    OFFER.ENTITLEMENT_DURATION,
13:23:27 389  	    OFFER.CREATED_BY,
13:23:27 390  	    OFFER.CREATE_DATE,
13:23:27 391  	    OFFER.UPDATED_BY,
13:23:27 392  	    OFFER.UPDATE_DATE,
13:23:27 393  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
13:23:27 394  	    var_offer_index as "OFFER_INDEX"
13:23:27 395  	  FROM
13:23:27 396  	    OFFER_OFFER_CHAIN
13:23:27 397  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
13:23:27 398  	  WHERE ROWNUM = 0;
13:23:27 399  	ELSIF var_license_cur_offer_rec_num = var_offer_num_recurrences THEN
13:23:27 400  	  --out_result_set := NULL;
13:23:27 401  	  -- TODO: Remove this hardcode
13:23:27 402  	  OPEN out_result_set FOR
13:23:27 403  	  SELECT
13:23:27 404  	    OFFER.ID,
13:23:27 405  	    OFFER.OFFER_STATUS_ID,
13:23:27 406  	    OFFER.ENTITLEMENT_DURATION,
13:23:27 407  	    OFFER.CREATED_BY,
13:23:27 408  	    OFFER.CREATE_DATE,
13:23:27 409  	    OFFER.UPDATED_BY,
13:23:27 410  	    OFFER.UPDATE_DATE,
13:23:27 411  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
13:23:27 412  	    var_offer_index as "OFFER_INDEX"
13:23:27 413  	  FROM
13:23:27 414  	    OFFER_OFFER_CHAIN
13:23:27 415  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
13:23:27 416  	  WHERE ROWNUM = 0;
13:23:27 417  	ELSE
13:23:27 418  	  OPEN out_result_set FOR
13:23:27 419  	  SELECT
13:23:27 420  	    OFFER.ID,
13:23:27 421  	    OFFER.OFFER_STATUS_ID,
13:23:27 422  	    OFFER.ENTITLEMENT_DURATION,
13:23:27 423  	    OFFER.CREATED_BY,
13:23:27 424  	    OFFER.CREATE_DATE,
13:23:27 425  	    OFFER.UPDATED_BY,
13:23:27 426  	    OFFER.UPDATE_DATE,
13:23:27 427  	    var_offer_num_recurrences as "RECURRENCE_NUMBER",
13:23:27 428  	    var_offer_index as "OFFER_INDEX"
13:23:27 429  	  FROM
13:23:27 430  	    OFFER
13:23:27 431  	  WHERE
13:23:27 432  	    OFFER.ID = var_offer_id;
13:23:27 433  	END IF;
13:23:27 434  
13:23:27 435  EXCEPTION
13:23:27 436  WHEN BAD_LICENSE_ID THEN
13:23:27 437  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 438  	  SPROC_NAME, 'No such license');
13:23:27 439  WHEN CAN_NOT_GET_OFFER_INFO THEN
13:23:27 440  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 441  	  SPROC_NAME, 'Could not get offer information. Offer id = '||var_offer_id||', Offer chain id = '||var_offer_chain_id);
13:23:27 442  WHEN OTHERS THEN
13:23:27 443  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 444  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 445  END GET_RECURRING_OFFER;
13:23:27 446  
13:23:27 447  /******************************************************************************/
13:23:27 448  
13:23:27 449  PROCEDURE GET_NEXT_OFFER (
13:23:27 450  /*
13:23:27 451  Throws exceptions:
13:23:27 452  APP_EXCEPTION_CODES_V22.NOT_FOUND
13:23:27 453  APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR
13:23:27 454  */
13:23:27 455  	in_license_id  IN NUMBER,
13:23:27 456  	out_result_set OUT SYS_REFCURSOR
13:23:27 457  ) AS
13:23:27 458  -- VARIABLES
13:23:27 459  SPROC_NAME		CONSTANT VARCHAR2(14) := 'GET_NEXT_OFFER';
13:23:27 460  var_offer_chain_id	NUMBER;
13:23:27 461  var_offer_id		NUMBER;
13:23:27 462  var_license_current_index NUMBER;
13:23:27 463  var_next_offer_index	NUMBER;
13:23:27 464  -- EXCEPTIONS
13:23:27 465  BAD_LICENSE_ID	      EXCEPTION;
13:23:27 466  CAN_NOT_FIND_NEXT_OFFER EXCEPTION;
13:23:27 467  EXCEPTION_MESSAGE       VARCHAR2(1024);
13:23:27 468  BEGIN
13:23:27 469  
13:23:27 470  	BEGIN
13:23:27 471  	  SELECT
13:23:27 472  	    SUBSCRIPTION.OFFER_CHAIN_ID,
13:23:27 473  	    LICENSE.OFFER_ID,
13:23:27 474  	    LICENSE.CURRENT_OFFER_INDEX
13:23:27 475  	    into
13:23:27 476  	    var_offer_chain_id,
13:23:27 477  	    var_offer_id,
13:23:27 478  	    var_license_current_index
13:23:27 479  	  FROM
13:23:27 480  	    LICENSE
13:23:27 481  	    INNER JOIN SUBSCRIPTION ON LICENSE.SUBSCRIPTION_ID = SUBSCRIPTION.ID
13:23:27 482  	  WHERE
13:23:27 483  	    LICENSE.ID = in_license_id;
13:23:27 484  	  EXCEPTION
13:23:27 485  	    WHEN NO_DATA_FOUND THEN
13:23:27 486  	      RAISE BAD_LICENSE_ID;
13:23:27 487  	END;
13:23:27 488  
13:23:27 489  	BEGIN
13:23:27 490  	  var_next_offer_index := PROCS_OFFER_CHAIN_V22.GET_NEXT_OFFER_INDEX(
13:23:27 491  	    var_offer_chain_id,
13:23:27 492  	    var_license_current_index
13:23:27 493  	  );
13:23:27 494  	  EXCEPTION
13:23:27 495  	    WHEN OTHERS THEN
13:23:27 496  	      EXCEPTION_MESSAGE := SQLERRM;
13:23:27 497  	      RAISE CAN_NOT_FIND_NEXT_OFFER;
13:23:27 498  	END;
13:23:27 499  
13:23:27 500  	IF var_next_offer_index IS NULL THEN
13:23:27 501  	  -- RETURN NULL;
13:23:27 502  	  -- TODO: Remove this hardcode
13:23:27 503  	  OPEN out_result_set FOR
13:23:27 504  	  SELECT
13:23:27 505  	    OFFER.ID,
13:23:27 506  	    OFFER.OFFER_STATUS_ID,
13:23:27 507  	    OFFER.ENTITLEMENT_DURATION,
13:23:27 508  	    OFFER.CREATED_BY,
13:23:27 509  	    OFFER.CREATE_DATE,
13:23:27 510  	    OFFER.UPDATED_BY,
13:23:27 511  	    OFFER.UPDATE_DATE,
13:23:27 512  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES as "RECURRENCE_NUMBER"
13:23:27 513  	  FROM
13:23:27 514  	    OFFER_OFFER_CHAIN
13:23:27 515  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
13:23:27 516  	  WHERE
13:23:27 517  	    1=2;
13:23:27 518  	ELSE
13:23:27 519  	  OPEN out_result_set FOR
13:23:27 520  	  SELECT
13:23:27 521  	    OFFER.ID,
13:23:27 522  	    OFFER.OFFER_STATUS_ID,
13:23:27 523  	    OFFER.ENTITLEMENT_DURATION,
13:23:27 524  	    OFFER.CREATED_BY,
13:23:27 525  	    OFFER.CREATE_DATE,
13:23:27 526  	    OFFER.UPDATED_BY,
13:23:27 527  	    OFFER.UPDATE_DATE,
13:23:27 528  	    OFFER_OFFER_CHAIN.NUM_RECURRENCES as "RECURRENCE_NUMBER"
13:23:27 529  	  FROM
13:23:27 530  	    OFFER_OFFER_CHAIN
13:23:27 531  	    INNER JOIN OFFER ON OFFER_OFFER_CHAIN.OFFER_ID = OFFER.ID
13:23:27 532  	  WHERE
13:23:27 533  	    OFFER_OFFER_CHAIN.OFFER_CHAIN_ID = var_offer_chain_id
13:23:27 534  	    AND OFFER_OFFER_CHAIN.INDEX_VALUE = var_next_offer_index;
13:23:27 535  	END IF;
13:23:27 536  
13:23:27 537  EXCEPTION
13:23:27 538  WHEN BAD_LICENSE_ID THEN
13:23:27 539  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 540  	  SPROC_NAME, 'No such license');
13:23:27 541  WHEN CAN_NOT_FIND_NEXT_OFFER THEN
13:23:27 542  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INTERNAL_ERROR,
13:23:27 543  	  SPROC_NAME, 'Could not find next offer', EXCEPTION_MESSAGE);
13:23:27 544  WHEN OTHERS THEN
13:23:27 545  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 546  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 547  END GET_NEXT_OFFER;
13:23:27 548  
13:23:27 549  /******************************************************************************/
13:23:27 550  
13:23:27 551  PROCEDURE GET_GROUP_ID_BY_LICENSE_ID (
13:23:27 552  	in_license_id IN NUMBER,
13:23:27 553  	out_group_id  OUT NUMBER
13:23:27 554  ) AS
13:23:27 555  -- VARIABLES
13:23:27 556  SPROC_NAME	  CONSTANT VARCHAR2(26) := 'GET_GROUP_ID_BY_LICENSE_ID';
13:23:27 557  var_subscription_id NUMBER;
13:23:27 558  var_group_id	  NUMBER;
13:23:27 559  -- EXCEPTIONS
13:23:27 560  BAD_LICENSE_ID	   EXCEPTION;
13:23:27 561  CAN_NOT_GET_GROUP_ID EXCEPTION;
13:23:27 562  BEGIN
13:23:27 563  
13:23:27 564  	-- Get subscription id
13:23:27 565  	BEGIN
13:23:27 566  	  SELECT
13:23:27 567  	    LICENSE.SUBSCRIPTION_ID into var_subscription_id
13:23:27 568  	  FROM
13:23:27 569  	    LICENSE
13:23:27 570  	  WHERE
13:23:27 571  	    LICENSE.ID = in_license_id;
13:23:27 572  	  EXCEPTION
13:23:27 573  	    WHEN NO_DATA_FOUND THEN
13:23:27 574  	      RAISE BAD_LICENSE_ID;
13:23:27 575  	END;
13:23:27 576  
13:23:27 577  	-- Get group id
13:23:27 578  	BEGIN
13:23:27 579  	  SELECT
13:23:27 580  	    ACCOUNT.GROUP_ID into var_group_id
13:23:27 581  	  FROM
13:23:27 582  	    SUBSCRIPTION
13:23:27 583  	    INNER JOIN ACCOUNT ON SUBSCRIPTION.ACCOUNT_ID = ACCOUNT.ID
13:23:27 584  	  WHERE
13:23:27 585  	    SUBSCRIPTION.ID = var_subscription_id;
13:23:27 586  	  EXCEPTION
13:23:27 587  	    WHEN NO_DATA_FOUND THEN
13:23:27 588  	      RAISE CAN_NOT_GET_GROUP_ID;
13:23:27 589  	END;
13:23:27 590  
13:23:27 591  	out_group_id := var_group_id;
13:23:27 592  
13:23:27 593  EXCEPTION
13:23:27 594  WHEN BAD_LICENSE_ID THEN
13:23:27 595  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 596  	  SPROC_NAME, 'No such license');
13:23:27 597  WHEN CAN_NOT_GET_GROUP_ID THEN
13:23:27 598  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 599  	  SPROC_NAME, 'Could not get group id');
13:23:27 600  WHEN OTHERS THEN
13:23:27 601  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 602  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 603  END GET_GROUP_ID_BY_LICENSE_ID;
13:23:27 604  
13:23:27 605  /******************************************************************************/
13:23:27 606  
13:23:27 607  PROCEDURE GET_NEED_ENTITLEMENTS_LICENSES (
13:23:27 608  	out_result_set OUT SYS_REFCURSOR
13:23:27 609  ) AS
13:23:27 610  BEGIN
13:23:27 611  	OPEN out_result_set FOR
13:23:27 612  SELECT * FROM
13:23:27 613  (
13:23:27 614  	SELECT
13:23:27 615  	  LICENSE.ID,
13:23:27 616  	  LICENSE.INVOICE_ID,
13:23:27 617  	  LICENSE.IS_EXTENSION,
13:23:27 618  	  LICENSE.START_DATE,
13:23:27 619  	  LICENSE.END_DATE,
13:23:27 620  	  LICENSE.ENTITLEMENT_END_DATE,
13:23:27 621  	  LICENSE.CURRENT_OFFER_INDEX,
13:23:27 622  	  LICENSE.CURRENT_OFFER_RECURR_NUM,
13:23:27 623  	  LICENSE.CREATE_DATE,
13:23:27 624  	  LICENSE.CREATED_BY,
13:23:27 625  	  LICENSE.LICENSE_STATUS_ID,
13:23:27 626  	  LICENSE.OFFER_ID,
13:23:27 627  	  LICENSE.SUBSCRIPTION_ID,
13:23:27 628  	  LICENSE.UPDATE_DATE,
13:23:27 629  	  LICENSE.UPDATED_BY,
13:23:27 630  	  LICENSE.NEEDS_ENTITLEMENTS
13:23:27 631  	FROM
13:23:27 632  	  LICENSE
13:23:27 633  	WHERE
13:23:27 634  	  LICENSE.NEEDS_ENTITLEMENTS = GLOBAL_CONSTANTS_V22.TRUE
13:23:27 635  	AND ROWNUM <= 5000
13:23:27 636  	ORDER BY dbms_random.value
13:23:27 637  ) WHERE
13:23:27 638  	ROWNUM <= 500;
13:23:27 639  
13:23:27 640  END GET_NEED_ENTITLEMENTS_LICENSES;
13:23:27 641  
13:23:27 642  /******************************************************************************/
13:23:27 643  
13:23:27 644  PROCEDURE UPDATE_NEED_ENTITLEMENTS_FLAG (
13:23:27 645  	in_license_id	      IN NUMBER,
13:23:27 646  	in_needs_entitlements IN NUMBER,
13:23:27 647  	in_updated_by	      IN VARCHAR2
13:23:27 648  ) AS
13:23:27 649  SPROC_NAME CONSTANT VARCHAR2(29) := 'UPDATE_NEED_ENTITLEMENTS_FLAG';
13:23:27 650  -- VARIABLES
13:23:27 651  temp_license_id NUMBER;
13:23:27 652  -- EXCEPTIONS
13:23:27 653  BAD_LICENSE_ID	     EXCEPTION;
13:23:27 654  BAD_ENTITLEMENTS_FLAG  EXCEPTION;
13:23:27 655  EXCEPTION_MESSAGE      VARCHAR2(1024);
13:23:27 656  BEGIN
13:23:27 657  
13:23:27 658  	IF in_needs_entitlements != GLOBAL_CONSTANTS_V22.TRUE
13:23:27 659  	  AND in_needs_entitlements != GLOBAL_CONSTANTS_V22.FALSE THEN
13:23:27 660  	  RAISE BAD_ENTITLEMENTS_FLAG;
13:23:27 661  	END IF;
13:23:27 662  
13:23:27 663  	BEGIN
13:23:27 664  	  SELECT
13:23:27 665  	    LICENSE.ID into temp_license_id
13:23:27 666  	  FROM
13:23:27 667  	    LICENSE
13:23:27 668  	  WHERE
13:23:27 669  	    LICENSE.ID = in_license_id;
13:23:27 670  	  EXCEPTION
13:23:27 671  	    WHEN NO_DATA_FOUND THEN
13:23:27 672  	      RAISE BAD_LICENSE_ID;
13:23:27 673  	END;
13:23:27 674  
13:23:27 675  	PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
13:23:27 676  	  in_license_id 	=> in_license_id,
13:23:27 677  	  in_needs_entitlements => in_needs_entitlements,
13:23:27 678  	  in_updated_by 	=> in_updated_by
13:23:27 679  	);
13:23:27 680  
13:23:27 681  EXCEPTION
13:23:27 682  WHEN BAD_ENTITLEMENTS_FLAG THEN
13:23:27 683  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.INVALID_PARAMETER,
13:23:27 684  	  SPROC_NAME, 'Bad entitlements flag value');
13:23:27 685  WHEN BAD_LICENSE_ID THEN
13:23:27 686  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 687  	  SPROC_NAME, 'No such license');
13:23:27 688  WHEN OTHERS THEN
13:23:27 689  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 690  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 691  END UPDATE_NEED_ENTITLEMENTS_FLAG;
13:23:27 692  
13:23:27 693  
13:23:27 694  /******************************************************************************/
13:23:27 695  
13:23:27 696  PROCEDURE GET_ENDED_GC_LICENSES (
13:23:27 697  	out_result_set		OUT SYS_REFCURSOR,
13:23:27 698  	in_hours_number 	IN NUMBER DEFAULT 14*24,
13:23:27 699  	in_num_rows		IN NUMBER DEFAULT 10000,
13:23:27 700  	in_process_name IN PROCESS_RETRY_THROTTLE.PROCESS_NAME%TYPE
13:23:27 701  ) AS
13:23:27 702  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_ENDED_GC_INVOICES';
13:23:27 703  var_days		NUMBER;
13:23:27 704  var_hours 	NUMBER;
13:23:27 705  var_time_interval INTERVAL DAY (3) TO SECOND;
13:23:27 706  BEGIN
13:23:27 707  	var_hours := mod(in_hours_number,24);
13:23:27 708  	var_days := (in_hours_number - var_hours) / 24;
13:23:27 709  	var_time_interval := var_days||' '||var_hours||':0:0';
13:23:27 710  	OPEN out_result_set FOR
13:23:27 711  SELECT * FROM
13:23:27 712  (
13:23:27 713  	SELECT
13:23:27 714  	  l.ID,
13:23:27 715  	  l.CREATE_DATE,
13:23:27 716  	  l.CREATED_BY,
13:23:27 717  	  l.CURRENT_OFFER_INDEX,
13:23:27 718  	  l.CURRENT_OFFER_RECURR_NUM,
13:23:27 719  	  l.END_DATE,
13:23:27 720  	  l.ENTITLEMENT_END_DATE,
13:23:27 721  	  l.INVOICE_ID,
13:23:27 722  	  l.IS_EXTENSION,
13:23:27 723  	  l.LICENSE_STATUS_ID,
13:23:27 724  	  l.OFFER_ID,
13:23:27 725  	  l.START_DATE,
13:23:27 726  	  l.SUBSCRIPTION_ID,
13:23:27 727  	  l.UPDATE_DATE,
13:23:27 728  	  l.UPDATED_BY
13:23:27 729  	FROM
13:23:27 730  	  GIFT_CERTIFICATE gc
13:23:27 731  	  INNER JOIN INVOICE i ON i.id = gc.PURCHASE_INVOICE_ID
13:23:27 732  	  INNER JOIN LICENSE l ON l.invoice_id = i.id
13:23:27 733  	  LEFT JOIN SUBSCRIPTION s ON s.id = l.subscription_id
13:23:27 734  	WHERE
13:23:27 735  	  l.LICENSE_STATUS_ID != GLOBAL_STATUSES_V22.LICENSE_ACTIVE
13:23:27 736  	  AND l.ENTITLEMENT_END_DATE <= (current_timestamp)
13:23:27 737  	  AND l.ENTITLEMENT_END_DATE > (current_timestamp - var_time_interval)
13:23:27 738  	  AND s.subscription_status_id = GLOBAL_STATUSES_V22.SUBSCRIPTION_CLOSED
13:23:27 739  	  AND NOT EXISTS (
13:23:27 740  	    SELECT NULL
13:23:27 741  	    FROM PROCESS_RETRY_THROTTLE
13:23:27 742  	    WHERE PROCESS_NAME = in_process_name
13:23:27 743  	      AND GENERIC_ID = l.ID
13:23:27 744  	  )
13:23:27 745  	  AND ROWNUM <= in_num_rows*10
13:23:27 746  	  ORDER BY dbms_random.value
13:23:27 747  ) WHERE
13:23:27 748  	  ROWNUM <= in_num_rows
13:23:27 749  	  GROUP BY SUBSCRIPTION_ID;
13:23:27 750  EXCEPTION
13:23:27 751  WHEN OTHERS THEN
13:23:27 752  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 753  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 754  END GET_ENDED_GC_LICENSES;
13:23:27 755  
13:23:27 756  PROCEDURE GET_LICENSE_BY_ID (
13:23:27 757  	in_license_id  IN NUMBER,
13:23:27 758  	out_result_set OUT SYS_REFCURSOR
13:23:27 759  ) AS
13:23:27 760  SPROC_NAME CONSTANT VARCHAR2(17) := 'GET_LICENSE_BY_ID';
13:23:27 761  -- VARIABLES
13:23:27 762  temp_license_id NUMBER;
13:23:27 763  -- EXCEPTIONS
13:23:27 764  BAD_LICENSE_ID EXCEPTION;
13:23:27 765  BEGIN
13:23:27 766  
13:23:27 767  	BEGIN
13:23:27 768  	  SELECT
13:23:27 769  	    l.id into temp_license_id
13:23:27 770  	  FROM
13:23:27 771  	    license l
13:23:27 772  	  WHERE
13:23:27 773  	    l.id = in_license_id;
13:23:27 774  	  EXCEPTION
13:23:27 775  	    WHEN NO_DATA_FOUND THEN
13:23:27 776  	      RAISE BAD_LICENSE_ID;
13:23:27 777  	END;
13:23:27 778  
13:23:27 779  	OPEN out_result_set FOR
13:23:27 780  	SELECT
13:23:27 781  	  l.id,
13:23:27 782  	  l.license_status_id,
13:23:27 783  	  l.subscription_id,
13:23:27 784  	  l.invoice_id,
13:23:27 785  	  l.offer_id,
13:23:27 786  	  l.start_date,
13:23:27 787  	  l.end_date,
13:23:27 788  	  l.entitlement_end_date,
13:23:27 789  	  l.is_extension,
13:23:27 790  	  l.create_date,
13:23:27 791  	  l.created_by,
13:23:27 792  	  l.update_date,
13:23:27 793  	  l.updated_by,
13:23:27 794  	  l.current_offer_index,
13:23:27 795  	  l.current_offer_recurr_num,
13:23:27 796  	  l.needs_entitlements
13:23:27 797  	FROM
13:23:27 798  	  LICENSE l
13:23:27 799  	WHERE
13:23:27 800  	  l.id = in_license_id;
13:23:27 801  
13:23:27 802  EXCEPTION
13:23:27 803  WHEN BAD_LICENSE_ID THEN
13:23:27 804  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.NOT_FOUND,
13:23:27 805  	  SPROC_NAME, 'No such license');
13:23:27 806  WHEN OTHERS THEN
13:23:27 807  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 808  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 809  END GET_LICENSE_BY_ID;
13:23:27 810  
13:23:27 811  PROCEDURE UP_LATEST_LICE_END_BY_SUBID (
13:23:27 812  	in_subscription_id IN NUMBER,
13:23:27 813  	in_end_date IN DATE,
13:23:27 814  	in_updated_by IN VARCHAR2
13:23:27 815  ) AS
13:23:27 816  SPROC_NAME CONSTANT VARCHAR2(32) := 'UP_LATEST_LICE_END_BY_SUBID';
13:23:27 817  EXCEPTION_MESSAGE      VARCHAR2(1024);
13:23:27 818  var_latest_lice NUMBER;
13:23:27 819  BEGIN
13:23:27 820  	SELECT max(id)
13:23:27 821  	INTO  var_latest_lice
13:23:27 822  	FROM LICENSE
13:23:27 823  	WHERE
13:23:27 824  	  subscription_id = in_subscription_id
13:23:27 825  	;
13:23:27 826  
13:23:27 827  	PROCS_LICENSE_CRU_V22.UPDATE_LICENSE(
13:23:27 828  	  in_license_id        => var_latest_lice,
13:23:27 829  	  in_updated_by        => in_updated_by,
13:23:27 830  	  in_needs_entitlements => GLOBAL_CONSTANTS_V22.TRUE,
13:23:27 831  	  in_end_date	       => in_end_date,
13:23:27 832  	  in_entitlement_end_date => in_end_date
13:23:27 833  	);
13:23:27 834  
13:23:27 835  EXCEPTION
13:23:27 836  WHEN NO_DATA_FOUND THEN
13:23:27 837  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 838  	  SPROC_NAME, 'No licenses from subscription', SQLERRM);
13:23:27 839  WHEN OTHERS THEN
13:23:27 840  	PROCS_COMMON_V22.THROW_EXCEPTION(APP_EXCEPTION_CODES_V22.UNKNOWN_ERROR,
13:23:27 841  	  SPROC_NAME, 'Unknown error', SQLERRM);
13:23:27 842  END UP_LATEST_LICE_END_BY_SUBID;
13:23:27 843  
13:23:27 844  PROCEDURE GET_GRACE_LICE_FOR_FINAL_TRANS (
13:23:27 845  	in_days_before_close	 IN NUMBER,
13:23:27 846  	in_num_licenses_to_fetch IN NUMBER,
13:23:27 847  	out_result_set		 OUT SYS_REFCURSOR
13:23:27 848  ) AS
13:23:27 849  SPROC_NAME CONSTANT VARCHAR2(32) := 'GET_GRACE_LICE_FOR_FINAL_TRANS';
13:23:27 850  BEGIN
13:23:27 851  	OPEN out_result_set FOR
13:23:27 852  	SELECT
13:23:27 853  	    *
13:23:27 854  	FROM
13:23:27 855  	    (
13:23:27 856  		SELECT
13:23:27 857  		    l.id
13:23:27 858  		FROM
13:23:27 859  		    license l
13:23:27 860  		JOIN
13:23:27 861  		    invoice i
13:23:27 862  		ON
13:23:27 863  		    l.invoice_id = i.id
13:23:27 864  		WHERE
13:23:27 865  		    i.invoice_status_id = GLOBAL_STATUSES_V22.INVOICE_OPEN
13:23:27 866  		AND l.license_status_id = GLOBAL_STATUSES_V22.LICENSE_IN_GRACE_PERIOD
13:23:27 867  		AND SYSDATE + in_days_before_close >= l.grace_end_date
13:23:27 868  		AND NOT EXISTS
13:23:27 869  		    (
13:23:27 870  			SELECT
13:23:27 871  			    1
13:23:27 872  			FROM
13:23:27 873  			    charge c
13:23:27 874  			WHERE
13:23:27 875  			    c.invoice_id = i.id
13:23:27 876  			AND c.charge_status_id = GLOBAL_STATUSES_V22.CHARGE_OPENED)
13:23:27 877  		AND rownum <= in_num_licenses_to_fetch * 10
13:23:27 878  		ORDER BY
13:23:27 879  		    dbms_random.value)
13:23:27 880  	WHERE
13:23:27 881  	    rownum <= in_num_licenses_to_fetch;
13:23:27 882  END GET_GRACE_LICE_FOR_FINAL_TRANS;
13:23:27 883  
13:23:27 884  End Procs_License_V22;
13:23:27 885  .
13:23:27 SQL> /

Package body created.

Elapsed: 00:00:01.73
13:23:29 SQL> 
13:23:29 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
13:23:29 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECPR@rac01.prd.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com
Cc: nytd_oracledba@nytimes.com

Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.prd.ewr1.nytimes.com
        DB Role: PRIMARY
        SID: ECPR
        Schema: core_owner
        Migration: 63.0-license-job-process-more-license
        SVN Revision: 13113
        Duration: 2 sec.
        DBA: sbao
        Service Request: https://jira.em.nytimes.com/browse/ORA-952