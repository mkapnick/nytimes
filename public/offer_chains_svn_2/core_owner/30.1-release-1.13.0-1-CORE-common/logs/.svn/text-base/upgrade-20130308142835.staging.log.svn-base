14:28:48 SQL> @/dbbackups/ECST/migrations/core_owner/30.1-release-1.13.0-1-CORE-common/upgrade.sql
14:28:48 SQL> --------------------------------------------------------------------------------
14:28:48 SQL> -- DDL for package APP_EXCEPTION_CODES
14:28:48 SQL> --------------------------------------------------------------------------------
14:28:48 SQL> 
14:28:48 SQL> CREATE OR REPLACE PACKAGE "APP_EXCEPTION_CODES_V18"
14:28:48   2  AS
14:28:48   3  -- norlov 09.09 : current_timestamp replaced by sysdate
14:28:48   4  -- in comparisons (according to #38816)
14:28:48   5  -- 2010-09-13: according to #38860, current_timestamp calls replaced by SYSDATE variable
14:28:48   6  -- to use the same date in whole procedure, also single current_timestamp calls
14:28:48   7  -- replaced by SYSDATE calls
14:28:48   8  
14:28:48   9  
14:28:48  10  	-- EXCEPTION CODES
14:28:48  11  	UNKNOWN_ERROR	  CONSTANT NUMBER := -20001;
14:28:48  12  	NOT_FOUND	  CONSTANT NUMBER := -20002;
14:28:48  13  	STATE_ERROR	  CONSTANT NUMBER := -20003;
14:28:48  14  	DUPLICATE_ERROR   CONSTANT NUMBER := -20004;
14:28:48  15  	HISTORY_ERROR	  CONSTANT NUMBER := -20005;
14:28:48  16  	INVALID_PARAMETER CONSTANT NUMBER := -20006;
14:28:48  17  	INTERNAL_ERROR	  CONSTANT NUMBER := -20007;
14:28:48  18  	CONFLICT_ERROR	  CONSTANT NUMBER := -20008;
14:28:48  19  END APP_EXCEPTION_CODES_V18;
14:28:48  20  .
14:28:48 SQL> /

Package created.

Elapsed: 00:00:00.33
14:28:49 SQL> 
14:28:49 SQL> 
14:28:49 SQL> 
14:28:49 SQL> --------------------------------------------------------------------------------
14:28:49 SQL> -- DDL for package GLOBAL_CONSTANTS
14:28:49 SQL> --------------------------------------------------------------------------------
14:28:49 SQL> 
14:28:49 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_CONSTANTS_V18" AS
14:28:49   2  
14:28:49   3  TRUE  CONSTANT NUMBER := 1;
14:28:49   4  FALSE CONSTANT NUMBER := 0;
14:28:49   5  
14:28:49   6  INFINITY CONSTANT NUMBER := -1;
14:28:49   7  
14:28:49   8  ONE_DAY_INTERVAL	 CONSTANT INTERVAL DAY TO SECOND := INTERVAL '1' DAY;
14:28:49   9  ONE_MONTH_INTERVAL CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' MONTH;
14:28:49  10  ONE_YEAR_INTERVAL   CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' YEAR;
14:28:49  11  
14:28:49  12  -- Exception delimeter
14:28:49  13  EXCEPTION_DELIMETER CONSTANT VARCHAR2(1) := chr(10);
14:28:49  14  
14:28:49  15  -- Number of days when core should return all money
14:28:49  16  OFFER_START_GRACE_PERIOD CONSTANT NUMBER := 7;
14:28:49  17  
14:28:49  18  -- NUmber of days when core should not return any money
14:28:49  19  OFFER_END_GRACE_PERIOD   CONSTANT NUMBER := 7;
14:28:49  20  
14:28:49  21  -- OFFER CHAIN: is refundable META DATTA RULE
14:28:49  22  OFFER_CHAIN_IS_REFUNDABLE   CONSTANT NUMBER := 1;
14:28:49  23  OFFER_CHAIN_REFUNDABLE_RULE CONSTANT VARCHAR2(10) := 'REFUNDABLE';
14:28:49  24  
14:28:49  25  -- OFFER CHAIN REFUNDABLE RULES
14:28:49  26  OFFER_CHAIN_FULL_REFUND	  CONSTANT VARCHAR2(22) := 'FULL_REFUND_DAYS_LIMIT';
14:28:49  27  OFFER_CHAIN_PRORATED_REFUND CONSTANT VARCHAR2(26) := 'PRORATED_REFUND_DAYS_LIMIT';
14:28:49  28  
14:28:49  29  -- norlov: name of the OC eligibility
14:28:49  30  GIFT_CERTIFICATE_REQUIRED CONSTANT VARCHAR2(25) := 'gift certificate required';
14:28:49  31  
14:28:49  32  -- norlov: flag for set elibility
14:28:49  33  ELIGIBILITY_FLAG_SET CONSTANT VARCHAR2(1) := '1';
14:28:49  34  
14:28:49  35  -- norlov: name of OC metadata
14:28:49  36  REDEMPTION_OC_ID CONSTANT VARCHAR2(25) := 'redemption offer chain id';
14:28:49  37  
14:28:49  38  -- norlov: name of the OC eligibility
14:28:49  39  MAX_CONCURRENT_SUBS CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
14:28:49  40  
14:28:49  41  -- norlov: 'unlimited' value for max concurrent subscription number
14:28:49  42  MAX_CONCURRENT_SUBS_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
14:28:49  43  
14:28:49  44  -- 'unlimited' value for max concurrent products number
14:28:49  45  MAX_CONSURRENT_PRD_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
14:28:49  46  
14:28:49  47  -- UPGRADABLE_OFFER_CHAIN_ID
14:28:49  48  OCMD_UPGRADABLE_OFFER_CHAIN_ID CONSTANT VARCHAR(25) := 'UPGRADABLE_OFFER_CHAIN_ID';
14:28:49  49  
14:28:49  50  -- Max number of records that should be return
14:28:49  51  MAX_RETURN_COUNT NUMBER := 1000;
14:28:49  52  
14:28:49  53  -- Share end date for non-group-pass group accounts
14:28:49  54  MAX_DATE CONSTANT DATE := TO_DATE('12/31/9999', 'MM/DD/YYYY');
14:28:49  55  
14:28:49  56  END GLOBAL_CONSTANTS_V18;
14:28:49  57  .
14:28:49 SQL> /

Package created.

Elapsed: 00:00:00.10
14:28:49 SQL> 
14:28:49 SQL> 
14:28:49 SQL> 
14:28:49 SQL> --------------------------------------------------------------------------------
14:28:49 SQL> -- DDL for package GLOBAL_ENUMS
14:28:49 SQL> --------------------------------------------------------------------------------
14:28:49 SQL> 
14:28:49 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_ENUMS_V18" AS
14:28:49   2  
14:28:49   3  ----
14:28:49   4  -- CREDIT CARD TYPES
14:28:49   5  
14:28:49   6  CREDIT_CARD_AMEX	      CONSTANT NUMBER := 1;
14:28:49   7  CREDIT_CARD_VISA	      CONSTANT NUMBER := 2;
14:28:49   8  CREDIT_CARD_MASTER_CARD CONSTANT NUMBER := 3;
14:28:49   9  CREDIT_CARD_DISCOVER    CONSTANT NUMBER := 4;
14:28:49  10  
14:28:49  11  ----
14:28:49  12  -- INSTRUMENT TYPE
14:28:49  13  
14:28:49  14  INSTRUMENT_CREDIT_CARD	   CONSTANT NUMBER := 1;
14:28:49  15  INSTRUMENT_PAYPAL 	   CONSTANT NUMBER := 2;
14:28:49  16  INSTRUMENT_GIFT_CERTIFICATE  CONSTANT NUMBER := 3;
14:28:49  17  INSTRUMENT_ZCI_INSTRUMENT    CONSTANT NUMBER := 4;
14:28:49  18  
14:28:49  19  ----
14:28:49  20  -- SYSTEM ACTIVITY REASONS
14:28:49  21  
14:28:49  22  SAC_SYSTEM_APPLIED_RULE CONSTANT NUMBER := 1;
14:28:49  23  
14:28:49  24  ----
14:28:49  25  -- GIFT CERTIFICATES TYPE
14:28:49  26  
14:28:49  27  GSTYPE_GSTYPE1 CONSTANT NUMBER := 1;
14:28:49  28  GSTYPE_GSTYPE2 CONSTANT NUMBER := 2;
14:28:49  29  
14:28:49  30  ----
14:28:49  31  -- SYSTEM CATEGORY
14:28:49  32  
14:28:49  33  SYSTEM_CATEGORY_LIVE CONSTANT NUMBER := 1;
14:28:49  34  SYSTEM_CATEGORY_TEST CONSTANT NUMBER := 2;
14:28:49  35  
14:28:49  36  ----
14:28:49  37  -- OFFER_RECURRENCES
14:28:49  38  
14:28:49  39  OFFER_REC_INFINITY CONSTANT NUMBER := -1;
14:28:49  40  
14:28:49  41  ----
14:28:49  42  -- TAX JURISDICTION LEVELS
14:28:49  43  -- We need only international right now
14:28:49  44  
14:28:49  45  JURIS_INTERNATIONAL CONSTANT NUMBER := 5;
14:28:49  46  
14:28:49  47  ----
14:28:49  48  -- TAX TYPES
14:28:49  49  
14:28:49  50  TAX_TYPE_SALES CONSTANT NUMBER := 1;
14:28:49  51  TAX_TYPE_VAT   CONSTANT NUMBER := 2;
14:28:49  52  
14:28:49  53  END GLOBAL_ENUMS_V18;
14:28:49  54  .
14:28:49 SQL> /

Package created.

Elapsed: 00:00:00.02
14:28:49 SQL> 
14:28:49 SQL> 
14:28:49 SQL> 
14:28:49 SQL> --------------------------------------------------------------------------------
14:28:49 SQL> -- DDL for package GLOBAL_STATUSES
14:28:49 SQL> --------------------------------------------------------------------------------
14:28:49 SQL> 
14:28:49 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_STATUSES_V18" AS
14:28:49   2  
14:28:49   3  REAL_TIME_CANCEL_REASON CONSTANT NUMBER := 41;
14:28:49   4  
14:28:49   5  ----
14:28:49   6  -- ACCOUNT STATUSES
14:28:49   7  
14:28:49   8  ACCOUNT_ACTIVE   CONSTANT NUMBER := 1;
14:28:49   9  ACCOUNT_FROZEN   CONSTANT NUMBER := 2;
14:28:49  10  ACCOUNT_DISABLED CONSTANT NUMBER := 3;
14:28:49  11  
14:28:49  12  ----
14:28:49  13  -- SUBSCRIPTION STATUSES
14:28:49  14  
14:28:49  15  SUBSCRIPTION_ACTIVE	   CONSTANT NUMBER := 1;
14:28:49  16  SUBSCRIPTION_SUSPENDED	   CONSTANT NUMBER := 2;
14:28:49  17  SUBSCRIPTION_CANCELED	   CONSTANT NUMBER := 3;
14:28:49  18  SUBSCRIPTION_CLOSED	   CONSTANT NUMBER := 4;
14:28:49  19  SUBSCRIPTION_FALSE_START	   CONSTANT NUMBER := 5;
14:28:49  20  SUBSCRIPTION_IN_GRACE_PERIOD CONSTANT NUMBER := 6;
14:28:49  21  
14:28:49  22  ----
14:28:49  23  -- CREDIT_CARD STATUSES
14:28:49  24  
14:28:49  25  CREDIT_CARD_ACTIVE   CONSTANT NUMBER := 1;
14:28:49  26  CREDIT_CARD_INVALID  CONSTANT NUMBER := 2; -- WAS INACTIVE
14:28:49  27  CREDIT_CARD_DISABLED CONSTANT NUMBER := 3; -- WAS FROZEN
14:28:49  28  CREDIT_CARD_EXPIRED  CONSTANT NUMBER := 4;
14:28:49  29  
14:28:49  30  ----
14:28:49  31  -- PAYPAL STATUSES
14:28:49  32  
14:28:49  33  PAYPAL_ACTIVE   CONSTANT NUMBER := 1;
14:28:49  34  PAYPAL_INACTIVE CONSTANT NUMBER := 2;
14:28:49  35  PAYPAL_FROZEN   CONSTANT NUMBER := 3;
14:28:49  36  
14:28:49  37  ----
14:28:49  38  -- GIFT_CERTIFICATE STATUSES
14:28:49  39  
14:28:49  40  GIFT_CERTIFICATE_ACTIVE	 CONSTANT NUMBER := 1;
14:28:49  41  GIFT_CERTIFICATE_FINALIZED CONSTANT NUMBER := 2;
14:28:49  42  GIFT_CERTIFICATE_REFUNDED  CONSTANT NUMBER := 3;
14:28:49  43  
14:28:49  44  ----
14:28:49  45  -- TRANSACTION STATUSES
14:28:49  46  
14:28:49  47  TRANSACTION_PENDING	     CONSTANT NUMBER := 1;
14:28:49  48  TRANSACTION_CLOSED	     CONSTANT NUMBER := 2;
14:28:49  49  TRANSACTION_CHARGEBACK	     CONSTANT NUMBER := 3;
14:28:49  50  TRANSACTION_PREPARE	     CONSTANT NUMBER := 1;
14:28:49  51  TRANSACTION_DECLINED	     CONSTANT NUMBER := 7;
14:28:49  52  
14:28:49  53  ----
14:28:49  54  -- TRANSACTION_ATTEMPT_STATUS
14:28:49  55  TRANS_ATTEMPT_IN_PROGRESS CONSTANT NUMBER := 1;
14:28:49  56  TRANS_ATTEMPT_SUCCESS	CONSTANT NUMBER := 2;
14:28:49  57  TRANS_ATTEMPT_FAILED	CONSTANT NUMBER := 3;
14:28:49  58  
14:28:49  59  ----
14:28:49  60  -- PRODUCT STATUSES
14:28:49  61  
14:28:49  62  PRODUCT_ACTIVE	CONSTANT NUMBER := 1;
14:28:49  63  PRODUCT_INACTIVE	CONSTANT NUMBER := 2;
14:28:49  64  PRODUCT_DISABLED	CONSTANT NUMBER := 3;
14:28:49  65  
14:28:49  66  ----
14:28:49  67  -- LICENSE STATUSES
14:28:49  68  
14:28:49  69  LICENSE_CLOSED CONSTANT NUMBER := 1;
14:28:49  70  LICENSE_ACTIVE CONSTANT NUMBER := 2;
14:28:49  71  LICENSE_IN_GRACE_PERIOD CONSTANT NUMBER := 4;
14:28:49  72  
14:28:49  73  ----
14:28:49  74  -- INVOICE STATUSES
14:28:49  75  
14:28:49  76  INVOICE_OPEN		  CONSTANT NUMBER := 1; -- IN SPECS INVOICE_PENDING
14:28:49  77  INVOICE_CLOSED		  CONSTANT NUMBER := 3; -- IN SPECS INVOICE_PAID
14:28:49  78  
14:28:49  79  
14:28:49  80  ----
14:28:49  81  -- CHARGE STATUSES
14:28:49  82  
14:28:49  83  CHARGE_OPENED    CONSTANT NUMBER := 1;
14:28:49  84  CHARGE_PROCESSED CONSTANT NUMBER := 2;
14:28:49  85  CHARGE_CANCELED  CONSTANT NUMBER := 3;
14:28:49  86  
14:28:49  87  ----
14:28:49  88  -- OFFER STATUSES
14:28:49  89  
14:28:49  90  OFFER_ACTIVE   CONSTANT NUMBER := 1;
14:28:49  91  OFFER_INACTIVE CONSTANT NUMBER := 2;
14:28:49  92  OFFER_DISABLED CONSTANT NUMBER := 3;
14:28:49  93  
14:28:49  94  ----
14:28:49  95  -- OFFER_CHAIN STATUSES
14:28:49  96  
14:28:49  97  OFFER_CHAIN_ACTIVE   CONSTANT NUMBER := 1;
14:28:49  98  OFFER_CHAIN_INACTIVE CONSTANT NUMBER := 2;
14:28:49  99  OFFER_CHAIN_DISABLED CONSTANT NUMBER := 3;
14:28:49 100  
14:28:49 101  ----
14:28:49 102  -- ZERO_CHARGE_INSTRUMENT STATUSES
14:28:49 103  
14:28:49 104  ZERO_CHARGE_INSTR_ACTIVE CONSTANT NUMBER := 1;
14:28:49 105  ZERO_CHARGE_INSTR_DISABLED CONSTANT NUMBER := 2;
14:28:49 106  
14:28:49 107  ----
14:28:49 108  -- SUBSCRIPTION_CANCELATION_REASONS
14:28:49 109  
14:28:49 110  SUBSCR_CANC_REASON_ACTIVE CONSTANT NUMBER := 1;
14:28:49 111  SUBSCR_CANC_REASON_INACTIVE CONSTANT NUMBER := 2;
14:28:49 112  SUBSCR_CANC_REASON_INT_ONLY CONSTANT NUMBER := 3;
14:28:49 113  
14:28:49 114  GROUP_ACC_IP_RNG_ACTIVE CONSTANT NUMBER := 1;
14:28:49 115  GROUP_ACC_IP_RNG_INACTIVE CONSTANT NUMBER := 2;
14:28:49 116  
14:28:49 117  GROUP_ACC_EMAIL_DOMAIN_ACT CONSTANT NUMBER := 1;
14:28:49 118  GROUP_ACC_EMAIL_DOMAIN_INACT CONSTANT NUMBER := 0;
14:28:49 119  
14:28:49 120  END GLOBAL_STATUSES_V18;
14:28:49 121  .
14:28:49 SQL> /

Package created.

Elapsed: 00:00:00.11
14:28:49 SQL> 
14:28:49 SQL> 
14:28:49 SQL> 
14:28:49 SQL> --------------------------------------------------------------------------------
14:28:49 SQL> -- DDL for package NOTIFICATION_STATUSES
14:28:49 SQL> --------------------------------------------------------------------------------
14:28:49 SQL> 
14:28:49 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V18" AS
14:28:49   2  
14:28:49   3  ----
14:28:49   4  -- NOTIFICATION STATUSES
14:28:49   5  
14:28:49   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
14:28:49   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
14:28:49   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
14:28:49   9  
14:28:49  10  END NOTIFICATION_STATUSES_V18;
14:28:49  11  .
14:28:49 SQL> /

Package created.

Elapsed: 00:00:00.02
14:28:49 SQL> 
14:28:49 SQL> 
14:28:49 SQL> 
14:28:49 SQL> --------------------------------------------------------------------------------
14:28:49 SQL> -- DDL for package PROCS_COMMON
14:28:49 SQL> --------------------------------------------------------------------------------
14:28:49 SQL> 
14:28:49 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V18" AS
14:28:49   2  
14:28:49   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
14:28:49   4  	in_duration IN VARCHAR2,
14:28:49   5  	in_start_date IN DATE
14:28:49   6  ) RETURN DATE;
14:28:49   7  
14:28:49   8  PROCEDURE ISO8601DURATION_TO_INTERVALS(
14:28:49   9  /*
14:28:49  10  Throws exceptions:
14:28:49  11  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:28:49  12  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:28:49  13  */
14:28:49  14  	in_duration IN	VARCHAR2,
14:28:49  15  	out_years   OUT NUMBER,
14:28:49  16  	out_months  OUT NUMBER,
14:28:49  17  	out_days    OUT NUMBER
14:28:49  18  );
14:28:49  19  
14:28:49  20  FUNCTION NORMALIZE_DATE(
14:28:49  21   in_date IN DATE
14:28:49  22  ) RETURN DATE;
14:28:49  23  
14:28:49  24  FUNCTION GENERATE_EXCEPTION_MESSAGE(
14:28:49  25  	in_sproc_name	    IN VARCHAR2,
14:28:49  26  	in_error_message    IN VARCHAR2,
14:28:49  27  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:28:49  28  ) RETURN VARCHAR2;
14:28:49  29  
14:28:49  30  PROCEDURE THROW_EXCEPTION(
14:28:49  31  	in_exception_code   IN NUMBER,
14:28:49  32  	in_sproc_name	    IN VARCHAR2,
14:28:49  33  	in_error_message    IN VARCHAR2,
14:28:49  34  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:28:49  35  );
14:28:49  36  
14:28:49  37  FUNCTION ROUND_10_6_TO_10_2 (
14:28:49  38  	in_number NUMBER
14:28:49  39  ) RETURN NUMBER;
14:28:49  40  
14:28:49  41  END PROCS_COMMON_V18;
14:28:49  42  .
14:28:49 SQL> /

Package created.

Elapsed: 00:00:00.23
14:28:49 SQL> 
14:28:49 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V18" AS
14:28:49   2  
14:28:49   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
14:28:49   4  	in_duration IN VARCHAR2,
14:28:49   5  	in_start_date IN DATE
14:28:49   6  ) RETURN DATE AS
14:28:49   7  	var_end_date DATE;
14:28:49   8  	var_years NUMBER;
14:28:49   9  	var_months NUMBER;
14:28:49  10  	var_days NUMBER;
14:28:49  11  	var_ym_interval INTERVAL YEAR TO MONTH;
14:28:49  12  	var_ds_interval INTERVAL DAY(3) TO SECOND;
14:28:49  13  BEGIN
14:28:49  14  	PROCS_COMMON_V18.ISO8601DURATION_TO_INTERVALS(in_duration, var_years, var_months, var_days);
14:28:49  15  	var_ym_interval := var_years || '-' || var_months;
14:28:49  16  	var_ds_interval := var_days || ' 0:0:0';
14:28:49  17  
14:28:49  18  	var_end_date := in_start_date + var_ym_interval + var_ds_interval;
14:28:49  19  	RETURN var_end_date;
14:28:49  20  END ADD_ISO8601DURATION_TO_DATE;
14:28:49  21  
14:28:49  22  PROCEDURE ISO8601DURATION_TO_INTERVALS(
14:28:49  23  /*
14:28:49  24  Throws exceptions:
14:28:49  25  APP_EXCEPTION_CODES_V18.INTERNAL_ERROR
14:28:49  26  APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR
14:28:49  27  */
14:28:49  28  	in_duration IN	VARCHAR2,
14:28:49  29  	out_years   OUT NUMBER,
14:28:49  30  	out_months  OUT NUMBER,
14:28:49  31  	out_days    OUT NUMBER
14:28:49  32  ) AS
14:28:49  33  SPROC_NAME	  CONSTANT VARCHAR2(28) := 'ISO8601DURATION_TO_INTERVALS';
14:28:49  34  -- VARIABLES
14:28:49  35  var_checking_status NUMBER;
14:28:49  36  temp_duration	  VARCHAR2(29);
14:28:49  37  var_is_t_founded	  NUMBER;
14:28:49  38  
14:28:49  39  var_date_duration VARCHAR2(29);
14:28:49  40  var_time_duration VARCHAR2(29);
14:28:49  41  
14:28:49  42  var_years   VARCHAR2(4);
14:28:49  43  var_monthes VARCHAR2(4);
14:28:49  44  var_days	  VARCHAR2(4);
14:28:49  45  var_hours   VARCHAR2(4);
14:28:49  46  var_minutes VARCHAR2(4);
14:28:49  47  var_seconds VARCHAR2(4);
14:28:49  48  
14:28:49  49  -- EXCEPTIONS
14:28:49  50  BAD_ISO_FORMAT EXCEPTION;
14:28:49  51  BEGIN
14:28:49  52  
14:28:49  53  	var_years   := '0';
14:28:49  54  	var_monthes := '0';
14:28:49  55  	var_days    := '0';
14:28:49  56  	var_hours   := '0';
14:28:49  57  	var_minutes := '0';
14:28:49  58  	var_seconds := '0';
14:28:49  59  
14:28:49  60  	SELECT
14:28:49  61  	  COUNT(*) into var_checking_status
14:28:49  62  	FROM
14:28:49  63  	  DUAL
14:28:49  64  	WHERE
14:28:49  65  	  REGEXP_LIKE(in_duration, '^P')
14:28:49  66  	  AND ROWNUM <= 1;
14:28:49  67  
14:28:49  68  	IF var_checking_status = 0 THEN
14:28:49  69  	  RAISE BAD_ISO_FORMAT;
14:28:49  70  	END IF;
14:28:49  71  
14:28:49  72  	SELECT
14:28:49  73  	  SUBSTR(in_duration, 2) into temp_duration
14:28:49  74  	FROM DUAL
14:28:49  75  	WHERE ROWNUM <= 1;
14:28:49  76  
14:28:49  77  	var_is_t_founded := INSTR(temp_duration, 'T');
14:28:49  78  
14:28:49  79  	IF var_is_t_founded > 1 OR var_is_t_founded = 0 THEN
14:28:49  80  	  -- RESOLVING DATE FROM ISO STRING
14:28:49  81  	  IF var_is_t_founded != 0 THEN
14:28:49  82  	    var_date_duration := SUBSTR(temp_duration, 1, var_is_t_founded - 1);
14:28:49  83  	  ELSE
14:28:49  84  	    var_date_duration := temp_duration;
14:28:49  85  	  END IF;
14:28:49  86  
14:28:49  87  	  SELECT
14:28:49  88  	    COUNT(*) into var_checking_status
14:28:49  89  	  FROM
14:28:49  90  	    DUAL
14:28:49  91  	  WHERE
14:28:49  92  	    REGEXP_LIKE(var_date_duration, '^(\d{1,3}Y){0,1}(\d{1,3}M){0,1}(\d{1,3}D){0,1}$')
14:28:49  93  	    AND ROWNUM <= 1;
14:28:49  94  
14:28:49  95  	  IF var_checking_status = 0 THEN
14:28:49  96  	    RAISE BAD_ISO_FORMAT;
14:28:49  97  	  END IF;
14:28:49  98  
14:28:49  99  	  IF INSTR(var_date_duration, 'Y') != 0 THEN
14:28:49 100  	    SELECT
14:28:49 101  	      REGEXP_SUBSTR(var_date_duration, '\d+Y') into var_years
14:28:49 102  	    FROM
14:28:49 103  	      DUAL;
14:28:49 104  	    var_years := SUBSTR(var_years, 1, LENGTH(var_years) - 1);
14:28:49 105  	  END IF;
14:28:49 106  
14:28:49 107  	  IF INSTR(var_date_duration, 'M') != 0 THEN
14:28:49 108  	    SELECT
14:28:49 109  	      REGEXP_SUBSTR(var_date_duration, '\d+M') into var_monthes
14:28:49 110  	    FROM
14:28:49 111  	      DUAL;
14:28:49 112  	    var_monthes := SUBSTR(var_monthes, 1, LENGTH(var_monthes) - 1);
14:28:49 113  	  END IF;
14:28:49 114  
14:28:49 115  	  IF INSTR(var_date_duration, 'D') != 0 THEN
14:28:49 116  	    SELECT
14:28:49 117  	      REGEXP_SUBSTR(var_date_duration, '\d+D') into var_days
14:28:49 118  	    FROM
14:28:49 119  	      DUAL;
14:28:49 120  	    var_days := SUBSTR(var_days, 1, LENGTH(var_days) - 1);
14:28:49 121  	  END IF;
14:28:49 122  	END IF;
14:28:49 123  
14:28:49 124  	IF (var_is_t_founded > 0) THEN
14:28:49 125  	  -- RESOLVING TIME FROM ISO STRING
14:28:49 126  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded + 1);
14:28:49 127  
14:28:49 128  	  SELECT
14:28:49 129  	    COUNT(*) into var_checking_status
14:28:49 130  	  FROM
14:28:49 131  	    DUAL
14:28:49 132  	  WHERE
14:28:49 133  	    REGEXP_LIKE(var_time_duration, '^(\d{1,3}H){0,1}(\d{1,3}M){0,1}(\d{1,3}S){0,1}$')
14:28:49 134  	    AND ROWNUM <= 1;
14:28:49 135  
14:28:49 136  	  IF var_checking_status = 0 THEN
14:28:49 137  	    RAISE BAD_ISO_FORMAT;
14:28:49 138  	  END IF;
14:28:49 139  
14:28:49 140  	  IF INSTR(var_time_duration, 'H') != 0 THEN
14:28:49 141  	    SELECT
14:28:49 142  	      REGEXP_SUBSTR(var_time_duration, '\d+H') into var_hours
14:28:49 143  	    FROM
14:28:49 144  	      DUAL;
14:28:49 145  	    var_hours := SUBSTR(var_hours, 1, LENGTH(var_hours) - 1);
14:28:49 146  	  END IF;
14:28:49 147  
14:28:49 148  	  IF INSTR(var_time_duration, 'M') != 0 THEN
14:28:49 149  	    SELECT
14:28:49 150  	      REGEXP_SUBSTR(var_time_duration, '\d+M') into var_minutes
14:28:49 151  	    FROM
14:28:49 152  	      DUAL;
14:28:49 153  	    var_minutes := SUBSTR(var_minutes, 1, LENGTH(var_minutes) - 1);
14:28:49 154  	  END IF;
14:28:49 155  
14:28:49 156  	  IF INSTR(var_time_duration, 'S') != 0 THEN
14:28:49 157  	    SELECT
14:28:49 158  	      REGEXP_SUBSTR(var_time_duration, '\d+S') into var_seconds
14:28:49 159  	    FROM
14:28:49 160  	      DUAL;
14:28:49 161  	    var_seconds := SUBSTR(var_seconds, 1, LENGTH(var_seconds) - 1);
14:28:49 162  	  END IF;
14:28:49 163  
14:28:49 164  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded);
14:28:49 165  	END IF;
14:28:49 166  
14:28:49 167  	out_years  := var_years;
14:28:49 168  	out_months := var_monthes;
14:28:49 169  	out_days   := var_days;
14:28:49 170  
14:28:49 171  EXCEPTION
14:28:49 172  WHEN BAD_ISO_FORMAT THEN
14:28:49 173  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.INTERNAL_ERROR,
14:28:49 174  	  SPROC_NAME, 'Bad date format');
14:28:49 175  WHEN OTHERS THEN
14:28:49 176  	PROCS_COMMON_V18.THROW_EXCEPTION(APP_EXCEPTION_CODES_V18.UNKNOWN_ERROR,
14:28:49 177  	  SPROC_NAME, 'Unknown error', SQLERRM);
14:28:49 178  END ISO8601DURATION_TO_INTERVALS;
14:28:49 179  
14:28:49 180  /******************************************************************************/
14:28:49 181  
14:28:49 182  FUNCTION NORMALIZE_DATE(
14:28:49 183   in_date IN DATE
14:28:49 184  ) RETURN DATE AS
14:28:49 185  -- VARIABLES
14:28:49 186  var_normalized_date DATE;
14:28:49 187  BEGIN
14:28:49 188  	var_normalized_date := TRUNC(in_date);
14:28:49 189  	RETURN var_normalized_date;
14:28:49 190  END NORMALIZE_DATE;
14:28:49 191  
14:28:49 192  /******************************************************************************/
14:28:49 193  
14:28:49 194  FUNCTION GENERATE_EXCEPTION_MESSAGE(
14:28:49 195  	in_sproc_name	    IN VARCHAR2,
14:28:49 196  	in_error_message    IN VARCHAR2,
14:28:49 197  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:28:49 198  ) RETURN VARCHAR2 AS
14:28:49 199  BEGIN
14:28:49 200  	IF in_error_stacktrace IS NOT NULL THEN
14:28:49 201  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || GLOBAL_CONSTANTS_V18.EXCEPTION_DELIMETER || in_error_stacktrace;
14:28:49 202  	END IF;
14:28:49 203  	RETURN
14:28:49 204  	  in_sproc_name || ': ' || in_error_message;
14:28:49 205  END GENERATE_EXCEPTION_MESSAGE;
14:28:49 206  
14:28:49 207  /******************************************************************************/
14:28:49 208  
14:28:49 209  PROCEDURE THROW_EXCEPTION(
14:28:49 210  	in_exception_code   IN NUMBER,
14:28:49 211  	in_sproc_name	    IN VARCHAR2,
14:28:49 212  	in_error_message    IN VARCHAR2,
14:28:49 213  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
14:28:49 214  ) AS
14:28:49 215  BEGIN
14:28:49 216  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
14:28:49 217  END;
14:28:49 218  
14:28:49 219  FUNCTION ROUND_10_6_TO_10_2 (
14:28:49 220  	in_number NUMBER
14:28:49 221  ) RETURN NUMBER AS
14:28:49 222  v_result NUMBER(10,2);
14:28:49 223  BEGIN
14:28:49 224  	v_result := in_number;
14:28:49 225  	return v_result;
14:28:49 226  END;
14:28:49 227  
14:28:49 228  END PROCS_COMMON_V18;
14:28:49 229  .
14:28:49 SQL> /

Package body created.

Elapsed: 00:00:00.38
14:28:50 SQL> 
14:28:50 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V18 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.02
14:28:50 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V18 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:28:50 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V18 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:28:50 SQL> 
14:28:50 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V18 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:28:50 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V18 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:28:50 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V18 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:28:50 SQL> 
14:28:50 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V18 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:28:50 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V18 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.01
14:28:50 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V18 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
14:28:50 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
14:28:50 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECST@rac01.stg.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com
Cc: nytd_oracledba@nytimes.com

Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.stg.ewr1.nytimes.com
        DB Role: PRIMARY
        SID: ECST
        Schema: core_owner
        Migration: 30.1-release-1.13.0-1-CORE-common
        SVN Revision: 11555
        Duration: 1 sec.
        DBA: sbao
        Service Request: https://jira.em.nytimes.com/browse/ORA-536