15:14:34 SQL> @/dbbackups/ECST/migrations/core_owner/41.0-release-1.13.2-1-CORE-common/upgrade.sql
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> -- DDL for package APP_EXCEPTION_CODES
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> 
15:14:34 SQL> CREATE OR REPLACE PACKAGE "APP_EXCEPTION_CODES_V19"
15:14:34   2  AS
15:14:34   3  -- norlov 09.09 : current_timestamp replaced by sysdate
15:14:34   4  -- in comparisons (according to #38816)
15:14:34   5  -- 2010-09-13: according to #38860, current_timestamp calls replaced by SYSDATE variable
15:14:34   6  -- to use the same date in whole procedure, also single current_timestamp calls
15:14:34   7  -- replaced by SYSDATE calls
15:14:34   8  
15:14:34   9  
15:14:34  10  	-- EXCEPTION CODES
15:14:34  11  	UNKNOWN_ERROR	  CONSTANT NUMBER := -20001;
15:14:34  12  	NOT_FOUND	  CONSTANT NUMBER := -20002;
15:14:34  13  	STATE_ERROR	  CONSTANT NUMBER := -20003;
15:14:34  14  	DUPLICATE_ERROR   CONSTANT NUMBER := -20004;
15:14:34  15  	HISTORY_ERROR	  CONSTANT NUMBER := -20005;
15:14:34  16  	INVALID_PARAMETER CONSTANT NUMBER := -20006;
15:14:34  17  	INTERNAL_ERROR	  CONSTANT NUMBER := -20007;
15:14:34  18  	CONFLICT_ERROR	  CONSTANT NUMBER := -20008;
15:14:34  19  END APP_EXCEPTION_CODES_V19;
15:14:34  20  .
15:14:34 SQL> /

Package created.

Elapsed: 00:00:00.17
15:14:34 SQL> 
15:14:34 SQL> 
15:14:34 SQL> 
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> -- DDL for package GLOBAL_CONSTANTS
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> 
15:14:34 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_CONSTANTS_V19" AS
15:14:34   2  
15:14:34   3  TRUE  CONSTANT NUMBER := 1;
15:14:34   4  FALSE CONSTANT NUMBER := 0;
15:14:34   5  
15:14:34   6  INFINITY CONSTANT NUMBER := -1;
15:14:34   7  
15:14:34   8  ONE_DAY_INTERVAL	 CONSTANT INTERVAL DAY TO SECOND := INTERVAL '1' DAY;
15:14:34   9  ONE_MONTH_INTERVAL CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' MONTH;
15:14:34  10  ONE_YEAR_INTERVAL   CONSTANT INTERVAL YEAR TO MONTH := INTERVAL '1' YEAR;
15:14:34  11  
15:14:34  12  -- Exception delimeter
15:14:34  13  EXCEPTION_DELIMETER CONSTANT VARCHAR2(1) := chr(10);
15:14:34  14  
15:14:34  15  -- Number of days when core should return all money
15:14:34  16  OFFER_START_GRACE_PERIOD CONSTANT NUMBER := 7;
15:14:34  17  
15:14:34  18  -- NUmber of days when core should not return any money
15:14:34  19  OFFER_END_GRACE_PERIOD   CONSTANT NUMBER := 7;
15:14:34  20  
15:14:34  21  -- OFFER CHAIN: is refundable META DATTA RULE
15:14:34  22  OFFER_CHAIN_IS_REFUNDABLE   CONSTANT NUMBER := 1;
15:14:34  23  OFFER_CHAIN_REFUNDABLE_RULE CONSTANT VARCHAR2(10) := 'REFUNDABLE';
15:14:34  24  
15:14:34  25  -- OFFER CHAIN REFUNDABLE RULES
15:14:34  26  OFFER_CHAIN_FULL_REFUND	  CONSTANT VARCHAR2(22) := 'FULL_REFUND_DAYS_LIMIT';
15:14:34  27  OFFER_CHAIN_PRORATED_REFUND CONSTANT VARCHAR2(26) := 'PRORATED_REFUND_DAYS_LIMIT';
15:14:34  28  
15:14:34  29  -- norlov: name of the OC eligibility
15:14:34  30  GIFT_CERTIFICATE_REQUIRED CONSTANT VARCHAR2(25) := 'gift certificate required';
15:14:34  31  
15:14:34  32  -- norlov: flag for set elibility
15:14:34  33  ELIGIBILITY_FLAG_SET CONSTANT VARCHAR2(1) := '1';
15:14:34  34  
15:14:34  35  -- norlov: name of OC metadata
15:14:34  36  REDEMPTION_OC_ID CONSTANT VARCHAR2(25) := 'redemption offer chain id';
15:14:34  37  
15:14:34  38  -- norlov: name of the OC eligibility
15:14:34  39  MAX_CONCURRENT_SUBS CONSTANT VARCHAR2(19) := 'MAX_CONCURRENT_SUBS';
15:14:34  40  
15:14:34  41  -- norlov: 'unlimited' value for max concurrent subscription number
15:14:34  42  MAX_CONCURRENT_SUBS_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
15:14:34  43  
15:14:34  44  -- 'unlimited' value for max concurrent products number
15:14:34  45  MAX_CONSURRENT_PRD_UNLIM CONSTANT VARCHAR2(9) := 'UNLIMITED';
15:14:34  46  
15:14:34  47  -- UPGRADABLE_OFFER_CHAIN_ID
15:14:34  48  OCMD_UPGRADABLE_OFFER_CHAIN_ID CONSTANT VARCHAR(25) := 'UPGRADABLE_OFFER_CHAIN_ID';
15:14:34  49  
15:14:34  50  -- Max number of records that should be return
15:14:34  51  MAX_RETURN_COUNT NUMBER := 1000;
15:14:34  52  
15:14:34  53  -- Share end date for non-group-pass group accounts
15:14:34  54  MAX_DATE CONSTANT DATE := TO_DATE('12/31/9999', 'MM/DD/YYYY');
15:14:34  55  
15:14:34  56  END GLOBAL_CONSTANTS_V19;
15:14:34  57  .
15:14:34 SQL> /

Package created.

Elapsed: 00:00:00.01
15:14:34 SQL> 
15:14:34 SQL> 
15:14:34 SQL> 
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> -- DDL for package GLOBAL_ENUMS
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> 
15:14:34 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_ENUMS_V19" AS
15:14:34   2  
15:14:34   3  ----
15:14:34   4  -- CREDIT CARD TYPES
15:14:34   5  
15:14:34   6  CREDIT_CARD_AMEX	      CONSTANT NUMBER := 1;
15:14:34   7  CREDIT_CARD_VISA	      CONSTANT NUMBER := 2;
15:14:34   8  CREDIT_CARD_MASTER_CARD CONSTANT NUMBER := 3;
15:14:34   9  CREDIT_CARD_DISCOVER    CONSTANT NUMBER := 4;
15:14:34  10  
15:14:34  11  ----
15:14:34  12  -- INSTRUMENT TYPE
15:14:34  13  
15:14:34  14  INSTRUMENT_CREDIT_CARD	   CONSTANT NUMBER := 1;
15:14:34  15  INSTRUMENT_PAYPAL 	   CONSTANT NUMBER := 2;
15:14:34  16  INSTRUMENT_GIFT_CERTIFICATE  CONSTANT NUMBER := 3;
15:14:34  17  INSTRUMENT_ZCI_INSTRUMENT    CONSTANT NUMBER := 4;
15:14:34  18  
15:14:34  19  ----
15:14:34  20  -- SYSTEM ACTIVITY REASONS
15:14:34  21  
15:14:34  22  SAC_SYSTEM_APPLIED_RULE CONSTANT NUMBER := 1;
15:14:34  23  
15:14:34  24  ----
15:14:34  25  -- GIFT CERTIFICATES TYPE
15:14:34  26  
15:14:34  27  GSTYPE_GSTYPE1 CONSTANT NUMBER := 1;
15:14:34  28  GSTYPE_GSTYPE2 CONSTANT NUMBER := 2;
15:14:34  29  
15:14:34  30  ----
15:14:34  31  -- SYSTEM CATEGORY
15:14:34  32  
15:14:34  33  SYSTEM_CATEGORY_LIVE CONSTANT NUMBER := 1;
15:14:34  34  SYSTEM_CATEGORY_TEST CONSTANT NUMBER := 2;
15:14:34  35  
15:14:34  36  ----
15:14:34  37  -- OFFER_RECURRENCES
15:14:34  38  
15:14:34  39  OFFER_REC_INFINITY CONSTANT NUMBER := -1;
15:14:34  40  
15:14:34  41  ----
15:14:34  42  -- TAX JURISDICTION LEVELS
15:14:34  43  -- We need only international right now
15:14:34  44  
15:14:34  45  JURIS_INTERNATIONAL CONSTANT NUMBER := 5;
15:14:34  46  
15:14:34  47  ----
15:14:34  48  -- TAX TYPES
15:14:34  49  
15:14:34  50  TAX_TYPE_SALES CONSTANT NUMBER := 1;
15:14:34  51  TAX_TYPE_VAT   CONSTANT NUMBER := 2;
15:14:34  52  
15:14:34  53  END GLOBAL_ENUMS_V19;
15:14:34  54  .
15:14:34 SQL> /

Package created.

Elapsed: 00:00:00.01
15:14:34 SQL> 
15:14:34 SQL> 
15:14:34 SQL> 
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> -- DDL for package GLOBAL_STATUSES
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> 
15:14:34 SQL> CREATE OR REPLACE PACKAGE "GLOBAL_STATUSES_V19" AS
15:14:34   2  
15:14:34   3  REAL_TIME_CANCEL_REASON CONSTANT NUMBER := 41;
15:14:34   4  
15:14:34   5  ----
15:14:34   6  -- ACCOUNT STATUSES
15:14:34   7  
15:14:34   8  ACCOUNT_ACTIVE   CONSTANT NUMBER := 1;
15:14:34   9  ACCOUNT_FROZEN   CONSTANT NUMBER := 2;
15:14:34  10  ACCOUNT_DISABLED CONSTANT NUMBER := 3;
15:14:34  11  
15:14:34  12  ----
15:14:34  13  -- SUBSCRIPTION STATUSES
15:14:34  14  
15:14:34  15  SUBSCRIPTION_ACTIVE	   CONSTANT NUMBER := 1;
15:14:34  16  SUBSCRIPTION_SUSPENDED	   CONSTANT NUMBER := 2;
15:14:34  17  SUBSCRIPTION_CANCELED	   CONSTANT NUMBER := 3;
15:14:34  18  SUBSCRIPTION_CLOSED	   CONSTANT NUMBER := 4;
15:14:34  19  SUBSCRIPTION_FALSE_START	   CONSTANT NUMBER := 5;
15:14:34  20  SUBSCRIPTION_IN_GRACE_PERIOD CONSTANT NUMBER := 6;
15:14:34  21  
15:14:34  22  ----
15:14:34  23  -- CREDIT_CARD STATUSES
15:14:34  24  
15:14:34  25  CREDIT_CARD_ACTIVE   CONSTANT NUMBER := 1;
15:14:34  26  CREDIT_CARD_INVALID  CONSTANT NUMBER := 2; -- WAS INACTIVE
15:14:34  27  CREDIT_CARD_DISABLED CONSTANT NUMBER := 3; -- WAS FROZEN
15:14:34  28  CREDIT_CARD_EXPIRED  CONSTANT NUMBER := 4;
15:14:34  29  
15:14:34  30  ----
15:14:34  31  -- PAYPAL STATUSES
15:14:34  32  
15:14:34  33  PAYPAL_ACTIVE   CONSTANT NUMBER := 1;
15:14:34  34  PAYPAL_INACTIVE CONSTANT NUMBER := 2;
15:14:34  35  PAYPAL_FROZEN   CONSTANT NUMBER := 3;
15:14:34  36  
15:14:34  37  ----
15:14:34  38  -- GIFT_CERTIFICATE STATUSES
15:14:34  39  
15:14:34  40  GIFT_CERTIFICATE_ACTIVE	 CONSTANT NUMBER := 1;
15:14:34  41  GIFT_CERTIFICATE_FINALIZED CONSTANT NUMBER := 2;
15:14:34  42  GIFT_CERTIFICATE_REFUNDED  CONSTANT NUMBER := 3;
15:14:34  43  
15:14:34  44  ----
15:14:34  45  -- TRANSACTION STATUSES
15:14:34  46  
15:14:34  47  TRANSACTION_PENDING	     CONSTANT NUMBER := 1;
15:14:34  48  TRANSACTION_CLOSED	     CONSTANT NUMBER := 2;
15:14:34  49  TRANSACTION_CHARGEBACK	     CONSTANT NUMBER := 3;
15:14:34  50  TRANSACTION_PREPARE	     CONSTANT NUMBER := 1;
15:14:34  51  TRANSACTION_DECLINED	     CONSTANT NUMBER := 7;
15:14:34  52  
15:14:34  53  ----
15:14:34  54  -- TRANSACTION_ATTEMPT_STATUS
15:14:34  55  TRANS_ATTEMPT_IN_PROGRESS CONSTANT NUMBER := 1;
15:14:34  56  TRANS_ATTEMPT_SUCCESS	CONSTANT NUMBER := 2;
15:14:34  57  TRANS_ATTEMPT_FAILED	CONSTANT NUMBER := 3;
15:14:34  58  
15:14:34  59  ----
15:14:34  60  -- PRODUCT STATUSES
15:14:34  61  
15:14:34  62  PRODUCT_ACTIVE	CONSTANT NUMBER := 1;
15:14:34  63  PRODUCT_INACTIVE	CONSTANT NUMBER := 2;
15:14:34  64  PRODUCT_DISABLED	CONSTANT NUMBER := 3;
15:14:34  65  
15:14:34  66  ----
15:14:34  67  -- LICENSE STATUSES
15:14:34  68  
15:14:34  69  LICENSE_CLOSED CONSTANT NUMBER := 1;
15:14:34  70  LICENSE_ACTIVE CONSTANT NUMBER := 2;
15:14:34  71  LICENSE_IN_GRACE_PERIOD CONSTANT NUMBER := 4;
15:14:34  72  
15:14:34  73  ----
15:14:34  74  -- INVOICE STATUSES
15:14:34  75  
15:14:34  76  INVOICE_OPEN		  CONSTANT NUMBER := 1; -- IN SPECS INVOICE_PENDING
15:14:34  77  INVOICE_CLOSED		  CONSTANT NUMBER := 3; -- IN SPECS INVOICE_PAID
15:14:34  78  
15:14:34  79  
15:14:34  80  ----
15:14:34  81  -- CHARGE STATUSES
15:14:34  82  
15:14:34  83  CHARGE_OPENED    CONSTANT NUMBER := 1;
15:14:34  84  CHARGE_PROCESSED CONSTANT NUMBER := 2;
15:14:34  85  CHARGE_CANCELED  CONSTANT NUMBER := 3;
15:14:34  86  
15:14:34  87  ----
15:14:34  88  -- OFFER STATUSES
15:14:34  89  
15:14:34  90  OFFER_ACTIVE   CONSTANT NUMBER := 1;
15:14:34  91  OFFER_INACTIVE CONSTANT NUMBER := 2;
15:14:34  92  OFFER_DISABLED CONSTANT NUMBER := 3;
15:14:34  93  
15:14:34  94  ----
15:14:34  95  -- OFFER_CHAIN STATUSES
15:14:34  96  
15:14:34  97  OFFER_CHAIN_ACTIVE   CONSTANT NUMBER := 1;
15:14:34  98  OFFER_CHAIN_INACTIVE CONSTANT NUMBER := 2;
15:14:34  99  OFFER_CHAIN_DISABLED CONSTANT NUMBER := 3;
15:14:34 100  
15:14:34 101  ----
15:14:34 102  -- ZERO_CHARGE_INSTRUMENT STATUSES
15:14:34 103  
15:14:34 104  ZERO_CHARGE_INSTR_ACTIVE CONSTANT NUMBER := 1;
15:14:34 105  ZERO_CHARGE_INSTR_DISABLED CONSTANT NUMBER := 2;
15:14:34 106  
15:14:34 107  ----
15:14:34 108  -- SUBSCRIPTION_CANCELATION_REASONS
15:14:34 109  
15:14:34 110  SUBSCR_CANC_REASON_ACTIVE CONSTANT NUMBER := 1;
15:14:34 111  SUBSCR_CANC_REASON_INACTIVE CONSTANT NUMBER := 2;
15:14:34 112  SUBSCR_CANC_REASON_INT_ONLY CONSTANT NUMBER := 3;
15:14:34 113  
15:14:34 114  GROUP_ACC_IP_RNG_ACTIVE CONSTANT NUMBER := 1;
15:14:34 115  GROUP_ACC_IP_RNG_INACTIVE CONSTANT NUMBER := 2;
15:14:34 116  
15:14:34 117  GROUP_ACC_EMAIL_DOMAIN_ACT CONSTANT NUMBER := 1;
15:14:34 118  GROUP_ACC_EMAIL_DOMAIN_INACT CONSTANT NUMBER := 0;
15:14:34 119  
15:14:34 120  END GLOBAL_STATUSES_V19;
15:14:34 121  .
15:14:34 SQL> /

Package created.

Elapsed: 00:00:00.00
15:14:34 SQL> 
15:14:34 SQL> 
15:14:34 SQL> 
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> -- DDL for package NOTIFICATION_STATUSES
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> 
15:14:34 SQL> CREATE OR REPLACE PACKAGE "NOTIFICATION_STATUSES_V19" AS
15:14:34   2  
15:14:34   3  ----
15:14:34   4  -- NOTIFICATION STATUSES
15:14:34   5  
15:14:34   6  NOTIFICATION_SENT    CONSTANT NUMBER := 1;
15:14:34   7  NOTIFICATION_PENDING CONSTANT NUMBER := 2;
15:14:34   8  NOTIFICATION_FAILED  CONSTANT NUMBER := 3;
15:14:34   9  
15:14:34  10  END NOTIFICATION_STATUSES_V19;
15:14:34  11  .
15:14:34 SQL> /

Package created.

Elapsed: 00:00:00.00
15:14:34 SQL> 
15:14:34 SQL> 
15:14:34 SQL> 
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> -- DDL for package PROCS_COMMON
15:14:34 SQL> --------------------------------------------------------------------------------
15:14:34 SQL> 
15:14:34 SQL> CREATE OR REPLACE PACKAGE "PROCS_COMMON_V19" AS
15:14:34   2  
15:14:34   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
15:14:34   4  	in_duration IN VARCHAR2,
15:14:34   5  	in_start_date IN DATE
15:14:34   6  ) RETURN DATE;
15:14:34   7  
15:14:34   8  PROCEDURE ISO8601DURATION_TO_INTERVALS(
15:14:34   9  /*
15:14:34  10  Throws exceptions:
15:14:34  11  APP_EXCEPTION_CODES_V19.INTERNAL_ERROR
15:14:34  12  APP_EXCEPTION_CODES_V19.UNKNOWN_ERROR
15:14:34  13  */
15:14:34  14  	in_duration IN	VARCHAR2,
15:14:34  15  	out_years   OUT NUMBER,
15:14:34  16  	out_months  OUT NUMBER,
15:14:34  17  	out_days    OUT NUMBER
15:14:34  18  );
15:14:34  19  
15:14:34  20  FUNCTION NORMALIZE_DATE(
15:14:34  21   in_date IN DATE
15:14:34  22  ) RETURN DATE;
15:14:34  23  
15:14:34  24  FUNCTION GENERATE_EXCEPTION_MESSAGE(
15:14:34  25  	in_sproc_name	    IN VARCHAR2,
15:14:34  26  	in_error_message    IN VARCHAR2,
15:14:34  27  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
15:14:34  28  ) RETURN VARCHAR2;
15:14:34  29  
15:14:34  30  PROCEDURE THROW_EXCEPTION(
15:14:34  31  	in_exception_code   IN NUMBER,
15:14:34  32  	in_sproc_name	    IN VARCHAR2,
15:14:34  33  	in_error_message    IN VARCHAR2,
15:14:34  34  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
15:14:34  35  );
15:14:34  36  
15:14:34  37  FUNCTION ROUND_10_6_TO_10_2 (
15:14:34  38  	in_number NUMBER
15:14:34  39  ) RETURN NUMBER;
15:14:34  40  
15:14:34  41  END PROCS_COMMON_V19;
15:14:34  42  .
15:14:34 SQL> /

Package created.

Elapsed: 00:00:00.00
15:14:34 SQL> 
15:14:34 SQL> CREATE OR REPLACE PACKAGE BODY "PROCS_COMMON_V19" AS
15:14:34   2  
15:14:34   3  FUNCTION ADD_ISO8601DURATION_TO_DATE(
15:14:34   4  	in_duration IN VARCHAR2,
15:14:34   5  	in_start_date IN DATE
15:14:34   6  ) RETURN DATE AS
15:14:34   7  	var_end_date DATE;
15:14:34   8  	var_years NUMBER;
15:14:34   9  	var_months NUMBER;
15:14:34  10  	var_days NUMBER;
15:14:34  11  	var_ym_interval INTERVAL YEAR TO MONTH;
15:14:34  12  	var_ds_interval INTERVAL DAY(3) TO SECOND;
15:14:34  13  BEGIN
15:14:34  14  	PROCS_COMMON_V19.ISO8601DURATION_TO_INTERVALS(in_duration, var_years, var_months, var_days);
15:14:34  15  	var_ym_interval := var_years || '-' || var_months;
15:14:34  16  	var_ds_interval := var_days || ' 0:0:0';
15:14:34  17  
15:14:34  18  	var_end_date := in_start_date + var_ym_interval + var_ds_interval;
15:14:34  19  	RETURN var_end_date;
15:14:34  20  END ADD_ISO8601DURATION_TO_DATE;
15:14:34  21  
15:14:34  22  PROCEDURE ISO8601DURATION_TO_INTERVALS(
15:14:34  23  /*
15:14:34  24  Throws exceptions:
15:14:34  25  APP_EXCEPTION_CODES_V19.INTERNAL_ERROR
15:14:34  26  APP_EXCEPTION_CODES_V19.UNKNOWN_ERROR
15:14:34  27  */
15:14:34  28  	in_duration IN	VARCHAR2,
15:14:34  29  	out_years   OUT NUMBER,
15:14:34  30  	out_months  OUT NUMBER,
15:14:34  31  	out_days    OUT NUMBER
15:14:34  32  ) AS
15:14:34  33  SPROC_NAME	  CONSTANT VARCHAR2(28) := 'ISO8601DURATION_TO_INTERVALS';
15:14:34  34  -- VARIABLES
15:14:34  35  var_checking_status NUMBER;
15:14:34  36  temp_duration	  VARCHAR2(29);
15:14:34  37  var_is_t_founded	  NUMBER;
15:14:34  38  
15:14:34  39  var_date_duration VARCHAR2(29);
15:14:34  40  var_time_duration VARCHAR2(29);
15:14:34  41  
15:14:34  42  var_years   VARCHAR2(4);
15:14:34  43  var_monthes VARCHAR2(4);
15:14:34  44  var_days	  VARCHAR2(4);
15:14:34  45  var_hours   VARCHAR2(4);
15:14:34  46  var_minutes VARCHAR2(4);
15:14:34  47  var_seconds VARCHAR2(4);
15:14:34  48  
15:14:34  49  -- EXCEPTIONS
15:14:34  50  BAD_ISO_FORMAT EXCEPTION;
15:14:34  51  BEGIN
15:14:34  52  
15:14:34  53  	var_years   := '0';
15:14:34  54  	var_monthes := '0';
15:14:34  55  	var_days    := '0';
15:14:34  56  	var_hours   := '0';
15:14:34  57  	var_minutes := '0';
15:14:34  58  	var_seconds := '0';
15:14:34  59  
15:14:34  60  	SELECT
15:14:34  61  	  COUNT(*) into var_checking_status
15:14:34  62  	FROM
15:14:34  63  	  DUAL
15:14:34  64  	WHERE
15:14:34  65  	  REGEXP_LIKE(in_duration, '^P')
15:14:34  66  	  AND ROWNUM <= 1;
15:14:34  67  
15:14:34  68  	IF var_checking_status = 0 THEN
15:14:34  69  	  RAISE BAD_ISO_FORMAT;
15:14:34  70  	END IF;
15:14:34  71  
15:14:34  72  	SELECT
15:14:34  73  	  SUBSTR(in_duration, 2) into temp_duration
15:14:34  74  	FROM DUAL
15:14:34  75  	WHERE ROWNUM <= 1;
15:14:34  76  
15:14:34  77  	var_is_t_founded := INSTR(temp_duration, 'T');
15:14:34  78  
15:14:34  79  	IF var_is_t_founded > 1 OR var_is_t_founded = 0 THEN
15:14:34  80  	  -- RESOLVING DATE FROM ISO STRING
15:14:34  81  	  IF var_is_t_founded != 0 THEN
15:14:34  82  	    var_date_duration := SUBSTR(temp_duration, 1, var_is_t_founded - 1);
15:14:34  83  	  ELSE
15:14:34  84  	    var_date_duration := temp_duration;
15:14:34  85  	  END IF;
15:14:34  86  
15:14:34  87  	  SELECT
15:14:34  88  	    COUNT(*) into var_checking_status
15:14:34  89  	  FROM
15:14:34  90  	    DUAL
15:14:34  91  	  WHERE
15:14:34  92  	    REGEXP_LIKE(var_date_duration, '^(\d{1,3}Y){0,1}(\d{1,3}M){0,1}(\d{1,3}D){0,1}$')
15:14:34  93  	    AND ROWNUM <= 1;
15:14:34  94  
15:14:34  95  	  IF var_checking_status = 0 THEN
15:14:34  96  	    RAISE BAD_ISO_FORMAT;
15:14:34  97  	  END IF;
15:14:34  98  
15:14:34  99  	  IF INSTR(var_date_duration, 'Y') != 0 THEN
15:14:34 100  	    SELECT
15:14:34 101  	      REGEXP_SUBSTR(var_date_duration, '\d+Y') into var_years
15:14:34 102  	    FROM
15:14:34 103  	      DUAL;
15:14:34 104  	    var_years := SUBSTR(var_years, 1, LENGTH(var_years) - 1);
15:14:34 105  	  END IF;
15:14:34 106  
15:14:34 107  	  IF INSTR(var_date_duration, 'M') != 0 THEN
15:14:34 108  	    SELECT
15:14:34 109  	      REGEXP_SUBSTR(var_date_duration, '\d+M') into var_monthes
15:14:34 110  	    FROM
15:14:34 111  	      DUAL;
15:14:34 112  	    var_monthes := SUBSTR(var_monthes, 1, LENGTH(var_monthes) - 1);
15:14:34 113  	  END IF;
15:14:34 114  
15:14:34 115  	  IF INSTR(var_date_duration, 'D') != 0 THEN
15:14:34 116  	    SELECT
15:14:34 117  	      REGEXP_SUBSTR(var_date_duration, '\d+D') into var_days
15:14:34 118  	    FROM
15:14:34 119  	      DUAL;
15:14:34 120  	    var_days := SUBSTR(var_days, 1, LENGTH(var_days) - 1);
15:14:34 121  	  END IF;
15:14:34 122  	END IF;
15:14:34 123  
15:14:34 124  	IF (var_is_t_founded > 0) THEN
15:14:34 125  	  -- RESOLVING TIME FROM ISO STRING
15:14:34 126  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded + 1);
15:14:34 127  
15:14:34 128  	  SELECT
15:14:34 129  	    COUNT(*) into var_checking_status
15:14:34 130  	  FROM
15:14:34 131  	    DUAL
15:14:34 132  	  WHERE
15:14:34 133  	    REGEXP_LIKE(var_time_duration, '^(\d{1,3}H){0,1}(\d{1,3}M){0,1}(\d{1,3}S){0,1}$')
15:14:34 134  	    AND ROWNUM <= 1;
15:14:34 135  
15:14:34 136  	  IF var_checking_status = 0 THEN
15:14:34 137  	    RAISE BAD_ISO_FORMAT;
15:14:34 138  	  END IF;
15:14:34 139  
15:14:34 140  	  IF INSTR(var_time_duration, 'H') != 0 THEN
15:14:34 141  	    SELECT
15:14:34 142  	      REGEXP_SUBSTR(var_time_duration, '\d+H') into var_hours
15:14:34 143  	    FROM
15:14:34 144  	      DUAL;
15:14:34 145  	    var_hours := SUBSTR(var_hours, 1, LENGTH(var_hours) - 1);
15:14:34 146  	  END IF;
15:14:34 147  
15:14:34 148  	  IF INSTR(var_time_duration, 'M') != 0 THEN
15:14:34 149  	    SELECT
15:14:34 150  	      REGEXP_SUBSTR(var_time_duration, '\d+M') into var_minutes
15:14:34 151  	    FROM
15:14:34 152  	      DUAL;
15:14:34 153  	    var_minutes := SUBSTR(var_minutes, 1, LENGTH(var_minutes) - 1);
15:14:34 154  	  END IF;
15:14:34 155  
15:14:34 156  	  IF INSTR(var_time_duration, 'S') != 0 THEN
15:14:34 157  	    SELECT
15:14:34 158  	      REGEXP_SUBSTR(var_time_duration, '\d+S') into var_seconds
15:14:34 159  	    FROM
15:14:34 160  	      DUAL;
15:14:34 161  	    var_seconds := SUBSTR(var_seconds, 1, LENGTH(var_seconds) - 1);
15:14:34 162  	  END IF;
15:14:34 163  
15:14:34 164  	  var_time_duration := SUBSTR(temp_duration, var_is_t_founded);
15:14:34 165  	END IF;
15:14:34 166  
15:14:34 167  	out_years  := var_years;
15:14:34 168  	out_months := var_monthes;
15:14:34 169  	out_days   := var_days;
15:14:34 170  
15:14:34 171  EXCEPTION
15:14:34 172  WHEN BAD_ISO_FORMAT THEN
15:14:34 173  	PROCS_COMMON_V19.THROW_EXCEPTION(APP_EXCEPTION_CODES_V19.INTERNAL_ERROR,
15:14:34 174  	  SPROC_NAME, 'Bad date format');
15:14:34 175  WHEN OTHERS THEN
15:14:34 176  	PROCS_COMMON_V19.THROW_EXCEPTION(APP_EXCEPTION_CODES_V19.UNKNOWN_ERROR,
15:14:34 177  	  SPROC_NAME, 'Unknown error', SQLERRM);
15:14:34 178  END ISO8601DURATION_TO_INTERVALS;
15:14:34 179  
15:14:34 180  /******************************************************************************/
15:14:34 181  
15:14:34 182  FUNCTION NORMALIZE_DATE(
15:14:34 183   in_date IN DATE
15:14:34 184  ) RETURN DATE AS
15:14:34 185  -- VARIABLES
15:14:34 186  var_normalized_date DATE;
15:14:34 187  BEGIN
15:14:34 188  	var_normalized_date := TRUNC(in_date);
15:14:34 189  	RETURN var_normalized_date;
15:14:34 190  END NORMALIZE_DATE;
15:14:34 191  
15:14:34 192  /******************************************************************************/
15:14:34 193  
15:14:34 194  FUNCTION GENERATE_EXCEPTION_MESSAGE(
15:14:34 195  	in_sproc_name	    IN VARCHAR2,
15:14:34 196  	in_error_message    IN VARCHAR2,
15:14:34 197  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
15:14:34 198  ) RETURN VARCHAR2 AS
15:14:34 199  BEGIN
15:14:34 200  	IF in_error_stacktrace IS NOT NULL THEN
15:14:34 201  	  RETURN in_sproc_name || ': ' || in_error_message || ': ' || GLOBAL_CONSTANTS_V19.EXCEPTION_DELIMETER || in_error_stacktrace;
15:14:34 202  	END IF;
15:14:34 203  	RETURN
15:14:34 204  	  in_sproc_name || ': ' || in_error_message;
15:14:34 205  END GENERATE_EXCEPTION_MESSAGE;
15:14:34 206  
15:14:34 207  /******************************************************************************/
15:14:34 208  
15:14:34 209  PROCEDURE THROW_EXCEPTION(
15:14:34 210  	in_exception_code   IN NUMBER,
15:14:34 211  	in_sproc_name	    IN VARCHAR2,
15:14:34 212  	in_error_message    IN VARCHAR2,
15:14:34 213  	in_error_stacktrace IN VARCHAR2 DEFAULT NULL
15:14:34 214  ) AS
15:14:34 215  BEGIN
15:14:34 216  	RAISE_APPLICATION_ERROR(in_exception_code, GENERATE_EXCEPTION_MESSAGE(in_sproc_name, in_error_message, in_error_stacktrace));
15:14:34 217  END;
15:14:34 218  
15:14:34 219  FUNCTION ROUND_10_6_TO_10_2 (
15:14:34 220  	in_number NUMBER
15:14:34 221  ) RETURN NUMBER AS
15:14:34 222  v_result NUMBER(10,2);
15:14:34 223  BEGIN
15:14:34 224  	v_result := in_number;
15:14:34 225  	return v_result;
15:14:34 226  END;
15:14:34 227  
15:14:34 228  END PROCS_COMMON_V19;
15:14:34 229  .
15:14:34 SQL> /

Package body created.

Elapsed: 00:00:00.02
15:14:34 SQL> 
15:14:34 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V19 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.03
15:14:35 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V19 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:14:35 SQL> grant execute on CORE_OWNER.APP_EXCEPTION_CODES_V19 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
15:14:35 SQL> 
15:14:35 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V19 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
15:14:35 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V19 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:14:35 SQL> grant execute on CORE_OWNER.GLOBAL_ENUMS_V19 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
15:14:35 SQL> 
15:14:35 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V19 to core_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.00
15:14:35 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V19 to ops_owner;

Grant succeeded.

Elapsed: 00:00:00.00
15:14:35 SQL> grant execute on CORE_OWNER.GLOBAL_STATUSES_V19 to ops_hist_owner;

Grant succeeded.

Elapsed: 00:00:00.01
15:14:35 SQL> commit;

Commit complete.

Elapsed: 00:00:00.00
15:14:35 SQL> spool off;


Subject: Nomad upgrade completed successfully: ECST@rac01.stg.ewr1.nytimes.com
From: Nomad for Oracle <nytd_oracledba@nytimes.com>
To: nytd_ecommerce@nytimes.com
Cc: nytd_oracledba@nytimes.com

Nomad upgrade operation completed successfully without errors. 
        
        Details
        -------
        DB Hostname: rac01.stg.ewr1.nytimes.com
        DB Role: PRIMARY
        SID: ECST
        Schema: core_owner
        Migration: 41.0-release-1.13.2-1-CORE-common
        SVN Revision: 12048
        Duration: 0 sec.
        DBA: sbao
        Service Request: https://jira.em.nytimes.com/browse/ORA-644