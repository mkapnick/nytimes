WHENEVER SQLERROR EXIT ROLLBACK;

variable is_current_version_fine NUMBER;
variable change_version NUMBER;
variable bad_current_version VARCHAR2(1024);

exec :change_version := 133;
exec PROCS_SYSTEM_V16.CHECK_VERSION(:change_version - 1, :is_current_version_fine);
exec :bad_current_version := 'Current version is bad, please update your version to '||(:change_version-1);

BEGIN
  IF (:is_current_version_fine != 0) THEN
    RAISE_APPLICATION_ERROR(-20001, :bad_current_version);
  END IF;
END;
/

ALTER TRIGGER TR_LICENSE_AUD DISABLE;

ALTER TABLE LICENSE ADD (
  GRACE_START_DATE DATE NULL,
  GRACE_END_DATE DATE NULL
);

ALTER TRIGGER TR_LICENSE_AUD ENABLE;

CREATE INDEX LIC_GRACE_END_DATE_IDX ON LICENSE(GRACE_END_DATE) ONLINE TABLESPACE CORE_IDX;
CREATE INDEX LIC_GRACE_START_DATE_IDX ON LICENSE(GRACE_START_DATE) ONLINE TABLESPACE CORE_IDX;

INSERT INTO CORE_OWNER.LICENSE_STATUS (ID, VALUE, DESCRIPTION) VALUES (4, 'IN_GRACE_PERIOD', 'license is in a grace period');
INSERT INTO CORE_OWNER.SUBSCRIPTION_STATUS (ID, VALUE, DESCRIPTION) VALUES (6, 'IN_GRACE_PERIOD', 'subscription is in a grace period');

COMMIT;

EXEC PROCS_SYSTEM_V16.INCREMENT_VERSION();

