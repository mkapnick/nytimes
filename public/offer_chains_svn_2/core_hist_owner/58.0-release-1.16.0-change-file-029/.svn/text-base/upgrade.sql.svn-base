WHENEVER SQLERROR EXIT ROLLBACK;

variable is_current_version_fine NUMBER;
variable change_version NUMBER;
variable bad_current_version VARCHAR2(1024);

exec :change_version := 29;
exec PROCS_SYSTEM_V17.CHECK_VERSION(:change_version - 1, :is_current_version_fine);
exec :bad_current_version := 'Current version is bad, please update your version to '||(:change_version-1);

BEGIN
  IF (:is_current_version_fine != 0) THEN
    RAISE_APPLICATION_ERROR(-20001, :bad_current_version);
  END IF;
END;
/

-- This should be done a couple of days after the release
DROP TABLE AMAZON_APPSTORE_HISTORY CASCADE CONSTRAINTS PURGE;
DROP SEQUENCE AAS_HISTORY_ID_SEQ;

CREATE TABLE CORE_HIST_OWNER.AMAZON_APPSTORE_RECEIPT_HIST (
  ID NUMBER NOT NULL,
  AASR_ID NUMBER NOT NULL,
  SUBSCRIPTION_ID NUMBER NOT NULL,
  USER_ID VARCHAR2(4000) NOT NULL,
  ITEM_TYPE VARCHAR2(50) NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE,
  SKU VARCHAR2(4000) NOT NULL,
  PURCHASE_TOKEN VARCHAR2(4000) NOT NULL,
  AASR_CREATE_DATE DATE NOT NULL,
  AASR_CREATED_BY VARCHAR2(255) NOT NULL,
  AASR_UPDATE_DATE DATE NOT NULL,
  AASR_UPDATED_BY VARCHAR2(255) NOT NULL,
  LAST_CHECK_DATE DATE,
  CREATE_DATE DATE NOT NULL,
  CREATED_BY VARCHAR2(255) NOT NULL,
  SYSTEM_ACTIVITY_REASON_ID NUMBER NOT NULL,
  CONSTRAINT AASR_HISTORY_PK PRIMARY KEY (ID) USING INDEX TABLESPACE CORE_HIST_IDX
) TABLESPACE CORE_HIST;
CREATE SEQUENCE AASR_HIST_ID_SEQ;
COMMENT ON TABLE CORE_HIST_OWNER.AMAZON_APPSTORE_RECEIPT_HIST  IS 'This is the history table for CORE_OWNER.AMAZON_APPSTORE_RECEIPT';
CREATE INDEX CORE_HIST_OWNER.AMAZON_APPSTORE_RECEIPT_HIST ON CORE_HIST_OWNER.AMAZON_APPSTORE_RECEIPT_HIST (AASR_ID) TABLESPACE CORE_HIST_IDX;


exec PROCS_SYSTEM_V17.INCREMENT_VERSION();
